{"version":3,"file":"mosaic.umd.min.js","sources":["../../src/lib/tooltip/tooltip.component.ts","../../src/lib/tooltip/tooltip.module.ts","../../src/lib/version.ts","../../src/lib/timepicker/timepicker.constants.ts","../../src/lib/select/select.component.ts","../../src/lib/select/select.module.ts","../../src/lib/splitter/splitter.component.ts","../../src/lib/splitter/splitter.module.ts","../../src/lib/toggle/toggle.component.ts","../../src/lib/toggle/toggle.module.ts","../../src/lib/tabs/tab-group.ts","../../src/lib/tabs/tab-nav-bar/tab-nav-bar.ts","../../src/lib/tabs/tabs.module.ts","../../src/lib/tag/tag.component.ts","../../src/lib/tag/tag.module.ts","../../src/lib/textarea/textarea.component.ts","../../src/lib/textarea/textarea.module.ts","../../src/lib/timepicker/timepicker.ts","../../src/lib/timepicker/timepicker.module.ts","../../src/lib/select/select-animations.ts","../../src/lib/tree/tree-selection.ts","../../src/lib/tree/tree.module.ts","../../src/lib/tree/data-source/flat-data-source.ts","../../src/lib/tree/data-source/nested-data-source.ts","../../src/lib/tabs/tab-content.ts","../../src/lib/tabs/tab-label.ts","../../src/lib/tabs/tab.ts","../../src/lib/tabs/tabs-animations.ts","../../src/lib/tabs/tab-body.ts","../../src/lib/tabs/tab-label-wrapper.ts","../../src/lib/tabs/tab-header.ts","../../src/lib/modal/modal.service.ts","../../src/lib/modal/modal.module.ts","../../src/lib/navbar/navbar.component.ts","../../src/lib/navbar/navbar.module.ts","../../src/lib/progress-bar/progress-bar.component.ts","../../src/lib/progress-bar/progress-bar.module.ts","../../src/lib/progress-spinner/progress-spinner.component.ts","../../src/lib/progress-spinner/progress-spinner.module.ts","../../src/lib/radio/radio.component.ts","../../src/lib/radio/radio.module.ts","../../src/lib/tree/node.ts","../../src/lib/tree/padding.ts","../../src/lib/list/list-selection.component.ts","../../src/lib/list/list.component.ts","../../src/lib/list/list.module.ts","../../src/lib/link/link.component.ts","../../src/lib/link/link.module.ts","../../src/lib/modal/modal-control.service.ts","../../src/lib/modal/modal-ref.class.ts","../../src/lib/modal/modal-util.ts","../../src/lib/modal/modal.component.ts","../../src/lib/modal/css-unit.pipe.ts","../../src/lib/form-field/form-field.ts","../../src/lib/form-field/form-field.module.ts","../../src/lib/input/input-value-accessor.ts","../../src/lib/input/stepperUtils.ts","../../src/lib/input/input.ts","../../src/lib/input/input-number-validators.ts","../../src/lib/input/input.module.ts","../../src/lib/layout/content.component.ts","../../src/lib/layout/footer.component.ts","../../src/lib/layout/header.component.ts","../../src/lib/layout/layout.component.ts","../../src/lib/layout/sidebar.component.ts","../../src/lib/layout/layout.module.ts","../../src/lib/button/button.component.ts","../../src/lib/button/button.module.ts","../../src/lib/card/card.component.ts","../../src/lib/card/card.module.ts","../../src/lib/checkbox/checkbox-config.ts","../../src/lib/checkbox/checkbox.ts","../../src/lib/checkbox/checkbox-required-validator.ts","../../src/lib/checkbox/checkbox-module.ts","../../src/lib/divider/divider.component.ts","../../src/lib/divider/divider.module.ts","../../src/lib/dropdown/dropdown-content.ts","../../src/lib/dropdown/dropdown-panel.ts","../../src/lib/dropdown/dropdown-item.ts","../../src/lib/dropdown/dropdown-animations.ts","../../src/lib/dropdown/dropdown.component.ts","../../src/lib/dropdown/dropdown-trigger.ts","../../src/lib/dropdown/dropdown.module.ts","../../src/lib/form-field/cleaner.ts","../../src/lib/form-field/form-field-control.ts","../../src/lib/form-field/form-field-number-control.ts","../../src/lib/form-field/hint.ts","../../src/lib/form-field/prefix.ts","../../src/lib/form-field/stepper.ts","../../src/lib/form-field/suffix.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/utils/utils.ts","../../src/lib/core/common-behaviors/common-module.ts","../../src/lib/core/common-behaviors/disabled.ts","../../src/lib/core/common-behaviors/color.ts","../../src/lib/core/common-behaviors/tabindex.ts","../../src/lib/core/common-behaviors/error-state.ts","../../src/lib/core/option/option.ts","../../src/lib/core/overlay/overlay-position-map.ts","../../src/lib/dropdown/dropdown-errors.ts","../../src/lib/form-field/form-field-errors.ts","../../src/lib/input/input-errors.ts","../../src/lib/select/select-errors.ts","../../src/lib/core/line/line.ts","../../src/lib/core/error/error-options.ts","../../src/lib/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../src/lib/core/selection/index.ts","../../src/lib/core/services/measure-scrollbar.service.ts","../../src/lib/core/option/optgroup.ts","../../src/lib/core/option/index.ts","../../src/lib/core/label/label-options.ts","../../src/lib/core/animation/fade-animations.ts","../../src/lib/icon/icon.component.ts","../../src/lib/icon/icon.module.ts"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    TemplateRef,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport {\n    ConnectedOverlayPositionChange,\n    ConnectionPositionPair,\n    Overlay,\n    OverlayRef,\n    ScrollDispatcher,\n    IScrollStrategy,\n    FlexibleConnectedPositionStrategy,\n    IOverlayConnectionPosition,\n    IOriginConnectionPosition,\n    HorizontalConnectionPos,\n    VerticalConnectionPos\n} from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\nimport {\n    fadeAnimation,\n    DEFAULT_4_POSITIONS,\n    POSITION_MAP\n} from '@ptsecurity/mosaic/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\n\n@Component({\n    selector: 'mc-tooltip',\n    exportAs: 'mcTooltip',\n    animations: [ fadeAnimation ],\n    templateUrl: './tooltip.component.html',\n    preserveWhitespaces: false,\n    styleUrls: ['./tooltip.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '(body:click)': 'this._handleBodyInteraction()'\n    }\n})\n\nexport class McTooltipComponent {\n    _prefix = 'mc-tooltip_placement';\n    _positions: ConnectionPositionPair[] = [ ...DEFAULT_4_POSITIONS ];\n    _classMap = {};\n    _placement = 'top';\n    _trigger = 'hover';\n    isTitleString: boolean;\n    visibleSource = new BehaviorSubject<boolean>(false);\n    $visible: Observable<boolean> = this.visibleSource.asObservable();\n    _title: string | TemplateRef<void>;\n    showTId: number;\n    hideTId: number;\n    availablePositions: any;\n\n    @Output() mcVisibleChange: EventEmitter<boolean> = new EventEmitter();\n\n    @Input() mcMouseEnterDelay = 400;\n\n    @Input() mcMouseLeaveDelay = 0;\n\n    get mcTitle(): string | TemplateRef<void> {\n        return this._title;\n    }\n\n    get mcVisible(): boolean {\n        return this.visibleSource.value;\n    }\n\n    get mcTrigger(): string {\n        return this._trigger;\n    }\n\n    get mcPlacement(): string {\n        return this._placement;\n    }\n\n    @Input()\n    set mcTitle(value: string | TemplateRef<void>) {\n        this.isTitleString = !(value instanceof TemplateRef);\n\n        if (this.isTitleString) {\n            this._title = value;\n        }\n    }\n    @Input()\n    set mcVisible(value: boolean) {\n        const visible = coerceBooleanProperty(value);\n        if (this.visibleSource.value !== visible) {\n            this.visibleSource.next(visible);\n            this.mcVisibleChange.emit(visible);\n        }\n    }\n    @Input()\n    set mcTrigger(value: string) {\n        this._trigger = value;\n    }\n    @Input()\n    set mcPlacement(value: string) {\n        if (value !== this._placement) {\n            this._placement = value;\n            this._positions.unshift(POSITION_MAP[ this.mcPlacement ]);\n        } else if (!value) {\n            this._placement = 'top';\n        }\n    }\n\n    /** Subject for notifying that the tooltip has been hidden from the view */\n    private readonly _onHide: Subject<any> = new Subject();\n    private _closeOnInteraction: boolean = false;\n\n    constructor(public cdr: ChangeDetectorRef) {\n        this.availablePositions = POSITION_MAP;\n    }\n\n    show(): void {\n        if (this.hideTId) {\n            clearTimeout(this.hideTId);\n        }\n\n        if (!this.isContentEmpty()) {\n            if (this.mcTrigger !== 'manual') {\n                this._closeOnInteraction = true;\n            }\n            this.showTId = setTimeout(() => {\n                this.mcVisible = true;\n                this.mcVisibleChange.emit(true);\n\n                // Mark for check so if any parent component has set the\n                // ChangeDetectionStrategy to OnPush it will be checked anyways\n                this._markForCheck();\n            }, this.mcMouseEnterDelay);\n        }\n    }\n\n    hide(): void {\n        if (this.showTId) {\n            clearTimeout(this.showTId);\n        }\n\n        this.hideTId = setTimeout(() => {\n            this.mcVisible = false;\n            this.mcVisibleChange.emit(false);\n            this._onHide.next();\n\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }, this.mcMouseLeaveDelay);\n    }\n\n    setClassMap(): void {\n        this._classMap = `${this._prefix}-${this._placement}`;\n    }\n\n    isContentEmpty(): boolean {\n        return this.isTitleString ? (this.mcTitle === '' || !this.mcTitle) : false;\n    }\n\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden(): Observable<void> {\n        return this._onHide.asObservable();\n    }\n\n    _markForCheck(): void {\n        this.cdr.markForCheck();\n    }\n\n    _handleBodyInteraction(): void {\n        if (this._closeOnInteraction) {\n            this.hide();\n        }\n    }\n}\n\nexport const MC_TOOLTIP_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-tooltip-scroll-strategy');\n\n/** @docs-private */\nexport function MC_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition({scrollThrottle: 20});\n}\n\n/** @docs-private */\nexport const MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_TOOLTIP_SCROLL_STRATEGY_FACTORY\n};\n\n/** Creates an error to be thrown if the user supplied an invalid tooltip position. */\nexport function getMcTooltipInvalidPositionError(position: string) {\n    return Error(`McTooltip position \"${position}\" is invalid.`);\n}\n\nconst VIEWPORT_MARGIN: number = 8;\n\n@Directive({\n    selector: '[mcTooltip], mcTooltip',\n    exportAs: 'mcTooltip',\n    host: {\n        '(keydown)': 'handleKeydown($event)',\n        '(touchend)': 'handleTouchend()'\n    }\n})\n\nexport class McTooltip implements OnInit, OnDestroy {\n    isTooltipOpen: boolean = false;\n    isDynamicTooltip = false;\n    parentDisabled: boolean = false;\n    _title: string;\n    _disabled: boolean = false;\n    _mouseEnterDelay: number;\n    _mouseLeaveDelay: number;\n    _visible: boolean;\n    _trigger: string = 'hover';\n    _placement: string = 'top';\n    _overlayRef: OverlayRef | null;\n    _portal: ComponentPortal<McTooltipComponent>;\n    availablePositions: any;\n    tooltip: McTooltipComponent | null;\n    tooltipClass: string | string[] | Set<string> | {[key: string]: any};\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n    private $unsubscribe = new Subject<void>();\n\n    @Input('mcTooltip')\n    get mcTitle(): string {\n        return this._title;\n    }\n    set mcTitle(title: string) {\n        this._title = title;\n        this.updateCompValue('mcTitle', title);\n    }\n\n    @Input('mcTitle')\n    set setTitle(title: string) {\n        this.mcTitle = title;\n    }\n\n    @Input('mcTooltipDisabled')\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    @Input('mcMouseEnterDelay')\n    get mcMouseEnterDelay(): number {\n        return this._mouseEnterDelay;\n    }\n    set mcMouseEnterDelay(value: number) {\n        this._mouseEnterDelay = value;\n        this.updateCompValue('mcMouseEnterDelay', value);\n    }\n\n    @Input('mcMouseLeaveDelay')\n    get mcMouseLeaveDelay(): number {\n        return this._mouseEnterDelay;\n    }\n    set mcMouseLeaveDelay(value: number) {\n        this._mouseLeaveDelay = value;\n        this.updateCompValue('mcMouseLeaveDelay', value);\n    }\n\n    @Input('mcVisible')\n    get mcVisible(): boolean {\n        return this._visible;\n    }\n    set mcVisible(value: boolean) {\n        this._visible = value;\n        this.updateCompValue('mcVisible', value);\n    }\n\n    @Input('mcTrigger')\n    get mcTrigger(): string {\n        return this._trigger;\n    }\n    set mcTrigger(value: string) {\n        this._trigger = value;\n        this.updateCompValue('mcTrigger', value);\n    }\n\n    @Input('mcPlacement')\n    get mcPlacement(): string {\n        return this._placement;\n    }\n    set mcPlacement(value: string) {\n        if (value) {\n            this._placement = value;\n            this.updateCompValue('mcPlacement', value);\n        } else {\n            this._placement = 'top';\n        }\n    }\n\n    @Input('mсTooltipClass')\n    get mcTooltipClass() { return this.tooltipClass; }\n    set mcTooltipClass(value: string | string[] | Set<string> | {[key: string]: any}) {\n        this.tooltipClass = value;\n\n        if (this.tooltip) {\n            this.tooltip.setClassMap();\n        }\n    }\n\n    @HostBinding('class.mc-tooltip-open')\n    get isOpen(): boolean {\n        return this.isTooltipOpen;\n    }\n\n    @HostBinding('class.disabled')\n    get isParentDisabled(): boolean {\n        return this.parentDisabled;\n    }\n\n    private manualListeners = new Map<string, EventListenerOrEventListenerObject>();\n    private readonly _destroyed = new Subject<void>();\n\n    constructor(\n        private _overlay: Overlay,\n        private elementRef: ElementRef,\n        private _ngZone: NgZone,\n        private _scrollDispatcher: ScrollDispatcher,\n        private hostView: ViewContainerRef,\n        @Inject(MC_TOOLTIP_SCROLL_STRATEGY) private _scrollStrategy,\n        @Optional() private _dir: Directionality) {\n            this.availablePositions = POSITION_MAP;\n        }\n\n    /** Create the overlay config and position strategy */\n    _createOverlay(): OverlayRef {\n        if (this._overlayRef) {\n            return this._overlayRef;\n        }\n\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this.elementRef)\n            .withTransformOriginOn('.mc-tooltip')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(VIEWPORT_MARGIN)\n            .withPositions([ ...DEFAULT_4_POSITIONS ]);\n\n        const scrollableAncestors = this._scrollDispatcher\n            .getAncestorScrollContainers(this.elementRef);\n\n        strategy.withScrollableContainers(scrollableAncestors);\n\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe((change) => {\n            if (this.tooltip) {\n                this.onPositionChange(change);\n                if (change.scrollableViewProperties.isOverlayClipped && this.tooltip.mcVisible) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run(() => this.hide());\n                }\n            }\n        });\n\n        this._overlayRef = this._overlay.create({\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: 'mc-tooltip-panel',\n            scrollStrategy: this._scrollStrategy()\n        });\n\n        this._updatePosition();\n\n        this._overlayRef.detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n\n        return this._overlayRef;\n    }\n\n    _detach() {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n\n        this.tooltip = null;\n    }\n\n    onPositionChange($event: ConnectedOverlayPositionChange): void {\n        let updatedPlacement = this.mcPlacement;\n        Object.keys(this.availablePositions).some((key) => {\n            if ($event.connectionPair.originX === this.availablePositions[key].originX &&\n                $event.connectionPair.originY === this.availablePositions[key].originY &&\n                $event.connectionPair.overlayX === this.availablePositions[key].overlayX &&\n                $event.connectionPair.overlayY === this.availablePositions[key].overlayY) {\n                updatedPlacement = key;\n\n                return true;\n            }\n\n            return false;\n        });\n        this.updateCompValue('mcPlacement', updatedPlacement);\n\n        if (this.tooltip) {\n            this.tooltip.setClassMap();\n            this.tooltip._markForCheck();\n        }\n\n        this.handlePositioningUpdate();\n    }\n\n    handlePositioningUpdate() {\n        if (!this._overlayRef) {\n            this._overlayRef = this._createOverlay();\n        }\n        if (this.mcPlacement === 'right' || this.mcPlacement === 'left') {\n            const pos =\n                (this._overlayRef.overlayElement.clientHeight -\n                    this.hostView.element.nativeElement.clientHeight) / 2; // tslint:disable-line\n            const currentContainer = this._overlayRef.overlayElement.style.top || '0px';\n            this._overlayRef.overlayElement.style.top =\n                `${parseInt(currentContainer.split('px')[0], 10) + pos - 1}px`;\n            // TODO: обновлять положение стрелки\\указателя\\\"дятла\"\n        }\n    }\n\n    // tslint:disable-next-line:no-any\n    updateCompValue(key: string, value: any): void {\n        if (this.isDynamicTooltip && value) {\n            if (this.tooltip) {\n                this.tooltip[key] = value;\n            }\n        }\n    }\n\n    ngOnInit(): void {\n        this.initElementRefListeners();\n    }\n\n    ngOnDestroy(): void {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n        this.manualListeners.forEach((listener, event) =>\n            this.elementRef.nativeElement.removeEventListener(event, listener));\n        this.manualListeners.clear();\n\n        this.$unsubscribe.next();\n        this.$unsubscribe.complete();\n    }\n\n    handleKeydown(e: KeyboardEvent) {\n        if (this.isTooltipOpen && e.keyCode === ESCAPE) { // tslint:disable-line\n            this.hide();\n        }\n    }\n\n    handleTouchend() {\n        this.hide();\n    }\n\n    initElementRefListeners() {\n        if (this.mcTrigger === 'hover') {\n\n            this.manualListeners\n                .set('mouseenter', () => this.show())\n                .set('mouseleave', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n\n        if (this.mcTrigger === 'focus') {\n\n            this.manualListeners\n                .set('focus', () => this.show())\n                .set('blur', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n    }\n\n    show(): void {\n        if (!this.disabled) {\n            if (!this.tooltip) {\n                const overlayRef = this._createOverlay();\n                this._detach();\n\n                this._portal = this._portal || new ComponentPortal(McTooltipComponent, this.hostView);\n\n                this.tooltip = overlayRef.attach(this._portal).instance;\n                this.tooltip.afterHidden()\n                    .pipe(takeUntil(this._destroyed))\n                    .subscribe(() => this._detach());\n                this.isDynamicTooltip = true;\n                const properties = [\n                    'mcTitle',\n                    'mcMouseEnterDelay',\n                    'mcMouseLeaveDelay',\n                    'mcVisible',\n                    'mcTrigger',\n                    'mcPlacement'\n                ];\n                properties.forEach((property) => this.updateCompValue(property, this[ property ]));\n                this.tooltip.mcVisibleChange.pipe(takeUntil(this.$unsubscribe), distinctUntilChanged())\n                    .subscribe((data) => {\n                        this._visible = data;\n                        this.mcVisibleChange.emit(data);\n                        this.isTooltipOpen = data;\n                    });\n            }\n            this._updatePosition();\n            this.tooltip.show();\n        }\n    }\n\n    hide(): void {\n        if (this.tooltip) {\n            this.tooltip.hide();\n        }\n    }\n\n    /** Updates the position of the current tooltip. */\n    _updatePosition() {\n        if (!this._overlayRef) {\n            this._overlayRef = this._createOverlay();\n        }\n        const position =\n            this._overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\n        const origin = this._getOrigin();\n        const overlay = this._getOverlayPosition();\n\n        position.withPositions([\n            {...origin.main, ...overlay.main},\n            {...origin.fallback, ...overlay.fallback}\n        ]);\n    }\n\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    _getOrigin(): {main: IOriginConnectionPosition; fallback: IOriginConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this._dir || this._dir.value === 'ltr';\n        let originPosition: IOriginConnectionPosition;\n\n        if (position === 'top' || position === 'bottom') {\n            originPosition = {originX: 'center', originY: position === 'top' ? 'top' : 'bottom'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            originPosition = {originX: 'start', originY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            originPosition = {originX: 'end', originY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this._invertPosition(originPosition.originX, originPosition.originY);\n\n        return {\n            main: originPosition,\n            fallback: {originX: x, originY: y}\n        };\n    }\n\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    _getOverlayPosition(): {main: IOverlayConnectionPosition; fallback: IOverlayConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this._dir || this._dir.value === 'ltr';\n        let overlayPosition: IOverlayConnectionPosition;\n\n        if (position === 'top') {\n            overlayPosition = {overlayX: 'center', overlayY: 'bottom'};\n        } else if (position === 'bottom') {\n            overlayPosition = {overlayX: 'center', overlayY: 'top'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            overlayPosition = {overlayX: 'end', overlayY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            overlayPosition = {overlayX: 'start', overlayY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n\n        return {\n            main: overlayPosition,\n            fallback: {overlayX: x, overlayY: y}\n        };\n    }\n\n    /** Inverts an overlay position. */\n    private _invertPosition(x: HorizontalConnectionPos, y: VerticalConnectionPos) {\n        let newX: HorizontalConnectionPos = x;\n        let newY: VerticalConnectionPos = y;\n        if (this.mcPlacement === 'top' || this.mcPlacement === 'bottom') {\n            if (y === 'top') {\n                newY = 'bottom';\n            } else if (y === 'bottom') {\n                newY = 'top';\n            }\n        } else {\n            if (x === 'end') {\n                newX = 'start';\n            } else if (x === 'start') {\n                newX = 'end';\n            }\n        }\n\n        return {x: newX, y: newY};\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport {\n    McTooltipComponent,\n    McTooltip,\n    MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER\n} from './tooltip.component';\n\n\n@NgModule({\n    declarations: [McTooltipComponent, McTooltip],\n    exports: [McTooltipComponent, McTooltip],\n    imports: [BrowserAnimationsModule, CommonModule, OverlayModule],\n    providers: [MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n    entryComponents: [McTooltipComponent]\n})\nexport class McToolTipModule {\n}\n","import { Version } from '@angular/core';\n\n\nexport const VERSION = new Version('1.0.0-beta.0-51afa09');\n","export enum TimeParts {\n    hours,\n    minutes,\n    seconds\n}\n\nexport enum TimeFormats {\n    HHmmss = 'HH:mm:ss',\n    HHmm = 'HH:mm'\n}\n\nexport const TIMEFORMAT_PLACEHOLDERS: { [timeFormat: string]: string } = {\n    [TimeFormats.HHmmss]: '  :  :  ',\n    [TimeFormats.HHmm]: '  :  '\n};\n\nexport const DEFAULT_TIME_FORMAT: TimeFormats = TimeFormats.HHmm;\n\nexport const HOURS_MINUTES_SECONDS_REGEXP =\n    new RegExp(/^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9]):([0-5][0-9]|[0-9])?$/);\nexport const HOURS_MINUTES_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9])?$/;\nexport const HOURS_ONLY_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):?$/;\n\nexport const SECONDS_PER_MINUTE: number = 59;\nexport const MINUTES_PER_HOUR: number = 59;\nexport const HOURS_PER_DAY: number = 23;\n\n// TODO Move it to common CDK\nexport const ARROW_UP_KEYCODE: string = 'ArrowUp';\nexport const ARROW_DOWN_KEYCODE: string = 'ArrowDown';\nexport const ARROW_LEFT_KEYCODE: string = 'ArrowLeft';\nexport const ARROW_RIGHT_KEYCODE: string = 'ArrowRight';\n","/* tslint:disable:no-empty */\n\nimport { ActiveDescendantKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    RIGHT_ARROW,\n    SPACE,\n    UP_ARROW,\n    A\n} from '@ptsecurity/cdk/keycodes';\nimport {\n    CdkConnectedOverlay,\n    Overlay,\n    RepositionScrollStrategy,\n    IScrollStrategy,\n    ViewportRuler\n} from '@ptsecurity/cdk/overlay';\n\nimport {\n    AfterContentInit, AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren,\n    Directive,\n    DoCheck,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    isDevMode,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    QueryList, Renderer2,\n    Self,\n    SimpleChanges,\n    ViewChild, ViewChildren,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport {\n    _countGroupLabelsBeforeOption,\n    _getOptionScrollPosition,\n    CanDisable,\n    CanDisableCtor,\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    HasTabIndex, HasTabIndexCtor,\n    MC_OPTION_PARENT_COMPONENT,\n    McOptgroup,\n    McOption,\n    McOptionSelectionChange,\n    mixinDisabled,\n    mixinErrorState,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\nimport { McFormField, McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { McTag } from '@ptsecurity/mosaic/tag';\n\n\nimport { defer, merge, Observable, Subject } from 'rxjs';\nimport {\n    filter,\n    map,\n    startWith,\n    switchMap,\n    take,\n    takeUntil,\n    distinctUntilChanged\n} from 'rxjs/operators';\n\nimport {\n    getMcSelectDynamicMultipleError,\n    getMcSelectNonArrayValueError,\n    getMcSelectNonFunctionValueError\n} from './select-errors';\n\nimport { mcSelectAnimations } from './select-animations';\n\n\nlet nextUniqueId = 0;\n\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n\n/** The max height of the select's overlay panel */\nexport const SELECT_PANEL_MAX_HEIGHT = 224;\n\n/** The panel's padding on the x-axis */\nexport const SELECT_PANEL_PADDING_X = 1;\n\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\n/* tslint:disable-next-line:no-magic-numbers */\nexport const SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n\n/** The height of the select items in `em` units. */\nexport const SELECT_ITEM_HEIGHT_EM = 2;\n\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nexport const SELECT_PANEL_VIEWPORT_PADDING = 8;\n\n/** Injection token that determines the scroll handling while a select is open. */\nexport const MC_SELECT_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-select-scroll-strategy');\n\n/** @docs-private */\nexport function MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => RepositionScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MC_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n\n/** Change event object that is emitted when the select value has changed. */\nexport class McSelectChange {\n    constructor(\n        /** Reference to the select that emitted the change event. */\n        public source: McSelect,\n        /** Current value of the select that emitted the event. */\n        public value: any) {\n    }\n}\n\n// Boilerplate for applying mixins to McSelect.\n/** @docs-private */\nexport class McSelectBase {\n    constructor(\n        public _elementRef: ElementRef,\n        public _defaultErrorStateMatcher: ErrorStateMatcher,\n        public _parentForm: NgForm,\n        public _parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl\n    ) {}\n}\n\nexport const _McSelectMixinBase:\n    CanDisableCtor &\n    HasTabIndexCtor &\n    CanUpdateErrorStateCtor & typeof McSelectBase\n    = mixinTabIndex(mixinDisabled(mixinErrorState(McSelectBase)));\n\n\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\n@Directive({ selector: 'mc-select-trigger' })\nexport class McSelectTrigger {}\n\n\n@Component({\n    selector: 'mc-select',\n    exportAs: 'mcSelect',\n    templateUrl: 'select.html',\n    styleUrls: ['./select.css'],\n    inputs: ['disabled', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'tabIndex',\n        class: 'mc-select',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-select-invalid]': 'errorState',\n        '[class.mc-select-required]': 'required',\n        '(keydown)': '_handleKeydown($event)',\n        '(focus)': '_onFocus()',\n        '(blur)': '_onBlur()',\n        '(window:resize)': '_calculateHiddenItems()'\n    },\n    animations: [\n        mcSelectAnimations.transformPanel,\n        mcSelectAnimations.fadeInContent\n    ],\n    providers: [\n        { provide: McFormFieldControl, useExisting: McSelect },\n        { provide: MC_OPTION_PARENT_COMPONENT, useExisting: McSelect }\n    ]\n})\nexport class McSelect extends _McSelectMixinBase implements\n    AfterContentInit, AfterViewInit, OnChanges, OnDestroy, OnInit, DoCheck, ControlValueAccessor, CanDisable,\n    HasTabIndex, McFormFieldControl<any>, CanUpdateErrorState {\n\n    /** The last measured value for the trigger's client bounding rect. */\n    _triggerRect: ClientRect;\n\n    /** The cached font-size of the trigger element. */\n    _triggerFontSize = 0;\n\n    /** Deals with the selection logic. */\n    _selectionModel: SelectionModel<McOption>;\n\n    /** Manages keyboard events for options in the panel. */\n    _keyManager: ActiveDescendantKeyManager<McOption>;\n\n    /** The IDs of child options to be passed to the aria-owns attribute. */\n    _optionIds: string = '';\n\n    /** The value of the select panel's transform-origin property. */\n    _transformOrigin: string = 'top';\n\n    /** Whether the panel's animation is done. */\n    _panelDoneAnimating: boolean = false;\n\n    /** Emits when the panel element is finished transforming in. */\n    _panelDoneAnimatingStream = new Subject<string>();\n\n    /** Strategy that will be used to handle scrolling while the select panel is open. */\n    _scrollStrategy = this._scrollStrategyFactory();\n\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     */\n    _offsetY = 0;\n\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     */\n    _positions = [\n        {\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top'\n        },\n        {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'bottom'\n        }\n    ];\n\n    /** Whether the select is focused. */\n    get focused(): boolean {\n        return this._focused || this._panelOpen;\n    }\n\n    /**\n     * @deprecated Setter to be removed as this property is intended to be readonly.\n     * @breaking-change 8.0.0\n     */\n    set focused(value: boolean) {\n        this._focused = value;\n    }\n\n    /** A name for this control that can be used by `mc-form-field`. */\n    controlType = 'mc-select';\n\n    @ViewChild('trigger') trigger: ElementRef;\n    @ViewChildren(McTag) tags: QueryList<McTag>;\n\n    @ViewChild('panel') panel: ElementRef;\n\n    /** Overlay pane containing the options. */\n    @ViewChild(CdkConnectedOverlay) overlayDir: CdkConnectedOverlay;\n\n    /** All of the defined select options. */\n    @ContentChildren(McOption, { descendants: true }) options: QueryList<McOption>;\n\n    /** All of the defined groups of options. */\n    @ContentChildren(McOptgroup) optionGroups: QueryList<McOptgroup>;\n\n    /** Classes to be passed to the select panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[] | Set<string> | { [key: string]: any };\n\n    /** User-supplied override of the trigger element. */\n    @ContentChild(McSelectTrigger) customTrigger: McSelectTrigger;\n\n    /** Placeholder to be shown if no value has been selected. */\n    @Input()\n    get placeholder(): string {\n        return this._placeholder;\n    }\n\n    set placeholder(value: string) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n\n    /** Whether the component is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n\n    /** Whether the user should be allowed to select multiple options. */\n    @Input()\n    get multiple(): boolean {\n        return this._multiple;\n    }\n\n    set multiple(value: boolean) {\n        if (this._selectionModel) {\n            throw getMcSelectDynamicMultipleError();\n        }\n\n        this._multiple = coerceBooleanProperty(value);\n    }\n\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    @Input()\n    get compareWith() {\n        return this._compareWith;\n    }\n\n    set compareWith(fn: (o1: any, o2: any) => boolean) {\n        /* tslint:disable-next-line:strict-type-predicates */\n        if (typeof fn !== 'function') {\n            throw getMcSelectNonFunctionValueError();\n        }\n\n        this._compareWith = fn;\n\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n\n    /** Value of the select control. */\n    @Input()\n    get value(): any {\n        return this._value;\n    }\n\n    set value(newValue: any) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n\n    /** Object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     */\n    @Input() sortComparator: (a: McOption, b: McOption, options: McOption[]) => number;\n\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n\n    /** Combined stream of all of the child options' change events. */\n    readonly optionSelectionChanges: Observable<McOptionSelectionChange> = defer(() => {\n        if (this.options) {\n            return merge(...this.options.map((option) => option.onSelectionChange));\n        }\n\n        return this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n    });\n\n    /** Event emitted when the select panel has been toggled. */\n    @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the select has been opened. */\n    @Output('opened') readonly _openedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => o), map(() => {}));\n\n    /** Event emitted when the select has been closed. */\n    @Output('closed') readonly _closedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => !o), map(() => {}));\n\n    /** Event emitted when the selected value has been changed by the user. */\n    @Output() readonly selectionChange: EventEmitter<McSelectChange> = new EventEmitter<McSelectChange>();\n\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n    hiddenItems: number = 0;\n    oneMoreText: string = '...ещё';\n\n    /** Whether or not the overlay panel is open. */\n    private _panelOpen = false;\n\n    /** Whether filling out the select is required in the form. */\n    private _required: boolean = false;\n\n    /** The scroll position of the overlay panel, calculated to center the selected option. */\n    private _scrollTop = 0;\n\n    /** The placeholder displayed in the trigger of the select. */\n    private _placeholder: string;\n\n    /** Whether the component is in multiple selection mode. */\n    private _multiple: boolean = false;\n\n    /** Unique id for this input. */\n    private readonly _uid = `mc-select-${nextUniqueId++}`;\n\n    /** Emits whenever the component is destroyed. */\n    private readonly _destroy = new Subject<void>();\n\n    private _focused = false;\n\n    private _value: any;\n\n    private _id: string;\n\n    constructor(\n        private readonly _viewportRuler: ViewportRuler,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        private readonly _ngZone: NgZone,\n        private readonly _renderer: Renderer2,\n        _defaultErrorStateMatcher: ErrorStateMatcher,\n        elementRef: ElementRef,\n        @Optional() private readonly _dir: Directionality,\n        @Optional() _parentForm: NgForm,\n        @Optional() _parentFormGroup: FormGroupDirective,\n        @Optional() private readonly _parentFormField: McFormField,\n        @Self() @Optional() public ngControl: NgControl,\n        @Attribute('tabindex') tabIndex: string,\n        @Inject(MC_SELECT_SCROLL_STRATEGY) private readonly _scrollStrategyFactory\n    ) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnInit() {\n        this._selectionModel = new SelectionModel<McOption>(this.multiple);\n        this.stateChanges.next();\n\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe(() => {\n                if (this.panelOpen) {\n                    this._scrollTop = 0;\n                    this.openedChange.emit(true);\n                } else {\n                    this.openedChange.emit(false);\n                    this._panelDoneAnimating = false;\n                    this.overlayDir.offsetX = 0;\n                    this._changeDetectorRef.markForCheck();\n                }\n            });\n    }\n\n    ngAfterContentInit() {\n        this._initKeyManager();\n\n        this._selectionModel.onChange!\n            .pipe(takeUntil(this._destroy))\n            .subscribe((event) => {\n                event.added.forEach((option) => option.select());\n                event.removed.forEach((option) => option.deselect());\n            });\n\n        this.options.changes\n            .pipe(startWith(null), takeUntil(this._destroy))\n            .subscribe(() => {\n                this._resetOptions();\n                this._initializeSelection();\n            });\n    }\n\n    ngAfterViewInit(): void {\n        this.tags.changes\n            .subscribe(() => {\n                setTimeout(() => this._calculateHiddenItems(), 0);\n            });\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) { this.updateErrorState(); }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes.disabled) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n\n    /** `View -> model callback called when value changes` */\n    _onChange: (value: any) => void = () => {};\n\n    /** `View -> model callback called when select has been touched` */\n    _onTouched = () => {};\n\n    /** Toggles the overlay panel open or closed. */\n    toggle(): void {\n        if (this.panelOpen) {\n            this.close();\n        } else {\n            this.open();\n        }\n    }\n\n    /** Opens the overlay panel. */\n    open(): void {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) { return; }\n\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement)['font-size']);\n\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                    this.overlayDir.overlayRef.overlayElement) {\n                    this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n                }\n            });\n    }\n\n    /** Closes the overlay panel and focuses the host element. */\n    close(): void {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value: any): void {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn: () => {}): void {\n        this._onTouched = fn;\n    }\n\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n\n    get panelOpen(): boolean {\n        return this._panelOpen;\n    }\n\n    get selected(): McOption | McOption[] {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n\n    get triggerValue(): string {\n        if (this.empty) { return ''; }\n\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map((option) => option.viewValue);\n\n            if (this._isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions.join(', ');\n        }\n\n        return this._selectionModel.selected[0].viewValue;\n    }\n\n    get triggerValues(): McOption[] {\n        if (this.empty) { return []; }\n\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected;\n\n            if (this._isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions;\n        }\n\n        return [this._selectionModel.selected[0]];\n    }\n\n    get empty(): boolean {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n\n    _isRtl(): boolean {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n\n    _handleKeydown(event: KeyboardEvent): void {\n        if (!this.disabled) {\n            if (this.panelOpen) {\n                this._handleOpenKeydown(event);\n            } else {\n                this._handleClosedKeydown(event);\n            }\n        }\n    }\n\n    /**\n     * When the panel content is done fading in, the _panelDoneAnimating property is\n     * set so the proper class can be added to the panel.\n     */\n    _onFadeInDone(): void {\n        this._panelDoneAnimating = this.panelOpen;\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached(): void {\n        this.overlayDir.positionChange\n            .pipe(take(1))\n            .subscribe(() => {\n                this._changeDetectorRef.detectChanges();\n                this._calculateOverlayOffsetX();\n                this.panel.nativeElement.scrollTop = this._scrollTop;\n            });\n    }\n\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme(): string {\n        return this._parentFormField ? `mc-${this._parentFormField.color}` : '';\n    }\n\n    /** Focuses the select element. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    _calculateOverlayScroll(selectedIndex: number, scrollBuffer: number, maxScroll: number): number {\n        const itemHeight = this._getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n\n        /* tslint:disable-next-line:no-magic-numbers */\n        const halfOptionHeight = itemHeight / 2;\n\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n\n    /** Invoked when an option is clicked. */\n    onRemoveMatcherItem(option: McOption, $event): void {\n        $event.stopPropagation();\n\n        option.deselect();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat(): boolean {\n        return this._panelOpen || !this.empty;\n    }\n\n    _calculateHiddenItems(): void {\n        if (this.empty) { return; }\n\n        let visibleItems: number = 0;\n        const totalItemsWidth = this._getTotalItemsWidthInMatcher();\n        let totalVisibleItemsWidth: number = 0;\n        const itemMargin: number = 4;\n\n        this.tags.forEach((tag) => {\n            if (tag.nativeElement.offsetTop < tag.nativeElement.offsetHeight) {\n                totalVisibleItemsWidth += tag.nativeElement.getBoundingClientRect().width + itemMargin;\n                visibleItems++;\n            }\n        });\n\n        this.hiddenItems = (this.selected as ArrayLike<McOption>).length - visibleItems;\n\n        if (this.hiddenItems) {\n            const itemsCounter = this.trigger.nativeElement.querySelector('.mc-select__match-hidden-text');\n            const matcherList = this.trigger.nativeElement.querySelector('.mc-select__match-list');\n\n            const itemsCounterShowed = itemsCounter.offsetTop < itemsCounter.offsetHeight;\n            // const itemsCounterWidth: number = itemsCounter.getBoundingClientRect().width;\n            const itemsCounterWidth: number = 86;\n\n            const matcherListWidth: number = matcherList.getBoundingClientRect().width;\n            const matcherWidth: number = matcherListWidth + itemsCounterWidth;\n\n            if (itemsCounterShowed && (totalItemsWidth < matcherWidth)) { this.hiddenItems = 0; }\n\n            if (\n                totalVisibleItemsWidth === matcherListWidth ||\n                (totalVisibleItemsWidth + itemsCounterWidth) < matcherListWidth\n            ) {\n                this._changeDetectorRef.markForCheck();\n\n                return ;\n            } else if (!itemsCounterShowed && (totalItemsWidth + itemsCounterWidth) > matcherWidth) {\n                this.hiddenItems++;\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    private _getTotalItemsWidthInMatcher(): number {\n        const triggerClone = this.trigger.nativeElement.cloneNode(true);\n        triggerClone.querySelector('.mc-select__match-hidden-text').remove();\n\n        this._renderer.setStyle(triggerClone, 'position', 'absolute');\n        this._renderer.setStyle(triggerClone, 'visibility', 'hidden');\n        this._renderer.setStyle(triggerClone, 'top', '-100%');\n        this._renderer.setStyle(triggerClone, 'left', '0');\n\n        this._renderer.appendChild(this.trigger.nativeElement, triggerClone);\n\n        let totalItemsWidth: number = 0;\n        const itemMargin: number = 4;\n        triggerClone.querySelectorAll('mc-tag').forEach((item) => {\n            totalItemsWidth += item.getBoundingClientRect().width as number + itemMargin;\n        });\n\n        triggerClone.remove();\n\n        return totalItemsWidth;\n    }\n\n    /** Handles keyboard events while the select is closed. */\n    private _handleClosedKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n\n        // Open the select on ALT + arrow key to match the native <select>\n        if (isOpenKey || ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        } else if (!this.multiple) {\n            this._keyManager.onKeydown(event);\n        }\n    }\n\n    /** Handles keyboard events when the selected is open. */\n    private _handleOpenKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const manager = this._keyManager;\n\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n\n            if (keyCode === HOME) {\n                manager.setFirstItemActive();\n            } else {\n                manager.setLastItemActive();\n            }\n\n        } else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n        } else if ((keyCode === ENTER || keyCode === SPACE) && manager.activeItem) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        } else if (this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some((option) => !option.selected);\n            this.options.forEach((option) => {\n                if (hasDeselectedOptions && !option.disabled) {\n                    option.select();\n                } else {\n                    option.deselect();\n                }\n            });\n        } else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n\n            manager.onKeydown(event);\n\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n\n    private _initializeSelection(): void {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n        });\n    }\n\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    private _setSelectionByValue(value: any | any[]): void {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMcSelectNonArrayValueError();\n            }\n\n            this._selectionModel.clear();\n            value.forEach((currentValue: any) => this._selectValue(currentValue));\n            this._sortValues();\n        } else {\n            this._selectionModel.clear();\n            const correspondingOption = this._selectValue(value);\n\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    private _selectValue(value: any): McOption | undefined {\n        const correspondingOption = this.options.find((option: McOption) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            } catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n\n                return false;\n            }\n        });\n\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n\n        return correspondingOption;\n    }\n\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    private _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager<McOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n\n        this._keyManager.tabOut\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            });\n\n        this._keyManager.change\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n                if (this._panelOpen && this.panel) {\n                    this._scrollActiveOptionIntoView();\n                } else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n            });\n    }\n\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    private _resetOptions(): void {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n\n        this.optionSelectionChanges\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((event) => {\n                this._onSelect(event.source, event.isUserInput);\n\n                if (event.isUserInput && !this.multiple && this._panelOpen) {\n                    this.close();\n                    this.focus();\n                }\n            });\n\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((option) => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n                this.stateChanges.next();\n            });\n\n        this._setOptionIds();\n    }\n\n    /** Invoked when an option is clicked. */\n    private _onSelect(option: McOption, isUserInput: boolean): void {\n        const wasSelected = this._selectionModel.isSelected(option);\n\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        } else {\n            if (option.selected) {\n                this._selectionModel.select(option);\n            } else {\n                this._selectionModel.deselect(option);\n            }\n\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n\n            if (this.multiple) {\n                this._sortValues();\n\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mc-option`.\n                    this.focus();\n                }\n            }\n        }\n\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n\n        this.stateChanges.next();\n    }\n\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    private _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n\n    /** Emits change event to set the model value. */\n    private _propagateChanges(fallbackValue?: any): void {\n        let valueToEmit: any = null;\n\n        if (this.multiple) {\n            valueToEmit = (this.selected as McOption[]).map((option) => option.value);\n        } else {\n            valueToEmit = this.selected ? (this.selected as McOption).value : fallbackValue;\n        }\n\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new McSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /** Records option IDs to pass to the aria-owns property. */\n    private _setOptionIds() {\n        this._optionIds = this.options.map((option) => option.id).join(' ');\n    }\n\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    private _highlightCorrectOption(): void {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            } else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n\n    /** Scrolls the active option into view. */\n    private _scrollActiveOptionIntoView(): void {\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(\n            activeOptionIndex + labelCount,\n            this._getItemHeight(),\n            this.panel.nativeElement.scrollTop,\n            SELECT_PANEL_MAX_HEIGHT\n        );\n    }\n\n    /** Gets the index of the provided option in the option list. */\n    private _getOptionIndex(option: McOption): number | undefined {\n        /* tslint:disable-next-line */\n        return this.options.reduce((result: number, current: McOption, index: number) => {\n            /* tslint:disable-next-line:strict-type-predicates */\n            return result === undefined ? (option === current ? index : undefined) : result;\n        }, undefined);\n    }\n\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    private _calculateOverlayPosition(): void {\n        const itemHeight = this._getItemHeight();\n        const items = this._getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset =\n            this.empty ? 0 : this._getOptionIndex(this._selectionModel.selected[0])!;\n\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options,\n            this.optionGroups);\n\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /* tslint:disable-next-line:no-magic-numbers */\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY();\n\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    private _calculateOverlayOffsetX(): void {\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this._isRtl();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const paddingWidth = SELECT_PANEL_PADDING_X * 2;\n        let offsetX: number;\n\n        const selected = this._selectionModel.selected[0] || this.options.first;\n        offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n\n        // Invert the offset in LTR.\n        if (!isRtl) { offsetX *= -1; }\n\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        } else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    private _calculateOverlayOffsetY(): number {\n        // const itemHeight = this._getItemHeight();\n        // const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n\n        // todo I'm not sure that we will use it\n        return 0;\n        // return Math.round(-optionHeightAdjustment);\n    }\n\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    private _checkOverlayWithinViewport(maxScroll: number): void {\n        const itemHeight = this._getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable =\n            viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n\n        const panelHeightTop = Math.abs(this._offsetY);\n        const totalPanelHeight =\n            Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        } else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        } else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    private _adjustPanelUp(panelHeightBottom: number, bottomSpaceAvailable: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    private _adjustPanelDown(panelHeightTop: number, topSpaceAvailable: number, maxScroll: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n\n            return;\n        }\n    }\n\n    /** Sets the transform origin point based on the selected option. */\n    private _getOriginBasedOnOption(): string {\n        const itemHeight = this._getItemHeight();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /* tslint:disable-next-line:no-magic-numbers */\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n\n        return `50% ${originY}px 0px`;\n    }\n\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    private _getItemCount(): number {\n        return this.options.length + this.optionGroups.length;\n    }\n\n    /** Calculates the height of the select's options. */\n    private _getItemHeight(): number {\n        /* tslint:disable-next-line:no-magic-numbers */\n        return 32;\n        // return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n\n    /** Comparison function to specify which option is displayed. Defaults to object equality. */\n    private _compareWith = (o1: any, o2: any) => o1 === o2;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McOptionModule } from '@ptsecurity/mosaic/core';\nimport { McFormFieldModule } from '@ptsecurity/mosaic/form-field';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport { McTagModule } from '@ptsecurity/mosaic/tag';\n\nimport { MC_SELECT_SCROLL_STRATEGY_PROVIDER, McSelect, McSelectTrigger } from './select.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        McOptionModule,\n        McIconModule,\n        McTagModule\n    ],\n    exports: [McFormFieldModule, McSelect, McSelectTrigger, McOptionModule, CommonModule],\n    declarations: [McSelect, McSelectTrigger],\n    providers: [MC_SELECT_SCROLL_STRATEGY_PROVIDER]\n})\nexport class McSelectModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    NgZone, OnDestroy,\n    OnInit,\n    Renderer2,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { coerceBooleanProperty, coerceCssPixelValue, coerceNumberProperty } from '@ptsecurity/cdk/coercion';\n\n\ninterface IArea {\n    area: McSplitterAreaDirective;\n    index: number;\n    order: number;\n    initialSize: number;\n}\n\ninterface IPoint {\n    x: number;\n    y: number;\n}\n\n\nconst enum AttributeProperty {\n    Disabled = 'disabled'\n}\n\nconst enum Cursor {\n    Default = 'default',\n    ResizeColumn = 'col-resize',\n    ResizeRow = 'row-resize'\n}\n\nconst enum StyleProperty {\n    Cursor = 'cursor',\n    Flex = 'flex',\n    FlexBasis = 'flex-basis',\n    FlexDirection = 'flex-direction',\n    Height = 'height',\n    MaxWidth = 'max-width',\n    MinHeight = 'min-height',\n    MinWidth = 'minWidth',\n    OffsetHeight = 'offsetHeight',\n    OffsetWidth = 'offsetWidth',\n    Order = 'order',\n    Width = 'width'\n}\n\nconst enum State {\n    Disabled = 'disabled',\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\nexport const enum Direction {\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\n@Component({\n    selector: 'mc-splitter',\n    preserveWhitespaces: false,\n    styleUrls: ['splitter.css'],\n    templateUrl: './splitter.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSplitterComponent implements OnInit {\n    readonly areas: IArea[] = [];\n\n    private _direction: Direction;\n    private _disabled: boolean = false;\n    private _gutterSize: number = 6;\n\n    private isDragging: boolean = false;\n\n    private readonly areaPositionDivider: number = 2;\n    private readonly listeners: (() => void)[] = [];\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set gutterSize(gutterSize: number) {\n        const size = coerceNumberProperty(gutterSize);\n        this._gutterSize = size > 0 ? size : this.gutterSize;\n    }\n\n    get gutterSize(): number {\n        return this._gutterSize;\n    }\n\n    constructor(private elementRef: ElementRef,\n                private ngZone: NgZone,\n                private renderer: Renderer2) {}\n\n    addArea(area: McSplitterAreaDirective): void {\n        const index: number = this.areas.length;\n        const order: number = index * this.areaPositionDivider;\n        const size: number = area.getSize();\n\n        area.setOrder(order);\n\n        this.areas.push({\n            area,\n            index,\n            order,\n            initialSize: size\n        });\n    }\n\n    ngOnInit(): void {\n        if (!this.direction) {\n            this.direction = Direction.Horizontal;\n        }\n\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'column' : 'row');\n    }\n\n    onMouseDown(event: MouseEvent, leftAreaIndex: number, rightAreaIndex: number) {\n        if (this.disabled) {\n            return;\n        }\n\n        const leftArea = this.areas[leftAreaIndex];\n        const rightArea = this.areas[rightAreaIndex];\n\n        const startPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        leftArea.initialSize = leftArea.area.getSize();\n        rightArea.initialSize = rightArea.area.getSize();\n\n        this.areas.forEach((item) => {\n            const size = item.area.getSize();\n            item.area.disableFlex();\n            item.area.setSize(size);\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mouseup',\n                    () => this.onMouseUp()\n                )\n            );\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mousemove',\n                    (e: MouseEvent) => this.onMouseMove(e, startPoint, leftArea, rightArea)\n                )\n            );\n        });\n\n        this.isDragging = true;\n    }\n\n    removeArea(area: McSplitterAreaDirective): void {\n        let indexToRemove: number = -1;\n\n        this.areas.some((item, index) => {\n            if (item.area === area) {\n                indexToRemove = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        if (indexToRemove === -1) {\n            return;\n        }\n\n        this.areas.splice(indexToRemove, 1);\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private onMouseMove(event: MouseEvent, startPoint: IPoint, leftArea: IArea, rightArea: IArea) {\n        if (!this.isDragging || this.disabled) {\n            return;\n        }\n\n        const endPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        const offset = this.isVertical()\n            ? startPoint.y - endPoint.y\n            : startPoint.x - endPoint.x;\n\n        const newLeftAreaSize = leftArea.initialSize - offset;\n        const newRightAreaSize = rightArea.initialSize + offset;\n\n        const minLeftAreaSize = leftArea.area.getMinSize();\n        const minRightAreaSize = rightArea.area.getMinSize();\n\n        if (newLeftAreaSize <= minLeftAreaSize || newRightAreaSize <= minRightAreaSize) {\n            const rightAreaOffset = leftArea.initialSize - minLeftAreaSize;\n\n            leftArea.area.setSize(minLeftAreaSize);\n            rightArea.area.setSize(rightArea.initialSize + rightAreaOffset);\n        } else if (newLeftAreaSize <= 0) {\n            leftArea.area.setSize(0);\n            rightArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n        } else if (newRightAreaSize <= 0) {\n            leftArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n            rightArea.area.setSize(0);\n        } else {\n            leftArea.area.setSize(newLeftAreaSize);\n            rightArea.area.setSize(newRightAreaSize);\n        }\n    }\n\n    private onMouseUp() {\n        while (this.listeners.length > 0) {\n            const unsubscribe = this.listeners.pop();\n\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        }\n\n        this.isDragging = false;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-gutter'\n})\nexport class McGutterDirective implements OnInit {\n    private _direction: Direction = Direction.Vertical;\n    private _disabled: boolean = false;\n    private _order: number = 0;\n    private _size: number = 6;\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set order(order: number) {\n        this._order = coerceNumberProperty(order);\n    }\n\n    get order(): number {\n        return this._order;\n    }\n\n    @Input()\n    set size(size: number) {\n        this._size = coerceNumberProperty(size);\n    }\n\n    get size(): number {\n        return this._size;\n    }\n\n    constructor(private renderer: Renderer2,\n                private elementRef: ElementRef) {\n    }\n\n    ngOnInit(): void {\n        this.setStyle(StyleProperty.Cursor, this.getCursor(this.getState()));\n        this.setStyle(StyleProperty.FlexBasis, coerceCssPixelValue(this.size));\n        this.setStyle(this.isVertical() ? StyleProperty.Height : StyleProperty.Width, coerceCssPixelValue(this.size));\n        this.setStyle(StyleProperty.Order, this.order);\n\n        if (!this.isVertical()) {\n            this.setStyle(StyleProperty.Height, '100%');\n        }\n\n        if (this.disabled) {\n            this.setAttr(AttributeProperty.Disabled, 'true');\n        }\n\n        // fix IE issue with gutter icon. flex-direction is requied for flex alignment options\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'row' : 'column');\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private getCursor(state: State): string {\n        switch (state) {\n            case State.Disabled:\n                return Cursor.Default;\n            case State.Vertical:\n                return  Cursor.ResizeRow;\n            case State.Horizontal:\n                return Cursor.ResizeColumn;\n            default:\n                throw Error(`Unknown gutter state for cursor: ${state}`);\n        }\n    }\n\n    private getState(): State {\n        return this.disabled\n            ? State.Disabled\n            : this.direction === Direction.Vertical\n                ? State.Vertical\n                : State.Horizontal;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n\n    private setAttr(attribute: AttributeProperty, value: string) {\n        this.renderer.setAttribute(this.elementRef.nativeElement, attribute, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-splitter-area'\n})\nexport class McSplitterAreaDirective implements OnInit, OnDestroy {\n    constructor(private elementRef: ElementRef,\n                private renderer: Renderer2,\n                private splitter: McSplitterComponent) {}\n\n    disableFlex(): void {\n        this.renderer.removeStyle(this.elementRef.nativeElement, 'flex');\n    }\n\n    ngOnInit(): void {\n        this.splitter.addArea(this);\n\n        this.removeStyle(StyleProperty.MaxWidth);\n        this.setStyle(StyleProperty.Flex, '1');\n\n        if (this.splitter.direction === Direction.Vertical) {\n            this.setStyle(StyleProperty.Width, '100%');\n            this.removeStyle(StyleProperty.Height);\n        } else {\n            this.setStyle(StyleProperty.Height, '100%');\n            this.removeStyle(StyleProperty.Width);\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.splitter.removeArea(this);\n    }\n\n    setOrder(order: number): void {\n        this.setStyle(StyleProperty.Order, order);\n    }\n\n    setSize(size: number): void {\n        const sz = coerceNumberProperty(size);\n        this.setStyle(this.getSizeProperty(), coerceCssPixelValue(sz));\n    }\n\n    getSize(): number {\n        return this.elementRef.nativeElement[this.getOffsetSizeProperty()];\n    }\n\n    getMinSize(): number {\n        const styles = getComputedStyle(this.elementRef.nativeElement);\n\n        return parseFloat(styles[this.getMinSizeProperty()]);\n    }\n\n    private isVertical(): boolean {\n        return this.splitter.direction === Direction.Vertical;\n    }\n\n    private getMinSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.MinHeight\n            : StyleProperty.MinWidth;\n    }\n\n    private getOffsetSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.OffsetHeight\n            : StyleProperty.OffsetWidth;\n    }\n\n    private getSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.Height\n            : StyleProperty.Width;\n    }\n\n    private setStyle(style: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, style, value);\n    }\n\n    private removeStyle(style: StyleProperty) {\n        this.renderer.removeStyle(this.elementRef.nativeElement, style);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McGutterDirective, McSplitterAreaDirective, McSplitterComponent } from './splitter.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McIconModule\n    ],\n    exports: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ],\n    declarations: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ]\n})\nexport class McSplitterModule {\n}\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport {\n    Attribute,\n    ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ElementRef, EventEmitter, forwardRef,\n    Input, Output, ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    ThemePalette,\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\nlet nextUniqueId = 0;\n\ntype ToggleLabelPositionType = 'left' | 'right';\n\nexport class McToggleBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McToggleMixinBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McToggleBase = mixinTabIndex(mixinColor(mixinDisabled(McToggleBase), ThemePalette.Primary));\n\nexport class McToggleChange {\n    source: McToggleComponent;\n    checked: boolean;\n}\n\n@Component({\n    selector: 'mc-toggle',\n    exportAs: 'mcToggle',\n    templateUrl: './toggle.component.html',\n    styleUrls: ['./toggle.css'],\n    providers: [\n        {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => McToggleComponent), multi: true}\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color', 'tabIndex'],\n    host: {\n        class: 'mc-toggle',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-toggle_off]': '!checked'\n    },\n    animations: [\n        trigger('switch', [\n            state('true' , style({ left: '50%' })),\n            state('false', style({ left: '1px' })),\n            transition('true <=> false', animate('150ms'))\n        ])\n    ]\n})\nexport class McToggleComponent extends _McToggleMixinBase\n    implements ControlValueAccessor, CanColor, CanDisable, HasTabIndex {\n\n    @ViewChild('input') _inputElement: ElementRef;\n\n    @Input() labelPosition: ToggleLabelPositionType = 'right';\n\n    @Input('aria-label') ariaLabel: string = '';\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-toggle-${++nextUniqueId}`;\n\n    // tslint:disable:member-ordering\n    @Input() id: string = this._uniqueId;\n\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    @Input() name: string | null = null;\n\n    @Input() value: string;\n\n    private _disabled: boolean = false;\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this._disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    get checked() {\n        return this._checked;\n    }\n\n    @Input()\n    set checked(value: boolean) {\n        if (value !== this._checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    @Output() readonly change: EventEmitter<McToggleChange> =\n        new EventEmitter<McToggleChange>();\n\n    constructor(public _elementRef: ElementRef,\n                private _focusMonitor: FocusMonitor,\n                private _changeDetectorRef: ChangeDetectorRef,\n                @Attribute('tabindex') tabIndex: string\n    ) {\n        super(_elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _getAriaChecked(): boolean {\n        return this.checked;\n    }\n\n    _onInteractionEvent(event: Event) {\n        event.stopPropagation();\n    }\n\n    _onLabelTextChange() {\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onInputClick(event: MouseEvent) {\n        event.stopPropagation();\n        this._updateModelValue();\n        this._emitChangeEvent();\n    }\n\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    registerOnChange(fn: any) {\n        this._onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this._onTouchedCallback = fn;\n    }\n\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    // tslint:disable-next-line:no-empty\n    private _onTouchedCallback = () => {};\n\n    // tslint:disable-next-line:no-empty\n    private _onChangeCallback = (_: any) => {};\n\n    private _updateModelValue() {\n        this._checked = !this.checked;\n        this._onChangeCallback(this.checked);\n        this._onTouchedCallback();\n    }\n\n    private _emitChangeEvent() {\n        const event = new McToggleChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._onChangeCallback(this.checked);\n        this.change.emit(event);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McToggleComponent } from './toggle.component';\n\n\n@NgModule({\n    imports: [CommonModule, BrowserAnimationsModule, A11yModule, McCommonModule],\n    exports: [McToggleComponent],\n    declarations: [McToggleComponent]\n})\nexport class McToggleModule {\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    InjectionToken,\n    Inject,\n    Optional,\n    Directive, Attribute\n} from '@angular/core';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanColor,\n    CanColorCtor,\n    mixinColor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { merge, Subscription } from 'rxjs';\n\nimport { McTab } from './tab';\nimport { McTabHeader } from './tab-header';\n\n\n@Directive({\n    selector: 'mc-tab-group[mc-light-tabs], [mc-tab-nav-bar][mc-light-tabs]',\n    host: { class: 'mc-tab-group_light' }\n})\nexport class McLightTabsCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-align-tabs-center], [mc-tab-nav-bar][mc-align-tabs-center]',\n    host: { class: 'mc-tab-group_align-labels-center' }\n})\nexport class McAlignTabsCenterCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-align-tabs-end], [mc-tab-nav-bar][mc-align-tabs-end]',\n    host: { class: 'mc-tab-group_align-labels-end' }\n})\nexport class McAlignTabsEndCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-stretch-tabs], [mc-tab-nav-bar][mc-stretch-tabs]',\n    host: { class: 'mc-tab-group_stretch-labels' }\n})\nexport class McStretchTabsCssStyler { }\n\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n\n/** A simple change event emitted on focus or selection changes. */\nexport class McTabChangeEvent {\n    /** Index of the currently-selected tab. */\n    index: number;\n    /** Reference to the currently-selected tab. */\n    tab: McTab;\n}\n\n/** Possible positions for the tab header. */\nexport type McTabHeaderPosition = 'above' | 'below';\n\n/** Object that can be used to configure the default options for the tabs module. */\nexport interface IMcTabsConfig {\n    /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n    animationDuration?: string;\n}\n\n/** Injection token that can be used to provide the default options the tabs module. */\nexport const MC_TABS_CONFIG = new InjectionToken('MC_TABS_CONFIG');\n\n// Boilerplate for applying mixins to McTabGroup.\n/** @docs-private */\nexport class McTabGroupBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) { }\n}\nexport const mcTabGroupMixinBase:\n    CanColorCtor &\n    typeof McTabGroupBase =\n    mixinColor(mixinDisabled(McTabGroupBase));\n\n/**\n * Tab-group component.  Supports basic tab pairs (label + content) and includes\n * keyboard navigation.\n */\n@Component({\n    selector: 'mc-tab-group',\n    exportAs: 'mcTabGroup',\n    templateUrl: 'tab-group.html',\n    styleUrls: ['tab-group.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['color'],\n    host: {\n        class: 'mc-tab-group',\n        '[class.mc-tab-group_dynamic-height]': 'dynamicHeight',\n        '[class.mc-tab-group_inverted-header]': 'headerPosition === \"below\"'\n    }\n})\nexport class McTabGroup extends mcTabGroupMixinBase implements AfterContentInit,\n    AfterContentChecked, OnDestroy, CanColor {\n    lightTab: boolean;\n\n    /** Whether the tab group should grow to the size of the active tab. */\n    @Input()\n    get dynamicHeight(): boolean { return this._dynamicHeight; }\n    set dynamicHeight(value: boolean) { this._dynamicHeight = coerceBooleanProperty(value); }\n\n    /** The index of the active tab. */\n    @Input()\n    get selectedIndex(): number | null { return this._selectedIndex; }\n    set selectedIndex(value: number | null) {\n        this.indexToSelect = coerceNumberProperty(value, null);\n    }\n\n    @ContentChildren(McTab) tabs: QueryList<McTab>;\n\n    @ViewChild('tabBodyWrapper') tabBodyWrapper: ElementRef;\n\n    @ViewChild('tabHeader') tabHeader: McTabHeader;\n\n    /** Position of the tab header. */\n    @Input() headerPosition: McTabHeaderPosition = 'above';\n\n    /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n    @Input() animationDuration: string;\n\n    /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n    @Output() readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted when focus has changed within a tab group. */\n    @Output() readonly focusChange: EventEmitter<McTabChangeEvent> =\n        new EventEmitter<McTabChangeEvent>();\n\n    /** Event emitted when the body animation has completed */\n    @Output() readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the tab selection has changed. */\n    @Output() readonly selectedTabChange: EventEmitter<McTabChangeEvent> =\n        new EventEmitter<McTabChangeEvent>(true);\n\n    /** The tab index that should be selected after the content has been checked. */\n    private indexToSelect: number | null = 0;\n\n    /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n    private tabBodyWrapperHeight: number = 0;\n\n    /** Subscription to tabs being added/removed. */\n    private tabsSubscription = Subscription.EMPTY;\n\n    /** Subscription to changes in the tab labels. */\n    private tabLabelSubscription = Subscription.EMPTY;\n    private _dynamicHeight: boolean = false;\n    private _selectedIndex: number | null = null;\n\n    private groupId: number;\n\n    constructor(\n        elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        @Attribute('mc-light-tabs') lightTabs: string,\n        @Inject(MC_TABS_CONFIG) @Optional() defaultConfig?: IMcTabsConfig\n    ) {\n        super(elementRef);\n\n        this.lightTab = coerceBooleanProperty(lightTabs);\n\n        this.groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '0ms';\n    }\n\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = this.indexToSelect = this.clampTabIndex(this.indexToSelect);\n\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex !== indexToSelect) {\n            const isFirstRun = this._selectedIndex == null;\n\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this.createChangeEvent(indexToSelect));\n            }\n\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this.tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            });\n        }\n\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this.tabs.forEach((tab: McTab, index: number) => {\n            tab.position = index - indexToSelect;\n\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position === 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    ngAfterContentInit() {\n        this.subscribeToTabLabels();\n\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this.tabsSubscription = this.tabs.changes.subscribe(() => {\n            const indexToSelect = this.clampTabIndex(this.indexToSelect);\n\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                const tabs = this.tabs.toArray();\n\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this.indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n\n            this.subscribeToTabLabels();\n            this.changeDetectorRef.markForCheck();\n        });\n    }\n\n    ngOnDestroy() {\n        this.tabsSubscription.unsubscribe();\n        this.tabLabelSubscription.unsubscribe();\n    }\n\n    focusChanged(index: number) {\n        this.focusChange.emit(this.createChangeEvent(index));\n    }\n\n    /** Returns a unique id for each tab label element */\n    getTabLabelId(i: number): string {\n        return `mc-tab-label-${this.groupId}-${i}`;\n    }\n\n    /** Returns a unique id for each tab content element */\n    getTabContentId(i: number): string {\n        return `mc-tab-content-${this.groupId}-${i}`;\n    }\n\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    setTabBodyWrapperHeight(tabHeight: number): void {\n        if (!this._dynamicHeight || !this.tabBodyWrapperHeight) { return; }\n\n        const wrapper: HTMLElement = this.tabBodyWrapper.nativeElement;\n\n        wrapper.style.height = `${this.tabBodyWrapperHeight}px`;\n\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this.tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = `${tabHeight}px`;\n        }\n    }\n\n    /** Removes the height of the tab body wrapper. */\n    removeTabBodyWrapperHeight(): void {\n        this.tabBodyWrapperHeight = this.tabBodyWrapper.nativeElement.clientHeight;\n        this.tabBodyWrapper.nativeElement.style.height = '';\n        this.animationDone.emit();\n    }\n\n    /** Handle click events, setting new selected index if appropriate. */\n    handleClick(tab: McTab, tabHeader: McTabHeader, index: number) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n\n    /** Retrieves the tabindex for the tab. */\n    getTabIndex(tab: McTab, index: number): number | null {\n        if (tab.disabled) {\n            return null;\n        }\n\n        return this.selectedIndex === index ? 0 : -1;\n    }\n\n    private createChangeEvent(index: number): McTabChangeEvent {\n        const event = new McTabChangeEvent();\n        event.index = index;\n        if (this.tabs && this.tabs.length) {\n            event.tab = this.tabs.toArray()[index];\n        }\n\n        return event;\n    }\n\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the McTab component, whereas the data binding is inside the McTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    private subscribeToTabLabels() {\n        if (this.tabLabelSubscription) {\n            this.tabLabelSubscription.unsubscribe();\n        }\n\n        this.tabLabelSubscription = merge(...this.tabs.map((tab) => tab.stateChanges))\n            .subscribe(() => this.changeDetectorRef.markForCheck());\n    }\n\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    private clampTabIndex(index: number | null): number {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Mch.max(NaN, 0) === NaN).\n        return Math.min(this.tabs.length - 1, Math.max(index || 0, 0));\n    }\n}\n","import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    OnDestroy,\n    ViewEncapsulation\n} from '@angular/core';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    CanColor,\n    CanColorCtor,\n    CanDisable,\n    CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\n// Boilerplate for applying mixins to McTabNav.\n/** @docs-private */\nexport class McTabNavBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {}\n}\nexport const mcTabNavMixinBase: CanColorCtor &\n    typeof McTabNavBase = mixinColor(McTabNavBase);\n\n/**\n * Navigation component matching the styles of the tab group header.\n */\n@Component({\n    selector: '[mc-tab-nav-bar]',\n    exportAs: 'mcTabNavBar, mcTabNav',\n    inputs: ['color'],\n    templateUrl: 'tab-nav-bar.html',\n    styleUrls: ['tab-nav-bar.css'],\n    host: { class: 'mc-tab-nav-bar' },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McTabNav extends mcTabNavMixinBase\n    implements CanColor {\n        constructor(elementRef: ElementRef) {\n            super(elementRef);\n        }\n     }\n\n// Boilerplate for applying mixins to McTabLink.\nexport class McTabLinkBase {}\nexport const mcTabLinkMixinBase: HasTabIndexCtor & CanDisableCtor &\n    typeof McTabLinkBase = mixinTabIndex(mixinDisabled(McTabLinkBase));\n\n/**\n * Link inside of a `mc-tab-nav-bar`.\n */\n@Directive({\n    selector: '[mc-tab-link], [mcTabLink]',\n    exportAs: 'mcTabLink',\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-tab-link',\n        '[attr.aria-current]': 'active',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.tabIndex]': 'tabIndex',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-active]': 'active'\n    }\n})\nexport class McTabLink extends mcTabLinkMixinBase\n    implements OnDestroy, CanDisable, HasTabIndex {\n    /** Whether the link is active. */\n    @Input()\n    get active(): boolean {\n        return this.isActive;\n    }\n    set active(value: boolean) {\n        if (value !== this.isActive) {\n            this.isActive = value;\n        }\n    }\n\n    /** Whether the tab link is active or not. */\n    protected isActive: boolean = false;\n\n    constructor(\n        public elementRef: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        private focusMonitor: FocusMonitor\n    ) {\n        super();\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this.focusMonitor.monitor(this.elementRef.nativeElement);\n    }\n\n    ngOnDestroy() {\n        this.focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PortalModule } from '@ptsecurity/cdk/portal';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McTab } from './tab';\nimport { McTabBody, McTabBodyPortal } from './tab-body';\nimport { McTabContent } from './tab-content';\nimport {\n    McTabGroup,\n    McLightTabsCssStyler,\n    McAlignTabsCenterCssStyler,\n    McAlignTabsEndCssStyler,\n    McStretchTabsCssStyler\n} from './tab-group';\nimport { McTabHeader } from './tab-header';\nimport { McTabLabel } from './tab-label';\nimport { McTabLabelWrapper } from './tab-label-wrapper';\nimport { McTabLink, McTabNav } from './tab-nav-bar/tab-nav-bar';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McCommonModule,\n        PortalModule,\n        A11yModule,\n        BrowserAnimationsModule\n    ],\n    // Don't export all components because some are only to be used internally.\n    exports: [\n        McCommonModule,\n        McTabGroup,\n        McTabLabel,\n        McTab,\n        McTabNav,\n        McTabLink,\n        McTabContent,\n        McLightTabsCssStyler,\n        McAlignTabsCenterCssStyler,\n        McAlignTabsEndCssStyler,\n        McStretchTabsCssStyler\n    ],\n    declarations: [\n        McTabGroup,\n        McTabLabel,\n        McTab,\n        McTabLabelWrapper,\n        McTabNav,\n        McTabLink,\n        McTabBody,\n        McTabBodyPortal,\n        McTabHeader,\n        McTabContent,\n        McLightTabsCssStyler,\n        McAlignTabsCenterCssStyler,\n        McAlignTabsEndCssStyler,\n        McStretchTabsCssStyler\n    ]\n})\nexport class McTabsModule {}\n","import {\n    ElementRef,\n    QueryList,\n    ContentChildren,\n    Component,\n    ChangeDetectionStrategy,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport {\n    mixinColor,\n    CanColor,\n    CanColorCtor,\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\nexport class McTagBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McTagMixinBase: CanColorCtor & CanDisableCtor & typeof McTagBase = mixinColor(mixinDisabled(McTagBase));\n\n\n@Component({\n    selector: 'mc-tag',\n    templateUrl: 'tag.partial.html',\n    styleUrls: ['./tag.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-tag',\n        '[class.mc-disabled]': 'disabled'\n    },\n    inputs: ['color', 'disabled']\n})\nexport class McTag extends _McTagMixinBase implements CanColor, CanDisable {\n    @ContentChildren(McIcon) contentChildren: QueryList<McIcon>;\n\n    nativeElement: HTMLElement;\n\n    private _disabled: boolean = false;\n\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this.disabled) { this._disabled = value; }\n    }\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-left-icon');\n                }\n\n                if (iconElement.previousSibling) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-right-icon');\n                }\n            }\n        } else if (icons.length > 1) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTag } from './tag.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McTag\n    ],\n    declarations: [\n        McTag\n    ]\n})\nexport class McTagModule {}\n","import {\n    Directive, DoCheck, ElementRef, Inject,\n    Input, OnChanges, OnDestroy, Optional,\n    Self, InjectionToken, NgZone, OnInit\n} from '@angular/core';\nimport { FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { fromEvent, Subscription, Subject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\n\nexport const MC_TEXTAREA_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_TEXTAREA_VALUE_ACCESSOR');\n\nlet nextUniqueId = 0;\n\nconst ROW_SEPARATOR = '\\n';\n\nexport class McTextareaBase {\n    constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n                public _parentForm: NgForm,\n                public _parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McTextareaMixinBase: CanUpdateErrorStateCtor & typeof McTextareaBase = mixinErrorState(McTextareaBase);\n\n@Directive({\n    selector: 'textarea[mcTextarea]',\n    exportAs: 'mcTextarea',\n    host: {\n        class: 'mc-textarea',\n        '[class.mc-textarea-resizable]': '!canGrow',\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': 'focusChanged(false)',\n        '(focus)': 'focusChanged(true)'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McTextarea }]\n})\nexport class McTextarea extends McTextareaMixinBase implements McFormFieldControl<any>, OnInit, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    @Input() canGrow: boolean = true;\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-textarea';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this.uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this.valueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this.valueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected uid = `mc-textsrea-${nextUniqueId++}`;\n    protected previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n\n    private valueAccessor: { value: any };\n    private growSubscription: Subscription;\n\n    private lineHeight: number = 0;\n    private freeRowsHeight: number = 0;\n    private minHeight: number = 0;\n\n    constructor(protected elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_TEXTAREA_VALUE_ACCESSOR) inputValueAccessor: any,\n                private ngZone: NgZone) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the textarea value\n        // accessor.\n        this.valueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        const growObserver = fromEvent(elementRef.nativeElement, 'input')\n            /*.pipe(\n                map((event: any) => this.getGrowHeight()),\n                // map((event: any) => event.target.scrollHeight),\n                distinctUntilChanged()\n            )*/;\n        this.growSubscription = growObserver.subscribe(this.grow.bind(this));\n    }\n\n    ngOnInit() {\n        setTimeout(() => this.grow(), 0);\n        this.lineHeight = parseInt(getComputedStyle(this.elementRef.nativeElement).lineHeight!, 10);\n\n        const paddingTop = parseInt(getComputedStyle(this.elementRef.nativeElement).paddingTop!, 10);\n        const paddingBottom = parseInt(getComputedStyle(this.elementRef.nativeElement).paddingBottom!, 10);\n\n        // tslint:disable-next-line:no-magic-numbers\n        this.minHeight = this.lineHeight * 2 + paddingTop + paddingBottom;\n        this.freeRowsHeight = this.lineHeight;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        this.growSubscription.unsubscribe();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    /** Grow textarea height to avoid vertical scroll  */\n    grow() {\n        if (!this.canGrow) {\n            return;\n        }\n\n        this.ngZone.runOutsideAngular(() => {\n            const textarea = this.elementRef.nativeElement;\n\n            const outerHeight = parseInt(window.getComputedStyle(textarea).height!, 10);\n            const diff = outerHeight - textarea.clientHeight;\n\n            textarea.style.height = 0; // this line is important to height recalculation\n\n            const height = Math.max(this.minHeight, textarea.scrollHeight + diff + this.freeRowsHeight);\n            textarea.style.height = `${height}px`;\n        });\n    }\n\n    /** Focuses the textarea. */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the textarea changes. */\n    focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native textarea `value` property. */\n    protected dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the textarea is invalid based on the native validation. */\n    protected isBadInput(): boolean {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this.elementRef.nativeElement as HTMLTextAreaElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private getGrowHeight(): number {\n        const textarea = this.elementRef.nativeElement;\n        const outerHeight = parseInt(window.getComputedStyle(textarea).height!.toString(), 10);\n        const diff = outerHeight - textarea.clientHeight;\n\n        return Math.max(this.minHeight, textarea.scrollHeight + diff);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McTextarea } from './textarea.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McTextarea],\n    declarations: [McTextarea]\n})\nexport class McTextareaModule {\n}\n","import {\n    Directive,\n    DoCheck,\n    ElementRef,\n    forwardRef,\n    Inject,\n    InjectionToken,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Renderer2,\n    Self\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroupDirective,\n    NG_VALIDATORS,\n    NgControl,\n    NgForm,\n    ValidationErrors,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport {\n    noop,\n    Subject\n} from 'rxjs';\n\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\n\nimport {\n    ARROW_DOWN_KEYCODE,\n    ARROW_LEFT_KEYCODE,\n    ARROW_RIGHT_KEYCODE,\n    ARROW_UP_KEYCODE,\n    DEFAULT_TIME_FORMAT,\n    HOURS_PER_DAY,\n    HOURS_MINUTES_REGEXP,\n    HOURS_MINUTES_SECONDS_REGEXP,\n    HOURS_ONLY_REGEXP,\n    MINUTES_PER_HOUR,\n    SECONDS_PER_MINUTE,\n    TIMEFORMAT_PLACEHOLDERS,\n    TimeFormats,\n    TimeParts\n} from './timepicker.constants';\n\n\nlet uniqueComponentIdSuffix: number = 0;\nlet validatorOnChange: () => void = noop;\nlet validator: ValidatorFn | null = () => null;\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n\nexport class McTimepickerBase {\n    constructor(\n        public _defaultErrorStateMatcher: ErrorStateMatcher,\n        public _parentForm: NgForm,\n        public _parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl) { }\n}\n\n// tslint:disable-next-line naming-convention\nexport const McTimepickerMixinBase:\n    CanUpdateErrorStateCtor &\n    typeof McTimepickerBase = mixinErrorState(McTimepickerBase);\n\n@Directive({\n    selector: 'input[mcTimepicker]',\n    exportAs: 'mcTimepickerInput',\n    host: {\n        class: 'mc-timepicker mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '[attr.time-format]': 'timeFormat',\n        '[attr.min-time]': 'minTime',\n        '[attr.max-time]': 'maxTime',\n        '[attr.value]': 'value',\n        '(blur)': 'onBlur()',\n        '(focus)': 'focusChanged(true)',\n        '(input)': 'onInput()',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    },\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useValue: {\n                validate(c) { return validator ? validator(c) : null; },\n                registerOnValidatorChange(fn: () => void): void { validatorOnChange = fn; }\n            },\n            multi: true\n        },\n        {\n            provide: McFormFieldControl,\n            useExisting: forwardRef(() => McTimepicker)\n        }\n    ]\n\n})\nexport class McTimepicker extends McTimepickerMixinBase\n    implements McFormFieldControl<any>,\n        OnChanges,\n        OnDestroy,\n        DoCheck,\n        CanUpdateErrorState,\n        ControlValueAccessor {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-timepicker';\n\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) { return this.ngControl.disabled; }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n        }\n\n        this.stateChanges.next();\n    }\n\n    @Input()\n    get id(): string { return this._id; }\n\n    set id(value: string) { this._id = value || this.uid; }\n\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean { return this._required; }\n\n    set required(value: boolean) { this._required = coerceBooleanProperty(value); }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string { return this.inputValueAccessor.value; }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this.inputValueAccessor.value = value;\n            this.applyInputChanges();\n        }\n    }\n\n    @Input('time-format')\n    get timeFormat(): TimeFormats { return this._timeFormat; }\n\n    set timeFormat(formatValue: TimeFormats) {\n        this._timeFormat = Object\n            .keys(TimeFormats)\n            .map((timeFormatKey) => TimeFormats[timeFormatKey])\n            .indexOf(formatValue) > -1 ? formatValue : DEFAULT_TIME_FORMAT;\n\n        validatorOnChange();\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[this._timeFormat];\n    }\n\n    @Input('min-time')\n    get minTime(): string | null { return this._minTime; }\n\n    set minTime(minValue: string | null) {\n        this._minTime = minValue;\n        this.minDateTime = minValue !== null ? this.getDateFromTimeString(minValue) : undefined;\n        validatorOnChange();\n    }\n\n    @Input('max-time')\n    get maxTime(): string | null { return this._maxTime; }\n\n    set maxTime(maxValue: string | null) {\n        this._maxTime = maxValue;\n        this.maxDateTime = maxValue !== null ? this.getDateFromTimeString(maxValue) : undefined;\n        validatorOnChange();\n    }\n\n    private _id: string;\n    private readonly uid = `mc-timepicker-${uniqueComponentIdSuffix++}`;\n    private _disabled: boolean;\n    private _required: boolean;\n    private previousNativeValue: any;\n    private readonly inputValueAccessor: { value: any };\n    private onChange: (value: any) => void;\n    private onTouched: () => void;\n    private _timeFormat: TimeFormats;\n    private _minTime: string | null = null;\n    private minDateTime: Date | undefined;\n    private _maxTime: string | null = null;\n    private maxDateTime: Date | undefined;\n    private currentDateTimeInput: Date | undefined;\n\n    constructor(private readonly elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any,\n                private readonly renderer: Renderer2) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this.inputValueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n        this.onChange = noop;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[DEFAULT_TIME_FORMAT];\n\n        // Instead of NG_VALUE_ACCESSOR (https://github.com/angular/material2/issues/8158#issuecomment-344618103)\n        if (this.ngControl) { this.ngControl.valueAccessor = this; }\n\n        // Substitute initial empty validator with validator linked to directive object instance (workaround)\n        validator = Validators.compose([\n            () => this.parseValidator(),\n            () => this.minTimeValidator(),\n            () => this.maxTimeValidator()\n        ]);\n    }\n\n    ngOnChanges(): void {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck(): void {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    focusChanged(isFocused: boolean): void {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.onTouched();\n            this.stateChanges.next();\n        }\n    }\n\n    onBlur() {\n        this.applyInputChanges();\n        this.focusChanged(false);\n    }\n\n    onPaste($event) {\n        $event.preventDefault();\n        const clipboardUserInput: string = $event.clipboardData.getData('text');\n\n        if (this.getDateFromTimeString(clipboardUserInput) === undefined) { return; }\n\n        this.elementRef.nativeElement.value = clipboardUserInput;\n        this.onInput();\n    }\n\n    onInput() {\n        const initialCursorStart: number = this.elementRef.nativeElement.selectionStart;\n        const initialCursorEnd: number = this.elementRef.nativeElement.selectionEnd;\n        let isAutocompleteTriggered: boolean = false;\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(this.elementRef.nativeElement.value);\n\n        // tslint:disable no-magic-numbers\n        if (hoursOnly &&\n            hoursOnly[1] &&\n            hoursOnly[1].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutes &&\n            hoursAndMinutes[1].length === 1 &&\n            hoursAndMinutes[2] &&\n            hoursAndMinutes[2].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutesAndSeconds &&\n            hoursAndMinutesAndSeconds[1].length === 2 &&\n            hoursAndMinutesAndSeconds[2].length === 2 &&\n            hoursAndMinutesAndSeconds[3] &&\n            hoursAndMinutesAndSeconds[3].length === 2) {\n            isAutocompleteTriggered = true;\n        }\n        // tslint:enable no-magic-numbers\n\n        this.applyInputChanges({ doTimestringReformat: isAutocompleteTriggered });\n\n        this.elementRef.nativeElement.selectionStart = initialCursorStart;\n        this.elementRef.nativeElement.selectionEnd = initialCursorEnd;\n\n        if (isAutocompleteTriggered && this.ngControl.errors === null) {\n            this.createSelectionOfTimeComponentInInput(initialCursorStart + 1);\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    writeValue(value: Date | null): void {\n        if (value !== null) {\n            this.renderer.setProperty(this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(value, this.timeFormat)\n            );\n        }\n        this.onChange(value || null);\n        this.applyInputChanges();\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        const keyCode: string = this.getKeyCode(event);\n\n        if (keyCode === ARROW_UP_KEYCODE || keyCode === ARROW_DOWN_KEYCODE) {\n            this.upDownTimeByArrowKeys(event);\n        }\n        if (keyCode === ARROW_LEFT_KEYCODE || keyCode === ARROW_RIGHT_KEYCODE) {\n            this.switchSelectionBetweenTimeparts(event);\n        }\n    }\n\n    registerOnChange(fn: (value: Date) => void): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    private dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    private isBadInput(): boolean {\n        const validity = (<HTMLInputElement> this.elementRef.nativeElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private applyInputChanges(applyParams: {\n        changedTime?: Date;\n        doTimestringReformat?: boolean;\n    } = {}): void {\n        const { changedTime, doTimestringReformat = true } = applyParams;\n\n        const timeToApply: Date | undefined = changedTime ||\n            this.getDateFromTimeString(this.elementRef.nativeElement.value);\n        this.currentDateTimeInput = timeToApply;\n\n        if (doTimestringReformat && timeToApply !== undefined) {\n            const selectionStart: number = this.elementRef.nativeElement.selectionStart;\n            const selectionEnd: number = this.elementRef.nativeElement.selectionEnd;\n            this.renderer.setProperty(\n                this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(timeToApply, this.timeFormat));\n            this.elementRef.nativeElement.selectionStart = selectionStart;\n            this.elementRef.nativeElement.selectionEnd = selectionEnd;\n        }\n\n        (<FormControl> this.ngControl.control).updateValueAndValidity();\n        const result = this.ngControl.errors === null && timeToApply !== undefined ? timeToApply : null;\n        this.onChange(result);\n        this.stateChanges.next();\n    }\n\n    private upDownTimeByArrowKeys(event: KeyboardEvent): void {\n        event.preventDefault();\n\n        let changedTime: Date | undefined = this.currentDateTimeInput;\n        if (changedTime !== undefined) {\n            const cursorPos = this.elementRef.nativeElement.selectionStart;\n\n            const modifiedTimePart = this.getTimeEditMetrics(cursorPos)\n                .modifiedTimePart;\n            const keyCode: string = this.getKeyCode(event);\n            if (keyCode === ARROW_UP_KEYCODE) { changedTime = this.incrementTime(changedTime, modifiedTimePart); }\n            if (keyCode === ARROW_DOWN_KEYCODE) { changedTime = this.decrementTime(changedTime, modifiedTimePart); }\n            this.applyInputChanges({ changedTime });\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    private switchSelectionBetweenTimeparts(event: KeyboardEvent): void {\n        const changedTime: Date | undefined = this.currentDateTimeInput;\n        const keyCode: string = this.getKeyCode(event);\n\n        if (changedTime !== undefined) {\n            let cursorPos: number = this.elementRef.nativeElement.selectionStart;\n            if (keyCode === ARROW_LEFT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfPrevTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            } else if (keyCode === ARROW_RIGHT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfNextTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            }\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    /**\n     * @description Microsoft EDGE doesn't support KeyboaedEvent.code thus we need this helper\n     */\n    private getKeyCode(event: KeyboardEvent): string {\n        return event.code || event.key;\n    }\n\n    private createSelectionOfTimeComponentInInput(cursorPos: number): void {\n        setTimeout(() => {\n            const newEditParams = this.getTimeEditMetrics(cursorPos);\n            this.elementRef.nativeElement.selectionStart = newEditParams.cursorStartPosition;\n            this.elementRef.nativeElement.selectionEnd = newEditParams.cursorEndPosition;\n        });\n    }\n\n    private incrementTime(dateVal: Date,\n                          whatToIncrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToIncrement) {\n            case TimeParts.hours:\n                hours++;\n                break;\n            case TimeParts.minutes:\n                minutes++;\n                break;\n            case TimeParts.seconds:\n                seconds++;\n                break;\n            default:\n        }\n\n        if (seconds > SECONDS_PER_MINUTE) { seconds = 0; }\n\n        if (minutes > MINUTES_PER_HOUR) { minutes = 0; }\n\n        if (hours > HOURS_PER_DAY) { hours = 0; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    /**\n     * @description Decrement part of time\n     */\n    private decrementTime(dateVal: Date,\n                          whatToDecrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToDecrement) {\n            case TimeParts.hours:\n                hours--;\n                break;\n            case TimeParts.minutes:\n                minutes--;\n                break;\n            case TimeParts.seconds:\n                seconds--;\n                break;\n            default:\n        }\n\n        if (seconds < 0) { seconds = SECONDS_PER_MINUTE; }\n\n        if (minutes < 0) { minutes = MINUTES_PER_HOUR; }\n\n        if (hours < 0) { hours = HOURS_PER_DAY; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    private getCursorPositionOfPrevTimePartStart(cursorPos: number, timeString: string): number {\n        return cursorPos === 0 ? timeString.length : cursorPos - 1;\n    }\n\n    private getCursorPositionOfNextTimePartStart(cursorPos: number,\n                                                 timeString: string,\n                                                 timeDevider: string = ':'): number {\n        const nextDividerPos: number = timeString.indexOf(timeDevider, cursorPos);\n\n        return nextDividerPos !== undefined ? nextDividerPos + 1 : 0;\n    }\n\n    /**\n     * @description Get params for arrow-keys (up/down) time valie edit.\n     * @param cursorPosition Current cursor position in timeString\n     */\n    private getTimeEditMetrics(cursorPosition: number): {\n        modifiedTimePart: TimeParts;\n        cursorStartPosition: number;\n        cursorEndPosition: number;\n    } {\n        const timeString: string = this.elementRef.nativeElement.value;\n        let modifiedTimePart: TimeParts;\n        let cursorStartPosition: number;\n        let cursorEndPosition: number;\n        const hoursIndex = 0;\n        const minutesIndex = timeString.indexOf(':', hoursIndex + 1);\n        const secondsIndex = minutesIndex !== -1 ? timeString.indexOf(':', minutesIndex + 1) : -1;\n\n        if (secondsIndex !== -1 && cursorPosition > secondsIndex) {\n            modifiedTimePart = TimeParts.seconds;\n            cursorStartPosition = secondsIndex + 1;\n            cursorEndPosition = timeString.length;\n        } else if (minutesIndex !== -1 && cursorPosition > minutesIndex) {\n            modifiedTimePart = TimeParts.minutes;\n            cursorStartPosition = minutesIndex + 1;\n            cursorEndPosition = secondsIndex > -1 ? secondsIndex : timeString.length;\n        } else {\n            modifiedTimePart = TimeParts.hours;\n            cursorStartPosition = hoursIndex;\n            cursorEndPosition = minutesIndex !== -1 ? minutesIndex : timeString.length;\n        }\n\n        return {\n            modifiedTimePart,\n            cursorStartPosition,\n            cursorEndPosition\n        };\n    }\n\n    /**\n     * @description Create time string for displaying inside input element of UI\n     */\n    private getTimeStringFromDate(tempVal: Date,\n                                  timeFormat: TimeFormats = DEFAULT_TIME_FORMAT): string {\n        const hours: string = this.getNumberWithLeadingZero(tempVal.getHours());\n        const minutes: string = this.getNumberWithLeadingZero(tempVal.getMinutes());\n        const seconds: string = this.getNumberWithLeadingZero(tempVal.getSeconds());\n\n        const formattedTimeGenerators = {\n            [TimeFormats.HHmm]: () => `${hours}:${minutes}`,\n            [TimeFormats.HHmmss]: () => `${hours}:${minutes}:${seconds}`\n        };\n\n        return formattedTimeGenerators[timeFormat]();\n    }\n\n    private getParsedTimeParts(timeString: string): {\n        hoursOnly: any;\n        hoursAndMinutes: any;\n        hoursAndMinutesAndSeconds: any;\n    } {\n        const hoursAndMinutesAndSeconds = timeString.match(HOURS_MINUTES_SECONDS_REGEXP);\n        const hoursAndMinutes = timeString.match(HOURS_MINUTES_REGEXP);\n        const hoursOnly = timeString.match(HOURS_ONLY_REGEXP);\n\n        return {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        };\n    }\n\n    /**\n     * @description Create Date object from separate parts of time\n     */\n    private getDateFromTimeDigits(hours: number, minutes: number, seconds: number = 0): Date | undefined {\n        return this.getDateFromTimeString(`${hours}:${minutes}:${seconds}`);\n    }\n\n    private getDateFromTimeString(timeString: string | undefined): Date | undefined {\n        // TODO Use moment-js\n        if (timeString === undefined) { return; }\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(timeString);\n\n        if (timeString.trim().length === 0 ||\n            hoursOnly === null && hoursAndMinutes === null && hoursAndMinutesAndSeconds === null) {\n            return;\n        }\n\n        // tslint:disable no-magic-numbers\n        let hours: number = 0;\n        let minutes: number = 0;\n        let seconds: number = 0;\n\n        if (hoursOnly) {\n            hours = Number(hoursOnly[1]);\n        } else if (hoursAndMinutes) {\n            hours = Number(hoursAndMinutes[1]);\n            minutes = Number(hoursAndMinutes[2]);\n        } else if (hoursAndMinutesAndSeconds) {\n            hours = Number(hoursAndMinutesAndSeconds[1]);\n            minutes = Number(hoursAndMinutesAndSeconds[2]);\n            seconds = Number(hoursAndMinutesAndSeconds[3]);\n        }\n        // const timestamp: number = Date.parse(fullDateString);\n        const resultDate: Date = new Date(1970, 0, 1, hours, minutes, seconds);\n        // tslint:enable no-magic-numbers\n\n        return isNaN(resultDate.getTime()) ? undefined : resultDate;\n    }\n\n    private getNumberWithLeadingZero(digit: number): string {\n        const MAX_DIGIT_WITH_LEADING_ZERO: number = 9;\n\n        return digit > MAX_DIGIT_WITH_LEADING_ZERO ? `${digit}` : `0${digit}`;\n    }\n\n    private getTimeDigitsFromDate(dateVal: Date): { hours: number; minutes: number; seconds: number } {\n        return {\n            hours: dateVal.getHours(),\n            minutes: dateVal.getMinutes(),\n            seconds: dateVal.getSeconds()\n        };\n    }\n\n    private parseValidator(): ValidationErrors | null {\n        return this.currentDateTimeInput === undefined ?\n            { mcTimepickerParse: { text: this.elementRef.nativeElement.value } } :\n            null;\n    }\n\n    private minTimeValidator(): ValidationErrors | null {\n\n        if (this.currentDateTimeInput !== undefined &&\n            this.minDateTime !== undefined &&\n            this.isTimeLowerThenMin(this.currentDateTimeInput)) {\n            return { mcTimepickerLowerThenMintime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private maxTimeValidator(): ValidationErrors | null {\n        if (this.currentDateTimeInput !== undefined &&\n            this.maxDateTime !== undefined &&\n            this.isTimeGreaterThenMax(this.currentDateTimeInput)) {\n            return { mcTimepickerHigherThenMaxtime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private isTimeLowerThenMin(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.minDateTime).getTime() < 0;\n    }\n\n    private isTimeGreaterThenMax(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.maxDateTime).getTime() >= 0;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTimepicker } from './timepicker';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        FormsModule\n    ],\n    declarations: [\n        McTimepicker\n    ],\n    exports: [\n        McTimepicker\n    ]\n})\nexport class McTimepickerModule {}\n","import {\n    animate,\n    AnimationTriggerMetadata,\n    state,\n    style,\n    transition,\n    trigger,\n    query,\n    animateChild,\n    group\n} from '@angular/animations';\n\n\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n */\nexport const mcSelectAnimations: {\n    readonly transformPanel: AnimationTriggerMetadata;\n    readonly fadeInContent: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        transition('void => *', group([\n            query('@fadeInContent', animateChild()),\n            animate('150ms cubic-bezier(0.25, 0.8, 0.25, 1)')\n        ])),\n        transition('* => void', [\n            animate('250ms 100ms linear', style({ opacity: 0 }))\n        ])\n    ]),\n\n    /**\n     * This animation fades in the background color and text content of the\n     * select's options. It is time delayed to occur 100ms after the overlay\n     * panel has transformed in.\n     */\n    fadeInContent: trigger('fadeInContent', [\n        state('showing', style({ opacity: 1 })),\n        transition('void => showing', [\n            style({ opacity: 0 }),\n            animate('150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const transformPanel = mcSelectAnimations.transformPanel;\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const fadeInContent = mcSelectAnimations.fadeInContent;\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, EventEmitter, forwardRef, Input, IterableDiffer,\n    IterableDiffers, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    Directive, ElementRef, Inject\n} from '@angular/core';\nimport { NodeDef, ViewData } from '@angular/core/src/view';\n\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { CdkTreeNode, CdkTree, CdkTreeNodeOutlet } from '@ptsecurity/cdk/tree';\n\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\n\nimport { END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n/**\n * Wrapper for the CdkTree node with Material design styles.\n */\n@Directive({\n    exportAs: 'mcTreeNodeOption',\n    selector: 'mc-tree-node-option',\n    host: {\n        tabindex: '-1',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '[attr.aria-expanded]': 'isExpanded',\n        '[attr.aria-level]': 'role === \"treeitem\" ? level : null',\n        class: 'mc-tree-node',\n\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n\n        '(click)': '_handleClick()'\n    },\n    providers: [\n        { provide: CdkTreeNode, useExisting: McTreeNodeOption }\n    ]\n})\nexport class McTreeNodeOption<T> extends CdkTreeNode<T> implements CanDisable {\n    @Input() role: 'treeitem' | 'group' = 'treeitem';\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.treeSelection.selectedOptions && this.treeSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            // this.treeSelection._reportValueChange();\n        }\n    }\n\n    private _hasFocus: boolean = false;\n\n    private _disabled: boolean = false;\n    private _selected: boolean = false;\n\n    constructor(\n        protected _elementRef: ElementRef,\n        @Inject(forwardRef(() => McTreeSelection))\n        protected treeSelection: McTreeSelection<T>\n    ) {\n        super(_elementRef, treeSelection);\n    }\n\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n\n        this.treeSelection.setFocusedOption(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.treeSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.treeSelection.selectedOptions.select(this);\n        } else {\n            this.treeSelection.selectedOptions.deselect(this);\n        }\n\n        // this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleFocus(): void {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur(): void {\n        this._hasFocus = false;\n    }\n\n    _handleClick(): void {\n        if (this.disabled) { return; }\n\n        this.treeSelection.setFocusedOption(this);\n    }\n}\n\nexport const _McTreeSelectionBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    typeof CdkTree\n    = mixinTabIndex(mixinDisabled(CdkTree));\n\nexport class McTreeNavigationChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\nexport class McTreeSelectionChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\n@Component({\n    exportAs: 'mcTreeSelection',\n    selector: 'mc-tree-selection',\n    template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n    host: {\n        '[tabIndex]': 'tabIndex',\n        class: 'mc-tree-selection',\n        role: 'tree-selection',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    styleUrls: ['./tree.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: CdkTree, useExisting: McTreeSelection }]\n})\nexport class McTreeSelection<T> extends _McTreeSelectionBase<T>\n    implements AfterContentInit, CanDisable, HasTabIndex {\n    // Outlets within the tree's template where the dataNodes will be inserted.\n    @ViewChild(CdkTreeNodeOutlet) _nodeOutlet: CdkTreeNodeOutlet;\n\n    @ContentChildren(forwardRef(() => McTreeNodeOption)) options: QueryList<McTreeNodeOption<T>>;\n\n    _keyManager: FocusKeyManager<McTreeNodeOption<T>>;\n\n    selectedOptions: SelectionModel<McTreeNodeOption<T>>;\n\n    _disabled: boolean = false;\n    tabIndex: number;\n    multiple: boolean;\n    autoSelect: boolean;\n    noUnselect: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(rawValue: boolean) {\n        const value = toBoolean(rawValue);\n\n        if (this._disabled !== value) {\n            this._disabled = value;\n\n            if (this._disabled) {\n                console.log('need disable all options');\n            } else {\n                console.log('need enable all options');\n            }\n        }\n    }\n\n    @Output() readonly navigationChange = new EventEmitter<McTreeNavigationChange>();\n\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectionChange>();\n\n    constructor(\n        private _elementRef: ElementRef,\n        _differs: IterableDiffers,\n        _changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('multiple') multiple: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string\n    ) {\n        super(_differs, _changeDetectorRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.selectedOptions = new SelectionModel<McTreeNodeOption<T>>(this.multiple);\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case LEFT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.collapse(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case RIGHT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.expand(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                this._keyManager.setPreviousPageItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                this._keyManager.setNextPageItemActive();\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    ngAfterContentInit(): void {\n        this._keyManager = new FocusKeyManager<McTreeNodeOption<T>>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(true)\n            .withHorizontalOrientation(null);\n    }\n\n    updateScrollSize(): void {\n        if (!this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    setFocusedOption(option: McTreeNodeOption<T>): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitNavigationEvent(option);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McTreeNodeOption<T> = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    renderNodeChanges(\n        data: T[],\n        dataDiffer: IterableDiffer<T> = this._dataDiffer,\n        viewContainer: any = this._nodeOutlet.viewContainer,\n        parentData?: T\n    ) {\n        super.renderNodeChanges(data, dataDiffer, viewContainer, parentData);\n\n        const arrayOfInstances = [];\n\n        viewContainer._embeddedViews.forEach((view: ViewData) => {\n            const viewDef = view.def;\n\n            viewDef.nodes.forEach((node: NodeDef) => {\n                if (viewDef.nodeMatchedQueries === node.matchedQueryIds) {\n                    const nodeData: any = view.nodes[node.nodeIndex];\n\n                    arrayOfInstances.push(nodeData.instance as never);\n                }\n            });\n        });\n\n        if (this.options) {\n            this.options.reset(arrayOfInstances);\n            this.options.notifyOnChanges();\n        }\n\n        this.updateScrollSize();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _emitNavigationEvent(option: McTreeNodeOption<T>): void {\n        this.navigationChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    _emitChangeEvent(option: McTreeNodeOption<T>): void {\n        this.selectionChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    private _canDeselectLast(option: McTreeNodeOption<T>): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && option.selected);\n    }\n}\n\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\n\nimport { McTreeNodeDef } from './node';\nimport { McTreeNodePadding } from './padding';\nimport { McTreeSelection, McTreeNodeOption } from './tree-selection';\n\n\nconst MC_TREE_DIRECTIVES = [\n    McTreeNodeDef,\n    McTreeNodePadding,\n    McTreeSelection,\n    McTreeNodeOption\n];\n\n@NgModule({\n    imports: [CommonModule, CdkTreeModule],\n    exports: MC_TREE_DIRECTIVES,\n    declarations: MC_TREE_DIRECTIVES\n})\nexport class McTreeModule {}\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { FlatTreeControl, ITreeControl } from '@ptsecurity/cdk/tree';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nexport class McTreeFlattener<T, F> {\n\n    constructor(public transformFunction: (node: T, level: number) => F,\n                public getLevel: (node: F) => number,\n                public isExpandable: (node: F) => boolean,\n                public getChildren: (node: T) => Observable<T[]>) {\n    }\n\n    _flattenNode(node: T, level: number,\n                 resultNodes: F[], parentMap: boolean[]): F[] {\n        const flatNode = this.transformFunction(node, level);\n        resultNodes.push(flatNode);\n\n        if (this.isExpandable(flatNode)) {\n            this.getChildren(node).pipe(take(1)).subscribe((children) => {\n                children.forEach((child, index) => {\n                    const childParentMap: boolean[] = parentMap.slice();\n                    childParentMap.push(index !== children.length - 1);\n                    this._flattenNode(child, level + 1, resultNodes, childParentMap);\n                });\n            });\n        }\n\n        return resultNodes;\n    }\n\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData: T[]): F[] {\n        const resultNodes: F[] = [];\n        structuredData.forEach((node) => this._flattenNode(node, 0, resultNodes, []));\n\n        return resultNodes;\n    }\n\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes: F[], treeControl: ITreeControl<F>): F[] {\n        const results: F[] = [];\n        const currentExpand: boolean[] = [];\n        currentExpand[0] = true;\n\n        nodes.forEach((node) => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n\n            if (expand) { results.push(node); }\n\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n\n        return results;\n    }\n}\n\n\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `McTree`.\n * The nested tree nodes of type `T` are flattened through `MсTreeFlattener`, and converted\n * to type `F` for `McTree` to consume.\n */\nexport class McTreeFlatDataSource<T, F> extends DataSource<F> {\n    _flattenedData = new BehaviorSubject<F[]>([]);\n\n    _expandedData = new BehaviorSubject<F[]>([]);\n\n    _data: BehaviorSubject<T[]>;\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n        this._flattenedData.next(this.treeFlattener.flattenNodes(this.data));\n        this.treeControl.dataNodes = this._flattenedData.value;\n    }\n\n    constructor(private treeControl: FlatTreeControl<F>,\n                private treeFlattener: McTreeFlattener<T, F>,\n                initialData: T[] = []) {\n        super();\n        this._data = new BehaviorSubject<T[]>(initialData);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<F[]> {\n        const changes = [\n            collectionViewer.viewChange,\n            this.treeControl.expansionModel.onChange!,\n            this._flattenedData\n        ];\n\n        return merge(...changes).pipe(map(() => {\n            this._expandedData.next(\n                this.treeFlattener.expandFlattenedNodes(this._flattenedData.value, this.treeControl));\n\n            return this._expandedData.value;\n        }));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by ITreeControl and each non-leaf node.\n */\nexport class McTreeNestedDataSource<T> extends DataSource<T> {\n    _data = new BehaviorSubject<T[]>([]);\n\n    /**\n     * Data for the nested tree\n     */\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<T[]> {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map(() => this.data));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { Directive, TemplateRef } from '@angular/core';\n\n\n/** Decorates the `ng-template` tags and reads out the template from it. */\n@Directive({ selector: '[mcTabContent]' })\nexport class McTabContent {\n    constructor(public template: TemplateRef<any>) { }\n}\n","import { Directive } from '@angular/core';\nimport { CdkPortal } from '@ptsecurity/cdk/portal';\n\n\n/** Used to flag tab labels for use with the portal directive */\n@Directive({\n    selector: '[mc-tab-label], [mcTabLabel]'\n})\nexport class McTabLabel extends CdkPortal {}\n\n// TODO: workaround for https://github.com/angular/material2/issues/12760\n(McTabLabel as any).ctorParameters = () => (CdkPortal as any).ctorParameters;\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { TemplatePortal } from '@ptsecurity/cdk/portal';\nimport {\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { Subject } from 'rxjs';\n\nimport { McTabContent } from './tab-content';\nimport { McTabLabel } from './tab-label';\n\n\nexport class McTabBase {}\nexport const mcTabMixinBase: CanDisableCtor & typeof McTabBase = mixinDisabled(\n    McTabBase\n);\n\n@Component({\n    selector: 'mc-tab',\n    // Create a template for the content of the <mc-tab> so that we can grab a reference to this\n    // TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\n    // tab-group.\n    template: '<ng-template><ng-content></ng-content></ng-template>',\n    inputs: ['disabled'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcTab'\n})\nexport class McTab extends mcTabMixinBase\n    implements OnInit, CanDisable, OnChanges, OnDestroy {\n    /** @docs-private */\n    get content(): TemplatePortal | null {\n        return this.contentPortal;\n    }\n    /** Content for the tab label given by `<ng-template mc-tab-label>`. */\n    @ContentChild(McTabLabel)\n    templateLabel: McTabLabel;\n\n    /**\n     * Template provided in the tab content that will be used if present, used to enable lazy-loading\n     */\n    @ContentChild(McTabContent, { read: TemplateRef })\n    explicitContent: TemplateRef<any>;\n\n    /** Template inside the McTab view that contains an `<ng-content>`. */\n    @ViewChild(TemplateRef)\n    implicitContent: TemplateRef<any>;\n\n    /** Plain text label for the tab, used when there is no template label. */\n    @Input('label')\n    textLabel: string = '';\n\n    /** Aria label for the tab. */\n    @Input('aria-label')\n    ariaLabel: string;\n\n    /**\n     * Reference to the element that the tab is labelled by.\n     * Will be cleared if `aria-label` is set at the same time.\n     */\n    @Input('aria-labelledby')\n    ariaLabelledby: string;\n\n    /** Emits whenever the internal state of the tab changes. */\n    readonly stateChanges = new Subject<void>();\n\n    /**\n     * The relatively indexed position where 0 represents the center, negative is left, and positive\n     * represents the right.\n     */\n    position: number | null = null;\n\n    /**\n     * The initial relatively index origin of the tab if it was created and selected after there\n     * was already a selected tab. Provides context of what position the tab should originate from.\n     */\n    origin: number | null = null;\n\n    /**\n     * Whether the tab is currently active.\n     */\n    isActive = false;\n\n    /** Portal that will be the hosted content of the tab */\n    private contentPortal: TemplatePortal | null = null;\n\n    constructor(private viewContainerRef: ViewContainerRef) {\n        super();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (\n            changes.hasOwnProperty('textLabel') ||\n            changes.hasOwnProperty('disabled')\n        ) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngOnInit(): void {\n        this.contentPortal = new TemplatePortal(\n            this.explicitContent || this.implicitContent,\n            this.viewContainerRef\n        );\n    }\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\nexport const mcTabsAnimations: {\n    readonly translateTab: AnimationTriggerMetadata;\n} = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state(\n            'center, void, left-origin-center, right-origin-center',\n            style({ transform: 'none' })\n        ),\n\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state(\n            'left',\n            style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })\n        ),\n        state(\n            'right',\n            style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })\n        ),\n\n        transition(\n            '* => left, * => right, left => center, right => center',\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    Component,\n    ChangeDetectorRef,\n    Input,\n    Inject,\n    Output,\n    EventEmitter,\n    OnDestroy,\n    OnInit,\n    ElementRef,\n    Directive,\n    Optional,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ComponentFactoryResolver,\n    ViewContainerRef,\n    forwardRef,\n    ViewChild\n} from '@angular/core';\nimport { Directionality, Direction } from '@ptsecurity/cdk/bidi';\nimport { TemplatePortal, CdkPortalOutlet, PortalHostDirective } from '@ptsecurity/cdk/portal';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\nimport { mcTabsAnimations } from './tabs-animations';\n\n\n/**\n * These position states are used internally as animation states for the tab body. Setting the\n * position state to left, right, or center will transition the tab body from its current\n * position to its respective state. If there is not current position (void, in the case of a new\n * tab body), then there will be no transition animation to its state.\n *\n * In the case of a new tab body that should immediately be centered with an animating transition,\n * then left-origin-center or right-origin-center can be used, which will use left or right as its\n * psuedo-prior state.\n */\nexport type McTabBodyPositionState =\n    'left' | 'center' | 'right' | 'left-origin-center' | 'right-origin-center';\n\n/**\n * The origin state is an internally used state that is set on a new tab body indicating if it\n * began to the left or right of the prior selected index. For example, if the selected index was\n * set to 1, and a new tab is created and selected at index 2, then the tab body would have an\n * origin of right because its index was greater than the prior selected index.\n */\nexport type McTabBodyOriginState = 'left' | 'right';\n\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\n@Directive({\n    selector: '[mcTabBodyHost]'\n})\nexport class McTabBodyPortal extends CdkPortalOutlet implements OnInit, OnDestroy {\n    /** Subscription to events for when the tab body begins centering. */\n    private centeringSub = Subscription.EMPTY;\n    /** Subscription to events for when the tab body finishes leaving from center position. */\n    private leavingSub = Subscription.EMPTY;\n\n    constructor(\n        componentFactoryResolver: ComponentFactoryResolver,\n        viewContainerRef: ViewContainerRef,\n        @Inject(forwardRef(() => McTabBody)) private host: McTabBody) {\n        super(componentFactoryResolver, viewContainerRef);\n    }\n\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit(): void {\n        super.ngOnInit();\n\n        this.centeringSub = this.host.beforeCentering\n            .pipe(startWith(this.host.isCenterPosition(this.host.bodyPosition)))\n            .subscribe((isCentering: boolean) => {\n                if (isCentering && !this.hasAttached()) {\n                    this.attach(this.host.content);\n                }\n            });\n\n        this.leavingSub = this.host.afterLeavingCenter.subscribe(() => {\n            this.detach();\n        });\n    }\n\n    /** Clean up centering subscription. */\n    ngOnDestroy(): void {\n        super.ngOnDestroy();\n        this.centeringSub.unsubscribe();\n        this.leavingSub.unsubscribe();\n    }\n}\n\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\n@Component({\n    selector: 'mc-tab-body',\n    templateUrl: 'tab-body.html',\n    styleUrls: ['tab-body.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [mcTabsAnimations.translateTab],\n    host: {\n        class: 'mc-tab-body'\n    }\n})\nexport class McTabBody implements OnInit, OnDestroy {\n\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    @Input()\n    set position(position: number) {\n        this.positionIndex = position;\n        this.computePositionAnimationState();\n    }\n\n    /** Tab body position state. Used by the animation trigger for the current state. */\n    bodyPosition: McTabBodyPositionState;\n\n    /** Event emitted when the tab begins to animate towards the center as the active tab. */\n    @Output() readonly onCentering: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted before the centering of the tab begins. */\n    @Output() readonly beforeCentering: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted before the centering of the tab begins. */\n    @Output() readonly afterLeavingCenter: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the tab completes its animation towards the center. */\n    @Output() readonly onCentered: EventEmitter<void> = new EventEmitter<void>(true);\n\n    /** The portal host inside of this container into which the tab body content will be loaded. */\n    @ViewChild(PortalHostDirective) portalHost: PortalHostDirective;\n\n    /** The tab body content to display. */\n    @Input('content') content: TemplatePortal;\n\n    /** Position that will be used when the tab is immediately becoming visible after creation. */\n    @Input() origin: number;\n\n    // Note that the default value will always be overwritten by `McTabBody`, but we need one\n    // anyway to prevent the animations module from throwing an error if the body is used on its own.\n    /** Duration for the tab's animation. */\n    @Input() animationDuration: string = '0ms';\n\n    /** Current position of the tab-body in the tab-group. Zero means that the tab is visible. */\n    private positionIndex: number;\n\n    /** Subscription to the directionality change observable. */\n    private dirChangeSubscription = Subscription.EMPTY;\n\n    constructor(private elementRef: ElementRef<HTMLElement>,\n                @Optional() private dir: Directionality,\n                changeDetectorRef: ChangeDetectorRef) {\n\n        if (this.dir && changeDetectorRef) {\n            this.dirChangeSubscription = this.dir.change.subscribe((direction: Direction) => {\n                this.computePositionAnimationState(direction);\n                changeDetectorRef.markForCheck();\n            });\n        }\n    }\n\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n        if (this.bodyPosition === 'center' && this.origin != null) {\n            this.bodyPosition = this.computePositionFromOrigin();\n        }\n    }\n\n    ngOnDestroy() {\n        this.dirChangeSubscription.unsubscribe();\n    }\n\n    onTranslateTabStarted(e: AnimationEvent): void {\n        const isCentering = this.isCenterPosition(e.toState);\n        this.beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this.onCentering.emit(this.elementRef.nativeElement.clientHeight);\n        }\n    }\n\n    onTranslateTabComplete(e: AnimationEvent): void {\n        // If the transition to the center is complete, emit an event.\n        if (this.isCenterPosition(e.toState) && this.isCenterPosition(this.bodyPosition)) {\n            this.onCentered.emit();\n        }\n\n        if (this.isCenterPosition(e.fromState) && !this.isCenterPosition(this.bodyPosition)) {\n            this.afterLeavingCenter.emit();\n        }\n    }\n\n    /** The text direction of the containing app. */\n    getLayoutDirection(): Direction {\n        return this.dir && this.dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    /** Whether the provided position state is considered center, regardless of origin. */\n    isCenterPosition(position: McTabBodyPositionState | string): boolean {\n        return position === 'center' ||\n            position === 'left-origin-center' ||\n            position === 'right-origin-center';\n    }\n\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    private computePositionAnimationState(dir: Direction = this.getLayoutDirection()) {\n        if (this.positionIndex < 0) {\n            this.bodyPosition = dir === 'ltr' ? 'left' : 'right';\n        } else if (this.positionIndex > 0) {\n            this.bodyPosition = dir === 'ltr' ? 'right' : 'left';\n        } else {\n            this.bodyPosition = 'center';\n        }\n    }\n\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    private computePositionFromOrigin(): McTabBodyPositionState {\n        const dir = this.getLayoutDirection();\n\n        if ((dir === 'ltr' && this.origin <= 0) || (dir === 'rtl' && this.origin > 0)) {\n            return 'left-origin-center';\n        }\n\n        return 'right-origin-center';\n    }\n}\n","import { Directive, ElementRef } from '@angular/core';\nimport {\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\n\n\n// Boilerplate for applying mixins to McTabLabelWrapper.\n/** @docs-private */\nexport class McTabLabelWrapperBase {}\nexport const mcTabLabelWrapperMixinBase: CanDisableCtor &\n    typeof McTabLabelWrapperBase = mixinDisabled(McTabLabelWrapperBase);\n\n/**\n * Used in the `mc-tab-group` view to display tab labels.\n * @docs-private\n */\n@Directive({\n    selector: '[mcTabLabelWrapper]',\n    inputs: ['disabled'],\n    host: {\n        '[class.mc-disabled]': 'disabled',\n        '[attr.aria-disabled]': '!!disabled'\n    }\n})\nexport class McTabLabelWrapper extends mcTabLabelWrapperMixinBase implements CanDisable {\n    constructor(public elementRef: ElementRef) {\n        super();\n    }\n\n    /** Sets focus on the wrapper element */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    getOffsetLeft(): number {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n\n    getOffsetWidth(): number {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Input,\n    NgZone,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Direction, Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceNumberProperty } from '@ptsecurity/cdk/coercion';\nimport { END, ENTER, HOME, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { ViewportRuler } from '@ptsecurity/cdk/scrolling';\nimport { merge, of as observableOf, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { McTabLabelWrapper } from './tab-label-wrapper';\n\n\nconst VIEWPORT_THROTTLE_TIME = 150;\nconst SCROLL_DISTANCE_DELIMITER = 3;\n\n\n/**\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n\n// Boilerplate for applying mixins to McTabHeader.\n/** @docs-private */\nexport class McTabHeaderBase {}\n\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group.\n * When the tabs list's width exceeds the width of the header container,\n * then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\n@Component({\n    selector: 'mc-tab-header',\n    templateUrl: 'tab-header.html',\n    styleUrls: ['tab-header.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        class: 'mc-tab-header',\n        '[class.mc-tab-header__pagination-controls_enabled]':\n            'showPaginationControls',\n        '[class.mc-tab-header_rtl]': 'getLayoutDirection() == \\'rtl\\''\n    }\n})\nexport class McTabHeader extends McTabHeaderBase\n    implements AfterContentChecked, AfterContentInit, OnDestroy {\n    /** The index of the active tab. */\n    @Input()\n    get selectedIndex(): number {\n        return this._selectedIndex;\n    }\n    set selectedIndex(value: number) {\n        const coercedValue = coerceNumberProperty(value);\n        this.selectedIndexChanged = this._selectedIndex !== coercedValue;\n        this._selectedIndex = coercedValue;\n\n        if (this.keyManager) {\n            this.keyManager.updateActiveItem(coercedValue);\n        }\n    }\n\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex(): number {\n        return this.keyManager ? this.keyManager.activeItemIndex! : 0;\n    }\n\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value: number) {\n        if (\n            !this.isValidIndex(value) ||\n            this.focusIndex === value ||\n            !this.keyManager\n        ) {\n            return;\n        }\n\n        this.keyManager.setActiveItem(value);\n    }\n\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance(): number {\n        return this._scrollDistance;\n    }\n    set scrollDistance(v: number) {\n        this._scrollDistance = Math.max(\n            0,\n            Math.min(this.getMaxScrollDistance(), v)\n        );\n\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this.scrollDistanceChanged = true;\n        this.checkScrollingControls();\n    }\n\n    @ContentChildren(McTabLabelWrapper)\n    labelWrappers: QueryList<McTabLabelWrapper>;\n    @ViewChild('tabListContainer')\n    tabListContainer: ElementRef;\n    @ViewChild('tabList')\n    tabList: ElementRef;\n\n    /** Whether the controls for pagination should be displayed */\n    showPaginationControls = false;\n\n    /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n    disableScrollAfter = true;\n\n    /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n    disableScrollBefore = true;\n\n    /** Event emitted when the option is selected. */\n    @Output()\n    readonly selectFocusedIndex: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted when a label is focused. */\n    @Output()\n    readonly indexFocused: EventEmitter<number> = new EventEmitter<number>();\n\n    /** The distance in pixels that the tab labels should be translated to the left. */\n    private _scrollDistance = 0;\n\n    /** Whether the header should scroll to the selected index after the view has been checked. */\n    private selectedIndexChanged = false;\n\n    /** Emits when the component is destroyed. */\n    private readonly destroyed = new Subject<void>();\n\n    /**\n     * The number of tab labels that are displayed on the header. When this changes, the header\n     * should re-evaluate the scroll position.\n     */\n    private tabLabelCount: number;\n\n    /** Whether the scroll distance has changed and should be applied after the view is checked. */\n    private scrollDistanceChanged: boolean;\n\n    /** Used to manage focus between the tabs. */\n    private keyManager: FocusKeyManager<McTabLabelWrapper>;\n\n    /** Cached text content of the header. */\n    private currentTextContent: string;\n\n    private _selectedIndex: number = 0;\n\n    constructor(\n        private elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        private viewportRuler: ViewportRuler,\n        @Optional() private dir: Directionality,\n        private ngZone: NgZone\n    ) {\n        super();\n    }\n\n    ngAfterContentChecked(): void {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this.tabLabelCount !== this.labelWrappers.length) {\n            this.updatePagination();\n            this.tabLabelCount = this.labelWrappers.length;\n            this.changeDetectorRef.markForCheck();\n        }\n\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this.selectedIndexChanged) {\n            this.scrollToLabel(this._selectedIndex);\n            this.checkScrollingControls();\n            this.selectedIndexChanged = false;\n            this.changeDetectorRef.markForCheck();\n        }\n\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this.scrollDistanceChanged) {\n            this.updateTabScrollPosition();\n            this.scrollDistanceChanged = false;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    handleKeydown(event: KeyboardEvent) {\n        switch (event.keyCode) {\n            case HOME:\n                this.keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case END:\n                this.keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case ENTER:\n            case SPACE:\n                this.selectFocusedIndex.emit(this.focusIndex);\n                event.preventDefault();\n                break;\n            default:\n                this.keyManager.onKeydown(event);\n        }\n    }\n\n    ngAfterContentInit() {\n        const dirChange = this.dir ? this.dir.change : observableOf(null);\n        const resize = this.viewportRuler.change(VIEWPORT_THROTTLE_TIME);\n        const realign = () => {\n            this.updatePagination();\n        };\n\n        this.keyManager = new FocusKeyManager(this.labelWrappers)\n            .withHorizontalOrientation(this.getLayoutDirection())\n            .withWrap();\n\n        this.keyManager.updateActiveItem(0);\n\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame === undefined\n            ? realign()\n            : requestAnimationFrame(realign);\n\n        // On dir change or window resize, update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize)\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(() => {\n                realign();\n                this.keyManager.withHorizontalOrientation(\n                    this.getLayoutDirection()\n                );\n            });\n\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this.keyManager.change\n            .pipe(takeUntil(this.destroyed))\n            .subscribe((newFocusIndex) => {\n                this.indexFocused.emit(newFocusIndex);\n                this.setTabFocus(newFocusIndex);\n            });\n    }\n\n    ngOnDestroy() {\n        this.destroyed.next();\n        this.destroyed.complete();\n    }\n\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    onContentChanges() {\n        const textContent = this.elementRef.nativeElement.textContent;\n\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in.\n\n        if (textContent !== this.currentTextContent) {\n            this.currentTextContent = textContent;\n\n            const zoneCallback = () => {\n                this.updatePagination();\n                this.changeDetectorRef.markForCheck();\n            };\n\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            // TODO: Remove null check for `_ngZone` once it's a required parameter.\n            this.ngZone ? this.ngZone.run(zoneCallback) : zoneCallback();\n        }\n    }\n\n    /**\n     * Updating the view whether pagination should be enabled or not\n     *\n     * WARNING: Calling this method can be very costly in terms of performance.  It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        this.checkPaginationEnabled();\n        this.checkScrollingControls();\n        this.updateTabScrollPosition();\n    }\n\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    isValidIndex(index: number): boolean {\n        if (!this.labelWrappers) {\n            return true;\n        }\n\n        const tab = this.labelWrappers\n            ? this.labelWrappers.toArray()[index]\n            : null;\n\n        return !!tab && !tab.disabled;\n    }\n\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    setTabFocus(tabIndex: number) {\n        if (this.showPaginationControls) {\n            this.scrollToLabel(tabIndex);\n        }\n\n        if (this.labelWrappers && this.labelWrappers.length) {\n            this.labelWrappers.toArray()[tabIndex].focus();\n\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            const containerEl = this.tabListContainer.nativeElement;\n            const dir = this.getLayoutDirection();\n\n            if (dir === 'ltr') {\n                containerEl.scrollLeft = 0;\n            } else {\n                containerEl.scrollLeft =\n                    containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n\n    /** The layout direction of the containing app. */\n    getLayoutDirection(): Direction {\n        return this.dir && this.dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    updateTabScrollPosition() {\n        const scrollDistance = this.scrollDistance;\n        const translateX =\n            this.getLayoutDirection() === 'ltr'\n                ? -scrollDistance\n                : scrollDistance;\n\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer.\n        // See: https://github.com/angular/material2/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this.tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off.\n        this.tabList.nativeElement.scrollLeft = 0;\n    }\n\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    scrollHeader(scrollDir: ScrollDirection) {\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        this.scrollDistance +=\n            ((scrollDir === 'before' ? -1 : 1) * viewLength) / SCROLL_DISTANCE_DELIMITER;\n    }\n\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    scrollToLabel(labelIndex: number) {\n        const selectedLabel = this.labelWrappers\n            ? this.labelWrappers.toArray()[labelIndex]\n            : null;\n\n        if (!selectedLabel) {\n            return;\n        }\n\n        // The view length is the visible width of the tab labels.\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        let labelBeforePos: number;\n        let labelAfterPos: number;\n\n        if (this.getLayoutDirection() === 'ltr') {\n            labelBeforePos = selectedLabel.getOffsetLeft();\n            labelAfterPos = labelBeforePos + selectedLabel.getOffsetWidth();\n        } else {\n            labelAfterPos =\n                this.tabList.nativeElement.offsetWidth -\n                selectedLabel.getOffsetLeft();\n            labelBeforePos = labelAfterPos - selectedLabel.getOffsetWidth();\n        }\n\n        const beforeVisiblePos = this.scrollDistance;\n        const afterVisiblePos = this.scrollDistance + viewLength;\n\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -=\n                beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        } else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance +=\n                labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    checkPaginationEnabled() {\n        const isEnabled =\n            this.tabList.nativeElement.scrollWidth >\n            this.elementRef.nativeElement.offsetWidth;\n\n        if (!isEnabled) {\n            this.scrollDistance = 0;\n        }\n\n        if (isEnabled !== this.showPaginationControls) {\n            this.changeDetectorRef.markForCheck();\n        }\n\n        this.showPaginationControls = isEnabled;\n    }\n\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    checkScrollingControls() {\n        // Check if the pagination arrows should be activated.\n        this.disableScrollBefore = this.scrollDistance === 0;\n        this.disableScrollAfter =\n            this.scrollDistance === this.getMaxScrollDistance();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    getMaxScrollDistance(): number {\n        const lengthOfTabList = this.tabList.nativeElement.scrollWidth;\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        return lengthOfTabList - viewLength || 0;\n    }\n}\n","import { ComponentRef, Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\nimport { McModalComponent } from './modal.component';\nimport { ConfirmType, IModalOptions, IModalOptionsForService } from './modal.type';\n\n\n// A builder used for managing service creating modals\nexport class ModalBuilderForService {\n\n    // Modal ComponentRef, \"null\" means it has been destroyed\n    private modalRef: ComponentRef<McModalComponent>;\n    private overlayRef: OverlayRef;\n\n    constructor(private overlay: Overlay, options: IModalOptionsForService = {}) {\n        this.createModal();\n\n        if (!('mcGetContainer' in options)) {\n            options.mcGetContainer = null;\n        }\n\n        this.changeProps(options);\n        this.modalRef.instance.open();\n        this.modalRef.instance.mcAfterClose.subscribe(() => this.destroyModal());\n\n        this.overlayRef.keydownEvents()\n            // @ts-ignore\n            .pipe(filter((event: KeyboardEvent) => {\n                return event.keyCode === ESCAPE && options.mcCloseByESC;\n            }))\n            .subscribe(() => this.modalRef.instance.close());\n    }\n\n    getInstance(): McModalComponent {\n        return this.modalRef && this.modalRef.instance;\n    }\n\n    destroyModal(): void {\n        if (this.modalRef) {\n            this.overlayRef.dispose();\n            // @ts-ignore\n            this.modalRef = null;\n        }\n    }\n\n    private changeProps(options: IModalOptions): void {\n        if (this.modalRef) {\n            // here not limit user's inputs at runtime\n            Object.assign(this.modalRef.instance, options);\n        }\n    }\n\n    // Create component to ApplicationRef\n    private createModal(): void {\n        this.overlayRef = this.overlay.create();\n        this.modalRef = this.overlayRef.attach(new ComponentPortal(McModalComponent));\n    }\n}\n\n@Injectable()\nexport class McModalService {\n    // Track of the current close modals (we assume invisible is close this time)\n    get openModals(): McModalRef[] {\n        return this.modalControl.openModals;\n    }\n\n    get afterAllClose(): Observable<void> {\n        return this.modalControl.afterAllClose.asObservable();\n    }\n\n    constructor(\n        private overlay: Overlay,\n        private modalControl: McModalControlService) {\n    }\n\n    // Closes all of the currently-open dialogs\n    closeAll(): void {\n        this.modalControl.closeAll();\n    }\n\n    create<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n\n        if (typeof options.mcOnCancel !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnCancel = () => {};\n        }\n\n        if (!('mcCloseByESC' in options)) {\n            options.mcCloseByESC = true;\n        }\n\n\n        if (!('mcWidth' in options)) {\n            // tslint:disable-next-line\n            options.mcWidth = 480;\n        }\n\n        return new ModalBuilderForService(this.overlay, options).getInstance();\n    }\n\n    confirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType = 'confirm'): McModalRef<T> {\n        if ('mcFooter' in options) {\n            console.warn(`The Confirm-Modal doesn't support \"mcFooter\", this property will be ignored.`);\n        }\n\n        // NOTE: only support function currently by calling confirm()\n        if (typeof options.mcOnOk !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnOk = () => {};\n        }\n\n        options.mcModalType = 'confirm';\n        options.mcClassName = `mc-confirm mc-confirm-${confirmType} ${options.mcClassName || ''}`;\n        options.mcMaskClosable = false;\n\n        return this.create(options);\n    }\n\n    success<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'success');\n    }\n\n    delete<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'warn');\n    }\n\n    private simpleConfirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType): McModalRef<T> {\n        // Remove the Cancel button if the user not specify a Cancel button\n        if (!('mcCancelText' in options)) {\n            // @ts-ignore\n            options.mcCancelText = null;\n        }\n\n        return this.confirm(options, confirmType);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { CssUnitPipe } from './css-unit.pipe';\nimport { McModalControlService } from './modal-control.service';\nimport { McModalComponent } from './modal.component';\nimport { McModalService } from './modal.service';\n\n\n@NgModule({\n    imports: [ CommonModule, OverlayModule, McButtonModule, McIconModule ],\n    exports: [ McModalComponent ],\n    declarations: [ McModalComponent, CssUnitPipe ],\n    entryComponents: [ McModalComponent ],\n    providers: [ McModalControlService, McModalService ]\n})\nexport class McModalModule { }\n","import { fromEvent, Observable, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport {\n    AfterViewInit,\n    Component, Directive,\n    ElementRef,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    ViewEncapsulation,\n    ContentChild,\n    TemplateRef,\n    ChangeDetectorRef,\n    ChangeDetectionStrategy,\n    ViewChild\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Platform } from '@ptsecurity/cdk/platform';\nimport { CanDisable, CanDisableCtor, mixinDisabled } from '@ptsecurity/mosaic/core';\n\n\nconst COLLAPSED_CLASS: string = 'mc-navbar-collapsed-title';\nconst MC_ICON = 'mc-icon';\nconst MC_NAVBAR = 'mc-navbar';\nconst MC_NAVBAR_CONTAINER = 'mc-navbar-container';\nconst MC_NAVBAR_ITEM = 'mc-navbar-item';\nconst MC_NAVBAR_BRAND = 'mc-navbar-brand';\nconst MC_NAVBAR_TITLE = 'mc-navbar-title';\nconst MC_NAVBAR_LOGO = 'mc-navbar-logo';\n\nexport type McNavbarContainerPositionType = 'left' | 'right';\n\nexport interface IMcNavbarDropdownItem {\n    link?: string;\n    text: string;\n}\n\n@Directive({\n    selector: MC_NAVBAR_LOGO,\n    host: {\n        class: MC_NAVBAR_LOGO\n    }\n})\nexport class McNavbarLogo {}\n\n@Directive({\n    selector: MC_NAVBAR_BRAND,\n    host: {\n        class: MC_NAVBAR_BRAND\n    }\n})\nexport class McNavbarBrand {}\n\n@Directive({\n    selector: MC_NAVBAR_TITLE,\n    host: {\n        class: MC_NAVBAR_TITLE\n    }\n})\nexport class McNavbarTitle {}\n\nexport class McNavbarItemBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McNavbarMixinBase: CanDisableCtor & typeof McNavbarItemBase = mixinDisabled(McNavbarItemBase);\n\n@Component({\n    selector: MC_NAVBAR_ITEM,\n    template: `\n        <a\n            [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\n            (click)=\"handleClickByItem()\"\n            (keydown)=\"handleKeydown($event)\"\n            class=\"mc-navbar-item\"\n        >\n            <ng-content></ng-content>\n            <i *ngIf=\"hasDropdownContent\" mc-icon=\"mc-angle-M_16\"></i>\n        </a>\n        <ul\n            #dropdownContent\n            *ngIf=\"hasDropdownContent\"\n            [ngClass]=\"{ 'is-collapsed': isCollapsed }\"\n            class=\"mc-navbar-dropdown\"\n        >\n            <li\n                *ngFor=\"let item of dropdownItems\"\n                (click)=\"handleClickByDropdownItem()\"\n                class=\"mc-navbar-dropdown-item\"\n            >\n                <ng-container *ngIf=\"dropdownItemTmpl\">\n                    <ng-container *ngTemplateOutlet=\"dropdownItemTmpl; context: { $implicit: item }\"></ng-container>\n                </ng-container>\n                <a\n                    *ngIf=\"!dropdownItemTmpl\"\n                    [attr.href]=\"item.link\"\n                    [ngClass]=\"{ 'is-active': isActiveDropdownLink(item.link) }\"\n                    class=\"mc-navbar-dropdown-link\"\n                >{{ item.text }}</a>\n            </li>\n        </ul>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': '-1'\n    }\n})\nexport class McNavbarItem extends _McNavbarMixinBase implements OnInit, AfterViewInit, OnDestroy, CanDisable {\n\n    @Input()\n    tabIndex: number = 0;\n\n    @Input()\n    dropdownItems: IMcNavbarDropdownItem[] = [];\n\n    @Input()\n    set collapsedTitle(value: string) {\n        this.elementRef.nativeElement.setAttribute('computedTitle', encodeURI(value));\n    }\n\n    @ContentChild('dropdownItemTmpl', { read: TemplateRef })\n    dropdownItemTmpl: TemplateRef<IMcNavbarDropdownItem>;\n\n    @ViewChild('dropdownContent', { read: ElementRef })\n    dropdownContent: ElementRef;\n\n    get hasDropdownContent() {\n        return this.dropdownItems.length > 0;\n    }\n\n    isCollapsed: boolean = true;\n\n    private _subscription: Subscription = new Subscription();\n    private _focusMonitor$: Observable<FocusOrigin>;\n\n    private get _dropdownElements(): HTMLElement[] {\n        return this.dropdownContent ? this.dropdownContent.nativeElement.querySelectorAll('li > *') : [];\n    }\n\n    constructor(\n        public  elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _platform: Platform,\n        private _cdRef: ChangeDetectorRef\n    ) {\n        super(elementRef);\n    }\n\n    ngOnInit() {\n        this.denyClickIfDisabled();\n\n        this._focusMonitor$ = this._focusMonitor.monitor(this.elementRef.nativeElement, true);\n\n        if (this.hasDropdownContent) {\n            this.listenClickOutside();\n        }\n    }\n\n    ngAfterViewInit() {\n        if (!this.hasDropdownContent) {\n            return;\n        }\n\n        this.startListenFocusDropdownItems();\n    }\n\n    ngOnDestroy() {\n        this._subscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n        this.stopListenFocusDropdownItems();\n    }\n\n    isActiveDropdownLink(link: string): boolean {\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n\n        return window.location.href.indexOf(link) >= 0;\n    }\n\n    handleClickByItem() {\n        this.toggleDropdown();\n    }\n\n    handleKeydown($event: KeyboardEvent) {\n        const isNavbarItem = ($event.target as HTMLElement).classList.contains(MC_NAVBAR_ITEM);\n\n        // tslint:disable-next-line\n        if (this.hasDropdownContent && $event.keyCode === SPACE && isNavbarItem) {\n            this.toggleDropdown();\n        }\n    }\n\n    handleClickByDropdownItem() {\n        this.forceCloseDropdown();\n    }\n\n    private listenClickOutside() {\n        this._subscription.add(\n            this._focusMonitor$.subscribe((origin) => {\n                if (origin === null) {\n                    this.forceCloseDropdown();\n                }\n            })\n        );\n    }\n\n    private toggleDropdown() {\n        this.isCollapsed = !this.isCollapsed;\n    }\n\n    private forceCloseDropdown() {\n        this.isCollapsed = true;\n        this._cdRef.detectChanges();\n    }\n\n    private startListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.monitor(el, true);\n        });\n    }\n\n    private stopListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.stopMonitoring(el);\n        });\n    }\n\n    // This method is required due to angular 2 issue https://github.com/angular/angular/issues/11200\n    private denyClickIfDisabled() {\n        const events: Event[] = this.elementRef.nativeElement.eventListeners('click');\n\n        events.forEach((event) => this.elementRef.nativeElement.removeEventListener('click', event));\n\n        this.elementRef.nativeElement.addEventListener('click', (event: MouseEvent) => {\n            if (this.elementRef.nativeElement.hasAttribute('disabled')) {\n                event.stopImmediatePropagation();\n            }\n        }, true);\n\n        events.forEach((event) => this.elementRef.nativeElement.addEventListener('click', event));\n    }\n}\n\n@Directive({\n    selector: MC_NAVBAR_CONTAINER\n})\nexport class McNavbarContainer {\n    @Input()\n    position: McNavbarContainerPositionType = 'left';\n\n    @HostBinding('class')\n    get cssClasses(): string {\n        return this.position === 'left' ? 'mc-navbar-left' : 'mc-navbar-right';\n    }\n}\n\nclass CollapsibleItem {\n    private _collapsed: boolean = false;\n\n    constructor(\n        public element: HTMLElement,\n        public width: number\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        this._collapsed = collapsed;\n\n        this.updateCollapsedClass();\n    }\n\n    private updateCollapsedClass() {\n        if (this._collapsed) {\n            this.element.classList.add(COLLAPSED_CLASS);\n        } else {\n            this.element.classList.remove(COLLAPSED_CLASS);\n        }\n\n    }\n}\n\nclass CachedItemWidth {\n\n    get canCollapse(): boolean {\n        return this.itemsForCollapse.length > 0;\n    }\n\n    private _collapsedItemsWidth: number;\n\n    get collapsedItemsWidth(): number {\n        if (this._collapsedItemsWidth !== undefined) {\n            return this._collapsedItemsWidth;\n        }\n\n        this.calculateAndCacheCollapsedItemsWidth();\n\n        return this._collapsedItemsWidth;\n    }\n\n    constructor(\n        public element: HTMLElement,\n        public width: number,\n        public itemsForCollapse: CollapsibleItem[] = []\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        if (this.itemsForCollapse.length > 0) {\n            this.updateTitle(collapsed);\n        }\n\n        this.itemsForCollapse.forEach((item) => item.processCollapsed(collapsed));\n    }\n\n    private calculateAndCacheCollapsedItemsWidth() {\n        this._collapsedItemsWidth = this.itemsForCollapse\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getTitle(): string {\n        const computedTitle = this.element.getAttribute('computedTitle');\n\n        return computedTitle\n            ? decodeURI(computedTitle)\n            : (this.itemsForCollapse.length > 0 ? this.itemsForCollapse[0].element.innerText : '');\n    }\n\n    private updateTitle(collapsed: boolean) {\n        if (collapsed) {\n            this.element.setAttribute('title', this.getTitle());\n        } else {\n            this.element.removeAttribute('title');\n        }\n    }\n}\n\n\n@Component({\n    selector: MC_NAVBAR,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <nav class=\"mc-navbar\">\n            <ng-content select=\"[${MC_NAVBAR_CONTAINER}],${MC_NAVBAR_CONTAINER}\"></ng-content>\n        </nav>\n    `,\n    styleUrls: ['./navbar.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class McNavbar implements AfterViewInit, OnDestroy {\n\n    private readonly forceRecalculateItemsWidth: boolean = false;\n    private readonly resizeDebounceInterval: number = 100;\n    private readonly firstLevelElement: string = MC_NAVBAR_CONTAINER;\n    private readonly secondLevelElements: string[] = [\n        MC_NAVBAR_ITEM,\n        MC_NAVBAR_BRAND,\n        MC_NAVBAR_TITLE\n    ];\n\n    private _totalItemsWidths: number;\n    private _itemsWidths: CachedItemWidth[];\n\n    private get maxAllowedWidth(): number {\n        return this._elementRef.nativeElement.querySelector('nav').getBoundingClientRect().width;\n    }\n\n    private get itemsWidths(): CachedItemWidth[] {\n        if (this._itemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._itemsWidths;\n        }\n\n        this.calculateAndCacheItemsWidth();\n\n        return this._itemsWidths;\n    }\n\n    private get totalItemsWidth(): number {\n        if (this._totalItemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._totalItemsWidths;\n        }\n\n        this.calculateAndCacheTotalItemsWidth();\n\n        return this._totalItemsWidths;\n    }\n\n    private _resizeSubscription: Subscription;\n\n    constructor(\n        private _elementRef: ElementRef\n    ) {\n        const resizeObserver = fromEvent(window, 'resize')\n            .pipe(debounceTime(this.resizeDebounceInterval));\n\n        this._resizeSubscription = resizeObserver.subscribe(this.updateCollapsed.bind(this));\n    }\n\n    updateCollapsed(): void {\n        let collapseDelta = this.totalItemsWidth - this.maxAllowedWidth;\n\n        for (let i = this.itemsWidths.length - 1; i >= 0; i--) {\n            const item = this.itemsWidths[i];\n\n            if (!item.canCollapse) {\n                continue;\n            }\n\n            item.processCollapsed(collapseDelta > 0);\n            collapseDelta -= item.collapsedItemsWidth;\n        }\n    }\n\n    ngAfterViewInit(): void {\n        // Note: this wait is required for loading and rendering fonts for icons;\n        // unfortunately we cannot control font rendering\n        setTimeout(() => this.updateCollapsed(), 0);\n    }\n\n    ngOnDestroy() {\n        this._resizeSubscription.unsubscribe();\n    }\n\n    private calculateAndCacheTotalItemsWidth() {\n        this._totalItemsWidths = this.itemsWidths\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getOuterElementWidth(element: HTMLElement): number {\n        const baseWidth  = element.getBoundingClientRect().width;\n        const marginRight = parseInt(getComputedStyle(element).getPropertyValue('margin-right'));\n        const marginLeft = parseInt(getComputedStyle(element).getPropertyValue('margin-left'));\n\n        return baseWidth + marginRight + marginLeft;\n    }\n\n    private calculateAndCacheItemsWidth() {\n        const allItemsSelector = this.secondLevelElements\n            .map((e: string) => `${this.firstLevelElement}>${e}`);\n        const allItems: HTMLElement[] = Array.from(this._elementRef.nativeElement.querySelectorAll(allItemsSelector));\n\n        this._itemsWidths = allItems\n            .map((el) => new CachedItemWidth(el, this.getOuterElementWidth(el), this.getItemsForCollapse(el)));\n    }\n\n    private getItemsForCollapse(element: HTMLElement): CollapsibleItem[] {\n        const icon = element.querySelector(`[${MC_ICON}],${MC_NAVBAR_LOGO},[${MC_NAVBAR_LOGO}]`);\n\n        if (!icon) {\n            return [];\n        }\n\n        return Array.from(element.querySelectorAll(MC_NAVBAR_TITLE))\n            .map((el) => new CollapsibleItem(<HTMLElement> el, el.getBoundingClientRect().width));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport {\n    McNavbar,\n    McNavbarContainer,\n    McNavbarItem,\n    McNavbarTitle,\n    McNavbarBrand,\n    McNavbarLogo\n} from './navbar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        McIconModule\n    ],\n    exports: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ],\n    declarations: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ]\n})\nexport class McNavbarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressBarMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressBarBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressBarMixinBase:\n    CanColorCtor &\n    typeof McProgressBarBase =\n        mixinColor(McProgressBarBase);\n\n@Component({\n    selector: 'mc-progress-bar',\n    templateUrl: './progress-bar.component.html',\n    styleUrls: ['./progress-bar.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-bar',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressBar extends _McProgressBarMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-bar-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressBarMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McProgressBar\n} from './progress-bar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressBar\n    ],\n    declarations: [\n        McProgressBar\n    ]\n})\nexport class McProgressBarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressSpinnerMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressSpinnerBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressSpinnerMixinBase:\n    CanColorCtor &\n    typeof McProgressSpinnerBase =\n        mixinColor(McProgressSpinnerBase);\n\nconst MAX_DASH_ARRAY = 273;\n\n@Component({\n    selector: 'mc-progress-spinner',\n    templateUrl: './progress-spinner.component.html',\n    styleUrls: ['./progress-spinner.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-spinner',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressSpinner extends _McProgressSpinnerMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-spinner-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressSpinnerMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n\n    get dashOffsetPercent(): string {\n        return `${MAX_DASH_ARRAY - this.percentage * MAX_DASH_ARRAY}%`;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McProgressSpinner } from './progress-spinner.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressSpinner\n    ],\n    declarations: [\n        McProgressSpinner\n    ]\n})\nexport class McProgressSpinnerModule {}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, Directive, ElementRef, EventEmitter, forwardRef,\n    Input, OnDestroy, OnInit, Optional, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { UniqueSelectionDispatcher } from '@ptsecurity/cdk/collections';\n\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n\n/** Change event object emitted by McRadio. */\nexport class McRadioChange {\n    constructor(\n        /** The McRadioButton that emits the change event. */\n        public source: McRadioButton,\n        /** The value of the McRadioButton. */\n        public value: any) {}\n}\n\n// Boilerplate for applying mixins to McRadioGroup.\n/** @docs-private */\nexport class McRadioGroupBase {}\nexport const _McRadioGroupMixinBase: CanDisableCtor & typeof McRadioGroupBase = mixinDisabled(McRadioGroupBase);\n\n/**\n * Provider Expression that allows mc-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nexport const MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McRadioGroup),\n    multi: true\n};\n\n@Directive({\n    selector: 'mc-radio-group',\n    exportAs: 'mcRadioGroup',\n    providers: [MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n    host: {\n        role: 'radiogroup',\n        class: 'mc-radio-group'\n    },\n    inputs: ['disabled']\n})\nexport class McRadioGroup extends _McRadioGroupMixinBase\n    implements AfterContentInit, ControlValueAccessor, CanDisable {\n\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    @Input()\n    get name(): string { return this._name; }\n    set name(value: string) {\n        this._name = value;\n        this.updateRadioButtonNames();\n    }\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this.markRadiosForCheck();\n    }\n\n    /** Value of the radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(newValue: any) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n\n            this.updateSelectedRadioFromValue();\n            this.checkSelectedRadioButton();\n        }\n    }\n\n    /** Whether the radio button is selected. */\n    @Input()\n    get selected() { return this._selected; }\n    set selected(selected: McRadioButton | null) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this.checkSelectedRadioButton();\n    }\n\n    /** Whether the radio group is disabled */\n    @Input()\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /** Whether the radio group is required */\n    @Input()\n    get required(): boolean { return this._required; }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /**\n     * Event emitted when the group value changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * a radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** Child radio buttons. */\n    @ContentChildren(forwardRef(() => McRadioButton), { descendants: true })\n    _radios: QueryList<McRadioButton>;\n\n    /**\n     * Selected value for group. Should equal the value of the selected radio button if there *is*\n     * a corresponding radio button with a matching value. If there is *not* such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    private _value: any = null;\n\n    /** The HTML name attribute applied to radio buttons in this group. */\n    private _name: string = `mc-radio-group-${nextUniqueId++}`;\n\n    /** The currently selected radio button. Should match value. */\n    private _selected: McRadioButton | null = null;\n\n    /** Whether the `value` has been set to its initial value. */\n    private _isInitialized: boolean = false;\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    private _labelPosition: 'before' | 'after' = 'after';\n\n    /** Whether the radio group is disabled. */\n    private _disabled: boolean = false;\n\n    /** Whether the radio group is required. */\n    private _required: boolean = false;\n\n    constructor(\n        private readonly _changeDetector: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    /** The method to be called in order to update ngModel */\n    // tslint:disable-next-line\n    controlValueAccessorChangeFn: (value: any) => void = () => {};\n\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * @docs-private\n     */\n    // tslint:disable-next-line\n    onTouched: () => any = () => {};\n\n    checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on McRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the McRadioGroup.\n        this._isInitialized = true;\n    }\n\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n\n    /** Dispatch change event with current selection and group value. */\n    emitChangeEvent(): void {\n        if (this._isInitialized) {\n            this.change.emit(new McRadioChange(this._selected!, this._value));\n        }\n    }\n\n    markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach((radio) => radio.markForCheck());\n        }\n    }\n\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     */\n    writeValue(value: any) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn: (value: any) => void) {\n        this.controlValueAccessorChangeFn = fn;\n    }\n\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n\n    private updateRadioButtonNames(): void {\n        if (this._radios) {\n            this._radios.forEach((radio) => {\n                radio.name = this.name;\n            });\n        }\n    }\n\n    /** Updates the `selected` radio button from the internal _value state. */\n    private updateSelectedRadioFromValue(): void {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n\n        if (this._radios != null && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach((radio) => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n}\n\n\n// Boilerplate for applying mixins to McRadioButton.\n/** @docs-private */\nexport class McRadioButtonBase {\n    // Since the disabled property is manually defined for the McRadioButton and isn't set up in\n    // the mixin base class. To be able to use the tabindex mixin, a disabled property must be\n    // defined to properly work.\n    disabled: boolean;\n\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McRadioButtonMixinBase:\n    CanColorCtor &\n    HasTabIndexCtor &\n    typeof McRadioButtonBase =\n        mixinColor(mixinTabIndex(McRadioButtonBase));\n\n\n@Component({\n    selector: 'mc-radio-button',\n    templateUrl: 'radio.component.html',\n    styleUrls: ['radio.css'],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    exportAs: 'mcRadioButton',\n    host: {\n        class: 'mc-radio-button',\n        '[attr.id]': 'id',\n        '[class.mc-checked]': 'checked',\n        '[class.mc-disabled]': 'disabled',\n        '(focus)': '_inputElement.nativeElement.focus()'\n    }\n})\nexport class McRadioButton extends _McRadioButtonMixinBase\n    implements OnInit, OnDestroy, CanColor, HasTabIndex {\n\n    private readonly _uniqueId: string = `mc-radio-${++nextUniqueId}`;\n\n    /* tslint:disable:member-ordering */\n\n    /** The unique ID for the radio button. */\n    @Input() id: string = this._uniqueId;\n\n    /** Analog to HTML 'name' attribute used to group radios for unique selection. */\n    @Input() name: string;\n\n    /** Used to set the 'aria-label' attribute on the underlying input element. */\n    @Input('aria-label') ariaLabel: string;\n\n    /** The 'aria-labelledby' attribute takes precedence as the element's text alternative. */\n    @Input('aria-labelledby') ariaLabelledby: string;\n\n    /** The 'aria-describedby' attribute is read after the element's label and field type. */\n    @Input('aria-describedby') ariaDescribedby: string;\n\n    /** Whether this radio button is checked. */\n    @Input()\n    get checked(): boolean { return this._checked; }\n    set checked(value: boolean) {\n        const newCheckedState = toBoolean(value);\n\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            } else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** The value of this radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(value: any) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup != null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n\n    /** Whether the radio button is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled || (this.radioGroup != null && this.radioGroup.disabled);\n    }\n    set disabled(value: boolean) {\n        const newDisabledState = toBoolean(value);\n\n        if (this._disabled !== newDisabledState) {\n\n            this._disabled = newDisabledState;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** Whether the radio button is required. */\n    @Input()\n    get required(): boolean {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    private _labelPosition: 'before' | 'after';\n\n    /** The native `<input type=radio>` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Event emitted when the checked state of this radio button changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * the radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** The parent radio group. May or may not be present. */\n    radioGroup: McRadioGroup;\n\n    @Input()\n    isFocused: boolean = false;\n\n    /** ID of the native input element inside `<mc-radio-button>` */\n    get inputId(): string { return `${this.id || this._uniqueId}-input`; }\n\n    /** Whether this radio is checked. */\n    private _checked: boolean = false;\n\n    /** Whether this radio is disabled. */\n    private _disabled: boolean;\n\n    /** Whether this radio is required. */\n    private _required: boolean;\n\n    /** Value assigned to this radio. */\n    private _value: any = null;\n\n    /** Unregister function for _radioDispatcher */\n    // tslint:disable-next-line\n    private readonly removeUniqueSelectionListener: () => void = () => {};\n\n    constructor(\n        @Optional() radioGroup: McRadioGroup,\n        elementRef: ElementRef,\n        private readonly _changeDetector: ChangeDetectorRef,\n        private readonly _radioDispatcher: UniqueSelectionDispatcher\n    ) {\n\n        super(elementRef);\n\n        this.radioGroup = radioGroup;\n\n        this.removeUniqueSelectionListener =\n            _radioDispatcher.listen((id: string, name: string) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            });\n    }\n\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n\n    ngOnDestroy() {\n        this.removeUniqueSelectionListener();\n    }\n\n    /** Focuses the radio button. */\n    // tslint:disable-next-line\n    focus(): void {}\n\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n\n    onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n\n    onInputChange(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this.emitChangeEvent();\n\n        if (this.radioGroup) {\n            this.radioGroup.controlValueAccessorChangeFn(this.value);\n            this.radioGroup.touch();\n            if (groupValueChanged) {\n                this.radioGroup.emitChangeEvent();\n            }\n        }\n    }\n\n    /** Dispatch change event with current value. */\n    private emitChangeEvent(): void {\n        this.change.emit(new McRadioChange(this, this._value));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McRadioButton, McRadioGroup } from './radio.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule],\n    exports: [McRadioGroup, McRadioButton],\n    declarations: [McRadioGroup, McRadioButton]\n})\nexport class McRadioModule {\n}\n","import { Directive, Input } from '@angular/core';\n\nimport { CdkTreeNodeDef } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeDef]',\n    inputs: ['when: mcTreeNodeDefWhen'],\n    providers: [{ provide: CdkTreeNodeDef, useExisting: McTreeNodeDef }]\n})\nexport class McTreeNodeDef<T> extends CdkTreeNodeDef<T> {\n    @Input('mcTreeNode') data: T;\n}\n","import { Directive, Input, OnInit } from '@angular/core';\nimport { CdkTreeNodePadding } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodePadding]',\n    providers: [{ provide: CdkTreeNodePadding, useExisting: McTreeNodePadding }]\n})\nexport class McTreeNodePadding<T> extends CdkTreeNodePadding<T> implements OnInit {\n    get leftPadding(): number {\n        return (this._withIcon ? 0 : this._iconWidth) + this._baseLeftPadding;\n    }\n\n    _baseLeftPadding: number = 6;\n    _iconWidth: number = 20;\n    _indent: number = 16;\n\n    @Input('mcTreeNodePadding') level: number;\n\n    @Input('mcTreeNodePaddingIndent') indent: number;\n\n    _withIcon: boolean;\n\n    _paddingIndent(): string | null {\n        const nodeLevel = (this._treeNode.data && this._tree.treeControl.getLevel)\n            ? this._tree.treeControl.getLevel(this._treeNode.data)\n            : null;\n\n        const level = this._level || nodeLevel;\n\n        return level ? `${(level * this._indent) + this.leftPadding}px` : `${this._baseLeftPadding}px`;\n    }\n\n    ngOnInit(): void {\n        this._withIcon = this._tree.treeControl.isExpandable(this._treeNode.data);\n        this._setPadding();\n    }\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n    QueryList,\n    ViewEncapsulation,\n    ChangeDetectorRef,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\n\nimport { FocusKeyManager, IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { END, ENTER, HOME, PAGE_DOWN, PAGE_UP, SPACE } from '@ptsecurity/cdk/keycodes';\n\nimport {\n    McLine,\n    McLineSetter,\n    CanDisable,\n    mixinDisabled,\n    toBoolean, CanDisableCtor\n} from '@ptsecurity/mosaic/core';\n\n\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\n@Component({\n    exportAs: 'mcListOption',\n    selector: 'mc-list-option',\n    host: {\n        tabindex: '-1',\n\n        class: 'mc-list-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n        '(click)': '_handleClick()'\n    },\n    templateUrl: 'list-option.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListOption implements AfterContentInit, OnDestroy, OnInit, IFocusableOption {\n    _hasFocus: boolean = false;\n\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    @ViewChild('text') _text: ElementRef;\n\n    // Whether the label should appear before or after the checkbox. Defaults to 'after'\n    @Input() checkboxPosition: 'before' | 'after' = 'after';\n\n    @Input() value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled || (this.listSelection && this.listSelection.disabled);\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.listSelection.selectedOptions && this.listSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            this.listSelection._reportValueChange();\n        }\n    }\n\n    private _lineSetter: McLineSetter;\n    private _selected = false;\n    private _disabled = false;\n\n    constructor(\n        private _element: ElementRef,\n        private _changeDetector: ChangeDetectorRef,\n        @Inject(forwardRef(() => McListSelection))\n        public listSelection: McListSelection\n    ) {}\n\n    ngOnInit() {\n        if (this._selected) {\n            // List options that are selected at initialization can't be reported properly to the form\n            // control. This is because it takes some time until the selection-list knows about all\n            // available options. Also it can happen that the ControlValueAccessor has an initial value\n            // that should be used instead. Deferring the value change report to the next tick ensures\n            // that the form control value is not being overwritten.\n            const wasSelected = this._selected;\n\n            Promise.resolve().then(() => {\n                if (this._selected || wasSelected) {\n                    this.selected = true;\n                    this._changeDetector.markForCheck();\n                }\n            });\n        }\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    ngOnDestroy(): void {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => this.selected = false);\n        }\n\n        this.listSelection._removeOptionFromList(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    focus(): void {\n        this._element.nativeElement.focus();\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    getLabel() {\n        return this._text ? this._text.nativeElement.textContent : '';\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.listSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.listSelection.selectedOptions.select(this);\n        } else {\n            this.listSelection.selectedOptions.deselect(this);\n        }\n\n        this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleClick() {\n        if (this.disabled) { return; }\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    _handleFocus() {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur() {\n        this._hasFocus = false;\n\n        this.listSelection._onTouched();\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n\n\nexport const MC_SELECTION_LIST_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McListSelection),\n    multi: true\n};\n\n// Change event that is being fired whenever the selected state of an option changes. */\nexport class McListSelectionChange {\n    constructor(\n        // Reference to the selection list that emitted the event.\n        public source: McListSelection,\n        // Reference to the option that has been changed.\n        public option: McListOption\n    ) {}\n}\n\n\nexport class McListSelectionBase {}\n\nexport const _McListSelectionMixinBase: CanDisableCtor & typeof McListSelectionBase\n    = mixinDisabled(McListSelectionBase);\n\n@Component({\n    exportAs: 'mcListSelection',\n    selector: 'mc-list-selection',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-list-selection',\n        '[tabIndex]': 'tabIndex',\n        '(focus)': 'focus()',\n        '(blur)': '_onTouched()',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    providers: [MC_SELECTION_LIST_VALUE_ACCESSOR],\n    preserveWhitespaces: false\n})\nexport class McListSelection extends _McListSelectionMixinBase implements\n    IFocusableOption, CanDisable, AfterContentInit, ControlValueAccessor {\n\n    _keyManager: FocusKeyManager<McListOption>;\n\n    // The option components contained within this selection-list.\n    @ContentChildren(McListOption) options: QueryList<McListOption>;\n\n    tabIndex: number;\n\n    autoSelect: boolean;\n    noUnselect: boolean;\n    multiple: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input() horizontal: boolean = false;\n\n    // Emits a change event whenever the selected state of an option changes.\n    @Output() readonly selectionChange: EventEmitter<McListSelectionChange> = new EventEmitter<McListSelectionChange>();\n\n    selectedOptions: SelectionModel<McListOption>;\n\n    // Used for storing the values that were assigned before the options were initialized.\n    private _tempValues: string[] | null;\n\n    private _modelChanges = Subscription.EMPTY;\n\n    constructor(\n        private _element: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string,\n        @Attribute('multiple') multiple: string\n    ) {\n        super();\n\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.selectedOptions = new SelectionModel<McListOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.horizontal = toBoolean(this.horizontal);\n\n        this._keyManager = new FocusKeyManager<McListOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(!this.horizontal)\n            .withHorizontalOrientation(this.horizontal ? 'ltr' : null);\n\n        if (this._tempValues) {\n            this._setOptionsFromValues(this._tempValues);\n            this._tempValues = null;\n        }\n\n        // Sync external changes to the model back to the options.\n        this._modelChanges = this.selectedOptions.onChange!.subscribe((event) => {\n            for (const item of event.added) {\n                item.selected = true;\n            }\n\n            for (const item of event.removed) {\n                item.selected = false;\n            }\n        });\n\n        this.updateScrollSize();\n    }\n\n    ngOnDestroy() {\n        this._modelChanges.unsubscribe();\n    }\n\n    focus() {\n        this._element.nativeElement.focus();\n    }\n\n    selectAll() {\n        this.options.forEach((option) => option.setSelected(true));\n\n        this._reportValueChange();\n    }\n\n    deselectAll() {\n        this.options.forEach((option) => option.setSelected(false));\n\n        this._reportValueChange();\n    }\n\n    updateScrollSize(): void {\n        if (this.horizontal || !this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    // Sets the focused option of the selection-list.\n    setFocusedOption(option: McListOption): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitChangeEvent(option);\n        this._reportValueChange();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(values: string[]): void {\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        } else {\n            this._tempValues = values;\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this._onTouched = fn;\n    }\n\n    // Implemented as a part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        if (this.options) {\n            this.options.forEach((option) => option.disabled = isDisabled);\n        }\n    }\n\n    getSelectedOptionValues(): string[] {\n        return this.options.filter((option) => option.selected).map((option) => option.value);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McListOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    _canDeselectLast(listOption: McListOption): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && listOption.selected);\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    // View to model callback that should be called if the list or its options lost focus.\n    _onTouched: () => void = () => {};\n\n    // Removes an option from the selection list and updates the active item.\n    _removeOptionFromList(option: McListOption) {\n        if (option._hasFocus) {\n            const optionIndex = this._getOptionIndex(option);\n\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.setPreviousItemActive();\n            } else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.setNextItemActive();\n            }\n        }\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                if (!this.horizontal) { this._keyManager.setPreviousPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                if (!this.horizontal) { this._keyManager.setNextPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    // Reports a value change to the ControlValueAccessor\n    _reportValueChange() {\n        if (this.options) {\n            this._onChange(this.getSelectedOptionValues());\n        }\n    }\n\n    // Emits a change event if the selected state of an option changed.\n    _emitChangeEvent(option: McListOption) {\n        this.selectionChange.emit(new McListSelectionChange(this, option));\n    }\n\n    // Returns the option with the specified value.\n    private _getOptionByValue(value: string): McListOption | undefined {\n        return this.options.find((option) => option.value === value);\n    }\n\n    // Sets the selected options based on the specified values.\n    private _setOptionsFromValues(values: string[]) {\n        this.options.forEach((option) => option.setSelected(false));\n\n        values\n            .map((value) => this._getOptionByValue(value))\n            .filter(Boolean)\n            .forEach((option) => option!.setSelected(true));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    // Returns the index of the specified list option.\n    private _getOptionIndex(option: McListOption): number {\n        return this.options.toArray().indexOf(option);\n    }\n\n    // View to model callback that should be called whenever the selected options change.\n    private _onChange: (value: any) => void = (_: any) => {};\n}\n","// todo пока не делаем, перенесено из материала, но у нас в доках таких простых списков нет.\nimport {\n    AfterContentInit, ChangeDetectionStrategy, Component, ContentChildren, Directive, ElementRef, QueryList,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { McLine, McLineSetter } from '@ptsecurity/mosaic/core';\n\n\nexport class McListBase {}\n\n@Component({\n    selector: 'mc-list',\n    host: { class: 'mc-list' },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McList extends McListBase {}\n\n\n/**\n * Directive whose purpose is to add the mc- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n    selector: '[mc-subheader], [mcSubheader]',\n    host: { class: 'mc-subheader' }\n})\nexport class McListSubheaderCssStyler {}\n\n\n// Boilerplate for applying mixins to McListItem.\nexport class McListItemBase {}\n\n@Component({\n    selector: 'mc-list-item, a[mc-list-item]',\n    host: {\n        class: 'mc-list-item',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()'\n    },\n    templateUrl: './list-item.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListItem extends McListItemBase implements AfterContentInit {\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    private _lineSetter: McLineSetter;\n\n    constructor(private _element: ElementRef) {\n        super();\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    _handleFocus() {\n        this._element.nativeElement.classList.add('mc-focused');\n    }\n\n    _handleBlur() {\n        this._element.nativeElement.classList.remove('mc-focused');\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLineModule } from '@ptsecurity/mosaic/core';\n\nimport { McListSelection, McListOption } from './list-selection.component';\nimport { McList, McListItem, McListSubheaderCssStyler } from './list.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        McLineModule\n    ],\n    exports: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ],\n    declarations: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ]\n})\nexport class McListModule {}\n","import {\n    Input,\n    Attribute,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\nexport class McLinkBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McLinkBase: HasTabIndexCtor & CanDisableCtor & typeof McLinkBase\n    = mixinTabIndex(mixinDisabled(McLinkBase));\n\n@Component({\n    selector: 'a.mc-link',\n    template: `<ng-content></ng-content>`,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcLink',\n    styleUrls: ['./link.css'],\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': 'tabIndex'\n    }\n})\n\nexport class McLink extends _McLinkBase implements OnDestroy, HasTabIndex, CanDisable {\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    private _disabled = false;\n\n    constructor(\n        @Attribute('tabindex') tabIndex: string,\n        public elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _changeDetector: ChangeDetectorRef) {\n\n        super(elementRef);\n        this._focusMonitor.monitor(elementRef.nativeElement, true);\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this.elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLink } from './link.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule\n    ],\n    declarations: [McLink],\n    exports: [McLink]\n})\nexport class McLinkModule {}\n","import { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { McModalRef } from './modal-ref.class';\n\n\ninterface IRegisteredMeta {\n    modalRef: McModalRef;\n    afterOpenSubscription: Subscription;\n    afterCloseSubscription: Subscription;\n}\n\n@Injectable()\nexport class McModalControlService {\n\n    // Track singleton afterAllClose through over the injection tree\n    get afterAllClose(): Subject<void> {\n        return this.parentService ? this.parentService.afterAllClose : this.rootAfterAllClose;\n    }\n\n    // Track singleton openModals array through over the injection tree\n    get openModals(): McModalRef[] {\n        return this.parentService ? this.parentService.openModals : this.rootOpenModals;\n    }\n\n    // @ts-ignore\n    private rootOpenModals: McModalRef[] = this.parentService ? null : [];\n    // @ts-ignore\n    private rootAfterAllClose: Subject<void> = this.parentService ? null : new Subject<void>();\n    // @ts-ignore\n    private rootRegisteredMetaMap: Map<McModalRef, IRegisteredMeta> = this.parentService ? null : new Map();\n\n    // Registered modal for later usage\n    private get registeredMetaMap(): Map<McModalRef, IRegisteredMeta> {\n        return this.parentService ? this.parentService.registeredMetaMap : this.rootRegisteredMetaMap;\n    }\n\n    constructor(\n        @Optional() @SkipSelf() private parentService: McModalControlService) {\n    }\n\n    // Register a modal to listen its open/close\n    registerModal(modalRef: McModalRef): void {\n        if (!this.hasRegistered(modalRef)) {\n            const afterOpenSubscription = modalRef.afterOpen.subscribe(() => this.openModals.push(modalRef));\n            const afterCloseSubscription = modalRef.afterClose.subscribe(() => this.removeOpenModal(modalRef));\n\n            this.registeredMetaMap.set(modalRef, {modalRef, afterOpenSubscription, afterCloseSubscription});\n        }\n    }\n\n    hasRegistered(modalRef: McModalRef): boolean {\n        return this.registeredMetaMap.has(modalRef);\n    }\n\n    // Close all registered opened modals\n    closeAll(): void {\n        let i = this.openModals.length;\n\n        while (i--) {\n            this.openModals[i].close();\n        }\n    }\n\n    private removeOpenModal(modalRef: McModalRef): void {\n        const index = this.openModals.indexOf(modalRef);\n\n        if (index > -1) {\n            this.openModals.splice(index, 1);\n\n            if (!this.openModals.length) {\n                this.afterAllClose.next();\n            }\n        }\n    }\n}\n","import { Observable } from 'rxjs';\n\nimport { McModalComponent } from './modal.component';\n\n\n/**\n * API class that public to users to handle the modal instance.\n * McModalRef is aim to avoid accessing to the modal instance directly by users.\n */\nexport abstract class McModalRef<T = any, R = any> {\n    abstract afterOpen: Observable<void>;\n    abstract afterClose: Observable<R>;\n\n    abstract open(): void;\n\n    abstract close(result?: R): void;\n\n    abstract destroy(result?: R): void;\n\n    /**\n     * Trigger the nzOnOk/nzOnCancel by manual\n     */\n    abstract triggerOk(): void;\n\n    abstract triggerCancel(): void;\n\n    // /**\n    //  * Return the ComponentRef of nzContent when specify nzContent as a Component\n    //  * Note: this method may return undefined if the Component has not ready yet.\n    //    (it only available after Modal's ngOnInit)\n    //  */\n    // abstract getContentComponentRef(): ComponentRef<{}>;\n\n    /**\n     * Return the component instance of nzContent when specify nzContent as a Component\n     * Note: this method may return undefined if the Component has not ready yet.\n     * (it only available after Modal's ngOnInit)\n     */\n    abstract getContentComponent(): T;\n\n    /**\n     * Get the dom element of this Modal\n     */\n    abstract getElement(): HTMLElement;\n\n    /**\n     * Get the instance of the Modal itself\n     */\n    abstract getInstance(): McModalComponent;\n}\n","export interface IClickPosition {\n    x: number;\n    y: number;\n}\n\nexport class ModalUtil {\n    private lastPosition: IClickPosition;\n\n    constructor(private document: Document) {\n        this.lastPosition = {x: -1, y: -1};\n        this.listenDocumentClick();\n    }\n\n    getLastClickPosition(): IClickPosition {\n        return this.lastPosition;\n    }\n\n    listenDocumentClick(): void {\n        this.document.addEventListener('click', (event: MouseEvent) => {\n            this.lastPosition = {x: event.clientX, y: event.clientY};\n        });\n    }\n}\n\nexport default new ModalUtil(document);\n","import { DOCUMENT } from '@angular/common';\nimport {\n    AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    Renderer2,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewContainerRef, ViewEncapsulation\n} from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { McMeasureScrollbarService } from '@ptsecurity/mosaic/core';\nimport { Observable } from 'rxjs';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\n// tslint:disable-next-line\nimport ModalUtil from './modal-util';\nimport { IModalButtonOptions, IModalOptions, ModalType, OnClickCallback } from './modal.type';\n\n\n// Duration when perform animations (ms)\nexport const MODAL_ANIMATE_DURATION = 200;\n\ntype AnimationState = 'enter' | 'leave' | null;\n\n@Component({\n    selector: 'mc-modal',\n    templateUrl: './modal.component.html',\n    styleUrls: ['./modal.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McModalComponent<T = any, R = any> extends McModalRef<T, R>\n    implements OnInit, OnChanges, AfterViewInit, OnDestroy, IModalOptions {\n\n    // tslint:disable-next-line:no-any\n    @Input() mcModalType: ModalType = 'default';\n    // If not specified, will use <ng-content>\n    @Input() mcContent: string | TemplateRef<{}> | Type<T>;\n    // available when mcContent is a component\n    @Input() mcComponentParams: object;\n    // Default Modal ONLY\n    @Input() mcFooter: string | TemplateRef<{}> | IModalButtonOptions<T>[];\n\n    @Input()\n    get mcVisible() { return this._mcVisible; }\n    set mcVisible(value) { this._mcVisible = value; }\n    _mcVisible = false;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n\n    @Input() mcZIndex: number = 1000;\n    @Input() mcWidth: number | string = 480;\n    @Input() mcWrapClassName: string;\n    @Input() mcClassName: string;\n    @Input() mcStyle: object;\n    @Input() mcTitle: string | TemplateRef<{}>;\n    @Input() mcCloseByESC: boolean = true;\n\n    @Input()\n    get mcClosable() { return this._mcClosable; }\n    set mcClosable(value) { this._mcClosable = value; }\n    _mcClosable = true;\n\n    @Input()\n    get mcMask() { return this._mcMask; }\n    set mcMask(value) { this._mcMask = value; }\n    _mcMask = true;\n\n    @Input()\n    get mcMaskClosable() { return this._mcMaskClosable; }\n    set mcMaskClosable(value) { this._mcMaskClosable = value; }\n    _mcMaskClosable = true;\n\n    @Input() mcMaskStyle: object;\n    @Input() mcBodyStyle: object;\n\n    // Trigger when modal open(visible) after animations\n    @Output() mcAfterOpen = new EventEmitter<void>();\n    // Trigger when modal leave-animation over\n    @Output() mcAfterClose = new EventEmitter<R>();\n\n    // --- Predefined OK & Cancel buttons\n    @Input() mcOkText: string;\n    @Input() mcOkType = 'primary';\n\n    @Input()\n    get mcOkLoading() { return this._mcOkLoading; }\n    set mcOkLoading(value) { this._mcOkLoading = value; }\n    _mcOkLoading = false;\n\n    @Input() @Output() mcOnOk: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    // Only aim to focus the ok button that needs to be auto focused\n    @ViewChild('autoFocusButtonOk', {read: ElementRef}) autoFocusButtonOk: ElementRef;\n    @Input() mcCancelText: string;\n\n    @Input()\n    get mcCancelLoading() { return this._mcCancelLoading; }\n    set mcCancelLoading(value) { this._mcCancelLoading = value; }\n    _mcCancelLoading = false;\n\n    @Input() @Output() mcOnCancel: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    @ViewChild('modalContainer') modalContainer: ElementRef;\n    @ViewChild('bodyContainer', {read: ViewContainerRef}) bodyContainer: ViewContainerRef;\n    maskAnimationClassMap: object;\n    modalAnimationClassMap: object;\n    // The origin point that animation based on\n    transformOrigin = '0px 0px 0px';\n\n    // Observable alias for mcAfterOpen\n    get afterOpen(): Observable<void> {\n        return this.mcAfterOpen.asObservable();\n    }\n\n    // Observable alias for mcAfterClose\n    get afterClose(): Observable<R> {\n        return this.mcAfterClose.asObservable();\n    }\n\n    get okText(): string {\n        return this.mcOkText;\n    }\n\n    get cancelText(): string {\n        return this.mcCancelText;\n    }\n\n    // Indicate whether this dialog should hidden\n    get hidden(): boolean {\n        return !this.mcVisible && !this.animationState;\n    }\n\n    // Handle the reference when using mcContent as Component\n    private contentComponentRef: ComponentRef<T>;\n    // Current animation state\n    private animationState: AnimationState;\n    private container: HTMLElement | OverlayRef;\n\n    constructor(\n        private overlay: Overlay,\n        private renderer: Renderer2,\n        private cfr: ComponentFactoryResolver,\n        private elementRef: ElementRef,\n        private viewContainer: ViewContainerRef,\n        private mcMeasureScrollbarService: McMeasureScrollbarService,\n        private modalControl: McModalControlService,\n        private changeDetector: ChangeDetectorRef,\n        @Inject(DOCUMENT) private document: any) {\n\n        super();\n    }\n\n    @Input() mcGetContainer: HTMLElement | OverlayRef | (() => HTMLElement | OverlayRef) = () => this.overlay.create();\n\n    ngOnInit() {\n\n        // Create component along without View\n        if (this.isComponent(this.mcContent)) {\n            this.createDynamicComponent(this.mcContent as Type<T>);\n        }\n\n        // Setup default button options\n        if (this.isModalButtons(this.mcFooter)) {\n            this.mcFooter = this.formatModalButtons(this.mcFooter as IModalButtonOptions<T>[]);\n        }\n\n        // Place the modal dom to elsewhere\n        this.container = typeof this.mcGetContainer === 'function' ? this.mcGetContainer() : this.mcGetContainer;\n        if (this.container instanceof HTMLElement) {\n            this.container.appendChild(this.elementRef.nativeElement);\n        } else if (this.container instanceof OverlayRef) {\n            // NOTE: only attach the dom to overlay, the view container is not changed actually\n            this.container.overlayElement.appendChild(this.elementRef.nativeElement);\n        }\n\n        // Register modal when afterOpen/afterClose is stable\n        this.modalControl.registerModal(this);\n    }\n\n    // [NOTE] NOT available when using by service!\n    // Because ngOnChanges never be called when using by service,\n    // here we can't support \"mcContent\"(Component) etc. as inputs that initialized dynamically.\n    // BUT: User also can change \"mcContent\" dynamically to trigger UI changes\n    // (provided you don't use \bComponent that needs initializations)\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.mcVisible) {\n            // Do not trigger animation while initializing\n            this.handleVisibleStateChange(this.mcVisible, !changes.mcVisible.firstChange);\n        }\n    }\n\n    ngAfterViewInit() {\n        // If using Component, it is the time to attach View while bodyContainer is ready\n        if (this.contentComponentRef) {\n            this.bodyContainer.insert(this.contentComponentRef.hostView);\n        }\n\n        if (this.autoFocusButtonOk) {\n            (this.autoFocusButtonOk.nativeElement as HTMLButtonElement).focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.container instanceof OverlayRef) {\n            this.container.dispose();\n        }\n    }\n\n    open() {\n        this.changeVisibleFromInside(true);\n    }\n\n    close(result?: R) {\n        this.changeVisibleFromInside(false, result);\n    }\n\n    // Destroy equals Close\n    destroy(result?: R) {\n        this.close(result);\n    }\n\n    triggerOk() {\n        this.onClickOkCancel('ok');\n    }\n\n    triggerCancel() {\n        this.onClickOkCancel('cancel');\n    }\n\n    getInstance(): McModalComponent {\n        return this;\n    }\n\n    getContentComponentRef(): ComponentRef<T> {\n        return this.contentComponentRef;\n    }\n\n    getContentComponent(): T {\n        return this.contentComponentRef && this.contentComponentRef.instance;\n    }\n\n    getElement(): HTMLElement {\n        return this.elementRef && this.elementRef.nativeElement;\n    }\n\n    onClickMask($event: MouseEvent) {\n        if (\n            this.mcMask &&\n            this.mcMaskClosable &&\n            ($event.target as HTMLElement).classList.contains('mc-modal-wrap') &&\n            this.mcVisible\n        ) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // tslint:disable-next-line\n    isModalType(type: ModalType): boolean {\n        return this.mcModalType === type;\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        if (event.keyCode === ESCAPE && this.container && (this.container instanceof OverlayRef)) {\n\n            this.close();\n            event.preventDefault();\n        }\n    }\n\n    // AoT\n    onClickCloseBtn() {\n        if (this.mcVisible) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // AoT\n    // tslint:disable-next-line\n    onClickOkCancel(type: 'ok' | 'cancel') {\n        const trigger = { ok: this.mcOnOk, cancel: this.mcOnCancel }[type];\n        const loadingKey = { ok: 'mcOkLoading', cancel: 'mcCancelLoading' }[type];\n\n        if (trigger instanceof EventEmitter) {\n            trigger.emit(this.getContentComponent());\n        } else if (typeof trigger === 'function') {\n\n            const result = trigger(this.getContentComponent());\n            // Users can return \"false\" to prevent closing by default\n            const caseClose = (doClose: boolean | void | {}) => (doClose !== false) && this.close(doClose as R);\n\n            if (isPromise(result)) {\n                this[loadingKey] = true;\n                const handleThen = (doClose) => {\n                    this[loadingKey] = false;\n                    caseClose(doClose);\n                };\n                (result as Promise<void>).then(handleThen).catch(handleThen);\n            } else {\n                caseClose(result);\n            }\n        }\n    }\n\n    // AoT\n    isNonEmptyString(value: {}): boolean {\n        return typeof value === 'string' && value !== '';\n    }\n\n    // AoT\n    isTemplateRef(value: {}): boolean {\n        return value instanceof TemplateRef;\n    }\n\n    // AoT\n    isComponent(value: {}): boolean {\n        return value instanceof Type;\n    }\n\n    // AoT\n    isModalButtons(value: {}): boolean {\n        return Array.isArray(value) && value.length > 0;\n    }\n\n    // Do rest things when visible state changed\n    private handleVisibleStateChange(visible: boolean, animation: boolean = true, closeResult?: R): Promise<any> {\n        // Hide scrollbar at the first time when shown up\n        if (visible) {\n            this.changeBodyOverflow(1);\n        }\n\n        return Promise\n            .resolve(animation && this.animateTo(visible))\n            // Emit open/close event after animations over\n            .then(() => {\n                if (visible) {\n                    this.mcAfterOpen.emit();\n                } else {\n                    this.mcAfterClose.emit(closeResult);\n                    // Show/hide scrollbar when animation is over\n                    this.changeBodyOverflow();\n                }\n            });\n    }\n\n    // Lookup a button's property, if the prop is a function, call & then return the result, otherwise, return itself.\n    // AoT\n    // tslint:disable-next-line\n    getButtonCallableProp(options: IModalButtonOptions<T>, prop: string): {} {\n        const value = options[prop];\n        const args: any[] = [];\n        if (this.contentComponentRef) {\n            args.push(this.contentComponentRef.instance);\n        }\n\n        return typeof value === 'function' ? value.apply(options, args) : value;\n    }\n\n    // On mcFooter's modal button click\n    // AoT\n    // tslint:disable-next-line\n    onButtonClick(button: IModalButtonOptions<T>) {\n        // Call onClick directly\n        const result = this.getButtonCallableProp(button, 'onClick');\n        if (isPromise(result)) {\n            button.loading = true;\n            (result as Promise<{}>).then(() => button.loading = false).catch(() => button.loading = false);\n        }\n    }\n\n    // Change mcVisible from inside\n    private changeVisibleFromInside(visible: boolean, closeResult?: R): Promise<void> {\n        if (this.mcVisible !== visible) {\n            // Change mcVisible value immediately\n            this.mcVisible = visible;\n            this.mcVisibleChange.emit(visible);\n\n            return this.handleVisibleStateChange(visible, true, closeResult);\n        }\n\n        return Promise.resolve();\n    }\n\n    private changeAnimationState(state: AnimationState) {\n        this.animationState = state;\n        if (state) {\n            this.maskAnimationClassMap = {\n                [`fade-${state}`]: true,\n                [`fade-${state}-active`]: true\n            };\n            this.modalAnimationClassMap = {\n                [`zoom-${state}`]: true,\n                [`zoom-${state}-active`]: true\n            };\n        } else {\n            // @ts-ignore\n            this.maskAnimationClassMap = this.modalAnimationClassMap = null;\n        }\n\n        if (this.contentComponentRef) {\n            this.contentComponentRef.changeDetectorRef.markForCheck();\n        } else {\n            this.changeDetector.markForCheck();\n        }\n    }\n\n    private animateTo(isVisible: boolean): Promise<any> {\n        // Figure out the lastest click position when shows up\n        if (isVisible) {\n            // [NOTE] Using timeout due to the document.click event is fired later than visible change,\n            // so if not postponed to next event-loop, we can't get the lastest click position\n            window.setTimeout(() => this.updateTransformOrigin());\n        }\n\n        this.changeAnimationState(isVisible ? 'enter' : 'leave');\n\n        // Return when animation is over\n        return new Promise((resolve) => window.setTimeout(() => {\n            this.changeAnimationState(null);\n            resolve();\n        }, MODAL_ANIMATE_DURATION));\n    }\n\n    private formatModalButtons(buttons: IModalButtonOptions<T>[]): IModalButtonOptions<T>[] {\n        return buttons.map((button) => {\n\n            return {\n                ...{\n                    type: 'default',\n                    size: 'default',\n                    autoLoading: true,\n                    show: true,\n                    loading: false,\n                    disabled: false\n                },\n                ...button\n            };\n        });\n    }\n\n    /**\n     * Create a component dynamically but not attach to any View\n     * (this action will be executed when bodyContainer is ready)\n     * @param component Component class\n     */\n    private createDynamicComponent(component: Type<T>) {\n        const factory = this.cfr.resolveComponentFactory(component);\n        const childInjector = Injector.create({\n            providers: [{provide: McModalRef, useValue: this}],\n            parent: this.viewContainer.parentInjector\n        });\n\n        this.contentComponentRef = factory.create(childInjector);\n\n        if (this.mcComponentParams) {\n            Object.assign(this.contentComponentRef.instance, this.mcComponentParams);\n        }\n\n        // Do the first change detection immediately\n        // (or we do detection at ngAfterViewInit, multi-changes error will be thrown)\n        this.contentComponentRef.changeDetectorRef.detectChanges();\n\n\n    }\n\n    // Update transform-origin to the last click position on document\n    private updateTransformOrigin() {\n        const modalElement = this.modalContainer.nativeElement as HTMLElement;\n        const lastPosition = ModalUtil.getLastClickPosition();\n\n        if (lastPosition) {\n            // tslint:disable-next-line\n            this.transformOrigin = `${lastPosition.x - modalElement.offsetLeft}px ${lastPosition.y - modalElement.offsetTop}px 0px`;\n        }\n    }\n\n    /**\n     * Take care of the body's overflow to decide the existense of scrollbar\n     * @param plusNum The number that the openModals.length will increase soon\n     */\n    private changeBodyOverflow(plusNum: number = 0) {\n        const openModals = this.modalControl.openModals;\n\n        if (openModals.length + plusNum > 0) {\n            // tslint:disable-next-line\n            this.renderer.setStyle(this.document.body, 'padding-right', `${this.mcMeasureScrollbarService.scrollBarWidth}px`);\n            this.renderer.setStyle(this.document.body, 'overflow', 'hidden');\n        } else {\n            this.renderer.removeStyle(this.document.body, 'padding-right');\n            this.renderer.removeStyle(this.document.body, 'overflow');\n        }\n    }\n}\n\n////////////\n\nfunction isPromise(obj: {} | void): boolean {\n    // tslint:disable-next-line\n    return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof (obj as Promise<{}>).then === 'function' && typeof (obj as Promise<{}>).catch === 'function';\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({\n    name: 'toCssUnit'\n})\nexport class CssUnitPipe implements PipeTransform {\n    transform(value: number | string, defaultUnit: string = 'px'): string {\n        const formatted = +value;\n\n        return isNaN(formatted) ? `${value}` : `${formatted}${defaultUnit}`;\n    }\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren, Directive,\n    ElementRef,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { CanColor, CanColorCtor, mixinColor } from '@ptsecurity/mosaic/core';\nimport { EMPTY, merge } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\n\nimport { McCleaner } from './cleaner';\nimport { McFormFieldControl } from './form-field-control';\nimport { getMcFormFieldMissingControlError } from './form-field-errors';\nimport { McFormFieldNumberControl } from './form-field-number-control';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\nlet nextUniqueId = 0;\n\nexport class McFormFieldBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McFormFieldMixinBase: CanColorCtor & typeof McFormFieldBase = mixinColor(McFormFieldBase);\n\n@Component({\n    selector: 'mc-form-field',\n    exportAs: 'mcFormField',\n    templateUrl: 'form-field.html',\n    // McInput is a directive and can't have styles, so we need to include its styles here.\n    // The McInput styles are fairly minimal so it shouldn't be a big deal for people who\n    // aren't using McInput.\n    styleUrls: [\n        'form-field.css',\n        '../input/input.css',\n        '../textarea/textarea.css'\n    ],\n    host: {\n        class: 'mc-form-field',\n        '[class.mc-form-field_invalid]': '_control.errorState',\n        '[class.mc-disabled]': '_control.disabled',\n        '[class.mc-form-field_has-prefix]': 'hasPrefix',\n        '[class.mc-form-field_has-suffix]': 'hasSuffix',\n        '[class.mc-form-field_has-cleaner]': 'canShowCleaner',\n        '[class.mc-form-field_has-stepper]': 'canShowStepper',\n        '[class.mc-focused]': '_control.focused',\n        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n        '[class.ng-touched]': '_shouldForward(\"touched\")',\n        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n        '[class.ng-valid]': '_shouldForward(\"valid\")',\n        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n        '[class.ng-pending]': '_shouldForward(\"pending\")',\n        '(keydown)': 'onKeyDown($event)',\n        '(mouseenter)': 'onHoverChanged(true)',\n        '(mouseleave)': 'onHoverChanged(false)'\n    },\n    inputs: ['color'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class McFormField extends _McFormFieldMixinBase implements\n    AfterContentInit, AfterContentChecked, AfterViewInit, CanColor {\n\n    @ContentChild(McFormFieldControl) _control: McFormFieldControl<any>;\n    @ContentChild(McFormFieldNumberControl) _numberControl: McFormFieldNumberControl<any>;\n    @ContentChild(McStepper) _stepper: McStepper;\n\n    @ContentChildren(McHint) _hint: QueryList<McHint>;\n    @ContentChildren(McSuffix) _suffix: QueryList<McSuffix>;\n    @ContentChildren(McPrefix) _prefix: QueryList<McPrefix>;\n    @ContentChildren(McCleaner) _cleaner: QueryList<McCleaner>;\n\n    // Unique id for the internal form field label.\n    _labelId = `mc-form-field-label-${nextUniqueId++}`;\n\n    hovered: boolean = false;\n\n    constructor(public _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {\n        super(_elementRef);\n    }\n\n    ngAfterContentInit() {\n        this._validateControlChild();\n\n        if (this._control.controlType) {\n            this._elementRef.nativeElement.classList\n                .add(`mc-form-field-type-${this._control.controlType}`);\n\n            if (this._numberControl && this.hasStepper) {\n                this._stepper.stepUp.subscribe(this.onStepUp.bind(this));\n                this._stepper.stepDown.subscribe(this.onStepDown.bind(this));\n            }\n        }\n\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        this._control.stateChanges.pipe(startWith())\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n\n        if (this._numberControl) {\n            this._numberControl.stateChanges.pipe(startWith())\n                .subscribe(() => {\n                    this._changeDetectorRef.markForCheck();\n                });\n        }\n\n        // Run change detection if the value changes.\n        const valueChanges = this._control.ngControl && this._control.ngControl.valueChanges || EMPTY;\n\n        merge(valueChanges)\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n\n    ngAfterContentChecked() {\n        this._validateControlChild();\n    }\n\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._changeDetectorRef.detectChanges();\n    }\n\n    clearValue($event) {\n        $event.stopPropagation();\n\n        if (this._control && this._control.ngControl) {\n            this._control.ngControl.reset();\n        }\n    }\n\n    onContainerClick($event) {\n        if (this._control.onContainerClick) {\n            this._control.onContainerClick($event);\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === ESCAPE && this._control.focused && this.hasCleaner) {\n            if (this._control && this._control.ngControl) {\n                this._control.ngControl.reset();\n            }\n\n            event.preventDefault();\n        }\n    }\n\n    onHoverChanged(isHovered: boolean) {\n        if (isHovered !== this.hovered) {\n            this.hovered  = isHovered;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    onStepUp() {\n        if (this._numberControl) {\n            this._numberControl.stepUp(this._numberControl.step);\n        }\n    }\n\n    onStepDown() {\n        if (this._numberControl) {\n            this._numberControl.stepDown(this._numberControl.step);\n        }\n    }\n\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop: keyof NgControl): boolean {\n        const ngControl = this._control ? this._control.ngControl : null;\n\n        return ngControl && ngControl[prop];\n    }\n\n    /** Throws an error if the form field's control is missing. */\n    protected _validateControlChild() {\n        if (!this._control) {\n            throw getMcFormFieldMissingControlError();\n        }\n    }\n\n    get hasHint(): boolean {\n        return this._hint && this._hint.length > 0;\n    }\n\n    get hasSuffix(): boolean {\n        return this._suffix && this._suffix.length > 0;\n    }\n\n    get hasPrefix(): boolean {\n        return this._prefix && this._prefix.length > 0;\n    }\n\n    get hasCleaner(): boolean {\n        return this._cleaner && this._cleaner.length > 0;\n    }\n\n    get hasStepper(): boolean {\n        return !!this._stepper;\n    }\n\n    get canShowCleaner(): boolean {\n        return this.hasCleaner &&\n            this._control &&\n            this._control.ngControl\n                ? this._control.ngControl.value && !this._control.disabled\n                : false;\n    }\n\n\n    get disabled(): boolean {\n        return this._control && this._control.disabled;\n    }\n\n    get canShowStepper(): boolean {\n        return this._numberControl &&\n            !this.disabled &&\n            (\n                this._numberControl.focused ||\n                this.hovered\n            );\n    }\n}\n\n@Directive({\n    selector: 'mc-form-field[mcFormFieldWithoutBorders]',\n    exportAs: 'mcFormFieldWithoutBorders',\n    host: { class: 'mc-form-field_without-borders' }\n})\nexport class McFormFieldWithoutBorders {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCleaner } from './cleaner';\nimport { McFormField, McFormFieldWithoutBorders } from './form-field';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\n@NgModule({\n    declarations: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ],\n    imports: [CommonModule, McIconModule],\n    exports: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ]\n})\nexport class McFormFieldModule {\n}\n","import { InjectionToken } from '@angular/core';\n\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n","function sanitizeNumber(value: number): number | null {\n    return !isFinite(value) || isNaN(value)\n        ? null\n        : value;\n}\n\nfunction getPrecision(value: number): number {\n    const arr = value.toString().split('.');\n\n    return arr.length === 1\n        ? 1\n        // tslint:disable-next-line:no-magic-numbers\n        :  Math.pow(10, arr[1].length);\n}\n\nfunction add(value1: number, value2: number) {\n    const precision = Math.max(getPrecision(value1), getPrecision(value2));\n\n    const res = (value1 * precision + value2 * precision) / precision;\n\n    return sanitizeNumber(res);\n}\n\nexport const stepUp = (value: number | null,\n                       max: number,\n                       min: number,\n                       step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(min, step);\n\n        return res === null ? null : Math.min(res, max);\n    }\n\n    res = add(value, step);\n\n    return res === null ? null : Math.max(Math.min(res, max), min);\n};\n\nexport const stepDown = (value: number | null,\n                         max: number,\n                         min: number,\n                         step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(max, -step);\n\n        return res === null ? null : Math.max(res, min);\n    }\n\n    res = add(value, -step);\n\n    return res === null ? null : Math.min(Math.max(res, min), max);\n};\n","import {\n    Attribute,\n    Directive, DoCheck, ElementRef, Inject, Input, OnChanges,\n    OnDestroy, Optional, Self\n} from '@angular/core';\nimport {\n    FormGroupDirective,\n    NgControl,\n    NgForm, NgModel\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    END, C, V, X, A, DELETE, BACKSPACE, TAB, ENTER,\n    ESCAPE, ZERO, NINE, NUMPAD_ZERO, NUMPAD_NINE, NUMPAD_MINUS, DASH,\n    FF_MINUS, LEFT_ARROW, RIGHT_ARROW, HOME, UP_ARROW, DOWN_ARROW, F1, F12\n} from '@ptsecurity/cdk/keycodes';\nimport { getSupportedInputTypes, Platform } from '@ptsecurity/cdk/platform';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl, McFormFieldNumberControl } from '@ptsecurity/mosaic/form-field';\nimport { Subject } from 'rxjs';\n\nimport { getMcInputUnsupportedTypeError } from './input-errors';\nimport { MC_INPUT_VALUE_ACCESSOR } from './input-value-accessor';\nimport { stepDown, stepUp } from './stepperUtils';\n\n\nconst MC_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n\nexport const BIG_STEP = 10;\nexport const SMALL_STEP = 1;\n\nlet nextUniqueId = 0;\n\nexport class McInputBase {\n    constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n                public _parentForm: NgForm,\n                public _parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\nexport const _McInputMixinBase: CanUpdateErrorStateCtor & typeof McInputBase = mixinErrorState(McInputBase);\n\n\n@Directive({\n    selector: `input[mcInput][type=\"number\"]`,\n    exportAs: 'mcNumericalInput',\n    providers: [NgModel, { provide: McFormFieldNumberControl, useExisting: McNumberInput }],\n    host: {\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McNumberInput implements McFormFieldNumberControl<any> {\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    bigStep: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    step: number;\n\n    @Input()\n    min: number;\n\n    @Input()\n    max: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    value: any;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    private readonly _host: HTMLInputElement;\n\n    constructor(\n        private _platform: Platform ,\n        private _elementRef: ElementRef,\n        private _model: NgModel,\n        @Attribute('step') step: string,\n        @Attribute('big-step') bigStep: string,\n        @Attribute('min') min: string,\n        @Attribute('max') max: string\n    ) {\n        this.step = this.isDigit(step) ? parseFloat(step) : SMALL_STEP;\n        this.bigStep = this.isDigit(bigStep) ? parseFloat(bigStep) : BIG_STEP;\n        this.min = this.isDigit(min) ? parseFloat(min) : -Infinity;\n        this.max = this.isDigit(max) ? parseFloat(max) : Infinity;\n\n        this._host = this._elementRef.nativeElement;\n\n        const self = this;\n\n        if ('valueAsNumber' in this._host) {\n            Object.defineProperty(Object.getPrototypeOf(this._host), 'valueAsNumber', {\n                // tslint:disable-next-line:no-reserved-keywords\n                get() {\n                    const res = parseFloat(self.normalizeSplitter(this.value));\n\n                    return isNaN(res) ? null : res;\n                }\n            });\n        }\n    }\n\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const keyCode = event.keyCode;\n\n        const isCtrlA = (e) => e.keyCode === A && (e.ctrlKey || e.metaKey);\n        const isCtrlC = (e) => e.keyCode === C && (e.ctrlKey || e.metaKey);\n        const isCtrlV = (e) => e.keyCode === V && (e.ctrlKey || e.metaKey);\n        const isCtrlX = (e) => e.keyCode === X && (e.ctrlKey || e.metaKey);\n\n        const isFKey = (e) => e.keyCode >= F1 && e.keyCode <= F12;\n\n        const isNumber = (e) => (e.keyCode >= ZERO && e.keyCode <= NINE) ||\n            (e.keyCode >= NUMPAD_ZERO && e.keyCode <= NUMPAD_NINE);\n\n        const minuses = [NUMPAD_MINUS, DASH, FF_MINUS];\n        const serviceKeys = [DELETE, BACKSPACE, TAB, ESCAPE, ENTER];\n        const arrows = [LEFT_ARROW, RIGHT_ARROW];\n        const allowedKeys =  [HOME, END].concat(arrows).concat(serviceKeys).concat(minuses);\n\n        const isIEPeriod = (e) => e.key === '.' || e.key === 'Decimal';\n        const isNotIEPeriod = (e) => e.key === '.' || e.key === ',';\n\n        // Decimal is for IE\n        const isPeriod = (e) => this._platform.EDGE || this._platform.TRIDENT\n            ? isIEPeriod(e)\n            : isNotIEPeriod(e);\n\n        if (allowedKeys.indexOf(keyCode) !== -1 ||\n            isCtrlA(event) ||\n            isCtrlC(event) ||\n            isCtrlV(event) ||\n            isCtrlX(event) ||\n            isFKey(event) ||\n            isPeriod(event)\n        ) {\n            // let it happen, don't do anything\n            return;\n        }\n        // Ensure that it is not a number and stop the keypress\n        if (event.shiftKey || !isNumber(event)) {\n            event.preventDefault();\n\n            // process steps\n            const step = event.shiftKey ? this.bigStep : this.step;\n\n            if (keyCode === UP_ARROW) {\n                this.stepUp(step);\n            }\n\n            if (keyCode === DOWN_ARROW) {\n                this.stepDown(step);\n            }\n        }\n    }\n\n    onPaste(event) {\n        let value = event.clipboardData.getData('text');\n        value = this.normalizeSplitter(value);\n\n        if (!this.isDigit(value)) {\n            event.preventDefault();\n        }\n    }\n\n    stepUp(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepUp(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    stepDown(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepDown(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    private normalizeSplitter(value: string): string {\n        return value ? value.replace(/,/g, '.') : value;\n    }\n\n    private isDigit(value: string): boolean {\n        return this.isFloat(value) || this.isInt(value);\n    }\n\n    private isFloat(value: string): boolean {\n        return /^-?\\d+\\.\\d+$/.test(value);\n    }\n\n    private isInt(value: string): boolean {\n        return /^-?\\d+$/.test(value);\n    }\n}\n\n@Directive({\n    selector: `input[mcInput]`,\n    exportAs: 'mcInput',\n    host: {\n        class: 'mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(input)': '_onInput()'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McInput }]\n})\nexport class McInput extends _McInputMixinBase implements McFormFieldControl<any>, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-input';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    // tslint:disable no-reserved-keywords\n    /** Input type of the element. */\n    @Input()\n    get type(): string {\n        return this._type;\n    }\n\n    set type(value: string) {\n        this._type = value || 'text';\n        this._validateType();\n\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    // tslint:enable no-reserved-keywords\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this._inputValueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected _uid = `mc-input-${nextUniqueId++}`;\n    protected _previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n    protected _type = 'text';\n    protected _neverEmptyInputTypes = [\n        'date',\n        'datetime',\n        'datetime-local',\n        'month',\n        'time',\n        'week'\n    ].filter((t) => getSupportedInputTypes().has(t));\n\n    private _inputValueAccessor: { value: any };\n\n    constructor(protected _elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || this._elementRef.nativeElement;\n\n        this._previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n\n    /** Focuses the input. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the input changes. */\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    protected _dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Make sure the input is a supported type. */\n    protected _validateType() {\n        if (MC_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMcInputUnsupportedTypeError(this._type);\n        }\n    }\n\n    /** Checks whether the input type is one of the types that are never empty. */\n    protected _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    protected _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this._elementRef.nativeElement as HTMLInputElement).validity;\n\n        return validity && validity.badInput;\n    }\n}\n\n@Directive({\n    selector: 'input[mcInputMonospace]',\n    exportAs: 'McInputMonospace',\n    host: { class: 'mc-input_monospace' }\n})\nexport class McInputMono {\n}\n","import { Directive, forwardRef, Input, OnChanges, Provider, SimpleChanges } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, ValidatorFn, Validators } from '@angular/forms';\n\n\nexport const MIN_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MinValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[min][formControlName],[min][formControl],[min][ngModel]',\n    providers: [MIN_VALIDATOR],\n    host: {'[attr.min]': 'min ? min : null'}\n})\nexport class MinValidator implements Validator, OnChanges {\n\n    @Input() min: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('min' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.min(parseInt(this.min, 10)); }\n}\n\n\nexport const MAX_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MaxValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[max][formControlName],[max][formControl],[max][ngModel]',\n    providers: [MAX_VALIDATOR],\n    host: {\n        '[attr.max]': 'max ? max : null'\n    }\n})\nexport class MaxValidator implements Validator,\n    OnChanges {\n\n    @Input() max: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('max' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.max(parseInt(this.max, 10)); }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McInput, McInputMono, McNumberInput } from './input';\nimport { MaxValidator, MinValidator } from './input-number-validators';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator],\n    declarations: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator ]\n})\nexport class McInputModule {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-content',\n    preserveWhitespaces: false,\n    templateUrl: './content.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-content]': 'true'\n    }\n})\nexport class McContentComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-footer',\n    preserveWhitespaces: false,\n    templateUrl: './footer.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-footer]': 'true'\n    }\n})\nexport class McFooterComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector : 'mc-header',\n    preserveWhitespaces: false,\n    templateUrl: './header.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-header]': 'true'\n    }\n})\nexport class McHeaderComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-layout',\n    preserveWhitespaces: false,\n    styleUrls: ['layout.css'],\n    templateUrl: './layout.component.html',\n    host: {\n        '[class.mc-layout]': 'true',\n        '[class.mc-layout-has-sidebar]': 'hasSidebar'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McLayoutComponent {\n    hasSidebar = false;\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Host,\n    Input,\n    OnInit,\n    Optional,\n    Output\n} from '@angular/core';\nimport { toBoolean } from '@ptsecurity/mosaic/core';\n\nimport { McLayoutComponent } from './layout.component';\n\n\n@Component({\n    selector: 'mc-sidebar',\n    preserveWhitespaces: false,\n    templateUrl: './sidebar.component.html',\n    host: {\n        '[class.mc-layout-sidebar]': 'true',\n        '[class.mc-layout-sidebar-collapsed]': 'mcCollapsed',\n        '[style.flex]': 'mcFlex',\n        '[style.max-width.px]': 'mcWidth',\n        '[style.min-width.px]': 'mcWidth',\n        '[style.width.px]': 'mcWidth'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSidebarComponent implements OnInit {\n\n    @Input() _mcWidth = 200;\n    @Input() mcCollapsedWidth = 80;\n\n    @Input()\n    set mcCollapsible(value: boolean) {\n        this.collapsible = toBoolean(value);\n    }\n\n    get mcCollapsible(): boolean {\n        return this.collapsible;\n    }\n\n    @Input()\n    set mcCollapsed(value: boolean) {\n        this.collapsed = toBoolean(value);\n    }\n\n    get mcCollapsed(): boolean {\n        return this.collapsed;\n    }\n\n    // tslint:disable-next-line\n    @Output() mcCollapsedChange = new EventEmitter();\n\n    private collapsed = false;\n    private collapsible = false;\n\n    get mcFlex(): string {\n        if (this.mcCollapsed) {\n            return `0 0 ${this.mcCollapsedWidth}px`;\n        } else {\n            return `0 0 ${this.mcWidth}px`;\n        }\n    }\n\n    get mcWidth(): number {\n        if (this.mcCollapsed) {\n            return this.mcCollapsedWidth;\n        } else {\n            return this._mcWidth;\n        }\n    }\n\n    constructor(\n        @Optional() @Host() private mcLayoutComponent: McLayoutComponent) {\n    }\n\n    ngOnInit() {\n        if (this.mcLayoutComponent) {\n            this.mcLayoutComponent.hasSidebar = true;\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McContentComponent } from './content.component';\nimport { McFooterComponent } from './footer.component';\nimport { McHeaderComponent } from './header.component';\nimport { McLayoutComponent } from './layout.component';\nimport { McSidebarComponent } from './sidebar.component';\n\n\n@NgModule({\n    imports: [ CommonModule ],\n    exports: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ],\n    declarations: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ]\n})\nexport class McLayoutModule {\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    OnDestroy,\n    QueryList,\n    ViewEncapsulation,\n    ContentChildren\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\n\nimport { mixinColor, mixinDisabled, CanColor, CanDisable, CanDisableCtor, CanColorCtor } from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\n@Directive({\n    selector: 'button[mc-button], a[mc-button]',\n    host: { class: 'mc-button' }\n})\nexport class McButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-icon-button], a[mc-icon-button]',\n    queries: {\n        contentChildren: new ContentChildren(McIcon)\n    },\n    host: { class: 'mc-icon-button' }\n})\nexport class McIconButtonCSSStyler {\n    nativeElement: Element;\n\n    contentChildren: QueryList<McIcon>;\n\n    constructor(elementRef: ElementRef) {\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const twoIcons = 2;\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-icon-button_left');\n                }\n\n                if (iconElement.previousSibling) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-icon-button_right');\n                }\n            }\n        } else if (icons.length === twoIcons) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n\n\nexport class McButtonBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McButtonMixinBase:\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McButtonBase =\n        mixinColor(mixinDisabled(McButtonBase));\n\n\n@Component({\n    selector: `\n        button[mc-button],\n        button[mc-xs-button],\n        button[mc-sm-button],\n        button[mc-lg-button],\n        button[mc-xl-button]\n    `,\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[disabled]': 'disabled || null'\n    }\n})\nexport class McButton extends _McButtonMixinBase implements OnDestroy, CanDisable, CanColor {\n    constructor(elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        super(elementRef);\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n\n\n@Component({\n    selector: 'a[mc-button], a[mc-xs-button], a[mc-sm-button], a[mc-lg-button], a[mc-xl-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_haltDisabledEvents($event)'\n    }\n})\nexport class McAnchor extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n\n\n@Component({\n    selector: 'button[mc-icon-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null'\n    }\n})\nexport class McIconButton extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McButton,\n    McAnchor,\n    McIconButton,\n    McButtonCSSStyler,\n    McIconButtonCSSStyler\n} from './button.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McIconButtonCSSStyler\n    ],\n    declarations: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McIconButtonCSSStyler\n    ]\n})\nexport class McButtonModule {}\n","import {\n    Output,\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef, Input,\n    OnDestroy, EventEmitter,\n    ViewEncapsulation, HostBinding\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n@Component({\n    selector: 'mc-card',\n    templateUrl: './card.component.html',\n    styleUrls: ['./card.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color'],\n    host: {\n        class: 'mc-card',\n        '[class.mc-card_readonly]': 'readonly',\n        '[class.mc-card_selected]': 'selected',\n        '(keydown)': 'onKeyDown($event)',\n        '(click)': 'onClick($event)'\n    }\n})\nexport class McCard implements OnDestroy {\n    get tabIndex(): number | null {\n        return this.readonly ? null : this._tabIndex;\n    }\n\n    @HostBinding('attr.tabIndex')\n    @Input()\n    set tabIndex(value: number | null) {\n        this._tabIndex = value;\n    }\n\n    @Input()\n    readonly = false;\n\n    @Input()\n    selected = false;\n\n    @Output()\n    selectedChange = new EventEmitter<boolean>();\n\n    private _tabIndex: number | null = 0;\n\n    constructor(private _elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        this._focusMonitor.monitor(this._elementRef.nativeElement, false);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this.hostElement.focus();\n    }\n\n    onClick($event: MouseEvent) {\n        if (!this.readonly) {\n            $event.stopPropagation();\n\n            this.selectedChange.emit(!this.selected);\n        }\n    }\n\n    private get hostElement() {\n        return this._elementRef.nativeElement;\n    }\n\n    onKeyDown($event: KeyboardEvent) {\n        switch ($event.keyCode) {\n            case SPACE:\n                if (!this.readonly) {\n                    $event.preventDefault();\n                    this.selectedChange.emit(!this.selected);\n                }\n                break;\n            default:\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McCard\n} from './card.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [McCard],\n    declarations: [McCard]\n})\nexport class McCardModule {}\n","import { InjectionToken } from '@angular/core';\n\n\n/**\n * Checkbox click action when user click on input element.\n * noop: Do not toggle checked or indeterminate.\n * check: Only toggle checked status, ignore indeterminate.\n * check-indeterminate: Toggle checked status, set indeterminate to false. Default behavior.\n * undefined: Same as `check-indeterminate`.\n */\nexport type McCheckboxClickAction = 'noop' | 'check' | 'check-indeterminate' | undefined;\n\n/**\n * Injection token that can be used to specify the checkbox click behavior.\n */\nexport const MC_CHECKBOX_CLICK_ACTION =\n    new InjectionToken<McCheckboxClickAction>('mc-checkbox-click-action');\n","import {\n    AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_CHECKBOX_CLICK_ACTION, McCheckboxClickAction } from './checkbox-config';\n\n\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n\n/**\n * Provider Expression that allows mc-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nexport const MC_CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McCheckbox),\n    multi: true\n};\n\n/**\n * Represents the different states that require custom transitions between them.\n * @docs-private\n */\nexport enum TransitionCheckState {\n    /** The initial state of the component before any user interaction. */\n    Init,\n    /** The state representing the component when it's becoming checked. */\n    Checked,\n    /** The state representing the component when it's becoming unchecked. */\n    Unchecked,\n    /** The state representing the component when it's becoming indeterminate. */\n    Indeterminate\n}\n\n/** Change event object emitted by McCheckbox. */\nexport class McCheckboxChange {\n    /** The source McCheckbox of the event. */\n    source: McCheckbox;\n    /** The new `checked` value of the checkbox. */\n    checked: boolean;\n}\n\n// Boilerplate for applying mixins to McCheckbox.\n/** @docs-private */\nexport class McCheckboxBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McCheckboxMixinBase:\n    HasTabIndexCtor &\n    CanColorCtor &\n    CanDisableCtor &\n    typeof McCheckboxBase =\n        mixinTabIndex(mixinColor(mixinDisabled(McCheckboxBase)));\n\n\n/**\n * A mosaic checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A McCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n */\n@Component({\n    selector: 'mc-checkbox',\n    templateUrl: 'checkbox.html',\n    styleUrls: ['checkbox.css'],\n    exportAs: 'mcCheckbox',\n    host: {\n        class: 'mc-checkbox',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-indeterminate]': 'indeterminate',\n        '[class.mc-checked]': 'checked',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-checkbox-label-before]': 'labelPosition == \"before\"'\n    },\n    providers: [MC_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCheckbox extends _McCheckboxMixinBase implements ControlValueAccessor,\n    AfterViewInit, OnDestroy, CanColor, CanDisable, HasTabIndex {\n\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\n     * take precedence so this may be omitted.\n     */\n    @Input('aria-label') ariaLabel: string = '';\n\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     */\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-checkbox-${++nextUniqueId}`;\n\n    /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n    @Input() id: string = this._uniqueId;\n\n    /** Returns the unique id for the visual hidden input. */\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    /** Whether the checkbox is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    private _required: boolean;\n\n    /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n    @Input() labelPosition: 'before' | 'after' = 'after';\n\n    /** Name value will be applied to the input element if present */\n    @Input() name: string | null = null;\n\n    /** Event emitted when the checkbox's `checked` value changes. */\n    @Output() readonly change: EventEmitter<McCheckboxChange> =\n        new EventEmitter<McCheckboxChange>();\n\n    /** Event emitted when the checkbox's `indeterminate` value changes. */\n    @Output() readonly indeterminateChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** The value attribute of the native input element */\n    @Input() value: string;\n\n    /** The native `<input type=\"checkbox\">` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n     * @docs-private\n     */\n    _onTouched: () => any = () => {\n    }\n\n    private _currentAnimationClass: string = '';\n\n    private _currentCheckState: TransitionCheckState = TransitionCheckState.Init;\n\n    private _controlValueAccessorChangeFn: (value: any) => void = () => {\n    }\n\n    constructor(elementRef: ElementRef,\n                private _changeDetectorRef: ChangeDetectorRef,\n                private _focusMonitor: FocusMonitor,\n                @Attribute('tabindex') tabIndex: string,\n                @Optional() @Inject(MC_CHECKBOX_CLICK_ACTION)\n                private _clickAction: McCheckboxClickAction) {\n        super(elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._inputElement.nativeElement)\n            .subscribe((focusOrigin) => this._onInputFocusChange(focusOrigin));\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._inputElement.nativeElement);\n    }\n\n    /**\n     * Whether the checkbox is checked.\n     */\n    @Input()\n    get checked(): boolean {\n        return this._checked;\n    }\n\n    set checked(value: boolean) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     */\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value != this.disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    @Input()\n    get indeterminate(): boolean {\n        return this._indeterminate;\n    }\n\n    set indeterminate(value: boolean) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = value;\n\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(TransitionCheckState.Indeterminate);\n            } else {\n                this._transitionCheckState(\n                    this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n    }\n\n    private _indeterminate: boolean = false;\n\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // This method is getting called whenever the label of the checkbox changes.\n        // Since the checkbox uses the OnPush strategy we need to notify it about the change\n        // that has been recognized by the cdkObserveContent directive.\n        this._changeDetectorRef.markForCheck();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: any) {\n        this._onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    _getAriaChecked(): 'true' | 'false' | 'mixed' {\n        return this.checked ? 'true' : (this.indeterminate ? 'mixed' : 'false');\n    }\n\n    private _transitionCheckState(newState: TransitionCheckState) {\n        const oldState = this._currentCheckState;\n        const element: HTMLElement = this._elementRef.nativeElement;\n\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n\n        this._currentCheckState = newState;\n\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n        }\n    }\n\n    private _emitChangeEvent() {\n        const event = new McCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    }\n\n    /** Function is called whenever the focus changes for the input element. */\n    private _onInputFocusChange(focusOrigin: FocusOrigin) {\n        if (focusOrigin) {\n            this._onTouched();\n        }\n    }\n\n    /** Toggles the `checked` state of the checkbox. */\n    toggle(): void {\n        this.checked = !this.checked;\n    }\n\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param event\n     */\n    _onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && this._clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && this._clickAction !== 'check') {\n\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n\n            this.toggle();\n            this._transitionCheckState(\n                this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        } else if (!this.disabled && this._clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mc-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n\n    /** Focuses the checkbox. */\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _onInteractionEvent(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n}\n","import {\n    Directive,\n    forwardRef,\n    Provider\n} from '@angular/core';\nimport {\n    CheckboxRequiredValidator,\n    NG_VALIDATORS\n} from '@angular/forms';\n\n\nexport const MC_CHECKBOX_REQUIRED_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => McCheckboxRequiredValidator),\n    multi: true\n};\n\n/**\n * Validator for Mosaic checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mc-checkbox`.\n */\n@Directive({\n    selector: `mc-checkbox[required][formControlName],\n             mc-checkbox[required][formControl], mc-checkbox[required][ngModel]`,\n    providers: [MC_CHECKBOX_REQUIRED_VALIDATOR],\n    host: { '[attr.required]': 'required ? \"\" : null' }\n})\nexport class McCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McCheckbox } from './checkbox';\nimport { McCheckboxRequiredValidator } from './checkbox-required-validator';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McCheckbox, McCheckboxRequiredValidator],\n    declarations: [McCheckbox, McCheckboxRequiredValidator]\n})\nexport class McCheckboxModule {\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\n\n@Component({\n    selector: 'mc-divider',\n    host: {\n        class: 'mc-divider',\n        role: 'separator',\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n        '[class.mc-divider-vertical]': 'vertical',\n        '[class.mc-divider-inset]': 'inset'\n    },\n    template: '',\n    styleUrls: ['divider.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false\n})\nexport class McDivider {\n    // Whether the divider is vertically aligned.\n    @Input()\n    get vertical(): boolean {\n        return this._vertical;\n    }\n\n    set vertical(value: boolean) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n\n    private _vertical: boolean = false;\n\n    // Whether the divider is an inset divider.\n    @Input()\n    get inset(): boolean {\n        return this._inset;\n    }\n\n    set inset(value: boolean) {\n        this._inset = coerceBooleanProperty(value);\n    }\n\n    private _inset: boolean = false;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McDivider } from './divider.component';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McDivider],\n    declarations: [McDivider]\n})\nexport class McDividerModule {\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    Directive,\n    TemplateRef,\n    ComponentFactoryResolver,\n    ApplicationRef,\n    Injector,\n    ViewContainerRef,\n    Inject,\n    OnDestroy\n} from '@angular/core';\nimport { TemplatePortal, DomPortalOutlet } from '@ptsecurity/cdk/portal';\nimport { Subject } from 'rxjs';\n\n\n/**\n * Dropdown content that will be rendered lazily once the dropdown is opened.\n */\n@Directive({\n    selector: 'ng-template[mcDropdownContent]'\n})\nexport class McDropdownContent implements OnDestroy {\n\n    /** Emits when the dropdown content has been attached. */\n    _attached = new Subject<void>();\n    private _portal: TemplatePortal;\n    private _outlet: DomPortalOutlet;\n\n    constructor(\n        private _template: TemplateRef<any>,\n        private _componentFactoryResolver: ComponentFactoryResolver,\n        private _appRef: ApplicationRef,\n        private _injector: Injector,\n        private _viewContainerRef: ViewContainerRef,\n        @Inject(DOCUMENT) private _document: any) {}\n\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context: any = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n\n        this.detach();\n\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'),\n                this._componentFactoryResolver, this._appRef, this._injector);\n        }\n\n        const element: HTMLElement = this._template.elementRef.nativeElement;\n\n        // Because we support opening the same dropdown from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode!.insertBefore(this._outlet.outletElement, element);\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\n","import { EventEmitter, TemplateRef, InjectionToken } from '@angular/core';\nimport { FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/**\n * Injection token used to provide the parent dropdown to dropdown-specific components.\n * @docs-private\n */\nexport const MC_DROPDOWN_PANEL = new InjectionToken<McDropdownPanel>('MC_DROPDOWN_PANEL');\n\n/**\n * Interface for a custom dropdown panel that can be used with `mcDropdownTriggerFor`.\n * @docs-private\n */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownPanel<T = any> {\n    xPosition: DropdownPositionX;\n    yPosition: DropdownPositionY;\n    overlapTrigger: boolean;\n    templateRef: TemplateRef<any>;\n    closed: EventEmitter<void | 'click' | 'keydown' | 'tab'>;\n    direction?: Direction;\n    lazyContent?: McDropdownContent;\n    backdropClass?: string;\n    hasBackdrop?: boolean;\n    focusFirstItem(origin?: FocusOrigin): void;\n    resetActiveItem(): void;\n    setPositionClasses?(x: DropdownPositionX, y: DropdownPositionY): void;\n    addItem?(item: T): void;\n    removeItem?(item: T): void;\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    Inject,\n    Optional\n} from '@angular/core';\nimport { IFocusableOption, FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\n\n\n// Boilerplate for applying mixins to McDropdownItem.\n/** @docs-private */\nexport class McDropdownItemBase {}\nexport const _McDropdownItemMixinBase: CanDisableCtor & typeof McDropdownItemBase =\n    mixinDisabled(McDropdownItemBase);\n\n/**\n * This directive is intended to be used inside an mc-dropdown tag.\n * It exists mostly to set the role attribute.\n */\n@Component({\n    selector: 'mc-dropdown-item, [mc-dropdown-item]',\n    exportAs: 'mcDropdownItem',\n    inputs: ['disabled'],\n    host: {\n        role: 'dropdown-item',\n        class: 'mc-dropdown__item',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_checkDisabled($event)'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    template: `<ng-content></ng-content>`\n})\nexport class McDropdownItem extends _McDropdownItemMixinBase\n    implements IFocusableOption, CanDisable, OnDestroy {\n\n    private _document: Document;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        @Inject(DOCUMENT) document: any,\n        private _focusMonitor: FocusMonitor,\n        @Inject(MC_DROPDOWN_PANEL) @Optional() private _parentDropdownPanel?: McDropdownPanel<McDropdownItem>) {\n        super();\n\n        if (_focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for dropdown items only when the focus was not caused by a\n            // mouse or touch interaction.\n            _focusMonitor.monitor(this._elementRef.nativeElement, false);\n        }\n\n        if (_parentDropdownPanel && _parentDropdownPanel.addItem) {\n            _parentDropdownPanel.addItem(this);\n        }\n\n        this._document = document;\n    }\n\n    /** Focuses the dropdown item. */\n    focus(origin: FocusOrigin = 'program'): void {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin);\n        } else {\n            this._getHostElement().focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n\n        if (this._parentDropdownPanel && this._parentDropdownPanel.removeItem) {\n            this._parentDropdownPanel.removeItem(this);\n        }\n    }\n\n    /** Used to set the `tabindex`. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Returns the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._elementRef.nativeElement;\n    }\n\n    /** Prevents the default element actions if it is disabled. */\n    _checkDisabled(event: Event): void {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        const element: HTMLElement = this._elementRef.nativeElement;\n        // tslint:disable-next-line:no-magic-numbers\n        const textNodeType = this._document ? this._document.TEXT_NODE : 3;\n        let output = '';\n\n        if (element.childNodes) {\n            const length = element.childNodes.length;\n\n            // Go through all the top-level text nodes and extract their text.\n            // We skip anything that's not a text node to prevent the text from\n            // being thrown off by something like an icon.\n            for (let i = 0; i < length; i++) {\n                if (element.childNodes[i].nodeType === textNodeType) {\n                    output += element.childNodes[i].textContent;\n                }\n            }\n        }\n\n        return output.trim();\n    }\n}\n","import {\n    trigger,\n    state,\n    style,\n    animate,\n    transition,\n    query,\n    group,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\n/**\n * Animations used by the mc-dropdown component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nexport const mcDropdownAnimations: {\n    readonly transformDropdown: AnimationTriggerMetadata;\n    readonly fadeInItems: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation controls the dropdown panel's entry and exit from the page.\n     *\n     * When the dropdown panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the dropdown panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformDropdown: trigger('transformDropdown', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        })),\n        transition('void => enter', group([\n            query('.mc-dropdown__content', animate('50ms linear', style({opacity: 1}))),\n            animate('50ms cubic-bezier(0, 0, 0.2, 1)', style({transform: 'scale(1)'}))\n        ])),\n        transition('* => void', animate('50ms 25ms linear', style({opacity: 0})))\n    ]),\n\n\n    /**\n     * This animation fades in the background color and content of the dropdown panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // now. Remove next time we do breaking changes.\n        state('showing', style({opacity: 1})),\n        transition('void => *', [\n            style({opacity: 0}),\n            animate('200ms 60ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\nexport const fadeInItems = mcDropdownAnimations.fadeInItems;\n\nexport const transformDropdown = mcDropdownAnimations.transformDropdown;\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    Output,\n    TemplateRef,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    OnInit\n} from '@angular/core';\nimport { FocusKeyManager, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE, DOWN_ARROW, UP_ARROW } from '@ptsecurity/cdk/keycodes';\nimport { Subject, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { mcDropdownAnimations } from './dropdown-animations';\nimport { McDropdownContent } from './dropdown-content';\nimport { throwMcDropdownInvalidPositionX, throwMcDropdownInvalidPositionY } from './dropdown-errors';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/** Default `mc-dropdown` options that can be overridden. */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownDefaultOptions {\n    /** The x-axis position of the dropdown. */\n    xPosition: DropdownPositionX;\n\n    /** The y-axis position of the dropdown. */\n    yPosition: DropdownPositionY;\n\n    /** Whether the dropdown should overlap the dropdown trigger. */\n    overlapTrigger: boolean;\n\n    /** Class to be applied to the dropdown's backdrop. */\n    backdropClass: string;\n\n    /** Whether the dropdown has a backdrop. */\n    hasBackdrop?: boolean;\n}\n\n/** Injection token to be used to override the default options for `mc-dropdown`. */\nexport const MC_DROPDOWN_DEFAULT_OPTIONS =\n    new InjectionToken<McDropdownDefaultOptions>('mc-dropdown-default-options', {\n        providedIn: 'root',\n        factory: MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY\n    });\n\n/** @docs-private */\nexport function MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY(): McDropdownDefaultOptions {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop'\n    };\n}\n\n@Component({\n    selector: 'mc-dropdown',\n    templateUrl: 'dropdown.html',\n    styleUrls: ['dropdown.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcDropdown',\n    animations: [\n        mcDropdownAnimations.transformDropdown,\n        mcDropdownAnimations.fadeInItems\n    ],\n    providers: [\n        { provide: MC_DROPDOWN_PANEL, useExisting: McDropdown }\n    ]\n})\nexport class McDropdown implements AfterContentInit, McDropdownPanel<McDropdownItem>, OnInit, OnDestroy {\n\n    /** Position of the dropdown in the X axis. */\n    @Input()\n    get xPosition(): DropdownPositionX { return this._xPosition; }\n    set xPosition(value: DropdownPositionX) {\n        if (value !== 'before' && value !== 'after') {\n            throwMcDropdownInvalidPositionX();\n        }\n\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Position of the dropdown in the Y axis. */\n    @Input()\n    get yPosition(): DropdownPositionY { return this._yPosition; }\n    set yPosition(value: DropdownPositionY) {\n        if (value !== 'above' && value !== 'below') {\n            throwMcDropdownInvalidPositionY();\n        }\n\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Whether the dropdown should overlap its trigger. */\n    @Input()\n    get overlapTrigger(): boolean { return this._overlapTrigger; }\n    set overlapTrigger(value: boolean) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n\n    /** Whether the dropdown has a backdrop. */\n    @Input()\n    get hasBackdrop(): boolean | undefined { return this._hasBackdrop; }\n    set hasBackdrop(value: boolean | undefined) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n\n    /**\n     * This method takes classes set on the host mc-dropdown element and applies them on the\n     * dropdown template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing dropdown from outside the component.\n     * @param classes list of class names\n     */\n    @Input('class')\n    set panelClass(classes: string) {\n        if (classes && classes.length) {\n            this._classList = classes.split(' ').reduce((obj: any, className: string) => {\n                obj[className] = true;\n\n                return obj;\n            }, {});\n\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n\n    /** Config object to be passed into the dropdown's ngClass */\n    _classList: {[key: string]: boolean} = {};\n\n    /** Current state of the panel animation. */\n    _panelAnimationState: 'void' | 'enter' = 'void';\n\n    /** Emits whenever an animation on the dropdown completes. */\n    _animationDone = new Subject<AnimationEvent>();\n\n    /** Whether the dropdown is animating. */\n    _isAnimating: boolean;\n\n    /** Layout direction of the dropdown. */\n    direction: Direction;\n\n    /** Class to be added to the backdrop element. */\n    @Input() backdropClass: string = this._defaultOptions.backdropClass;\n\n    /** @docs-private */\n    @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n\n    /**\n     * List of the items inside of a dropdown.\n     */\n    @ContentChildren(McDropdownItem) items: QueryList<McDropdownItem>;\n\n    /**\n     * Dropdown content that will be rendered lazily.\n     * @docs-private\n     */\n    @ContentChild(McDropdownContent) lazyContent: McDropdownContent;\n\n    /** Event emitted when the dropdown is closed. */\n    @Output() readonly closed: EventEmitter<void | 'click' | 'keydown' | 'tab'> =\n        new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n\n    private _keyManager: FocusKeyManager<McDropdownItem>;\n    private _xPosition: DropdownPositionX = this._defaultOptions.xPosition;\n    private _yPosition: DropdownPositionY = this._defaultOptions.yPosition;\n\n    /** Dropdown items inside the current dropdown. */\n    private _items: McDropdownItem[] = [];\n\n    /** Emits whenever the amount of dropdown items changes. */\n    private _itemChanges = new Subject<McDropdownItem[]>();\n\n    /** Subscription to tab events on the dropdown panel */\n    private _tabSubscription = Subscription.EMPTY;\n    private _overlapTrigger: boolean = this._defaultOptions.overlapTrigger;\n    private _hasBackdrop: boolean | undefined = this._defaultOptions.hasBackdrop;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        private _ngZone: NgZone,\n        @Inject(MC_DROPDOWN_DEFAULT_OPTIONS) private _defaultOptions: McDropdownDefaultOptions) { }\n\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager<McDropdownItem>(this.items).withWrap().withTypeAhead();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n    }\n\n    ngOnDestroy() {\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n\n    /** Handle a keyboard event from the dropdown, delegating to the appropriate action. */\n    _handleKeydown(event: KeyboardEvent) {\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case ESCAPE:\n                this.closed.emit('keydown');\n                break;\n            case UP_ARROW:\n            case DOWN_ARROW:\n                this._keyManager.setFocusOrigin('keyboard');\n                this._keyManager.onKeydown(event);\n                break;\n            default:\n                // todo зачем обрабатывать лишние события ?\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    /**\n     * Focus the first item in the dropdown.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin: FocusOrigin = 'program'): void {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable.asObservable()\n                .pipe(take(1))\n                .subscribe(() => this._keyManager.setFocusOrigin(origin).setFirstItemActive());\n        } else {\n            this._keyManager.setFocusOrigin(origin).setFirstItemActive();\n        }\n    }\n\n    /**\n     * Resets the active item in the dropdown. This is used when the dropdown is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n\n    /**\n     * Registers a dropdown item with the dropdown.\n     * @docs-private\n     */\n    addItem(item: McDropdownItem) {\n        // We register the items through this method, rather than picking them up through\n        // `ContentChildren`, because we need the items to be picked up by their closest\n        // `mc-dropdown` ancestor. If we used `@ContentChildren(McDropdownItem, {descendants: true})`,\n        // all descendant items will bleed into the top-level dropdown in the case where the consumer\n        // has `mc-dropdown` instances nested inside each other.\n        if (this._items.indexOf(item) === -1) {\n            this._items.push(item);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Removes an item from the dropdown.\n     * @docs-private\n     */\n    removeItem(item: McDropdownItem) {\n        const index = this._items.indexOf(item);\n\n        if (this._items.indexOf(item) > -1) {\n            this._items.splice(index, 1);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Adds classes to the dropdown panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the dropdown along the x axis.\n     * @param posY Position of the dropdown along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX: DropdownPositionX = this.xPosition, posY: DropdownPositionY = this.yPosition) {\n        const classes = this._classList;\n        classes['mc-dropdown-before'] = posX === 'before';\n        classes['mc-dropdown-after'] = posX === 'after';\n        classes['mc-dropdown-above'] = posY === 'above';\n        classes['mc-dropdown-below'] = posY === 'below';\n    }\n\n    /** Starts the enter animation. */\n    _startAnimation() {\n        this._panelAnimationState = 'enter';\n    }\n\n    /** Resets the panel animation to its initial state. */\n    _resetAnimation() {\n        this._panelAnimationState = 'void';\n    }\n\n    /** Callback that is invoked when the panel animation completes. */\n    _onAnimationDone(event: AnimationEvent) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n\n        // Scroll the content element to the top once the animation is done. This is necessary, because\n        // we move focus to the first item while it's still being animated, which can throw the browser\n        // off when it determines the scroll position. Alternatively we can move focus when the\n        // animation is done, however moving focus asynchronously will interrupt screen readers\n        // which are in the process of reading out the dropdown already. We take the `element` from\n        // the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n}\n","import {\n    AfterContentInit,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy, OnInit,\n    Optional,\n    Output,\n    ViewContainerRef\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction, Directionality } from '@ptsecurity/cdk/bidi';\nimport {\n    FlexibleConnectedPositionStrategy,\n    HorizontalConnectionPos,\n    Overlay,\n    OverlayConfig,\n    OverlayRef,\n    VerticalConnectionPos,\n    IScrollStrategy\n} from '@ptsecurity/cdk/overlay';\nimport { TemplatePortal } from '@ptsecurity/cdk/portal';\nimport { merge, Subscription } from 'rxjs';\nimport { filter, take, takeUntil } from 'rxjs/operators';\n\nimport { throwMcDropdownMissingError } from './dropdown-errors';\nimport { McDropdownPanel } from './dropdown-panel';\nimport { McDropdown } from './dropdown.component';\n\n\n/** Injection token that determines the scroll handling while the dropdown is open. */\nexport const MC_DROPDOWN_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-dropdown-scroll-strategy');\n\n/** @docs-private */\nexport function MC_DROPDOWN_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_DROPDOWN_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_DROPDOWN_SCROLL_STRATEGY_FACTORY\n};\n\n/**\n * This directive is intended to be used in conjunction with an mc-dropdown tag.  It is\n * responsible for toggling the display of the provided dropdown instance.\n */\n@Directive({\n    selector: `[mcDropdownTriggerFor]`,\n    host: {\n        '(touchstart)': '_openedBy = \"touch\"',\n        '(click)': 'toggle()'\n    },\n    exportAs: 'mcDropdownTrigger'\n})\nexport class McDropdownTrigger implements OnInit, AfterContentInit, OnDestroy {\n\n    /** Whether the dropdown is open. */\n    get opened(): boolean {\n        return this._opened;\n    }\n\n    /** The text direction of the containing app. */\n    get dir(): Direction {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    // Tracking input type is necessary so it's possible to only auto-focus\n    // the first item of the list when the dropdown is opened via the keyboard\n    _openedBy: 'mouse' | 'touch' | null = null;\n\n    /** References the dropdown instance that the trigger is associated with. */\n    @Input('mcDropdownTriggerFor') dropdown: McDropdownPanel;\n\n    /** Data to be passed along to any lazily-rendered content. */\n    @Input('mcDropdownTriggerData') data: any;\n\n    /** Event emitted when the associated dropdown is opened. */\n    @Output() readonly dropdownOpened: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the associated dropdown is closed. */\n    @Output() readonly dropdownClosed: EventEmitter<void> = new EventEmitter<void>();\n\n    private _portal: TemplatePortal;\n    private _overlayRef: OverlayRef | null = null;\n    private _opened: boolean = false;\n    private _closeSubscription = Subscription.EMPTY;\n    private _hoverSubscription = Subscription.EMPTY;\n\n    constructor(private _overlay: Overlay,\n                private _element: ElementRef<HTMLElement>,\n                private _viewContainerRef: ViewContainerRef,\n                @Inject(MC_DROPDOWN_SCROLL_STRATEGY) private _scrollStrategy: any,\n                @Optional() private _dir: Directionality,\n                private _focusMonitor?: FocusMonitor) {}\n\n    ngOnInit(): void {\n        this.dropdown.closed = this.dropdown.closed || new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n    }\n\n    ngAfterContentInit() {\n        this._check();\n\n        this.dropdown.closed.asObservable().subscribe(() => {\n            this._destroy();\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n\n        this._cleanUpSubscriptions();\n    }\n\n    /** Toggles the dropdown between the open and closed states. */\n    toggle(): void {\n        // tslint:disable-next-line:no-void-expression\n        return this._opened ? this.close() : this.open();\n    }\n\n    /** Opens the dropdown. */\n    open(): void {\n        if (this._opened) {\n            return;\n        }\n\n        this._check();\n\n        const overlayRef = this._createOverlay();\n        this._setPosition(overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy);\n        overlayRef.attach(this._portal);\n\n        if (this.dropdown.lazyContent) {\n            this.dropdown.lazyContent.attach(this.data);\n        }\n\n        this._closeSubscription = this._closingActions().subscribe(() => this.close());\n        this._init();\n\n        if (this.dropdown instanceof McDropdown) {\n            this.dropdown._startAnimation();\n        }\n    }\n\n    /** Closes the dropdown. */\n    close(): void {\n        this.dropdown.closed.emit();\n    }\n\n    /**\n     * Focuses the dropdown trigger.\n     * @param origin Source of the dropdown trigger's focus.\n     */\n    focus(origin: FocusOrigin = 'program') {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._element.nativeElement, origin);\n        } else {\n            this._element.nativeElement.focus();\n        }\n    }\n\n    /** Closes the dropdown and does the necessary cleanup. */\n    private _destroy() {\n        if (!this._overlayRef || !this.opened) {\n            return;\n        }\n\n        const dropdown = this.dropdown;\n\n        this._closeSubscription.unsubscribe();\n        this._overlayRef.detach();\n\n        if (dropdown instanceof McDropdown) {\n            dropdown._resetAnimation();\n\n            if (dropdown.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                dropdown._animationDone\n                    .pipe(\n                        filter((event) => event.toState === 'void'),\n                        take(1),\n                        // Interrupt if the content got re-attached.\n                        takeUntil(dropdown.lazyContent._attached)\n                    )\n                    .subscribe(() => dropdown.lazyContent.detach(), undefined, () => {\n                        // No matter whether the content got re-attached, reset the dropdown.\n                        this._reset();\n                    });\n            } else {\n                this._reset();\n            }\n        } else {\n            this._reset();\n\n            if (dropdown.lazyContent) {\n                dropdown.lazyContent.detach();\n            }\n        }\n    }\n\n    /**\n     * This method sets the dropdown state to open and focuses the first item if\n     * the dropdown was opened via the keyboard.\n     */\n    private _init(): void {\n        this.dropdown.direction = this.dir;\n        this._setIsOpened(true);\n        this.dropdown.focusFirstItem(this._openedBy || 'program');\n    }\n\n    /**\n     * This method resets the dropdown when it's closed, most importantly restoring\n     * focus to the dropdown trigger if the dropdown was opened via the keyboard.\n     */\n    private _reset(): void {\n        this._setIsOpened(false);\n\n        // We should reset focus if the user is navigating using a keyboard or\n        // if we have a top-level trigger which might cause focus to be lost\n        // when clicking on the backdrop.\n        if (!this._openedBy) {\n            // Note that the focus style will show up both for `program` and\n            // `keyboard` so we don't have to specify which one it is.\n            this.focus();\n        } else {\n            this.focus(this._openedBy);\n        }\n\n        this._openedBy = null;\n    }\n\n    // set state rather than toggle to support triggers sharing a dropdown\n    private _setIsOpened(isOpen: boolean): void {\n        this._opened = isOpen;\n        // tslint:disable-next-line:no-void-expression\n        this._opened ? this.dropdownOpened.emit() : this.dropdownClosed.emit();\n    }\n\n    /**\n     * This method checks that a valid instance of Dropdown has been passed into\n     * mcDropdownTriggerFor. If not, an exception is thrown.\n     */\n    private _check() {\n        if (!this.dropdown) {\n            throwMcDropdownMissingError();\n        }\n    }\n\n    /**\n     * This method creates the overlay from the provided dropdown's template and saves its\n     * OverlayRef so that it can be attached to the DOM when open is called.\n     */\n    private _createOverlay(): OverlayRef {\n        if (!this._overlayRef) {\n            this._portal = new TemplatePortal(this.dropdown.templateRef, this._viewContainerRef);\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions(config.positionStrategy as FlexibleConnectedPositionStrategy);\n            this._overlayRef = this._overlay.create(config);\n\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `McDropdownPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n\n        return this._overlayRef;\n    }\n\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    private _getOverlayConfig(): OverlayConfig {\n        return new OverlayConfig({\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withTransformOriginOn('.mc-dropdown__panel'),\n            hasBackdrop: this.dropdown.hasBackdrop === null || this.dropdown.hasBackdrop === undefined\n                ? true\n                : this.dropdown.hasBackdrop,\n            backdropClass: this.dropdown.backdropClass || 'cdk-overlay-transparent-backdrop',\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir\n        });\n    }\n\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the dropdown based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    private _subscribeToPositions(position: FlexibleConnectedPositionStrategy): void {\n        if (this.dropdown.setPositionClasses) {\n            // todo possibly we should not recompute positions there\n            /*position.positionChanges.subscribe((change) => {\n                const posX: DropdownPositionX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                const posY: DropdownPositionY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n\n                this.dropdown.setPositionClasses!(posX, posY);\n            });*/\n            position.positionChanges.subscribe(() => {\n                this.dropdown.setPositionClasses!(this.dropdown.xPosition, this.dropdown.yPosition);\n            });\n        }\n    }\n\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    private _setPosition(positionStrategy: FlexibleConnectedPositionStrategy) {\n        const [originX, originFallbackX]: HorizontalConnectionPos[] =\n            this.dropdown.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n\n        const [overlayY, overlayFallbackY]: VerticalConnectionPos[] =\n            this.dropdown.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        const [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        const offsetY = 0;\n\n        if (!this.dropdown.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n\n        positionStrategy.withPositions([\n            {originX, originY, overlayX, overlayY, offsetY},\n            {originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY},\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            }\n        ]);\n    }\n\n    /** Cleans up the active subscriptions. */\n    private _cleanUpSubscriptions(): void {\n        this._closeSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n\n    /** Returns a stream that emits whenever an action that should close the dropdown occurs. */\n    private _closingActions() {\n        const backdrop = this._overlayRef!.backdropClick();\n        const detachments = this._overlayRef!.detachments();\n\n        return merge(backdrop, detachments);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER, McDropdownTrigger } from './dropdown-trigger';\nimport { McDropdown } from './dropdown.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule\n    ],\n    exports: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    declarations: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    providers: [MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER]\n})\nexport class McDropdownModule {}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-cleaner',\n    template: '<i class=\"mc-icon_light\" mc-icon=\"mc-close-M_16\" color=\"second\"></i>'\n})\nexport class McCleaner {}\n","import { NgControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** The element ID for this control. */\n    readonly id: string;\n\n    /** The placeholder for this control. */\n    readonly placeholder: string;\n\n    /** Gets the NgControl for this control. */\n    readonly ngControl: NgControl | null;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Whether the control is empty. */\n    readonly empty: boolean;\n\n    /** Whether the control is required. */\n    readonly required: boolean;\n\n    /** Whether the control is disabled. */\n    readonly disabled: boolean;\n\n    /** Whether the control is in an error state. */\n    readonly errorState: boolean;\n\n    /**\n     * An optional name for the control type that can be used to distinguish `mc-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mc-form-field-type-{{controlType}}` to its root element.\n     */\n    readonly controlType?: string;\n\n    /** Handles a click on the control's container. */\n    abstract onContainerClick(event: MouseEvent): void;\n}\n","import { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldNumberControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** the number step */\n    step: number;\n\n    /** the number big step */\n    bigStep: number;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Handles step up and down */\n    abstract stepUp(step: number): void;\n\n    abstract stepDown(step: number): void;\n}\n","import { Directive, Input } from '@angular/core';\n\n\nlet nextUniqueId = 0;\n\n@Directive({\n    selector: 'mc-hint',\n    host: {\n        class: 'mc-hint',\n        '[attr.id]': 'id'\n    }\n})\nexport class McHint {\n    @Input() id: string = `mc-hint-${nextUniqueId++}`;\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcPrefix]'\n})\nexport class McPrefix {\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-stepper',\n    template: `\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-up mc-angle-L_16\"\n           (mousedown)=\"onStepUp($event)\">\n        </i>\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-down mc-angle-L_16\"\n           (mousedown)=\"onStepDown($event)\">\n        </i>\n    `\n})\nexport class McStepper {\n    @Output()\n    readonly stepUp: EventEmitter<void> = new EventEmitter<void>();\n    @Output()\n    readonly stepDown: EventEmitter<void> = new EventEmitter<void>();\n\n    onStepUp($event: MouseEvent) {\n        this.stepUp.emit();\n        $event.preventDefault();\n    }\n\n    onStepDown($event: MouseEvent) {\n        this.stepDown.emit();\n        $event.preventDefault();\n    }\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcSuffix]'\n})\nexport class McSuffix {\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\nexport function isBoolean(val: any): val is boolean { return typeof val === 'boolean'; }\n\nexport function toBoolean(value: any): boolean {\n    return value != null && `${value}` !== 'false';\n}\n","import { NgModule, InjectionToken, Optional, Inject, isDevMode } from '@angular/core';\nimport { BidiModule } from '@ptsecurity/cdk/bidi';\n\n\n// Injection token that configures whether the Mosaic sanity checks are enabled.\nexport const MC_SANITY_CHECKS = new InjectionToken<boolean>('mc-sanity-checks', {\n    providedIn: 'root',\n    factory: MC_SANITY_CHECKS_FACTORY\n});\n\nexport function MC_SANITY_CHECKS_FACTORY(): boolean {\n    return true;\n}\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Mosaic\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., McTabsModule).\n */\n@NgModule({\n    imports: [ BidiModule ],\n    exports: [ BidiModule ]\n})\nexport class McCommonModule {\n    // Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n    private _hasDoneGlobalChecks = false;\n\n    // Reference to the global `document` object.\n    private _document = typeof document === 'object' && document ? document : null;\n\n    // Reference to the global 'window' object.\n    private _window = typeof window === 'object' && window ? window : null;\n\n    constructor(@Optional() @Inject(MC_SANITY_CHECKS) private _sanityChecksEnabled: boolean) {\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n\n    // Whether any sanity checks are enabled\n    private _areChecksEnabled(): boolean {\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    }\n\n    // Whether the code is running in tests.\n    private _isTestEnv() {\n        // tslint:disable-next-line\n        return this._window && (this._window['__karma__'] || this._window['jasmine']);\n    }\n\n    private _checkDoctypeIsDefined(): void {\n        if (this._document && !this._document.doctype) {\n            console.warn(\n                'Current document does not have a doctype. This may cause ' +\n                'some Mosaic components not to behave as expected.'\n            );\n        }\n    }\n\n    private _checkThemeIsPresent(): void {\n        if (this._document && typeof getComputedStyle === 'function') {\n            const testElement = this._document.createElement('div');\n\n            testElement.classList.add('mc-theme-loaded-marker');\n            this._document.body.appendChild(testElement);\n\n            const computedStyle = getComputedStyle(testElement);\n\n            // In some situations, the computed style of the test element can be null. For example in\n            // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n            if (computedStyle && computedStyle.display !== 'none') {\n                console.warn(\n                    'Could not find Mosaic core theme. Most Mosaic ' +\n                    'components may not work as expected. For more info refer ' +\n                    'to the theming guide: link there'\n                );\n            }\n\n            this._document.body.removeChild(testElement);\n        }\n    }\n}\n","import { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanDisable {\n    disabled: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableCtor = Constructor<CanDisable>;\n\n// Mixin to augment a directive with a `disabled` property.\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): CanDisableCtor & T {\n    return class extends base {\n        private _disabled: boolean = false;\n\n        get disabled() {\n            return this._disabled;\n        }\n\n        set disabled(value: any) {\n            this._disabled = coerceBooleanProperty(value);\n        }\n\n        constructor(...args: any[]) {\n            // tslint:disable-next-line\n            super(...args);\n        }\n    };\n}\n","import { ElementRef } from '@angular/core';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanColor {\n    color: ThemePalette;\n}\n\n/** @docs-private */\nexport type CanColorCtor = Constructor<CanColor>;\n\nexport interface HasElementRef {\n    _elementRef: ElementRef;\n}\n\nexport enum ThemePalette {\n    Primary = 'primary',\n    Second = 'second',\n    Error = 'error',\n    Default = 'second',\n    Empty = ''\n}\n\n/** Mixin to augment a directive with a `color` property. */\nexport function mixinColor<T extends Constructor<HasElementRef>>(\n    base: T,\n    defaultColor: ThemePalette = ThemePalette.Default\n): CanColorCtor & T {\n    return class extends base {\n\n        private _color: ThemePalette;\n\n        get color(): ThemePalette {\n            return this._color;\n        }\n\n        set color(value: ThemePalette) {\n            const colorPalette = value || defaultColor;\n\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mc-${this._color}`);\n                }\n\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mc-${colorPalette}`);\n                }\n\n                this._color = colorPalette;\n            }\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n\n            this.color = defaultColor;\n        }\n    };\n}\n\n","import { Constructor } from './constructor';\nimport { CanDisable } from './disabled';\n\n\nexport interface HasTabIndex {\n    tabIndex: number;\n}\n\nexport type HasTabIndexCtor = Constructor<HasTabIndex>;\n\n// Mixin to augment a directive with a `tabIndex` property.\nexport function mixinTabIndex<T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0)\n    : HasTabIndexCtor & T {\n    return class extends base {\n        private _tabIndex: number = defaultTabIndex;\n\n        get tabIndex(): number {\n            return this.disabled ? -1 : this._tabIndex;\n        }\n\n        set tabIndex(value: number) {\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n    };\n}\n","import { FormControl, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\nimport { ErrorStateMatcher } from '../error/error-options';\n\nimport { Constructor } from './constructor';\n\n\n/** @docs-private */\nexport interface CanUpdateErrorState {\n\n    readonly stateChanges: Subject<void>;\n\n    errorState: boolean;\n    errorStateMatcher: ErrorStateMatcher;\n\n    updateErrorState();\n}\n\n/** @docs-private */\nexport type CanUpdateErrorStateCtor = Constructor<CanUpdateErrorState>;\n\n/** @docs-private */\nexport interface HasErrorState {\n    _parentFormGroup: FormGroupDirective;\n    _parentForm: NgForm;\n    _defaultErrorStateMatcher: ErrorStateMatcher;\n    ngControl: NgControl;\n}\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T): CanUpdateErrorStateCtor & T {\n    return class extends base {\n        /** Whether the component is in an error state. */\n        errorState: boolean = false;\n\n        /**\n         * Stream that emits whenever the state of the input changes such that the wrapping\n         * `MatFormField` needs to run change detection.\n         */\n        readonly stateChanges = new Subject<void>();\n\n        errorStateMatcher: ErrorStateMatcher;\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this._parentFormGroup || this._parentForm;\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control as FormControl : null;\n            const newState = matcher.isErrorState(control, parent);\n\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n","import {\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ENTER, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Subject } from 'rxjs';\n\nimport { McOptgroup } from './optgroup';\n\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n\n/** Event object emitted by McOption when selected or deselected. */\nexport class McOptionSelectionChange {\n    constructor(\n        /** Reference to the option that emitted the event. */\n        public source: McOption,\n        /** Whether the change in the option's value was a result of a user action. */\n        public isUserInput = false) {\n    }\n}\n\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * @docs-private\n */\nexport interface IMcOptionParentComponent {\n    disableRipple?: boolean;\n    multiple?: boolean;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_OPTION_PARENT_COMPONENT =\n    new InjectionToken<IMcOptionParentComponent>('MC_OPTION_PARENT_COMPONENT');\n\n/**\n * Single option inside of a `<mat-select>` element.\n */\n@Component({\n    selector: 'mc-option',\n    exportAs: 'mcOption',\n    host: {\n        '[attr.tabindex]': '_getTabIndex()',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-option-multiple]': 'multiple',\n        '[class.mc-active]': 'active',\n        '[id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '(click)': '_selectViaInteraction()',\n        '(keydown)': '_handleKeydown($event)',\n        class: 'mc-option'\n    },\n    styleUrls: ['option.css'],\n    templateUrl: 'option.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McOption implements AfterViewChecked, OnDestroy {\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n        return this._parent && this._parent.multiple;\n    }\n\n    /** The unique ID of the option. */\n    get id(): string {\n        return this._id;\n    }\n\n    /** Whether or not the option is currently selected. */\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    /** The form value of the option. */\n    @Input() value: any;\n\n    /** Whether the option is disabled. */\n    @Input()\n    get disabled() {\n        return (this.group && this.group.disabled) || this._disabled;\n    }\n\n    set disabled(value: any) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() {\n        return this._parent && this._parent.disableRipple;\n    }\n\n    /** Event emitted when the option is selected or deselected. */\n        // tslint:disable-next-line:no-output-on-prefix\n    @Output() readonly onSelectionChange = new EventEmitter<McOptionSelectionChange>();\n\n    /** Emits when the state of the option changes and any parents have to be notified. */\n    readonly _stateChanges = new Subject<void>();\n\n    private _selected = false;\n    private _active = false;\n    private _disabled = false;\n    private readonly _id = `mc-option-${_uniqueIdCounter++}`;\n    private _mostRecentViewValue = '';\n\n    constructor(\n        private readonly _element: ElementRef,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_OPTION_PARENT_COMPONENT) private readonly _parent: IMcOptionParentComponent,\n        @Optional() readonly group: McOptgroup) {\n    }\n\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active(): boolean {\n        return this._active;\n    }\n\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue(): string {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n\n    /** Selects the option. */\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Deselects the option. */\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Sets focus onto this option. */\n    focus(): void {\n        const element = this._getHostElement();\n\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles(): void {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles(): void {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        return this.viewValue;\n    }\n\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event: KeyboardEvent): void {\n        // tslint:disable-next-line\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\n            this._selectViaInteraction();\n\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction(): void {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Gets the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n\n    /** Emits the selection change event. */\n    private _emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McOptionSelectionChange(this, isUserInput));\n    }\n}\n\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nexport function _countGroupLabelsBeforeOption(\n    optionIndex: number, options: QueryList<McOption>,\n    optionGroups: QueryList<McOptgroup>\n): number {\n\n    if (optionGroups.length) {\n        const optionsArray = options.toArray();\n        const groups = optionGroups.toArray();\n\n        let groupCounter = 0;\n\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n\n        return groupCounter;\n    }\n\n    return 0;\n}\n\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionIndex Index of the option to be scrolled into the view.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nexport function _getOptionScrollPosition(\n    optionIndex: number,\n    optionHeight: number,\n    currentScrollPosition: number,\n    panelHeight: number\n): number {\n    const optionOffset = optionIndex * optionHeight;\n\n    if (optionOffset < currentScrollPosition) { return optionOffset; }\n\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n\n    return currentScrollPosition;\n}\n\n","import { ConnectionPositionPair } from '@ptsecurity/cdk/overlay';\n\n\nexport const POSITION_MAP: { [key: string]: ConnectionPositionPair } = {\n    top         : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom'\n    },\n    topCenter   : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topLeft     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topRight    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    right       : {\n        originX : 'end',\n        originY : 'center',\n        overlayX: 'start',\n        overlayY: 'center'\n    },\n    rightTop    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'top',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    rightBottom : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    bottom      : {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomCenter: {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomLeft  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    bottomRight : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    left        : {\n        originX : 'start',\n        originY : 'center',\n        overlayX: 'end',\n        overlayY: 'center'\n    },\n    leftTop     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    leftBottom  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    }\n};\n\nexport const DEFAULT_4_POSITIONS = _objectValues([\n    POSITION_MAP.top, POSITION_MAP.right, POSITION_MAP.bottom, POSITION_MAP.left\n]);\n\nfunction arrayMap<T, S>(array: T[], iteratee: (item: T, index: number, arr: T[]) => S): S[] {\n    let index = -1;\n    const length = array == null ? 0 : array.length;\n    const result = Array(length);\n\n    while (++index < length) {\n        result[ index ] = iteratee(array[ index ], index, array);\n    }\n\n    return result;\n}\nfunction baseValues<T>(object: { [key: string]: T } | T[], props: string[]): T[] {\n    return arrayMap(props,  (key) => {\n        return object[ key ];\n    });\n}\nfunction _objectValues<T>(object: { [key: string]: T } | T[]): T[] {\n    return object == null ? [] : baseValues(object, Object.keys(object));\n}\n","export function throwMcDropdownMissingError() {\n    throw Error(`mcDropdownTriggerFor: must pass in an mc-dropdown instance.\n    Example:\n      <mc-dropdown #dropdown=\"mcDropdown\"></mc-dropdown>\n      <button [mcDropdownTriggerFor]=\"dropdown\"></button>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mc-dropdown xPosition=\"before\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mc-dropdown yPosition=\"above\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n","export function getMcFormFieldMissingControlError(): Error {\n  return Error('mc-form-field must contain a McFormFieldControl.');\n}\n","export function getMcInputUnsupportedTypeError(inputType: string): Error {\n    return Error(`Input type \"${inputType}\" isn't supported by mcInput.`);\n}\n","/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nexport function getMcSelectDynamicMultipleError(): Error {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nexport function getMcSelectNonArrayValueError(): Error {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nexport function getMcSelectNonFunctionValueError(): Error {\n    return Error('`compareWith` must be a function.');\n}\n","import { NgModule, Directive, ElementRef, QueryList } from '@angular/core';\n\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(McLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({\n    selector: '[mc-line], [mcLine]',\n    host: { class: 'mc-line' }\n})\nexport class McLine {}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nexport class McLineSetter {\n    constructor(private _lines: QueryList<McLine>, private _element: ElementRef) {\n        this._setLineClass(this._lines.length);\n\n        this._lines.changes.subscribe(() => {\n            this._setLineClass(this._lines.length);\n        });\n    }\n\n    private _setLineClass(count: number): void {\n        this._resetClasses();\n        if (count === 2 || count === 3) {\n            this._setClass(`mc-${count}-line`, true);\n        } else if (count > 3) {\n            this._setClass(`mc-multi-line`, true);\n        }\n    }\n\n    private _resetClasses(): void {\n        this._setClass('mc-2-line', false);\n        this._setClass('mc-3-line', false);\n        this._setClass('mc-multi-line', false);\n    }\n\n    private _setClass(className: string, isAdd: boolean): void {\n        if (isAdd) {\n            this._element.nativeElement.classList.add(className);\n        } else {\n            this._element.nativeElement.classList.remove(className);\n        }\n    }\n}\n\n@NgModule({\n    imports: [],\n    exports: [McLine],\n    declarations: [McLine]\n})\nexport class McLineModule {}\n","import { Injectable } from '@angular/core';\nimport { FormGroupDirective, NgForm, FormControl } from '@angular/forms';\n\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n@Injectable()\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\n\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n@Injectable({ providedIn: 'root' })\nexport class ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\n\nexport type McPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mc-primary .mc-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mc-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n@Component({\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'mc-pseudo-checkbox',\n    styleUrls: ['pseudo-checkbox.css'],\n    templateUrl: 'pseudo-checkbox.partial.html',\n    host: {\n        class: 'mc-pseudo-checkbox',\n        '[class.mc-indeterminate]': 'state === \"indeterminate\"',\n        '[class.mc-checked]': 'state === \"checked\"',\n        '[class.mc-disabled]': 'disabled'\n    }\n})\nexport class McPseudoCheckbox {\n    @Input() state: McPseudoCheckboxState = 'unchecked';\n\n    @Input() disabled: boolean = false;\n}\n","import { NgModule } from '@angular/core';\n\nimport { McPseudoCheckbox } from './pseudo-checkbox/pseudo-checkbox';\n\n\n@NgModule({\n    exports: [McPseudoCheckbox],\n    declarations: [McPseudoCheckbox]\n})\nexport class McPseudoCheckboxModule {}\n\n\nexport * from './pseudo-checkbox/pseudo-checkbox';\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class McMeasureScrollbarService {\n\n    get scrollBarWidth(): number {\n        if (this._scrollbarWidth) {\n            return this._scrollbarWidth;\n        }\n        this.initScrollBarWidth();\n\n        return this._scrollbarWidth;\n    }\n\n    private _scrollbarWidth: number;\n    private scrollbarMeasure = {\n        position: 'absolute',\n        top: '-9999px',\n        width: '50px',\n        height: '50px',\n        overflow: 'scroll'\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private document: any\n    ) {\n        this.initScrollBarWidth();\n    }\n\n    initScrollBarWidth() {\n        const scrollDiv = this.document.createElement('div');\n\n        // tslint:disable-next-line\n        for (const scrollProp in this.scrollbarMeasure) {\n            if (this.scrollbarMeasure.hasOwnProperty(scrollProp)) {\n                scrollDiv.style[scrollProp] = this.scrollbarMeasure[scrollProp];\n            }\n        }\n\n        this.document.body.appendChild(scrollDiv);\n\n        const width = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n        this.document.body.removeChild(scrollDiv);\n        this._scrollbarWidth = width;\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\nimport { mixinDisabled, CanDisable, CanDisableCtor } from '../common-behaviors/index';\n\n\n// Boilerplate for applying mixins to McOptgroup.\n/** @docs-private */\nexport class McOptgroupBase {}\n\nexport const _McOptgroupMixinBase: CanDisableCtor & typeof McOptgroupBase = mixinDisabled(McOptgroupBase);\n\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\n\n/**\n * Component that is used to group instances of `mc-option`.\n */\n@Component({\n    selector: 'mc-optgroup',\n    exportAs: 'mcOptgroup',\n    templateUrl: 'optgroup.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    styleUrls: ['optgroup.css'],\n    host: {\n        class: 'mc-optgroup',\n        role: 'group',\n        '[class.mc-optgroup-disabled]': 'disabled',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-labelledby]': '_labelId'\n    }\n})\nexport class McOptgroup extends _McOptgroupMixinBase implements CanDisable {\n    /** Label for the option group. */\n    @Input() label: string;\n\n    /** Unique id for the underlying label. */\n    _labelId: string = `mc-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McPseudoCheckboxModule } from '../selection/index';\n\nimport { McOptgroup } from './optgroup';\nimport { McOption } from './option';\n\n\n@NgModule({\n    imports: [CommonModule, McPseudoCheckboxModule],\n    exports: [McOption, McOptgroup],\n    declarations: [McOption, McOptgroup]\n})\nexport class McOptionModule {}\n\n\nexport * from './option';\nexport * from './optgroup';\n","import { InjectionToken } from '@angular/core';\n\n\n/** InjectionToken that can be used to specify the global label options. */\nexport const MC_LABEL_GLOBAL_OPTIONS =\n    new InjectionToken<LabelOptions>('mc-label-global-options');\n\n/** Type for the available floatLabel values. */\nexport type FloatLabelType = 'always' | 'never' | 'auto';\n\n/** Configurable options for floating labels. */\nexport interface LabelOptions {\n    /**\n     * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n     * Default behavior is assumed to be `auto`.\n     */\n    float?: FloatLabelType;\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata,\n} from '@angular/animations';\n\n\nexport const fadeAnimation: AnimationTriggerMetadata =  trigger('fadeAnimation', [\n    state('void', style({ opacity: 0 })),\n    state('true', style({ opacity: 1 })),\n    state('false', style({ opacity: 0 })),\n    transition('* => true', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n    transition('* => void', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)')),\n]);\n","import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { mixinColor, CanColor, CanColorCtor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\n@Directive({\n    selector: '[mc-icon]',\n    host: { class: 'mc mc-icon' }\n})\nexport class McIconCSSStyler {}\n\n\nexport class McIconBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McIconMixinBase: CanColorCtor & typeof McIconBase = mixinColor(McIconBase, ThemePalette.Empty);\n\n\n@Component({\n    selector: `[mc-icon]`,\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./icon.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color']\n})\nexport class McIcon extends _McIconMixinBase implements CanColor {\n    constructor(elementRef: ElementRef, @Attribute('mc-icon') iconName: string) {\n        super(elementRef);\n\n        elementRef.nativeElement.classList.add(iconName);\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McIcon,\n    McIconCSSStyler\n} from './icon.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McIcon,\n        McIconCSSStyler\n    ],\n    declarations: [\n        McIcon,\n        McIconCSSStyler\n    ]\n})\nexport class McIconModule {}\n"],"names":["_this","mcVisibleChange","emit","_onHide","next","_markForCheck","this","mcMouseLeaveDelay","McTooltipComponent","prototype","setClassMap","_classMap","_prefix","_placement","isContentEmpty","isTitleString","mcTitle","afterHidden","asObservable","cdr","markForCheck","_handleBodyInteraction","_closeOnInteraction","hide","tslib_1.__decorate","Output","tslib_1.__metadata","EventEmitter","Input","Component","selector","exportAs","animations","fadeAnimation","template","preserveWhitespaces","styles","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","host","(body:click)","ChangeDetectorRef","MC_TOOLTIP_SCROLL_STRATEGY","InjectionToken","MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","provide","deps","Overlay","useFactory","MC_TOOLTIP_SCROLL_STRATEGY_FACTORY","McTooltip","_overlay","elementRef","_ngZone","_scrollDispatcher","hostView","_scrollStrategy","_dir","isTooltipOpen","isDynamicTooltip","parentDisabled","_disabled","_trigger","$unsubscribe","Subject","manualListeners","Map","_destroyed","availablePositions","POSITION_MAP","Object","defineProperty","get","_title","set","title","updateCompValue","value","coerceBooleanProperty","_mouseEnterDelay","_mouseLeaveDelay","_visible","tooltipClass","tooltip","_createOverlay","_overlayRef","strategy","position","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withPositions","DEFAULT_4_POSITIONS","slice","scrollableAncestors","getAncestorScrollContainers","withScrollableContainers","positionChanges","pipe","takeUntil","subscribe","change","onPositionChange","scrollableViewProperties","isOverlayClipped","mcVisible","run","create","direction","positionStrategy","panelClass","scrollStrategy","_updatePosition","detachments","_detach","hasAttached","detach","$event","updatedPlacement","mcPlacement","keys","some","key","connectionPair","originX","originY","overlayX","overlayY","handlePositioningUpdate","pos","overlayElement","clientHeight","element","nativeElement","currentContainer","style","top","parseInt","split","ngOnInit","initElementRefListeners","ngOnDestroy","dispose","forEach","listener","event","removeEventListener","clear","complete","handleKeydown","e","keyCode","ESCAPE","handleTouchend","mcTrigger","show","addEventListener","disabled","overlayRef","_portal","ComponentPortal","attach","instance","property","distinctUntilChanged","data","getConfig","origin","_getOrigin","overlay","_getOverlayPosition","tslib_1.__assign","main","fallback","originPosition","isLtr","getMcTooltipInvalidPositionError","_a","_invertPosition","x","y","overlayPosition","newX","newY","HostBinding","Directive","(keydown)","(touchend)","tslib_1.__param","Inject","Optional","ElementRef","NgZone","ScrollDispatcher","ViewContainerRef","Directionality","McToolTipModule","NgModule","declarations","exports","imports","BrowserAnimationsModule","CommonModule","OverlayModule","providers","entryComponents","VERSION","Version","SELECT_PANEL_PADDING_X","McSelect","_onFadeInDone","_panelDoneAnimating","panelOpen","_changeDetectorRef","_onFocus","_focused","stateChanges","_onBlur","_onTouched","_onAttached","overlayDir","positionChange","take","detectChanges","_calculateOverlayOffsetX","panel","scrollTop","_scrollTop","_getPanelTheme","_parentFormField","color","focus","_elementRef","_calculateOverlayScroll","selectedIndex","scrollBuffer","maxScroll","itemHeight","_getItemHeight","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","Math","min","max","onContainerClick","open","onRemoveMatcherItem","option","stopPropagation","deselect","_panelOpen","empty","_calculateHiddenItems","visibleItems","totalItemsWidth","_getTotalItemsWidthInMatcher","totalVisibleItemsWidth","tags","tag","offsetTop","offsetHeight","getBoundingClientRect","width","hiddenItems","selected","length","itemsCounter","trigger","querySelector","matcherList","itemsCounterShowed","matcherListWidth","matcherWidth","triggerClone","cloneNode","remove","_renderer","setStyle","appendChild","querySelectorAll","item","_handleClosedKeydown","isArrowKey","DOWN_ARROW","UP_ARROW","LEFT_ARROW","RIGHT_ARROW","ENTER","SPACE","multiple","altKey","preventDefault","_keyManager","onKeydown","_handleOpenKeydown","manager","HOME","END","setFirstItemActive","setLastItemActive","close","activeItem","_multiple","A","ctrlKey","hasDeselectedOptions_1","options","select","previouslyFocusedIndex","activeItemIndex","shiftKey","_selectViaInteraction","_initializeSelection","Promise","resolve","then","_setSelectionByValue","ngControl","_value","Array","isArray","getMcSelectNonArrayValueError","_selectionModel","currentValue","_selectValue","_sortValues","correspondingOption","setActiveItem","find","_compareWith","error","isDevMode","console","warn","_initKeyManager","ActiveDescendantKeyManager","withTypeAhead","withVerticalOrientation","withHorizontalOrientation","_isRtl","tabOut","_destroy","_scrollActiveOptionIntoView","_resetOptions","changedOrDestroyed","merge","changes","optionSelectionChanges","_onSelect","source","isUserInput","apply","map","_stateChanges","_setOptionIds","wasSelected","isSelected","_propagateChanges","options_1","toArray","sort","a","b","sortComparator","indexOf","fallbackValue","valueToEmit","valueChange","_onChange","selectionChange","McSelectChange","_optionIds","id","join","_highlightCorrectOption","activeOptionIndex","labelCount","_countGroupLabelsBeforeOption","optionGroups","_getOptionScrollPosition","_getOptionIndex","reduce","result","current","index","undefined","_calculateOverlayPosition","items","_getItemCount","panelHeight","scrollContainerHeight","selectedOptionOffset","_offsetY","_calculateOverlayOffsetY","_checkOverlayWithinViewport","offsetX","overlayRect","viewportSize","_viewportRuler","getViewportSize","isRtl","first","group","leftOverflow","left","rightOverflow","right","round","updatePosition","topSpaceAvailable","_triggerRect","bottomSpaceAvailable","height","bottom","panelHeightTop","abs","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_transformOrigin","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","optionHeightAdjustment","ViewChild","ViewChildren","McTag","QueryList","CdkConnectedOverlay","ContentChildren","McOption","descendants","McOptgroup","ContentChild","McSelectTrigger","ErrorStateMatcher","Observable","McSelect_1","inputs","[attr.id]","[attr.tabindex]","class","[class.mc-disabled]","[class.mc-select-invalid]","[class.mc-select-required]","(focus)","(blur)","(window:resize)","mcSelectAnimations","transformPanel","fadeInContent","McFormFieldControl","useExisting","MC_OPTION_PARENT_COMPONENT","Self","Attribute","MC_SELECT_SCROLL_STRATEGY","ViewportRuler","Renderer2","NgForm","FormGroupDirective","McFormField","NgControl","String","_McSelectMixinBase","McSelectModule","McOptionModule","McIconModule","McTagModule","McFormFieldModule","MC_SELECT_SCROLL_STRATEGY_PROVIDER","McSplitterComponent","ngZone","renderer","areas","_gutterSize","isDragging","areaPositionDivider","listeners","_direction","gutterSize","size","coerceNumberProperty","addArea","area","order","getSize","setOrder","push","initialSize","isVertical","onMouseDown","leftAreaIndex","rightAreaIndex","leftArea","rightArea","startPoint","screenX","screenY","disableFlex","setSize","runOutsideAngular","listen","onMouseUp","onMouseMove","removeArea","indexToRemove","splice","endPoint","offset","newLeftAreaSize","newRightAreaSize","minLeftAreaSize","getMinSize","minRightAreaSize","rightAreaOffset","unsubscribe","pop","McGutterDirective","_order","_size","getCursor","getState","coerceCssPixelValue","setAttr","state","Error","attribute","setAttribute","McSplitterAreaDirective","splitter","removeStyle","sz","getSizeProperty","getOffsetSizeProperty","getComputedStyle","parseFloat","getMinSizeProperty","McSplitterModule","nextUniqueId","McToggleBase","_McToggleMixinBase","mixinTabIndex","mixinColor","mixinDisabled","ThemePalette","Primary","McToggleChange","McToggleComponent","_super","_focusMonitor","tabIndex","call","labelPosition","ariaLabel","ariaLabelledby","_uniqueId","name","_checked","_onTouchedCallback","_onChangeCallback","_","monitor","tslib_1.__extends","McToggleComponent_1","stopMonitoring","focusVia","_inputElement","_getAriaChecked","checked","_onInteractionEvent","_onLabelTextChange","_onInputClick","_updateModelValue","_emitChangeEvent","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","NG_VALUE_ACCESSOR","forwardRef","multi","[id]","[class.mc-toggle_off]","transition","animate","FocusMonitor","McToggleModule","A11yModule","McCommonModule","_positions","visibleSource","BehaviorSubject","$visible","mcMouseEnterDelay","TemplateRef","visible","unshift","hideTId","clearTimeout","showTId","setTimeout","mcTabGroupMixinBase","McTabNavBase","mcTabNavMixinBase","McTabNav","McTabLinkBase","mcTabLinkMixinBase","McTabLink","focusMonitor","isActive","[attr.aria-current]","[attr.aria-disabled]","[attr.tabIndex]","[class.mc-active]","McTabsModule","PortalModule","McTabGroup","McTabLabel","McTab","McTabContent","McLightTabsCssStyler","McAlignTabsCenterCssStyler","McAlignTabsEndCssStyler","McStretchTabsCssStyler","McTabLabelWrapper","McTabBody","McTabBodyPortal","McTabHeader","McTagBase","_McTagMixinBase","ngAfterContentInit","_addClassModificatorForIcons","icons","contentChildren","iconElement","previousElementSibling","nextElementSibling","nextSibling","classList","add","previousSibling","firstIconElement","secondIconElement","McIcon","PlatformModule","MC_TEXTAREA_VALUE_ACCESSOR","McTextareaBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","McTextareaMixinBase","mixinErrorState","McTextarea","inputValueAccessor","canGrow","focused","controlType","uid","_required","lineHeight","freeRowsHeight","minHeight","valueAccessor","previousNativeValue","growObserver","fromEvent","growSubscription","grow","bind","McTextarea_1","_id","paddingTop","paddingBottom","ngOnChanges","ngDoCheck","updateErrorState","dirtyCheckNativeValue","textarea","outerHeight","window","diff","scrollHeight","focusChanged","isFocused","isBadInput","newValue","validity","badInput","getGrowHeight","toString","[class.mc-textarea-resizable]","[attr.placeholder]","[disabled]","[required]","McTextareaModule","FormsModule","TimeParts","TimeFormats","TIMEFORMAT_PLACEHOLDERS","HHmmss","HHmm","DEFAULT_TIME_FORMAT","HOURS_MINUTES_SECONDS_REGEXP","RegExp","HOURS_MINUTES_REGEXP","HOURS_ONLY_REGEXP","uniqueComponentIdSuffix","validatorOnChange","noop","validator","MC_INPUT_VALUE_ACCESSOR","McTimepickerBase","McTimepickerMixinBase","ɵ1","validate","c","registerOnValidatorChange","McTimepicker","_minTime","_maxTime","onChange","placeholder","Validators","compose","parseValidator","minTimeValidator","maxTimeValidator","McTimepicker_1","applyInputChanges","_timeFormat","formatValue","timeFormatKey","minValue","minDateTime","getDateFromTimeString","maxValue","maxDateTime","onTouched","onBlur","onPaste","clipboardUserInput","clipboardData","getData","onInput","initialCursorStart","selectionStart","initialCursorEnd","selectionEnd","isAutocompleteTriggered","getParsedTimeParts","hoursOnly","hoursAndMinutes","hoursAndMinutesAndSeconds","doTimestringReformat","errors","createSelectionOfTimeComponentInInput","setProperty","getTimeStringFromDate","timeFormat","onKeyDown","getKeyCode","upDownTimeByArrowKeys","switchSelectionBetweenTimeparts","applyParams","changedTime","timeToApply","currentDateTimeInput","control","updateValueAndValidity","cursorPos","modifiedTimePart","getTimeEditMetrics","incrementTime","decrementTime","getCursorPositionOfPrevTimePartStart","getCursorPositionOfNextTimePartStart","code","newEditParams","cursorStartPosition","cursorEndPosition","dateVal","whatToIncrement","seconds","getTimeDigitsFromDate","hours","minutes","getDateFromTimeDigits","whatToDecrement","timeString","timeDevider","nextDividerPos","cursorPosition","minutesIndex","hoursIndex","secondsIndex","tempVal","getNumberWithLeadingZero","getHours","getMinutes","getSeconds","match","trim","Number","resultDate","Date","isNaN","getTime","digit","mcTimepickerParse","text","isTimeLowerThenMin","mcTimepickerLowerThenMintime","isTimeGreaterThenMax","mcTimepickerHigherThenMaxtime","timeToCompare","[attr.time-format]","[attr.min-time]","[attr.max-time]","[attr.value]","(input)","(paste)","NG_VALIDATORS","useValue","McTimepickerModule","transform","minWidth","opacity","query","animateChild","MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","McSelectBase","_scrollStrategyFactory","_triggerFontSize","_panelDoneAnimatingStream","defer","onSelectionChange","onStable","switchMap","openedChange","_openedStream","filter","o","_closedStream","oneMoreText","_uid","o1","o2","_placeholder","getMcSelectDynamicMultipleError","getMcSelectNonFunctionValueError","SelectionModel","added","removed","startWith","ngAfterViewInit","toggle","fontSize","selectedOptions","viewValue","reverse","isEmpty","_handleKeydown","PAGE_DOWN","setNextPageItemActive","McTreeSelection","FocusKeyManager","updateScrollSize","withScrollSize","floor","_getHeight","setFocusedOption","updateActiveItem","withShift","previousIndex_1","previousActiveItemIndex","activeIndex_1","setSelected","withCtrl","_canDeselectLast","autoSelect","_emitNavigationEvent","toggleFocusedOption","focusedIndex","_isValidIndex","focusedOption","renderNodeChanges","dataDiffer","viewContainer","parentData","_dataDiffer","_nodeOutlet","arrayOfInstances","_embeddedViews","view","viewDef","def","nodes","node","nodeMatchedQueries","matchedQueryIds","nodeData","nodeIndex","reset","notifyOnChanges","getClientRects","navigationChange","McTreeNavigationChange","noUnselect","CdkTreeNodeOutlet","McTreeNodeOption","McTreeSelection_1","[tabIndex]","role","CdkTree","IterableDiffers","_McTreeSelectionBase","MC_TREE_DIRECTIVES","McTreeNodeDef","McTreeNodePadding","McTreeModule","CdkTreeModule","McTreeFlattener","transformFunction","getLevel","isExpandable","getChildren","_flattenNode","level","resultNodes","parentMap","flatNode","children","child","childParentMap","flattenNodes","structuredData","expandFlattenedNodes","treeControl","results","currentExpand","expand","i","isExpanded","McTreeFlatDataSource","treeFlattener","initialData","_flattenedData","_expandedData","_data","dataNodes","connect","collectionViewer","viewChange","expansionModel","disconnect","DataSource","McTreeNestedDataSource","arguments","CdkPortal","ctorParameters","McTabBase","mcTabMixinBase","viewContainerRef","textLabel","contentPortal","hasOwnProperty","TemplatePortal","explicitContent","implicitContent","read","mcTabsAnimations","translateTab","componentFactoryResolver","centeringSub","Subscription","EMPTY","leavingSub","beforeCentering","isCenterPosition","bodyPosition","isCentering","content","afterLeavingCenter","ComponentFactoryResolver","CdkPortalOutlet","dir","changeDetectorRef","onCentering","onCentered","animationDuration","dirChangeSubscription","computePositionAnimationState","positionIndex","computePositionFromOrigin","onTranslateTabStarted","toState","onTranslateTabComplete","fromState","getLayoutDirection","PortalHostDirective","McTabLabelWrapperBase","mcTabLabelWrapperMixinBase","getOffsetLeft","offsetLeft","getOffsetWidth","offsetWidth","McTabHeaderBase","viewportRuler","showPaginationControls","disableScrollAfter","disableScrollBefore","selectFocusedIndex","indexFocused","_scrollDistance","selectedIndexChanged","destroyed","_selectedIndex","coercedValue","keyManager","isValidIndex","focusIndex","v","getMaxScrollDistance","scrollDistanceChanged","checkScrollingControls","ngAfterContentChecked","tabLabelCount","labelWrappers","updatePagination","scrollToLabel","updateTabScrollPosition","dirChange","observableOf","resize","realign","withWrap","requestAnimationFrame","newFocusIndex","setTabFocus","onContentChanges","textContent","currentTextContent","zoneCallback","checkPaginationEnabled","tab","containerEl","tabListContainer","scrollLeft","scrollWidth","scrollDistance","translateX","tabList","scrollHeader","scrollDir","viewLength","labelIndex","selectedLabel","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","isEnabled","[class.mc-tab-header__pagination-controls_enabled]","[class.mc-tab-header_rtl]","nextId","McTabChangeEvent","MC_TABS_CONFIG","McTabGroupBase","lightTabs","defaultConfig","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","indexToSelect","tabBodyWrapperHeight","tabsSubscription","tabLabelSubscription","_dynamicHeight","lightTab","groupId","clampTabIndex","isFirstRun_1","createChangeEvent","tabs","subscribeToTabLabels","getTabLabelId","getTabContentId","setTabBodyWrapperHeight","tabHeight","wrapper","tabBodyWrapper","removeTabBodyWrapperHeight","handleClick","tabHeader","getTabIndex","[class.mc-tab-group_dynamic-height]","[class.mc-tab-group_inverted-header]","modalControl","closeAll","McModalService","mcOnCancel","mcCloseByESC","mcWidth","ModalBuilderForService","getInstance","confirm","confirmType","mcOnOk","mcModalType","mcClassName","mcMaskClosable","success","simpleConfirm","delete","mcCancelText","Injectable","McModalControlService","McModalModule","McButtonModule","McModalComponent","CssUnitPipe","MC_NAVBAR_CONTAINER","MC_NAVBAR_ITEM","MC_NAVBAR_BRAND","MC_NAVBAR_TITLE","McNavbarLogo","McNavbarBrand","McNavbarTitle","McNavbarItemBase","_McNavbarMixinBase","McNavbarItem","_platform","_cdRef","dropdownItems","isCollapsed","_subscription","encodeURI","dropdownContent","denyClickIfDisabled","_focusMonitor$","hasDropdownContent","listenClickOutside","startListenFocusDropdownItems","stopListenFocusDropdownItems","isActiveDropdownLink","link","isBrowser","location","href","handleClickByItem","toggleDropdown","isNavbarItem","target","contains","handleClickByDropdownItem","forceCloseDropdown","_dropdownElements","el","events","eventListeners","hasAttribute","stopImmediatePropagation","[attr.disabled]","Platform","McNavbarContainer","CollapsibleItem","_collapsed","processCollapsed","collapsed","updateCollapsedClass","CachedItemWidth","itemsForCollapse","_collapsedItemsWidth","calculateAndCacheCollapsedItemsWidth","updateTitle","acc","getTitle","computedTitle","getAttribute","decodeURI","innerText","removeAttribute","McNavbar","forceRecalculateItemsWidth","resizeDebounceInterval","firstLevelElement","secondLevelElements","resizeObserver","debounceTime","_resizeSubscription","updateCollapsed","_itemsWidths","calculateAndCacheItemsWidth","_totalItemsWidths","calculateAndCacheTotalItemsWidth","collapseDelta","maxAllowedWidth","itemsWidths","canCollapse","collapsedItemsWidth","getOuterElementWidth","getPropertyValue","allItemsSelector","allItems","from","getItemsForCollapse","McNavbarModule","idIterator","McProgressBarBase","_McProgressBarMixinBase","McProgressBar","mode","McProgressBarModule","McProgressSpinnerBase","_McProgressSpinnerMixinBase","McProgressSpinner","percentage","McProgressSpinnerModule","McRadioChange","McRadioGroupBase","_McRadioGroupMixinBase","MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","McRadioGroup","_changeDetector","_name","_selected","_isInitialized","_labelPosition","controlValueAccessorChangeFn","updateRadioButtonNames","markRadiosForCheck","updateSelectedRadioFromValue","checkSelectedRadioButton","toBoolean","touch","emitChangeEvent","_radios","radio","isAlreadySelected","McRadioButton","McRadioButtonBase","_McRadioButtonMixinBase","radioGroup","_radioDispatcher","removeUniqueSelectionListener","newCheckedState","notify","newDisabledState","required","onInputClick","onInputChange","groupValueChanged","[class.mc-checked]","UniqueSelectionDispatcher","McRadioModule","McTreeNodeDef_1","CdkTreeNodeDef","_baseLeftPadding","_iconWidth","_indent","McTreeNodePadding_1","_withIcon","_paddingIndent","nodeLevel","_treeNode","_tree","_level","leftPadding","_setPadding","CdkTreeNodePadding","treeSelection","_hasFocus","McTreeNodeOption_1","_handleFocus","_handleBlur","_handleClick","tabindex","[class.mc-selected]","[class.mc-focused]","[attr.aria-expanded]","[attr.aria-level]","(click)","CdkTreeNode","McTreeSelectionChange","_differs","rawValue","log","_onKeyDown","collapse","PAGE_UP","setPreviousPageItemActive","MC_SELECTION_LIST_VALUE_ACCESSOR","McListSelection","_McListSelectionMixinBase","McListBase","McList","McListSubheaderCssStyler","McListItemBase","McListItem","_element","_lineSetter","McLineSetter","_lines","_getHostElement","McLine","McListModule","McLineModule","McListOption","McLinkBase","_McLinkBase","McLink","McLinkModule","parentService","rootOpenModals","rootAfterAllClose","rootRegisteredMetaMap","afterAllClose","openModals","registeredMetaMap","registerModal","modalRef","hasRegistered","afterOpenSubscription","afterOpen","afterCloseSubscription","afterClose","removeOpenModal","has","SkipSelf","McModalRef","ModalUtil","document","lastPosition","listenDocumentClick","getLastClickPosition","clientX","clientY","ModalUtil$1","cfr","mcMeasureScrollbarService","changeDetector","_mcVisible","mcZIndex","_mcClosable","_mcMask","_mcMaskClosable","mcAfterOpen","mcAfterClose","mcOkType","_mcOkLoading","_mcCancelLoading","transformOrigin","mcGetContainer","mcOkText","animationState","isComponent","mcContent","createDynamicComponent","isModalButtons","mcFooter","formatModalButtons","container","HTMLElement","OverlayRef","handleVisibleStateChange","firstChange","contentComponentRef","bodyContainer","insert","autoFocusButtonOk","changeVisibleFromInside","destroy","triggerOk","onClickOkCancel","triggerCancel","getContentComponentRef","getContentComponent","getElement","onClickMask","mcMask","isModalType","type","onClickCloseBtn","ok","cancel","loadingKey","caseClose_1","doClose","isPromise","handleThen","catch","isNonEmptyString","isTemplateRef","Type","animation","closeResult","changeBodyOverflow","animateTo","getButtonCallableProp","prop","args","onButtonClick","button","loading","changeAnimationState","maskAnimationClassMap","modalAnimationClassMap","_b","isVisible","updateTransformOrigin","buttons","autoLoading","component","factory","resolveComponentFactory","childInjector","Injector","parent","parentInjector","mcComponentParams","assign","modalElement","modalContainer","plusNum","body","scrollBarWidth","DOCUMENT","McMeasureScrollbarService","defaultUnit","formatted","Pipe","createModal","changeProps","destroyModal","keydownEvents","McFormFieldBase","_McFormFieldMixinBase","_labelId","hovered","_validateControlChild","_control","_numberControl","hasStepper","_stepper","stepUp","onStepUp","stepDown","onStepDown","valueChanges","clearValue","hasCleaner","onHoverChanged","isHovered","step","_shouldForward","getMcFormFieldMissingControlError","_hint","_suffix","_cleaner","McFormFieldNumberControl","McStepper","McHint","McSuffix","McPrefix","McCleaner","[class.mc-form-field_invalid]","[class.mc-form-field_has-prefix]","[class.mc-form-field_has-suffix]","[class.mc-form-field_has-cleaner]","[class.mc-form-field_has-stepper]","[class.ng-untouched]","[class.ng-touched]","[class.ng-pristine]","[class.ng-dirty]","[class.ng-valid]","[class.ng-invalid]","[class.ng-pending]","(mouseenter)","(mouseleave)","McFormFieldWithoutBorders","res","MC_INPUT_INVALID_TYPES","BIG_STEP","SMALL_STEP","McInputBase","_McInputMixinBase","McNumberInput","_model","bigStep","isDigit","Infinity","_host","self","getPrototypeOf","normalizeSplitter","McNumberInput_1","_focusChanged","minuses","NUMPAD_MINUS","DASH","FF_MINUS","serviceKeys","DELETE","BACKSPACE","TAB","arrows","allowedKeys","concat","isIEPeriod","isNotIEPeriod","metaKey","C","V","X","F1","F12","EDGE","TRIDENT","ZERO","NINE","NUMPAD_ZERO","NUMPAD_NINE","valueAsNumber","update","replace","isFloat","isInt","test","NgModel","McInput","_type","_neverEmptyInputTypes","t","getSupportedInputTypes","_inputValueAccessor","_previousNativeValue","McInput_1","_validateType","_dirtyCheckNativeValue","_onInput","_isNeverEmpty","_isBadInput","getMcInputUnsupportedTypeError","McInputMono","MIN_VALIDATOR","MinValidator","_createValidator","_validator","[attr.min]","MAX_VALIDATOR","MaxValidator","[attr.max]","McInputModule","McContentComponent","[class.mc-layout-content]","McFooterComponent","[class.mc-layout-footer]","McHeaderComponent","[class.mc-layout-header]","McLayoutComponent","hasSidebar","[class.mc-layout]","[class.mc-layout-has-sidebar]","McSidebarComponent","mcLayoutComponent","_mcWidth","mcCollapsedWidth","mcCollapsedChange","collapsible","mcCollapsed","[class.mc-layout-sidebar]","[class.mc-layout-sidebar-collapsed]","[style.flex]","[style.max-width.px]","[style.min-width.px]","[style.width.px]","Host","McLayoutModule","listSelection","checkboxPosition","_reportValueChange","wasSelected_1","_removeOptionFromList","getLabel","_text","McListSelectionChange","McListSelectionBase","horizontal","_modelChanges","_tempValues","_setOptionsFromValues","_i","_c","selectAll","deselectAll","values","getSelectedOptionValues","listOption","optionIndex","setPreviousItemActive","setNextItemActive","_getOptionByValue","Boolean","McIconButton","McButton","McAnchor","McButtonCSSStyler","McIconButtonCSSStyler","McCard","readonly","selectedChange","_tabIndex","hostElement","onClick","[class.mc-card_readonly]","[class.mc-card_selected]","McCardModule","MC_CHECKBOX_CLICK_ACTION","MC_CHECKBOX_CONTROL_VALUE_ACCESSOR","McCheckbox","TransitionCheckState","McCheckboxChange","McCheckboxBase","_McCheckboxMixinBase","_clickAction","indeterminateChange","_currentAnimationClass","_currentCheckState","Init","_controlValueAccessorChangeFn","_indeterminate","focusOrigin","_onInputFocusChange","changed","_transitionCheckState","Indeterminate","Checked","Unchecked","indeterminate","newState","oldState","[class.mc-indeterminate]","[class.mc-checkbox-label-before]","MC_CHECKBOX_REQUIRED_VALIDATOR","McCheckboxRequiredValidator","[attr.required]","CheckboxRequiredValidator","McCheckboxModule","McDivider","_vertical","_inset","[attr.aria-orientation]","[class.mc-divider-vertical]","[class.mc-divider-inset]","McDividerModule","McDropdownContent","_template","_componentFactoryResolver","_appRef","_injector","_viewContainerRef","_document","_attached","context","_outlet","DomPortalOutlet","createElement","parentNode","insertBefore","outletElement","isAttached","ApplicationRef","MC_DROPDOWN_PANEL","McDropdownItemBase","_McDropdownItemMixinBase","McDropdownItem","_parentDropdownPanel","addItem","removeItem","_getTabIndex","_checkDisabled","textNodeType","TEXT_NODE","output","childNodes","length_1","nodeType","mcDropdownAnimations","transformDropdown","fadeInItems","MC_DROPDOWN_DEFAULT_OPTIONS","providedIn","MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY","McDropdown","_defaultOptions","_classList","_panelAnimationState","_animationDone","backdropClass","closed","_xPosition","xPosition","_yPosition","yPosition","_items","_itemChanges","_tabSubscription","_overlapTrigger","overlapTrigger","_hasBackdrop","hasBackdrop","McDropdown_1","throwMcDropdownInvalidPositionX","setPositionClasses","throwMcDropdownInvalidPositionY","classes","obj","className","setFocusOrigin","focusFirstItem","lazyContent","resetActiveItem","posX","posY","_startAnimation","_resetAnimation","_onAnimationDone","_isAnimating","MC_DROPDOWN_SCROLL_STRATEGY","MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER","MC_DROPDOWN_SCROLL_STRATEGY_FACTORY","McDropdownTrigger","_openedBy","dropdownOpened","dropdownClosed","_opened","_closeSubscription","_hoverSubscription","dropdown","_check","_cleanUpSubscriptions","_setPosition","_closingActions","_init","opened","_reset","_setIsOpened","isOpen","throwMcDropdownMissingError","templateRef","config","_getOverlayConfig","_subscribeToPositions","OverlayConfig","withLockedPosition","originFallbackX","overlayFallbackY","originFallbackY","_d","overlayFallbackX","offsetY","backdrop","backdropClick","(touchstart)","McDropdownModule","__extends","d","__","constructor","extendStatics","__decorate","decorators","desc","r","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","isBoolean","val","MC_SANITY_CHECKS_FACTORY","base","class_1","defaultColor","Default","_color","colorPalette","defaultTabIndex","errorState","matcher","errorStateMatcher","isErrorState","optionsArray","groups","groupCounter","optionHeight","currentScrollPosition","optionOffset","arrayMap","array","iteratee","baseValues","object","props","scrollStrategies","reposition","inputType","sanitizeNumber","isFinite","getPrecision","arr","pow","value1","value2","precision","scrollThrottle","setPrototypeOf","__proto__","p","__assign","s","n","MC_SANITY_CHECKS","_sanityChecksEnabled","_hasDoneGlobalChecks","_window","_areChecksEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","_isTestEnv","doctype","testElement","computedStyle","display","removeChild","BidiModule","_setLineClass","count","_resetClasses","_setClass","isAdd","ShowOnDirtyErrorStateMatcher","form","invalid","dirty","submitted","touched","McPseudoCheckbox","McPseudoCheckboxModule","scrollbarMeasure","overflow","initScrollBarWidth","_scrollbarWidth","scrollDiv","scrollProp","clientWidth","McOptgroupBase","_McOptgroupMixinBase","_uniqueOptgroupIdCounter","[class.mc-optgroup-disabled]","[attr.aria-labelledby]","_uniqueIdCounter","McOptionSelectionChange","_parent","_active","_mostRecentViewValue","disableRipple","_emitSelectionChangeEvent","setActiveStyles","setInactiveStyles","ngAfterViewChecked","[class.mc-option-multiple]","MC_LABEL_GLOBAL_OPTIONS","topCenter","topLeft","topRight","rightTop","rightBottom","bottomCenter","bottomLeft","bottomRight","leftTop","leftBottom","McIconCSSStyler","McIconBase","_McIconMixinBase","Empty","iconName","queries","McButtonBase","_McButtonMixinBase","_haltDisabledEvents"],"mappings":"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"}