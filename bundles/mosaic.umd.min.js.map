{"version":3,"file":"mosaic.umd.min.js","sources":["../../src/lib/tooltip/tooltip.component.ts","../../src/lib/tooltip/tooltip.module.ts","../../src/lib/version.ts","../../src/lib/timepicker/timepicker.constants.ts","../../src/lib/select/select.component.ts","../../src/lib/select/select.module.ts","../../src/lib/splitter/splitter.component.ts","../../src/lib/splitter/splitter.module.ts","../../src/lib/toggle/toggle.component.ts","../../src/lib/toggle/toggle.module.ts","../../src/lib/tabs/tab-nav-bar/tab-nav-bar.ts","../../src/lib/tabs/tabs.module.ts","../../src/lib/tag/tag.component.ts","../../src/lib/tag/tag.module.ts","../../src/lib/textarea/textarea.component.ts","../../src/lib/textarea/textarea.module.ts","../../src/lib/timepicker/timepicker.ts","../../src/lib/timepicker/timepicker.module.ts","../../src/lib/select/select-animations.ts","../../src/lib/tree/tree-selection.ts","../../src/lib/tree/tree.module.ts","../../src/lib/tree/data-source/flat-data-source.ts","../../src/lib/tree/data-source/nested-data-source.ts","../../src/lib/tabs/tab-content.ts","../../src/lib/tabs/tab-label.ts","../../src/lib/tabs/tab.ts","../../src/lib/tabs/tabs-animations.ts","../../src/lib/tabs/tab-body.ts","../../src/lib/tabs/tab-label-wrapper.ts","../../src/lib/tabs/tab-header.ts","../../src/lib/tabs/tab-group.ts","../../src/lib/modal/modal.service.ts","../../src/lib/modal/modal.module.ts","../../src/lib/navbar/navbar.component.ts","../../src/lib/navbar/navbar.module.ts","../../src/lib/progress-bar/progress-bar.component.ts","../../src/lib/progress-bar/progress-bar.module.ts","../../src/lib/progress-spinner/progress-spinner.component.ts","../../src/lib/progress-spinner/progress-spinner.module.ts","../../src/lib/radio/radio.component.ts","../../src/lib/radio/radio.module.ts","../../src/lib/tree/node.ts","../../src/lib/tree/padding.ts","../../src/lib/list/list-selection.component.ts","../../src/lib/list/list.component.ts","../../src/lib/list/list.module.ts","../../src/lib/link/link.component.ts","../../src/lib/link/link.module.ts","../../src/lib/modal/modal-control.service.ts","../../src/lib/modal/modal-ref.class.ts","../../src/lib/modal/modal-util.ts","../../src/lib/modal/modal.component.ts","../../src/lib/modal/css-unit.pipe.ts","../../src/lib/form-field/form-field.ts","../../src/lib/form-field/form-field.module.ts","../../src/lib/input/input-value-accessor.ts","../../src/lib/input/stepperUtils.ts","../../src/lib/input/input.ts","../../src/lib/input/input-number-validators.ts","../../src/lib/input/input.module.ts","../../src/lib/layout/content.component.ts","../../src/lib/layout/footer.component.ts","../../src/lib/layout/header.component.ts","../../src/lib/layout/layout.component.ts","../../src/lib/layout/sidebar.component.ts","../../src/lib/layout/layout.module.ts","../../src/lib/button/button.component.ts","../../src/lib/button/button.module.ts","../../src/lib/card/card.component.ts","../../src/lib/card/card.module.ts","../../src/lib/checkbox/checkbox-config.ts","../../src/lib/checkbox/checkbox.ts","../../src/lib/checkbox/checkbox-required-validator.ts","../../src/lib/checkbox/checkbox-module.ts","../../src/lib/divider/divider.component.ts","../../src/lib/divider/divider.module.ts","../../src/lib/dropdown/dropdown-content.ts","../../src/lib/dropdown/dropdown-panel.ts","../../src/lib/dropdown/dropdown-item.ts","../../src/lib/dropdown/dropdown-animations.ts","../../src/lib/dropdown/dropdown.component.ts","../../src/lib/dropdown/dropdown-trigger.ts","../../src/lib/dropdown/dropdown.module.ts","../../src/lib/form-field/cleaner.ts","../../src/lib/form-field/form-field-control.ts","../../src/lib/form-field/form-field-number-control.ts","../../src/lib/form-field/hint.ts","../../src/lib/form-field/prefix.ts","../../src/lib/form-field/stepper.ts","../../src/lib/form-field/suffix.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/utils/utils.ts","../../src/lib/core/common-behaviors/common-module.ts","../../src/lib/core/common-behaviors/disabled.ts","../../src/lib/core/common-behaviors/color.ts","../../src/lib/core/common-behaviors/tabindex.ts","../../src/lib/core/common-behaviors/error-state.ts","../../src/lib/core/option/option.ts","../../src/lib/core/overlay/overlay-position-map.ts","../../src/lib/dropdown/dropdown-errors.ts","../../src/lib/form-field/form-field-errors.ts","../../src/lib/input/input-errors.ts","../../src/lib/select/select-errors.ts","../../src/lib/core/line/line.ts","../../src/lib/core/error/error-options.ts","../../src/lib/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../src/lib/core/selection/index.ts","../../src/lib/core/services/measure-scrollbar.service.ts","../../src/lib/core/option/optgroup.ts","../../src/lib/core/option/index.ts","../../src/lib/core/label/label-options.ts","../../src/lib/core/animation/fade-animations.ts","../../src/lib/icon/icon.component.ts","../../src/lib/icon/icon.module.ts"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    TemplateRef,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport {\n    ConnectedOverlayPositionChange,\n    ConnectionPositionPair,\n    Overlay,\n    OverlayRef,\n    ScrollDispatcher,\n    IScrollStrategy,\n    FlexibleConnectedPositionStrategy,\n    IOverlayConnectionPosition,\n    IOriginConnectionPosition,\n    HorizontalConnectionPos,\n    VerticalConnectionPos\n} from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\nimport {\n    fadeAnimation,\n    DEFAULT_4_POSITIONS,\n    POSITION_MAP\n} from '@ptsecurity/mosaic/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\n\n@Component({\n    selector: 'mc-tooltip',\n    exportAs: 'mcTooltip',\n    animations: [ fadeAnimation ],\n    templateUrl: './tooltip.component.html',\n    preserveWhitespaces: false,\n    styleUrls: ['./tooltip.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '(body:click)': 'this._handleBodyInteraction()'\n    }\n})\n\nexport class McTooltipComponent {\n    _prefix = 'mc-tooltip_placement';\n    _positions: ConnectionPositionPair[] = [ ...DEFAULT_4_POSITIONS ];\n    _classMap = {};\n    _placement = 'top';\n    _trigger = 'hover';\n    isTitleString: boolean;\n    visibleSource = new BehaviorSubject<boolean>(false);\n    $visible: Observable<boolean> = this.visibleSource.asObservable();\n    _title: string | TemplateRef<void>;\n    showTId: number;\n    hideTId: number;\n    availablePositions: any;\n\n    @Output() mcVisibleChange: EventEmitter<boolean> = new EventEmitter();\n\n    @Input() mcMouseEnterDelay = 400;\n\n    @Input() mcMouseLeaveDelay = 0;\n\n    get mcTitle(): string | TemplateRef<void> {\n        return this._title;\n    }\n\n    get mcVisible(): boolean {\n        return this.visibleSource.value;\n    }\n\n    get mcTrigger(): string {\n        return this._trigger;\n    }\n\n    get mcPlacement(): string {\n        return this._placement;\n    }\n\n    @Input()\n    set mcTitle(value: string | TemplateRef<void>) {\n        this.isTitleString = !(value instanceof TemplateRef);\n\n        if (this.isTitleString) {\n            this._title = value;\n        }\n    }\n    @Input()\n    set mcVisible(value: boolean) {\n        const visible = coerceBooleanProperty(value);\n        if (this.visibleSource.value !== visible) {\n            this.visibleSource.next(visible);\n            this.mcVisibleChange.emit(visible);\n        }\n    }\n    @Input()\n    set mcTrigger(value: string) {\n        this._trigger = value;\n    }\n    @Input()\n    set mcPlacement(value: string) {\n        if (value !== this._placement) {\n            this._placement = value;\n            this._positions.unshift(POSITION_MAP[ this.mcPlacement ]);\n        } else if (!value) {\n            this._placement = 'top';\n        }\n    }\n\n    /** Subject for notifying that the tooltip has been hidden from the view */\n    private readonly _onHide: Subject<any> = new Subject();\n    private _closeOnInteraction: boolean = false;\n\n    constructor(public cdr: ChangeDetectorRef) {\n        this.availablePositions = POSITION_MAP;\n    }\n\n    show(): void {\n        if (this.hideTId) {\n            clearTimeout(this.hideTId);\n        }\n\n        if (!this.isContentEmpty()) {\n            if (this.mcTrigger !== 'manual') {\n                this._closeOnInteraction = true;\n            }\n            this.showTId = setTimeout(() => {\n                this.mcVisible = true;\n                this.mcVisibleChange.emit(true);\n\n                // Mark for check so if any parent component has set the\n                // ChangeDetectionStrategy to OnPush it will be checked anyways\n                this._markForCheck();\n            }, this.mcMouseEnterDelay);\n        }\n    }\n\n    hide(): void {\n        if (this.showTId) {\n            clearTimeout(this.showTId);\n        }\n\n        this.hideTId = setTimeout(() => {\n            this.mcVisible = false;\n            this.mcVisibleChange.emit(false);\n            this._onHide.next();\n\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }, this.mcMouseLeaveDelay);\n    }\n\n    setClassMap(): void {\n        this._classMap = `${this._prefix}-${this._placement}`;\n    }\n\n    isContentEmpty(): boolean {\n        return this.isTitleString ? (this.mcTitle === '' || !this.mcTitle) : false;\n    }\n\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden(): Observable<void> {\n        return this._onHide.asObservable();\n    }\n\n    _markForCheck(): void {\n        this.cdr.markForCheck();\n    }\n\n    _handleBodyInteraction(): void {\n        if (this._closeOnInteraction) {\n            this.hide();\n        }\n    }\n}\n\nexport const MC_TOOLTIP_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-tooltip-scroll-strategy');\n\n/** @docs-private */\nexport function MC_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition({scrollThrottle: 20});\n}\n\n/** @docs-private */\nexport const MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_TOOLTIP_SCROLL_STRATEGY_FACTORY\n};\n\n/** Creates an error to be thrown if the user supplied an invalid tooltip position. */\nexport function getMcTooltipInvalidPositionError(position: string) {\n    return Error(`McTooltip position \"${position}\" is invalid.`);\n}\n\nconst VIEWPORT_MARGIN: number = 8;\n\n@Directive({\n    selector: '[mcTooltip], mcTooltip',\n    exportAs: 'mcTooltip',\n    host: {\n        '(keydown)': 'handleKeydown($event)',\n        '(touchend)': 'handleTouchend()'\n    }\n})\n\nexport class McTooltip implements OnInit, OnDestroy {\n    isTooltipOpen: boolean = false;\n    isDynamicTooltip = false;\n    parentDisabled: boolean = false;\n    _title: string;\n    _disabled: boolean = false;\n    _mouseEnterDelay: number;\n    _mouseLeaveDelay: number;\n    _visible: boolean;\n    _trigger: string = 'hover';\n    _placement: string = 'top';\n    _overlayRef: OverlayRef | null;\n    _portal: ComponentPortal<McTooltipComponent>;\n    availablePositions: any;\n    tooltip: McTooltipComponent | null;\n    tooltipClass: string | string[] | Set<string> | {[key: string]: any};\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n    private $unsubscribe = new Subject<void>();\n\n    @Input('mcTooltip')\n    get mcTitle(): string {\n        return this._title;\n    }\n    set mcTitle(title: string) {\n        this._title = title;\n        this.updateCompValue('mcTitle', title);\n    }\n\n    @Input('mcTitle')\n    set setTitle(title: string) {\n        this.mcTitle = title;\n    }\n\n    @Input('mcTooltipDisabled')\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    @Input('mcMouseEnterDelay')\n    get mcMouseEnterDelay(): number {\n        return this._mouseEnterDelay;\n    }\n    set mcMouseEnterDelay(value: number) {\n        this._mouseEnterDelay = value;\n        this.updateCompValue('mcMouseEnterDelay', value);\n    }\n\n    @Input('mcMouseLeaveDelay')\n    get mcMouseLeaveDelay(): number {\n        return this._mouseEnterDelay;\n    }\n    set mcMouseLeaveDelay(value: number) {\n        this._mouseLeaveDelay = value;\n        this.updateCompValue('mcMouseLeaveDelay', value);\n    }\n\n    @Input('mcVisible')\n    get mcVisible(): boolean {\n        return this._visible;\n    }\n    set mcVisible(value: boolean) {\n        this._visible = value;\n        this.updateCompValue('mcVisible', value);\n    }\n\n    @Input('mcTrigger')\n    get mcTrigger(): string {\n        return this._trigger;\n    }\n    set mcTrigger(value: string) {\n        this._trigger = value;\n        this.updateCompValue('mcTrigger', value);\n    }\n\n    @Input('mcPlacement')\n    get mcPlacement(): string {\n        return this._placement;\n    }\n    set mcPlacement(value: string) {\n        if (value) {\n            this._placement = value;\n            this.updateCompValue('mcPlacement', value);\n        } else {\n            this._placement = 'top';\n        }\n    }\n\n    @Input('mсTooltipClass')\n    get mcTooltipClass() { return this.tooltipClass; }\n    set mcTooltipClass(value: string | string[] | Set<string> | {[key: string]: any}) {\n        this.tooltipClass = value;\n\n        if (this.tooltip) {\n            this.tooltip.setClassMap();\n        }\n    }\n\n    @HostBinding('class.mc-tooltip-open')\n    get isOpen(): boolean {\n        return this.isTooltipOpen;\n    }\n\n    @HostBinding('class.disabled')\n    get isParentDisabled(): boolean {\n        return this.parentDisabled;\n    }\n\n    private manualListeners = new Map<string, EventListenerOrEventListenerObject>();\n    private readonly _destroyed = new Subject<void>();\n\n    constructor(\n        private _overlay: Overlay,\n        private elementRef: ElementRef,\n        private _ngZone: NgZone,\n        private _scrollDispatcher: ScrollDispatcher,\n        private hostView: ViewContainerRef,\n        @Inject(MC_TOOLTIP_SCROLL_STRATEGY) private _scrollStrategy,\n        @Optional() private _dir: Directionality) {\n            this.availablePositions = POSITION_MAP;\n        }\n\n    /** Create the overlay config and position strategy */\n    _createOverlay(): OverlayRef {\n        if (this._overlayRef) {\n            return this._overlayRef;\n        }\n\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this.elementRef)\n            .withTransformOriginOn('.mc-tooltip')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(VIEWPORT_MARGIN)\n            .withPositions([ ...DEFAULT_4_POSITIONS ]);\n\n        const scrollableAncestors = this._scrollDispatcher\n            .getAncestorScrollContainers(this.elementRef);\n\n        strategy.withScrollableContainers(scrollableAncestors);\n\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe((change) => {\n            if (this.tooltip) {\n                this.onPositionChange(change);\n                if (change.scrollableViewProperties.isOverlayClipped && this.tooltip.mcVisible) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run(() => this.hide());\n                }\n            }\n        });\n\n        this._overlayRef = this._overlay.create({\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: 'mc-tooltip-panel',\n            scrollStrategy: this._scrollStrategy()\n        });\n\n        this._updatePosition();\n\n        this._overlayRef.detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n\n        return this._overlayRef;\n    }\n\n    _detach() {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n\n        this.tooltip = null;\n    }\n\n    onPositionChange($event: ConnectedOverlayPositionChange): void {\n        let updatedPlacement = this.mcPlacement;\n        Object.keys(this.availablePositions).some((key) => {\n            if ($event.connectionPair.originX === this.availablePositions[key].originX &&\n                $event.connectionPair.originY === this.availablePositions[key].originY &&\n                $event.connectionPair.overlayX === this.availablePositions[key].overlayX &&\n                $event.connectionPair.overlayY === this.availablePositions[key].overlayY) {\n                updatedPlacement = key;\n\n                return true;\n            }\n\n            return false;\n        });\n        this.updateCompValue('mcPlacement', updatedPlacement);\n\n        if (this.tooltip) {\n            this.tooltip.setClassMap();\n            this.tooltip._markForCheck();\n        }\n\n        this.handlePositioningUpdate();\n    }\n\n    handlePositioningUpdate() {\n        if (!this._overlayRef) {\n            this._overlayRef = this._createOverlay();\n        }\n        if (this.mcPlacement === 'right' || this.mcPlacement === 'left') {\n            const pos =\n                (this._overlayRef.overlayElement.clientHeight -\n                    this.hostView.element.nativeElement.clientHeight) / 2; // tslint:disable-line\n            const currentContainer = this._overlayRef.overlayElement.style.top || '0px';\n            this._overlayRef.overlayElement.style.top =\n                `${parseInt(currentContainer.split('px')[0], 10) + pos - 1}px`;\n            // TODO: обновлять положение стрелки\\указателя\\\"дятла\"\n        }\n    }\n\n    // tslint:disable-next-line:no-any\n    updateCompValue(key: string, value: any): void {\n        if (this.isDynamicTooltip && value) {\n            if (this.tooltip) {\n                this.tooltip[key] = value;\n            }\n        }\n    }\n\n    ngOnInit(): void {\n        this.initElementRefListeners();\n    }\n\n    ngOnDestroy(): void {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n        this.manualListeners.forEach((listener, event) =>\n            this.elementRef.nativeElement.removeEventListener(event, listener));\n        this.manualListeners.clear();\n\n        this.$unsubscribe.next();\n        this.$unsubscribe.complete();\n    }\n\n    handleKeydown(e: KeyboardEvent) {\n        if (this.isTooltipOpen && e.keyCode === ESCAPE) { // tslint:disable-line\n            this.hide();\n        }\n    }\n\n    handleTouchend() {\n        this.hide();\n    }\n\n    initElementRefListeners() {\n        if (this.mcTrigger === 'hover') {\n\n            this.manualListeners\n                .set('mouseenter', () => this.show())\n                .set('mouseleave', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n\n        if (this.mcTrigger === 'focus') {\n\n            this.manualListeners\n                .set('focus', () => this.show())\n                .set('blur', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n    }\n\n    show(): void {\n        if (!this.disabled) {\n            if (!this.tooltip) {\n                const overlayRef = this._createOverlay();\n                this._detach();\n\n                this._portal = this._portal || new ComponentPortal(McTooltipComponent, this.hostView);\n\n                this.tooltip = overlayRef.attach(this._portal).instance;\n                this.tooltip.afterHidden()\n                    .pipe(takeUntil(this._destroyed))\n                    .subscribe(() => this._detach());\n                this.isDynamicTooltip = true;\n                const properties = [\n                    'mcTitle',\n                    'mcMouseEnterDelay',\n                    'mcMouseLeaveDelay',\n                    'mcVisible',\n                    'mcTrigger',\n                    'mcPlacement'\n                ];\n                properties.forEach((property) => this.updateCompValue(property, this[ property ]));\n                this.tooltip.mcVisibleChange.pipe(takeUntil(this.$unsubscribe), distinctUntilChanged())\n                    .subscribe((data) => {\n                        this._visible = data;\n                        this.mcVisibleChange.emit(data);\n                        this.isTooltipOpen = data;\n                    });\n            }\n            this._updatePosition();\n            this.tooltip.show();\n        }\n    }\n\n    hide(): void {\n        if (this.tooltip) {\n            this.tooltip.hide();\n        }\n    }\n\n    /** Updates the position of the current tooltip. */\n    _updatePosition() {\n        if (!this._overlayRef) {\n            this._overlayRef = this._createOverlay();\n        }\n        const position =\n            this._overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\n        const origin = this._getOrigin();\n        const overlay = this._getOverlayPosition();\n\n        position.withPositions([\n            {...origin.main, ...overlay.main},\n            {...origin.fallback, ...overlay.fallback}\n        ]);\n    }\n\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    _getOrigin(): {main: IOriginConnectionPosition; fallback: IOriginConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this._dir || this._dir.value === 'ltr';\n        let originPosition: IOriginConnectionPosition;\n\n        if (position === 'top' || position === 'bottom') {\n            originPosition = {originX: 'center', originY: position === 'top' ? 'top' : 'bottom'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            originPosition = {originX: 'start', originY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            originPosition = {originX: 'end', originY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this._invertPosition(originPosition.originX, originPosition.originY);\n\n        return {\n            main: originPosition,\n            fallback: {originX: x, originY: y}\n        };\n    }\n\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    _getOverlayPosition(): {main: IOverlayConnectionPosition; fallback: IOverlayConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this._dir || this._dir.value === 'ltr';\n        let overlayPosition: IOverlayConnectionPosition;\n\n        if (position === 'top') {\n            overlayPosition = {overlayX: 'center', overlayY: 'bottom'};\n        } else if (position === 'bottom') {\n            overlayPosition = {overlayX: 'center', overlayY: 'top'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            overlayPosition = {overlayX: 'end', overlayY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            overlayPosition = {overlayX: 'start', overlayY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n\n        return {\n            main: overlayPosition,\n            fallback: {overlayX: x, overlayY: y}\n        };\n    }\n\n    /** Inverts an overlay position. */\n    private _invertPosition(x: HorizontalConnectionPos, y: VerticalConnectionPos) {\n        let newX: HorizontalConnectionPos = x;\n        let newY: VerticalConnectionPos = y;\n        if (this.mcPlacement === 'top' || this.mcPlacement === 'bottom') {\n            if (y === 'top') {\n                newY = 'bottom';\n            } else if (y === 'bottom') {\n                newY = 'top';\n            }\n        } else {\n            if (x === 'end') {\n                newX = 'start';\n            } else if (x === 'start') {\n                newX = 'end';\n            }\n        }\n\n        return {x: newX, y: newY};\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport {\n    McTooltipComponent,\n    McTooltip,\n    MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER\n} from './tooltip.component';\n\n\n@NgModule({\n    declarations: [McTooltipComponent, McTooltip],\n    exports: [McTooltipComponent, McTooltip],\n    imports: [BrowserAnimationsModule, CommonModule, OverlayModule],\n    providers: [MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n    entryComponents: [McTooltipComponent]\n})\nexport class McToolTipModule {\n}\n","import { Version } from '@angular/core';\n\n\nexport const VERSION = new Version('0.0.1-474712a');\n","export enum TimeParts {\n    hours,\n    minutes,\n    seconds\n}\n\nexport enum TimeFormats {\n    HHmmss = 'HH:mm:ss',\n    HHmm = 'HH:mm'\n}\n\nexport const TIMEFORMAT_PLACEHOLDERS: { [timeFormat: string]: string } = {\n    [TimeFormats.HHmmss]: '  :  :  ',\n    [TimeFormats.HHmm]: '  :  '\n};\n\nexport const DEFAULT_TIME_FORMAT: TimeFormats = TimeFormats.HHmm;\n\nexport const HOURS_MINUTES_SECONDS_REGEXP =\n    new RegExp(/^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9]):([0-5][0-9]|[0-9])?$/);\nexport const HOURS_MINUTES_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9])?$/;\nexport const HOURS_ONLY_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):?$/;\n\nexport const SECONDS_PER_MINUTE: number = 59;\nexport const MINUTES_PER_HOUR: number = 59;\nexport const HOURS_PER_DAY: number = 23;\n\n// TODO Move it to common CDK\nexport const ARROW_UP_KEYCODE: string = 'ArrowUp';\nexport const ARROW_DOWN_KEYCODE: string = 'ArrowDown';\nexport const ARROW_LEFT_KEYCODE: string = 'ArrowLeft';\nexport const ARROW_RIGHT_KEYCODE: string = 'ArrowRight';\n","/* tslint:disable:no-empty */\n\nimport { ActiveDescendantKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    RIGHT_ARROW,\n    SPACE,\n    UP_ARROW,\n    A\n} from '@ptsecurity/cdk/keycodes';\nimport {\n    CdkConnectedOverlay,\n    Overlay,\n    RepositionScrollStrategy,\n    IScrollStrategy,\n    ViewportRuler\n} from '@ptsecurity/cdk/overlay';\n\nimport {\n    AfterContentInit, AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren,\n    Directive,\n    DoCheck,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    isDevMode,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    QueryList, Renderer2,\n    Self,\n    SimpleChanges,\n    ViewChild, ViewChildren,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport {\n    _countGroupLabelsBeforeOption,\n    _getOptionScrollPosition,\n    CanDisable,\n    CanDisableCtor,\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    HasTabIndex, HasTabIndexCtor,\n    MC_OPTION_PARENT_COMPONENT,\n    McOptgroup,\n    McOption,\n    McOptionSelectionChange,\n    mixinDisabled,\n    mixinErrorState,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\nimport { McFormField, McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { McTag } from '@ptsecurity/mosaic/tag';\n\n\nimport { defer, merge, Observable, Subject } from 'rxjs';\nimport {\n    filter,\n    map,\n    startWith,\n    switchMap,\n    take,\n    takeUntil,\n    distinctUntilChanged\n} from 'rxjs/operators';\n\nimport {\n    getMcSelectDynamicMultipleError,\n    getMcSelectNonArrayValueError,\n    getMcSelectNonFunctionValueError\n} from './select-errors';\n\nimport { mcSelectAnimations } from './select-animations';\n\n\nlet nextUniqueId = 0;\n\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n\n/** The max height of the select's overlay panel */\nexport const SELECT_PANEL_MAX_HEIGHT = 224;\n\n/** The panel's padding on the x-axis */\nexport const SELECT_PANEL_PADDING_X = 1;\n\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\n/* tslint:disable-next-line:no-magic-numbers */\nexport const SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n\n/** The height of the select items in `em` units. */\nexport const SELECT_ITEM_HEIGHT_EM = 2;\n\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nexport const SELECT_PANEL_VIEWPORT_PADDING = 8;\n\n/** Injection token that determines the scroll handling while a select is open. */\nexport const MC_SELECT_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-select-scroll-strategy');\n\n/** @docs-private */\nexport function MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => RepositionScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MC_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n\n/** Change event object that is emitted when the select value has changed. */\nexport class McSelectChange {\n    constructor(\n        /** Reference to the select that emitted the change event. */\n        public source: McSelect,\n        /** Current value of the select that emitted the event. */\n        public value: any) {\n    }\n}\n\n// Boilerplate for applying mixins to McSelect.\n/** @docs-private */\nexport class McSelectBase {\n    constructor(\n        public _elementRef: ElementRef,\n        public _defaultErrorStateMatcher: ErrorStateMatcher,\n        public _parentForm: NgForm,\n        public _parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl\n    ) {}\n}\n\nexport const _McSelectMixinBase:\n    CanDisableCtor &\n    HasTabIndexCtor &\n    CanUpdateErrorStateCtor & typeof McSelectBase\n    = mixinTabIndex(mixinDisabled(mixinErrorState(McSelectBase)));\n\n\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\n@Directive({ selector: 'mc-select-trigger' })\nexport class McSelectTrigger {}\n\n\n@Component({\n    selector: 'mc-select',\n    exportAs: 'mcSelect',\n    templateUrl: 'select.html',\n    styleUrls: ['./select.css'],\n    inputs: ['disabled', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'tabIndex',\n        class: 'mc-select',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-select-invalid]': 'errorState',\n        '[class.mc-select-required]': 'required',\n        '(keydown)': '_handleKeydown($event)',\n        '(focus)': '_onFocus()',\n        '(blur)': '_onBlur()',\n        '(window:resize)': '_calculateHiddenItems()'\n    },\n    animations: [\n        mcSelectAnimations.transformPanel,\n        mcSelectAnimations.fadeInContent\n    ],\n    providers: [\n        { provide: McFormFieldControl, useExisting: McSelect },\n        { provide: MC_OPTION_PARENT_COMPONENT, useExisting: McSelect }\n    ]\n})\nexport class McSelect extends _McSelectMixinBase implements\n    AfterContentInit, AfterViewInit, OnChanges, OnDestroy, OnInit, DoCheck, ControlValueAccessor, CanDisable,\n    HasTabIndex, McFormFieldControl<any>, CanUpdateErrorState {\n\n    /** The last measured value for the trigger's client bounding rect. */\n    _triggerRect: ClientRect;\n\n    /** The cached font-size of the trigger element. */\n    _triggerFontSize = 0;\n\n    /** Deals with the selection logic. */\n    _selectionModel: SelectionModel<McOption>;\n\n    /** Manages keyboard events for options in the panel. */\n    _keyManager: ActiveDescendantKeyManager<McOption>;\n\n    /** The IDs of child options to be passed to the aria-owns attribute. */\n    _optionIds: string = '';\n\n    /** The value of the select panel's transform-origin property. */\n    _transformOrigin: string = 'top';\n\n    /** Whether the panel's animation is done. */\n    _panelDoneAnimating: boolean = false;\n\n    /** Emits when the panel element is finished transforming in. */\n    _panelDoneAnimatingStream = new Subject<string>();\n\n    /** Strategy that will be used to handle scrolling while the select panel is open. */\n    _scrollStrategy = this._scrollStrategyFactory();\n\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     */\n    _offsetY = 0;\n\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     */\n    _positions = [\n        {\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top'\n        },\n        {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'bottom'\n        }\n    ];\n\n    /** Whether the select is focused. */\n    get focused(): boolean {\n        return this._focused || this._panelOpen;\n    }\n\n    /**\n     * @deprecated Setter to be removed as this property is intended to be readonly.\n     * @breaking-change 8.0.0\n     */\n    set focused(value: boolean) {\n        this._focused = value;\n    }\n\n    /** A name for this control that can be used by `mc-form-field`. */\n    controlType = 'mc-select';\n\n    @ViewChild('trigger') trigger: ElementRef;\n    @ViewChildren(McTag) tags: QueryList<McTag>;\n\n    @ViewChild('panel') panel: ElementRef;\n\n    /** Overlay pane containing the options. */\n    @ViewChild(CdkConnectedOverlay) overlayDir: CdkConnectedOverlay;\n\n    /** All of the defined select options. */\n    @ContentChildren(McOption, { descendants: true }) options: QueryList<McOption>;\n\n    /** All of the defined groups of options. */\n    @ContentChildren(McOptgroup) optionGroups: QueryList<McOptgroup>;\n\n    /** Classes to be passed to the select panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[] | Set<string> | { [key: string]: any };\n\n    /** User-supplied override of the trigger element. */\n    @ContentChild(McSelectTrigger) customTrigger: McSelectTrigger;\n\n    /** Placeholder to be shown if no value has been selected. */\n    @Input()\n    get placeholder(): string {\n        return this._placeholder;\n    }\n\n    set placeholder(value: string) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n\n    /** Whether the component is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n\n    /** Whether the user should be allowed to select multiple options. */\n    @Input()\n    get multiple(): boolean {\n        return this._multiple;\n    }\n\n    set multiple(value: boolean) {\n        if (this._selectionModel) {\n            throw getMcSelectDynamicMultipleError();\n        }\n\n        this._multiple = coerceBooleanProperty(value);\n    }\n\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    @Input()\n    get compareWith() {\n        return this._compareWith;\n    }\n\n    set compareWith(fn: (o1: any, o2: any) => boolean) {\n        /* tslint:disable-next-line:strict-type-predicates */\n        if (typeof fn !== 'function') {\n            throw getMcSelectNonFunctionValueError();\n        }\n\n        this._compareWith = fn;\n\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n\n    /** Value of the select control. */\n    @Input()\n    get value(): any {\n        return this._value;\n    }\n\n    set value(newValue: any) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n\n    /** Object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     */\n    @Input() sortComparator: (a: McOption, b: McOption, options: McOption[]) => number;\n\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n\n    /** Combined stream of all of the child options' change events. */\n    readonly optionSelectionChanges: Observable<McOptionSelectionChange> = defer(() => {\n        if (this.options) {\n            return merge(...this.options.map((option) => option.onSelectionChange));\n        }\n\n        return this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n    });\n\n    /** Event emitted when the select panel has been toggled. */\n    @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the select has been opened. */\n    @Output('opened') readonly _openedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => o), map(() => {}));\n\n    /** Event emitted when the select has been closed. */\n    @Output('closed') readonly _closedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => !o), map(() => {}));\n\n    /** Event emitted when the selected value has been changed by the user. */\n    @Output() readonly selectionChange: EventEmitter<McSelectChange> = new EventEmitter<McSelectChange>();\n\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n    hiddenItems: number = 0;\n    oneMoreText: string = '...ещё';\n\n    /** Whether or not the overlay panel is open. */\n    private _panelOpen = false;\n\n    /** Whether filling out the select is required in the form. */\n    private _required: boolean = false;\n\n    /** The scroll position of the overlay panel, calculated to center the selected option. */\n    private _scrollTop = 0;\n\n    /** The placeholder displayed in the trigger of the select. */\n    private _placeholder: string;\n\n    /** Whether the component is in multiple selection mode. */\n    private _multiple: boolean = false;\n\n    /** Unique id for this input. */\n    private readonly _uid = `mc-select-${nextUniqueId++}`;\n\n    /** Emits whenever the component is destroyed. */\n    private readonly _destroy = new Subject<void>();\n\n    private _focused = false;\n\n    private _value: any;\n\n    private _id: string;\n\n    constructor(\n        private readonly _viewportRuler: ViewportRuler,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        private readonly _ngZone: NgZone,\n        private readonly _renderer: Renderer2,\n        _defaultErrorStateMatcher: ErrorStateMatcher,\n        elementRef: ElementRef,\n        @Optional() private readonly _dir: Directionality,\n        @Optional() _parentForm: NgForm,\n        @Optional() _parentFormGroup: FormGroupDirective,\n        @Optional() private readonly _parentFormField: McFormField,\n        @Self() @Optional() public ngControl: NgControl,\n        @Attribute('tabindex') tabIndex: string,\n        @Inject(MC_SELECT_SCROLL_STRATEGY) private readonly _scrollStrategyFactory\n    ) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnInit() {\n        this._selectionModel = new SelectionModel<McOption>(this.multiple);\n        this.stateChanges.next();\n\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe(() => {\n                if (this.panelOpen) {\n                    this._scrollTop = 0;\n                    this.openedChange.emit(true);\n                } else {\n                    this.openedChange.emit(false);\n                    this._panelDoneAnimating = false;\n                    this.overlayDir.offsetX = 0;\n                    this._changeDetectorRef.markForCheck();\n                }\n            });\n    }\n\n    ngAfterContentInit() {\n        this._initKeyManager();\n\n        this._selectionModel.onChange!\n            .pipe(takeUntil(this._destroy))\n            .subscribe((event) => {\n                event.added.forEach((option) => option.select());\n                event.removed.forEach((option) => option.deselect());\n            });\n\n        this.options.changes\n            .pipe(startWith(null), takeUntil(this._destroy))\n            .subscribe(() => {\n                this._resetOptions();\n                this._initializeSelection();\n            });\n    }\n\n    ngAfterViewInit(): void {\n        this.tags.changes\n            .subscribe(() => {\n                setTimeout(() => this._calculateHiddenItems(), 0);\n            });\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) { this.updateErrorState(); }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes.disabled) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n\n    /** `View -> model callback called when value changes` */\n    _onChange: (value: any) => void = () => {};\n\n    /** `View -> model callback called when select has been touched` */\n    _onTouched = () => {};\n\n    /** Toggles the overlay panel open or closed. */\n    toggle(): void {\n        if (this.panelOpen) {\n            this.close();\n        } else {\n            this.open();\n        }\n    }\n\n    /** Opens the overlay panel. */\n    open(): void {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) { return; }\n\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement)['font-size']);\n\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                    this.overlayDir.overlayRef.overlayElement) {\n                    this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n                }\n            });\n    }\n\n    /** Closes the overlay panel and focuses the host element. */\n    close(): void {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value: any): void {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn: () => {}): void {\n        this._onTouched = fn;\n    }\n\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n\n    get panelOpen(): boolean {\n        return this._panelOpen;\n    }\n\n    get selected(): McOption | McOption[] {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n\n    get triggerValue(): string {\n        if (this.empty) { return ''; }\n\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map((option) => option.viewValue);\n\n            if (this._isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions.join(', ');\n        }\n\n        return this._selectionModel.selected[0].viewValue;\n    }\n\n    get triggerValues(): McOption[] {\n        if (this.empty) { return []; }\n\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected;\n\n            if (this._isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions;\n        }\n\n        return [this._selectionModel.selected[0]];\n    }\n\n    get empty(): boolean {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n\n    _isRtl(): boolean {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n\n    _handleKeydown(event: KeyboardEvent): void {\n        if (!this.disabled) {\n            if (this.panelOpen) {\n                this._handleOpenKeydown(event);\n            } else {\n                this._handleClosedKeydown(event);\n            }\n        }\n    }\n\n    /**\n     * When the panel content is done fading in, the _panelDoneAnimating property is\n     * set so the proper class can be added to the panel.\n     */\n    _onFadeInDone(): void {\n        this._panelDoneAnimating = this.panelOpen;\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached(): void {\n        this.overlayDir.positionChange\n            .pipe(take(1))\n            .subscribe(() => {\n                this._changeDetectorRef.detectChanges();\n                this._calculateOverlayOffsetX();\n                this.panel.nativeElement.scrollTop = this._scrollTop;\n            });\n    }\n\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme(): string {\n        return this._parentFormField ? `mc-${this._parentFormField.color}` : '';\n    }\n\n    /** Focuses the select element. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    _calculateOverlayScroll(selectedIndex: number, scrollBuffer: number, maxScroll: number): number {\n        const itemHeight = this._getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n\n        /* tslint:disable-next-line:no-magic-numbers */\n        const halfOptionHeight = itemHeight / 2;\n\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n\n    /** Invoked when an option is clicked. */\n    onRemoveMatcherItem(option: McOption, $event): void {\n        $event.stopPropagation();\n\n        option.deselect();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat(): boolean {\n        return this._panelOpen || !this.empty;\n    }\n\n    _calculateHiddenItems(): void {\n        if (this.empty) { return; }\n\n        let visibleItems: number = 0;\n        const totalItemsWidth = this._getTotalItemsWidthInMatcher();\n        let totalVisibleItemsWidth: number = 0;\n        const itemMargin: number = 4;\n\n        this.tags.forEach((tag) => {\n            if (tag.nativeElement.offsetTop < tag.nativeElement.offsetHeight) {\n                totalVisibleItemsWidth += tag.nativeElement.getBoundingClientRect().width + itemMargin;\n                visibleItems++;\n            }\n        });\n\n        this.hiddenItems = (this.selected as ArrayLike<McOption>).length - visibleItems;\n\n        if (this.hiddenItems) {\n            const itemsCounter = this.trigger.nativeElement.querySelector('.mc-select__match-hidden-text');\n            const matcherList = this.trigger.nativeElement.querySelector('.mc-select__match-list');\n\n            const itemsCounterShowed = itemsCounter.offsetTop < itemsCounter.offsetHeight;\n            // const itemsCounterWidth: number = itemsCounter.getBoundingClientRect().width;\n            const itemsCounterWidth: number = 86;\n\n            const matcherListWidth: number = matcherList.getBoundingClientRect().width;\n            const matcherWidth: number = matcherListWidth + itemsCounterWidth;\n\n            if (itemsCounterShowed && (totalItemsWidth < matcherWidth)) { this.hiddenItems = 0; }\n\n            if (\n                totalVisibleItemsWidth === matcherListWidth ||\n                (totalVisibleItemsWidth + itemsCounterWidth) < matcherListWidth\n            ) {\n                this._changeDetectorRef.markForCheck();\n\n                return ;\n            } else if (!itemsCounterShowed && (totalItemsWidth + itemsCounterWidth) > matcherWidth) {\n                this.hiddenItems++;\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    private _getTotalItemsWidthInMatcher(): number {\n        const triggerClone = this.trigger.nativeElement.cloneNode(true);\n        triggerClone.querySelector('.mc-select__match-hidden-text').remove();\n\n        this._renderer.setStyle(triggerClone, 'position', 'absolute');\n        this._renderer.setStyle(triggerClone, 'visibility', 'hidden');\n        this._renderer.setStyle(triggerClone, 'top', '-100%');\n        this._renderer.setStyle(triggerClone, 'left', '0');\n\n        this._renderer.appendChild(this.trigger.nativeElement, triggerClone);\n\n        let totalItemsWidth: number = 0;\n        const itemMargin: number = 4;\n        triggerClone.querySelectorAll('mc-tag').forEach((item) => {\n            totalItemsWidth += item.getBoundingClientRect().width as number + itemMargin;\n        });\n\n        triggerClone.remove();\n\n        return totalItemsWidth;\n    }\n\n    /** Handles keyboard events while the select is closed. */\n    private _handleClosedKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n\n        // Open the select on ALT + arrow key to match the native <select>\n        if (isOpenKey || ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        } else if (!this.multiple) {\n            this._keyManager.onKeydown(event);\n        }\n    }\n\n    /** Handles keyboard events when the selected is open. */\n    private _handleOpenKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const manager = this._keyManager;\n\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n\n            if (keyCode === HOME) {\n                manager.setFirstItemActive();\n            } else {\n                manager.setLastItemActive();\n            }\n\n        } else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n        } else if ((keyCode === ENTER || keyCode === SPACE) && manager.activeItem) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        } else if (this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some((option) => !option.selected);\n            this.options.forEach((option) => {\n                if (hasDeselectedOptions && !option.disabled) {\n                    option.select();\n                } else {\n                    option.deselect();\n                }\n            });\n        } else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n\n            manager.onKeydown(event);\n\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n\n    private _initializeSelection(): void {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n        });\n    }\n\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    private _setSelectionByValue(value: any | any[]): void {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMcSelectNonArrayValueError();\n            }\n\n            this._selectionModel.clear();\n            value.forEach((currentValue: any) => this._selectValue(currentValue));\n            this._sortValues();\n        } else {\n            this._selectionModel.clear();\n            const correspondingOption = this._selectValue(value);\n\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    private _selectValue(value: any): McOption | undefined {\n        const correspondingOption = this.options.find((option: McOption) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            } catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n\n                return false;\n            }\n        });\n\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n\n        return correspondingOption;\n    }\n\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    private _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager<McOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n\n        this._keyManager.tabOut\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            });\n\n        this._keyManager.change\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n                if (this._panelOpen && this.panel) {\n                    this._scrollActiveOptionIntoView();\n                } else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n            });\n    }\n\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    private _resetOptions(): void {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n\n        this.optionSelectionChanges\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((event) => {\n                this._onSelect(event.source, event.isUserInput);\n\n                if (event.isUserInput && !this.multiple && this._panelOpen) {\n                    this.close();\n                    this.focus();\n                }\n            });\n\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((option) => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n                this.stateChanges.next();\n            });\n\n        this._setOptionIds();\n    }\n\n    /** Invoked when an option is clicked. */\n    private _onSelect(option: McOption, isUserInput: boolean): void {\n        const wasSelected = this._selectionModel.isSelected(option);\n\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        } else {\n            if (option.selected) {\n                this._selectionModel.select(option);\n            } else {\n                this._selectionModel.deselect(option);\n            }\n\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n\n            if (this.multiple) {\n                this._sortValues();\n\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mc-option`.\n                    this.focus();\n                }\n            }\n        }\n\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n\n        this.stateChanges.next();\n    }\n\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    private _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n\n    /** Emits change event to set the model value. */\n    private _propagateChanges(fallbackValue?: any): void {\n        let valueToEmit: any = null;\n\n        if (this.multiple) {\n            valueToEmit = (this.selected as McOption[]).map((option) => option.value);\n        } else {\n            valueToEmit = this.selected ? (this.selected as McOption).value : fallbackValue;\n        }\n\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new McSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /** Records option IDs to pass to the aria-owns property. */\n    private _setOptionIds() {\n        this._optionIds = this.options.map((option) => option.id).join(' ');\n    }\n\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    private _highlightCorrectOption(): void {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            } else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n\n    /** Scrolls the active option into view. */\n    private _scrollActiveOptionIntoView(): void {\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(\n            activeOptionIndex + labelCount,\n            this._getItemHeight(),\n            this.panel.nativeElement.scrollTop,\n            SELECT_PANEL_MAX_HEIGHT\n        );\n    }\n\n    /** Gets the index of the provided option in the option list. */\n    private _getOptionIndex(option: McOption): number | undefined {\n        /* tslint:disable-next-line */\n        return this.options.reduce((result: number, current: McOption, index: number) => {\n            /* tslint:disable-next-line:strict-type-predicates */\n            return result === undefined ? (option === current ? index : undefined) : result;\n        }, undefined);\n    }\n\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    private _calculateOverlayPosition(): void {\n        const itemHeight = this._getItemHeight();\n        const items = this._getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset =\n            this.empty ? 0 : this._getOptionIndex(this._selectionModel.selected[0])!;\n\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options,\n            this.optionGroups);\n\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /* tslint:disable-next-line:no-magic-numbers */\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY();\n\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    private _calculateOverlayOffsetX(): void {\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this._isRtl();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const paddingWidth = SELECT_PANEL_PADDING_X * 2;\n        let offsetX: number;\n\n        const selected = this._selectionModel.selected[0] || this.options.first;\n        offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n\n        // Invert the offset in LTR.\n        if (!isRtl) { offsetX *= -1; }\n\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        } else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    private _calculateOverlayOffsetY(): number {\n        // const itemHeight = this._getItemHeight();\n        // const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n\n        // todo I'm not sure that we will use it\n        return 0;\n        // return Math.round(-optionHeightAdjustment);\n    }\n\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    private _checkOverlayWithinViewport(maxScroll: number): void {\n        const itemHeight = this._getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable =\n            viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n\n        const panelHeightTop = Math.abs(this._offsetY);\n        const totalPanelHeight =\n            Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        } else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        } else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    private _adjustPanelUp(panelHeightBottom: number, bottomSpaceAvailable: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    private _adjustPanelDown(panelHeightTop: number, topSpaceAvailable: number, maxScroll: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n\n            return;\n        }\n    }\n\n    /** Sets the transform origin point based on the selected option. */\n    private _getOriginBasedOnOption(): string {\n        const itemHeight = this._getItemHeight();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /* tslint:disable-next-line:no-magic-numbers */\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n\n        return `50% ${originY}px 0px`;\n    }\n\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    private _getItemCount(): number {\n        return this.options.length + this.optionGroups.length;\n    }\n\n    /** Calculates the height of the select's options. */\n    private _getItemHeight(): number {\n        /* tslint:disable-next-line:no-magic-numbers */\n        return 32;\n        // return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n\n    /** Comparison function to specify which option is displayed. Defaults to object equality. */\n    private _compareWith = (o1: any, o2: any) => o1 === o2;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McOptionModule } from '@ptsecurity/mosaic/core';\nimport { McFormFieldModule } from '@ptsecurity/mosaic/form-field';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport { McTagModule } from '@ptsecurity/mosaic/tag';\n\nimport { MC_SELECT_SCROLL_STRATEGY_PROVIDER, McSelect, McSelectTrigger } from './select.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        McOptionModule,\n        McIconModule,\n        McTagModule\n    ],\n    exports: [McFormFieldModule, McSelect, McSelectTrigger, McOptionModule, CommonModule],\n    declarations: [McSelect, McSelectTrigger],\n    providers: [MC_SELECT_SCROLL_STRATEGY_PROVIDER]\n})\nexport class McSelectModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    NgZone, OnDestroy,\n    OnInit,\n    Renderer2,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { coerceBooleanProperty, coerceCssPixelValue, coerceNumberProperty } from '@ptsecurity/cdk/coercion';\n\n\ninterface IArea {\n    area: McSplitterAreaDirective;\n    index: number;\n    order: number;\n    initialSize: number;\n}\n\ninterface IPoint {\n    x: number;\n    y: number;\n}\n\n\nconst enum AttributeProperty {\n    Disabled = 'disabled'\n}\n\nconst enum Cursor {\n    Default = 'default',\n    ResizeColumn = 'col-resize',\n    ResizeRow = 'row-resize'\n}\n\nconst enum StyleProperty {\n    Cursor = 'cursor',\n    Flex = 'flex',\n    FlexBasis = 'flex-basis',\n    FlexDirection = 'flex-direction',\n    Height = 'height',\n    MaxWidth = 'max-width',\n    MinHeight = 'min-height',\n    MinWidth = 'minWidth',\n    OffsetHeight = 'offsetHeight',\n    OffsetWidth = 'offsetWidth',\n    Order = 'order',\n    Width = 'width'\n}\n\nconst enum State {\n    Disabled = 'disabled',\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\nexport const enum Direction {\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\n@Component({\n    selector: 'mc-splitter',\n    preserveWhitespaces: false,\n    styleUrls: ['splitter.css'],\n    templateUrl: './splitter.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSplitterComponent implements OnInit {\n    readonly areas: IArea[] = [];\n\n    private _direction: Direction;\n    private _disabled: boolean = false;\n    private _gutterSize: number = 6;\n\n    private isDragging: boolean = false;\n\n    private readonly areaPositionDivider: number = 2;\n    private readonly listeners: (() => void)[] = [];\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set gutterSize(gutterSize: number) {\n        const size = coerceNumberProperty(gutterSize);\n        this._gutterSize = size > 0 ? size : this.gutterSize;\n    }\n\n    get gutterSize(): number {\n        return this._gutterSize;\n    }\n\n    constructor(private elementRef: ElementRef,\n                private ngZone: NgZone,\n                private renderer: Renderer2) {}\n\n    addArea(area: McSplitterAreaDirective): void {\n        const index: number = this.areas.length;\n        const order: number = index * this.areaPositionDivider;\n        const size: number = area.getSize();\n\n        area.setOrder(order);\n\n        this.areas.push({\n            area,\n            index,\n            order,\n            initialSize: size\n        });\n    }\n\n    ngOnInit(): void {\n        if (!this.direction) {\n            this.direction = Direction.Horizontal;\n        }\n\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'column' : 'row');\n    }\n\n    onMouseDown(event: MouseEvent, leftAreaIndex: number, rightAreaIndex: number) {\n        if (this.disabled) {\n            return;\n        }\n\n        const leftArea = this.areas[leftAreaIndex];\n        const rightArea = this.areas[rightAreaIndex];\n\n        const startPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        leftArea.initialSize = leftArea.area.getSize();\n        rightArea.initialSize = rightArea.area.getSize();\n\n        this.areas.forEach((item) => {\n            const size = item.area.getSize();\n            item.area.disableFlex();\n            item.area.setSize(size);\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mouseup',\n                    () => this.onMouseUp()\n                )\n            );\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mousemove',\n                    (e: MouseEvent) => this.onMouseMove(e, startPoint, leftArea, rightArea)\n                )\n            );\n        });\n\n        this.isDragging = true;\n    }\n\n    removeArea(area: McSplitterAreaDirective): void {\n        let indexToRemove: number = -1;\n\n        this.areas.some((item, index) => {\n            if (item.area === area) {\n                indexToRemove = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        if (indexToRemove === -1) {\n            return;\n        }\n\n        this.areas.splice(indexToRemove, 1);\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private onMouseMove(event: MouseEvent, startPoint: IPoint, leftArea: IArea, rightArea: IArea) {\n        if (!this.isDragging || this.disabled) {\n            return;\n        }\n\n        const endPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        const offset = this.isVertical()\n            ? startPoint.y - endPoint.y\n            : startPoint.x - endPoint.x;\n\n        const newLeftAreaSize = leftArea.initialSize - offset;\n        const newRightAreaSize = rightArea.initialSize + offset;\n\n        const minLeftAreaSize = leftArea.area.getMinSize();\n        const minRightAreaSize = rightArea.area.getMinSize();\n\n        if (newLeftAreaSize <= minLeftAreaSize || newRightAreaSize <= minRightAreaSize) {\n            const rightAreaOffset = leftArea.initialSize - minLeftAreaSize;\n\n            leftArea.area.setSize(minLeftAreaSize);\n            rightArea.area.setSize(rightArea.initialSize + rightAreaOffset);\n        } else if (newLeftAreaSize <= 0) {\n            leftArea.area.setSize(0);\n            rightArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n        } else if (newRightAreaSize <= 0) {\n            leftArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n            rightArea.area.setSize(0);\n        } else {\n            leftArea.area.setSize(newLeftAreaSize);\n            rightArea.area.setSize(newRightAreaSize);\n        }\n    }\n\n    private onMouseUp() {\n        while (this.listeners.length > 0) {\n            const unsubscribe = this.listeners.pop();\n\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        }\n\n        this.isDragging = false;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-gutter'\n})\nexport class McGutterDirective implements OnInit {\n    private _direction: Direction = Direction.Vertical;\n    private _disabled: boolean = false;\n    private _order: number = 0;\n    private _size: number = 6;\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set order(order: number) {\n        this._order = coerceNumberProperty(order);\n    }\n\n    get order(): number {\n        return this._order;\n    }\n\n    @Input()\n    set size(size: number) {\n        this._size = coerceNumberProperty(size);\n    }\n\n    get size(): number {\n        return this._size;\n    }\n\n    constructor(private renderer: Renderer2,\n                private elementRef: ElementRef) {\n    }\n\n    ngOnInit(): void {\n        this.setStyle(StyleProperty.Cursor, this.getCursor(this.getState()));\n        this.setStyle(StyleProperty.FlexBasis, coerceCssPixelValue(this.size));\n        this.setStyle(this.isVertical() ? StyleProperty.Height : StyleProperty.Width, coerceCssPixelValue(this.size));\n        this.setStyle(StyleProperty.Order, this.order);\n\n        if (!this.isVertical()) {\n            this.setStyle(StyleProperty.Height, '100%');\n        }\n\n        if (this.disabled) {\n            this.setAttr(AttributeProperty.Disabled, 'true');\n        }\n\n        // fix IE issue with gutter icon. flex-direction is requied for flex alignment options\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'row' : 'column');\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private getCursor(state: State): string {\n        switch (state) {\n            case State.Disabled:\n                return Cursor.Default;\n            case State.Vertical:\n                return  Cursor.ResizeRow;\n            case State.Horizontal:\n                return Cursor.ResizeColumn;\n            default:\n                throw Error(`Unknown gutter state for cursor: ${state}`);\n        }\n    }\n\n    private getState(): State {\n        return this.disabled\n            ? State.Disabled\n            : this.direction === Direction.Vertical\n                ? State.Vertical\n                : State.Horizontal;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n\n    private setAttr(attribute: AttributeProperty, value: string) {\n        this.renderer.setAttribute(this.elementRef.nativeElement, attribute, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-splitter-area'\n})\nexport class McSplitterAreaDirective implements OnInit, OnDestroy {\n    constructor(private elementRef: ElementRef,\n                private renderer: Renderer2,\n                private splitter: McSplitterComponent) {}\n\n    disableFlex(): void {\n        this.renderer.removeStyle(this.elementRef.nativeElement, 'flex');\n    }\n\n    ngOnInit(): void {\n        this.splitter.addArea(this);\n\n        this.removeStyle(StyleProperty.MaxWidth);\n        this.setStyle(StyleProperty.Flex, '1');\n\n        if (this.splitter.direction === Direction.Vertical) {\n            this.setStyle(StyleProperty.Width, '100%');\n            this.removeStyle(StyleProperty.Height);\n        } else {\n            this.setStyle(StyleProperty.Height, '100%');\n            this.removeStyle(StyleProperty.Width);\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.splitter.removeArea(this);\n    }\n\n    setOrder(order: number): void {\n        this.setStyle(StyleProperty.Order, order);\n    }\n\n    setSize(size: number): void {\n        const sz = coerceNumberProperty(size);\n        this.setStyle(this.getSizeProperty(), coerceCssPixelValue(sz));\n    }\n\n    getSize(): number {\n        return this.elementRef.nativeElement[this.getOffsetSizeProperty()];\n    }\n\n    getMinSize(): number {\n        const styles = getComputedStyle(this.elementRef.nativeElement);\n\n        return parseFloat(styles[this.getMinSizeProperty()]);\n    }\n\n    private isVertical(): boolean {\n        return this.splitter.direction === Direction.Vertical;\n    }\n\n    private getMinSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.MinHeight\n            : StyleProperty.MinWidth;\n    }\n\n    private getOffsetSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.OffsetHeight\n            : StyleProperty.OffsetWidth;\n    }\n\n    private getSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.Height\n            : StyleProperty.Width;\n    }\n\n    private setStyle(style: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, style, value);\n    }\n\n    private removeStyle(style: StyleProperty) {\n        this.renderer.removeStyle(this.elementRef.nativeElement, style);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McGutterDirective, McSplitterAreaDirective, McSplitterComponent } from './splitter.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McIconModule\n    ],\n    exports: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ],\n    declarations: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ]\n})\nexport class McSplitterModule {\n}\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport {\n    Attribute,\n    ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ElementRef, EventEmitter, forwardRef,\n    Input, Output, ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    ThemePalette,\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\nlet nextUniqueId = 0;\n\ntype ToggleLabelPositionType = 'left' | 'right';\n\nexport class McToggleBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McToggleMixinBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McToggleBase = mixinTabIndex(mixinColor(mixinDisabled(McToggleBase), ThemePalette.Primary));\n\nexport class McToggleChange {\n    source: McToggleComponent;\n    checked: boolean;\n}\n\n@Component({\n    selector: 'mc-toggle',\n    exportAs: 'mcToggle',\n    templateUrl: './toggle.component.html',\n    styleUrls: ['./toggle.css'],\n    providers: [\n        {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => McToggleComponent), multi: true}\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color', 'tabIndex'],\n    host: {\n        class: 'mc-toggle',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-toggle_off]': '!checked'\n    },\n    animations: [\n        trigger('switch', [\n            state('true' , style({ left: '50%' })),\n            state('false', style({ left: '1px' })),\n            transition('true <=> false', animate('150ms'))\n        ])\n    ]\n})\nexport class McToggleComponent extends _McToggleMixinBase\n    implements ControlValueAccessor, CanColor, CanDisable, HasTabIndex {\n\n    @ViewChild('input') _inputElement: ElementRef;\n\n    @Input() labelPosition: ToggleLabelPositionType = 'right';\n\n    @Input('aria-label') ariaLabel: string = '';\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-toggle-${++nextUniqueId}`;\n\n    // tslint:disable:member-ordering\n    @Input() id: string = this._uniqueId;\n\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    @Input() name: string | null = null;\n\n    @Input() value: string;\n\n    private _disabled: boolean = false;\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this._disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    get checked() {\n        return this._checked;\n    }\n\n    @Input()\n    set checked(value: boolean) {\n        if (value !== this._checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    @Output() readonly change: EventEmitter<McToggleChange> =\n        new EventEmitter<McToggleChange>();\n\n    constructor(public _elementRef: ElementRef,\n                private _focusMonitor: FocusMonitor,\n                private _changeDetectorRef: ChangeDetectorRef,\n                @Attribute('tabindex') tabIndex: string\n    ) {\n        super(_elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _getAriaChecked(): boolean {\n        return this.checked;\n    }\n\n    _onInteractionEvent(event: Event) {\n        event.stopPropagation();\n    }\n\n    _onLabelTextChange() {\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onInputClick(event: MouseEvent) {\n        event.stopPropagation();\n        this._updateModelValue();\n        this._emitChangeEvent();\n    }\n\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    registerOnChange(fn: any) {\n        this._onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this._onTouchedCallback = fn;\n    }\n\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    // tslint:disable-next-line:no-empty\n    private _onTouchedCallback = () => {};\n\n    // tslint:disable-next-line:no-empty\n    private _onChangeCallback = (_: any) => {};\n\n    private _updateModelValue() {\n        this._checked = !this.checked;\n        this._onChangeCallback(this.checked);\n        this._onTouchedCallback();\n    }\n\n    private _emitChangeEvent() {\n        const event = new McToggleChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._onChangeCallback(this.checked);\n        this.change.emit(event);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McToggleComponent } from './toggle.component';\n\n\n@NgModule({\n    imports: [CommonModule, BrowserAnimationsModule, A11yModule, McCommonModule],\n    exports: [McToggleComponent],\n    declarations: [McToggleComponent]\n})\nexport class McToggleModule {\n}\n","import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    OnDestroy,\n    ViewEncapsulation\n} from '@angular/core';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    CanColor,\n    CanColorCtor,\n    CanDisable,\n    CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\n// Boilerplate for applying mixins to McTabNav.\n/** @docs-private */\nexport class McTabNavBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {}\n}\nexport const mcTabNavMixinBase: CanColorCtor &\n    typeof McTabNavBase = mixinColor(McTabNavBase);\n\n/**\n * Navigation component matching the styles of the tab group header.\n */\n@Component({\n    selector: '[mc-tab-nav-bar]',\n    exportAs: 'mcTabNavBar, mcTabNav',\n    inputs: ['color'],\n    templateUrl: 'tab-nav-bar.html',\n    styleUrls: ['tab-nav-bar.css'],\n    host: { class: 'mc-tab-nav-bar' },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McTabNav extends mcTabNavMixinBase\n    implements CanColor {\n        constructor(elementRef: ElementRef) {\n            super(elementRef);\n        }\n     }\n\n// Boilerplate for applying mixins to McTabLink.\nexport class McTabLinkBase {}\nexport const mcTabLinkMixinBase: HasTabIndexCtor & CanDisableCtor &\n    typeof McTabLinkBase = mixinTabIndex(mixinDisabled(McTabLinkBase));\n\n/**\n * Link inside of a `mc-tab-nav-bar`.\n */\n@Directive({\n    selector: '[mc-tab-link], [mcTabLink]',\n    exportAs: 'mcTabLink',\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-tab-link',\n        '[attr.aria-current]': 'active',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.tabIndex]': 'tabIndex',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-active]': 'active'\n    }\n})\nexport class McTabLink extends mcTabLinkMixinBase\n    implements OnDestroy, CanDisable, HasTabIndex {\n    /** Whether the link is active. */\n    @Input()\n    get active(): boolean {\n        return this.isActive;\n    }\n    set active(value: boolean) {\n        if (value !== this.isActive) {\n            this.isActive = value;\n        }\n    }\n\n    /** Whether the tab link is active or not. */\n    protected isActive: boolean = false;\n\n    constructor(\n        public elementRef: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        private focusMonitor: FocusMonitor\n    ) {\n        super();\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this.focusMonitor.monitor(this.elementRef.nativeElement);\n    }\n\n    ngOnDestroy() {\n        this.focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PortalModule } from '@ptsecurity/cdk/portal';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McTab } from './tab';\nimport { McTabBody, McTabBodyPortal } from './tab-body';\nimport { McTabContent } from './tab-content';\nimport {\n    McTabGroup,\n    McLightTabsCssStyler,\n    McAlignTabsCenterCssStyler,\n    McAlignTabsEndCssStyler,\n    McStretchTabsCssStyler\n} from './tab-group';\nimport { McTabHeader } from './tab-header';\nimport { McTabLabel } from './tab-label';\nimport { McTabLabelWrapper } from './tab-label-wrapper';\nimport { McTabLink, McTabNav } from './tab-nav-bar/tab-nav-bar';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McCommonModule,\n        PortalModule,\n        A11yModule,\n        BrowserAnimationsModule\n    ],\n    // Don't export all components because some are only to be used internally.\n    exports: [\n        McCommonModule,\n        McTabGroup,\n        McTabLabel,\n        McTab,\n        McTabNav,\n        McTabLink,\n        McTabContent,\n        McLightTabsCssStyler,\n        McAlignTabsCenterCssStyler,\n        McAlignTabsEndCssStyler,\n        McStretchTabsCssStyler\n    ],\n    declarations: [\n        McTabGroup,\n        McTabLabel,\n        McTab,\n        McTabLabelWrapper,\n        McTabNav,\n        McTabLink,\n        McTabBody,\n        McTabBodyPortal,\n        McTabHeader,\n        McTabContent,\n        McLightTabsCssStyler,\n        McAlignTabsCenterCssStyler,\n        McAlignTabsEndCssStyler,\n        McStretchTabsCssStyler\n    ]\n})\nexport class McTabsModule {}\n","import {\n    ElementRef,\n    QueryList,\n    ContentChildren,\n    Component,\n    ChangeDetectionStrategy,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport {\n    mixinColor,\n    CanColor,\n    CanColorCtor,\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\nexport class McTagBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McTagMixinBase: CanColorCtor & CanDisableCtor & typeof McTagBase = mixinColor(mixinDisabled(McTagBase));\n\n\n@Component({\n    selector: 'mc-tag',\n    templateUrl: 'tag.partial.html',\n    styleUrls: ['./tag.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-tag',\n        '[class.mc-disabled]': 'disabled'\n    },\n    inputs: ['color', 'disabled']\n})\nexport class McTag extends _McTagMixinBase implements CanColor, CanDisable {\n    @ContentChildren(McIcon) contentChildren: QueryList<McIcon>;\n\n    nativeElement: HTMLElement;\n\n    private _disabled: boolean = false;\n\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this.disabled) { this._disabled = value; }\n    }\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-left-icon');\n                }\n\n                if (iconElement.previousSibling) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-right-icon');\n                }\n            }\n        } else if (icons.length > 1) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTag } from './tag.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McTag\n    ],\n    declarations: [\n        McTag\n    ]\n})\nexport class McTagModule {}\n","import {\n    Directive, DoCheck, ElementRef, Inject,\n    Input, OnChanges, OnDestroy, Optional,\n    Self, InjectionToken, NgZone, OnInit\n} from '@angular/core';\nimport { FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { fromEvent, Subscription, Subject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\n\nexport const MC_TEXTAREA_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_TEXTAREA_VALUE_ACCESSOR');\n\nlet nextUniqueId = 0;\n\nconst ROW_SEPARATOR = '\\n';\n\nexport class McTextareaBase {\n    constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n                public _parentForm: NgForm,\n                public _parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McTextareaMixinBase: CanUpdateErrorStateCtor & typeof McTextareaBase = mixinErrorState(McTextareaBase);\n\n@Directive({\n    selector: 'textarea[mcTextarea]',\n    exportAs: 'mcTextarea',\n    host: {\n        class: 'mc-textarea',\n        '[class.mc-textarea-resizable]': '!canGrow',\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': 'focusChanged(false)',\n        '(focus)': 'focusChanged(true)'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McTextarea }]\n})\nexport class McTextarea extends McTextareaMixinBase implements McFormFieldControl<any>, OnInit, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    @Input() canGrow: boolean = true;\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-textarea';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this.uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this.valueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this.valueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected uid = `mc-textsrea-${nextUniqueId++}`;\n    protected previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n\n    private valueAccessor: { value: any };\n    private growSubscription: Subscription;\n\n    private lineHeight: number = 0;\n    private freeRowsHeight: number = 0;\n    private minHeight: number = 0;\n\n    constructor(protected elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_TEXTAREA_VALUE_ACCESSOR) inputValueAccessor: any,\n                private ngZone: NgZone) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the textarea value\n        // accessor.\n        this.valueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        const growObserver = fromEvent(elementRef.nativeElement, 'input')\n            /*.pipe(\n                map((event: any) => this.getGrowHeight()),\n                // map((event: any) => event.target.scrollHeight),\n                distinctUntilChanged()\n            )*/;\n        this.growSubscription = growObserver.subscribe(this.grow.bind(this));\n    }\n\n    ngOnInit() {\n        setTimeout(() => this.grow(), 0);\n        this.lineHeight = parseInt(getComputedStyle(this.elementRef.nativeElement).lineHeight!, 10);\n\n        const paddingTop = parseInt(getComputedStyle(this.elementRef.nativeElement).paddingTop!, 10);\n        const paddingBottom = parseInt(getComputedStyle(this.elementRef.nativeElement).paddingBottom!, 10);\n\n        // tslint:disable-next-line:no-magic-numbers\n        this.minHeight = this.lineHeight * 2 + paddingTop + paddingBottom;\n        this.freeRowsHeight = this.lineHeight;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        this.growSubscription.unsubscribe();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    /** Grow textarea height to avoid vertical scroll  */\n    grow() {\n        if (!this.canGrow) {\n            return;\n        }\n\n        this.ngZone.runOutsideAngular(() => {\n            const textarea = this.elementRef.nativeElement;\n\n            const outerHeight = parseInt(window.getComputedStyle(textarea).height!, 10);\n            const diff = outerHeight - textarea.clientHeight;\n\n            textarea.style.height = 0; // this line is important to height recalculation\n\n            const height = Math.max(this.minHeight, textarea.scrollHeight + diff + this.freeRowsHeight);\n            textarea.style.height = `${height}px`;\n        });\n    }\n\n    /** Focuses the textarea. */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the textarea changes. */\n    focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native textarea `value` property. */\n    protected dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the textarea is invalid based on the native validation. */\n    protected isBadInput(): boolean {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this.elementRef.nativeElement as HTMLTextAreaElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private getGrowHeight(): number {\n        const textarea = this.elementRef.nativeElement;\n        const outerHeight = parseInt(window.getComputedStyle(textarea).height!.toString(), 10);\n        const diff = outerHeight - textarea.clientHeight;\n\n        return Math.max(this.minHeight, textarea.scrollHeight + diff);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McTextarea } from './textarea.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McTextarea],\n    declarations: [McTextarea]\n})\nexport class McTextareaModule {\n}\n","import {\n    Directive,\n    DoCheck,\n    ElementRef,\n    forwardRef,\n    Inject,\n    InjectionToken,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Renderer2,\n    Self\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroupDirective,\n    NG_VALIDATORS,\n    NgControl,\n    NgForm,\n    ValidationErrors,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport {\n    noop,\n    Subject\n} from 'rxjs';\n\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\n\nimport {\n    ARROW_DOWN_KEYCODE,\n    ARROW_LEFT_KEYCODE,\n    ARROW_RIGHT_KEYCODE,\n    ARROW_UP_KEYCODE,\n    DEFAULT_TIME_FORMAT,\n    HOURS_PER_DAY,\n    HOURS_MINUTES_REGEXP,\n    HOURS_MINUTES_SECONDS_REGEXP,\n    HOURS_ONLY_REGEXP,\n    MINUTES_PER_HOUR,\n    SECONDS_PER_MINUTE,\n    TIMEFORMAT_PLACEHOLDERS,\n    TimeFormats,\n    TimeParts\n} from './timepicker.constants';\n\n\nlet uniqueComponentIdSuffix: number = 0;\nlet validatorOnChange: () => void = noop;\nlet validator: ValidatorFn | null = () => null;\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n\nexport class McTimepickerBase {\n    constructor(\n        public _defaultErrorStateMatcher: ErrorStateMatcher,\n        public _parentForm: NgForm,\n        public _parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl) { }\n}\n\n// tslint:disable-next-line naming-convention\nexport const McTimepickerMixinBase:\n    CanUpdateErrorStateCtor &\n    typeof McTimepickerBase = mixinErrorState(McTimepickerBase);\n\n@Directive({\n    selector: 'input[mcTimepicker]',\n    exportAs: 'mcTimepickerInput',\n    host: {\n        class: 'mc-timepicker mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '[attr.time-format]': 'timeFormat',\n        '[attr.min-time]': 'minTime',\n        '[attr.max-time]': 'maxTime',\n        '[attr.value]': 'value',\n        '(blur)': 'onBlur()',\n        '(focus)': 'focusChanged(true)',\n        '(input)': 'onInput()',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    },\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useValue: {\n                validate(c) { return validator ? validator(c) : null; },\n                registerOnValidatorChange(fn: () => void): void { validatorOnChange = fn; }\n            },\n            multi: true\n        },\n        {\n            provide: McFormFieldControl,\n            useExisting: forwardRef(() => McTimepicker)\n        }\n    ]\n\n})\nexport class McTimepicker extends McTimepickerMixinBase\n    implements McFormFieldControl<any>,\n        OnChanges,\n        OnDestroy,\n        DoCheck,\n        CanUpdateErrorState,\n        ControlValueAccessor {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-timepicker';\n\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) { return this.ngControl.disabled; }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n        }\n\n        this.stateChanges.next();\n    }\n\n    @Input()\n    get id(): string { return this._id; }\n\n    set id(value: string) { this._id = value || this.uid; }\n\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean { return this._required; }\n\n    set required(value: boolean) { this._required = coerceBooleanProperty(value); }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string { return this.inputValueAccessor.value; }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this.inputValueAccessor.value = value;\n            this.applyInputChanges();\n        }\n    }\n\n    @Input('time-format')\n    get timeFormat(): TimeFormats { return this._timeFormat; }\n\n    set timeFormat(formatValue: TimeFormats) {\n        this._timeFormat = Object\n            .keys(TimeFormats)\n            .map((timeFormatKey) => TimeFormats[timeFormatKey])\n            .indexOf(formatValue) > -1 ? formatValue : DEFAULT_TIME_FORMAT;\n\n        validatorOnChange();\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[this._timeFormat];\n    }\n\n    @Input('min-time')\n    get minTime(): string | null { return this._minTime; }\n\n    set minTime(minValue: string | null) {\n        this._minTime = minValue;\n        this.minDateTime = minValue !== null ? this.getDateFromTimeString(minValue) : undefined;\n        validatorOnChange();\n    }\n\n    @Input('max-time')\n    get maxTime(): string | null { return this._maxTime; }\n\n    set maxTime(maxValue: string | null) {\n        this._maxTime = maxValue;\n        this.maxDateTime = maxValue !== null ? this.getDateFromTimeString(maxValue) : undefined;\n        validatorOnChange();\n    }\n\n    private _id: string;\n    private readonly uid = `mc-timepicker-${uniqueComponentIdSuffix++}`;\n    private _disabled: boolean;\n    private _required: boolean;\n    private previousNativeValue: any;\n    private readonly inputValueAccessor: { value: any };\n    private onChange: (value: any) => void;\n    private onTouched: () => void;\n    private _timeFormat: TimeFormats;\n    private _minTime: string | null = null;\n    private minDateTime: Date | undefined;\n    private _maxTime: string | null = null;\n    private maxDateTime: Date | undefined;\n    private currentDateTimeInput: Date | undefined;\n\n    constructor(private readonly elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any,\n                private readonly renderer: Renderer2) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this.inputValueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n        this.onChange = noop;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[DEFAULT_TIME_FORMAT];\n\n        // Instead of NG_VALUE_ACCESSOR (https://github.com/angular/material2/issues/8158#issuecomment-344618103)\n        if (this.ngControl) { this.ngControl.valueAccessor = this; }\n\n        // Substitute initial empty validator with validator linked to directive object instance (workaround)\n        validator = Validators.compose([\n            () => this.parseValidator(),\n            () => this.minTimeValidator(),\n            () => this.maxTimeValidator()\n        ]);\n    }\n\n    ngOnChanges(): void {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck(): void {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    focusChanged(isFocused: boolean): void {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.onTouched();\n            this.stateChanges.next();\n        }\n    }\n\n    onBlur() {\n        this.applyInputChanges();\n        this.focusChanged(false);\n    }\n\n    onPaste($event) {\n        $event.preventDefault();\n        const clipboardUserInput: string = $event.clipboardData.getData('text');\n\n        if (this.getDateFromTimeString(clipboardUserInput) === undefined) { return; }\n\n        this.elementRef.nativeElement.value = clipboardUserInput;\n        this.onInput();\n    }\n\n    onInput() {\n        const initialCursorStart: number = this.elementRef.nativeElement.selectionStart;\n        const initialCursorEnd: number = this.elementRef.nativeElement.selectionEnd;\n        let isAutocompleteTriggered: boolean = false;\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(this.elementRef.nativeElement.value);\n\n        // tslint:disable no-magic-numbers\n        if (hoursOnly &&\n            hoursOnly[1] &&\n            hoursOnly[1].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutes &&\n            hoursAndMinutes[1].length === 1 &&\n            hoursAndMinutes[2] &&\n            hoursAndMinutes[2].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutesAndSeconds &&\n            hoursAndMinutesAndSeconds[1].length === 2 &&\n            hoursAndMinutesAndSeconds[2].length === 2 &&\n            hoursAndMinutesAndSeconds[3] &&\n            hoursAndMinutesAndSeconds[3].length === 2) {\n            isAutocompleteTriggered = true;\n        }\n        // tslint:enable no-magic-numbers\n\n        this.applyInputChanges({ doTimestringReformat: isAutocompleteTriggered });\n\n        this.elementRef.nativeElement.selectionStart = initialCursorStart;\n        this.elementRef.nativeElement.selectionEnd = initialCursorEnd;\n\n        if (isAutocompleteTriggered && this.ngControl.errors === null) {\n            this.createSelectionOfTimeComponentInInput(initialCursorStart + 1);\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    writeValue(value: Date | null): void {\n        if (value !== null) {\n            this.renderer.setProperty(this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(value, this.timeFormat)\n            );\n        }\n        this.onChange(value || null);\n        this.applyInputChanges();\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        const keyCode: string = this.getKeyCode(event);\n\n        if (keyCode === ARROW_UP_KEYCODE || keyCode === ARROW_DOWN_KEYCODE) {\n            this.upDownTimeByArrowKeys(event);\n        }\n        if (keyCode === ARROW_LEFT_KEYCODE || keyCode === ARROW_RIGHT_KEYCODE) {\n            this.switchSelectionBetweenTimeparts(event);\n        }\n    }\n\n    registerOnChange(fn: (value: Date) => void): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    private dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    private isBadInput(): boolean {\n        const validity = (<HTMLInputElement> this.elementRef.nativeElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private applyInputChanges(applyParams: {\n        changedTime?: Date;\n        doTimestringReformat?: boolean;\n    } = {}): void {\n        const { changedTime, doTimestringReformat = true } = applyParams;\n\n        const timeToApply: Date | undefined = changedTime ||\n            this.getDateFromTimeString(this.elementRef.nativeElement.value);\n        this.currentDateTimeInput = timeToApply;\n\n        if (doTimestringReformat && timeToApply !== undefined) {\n            const selectionStart: number = this.elementRef.nativeElement.selectionStart;\n            const selectionEnd: number = this.elementRef.nativeElement.selectionEnd;\n            this.renderer.setProperty(\n                this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(timeToApply, this.timeFormat));\n            this.elementRef.nativeElement.selectionStart = selectionStart;\n            this.elementRef.nativeElement.selectionEnd = selectionEnd;\n        }\n\n        (<FormControl> this.ngControl.control).updateValueAndValidity();\n        const result = this.ngControl.errors === null && timeToApply !== undefined ? timeToApply : null;\n        this.onChange(result);\n        this.stateChanges.next();\n    }\n\n    private upDownTimeByArrowKeys(event: KeyboardEvent): void {\n        event.preventDefault();\n\n        let changedTime: Date | undefined = this.currentDateTimeInput;\n        if (changedTime !== undefined) {\n            const cursorPos = this.elementRef.nativeElement.selectionStart;\n\n            const modifiedTimePart = this.getTimeEditMetrics(cursorPos)\n                .modifiedTimePart;\n            const keyCode: string = this.getKeyCode(event);\n            if (keyCode === ARROW_UP_KEYCODE) { changedTime = this.incrementTime(changedTime, modifiedTimePart); }\n            if (keyCode === ARROW_DOWN_KEYCODE) { changedTime = this.decrementTime(changedTime, modifiedTimePart); }\n            this.applyInputChanges({ changedTime });\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    private switchSelectionBetweenTimeparts(event: KeyboardEvent): void {\n        const changedTime: Date | undefined = this.currentDateTimeInput;\n        const keyCode: string = this.getKeyCode(event);\n\n        if (changedTime !== undefined) {\n            let cursorPos: number = this.elementRef.nativeElement.selectionStart;\n            if (keyCode === ARROW_LEFT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfPrevTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            } else if (keyCode === ARROW_RIGHT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfNextTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            }\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    /**\n     * @description Microsoft EDGE doesn't support KeyboaedEvent.code thus we need this helper\n     */\n    private getKeyCode(event: KeyboardEvent): string {\n        return event.code || event.key;\n    }\n\n    private createSelectionOfTimeComponentInInput(cursorPos: number): void {\n        setTimeout(() => {\n            const newEditParams = this.getTimeEditMetrics(cursorPos);\n            this.elementRef.nativeElement.selectionStart = newEditParams.cursorStartPosition;\n            this.elementRef.nativeElement.selectionEnd = newEditParams.cursorEndPosition;\n        });\n    }\n\n    private incrementTime(dateVal: Date,\n                          whatToIncrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToIncrement) {\n            case TimeParts.hours:\n                hours++;\n                break;\n            case TimeParts.minutes:\n                minutes++;\n                break;\n            case TimeParts.seconds:\n                seconds++;\n                break;\n            default:\n        }\n\n        if (seconds > SECONDS_PER_MINUTE) { seconds = 0; }\n\n        if (minutes > MINUTES_PER_HOUR) { minutes = 0; }\n\n        if (hours > HOURS_PER_DAY) { hours = 0; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    /**\n     * @description Decrement part of time\n     */\n    private decrementTime(dateVal: Date,\n                          whatToDecrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToDecrement) {\n            case TimeParts.hours:\n                hours--;\n                break;\n            case TimeParts.minutes:\n                minutes--;\n                break;\n            case TimeParts.seconds:\n                seconds--;\n                break;\n            default:\n        }\n\n        if (seconds < 0) { seconds = SECONDS_PER_MINUTE; }\n\n        if (minutes < 0) { minutes = MINUTES_PER_HOUR; }\n\n        if (hours < 0) { hours = HOURS_PER_DAY; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    private getCursorPositionOfPrevTimePartStart(cursorPos: number, timeString: string): number {\n        return cursorPos === 0 ? timeString.length : cursorPos - 1;\n    }\n\n    private getCursorPositionOfNextTimePartStart(cursorPos: number,\n                                                 timeString: string,\n                                                 timeDevider: string = ':'): number {\n        const nextDividerPos: number = timeString.indexOf(timeDevider, cursorPos);\n\n        return nextDividerPos !== undefined ? nextDividerPos + 1 : 0;\n    }\n\n    /**\n     * @description Get params for arrow-keys (up/down) time valie edit.\n     * @param cursorPosition Current cursor position in timeString\n     */\n    private getTimeEditMetrics(cursorPosition: number): {\n        modifiedTimePart: TimeParts;\n        cursorStartPosition: number;\n        cursorEndPosition: number;\n    } {\n        const timeString: string = this.elementRef.nativeElement.value;\n        let modifiedTimePart: TimeParts;\n        let cursorStartPosition: number;\n        let cursorEndPosition: number;\n        const hoursIndex = 0;\n        const minutesIndex = timeString.indexOf(':', hoursIndex + 1);\n        const secondsIndex = minutesIndex !== -1 ? timeString.indexOf(':', minutesIndex + 1) : -1;\n\n        if (secondsIndex !== -1 && cursorPosition > secondsIndex) {\n            modifiedTimePart = TimeParts.seconds;\n            cursorStartPosition = secondsIndex + 1;\n            cursorEndPosition = timeString.length;\n        } else if (minutesIndex !== -1 && cursorPosition > minutesIndex) {\n            modifiedTimePart = TimeParts.minutes;\n            cursorStartPosition = minutesIndex + 1;\n            cursorEndPosition = secondsIndex > -1 ? secondsIndex : timeString.length;\n        } else {\n            modifiedTimePart = TimeParts.hours;\n            cursorStartPosition = hoursIndex;\n            cursorEndPosition = minutesIndex !== -1 ? minutesIndex : timeString.length;\n        }\n\n        return {\n            modifiedTimePart,\n            cursorStartPosition,\n            cursorEndPosition\n        };\n    }\n\n    /**\n     * @description Create time string for displaying inside input element of UI\n     */\n    private getTimeStringFromDate(tempVal: Date,\n                                  timeFormat: TimeFormats = DEFAULT_TIME_FORMAT): string {\n        const hours: string = this.getNumberWithLeadingZero(tempVal.getHours());\n        const minutes: string = this.getNumberWithLeadingZero(tempVal.getMinutes());\n        const seconds: string = this.getNumberWithLeadingZero(tempVal.getSeconds());\n\n        const formattedTimeGenerators = {\n            [TimeFormats.HHmm]: () => `${hours}:${minutes}`,\n            [TimeFormats.HHmmss]: () => `${hours}:${minutes}:${seconds}`\n        };\n\n        return formattedTimeGenerators[timeFormat]();\n    }\n\n    private getParsedTimeParts(timeString: string): {\n        hoursOnly: any;\n        hoursAndMinutes: any;\n        hoursAndMinutesAndSeconds: any;\n    } {\n        const hoursAndMinutesAndSeconds = timeString.match(HOURS_MINUTES_SECONDS_REGEXP);\n        const hoursAndMinutes = timeString.match(HOURS_MINUTES_REGEXP);\n        const hoursOnly = timeString.match(HOURS_ONLY_REGEXP);\n\n        return {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        };\n    }\n\n    /**\n     * @description Create Date object from separate parts of time\n     */\n    private getDateFromTimeDigits(hours: number, minutes: number, seconds: number = 0): Date | undefined {\n        return this.getDateFromTimeString(`${hours}:${minutes}:${seconds}`);\n    }\n\n    private getDateFromTimeString(timeString: string | undefined): Date | undefined {\n        // TODO Use moment-js\n        if (timeString === undefined) { return; }\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(timeString);\n\n        if (timeString.trim().length === 0 ||\n            hoursOnly === null && hoursAndMinutes === null && hoursAndMinutesAndSeconds === null) {\n            return;\n        }\n\n        // tslint:disable no-magic-numbers\n        let hours: number = 0;\n        let minutes: number = 0;\n        let seconds: number = 0;\n\n        if (hoursOnly) {\n            hours = Number(hoursOnly[1]);\n        } else if (hoursAndMinutes) {\n            hours = Number(hoursAndMinutes[1]);\n            minutes = Number(hoursAndMinutes[2]);\n        } else if (hoursAndMinutesAndSeconds) {\n            hours = Number(hoursAndMinutesAndSeconds[1]);\n            minutes = Number(hoursAndMinutesAndSeconds[2]);\n            seconds = Number(hoursAndMinutesAndSeconds[3]);\n        }\n        // const timestamp: number = Date.parse(fullDateString);\n        const resultDate: Date = new Date(1970, 0, 1, hours, minutes, seconds);\n        // tslint:enable no-magic-numbers\n\n        return isNaN(resultDate.getTime()) ? undefined : resultDate;\n    }\n\n    private getNumberWithLeadingZero(digit: number): string {\n        const MAX_DIGIT_WITH_LEADING_ZERO: number = 9;\n\n        return digit > MAX_DIGIT_WITH_LEADING_ZERO ? `${digit}` : `0${digit}`;\n    }\n\n    private getTimeDigitsFromDate(dateVal: Date): { hours: number; minutes: number; seconds: number } {\n        return {\n            hours: dateVal.getHours(),\n            minutes: dateVal.getMinutes(),\n            seconds: dateVal.getSeconds()\n        };\n    }\n\n    private parseValidator(): ValidationErrors | null {\n        return this.currentDateTimeInput === undefined ?\n            { mcTimepickerParse: { text: this.elementRef.nativeElement.value } } :\n            null;\n    }\n\n    private minTimeValidator(): ValidationErrors | null {\n\n        if (this.currentDateTimeInput !== undefined &&\n            this.minDateTime !== undefined &&\n            this.isTimeLowerThenMin(this.currentDateTimeInput)) {\n            return { mcTimepickerLowerThenMintime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private maxTimeValidator(): ValidationErrors | null {\n        if (this.currentDateTimeInput !== undefined &&\n            this.maxDateTime !== undefined &&\n            this.isTimeGreaterThenMax(this.currentDateTimeInput)) {\n            return { mcTimepickerHigherThenMaxtime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private isTimeLowerThenMin(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.minDateTime).getTime() < 0;\n    }\n\n    private isTimeGreaterThenMax(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.maxDateTime).getTime() >= 0;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTimepicker } from './timepicker';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        FormsModule\n    ],\n    declarations: [\n        McTimepicker\n    ],\n    exports: [\n        McTimepicker\n    ]\n})\nexport class McTimepickerModule {}\n","import {\n    animate,\n    AnimationTriggerMetadata,\n    state,\n    style,\n    transition,\n    trigger,\n    query,\n    animateChild,\n    group\n} from '@angular/animations';\n\n\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n */\nexport const mcSelectAnimations: {\n    readonly transformPanel: AnimationTriggerMetadata;\n    readonly fadeInContent: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        transition('void => *', group([\n            query('@fadeInContent', animateChild()),\n            animate('150ms cubic-bezier(0.25, 0.8, 0.25, 1)')\n        ])),\n        transition('* => void', [\n            animate('250ms 100ms linear', style({ opacity: 0 }))\n        ])\n    ]),\n\n    /**\n     * This animation fades in the background color and text content of the\n     * select's options. It is time delayed to occur 100ms after the overlay\n     * panel has transformed in.\n     */\n    fadeInContent: trigger('fadeInContent', [\n        state('showing', style({ opacity: 1 })),\n        transition('void => showing', [\n            style({ opacity: 0 }),\n            animate('150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const transformPanel = mcSelectAnimations.transformPanel;\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const fadeInContent = mcSelectAnimations.fadeInContent;\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, EventEmitter, forwardRef, Input, IterableDiffer,\n    IterableDiffers, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    Directive, ElementRef, Inject\n} from '@angular/core';\nimport { NodeDef, ViewData } from '@angular/core/src/view';\n\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { CdkTreeNode, CdkTree, CdkTreeNodeOutlet } from '@ptsecurity/cdk/tree';\n\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\n\nimport { END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n/**\n * Wrapper for the CdkTree node with Material design styles.\n */\n@Directive({\n    exportAs: 'mcTreeNodeOption',\n    selector: 'mc-tree-node-option',\n    host: {\n        tabindex: '-1',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '[attr.aria-expanded]': 'isExpanded',\n        '[attr.aria-level]': 'role === \"treeitem\" ? level : null',\n        class: 'mc-tree-node',\n\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n\n        '(click)': '_handleClick()'\n    },\n    providers: [\n        { provide: CdkTreeNode, useExisting: McTreeNodeOption }\n    ]\n})\nexport class McTreeNodeOption<T> extends CdkTreeNode<T> implements CanDisable {\n    @Input() role: 'treeitem' | 'group' = 'treeitem';\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.treeSelection.selectedOptions && this.treeSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            // this.treeSelection._reportValueChange();\n        }\n    }\n\n    private _hasFocus: boolean = false;\n\n    private _disabled: boolean = false;\n    private _selected: boolean = false;\n\n    constructor(\n        protected _elementRef: ElementRef,\n        @Inject(forwardRef(() => McTreeSelection))\n        protected treeSelection: McTreeSelection<T>\n    ) {\n        super(_elementRef, treeSelection);\n    }\n\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n\n        this.treeSelection.setFocusedOption(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.treeSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.treeSelection.selectedOptions.select(this);\n        } else {\n            this.treeSelection.selectedOptions.deselect(this);\n        }\n\n        // this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleFocus(): void {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur(): void {\n        this._hasFocus = false;\n    }\n\n    _handleClick(): void {\n        if (this.disabled) { return; }\n\n        this.treeSelection.setFocusedOption(this);\n    }\n}\n\nexport const _McTreeSelectionBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    typeof CdkTree\n    = mixinTabIndex(mixinDisabled(CdkTree));\n\nexport class McTreeNavigationChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\nexport class McTreeSelectionChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\n@Component({\n    exportAs: 'mcTreeSelection',\n    selector: 'mc-tree-selection',\n    template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n    host: {\n        '[tabIndex]': 'tabIndex',\n        class: 'mc-tree-selection',\n        role: 'tree-selection',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    styleUrls: ['./tree.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: CdkTree, useExisting: McTreeSelection }]\n})\nexport class McTreeSelection<T> extends _McTreeSelectionBase<T>\n    implements AfterContentInit, CanDisable, HasTabIndex {\n    // Outlets within the tree's template where the dataNodes will be inserted.\n    @ViewChild(CdkTreeNodeOutlet) _nodeOutlet: CdkTreeNodeOutlet;\n\n    @ContentChildren(forwardRef(() => McTreeNodeOption)) options: QueryList<McTreeNodeOption<T>>;\n\n    _keyManager: FocusKeyManager<McTreeNodeOption<T>>;\n\n    selectedOptions: SelectionModel<McTreeNodeOption<T>>;\n\n    _disabled: boolean = false;\n    tabIndex: number;\n    multiple: boolean;\n    autoSelect: boolean;\n    noUnselect: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(rawValue: boolean) {\n        const value = toBoolean(rawValue);\n\n        if (this._disabled !== value) {\n            this._disabled = value;\n\n            if (this._disabled) {\n                console.log('need disable all options');\n            } else {\n                console.log('need enable all options');\n            }\n        }\n    }\n\n    @Output() readonly navigationChange = new EventEmitter<McTreeNavigationChange>();\n\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectionChange>();\n\n    constructor(\n        private _elementRef: ElementRef,\n        _differs: IterableDiffers,\n        _changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('multiple') multiple: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string\n    ) {\n        super(_differs, _changeDetectorRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.selectedOptions = new SelectionModel<McTreeNodeOption<T>>(this.multiple);\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case LEFT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.collapse(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case RIGHT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.expand(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                this._keyManager.setPreviousPageItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                this._keyManager.setNextPageItemActive();\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    ngAfterContentInit(): void {\n        this._keyManager = new FocusKeyManager<McTreeNodeOption<T>>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(true)\n            .withHorizontalOrientation(null);\n    }\n\n    updateScrollSize(): void {\n        if (!this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    setFocusedOption(option: McTreeNodeOption<T>): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitNavigationEvent(option);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McTreeNodeOption<T> = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    renderNodeChanges(\n        data: T[],\n        dataDiffer: IterableDiffer<T> = this._dataDiffer,\n        viewContainer: any = this._nodeOutlet.viewContainer,\n        parentData?: T\n    ) {\n        super.renderNodeChanges(data, dataDiffer, viewContainer, parentData);\n\n        const arrayOfInstances = [];\n\n        viewContainer._embeddedViews.forEach((view: ViewData) => {\n            const viewDef = view.def;\n\n            viewDef.nodes.forEach((node: NodeDef) => {\n                if (viewDef.nodeMatchedQueries === node.matchedQueryIds) {\n                    const nodeData: any = view.nodes[node.nodeIndex];\n\n                    arrayOfInstances.push(nodeData.instance as never);\n                }\n            });\n        });\n\n        if (this.options) {\n            this.options.reset(arrayOfInstances);\n            this.options.notifyOnChanges();\n        }\n\n        this.updateScrollSize();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _emitNavigationEvent(option: McTreeNodeOption<T>): void {\n        this.navigationChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    _emitChangeEvent(option: McTreeNodeOption<T>): void {\n        this.selectionChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    private _canDeselectLast(option: McTreeNodeOption<T>): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && option.selected);\n    }\n}\n\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\n\nimport { McTreeNodeDef } from './node';\nimport { McTreeNodePadding } from './padding';\nimport { McTreeSelection, McTreeNodeOption } from './tree-selection';\n\n\nconst MC_TREE_DIRECTIVES = [\n    McTreeNodeDef,\n    McTreeNodePadding,\n    McTreeSelection,\n    McTreeNodeOption\n];\n\n@NgModule({\n    imports: [CommonModule, CdkTreeModule],\n    exports: MC_TREE_DIRECTIVES,\n    declarations: MC_TREE_DIRECTIVES\n})\nexport class McTreeModule {}\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { FlatTreeControl, ITreeControl } from '@ptsecurity/cdk/tree';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nexport class McTreeFlattener<T, F> {\n\n    constructor(public transformFunction: (node: T, level: number) => F,\n                public getLevel: (node: F) => number,\n                public isExpandable: (node: F) => boolean,\n                public getChildren: (node: T) => Observable<T[]>) {\n    }\n\n    _flattenNode(node: T, level: number,\n                 resultNodes: F[], parentMap: boolean[]): F[] {\n        const flatNode = this.transformFunction(node, level);\n        resultNodes.push(flatNode);\n\n        if (this.isExpandable(flatNode)) {\n            this.getChildren(node).pipe(take(1)).subscribe((children) => {\n                children.forEach((child, index) => {\n                    const childParentMap: boolean[] = parentMap.slice();\n                    childParentMap.push(index !== children.length - 1);\n                    this._flattenNode(child, level + 1, resultNodes, childParentMap);\n                });\n            });\n        }\n\n        return resultNodes;\n    }\n\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData: T[]): F[] {\n        const resultNodes: F[] = [];\n        structuredData.forEach((node) => this._flattenNode(node, 0, resultNodes, []));\n\n        return resultNodes;\n    }\n\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes: F[], treeControl: ITreeControl<F>): F[] {\n        const results: F[] = [];\n        const currentExpand: boolean[] = [];\n        currentExpand[0] = true;\n\n        nodes.forEach((node) => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n\n            if (expand) { results.push(node); }\n\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n\n        return results;\n    }\n}\n\n\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `McTree`.\n * The nested tree nodes of type `T` are flattened through `MсTreeFlattener`, and converted\n * to type `F` for `McTree` to consume.\n */\nexport class McTreeFlatDataSource<T, F> extends DataSource<F> {\n    _flattenedData = new BehaviorSubject<F[]>([]);\n\n    _expandedData = new BehaviorSubject<F[]>([]);\n\n    _data: BehaviorSubject<T[]>;\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n        this._flattenedData.next(this.treeFlattener.flattenNodes(this.data));\n        this.treeControl.dataNodes = this._flattenedData.value;\n    }\n\n    constructor(private treeControl: FlatTreeControl<F>,\n                private treeFlattener: McTreeFlattener<T, F>,\n                initialData: T[] = []) {\n        super();\n        this._data = new BehaviorSubject<T[]>(initialData);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<F[]> {\n        const changes = [\n            collectionViewer.viewChange,\n            this.treeControl.expansionModel.onChange!,\n            this._flattenedData\n        ];\n\n        return merge(...changes).pipe(map(() => {\n            this._expandedData.next(\n                this.treeFlattener.expandFlattenedNodes(this._flattenedData.value, this.treeControl));\n\n            return this._expandedData.value;\n        }));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by ITreeControl and each non-leaf node.\n */\nexport class McTreeNestedDataSource<T> extends DataSource<T> {\n    _data = new BehaviorSubject<T[]>([]);\n\n    /**\n     * Data for the nested tree\n     */\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<T[]> {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map(() => this.data));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { Directive, TemplateRef } from '@angular/core';\n\n\n/** Decorates the `ng-template` tags and reads out the template from it. */\n@Directive({ selector: '[mcTabContent]' })\nexport class McTabContent {\n    constructor(public template: TemplateRef<any>) { }\n}\n","import { Directive } from '@angular/core';\nimport { CdkPortal } from '@ptsecurity/cdk/portal';\n\n\n/** Used to flag tab labels for use with the portal directive */\n@Directive({\n    selector: '[mc-tab-label], [mcTabLabel]'\n})\nexport class McTabLabel extends CdkPortal {}\n\n// TODO: workaround for https://github.com/angular/material2/issues/12760\n(McTabLabel as any).ctorParameters = () => (CdkPortal as any).ctorParameters;\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { TemplatePortal } from '@ptsecurity/cdk/portal';\nimport {\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { Subject } from 'rxjs';\n\nimport { McTabContent } from './tab-content';\nimport { McTabLabel } from './tab-label';\n\n\nexport class McTabBase {}\nexport const mcTabMixinBase: CanDisableCtor & typeof McTabBase = mixinDisabled(\n    McTabBase\n);\n\n@Component({\n    selector: 'mc-tab',\n    // Create a template for the content of the <mc-tab> so that we can grab a reference to this\n    // TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\n    // tab-group.\n    template: '<ng-template><ng-content></ng-content></ng-template>',\n    inputs: ['disabled'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcTab'\n})\nexport class McTab extends mcTabMixinBase\n    implements OnInit, CanDisable, OnChanges, OnDestroy {\n    /** @docs-private */\n    get content(): TemplatePortal | null {\n        return this.contentPortal;\n    }\n    /** Content for the tab label given by `<ng-template mc-tab-label>`. */\n    @ContentChild(McTabLabel)\n    templateLabel: McTabLabel;\n\n    /**\n     * Template provided in the tab content that will be used if present, used to enable lazy-loading\n     */\n    @ContentChild(McTabContent, { read: TemplateRef })\n    explicitContent: TemplateRef<any>;\n\n    /** Template inside the McTab view that contains an `<ng-content>`. */\n    @ViewChild(TemplateRef)\n    implicitContent: TemplateRef<any>;\n\n    /** Plain text label for the tab, used when there is no template label. */\n    @Input('label')\n    textLabel: string = '';\n\n    /** Aria label for the tab. */\n    @Input('aria-label')\n    ariaLabel: string;\n\n    /**\n     * Reference to the element that the tab is labelled by.\n     * Will be cleared if `aria-label` is set at the same time.\n     */\n    @Input('aria-labelledby')\n    ariaLabelledby: string;\n\n    /** Emits whenever the internal state of the tab changes. */\n    readonly stateChanges = new Subject<void>();\n\n    /**\n     * The relatively indexed position where 0 represents the center, negative is left, and positive\n     * represents the right.\n     */\n    position: number | null = null;\n\n    /**\n     * The initial relatively index origin of the tab if it was created and selected after there\n     * was already a selected tab. Provides context of what position the tab should originate from.\n     */\n    origin: number | null = null;\n\n    /**\n     * Whether the tab is currently active.\n     */\n    isActive = false;\n\n    /** Portal that will be the hosted content of the tab */\n    private contentPortal: TemplatePortal | null = null;\n\n    constructor(private viewContainerRef: ViewContainerRef) {\n        super();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (\n            changes.hasOwnProperty('textLabel') ||\n            changes.hasOwnProperty('disabled')\n        ) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngOnInit(): void {\n        this.contentPortal = new TemplatePortal(\n            this.explicitContent || this.implicitContent,\n            this.viewContainerRef\n        );\n    }\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\nexport const mcTabsAnimations: {\n    readonly translateTab: AnimationTriggerMetadata;\n} = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state(\n            'center, void, left-origin-center, right-origin-center',\n            style({ transform: 'none' })\n        ),\n\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state(\n            'left',\n            style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })\n        ),\n        state(\n            'right',\n            style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })\n        ),\n\n        transition(\n            '* => left, * => right, left => center, right => center',\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    Component,\n    ChangeDetectorRef,\n    Input,\n    Inject,\n    Output,\n    EventEmitter,\n    OnDestroy,\n    OnInit,\n    ElementRef,\n    Directive,\n    Optional,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ComponentFactoryResolver,\n    ViewContainerRef,\n    forwardRef,\n    ViewChild\n} from '@angular/core';\nimport { Directionality, Direction } from '@ptsecurity/cdk/bidi';\nimport { TemplatePortal, CdkPortalOutlet, PortalHostDirective } from '@ptsecurity/cdk/portal';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\nimport { mcTabsAnimations } from './tabs-animations';\n\n\n/**\n * These position states are used internally as animation states for the tab body. Setting the\n * position state to left, right, or center will transition the tab body from its current\n * position to its respective state. If there is not current position (void, in the case of a new\n * tab body), then there will be no transition animation to its state.\n *\n * In the case of a new tab body that should immediately be centered with an animating transition,\n * then left-origin-center or right-origin-center can be used, which will use left or right as its\n * psuedo-prior state.\n */\nexport type McTabBodyPositionState =\n    'left' | 'center' | 'right' | 'left-origin-center' | 'right-origin-center';\n\n/**\n * The origin state is an internally used state that is set on a new tab body indicating if it\n * began to the left or right of the prior selected index. For example, if the selected index was\n * set to 1, and a new tab is created and selected at index 2, then the tab body would have an\n * origin of right because its index was greater than the prior selected index.\n */\nexport type McTabBodyOriginState = 'left' | 'right';\n\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\n@Directive({\n    selector: '[mcTabBodyHost]'\n})\nexport class McTabBodyPortal extends CdkPortalOutlet implements OnInit, OnDestroy {\n    /** Subscription to events for when the tab body begins centering. */\n    private centeringSub = Subscription.EMPTY;\n    /** Subscription to events for when the tab body finishes leaving from center position. */\n    private leavingSub = Subscription.EMPTY;\n\n    constructor(\n        componentFactoryResolver: ComponentFactoryResolver,\n        viewContainerRef: ViewContainerRef,\n        @Inject(forwardRef(() => McTabBody)) private host: McTabBody) {\n        super(componentFactoryResolver, viewContainerRef);\n    }\n\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit(): void {\n        super.ngOnInit();\n\n        this.centeringSub = this.host.beforeCentering\n            .pipe(startWith(this.host.isCenterPosition(this.host.bodyPosition)))\n            .subscribe((isCentering: boolean) => {\n                if (isCentering && !this.hasAttached()) {\n                    this.attach(this.host.content);\n                }\n            });\n\n        this.leavingSub = this.host.afterLeavingCenter.subscribe(() => {\n            this.detach();\n        });\n    }\n\n    /** Clean up centering subscription. */\n    ngOnDestroy(): void {\n        super.ngOnDestroy();\n        this.centeringSub.unsubscribe();\n        this.leavingSub.unsubscribe();\n    }\n}\n\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\n@Component({\n    selector: 'mc-tab-body',\n    templateUrl: 'tab-body.html',\n    styleUrls: ['tab-body.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [mcTabsAnimations.translateTab],\n    host: {\n        class: 'mc-tab-body'\n    }\n})\nexport class McTabBody implements OnInit, OnDestroy {\n\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    @Input()\n    set position(position: number) {\n        this.positionIndex = position;\n        this.computePositionAnimationState();\n    }\n\n    /** Tab body position state. Used by the animation trigger for the current state. */\n    bodyPosition: McTabBodyPositionState;\n\n    /** Event emitted when the tab begins to animate towards the center as the active tab. */\n    @Output() readonly onCentering: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted before the centering of the tab begins. */\n    @Output() readonly beforeCentering: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted before the centering of the tab begins. */\n    @Output() readonly afterLeavingCenter: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the tab completes its animation towards the center. */\n    @Output() readonly onCentered: EventEmitter<void> = new EventEmitter<void>(true);\n\n    /** The portal host inside of this container into which the tab body content will be loaded. */\n    @ViewChild(PortalHostDirective) portalHost: PortalHostDirective;\n\n    /** The tab body content to display. */\n    @Input('content') content: TemplatePortal;\n\n    /** Position that will be used when the tab is immediately becoming visible after creation. */\n    @Input() origin: number;\n\n    // Note that the default value will always be overwritten by `McTabBody`, but we need one\n    // anyway to prevent the animations module from throwing an error if the body is used on its own.\n    /** Duration for the tab's animation. */\n    @Input() animationDuration: string = '0ms';\n\n    /** Current position of the tab-body in the tab-group. Zero means that the tab is visible. */\n    private positionIndex: number;\n\n    /** Subscription to the directionality change observable. */\n    private dirChangeSubscription = Subscription.EMPTY;\n\n    constructor(private elementRef: ElementRef<HTMLElement>,\n                @Optional() private dir: Directionality,\n                changeDetectorRef: ChangeDetectorRef) {\n\n        if (this.dir && changeDetectorRef) {\n            this.dirChangeSubscription = this.dir.change.subscribe((direction: Direction) => {\n                this.computePositionAnimationState(direction);\n                changeDetectorRef.markForCheck();\n            });\n        }\n    }\n\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n        if (this.bodyPosition === 'center' && this.origin != null) {\n            this.bodyPosition = this.computePositionFromOrigin();\n        }\n    }\n\n    ngOnDestroy() {\n        this.dirChangeSubscription.unsubscribe();\n    }\n\n    onTranslateTabStarted(e: AnimationEvent): void {\n        const isCentering = this.isCenterPosition(e.toState);\n        this.beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this.onCentering.emit(this.elementRef.nativeElement.clientHeight);\n        }\n    }\n\n    onTranslateTabComplete(e: AnimationEvent): void {\n        // If the transition to the center is complete, emit an event.\n        if (this.isCenterPosition(e.toState) && this.isCenterPosition(this.bodyPosition)) {\n            this.onCentered.emit();\n        }\n\n        if (this.isCenterPosition(e.fromState) && !this.isCenterPosition(this.bodyPosition)) {\n            this.afterLeavingCenter.emit();\n        }\n    }\n\n    /** The text direction of the containing app. */\n    getLayoutDirection(): Direction {\n        return this.dir && this.dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    /** Whether the provided position state is considered center, regardless of origin. */\n    isCenterPosition(position: McTabBodyPositionState | string): boolean {\n        return position === 'center' ||\n            position === 'left-origin-center' ||\n            position === 'right-origin-center';\n    }\n\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    private computePositionAnimationState(dir: Direction = this.getLayoutDirection()) {\n        if (this.positionIndex < 0) {\n            this.bodyPosition = dir === 'ltr' ? 'left' : 'right';\n        } else if (this.positionIndex > 0) {\n            this.bodyPosition = dir === 'ltr' ? 'right' : 'left';\n        } else {\n            this.bodyPosition = 'center';\n        }\n    }\n\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    private computePositionFromOrigin(): McTabBodyPositionState {\n        const dir = this.getLayoutDirection();\n\n        if ((dir === 'ltr' && this.origin <= 0) || (dir === 'rtl' && this.origin > 0)) {\n            return 'left-origin-center';\n        }\n\n        return 'right-origin-center';\n    }\n}\n","import { Directive, ElementRef } from '@angular/core';\nimport {\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\n\n\n// Boilerplate for applying mixins to McTabLabelWrapper.\n/** @docs-private */\nexport class McTabLabelWrapperBase {}\nexport const mcTabLabelWrapperMixinBase: CanDisableCtor &\n    typeof McTabLabelWrapperBase = mixinDisabled(McTabLabelWrapperBase);\n\n/**\n * Used in the `mc-tab-group` view to display tab labels.\n * @docs-private\n */\n@Directive({\n    selector: '[mcTabLabelWrapper]',\n    inputs: ['disabled'],\n    host: {\n        '[class.mc-disabled]': 'disabled',\n        '[attr.aria-disabled]': '!!disabled'\n    }\n})\nexport class McTabLabelWrapper extends mcTabLabelWrapperMixinBase implements CanDisable {\n    constructor(public elementRef: ElementRef) {\n        super();\n    }\n\n    /** Sets focus on the wrapper element */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    getOffsetLeft(): number {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n\n    getOffsetWidth(): number {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Input,\n    NgZone,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Direction, Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceNumberProperty } from '@ptsecurity/cdk/coercion';\nimport { END, ENTER, HOME, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { ViewportRuler } from '@ptsecurity/cdk/scrolling';\nimport { merge, of as observableOf, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { McTabLabelWrapper } from './tab-label-wrapper';\n\n\nconst VIEWPORT_THROTTLE_TIME = 150;\nconst SCROLL_DISTANCE_DELIMITER = 3;\n\n\n/**\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n\n// Boilerplate for applying mixins to McTabHeader.\n/** @docs-private */\nexport class McTabHeaderBase {}\n\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group.\n * When the tabs list's width exceeds the width of the header container,\n * then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\n@Component({\n    selector: 'mc-tab-header',\n    templateUrl: 'tab-header.html',\n    styleUrls: ['tab-header.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        class: 'mc-tab-header',\n        '[class.mc-tab-header__pagination-controls_enabled]':\n            'showPaginationControls',\n        '[class.mc-tab-header_rtl]': 'getLayoutDirection() == \\'rtl\\''\n    }\n})\nexport class McTabHeader extends McTabHeaderBase\n    implements AfterContentChecked, AfterContentInit, OnDestroy {\n    /** The index of the active tab. */\n    @Input()\n    get selectedIndex(): number {\n        return this._selectedIndex;\n    }\n    set selectedIndex(value: number) {\n        const coercedValue = coerceNumberProperty(value);\n        this.selectedIndexChanged = this._selectedIndex !== coercedValue;\n        this._selectedIndex = coercedValue;\n\n        if (this.keyManager) {\n            this.keyManager.updateActiveItem(coercedValue);\n        }\n    }\n\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex(): number {\n        return this.keyManager ? this.keyManager.activeItemIndex! : 0;\n    }\n\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value: number) {\n        if (\n            !this.isValidIndex(value) ||\n            this.focusIndex === value ||\n            !this.keyManager\n        ) {\n            return;\n        }\n\n        this.keyManager.setActiveItem(value);\n    }\n\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance(): number {\n        return this._scrollDistance;\n    }\n    set scrollDistance(v: number) {\n        this._scrollDistance = Math.max(\n            0,\n            Math.min(this.getMaxScrollDistance(), v)\n        );\n\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this.scrollDistanceChanged = true;\n        this.checkScrollingControls();\n    }\n\n    @ContentChildren(McTabLabelWrapper)\n    labelWrappers: QueryList<McTabLabelWrapper>;\n    @ViewChild('tabListContainer')\n    tabListContainer: ElementRef;\n    @ViewChild('tabList')\n    tabList: ElementRef;\n\n    /** Whether the controls for pagination should be displayed */\n    showPaginationControls = false;\n\n    /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n    disableScrollAfter = true;\n\n    /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n    disableScrollBefore = true;\n\n    /** Event emitted when the option is selected. */\n    @Output()\n    readonly selectFocusedIndex = new EventEmitter();\n\n    /** Event emitted when a label is focused. */\n    @Output()\n    readonly indexFocused = new EventEmitter();\n\n    /** The distance in pixels that the tab labels should be translated to the left. */\n    private _scrollDistance = 0;\n\n    /** Whether the header should scroll to the selected index after the view has been checked. */\n    private selectedIndexChanged = false;\n\n    /** Emits when the component is destroyed. */\n    private readonly destroyed = new Subject<void>();\n\n    /**\n     * The number of tab labels that are displayed on the header. When this changes, the header\n     * should re-evaluate the scroll position.\n     */\n    private tabLabelCount: number;\n\n    /** Whether the scroll distance has changed and should be applied after the view is checked. */\n    private scrollDistanceChanged: boolean;\n\n    /** Used to manage focus between the tabs. */\n    private keyManager: FocusKeyManager<McTabLabelWrapper>;\n\n    private _selectedIndex: number = 0;\n\n    constructor(\n        private elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        private viewportRuler: ViewportRuler,\n        @Optional() private dir: Directionality,\n        private ngZone: NgZone\n    ) {\n        super();\n    }\n\n    ngAfterContentChecked(): void {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this.tabLabelCount !== this.labelWrappers.length) {\n            this.updatePagination();\n            this.tabLabelCount = this.labelWrappers.length;\n            this.changeDetectorRef.markForCheck();\n        }\n\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this.selectedIndexChanged) {\n            this.scrollToLabel(this._selectedIndex);\n            this.checkScrollingControls();\n            this.selectedIndexChanged = false;\n            this.changeDetectorRef.markForCheck();\n        }\n\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this.scrollDistanceChanged) {\n            this.updateTabScrollPosition();\n            this.scrollDistanceChanged = false;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    handleKeydown(event: KeyboardEvent) {\n        switch (event.keyCode) {\n            case HOME:\n                this.keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case END:\n                this.keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case ENTER:\n            case SPACE:\n                this.selectFocusedIndex.emit(this.focusIndex);\n                event.preventDefault();\n                break;\n            default:\n                this.keyManager.onKeydown(event);\n        }\n    }\n\n    ngAfterContentInit() {\n        const dirChange = this.dir ? this.dir.change : observableOf(null);\n        const resize = this.viewportRuler.change(VIEWPORT_THROTTLE_TIME);\n        const realign = () => {\n            this.updatePagination();\n        };\n\n        this.keyManager = new FocusKeyManager(this.labelWrappers)\n            .withHorizontalOrientation(this.getLayoutDirection())\n            .withWrap();\n\n        this.keyManager.updateActiveItem(0);\n\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame === undefined\n            ? realign()\n            : requestAnimationFrame(realign);\n\n        // On dir change or window resize, update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize)\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(() => {\n                realign();\n                this.keyManager.withHorizontalOrientation(\n                    this.getLayoutDirection()\n                );\n            });\n\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this.keyManager.change\n            .pipe(takeUntil(this.destroyed))\n            .subscribe((newFocusIndex) => {\n                this.indexFocused.emit(newFocusIndex);\n                this.setTabFocus(newFocusIndex);\n            });\n    }\n\n    ngOnDestroy() {\n        this.destroyed.next();\n        this.destroyed.complete();\n    }\n\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    onContentChanges() {\n        const zoneCallback = () => {\n            this.updatePagination();\n            this.changeDetectorRef.markForCheck();\n        };\n\n        // The content observer runs outside the `NgZone` by default, which\n        // means that we need to bring the callback back in ourselves.\n        this.ngZone.run(zoneCallback);\n    }\n\n    /**\n     * Updating the view whether pagination should be enabled or not\n     */\n    updatePagination() {\n        this.checkPaginationEnabled();\n        this.checkScrollingControls();\n        this.updateTabScrollPosition();\n    }\n\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    isValidIndex(index: number): boolean {\n        if (!this.labelWrappers) {\n            return true;\n        }\n\n        const tab = this.labelWrappers\n            ? this.labelWrappers.toArray()[index]\n            : null;\n\n        return !!tab && !tab.disabled;\n    }\n\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    setTabFocus(tabIndex: number) {\n        if (this.showPaginationControls) {\n            this.scrollToLabel(tabIndex);\n        }\n\n        if (this.labelWrappers && this.labelWrappers.length) {\n            this.labelWrappers.toArray()[tabIndex].focus();\n\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            const containerEl = this.tabListContainer.nativeElement;\n            const dir = this.getLayoutDirection();\n\n            if (dir === 'ltr') {\n                containerEl.scrollLeft = 0;\n            } else {\n                containerEl.scrollLeft =\n                    containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n\n    /** The layout direction of the containing app. */\n    getLayoutDirection(): Direction {\n        return this.dir && this.dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    updateTabScrollPosition() {\n        const scrollDistance = this.scrollDistance;\n        const translateX =\n            this.getLayoutDirection() === 'ltr'\n                ? -scrollDistance\n                : scrollDistance;\n\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer.\n        // See: https://github.com/angular/material2/issues/10276\n        this.tabList.nativeElement.style.transform = `translateX(${translateX}px)`;\n    }\n\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    scrollHeader(scrollDir: ScrollDirection) {\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        this.scrollDistance +=\n            ((scrollDir === 'before' ? -1 : 1) * viewLength) / SCROLL_DISTANCE_DELIMITER;\n    }\n\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    scrollToLabel(labelIndex: number) {\n        const selectedLabel = this.labelWrappers\n            ? this.labelWrappers.toArray()[labelIndex]\n            : null;\n\n        if (!selectedLabel) {\n            return;\n        }\n\n        // The view length is the visible width of the tab labels.\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        let labelBeforePos: number;\n        let labelAfterPos: number;\n\n        if (this.getLayoutDirection() === 'ltr') {\n            labelBeforePos = selectedLabel.getOffsetLeft();\n            labelAfterPos = labelBeforePos + selectedLabel.getOffsetWidth();\n        } else {\n            labelAfterPos =\n                this.tabList.nativeElement.offsetWidth -\n                selectedLabel.getOffsetLeft();\n            labelBeforePos = labelAfterPos - selectedLabel.getOffsetWidth();\n        }\n\n        const beforeVisiblePos = this.scrollDistance;\n        const afterVisiblePos = this.scrollDistance + viewLength;\n\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -=\n                beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        } else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance +=\n                labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    checkPaginationEnabled() {\n        const isEnabled =\n            this.tabList.nativeElement.scrollWidth >\n            this.elementRef.nativeElement.offsetWidth;\n\n        if (!isEnabled) {\n            this.scrollDistance = 0;\n        }\n\n        if (isEnabled !== this.showPaginationControls) {\n            this.changeDetectorRef.markForCheck();\n        }\n\n        this.showPaginationControls = isEnabled;\n    }\n\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    checkScrollingControls() {\n        // Check if the pagination arrows should be activated.\n        this.disableScrollBefore = this.scrollDistance === 0;\n        this.disableScrollAfter =\n            this.scrollDistance === this.getMaxScrollDistance();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    getMaxScrollDistance(): number {\n        const lengthOfTabList = this.tabList.nativeElement.scrollWidth;\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        return lengthOfTabList - viewLength || 0;\n    }\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    InjectionToken,\n    Inject,\n    Optional,\n    Directive, Attribute\n} from '@angular/core';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanColor,\n    CanColorCtor,\n    mixinColor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { merge, Subscription } from 'rxjs';\n\nimport { McTab } from './tab';\nimport { McTabHeader } from './tab-header';\n\n\n@Directive({\n    selector: 'mc-tab-group[mc-light-tabs], [mc-tab-nav-bar][mc-light-tabs]',\n    host: { class: 'mc-tab-group_light' }\n})\nexport class McLightTabsCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-align-tabs-center], [mc-tab-nav-bar][mc-align-tabs-center]',\n    host: { class: 'mc-tab-group_align-labels-center' }\n})\nexport class McAlignTabsCenterCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-align-tabs-end], [mc-tab-nav-bar][mc-align-tabs-end]',\n    host: { class: 'mc-tab-group_align-labels-end' }\n})\nexport class McAlignTabsEndCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-stretch-tabs], [mc-tab-nav-bar][mc-stretch-tabs]',\n    host: { class: 'mc-tab-group_stretch-labels' }\n})\nexport class McStretchTabsCssStyler { }\n\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n\n/** A simple change event emitted on focus or selection changes. */\nexport class McTabChangeEvent {\n    /** Index of the currently-selected tab. */\n    index: number;\n    /** Reference to the currently-selected tab. */\n    tab: McTab;\n}\n\n/** Possible positions for the tab header. */\nexport type McTabHeaderPosition = 'above' | 'below';\n\n/** Object that can be used to configure the default options for the tabs module. */\nexport interface IMcTabsConfig {\n    /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n    animationDuration?: string;\n}\n\n/** Injection token that can be used to provide the default options the tabs module. */\nexport const MC_TABS_CONFIG = new InjectionToken('MC_TABS_CONFIG');\n\n// Boilerplate for applying mixins to McTabGroup.\n/** @docs-private */\nexport class McTabGroupBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) { }\n}\nexport const mcTabGroupMixinBase:\n    CanColorCtor &\n    typeof McTabGroupBase =\n    mixinColor(mixinDisabled(McTabGroupBase));\n\n/**\n * Tab-group component.  Supports basic tab pairs (label + content) and includes\n * keyboard navigation.\n */\n@Component({\n    selector: 'mc-tab-group',\n    exportAs: 'mcTabGroup',\n    templateUrl: 'tab-group.html',\n    styleUrls: ['tab-group.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['color'],\n    host: {\n        class: 'mc-tab-group',\n        '[class.mc-tab-group_dynamic-height]': 'dynamicHeight',\n        '[class.mc-tab-group_inverted-header]': 'headerPosition === \"below\"'\n    }\n})\nexport class McTabGroup extends mcTabGroupMixinBase implements AfterContentInit,\n    AfterContentChecked, OnDestroy, CanColor {\n    lightTab: boolean;\n\n    /** Whether the tab group should grow to the size of the active tab. */\n    @Input()\n    get dynamicHeight(): boolean { return this._dynamicHeight; }\n    set dynamicHeight(value: boolean) { this._dynamicHeight = coerceBooleanProperty(value); }\n\n    /** The index of the active tab. */\n    @Input()\n    get selectedIndex(): number | null { return this._selectedIndex; }\n    set selectedIndex(value: number | null) {\n        this.indexToSelect = coerceNumberProperty(value, null);\n    }\n\n    @ContentChildren(McTab) tabs: QueryList<McTab>;\n\n    @ViewChild('tabBodyWrapper') tabBodyWrapper: ElementRef;\n\n    @ViewChild('tabHeader') tabHeader: McTabHeader;\n\n    /** Position of the tab header. */\n    @Input() headerPosition: McTabHeaderPosition = 'above';\n\n    /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n    @Input() animationDuration: string;\n\n    /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n    @Output() readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted when focus has changed within a tab group. */\n    @Output() readonly focusChange: EventEmitter<McTabChangeEvent> =\n        new EventEmitter<McTabChangeEvent>();\n\n    /** Event emitted when the body animation has completed */\n    @Output() readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the tab selection has changed. */\n    @Output() readonly selectedTabChange: EventEmitter<McTabChangeEvent> =\n        new EventEmitter<McTabChangeEvent>(true);\n\n    /** The tab index that should be selected after the content has been checked. */\n    private indexToSelect: number | null = 0;\n\n    /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n    private tabBodyWrapperHeight: number = 0;\n\n    /** Subscription to tabs being added/removed. */\n    private tabsSubscription = Subscription.EMPTY;\n\n    /** Subscription to changes in the tab labels. */\n    private tabLabelSubscription = Subscription.EMPTY;\n    private _dynamicHeight: boolean = false;\n    private _selectedIndex: number | null = null;\n\n    private groupId: number;\n\n    constructor(\n        elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        @Attribute('mc-light-tabs') lightTabs: string,\n        @Inject(MC_TABS_CONFIG) @Optional() defaultConfig?: IMcTabsConfig\n    ) {\n        super(elementRef);\n\n        this.lightTab = coerceBooleanProperty(lightTabs);\n\n        this.groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '0ms';\n    }\n\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = this.indexToSelect = this.clampTabIndex(this.indexToSelect);\n\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex !== indexToSelect) {\n            const isFirstRun = this._selectedIndex == null;\n\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this.createChangeEvent(indexToSelect));\n            }\n\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this.tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            });\n        }\n\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this.tabs.forEach((tab: McTab, index: number) => {\n            tab.position = index - indexToSelect;\n\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position === 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    ngAfterContentInit() {\n        this.subscribeToTabLabels();\n\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this.tabsSubscription = this.tabs.changes.subscribe(() => {\n            const indexToSelect = this.clampTabIndex(this.indexToSelect);\n\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                const tabs = this.tabs.toArray();\n\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this.indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n\n            this.subscribeToTabLabels();\n            this.changeDetectorRef.markForCheck();\n        });\n    }\n\n    ngOnDestroy() {\n        this.tabsSubscription.unsubscribe();\n        this.tabLabelSubscription.unsubscribe();\n    }\n\n    focusChanged(index: number) {\n        this.focusChange.emit(this.createChangeEvent(index));\n    }\n\n    /** Returns a unique id for each tab label element */\n    getTabLabelId(i: number): string {\n        return `mc-tab-label-${this.groupId}-${i}`;\n    }\n\n    /** Returns a unique id for each tab content element */\n    getTabContentId(i: number): string {\n        return `mc-tab-content-${this.groupId}-${i}`;\n    }\n\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    setTabBodyWrapperHeight(tabHeight: number): void {\n        if (!this._dynamicHeight || !this.tabBodyWrapperHeight) { return; }\n\n        const wrapper: HTMLElement = this.tabBodyWrapper.nativeElement;\n\n        wrapper.style.height = `${this.tabBodyWrapperHeight}px`;\n\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this.tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = `${tabHeight}px`;\n        }\n    }\n\n    /** Removes the height of the tab body wrapper. */\n    removeTabBodyWrapperHeight(): void {\n        this.tabBodyWrapperHeight = this.tabBodyWrapper.nativeElement.clientHeight;\n        this.tabBodyWrapper.nativeElement.style.height = '';\n        this.animationDone.emit();\n    }\n\n    /** Handle click events, setting new selected index if appropriate. */\n    handleClick(tab: McTab, tabHeader: McTabHeader, index: number) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n\n    /** Retrieves the tabindex for the tab. */\n    getTabIndex(tab: McTab, index: number): number | null {\n        if (tab.disabled) {\n            return null;\n        }\n\n        return this.selectedIndex === index ? 0 : -1;\n    }\n\n    private createChangeEvent(index: number): McTabChangeEvent {\n        const event = new McTabChangeEvent();\n        event.index = index;\n        if (this.tabs && this.tabs.length) {\n            event.tab = this.tabs.toArray()[index];\n        }\n\n        return event;\n    }\n\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the McTab component, whereas the data binding is inside the McTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    private subscribeToTabLabels() {\n        if (this.tabLabelSubscription) {\n            this.tabLabelSubscription.unsubscribe();\n        }\n\n        this.tabLabelSubscription = merge(...this.tabs.map((tab) => tab.stateChanges))\n            .subscribe(() => this.changeDetectorRef.markForCheck());\n    }\n\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    private clampTabIndex(index: number | null): number {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Mch.max(NaN, 0) === NaN).\n        return Math.min(this.tabs.length - 1, Math.max(index || 0, 0));\n    }\n}\n","import { ComponentRef, Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\nimport { McModalComponent } from './modal.component';\nimport { ConfirmType, IModalOptions, IModalOptionsForService } from './modal.type';\n\n\n// A builder used for managing service creating modals\nexport class ModalBuilderForService {\n\n    // Modal ComponentRef, \"null\" means it has been destroyed\n    private modalRef: ComponentRef<McModalComponent>;\n    private overlayRef: OverlayRef;\n\n    constructor(private overlay: Overlay, options: IModalOptionsForService = {}) {\n        this.createModal();\n\n        if (!('mcGetContainer' in options)) {\n            options.mcGetContainer = null;\n        }\n\n        this.changeProps(options);\n        this.modalRef.instance.open();\n        this.modalRef.instance.mcAfterClose.subscribe(() => this.destroyModal());\n\n        this.overlayRef.keydownEvents()\n            // @ts-ignore\n            .pipe(filter((event: KeyboardEvent) => {\n                return event.keyCode === ESCAPE && options.mcCloseByESC;\n            }))\n            .subscribe(() => this.modalRef.instance.close());\n    }\n\n    getInstance(): McModalComponent {\n        return this.modalRef && this.modalRef.instance;\n    }\n\n    destroyModal(): void {\n        if (this.modalRef) {\n            this.overlayRef.dispose();\n            // @ts-ignore\n            this.modalRef = null;\n        }\n    }\n\n    private changeProps(options: IModalOptions): void {\n        if (this.modalRef) {\n            // here not limit user's inputs at runtime\n            Object.assign(this.modalRef.instance, options);\n        }\n    }\n\n    // Create component to ApplicationRef\n    private createModal(): void {\n        this.overlayRef = this.overlay.create();\n        this.modalRef = this.overlayRef.attach(new ComponentPortal(McModalComponent));\n    }\n}\n\n@Injectable()\nexport class McModalService {\n    // Track of the current close modals (we assume invisible is close this time)\n    get openModals(): McModalRef[] {\n        return this.modalControl.openModals;\n    }\n\n    get afterAllClose(): Observable<void> {\n        return this.modalControl.afterAllClose.asObservable();\n    }\n\n    constructor(\n        private overlay: Overlay,\n        private modalControl: McModalControlService) {\n    }\n\n    // Closes all of the currently-open dialogs\n    closeAll(): void {\n        this.modalControl.closeAll();\n    }\n\n    create<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n\n        if (typeof options.mcOnCancel !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnCancel = () => {};\n        }\n\n        if (!('mcCloseByESC' in options)) {\n            options.mcCloseByESC = true;\n        }\n\n\n        if (!('mcWidth' in options)) {\n            // tslint:disable-next-line\n            options.mcWidth = 480;\n        }\n\n        return new ModalBuilderForService(this.overlay, options).getInstance();\n    }\n\n    confirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType = 'confirm'): McModalRef<T> {\n        if ('mcFooter' in options) {\n            console.warn(`The Confirm-Modal doesn't support \"mcFooter\", this property will be ignored.`);\n        }\n\n        // NOTE: only support function currently by calling confirm()\n        if (typeof options.mcOnOk !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnOk = () => {};\n        }\n\n        options.mcModalType = 'confirm';\n        options.mcClassName = `mc-confirm mc-confirm-${confirmType} ${options.mcClassName || ''}`;\n        options.mcMaskClosable = false;\n\n        return this.create(options);\n    }\n\n    success<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'success');\n    }\n\n    delete<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'warn');\n    }\n\n    private simpleConfirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType): McModalRef<T> {\n        // Remove the Cancel button if the user not specify a Cancel button\n        if (!('mcCancelText' in options)) {\n            // @ts-ignore\n            options.mcCancelText = null;\n        }\n\n        return this.confirm(options, confirmType);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { CssUnitPipe } from './css-unit.pipe';\nimport { McModalControlService } from './modal-control.service';\nimport { McModalComponent } from './modal.component';\nimport { McModalService } from './modal.service';\n\n\n@NgModule({\n    imports: [ CommonModule, OverlayModule, McButtonModule, McIconModule ],\n    exports: [ McModalComponent ],\n    declarations: [ McModalComponent, CssUnitPipe ],\n    entryComponents: [ McModalComponent ],\n    providers: [ McModalControlService, McModalService ]\n})\nexport class McModalModule { }\n","import { fromEvent, Observable, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport {\n    AfterViewInit,\n    Component, Directive,\n    ElementRef,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    ViewEncapsulation,\n    ContentChild,\n    TemplateRef,\n    ChangeDetectorRef,\n    ChangeDetectionStrategy,\n    ViewChild\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Platform } from '@ptsecurity/cdk/platform';\nimport { CanDisable, CanDisableCtor, mixinDisabled } from '@ptsecurity/mosaic/core';\n\n\nconst COLLAPSED_CLASS: string = 'mc-navbar-collapsed-title';\nconst MC_ICON = 'mc-icon';\nconst MC_NAVBAR = 'mc-navbar';\nconst MC_NAVBAR_CONTAINER = 'mc-navbar-container';\nconst MC_NAVBAR_ITEM = 'mc-navbar-item';\nconst MC_NAVBAR_BRAND = 'mc-navbar-brand';\nconst MC_NAVBAR_TITLE = 'mc-navbar-title';\nconst MC_NAVBAR_LOGO = 'mc-navbar-logo';\n\nexport type McNavbarContainerPositionType = 'left' | 'right';\n\nexport interface IMcNavbarDropdownItem {\n    link?: string;\n    text: string;\n}\n\n@Directive({\n    selector: MC_NAVBAR_LOGO,\n    host: {\n        class: MC_NAVBAR_LOGO\n    }\n})\nexport class McNavbarLogo {}\n\n@Directive({\n    selector: MC_NAVBAR_BRAND,\n    host: {\n        class: MC_NAVBAR_BRAND\n    }\n})\nexport class McNavbarBrand {}\n\n@Directive({\n    selector: MC_NAVBAR_TITLE,\n    host: {\n        class: MC_NAVBAR_TITLE\n    }\n})\nexport class McNavbarTitle {}\n\nexport class McNavbarItemBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McNavbarMixinBase: CanDisableCtor & typeof McNavbarItemBase = mixinDisabled(McNavbarItemBase);\n\n@Component({\n    selector: MC_NAVBAR_ITEM,\n    template: `\n        <a\n            [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\n            (click)=\"handleClickByItem()\"\n            (keydown)=\"handleKeydown($event)\"\n            class=\"mc-navbar-item\"\n        >\n            <ng-content></ng-content>\n            <i *ngIf=\"hasDropdownContent\" mc-icon=\"mc-angle-M_16\"></i>\n        </a>\n        <ul\n            #dropdownContent\n            *ngIf=\"hasDropdownContent\"\n            [ngClass]=\"{ 'is-collapsed': isCollapsed }\"\n            class=\"mc-navbar-dropdown\"\n        >\n            <li\n                *ngFor=\"let item of dropdownItems\"\n                (click)=\"handleClickByDropdownItem()\"\n                class=\"mc-navbar-dropdown-item\"\n            >\n                <ng-container *ngIf=\"dropdownItemTmpl\">\n                    <ng-container *ngTemplateOutlet=\"dropdownItemTmpl; context: { $implicit: item }\"></ng-container>\n                </ng-container>\n                <a\n                    *ngIf=\"!dropdownItemTmpl\"\n                    [attr.href]=\"item.link\"\n                    [ngClass]=\"{ 'is-active': isActiveDropdownLink(item.link) }\"\n                    class=\"mc-navbar-dropdown-link\"\n                >{{ item.text }}</a>\n            </li>\n        </ul>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': '-1'\n    }\n})\nexport class McNavbarItem extends _McNavbarMixinBase implements OnInit, AfterViewInit, OnDestroy, CanDisable {\n\n    @Input()\n    tabIndex: number = 0;\n\n    @Input()\n    dropdownItems: IMcNavbarDropdownItem[] = [];\n\n    @Input()\n    set collapsedTitle(value: string) {\n        this.elementRef.nativeElement.setAttribute('computedTitle', encodeURI(value));\n    }\n\n    @ContentChild('dropdownItemTmpl', { read: TemplateRef })\n    dropdownItemTmpl: TemplateRef<IMcNavbarDropdownItem>;\n\n    @ViewChild('dropdownContent', { read: ElementRef })\n    dropdownContent: ElementRef;\n\n    get hasDropdownContent() {\n        return this.dropdownItems.length > 0;\n    }\n\n    isCollapsed: boolean = true;\n\n    private _subscription: Subscription = new Subscription();\n    private _focusMonitor$: Observable<FocusOrigin>;\n\n    private get _dropdownElements(): HTMLElement[] {\n        return this.dropdownContent ? this.dropdownContent.nativeElement.querySelectorAll('li > *') : [];\n    }\n\n    constructor(\n        public  elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _platform: Platform,\n        private _cdRef: ChangeDetectorRef\n    ) {\n        super(elementRef);\n    }\n\n    ngOnInit() {\n        this.denyClickIfDisabled();\n\n        this._focusMonitor$ = this._focusMonitor.monitor(this.elementRef.nativeElement, true);\n\n        if (this.hasDropdownContent) {\n            this.listenClickOutside();\n        }\n    }\n\n    ngAfterViewInit() {\n        if (!this.hasDropdownContent) {\n            return;\n        }\n\n        this.startListenFocusDropdownItems();\n    }\n\n    ngOnDestroy() {\n        this._subscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n        this.stopListenFocusDropdownItems();\n    }\n\n    isActiveDropdownLink(link: string): boolean {\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n\n        return window.location.href.indexOf(link) >= 0;\n    }\n\n    handleClickByItem() {\n        this.toggleDropdown();\n    }\n\n    handleKeydown($event: KeyboardEvent) {\n        const isNavbarItem = ($event.target as HTMLElement).classList.contains(MC_NAVBAR_ITEM);\n\n        // tslint:disable-next-line\n        if (this.hasDropdownContent && $event.keyCode === SPACE && isNavbarItem) {\n            this.toggleDropdown();\n        }\n    }\n\n    handleClickByDropdownItem() {\n        this.forceCloseDropdown();\n    }\n\n    private listenClickOutside() {\n        this._subscription.add(\n            this._focusMonitor$.subscribe((origin) => {\n                if (origin === null) {\n                    this.forceCloseDropdown();\n                }\n            })\n        );\n    }\n\n    private toggleDropdown() {\n        this.isCollapsed = !this.isCollapsed;\n    }\n\n    private forceCloseDropdown() {\n        this.isCollapsed = true;\n        this._cdRef.detectChanges();\n    }\n\n    private startListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.monitor(el, true);\n        });\n    }\n\n    private stopListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.stopMonitoring(el);\n        });\n    }\n\n    // This method is required due to angular 2 issue https://github.com/angular/angular/issues/11200\n    private denyClickIfDisabled() {\n        const events: Event[] = this.elementRef.nativeElement.eventListeners('click');\n\n        events.forEach((event) => this.elementRef.nativeElement.removeEventListener('click', event));\n\n        this.elementRef.nativeElement.addEventListener('click', (event: MouseEvent) => {\n            if (this.elementRef.nativeElement.hasAttribute('disabled')) {\n                event.stopImmediatePropagation();\n            }\n        }, true);\n\n        events.forEach((event) => this.elementRef.nativeElement.addEventListener('click', event));\n    }\n}\n\n@Directive({\n    selector: MC_NAVBAR_CONTAINER\n})\nexport class McNavbarContainer {\n    @Input()\n    position: McNavbarContainerPositionType = 'left';\n\n    @HostBinding('class')\n    get cssClasses(): string {\n        return this.position === 'left' ? 'mc-navbar-left' : 'mc-navbar-right';\n    }\n}\n\nclass CollapsibleItem {\n    private _collapsed: boolean = false;\n\n    constructor(\n        public element: HTMLElement,\n        public width: number\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        this._collapsed = collapsed;\n\n        this.updateCollapsedClass();\n    }\n\n    private updateCollapsedClass() {\n        if (this._collapsed) {\n            this.element.classList.add(COLLAPSED_CLASS);\n        } else {\n            this.element.classList.remove(COLLAPSED_CLASS);\n        }\n\n    }\n}\n\nclass CachedItemWidth {\n\n    get canCollapse(): boolean {\n        return this.itemsForCollapse.length > 0;\n    }\n\n    private _collapsedItemsWidth: number;\n\n    get collapsedItemsWidth(): number {\n        if (this._collapsedItemsWidth !== undefined) {\n            return this._collapsedItemsWidth;\n        }\n\n        this.calculateAndCacheCollapsedItemsWidth();\n\n        return this._collapsedItemsWidth;\n    }\n\n    constructor(\n        public element: HTMLElement,\n        public width: number,\n        public itemsForCollapse: CollapsibleItem[] = []\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        if (this.itemsForCollapse.length > 0) {\n            this.updateTitle(collapsed);\n        }\n\n        this.itemsForCollapse.forEach((item) => item.processCollapsed(collapsed));\n    }\n\n    private calculateAndCacheCollapsedItemsWidth() {\n        this._collapsedItemsWidth = this.itemsForCollapse\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getTitle(): string {\n        const computedTitle = this.element.getAttribute('computedTitle');\n\n        return computedTitle\n            ? decodeURI(computedTitle)\n            : (this.itemsForCollapse.length > 0 ? this.itemsForCollapse[0].element.innerText : '');\n    }\n\n    private updateTitle(collapsed: boolean) {\n        if (collapsed) {\n            this.element.setAttribute('title', this.getTitle());\n        } else {\n            this.element.removeAttribute('title');\n        }\n    }\n}\n\n\n@Component({\n    selector: MC_NAVBAR,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <nav class=\"mc-navbar\">\n            <ng-content select=\"[${MC_NAVBAR_CONTAINER}],${MC_NAVBAR_CONTAINER}\"></ng-content>\n        </nav>\n    `,\n    styleUrls: ['./navbar.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class McNavbar implements AfterViewInit, OnDestroy {\n\n    private readonly forceRecalculateItemsWidth: boolean = false;\n    private readonly resizeDebounceInterval: number = 100;\n    private readonly firstLevelElement: string = MC_NAVBAR_CONTAINER;\n    private readonly secondLevelElements: string[] = [\n        MC_NAVBAR_ITEM,\n        MC_NAVBAR_BRAND,\n        MC_NAVBAR_TITLE\n    ];\n\n    private _totalItemsWidths: number;\n    private _itemsWidths: CachedItemWidth[];\n\n    private get maxAllowedWidth(): number {\n        return this._elementRef.nativeElement.querySelector('nav').getBoundingClientRect().width;\n    }\n\n    private get itemsWidths(): CachedItemWidth[] {\n        if (this._itemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._itemsWidths;\n        }\n\n        this.calculateAndCacheItemsWidth();\n\n        return this._itemsWidths;\n    }\n\n    private get totalItemsWidth(): number {\n        if (this._totalItemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._totalItemsWidths;\n        }\n\n        this.calculateAndCacheTotalItemsWidth();\n\n        return this._totalItemsWidths;\n    }\n\n    private _resizeSubscription: Subscription;\n\n    constructor(\n        private _elementRef: ElementRef\n    ) {\n        const resizeObserver = fromEvent(window, 'resize')\n            .pipe(debounceTime(this.resizeDebounceInterval));\n\n        this._resizeSubscription = resizeObserver.subscribe(this.updateCollapsed.bind(this));\n    }\n\n    updateCollapsed(): void {\n        let collapseDelta = this.totalItemsWidth - this.maxAllowedWidth;\n\n        for (let i = this.itemsWidths.length - 1; i >= 0; i--) {\n            const item = this.itemsWidths[i];\n\n            if (!item.canCollapse) {\n                continue;\n            }\n\n            item.processCollapsed(collapseDelta > 0);\n            collapseDelta -= item.collapsedItemsWidth;\n        }\n    }\n\n    ngAfterViewInit(): void {\n        // Note: this wait is required for loading and rendering fonts for icons;\n        // unfortunately we cannot control font rendering\n        setTimeout(() => this.updateCollapsed(), 0);\n    }\n\n    ngOnDestroy() {\n        this._resizeSubscription.unsubscribe();\n    }\n\n    private calculateAndCacheTotalItemsWidth() {\n        this._totalItemsWidths = this.itemsWidths\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getOuterElementWidth(element: HTMLElement): number {\n        const baseWidth  = element.getBoundingClientRect().width;\n        const marginRight = parseInt(getComputedStyle(element).getPropertyValue('margin-right'));\n        const marginLeft = parseInt(getComputedStyle(element).getPropertyValue('margin-left'));\n\n        return baseWidth + marginRight + marginLeft;\n    }\n\n    private calculateAndCacheItemsWidth() {\n        const allItemsSelector = this.secondLevelElements\n            .map((e: string) => `${this.firstLevelElement}>${e}`);\n        const allItems: HTMLElement[] = Array.from(this._elementRef.nativeElement.querySelectorAll(allItemsSelector));\n\n        this._itemsWidths = allItems\n            .map((el) => new CachedItemWidth(el, this.getOuterElementWidth(el), this.getItemsForCollapse(el)));\n    }\n\n    private getItemsForCollapse(element: HTMLElement): CollapsibleItem[] {\n        const icon = element.querySelector(`[${MC_ICON}],${MC_NAVBAR_LOGO},[${MC_NAVBAR_LOGO}]`);\n\n        if (!icon) {\n            return [];\n        }\n\n        return Array.from(element.querySelectorAll(MC_NAVBAR_TITLE))\n            .map((el) => new CollapsibleItem(<HTMLElement> el, el.getBoundingClientRect().width));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport {\n    McNavbar,\n    McNavbarContainer,\n    McNavbarItem,\n    McNavbarTitle,\n    McNavbarBrand,\n    McNavbarLogo\n} from './navbar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        McIconModule\n    ],\n    exports: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ],\n    declarations: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ]\n})\nexport class McNavbarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressBarMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressBarBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressBarMixinBase:\n    CanColorCtor &\n    typeof McProgressBarBase =\n        mixinColor(McProgressBarBase);\n\n@Component({\n    selector: 'mc-progress-bar',\n    templateUrl: './progress-bar.component.html',\n    styleUrls: ['./progress-bar.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-bar',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressBar extends _McProgressBarMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-bar-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressBarMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McProgressBar\n} from './progress-bar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressBar\n    ],\n    declarations: [\n        McProgressBar\n    ]\n})\nexport class McProgressBarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressSpinnerMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressSpinnerBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressSpinnerMixinBase:\n    CanColorCtor &\n    typeof McProgressSpinnerBase =\n        mixinColor(McProgressSpinnerBase);\n\nconst MAX_DASH_ARRAY = 273;\n\n@Component({\n    selector: 'mc-progress-spinner',\n    templateUrl: './progress-spinner.component.html',\n    styleUrls: ['./progress-spinner.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-spinner',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressSpinner extends _McProgressSpinnerMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-spinner-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressSpinnerMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n\n    get dashOffsetPercent(): string {\n        return `${MAX_DASH_ARRAY - this.percentage * MAX_DASH_ARRAY}%`;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McProgressSpinner } from './progress-spinner.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressSpinner\n    ],\n    declarations: [\n        McProgressSpinner\n    ]\n})\nexport class McProgressSpinnerModule {}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, Directive, ElementRef, EventEmitter, forwardRef,\n    Input, OnDestroy, OnInit, Optional, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { UniqueSelectionDispatcher } from '@ptsecurity/cdk/collections';\n\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n\n/** Change event object emitted by McRadio. */\nexport class McRadioChange {\n    constructor(\n        /** The McRadioButton that emits the change event. */\n        public source: McRadioButton,\n        /** The value of the McRadioButton. */\n        public value: any) {}\n}\n\n// Boilerplate for applying mixins to McRadioGroup.\n/** @docs-private */\nexport class McRadioGroupBase {}\nexport const _McRadioGroupMixinBase: CanDisableCtor & typeof McRadioGroupBase = mixinDisabled(McRadioGroupBase);\n\n/**\n * Provider Expression that allows mc-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nexport const MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McRadioGroup),\n    multi: true\n};\n\n@Directive({\n    selector: 'mc-radio-group',\n    exportAs: 'mcRadioGroup',\n    providers: [MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n    host: {\n        role: 'radiogroup',\n        class: 'mc-radio-group'\n    },\n    inputs: ['disabled']\n})\nexport class McRadioGroup extends _McRadioGroupMixinBase\n    implements AfterContentInit, ControlValueAccessor, CanDisable {\n\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    @Input()\n    get name(): string { return this._name; }\n    set name(value: string) {\n        this._name = value;\n        this.updateRadioButtonNames();\n    }\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this.markRadiosForCheck();\n    }\n\n    /** Value of the radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(newValue: any) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n\n            this.updateSelectedRadioFromValue();\n            this.checkSelectedRadioButton();\n        }\n    }\n\n    /** Whether the radio button is selected. */\n    @Input()\n    get selected() { return this._selected; }\n    set selected(selected: McRadioButton | null) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this.checkSelectedRadioButton();\n    }\n\n    /** Whether the radio group is disabled */\n    @Input()\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /** Whether the radio group is required */\n    @Input()\n    get required(): boolean { return this._required; }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /**\n     * Event emitted when the group value changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * a radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** Child radio buttons. */\n    @ContentChildren(forwardRef(() => McRadioButton), { descendants: true })\n    _radios: QueryList<McRadioButton>;\n\n    /**\n     * Selected value for group. Should equal the value of the selected radio button if there *is*\n     * a corresponding radio button with a matching value. If there is *not* such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    private _value: any = null;\n\n    /** The HTML name attribute applied to radio buttons in this group. */\n    private _name: string = `mc-radio-group-${nextUniqueId++}`;\n\n    /** The currently selected radio button. Should match value. */\n    private _selected: McRadioButton | null = null;\n\n    /** Whether the `value` has been set to its initial value. */\n    private _isInitialized: boolean = false;\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    private _labelPosition: 'before' | 'after' = 'after';\n\n    /** Whether the radio group is disabled. */\n    private _disabled: boolean = false;\n\n    /** Whether the radio group is required. */\n    private _required: boolean = false;\n\n    constructor(\n        private readonly _changeDetector: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    /** The method to be called in order to update ngModel */\n    // tslint:disable-next-line\n    controlValueAccessorChangeFn: (value: any) => void = () => {};\n\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * @docs-private\n     */\n    // tslint:disable-next-line\n    onTouched: () => any = () => {};\n\n    checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on McRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the McRadioGroup.\n        this._isInitialized = true;\n    }\n\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n\n    /** Dispatch change event with current selection and group value. */\n    emitChangeEvent(): void {\n        if (this._isInitialized) {\n            this.change.emit(new McRadioChange(this._selected!, this._value));\n        }\n    }\n\n    markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach((radio) => radio.markForCheck());\n        }\n    }\n\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     */\n    writeValue(value: any) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn: (value: any) => void) {\n        this.controlValueAccessorChangeFn = fn;\n    }\n\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n\n    private updateRadioButtonNames(): void {\n        if (this._radios) {\n            this._radios.forEach((radio) => {\n                radio.name = this.name;\n            });\n        }\n    }\n\n    /** Updates the `selected` radio button from the internal _value state. */\n    private updateSelectedRadioFromValue(): void {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n\n        if (this._radios != null && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach((radio) => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n}\n\n\n// Boilerplate for applying mixins to McRadioButton.\n/** @docs-private */\nexport class McRadioButtonBase {\n    // Since the disabled property is manually defined for the McRadioButton and isn't set up in\n    // the mixin base class. To be able to use the tabindex mixin, a disabled property must be\n    // defined to properly work.\n    disabled: boolean;\n\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McRadioButtonMixinBase:\n    CanColorCtor &\n    HasTabIndexCtor &\n    typeof McRadioButtonBase =\n        mixinColor(mixinTabIndex(McRadioButtonBase));\n\n\n@Component({\n    selector: 'mc-radio-button',\n    templateUrl: 'radio.component.html',\n    styleUrls: ['radio.css'],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    exportAs: 'mcRadioButton',\n    host: {\n        class: 'mc-radio-button',\n        '[attr.id]': 'id',\n        '[class.mc-checked]': 'checked',\n        '[class.mc-disabled]': 'disabled',\n        '(focus)': '_inputElement.nativeElement.focus()'\n    }\n})\nexport class McRadioButton extends _McRadioButtonMixinBase\n    implements OnInit, OnDestroy, CanColor, HasTabIndex {\n\n    private readonly _uniqueId: string = `mc-radio-${++nextUniqueId}`;\n\n    /* tslint:disable:member-ordering */\n\n    /** The unique ID for the radio button. */\n    @Input() id: string = this._uniqueId;\n\n    /** Analog to HTML 'name' attribute used to group radios for unique selection. */\n    @Input() name: string;\n\n    /** Used to set the 'aria-label' attribute on the underlying input element. */\n    @Input('aria-label') ariaLabel: string;\n\n    /** The 'aria-labelledby' attribute takes precedence as the element's text alternative. */\n    @Input('aria-labelledby') ariaLabelledby: string;\n\n    /** The 'aria-describedby' attribute is read after the element's label and field type. */\n    @Input('aria-describedby') ariaDescribedby: string;\n\n    /** Whether this radio button is checked. */\n    @Input()\n    get checked(): boolean { return this._checked; }\n    set checked(value: boolean) {\n        const newCheckedState = toBoolean(value);\n\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            } else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** The value of this radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(value: any) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup != null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n\n    /** Whether the radio button is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled || (this.radioGroup != null && this.radioGroup.disabled);\n    }\n    set disabled(value: boolean) {\n        const newDisabledState = toBoolean(value);\n\n        if (this._disabled !== newDisabledState) {\n\n            this._disabled = newDisabledState;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** Whether the radio button is required. */\n    @Input()\n    get required(): boolean {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    private _labelPosition: 'before' | 'after';\n\n    /** The native `<input type=radio>` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Event emitted when the checked state of this radio button changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * the radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** The parent radio group. May or may not be present. */\n    radioGroup: McRadioGroup;\n\n    @Input()\n    isFocused: boolean = false;\n\n    /** ID of the native input element inside `<mc-radio-button>` */\n    get inputId(): string { return `${this.id || this._uniqueId}-input`; }\n\n    /** Whether this radio is checked. */\n    private _checked: boolean = false;\n\n    /** Whether this radio is disabled. */\n    private _disabled: boolean;\n\n    /** Whether this radio is required. */\n    private _required: boolean;\n\n    /** Value assigned to this radio. */\n    private _value: any = null;\n\n    /** Unregister function for _radioDispatcher */\n    // tslint:disable-next-line\n    private readonly removeUniqueSelectionListener: () => void = () => {};\n\n    constructor(\n        @Optional() radioGroup: McRadioGroup,\n        elementRef: ElementRef,\n        private readonly _changeDetector: ChangeDetectorRef,\n        private readonly _radioDispatcher: UniqueSelectionDispatcher\n    ) {\n\n        super(elementRef);\n\n        this.radioGroup = radioGroup;\n\n        this.removeUniqueSelectionListener =\n            _radioDispatcher.listen((id: string, name: string) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            });\n    }\n\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n\n    ngOnDestroy() {\n        this.removeUniqueSelectionListener();\n    }\n\n    /** Focuses the radio button. */\n    // tslint:disable-next-line\n    focus(): void {}\n\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n\n    onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n\n    onInputChange(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this.emitChangeEvent();\n\n        if (this.radioGroup) {\n            this.radioGroup.controlValueAccessorChangeFn(this.value);\n            this.radioGroup.touch();\n            if (groupValueChanged) {\n                this.radioGroup.emitChangeEvent();\n            }\n        }\n    }\n\n    /** Dispatch change event with current value. */\n    private emitChangeEvent(): void {\n        this.change.emit(new McRadioChange(this, this._value));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McRadioButton, McRadioGroup } from './radio.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule],\n    exports: [McRadioGroup, McRadioButton],\n    declarations: [McRadioGroup, McRadioButton]\n})\nexport class McRadioModule {\n}\n","import { Directive, Input } from '@angular/core';\n\nimport { CdkTreeNodeDef } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeDef]',\n    inputs: ['when: mcTreeNodeDefWhen'],\n    providers: [{ provide: CdkTreeNodeDef, useExisting: McTreeNodeDef }]\n})\nexport class McTreeNodeDef<T> extends CdkTreeNodeDef<T> {\n    @Input('mcTreeNode') data: T;\n}\n","import { Directive, Input, OnInit } from '@angular/core';\nimport { CdkTreeNodePadding } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodePadding]',\n    providers: [{ provide: CdkTreeNodePadding, useExisting: McTreeNodePadding }]\n})\nexport class McTreeNodePadding<T> extends CdkTreeNodePadding<T> implements OnInit {\n    get leftPadding(): number {\n        return (this._withIcon ? 0 : this._iconWidth) + this._baseLeftPadding;\n    }\n\n    _baseLeftPadding: number = 6;\n    _iconWidth: number = 20;\n    _indent: number = 16;\n\n    @Input('mcTreeNodePadding') level: number;\n\n    @Input('mcTreeNodePaddingIndent') indent: number;\n\n    _withIcon: boolean;\n\n    _paddingIndent(): string | null {\n        const nodeLevel = (this._treeNode.data && this._tree.treeControl.getLevel)\n            ? this._tree.treeControl.getLevel(this._treeNode.data)\n            : null;\n\n        const level = this._level || nodeLevel;\n\n        return level ? `${(level * this._indent) + this.leftPadding}px` : `${this._baseLeftPadding}px`;\n    }\n\n    ngOnInit(): void {\n        this._withIcon = this._tree.treeControl.isExpandable(this._treeNode.data);\n        this._setPadding();\n    }\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n    QueryList,\n    ViewEncapsulation,\n    ChangeDetectorRef,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\n\nimport { FocusKeyManager, IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { END, ENTER, HOME, PAGE_DOWN, PAGE_UP, SPACE } from '@ptsecurity/cdk/keycodes';\n\nimport {\n    McLine,\n    McLineSetter,\n    CanDisable,\n    mixinDisabled,\n    toBoolean, CanDisableCtor\n} from '@ptsecurity/mosaic/core';\n\n\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\n@Component({\n    exportAs: 'mcListOption',\n    selector: 'mc-list-option',\n    host: {\n        tabindex: '-1',\n\n        class: 'mc-list-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n        '(click)': '_handleClick()'\n    },\n    templateUrl: 'list-option.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListOption implements AfterContentInit, OnDestroy, OnInit, IFocusableOption {\n    _hasFocus: boolean = false;\n\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    @ViewChild('text') _text: ElementRef;\n\n    // Whether the label should appear before or after the checkbox. Defaults to 'after'\n    @Input() checkboxPosition: 'before' | 'after' = 'after';\n\n    @Input() value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled || (this.listSelection && this.listSelection.disabled);\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.listSelection.selectedOptions && this.listSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            this.listSelection._reportValueChange();\n        }\n    }\n\n    private _lineSetter: McLineSetter;\n    private _selected = false;\n    private _disabled = false;\n\n    constructor(\n        private _element: ElementRef,\n        private _changeDetector: ChangeDetectorRef,\n        @Inject(forwardRef(() => McListSelection))\n        public listSelection: McListSelection\n    ) {}\n\n    ngOnInit() {\n        if (this._selected) {\n            // List options that are selected at initialization can't be reported properly to the form\n            // control. This is because it takes some time until the selection-list knows about all\n            // available options. Also it can happen that the ControlValueAccessor has an initial value\n            // that should be used instead. Deferring the value change report to the next tick ensures\n            // that the form control value is not being overwritten.\n            const wasSelected = this._selected;\n\n            Promise.resolve().then(() => {\n                if (this._selected || wasSelected) {\n                    this.selected = true;\n                    this._changeDetector.markForCheck();\n                }\n            });\n        }\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    ngOnDestroy(): void {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => this.selected = false);\n        }\n\n        this.listSelection._removeOptionFromList(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    focus(): void {\n        this._element.nativeElement.focus();\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    getLabel() {\n        return this._text ? this._text.nativeElement.textContent : '';\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.listSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.listSelection.selectedOptions.select(this);\n        } else {\n            this.listSelection.selectedOptions.deselect(this);\n        }\n\n        this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleClick() {\n        if (this.disabled) { return; }\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    _handleFocus() {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur() {\n        this._hasFocus = false;\n\n        this.listSelection._onTouched();\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n\n\nexport const MC_SELECTION_LIST_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McListSelection),\n    multi: true\n};\n\n// Change event that is being fired whenever the selected state of an option changes. */\nexport class McListSelectionChange {\n    constructor(\n        // Reference to the selection list that emitted the event.\n        public source: McListSelection,\n        // Reference to the option that has been changed.\n        public option: McListOption\n    ) {}\n}\n\n\nexport class McListSelectionBase {}\n\nexport const _McListSelectionMixinBase: CanDisableCtor & typeof McListSelectionBase\n    = mixinDisabled(McListSelectionBase);\n\n@Component({\n    exportAs: 'mcListSelection',\n    selector: 'mc-list-selection',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-list-selection',\n        '[tabIndex]': 'tabIndex',\n        '(focus)': 'focus()',\n        '(blur)': '_onTouched()',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    providers: [MC_SELECTION_LIST_VALUE_ACCESSOR],\n    preserveWhitespaces: false\n})\nexport class McListSelection extends _McListSelectionMixinBase implements\n    IFocusableOption, CanDisable, AfterContentInit, ControlValueAccessor {\n\n    _keyManager: FocusKeyManager<McListOption>;\n\n    // The option components contained within this selection-list.\n    @ContentChildren(McListOption) options: QueryList<McListOption>;\n\n    tabIndex: number;\n\n    autoSelect: boolean;\n    noUnselect: boolean;\n    multiple: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input() horizontal: boolean = false;\n\n    // Emits a change event whenever the selected state of an option changes.\n    @Output() readonly selectionChange: EventEmitter<McListSelectionChange> = new EventEmitter<McListSelectionChange>();\n\n    selectedOptions: SelectionModel<McListOption>;\n\n    // Used for storing the values that were assigned before the options were initialized.\n    private _tempValues: string[] | null;\n\n    private _modelChanges = Subscription.EMPTY;\n\n    constructor(\n        private _element: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string,\n        @Attribute('multiple') multiple: string\n    ) {\n        super();\n\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.selectedOptions = new SelectionModel<McListOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.horizontal = toBoolean(this.horizontal);\n\n        this._keyManager = new FocusKeyManager<McListOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(!this.horizontal)\n            .withHorizontalOrientation(this.horizontal ? 'ltr' : null);\n\n        if (this._tempValues) {\n            this._setOptionsFromValues(this._tempValues);\n            this._tempValues = null;\n        }\n\n        // Sync external changes to the model back to the options.\n        this._modelChanges = this.selectedOptions.onChange!.subscribe((event) => {\n            for (const item of event.added) {\n                item.selected = true;\n            }\n\n            for (const item of event.removed) {\n                item.selected = false;\n            }\n        });\n\n        this.updateScrollSize();\n    }\n\n    ngOnDestroy() {\n        this._modelChanges.unsubscribe();\n    }\n\n    focus() {\n        this._element.nativeElement.focus();\n    }\n\n    selectAll() {\n        this.options.forEach((option) => option.setSelected(true));\n\n        this._reportValueChange();\n    }\n\n    deselectAll() {\n        this.options.forEach((option) => option.setSelected(false));\n\n        this._reportValueChange();\n    }\n\n    updateScrollSize(): void {\n        if (this.horizontal || !this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    // Sets the focused option of the selection-list.\n    setFocusedOption(option: McListOption): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitChangeEvent(option);\n        this._reportValueChange();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(values: string[]): void {\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        } else {\n            this._tempValues = values;\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this._onTouched = fn;\n    }\n\n    // Implemented as a part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        if (this.options) {\n            this.options.forEach((option) => option.disabled = isDisabled);\n        }\n    }\n\n    getSelectedOptionValues(): string[] {\n        return this.options.filter((option) => option.selected).map((option) => option.value);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McListOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    _canDeselectLast(listOption: McListOption): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && listOption.selected);\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    // View to model callback that should be called if the list or its options lost focus.\n    _onTouched: () => void = () => {};\n\n    // Removes an option from the selection list and updates the active item.\n    _removeOptionFromList(option: McListOption) {\n        if (option._hasFocus) {\n            const optionIndex = this._getOptionIndex(option);\n\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.setPreviousItemActive();\n            } else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.setNextItemActive();\n            }\n        }\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                if (!this.horizontal) { this._keyManager.setPreviousPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                if (!this.horizontal) { this._keyManager.setNextPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    // Reports a value change to the ControlValueAccessor\n    _reportValueChange() {\n        if (this.options) {\n            this._onChange(this.getSelectedOptionValues());\n        }\n    }\n\n    // Emits a change event if the selected state of an option changed.\n    _emitChangeEvent(option: McListOption) {\n        this.selectionChange.emit(new McListSelectionChange(this, option));\n    }\n\n    // Returns the option with the specified value.\n    private _getOptionByValue(value: string): McListOption | undefined {\n        return this.options.find((option) => option.value === value);\n    }\n\n    // Sets the selected options based on the specified values.\n    private _setOptionsFromValues(values: string[]) {\n        this.options.forEach((option) => option.setSelected(false));\n\n        values\n            .map((value) => this._getOptionByValue(value))\n            .filter(Boolean)\n            .forEach((option) => option!.setSelected(true));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    // Returns the index of the specified list option.\n    private _getOptionIndex(option: McListOption): number {\n        return this.options.toArray().indexOf(option);\n    }\n\n    // View to model callback that should be called whenever the selected options change.\n    private _onChange: (value: any) => void = (_: any) => {};\n}\n","// todo пока не делаем, перенесено из материала, но у нас в доках таких простых списков нет.\nimport {\n    AfterContentInit, ChangeDetectionStrategy, Component, ContentChildren, Directive, ElementRef, QueryList,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { McLine, McLineSetter } from '@ptsecurity/mosaic/core';\n\n\nexport class McListBase {}\n\n@Component({\n    selector: 'mc-list',\n    host: { class: 'mc-list' },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McList extends McListBase {}\n\n\n/**\n * Directive whose purpose is to add the mc- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n    selector: '[mc-subheader], [mcSubheader]',\n    host: { class: 'mc-subheader' }\n})\nexport class McListSubheaderCssStyler {}\n\n\n// Boilerplate for applying mixins to McListItem.\nexport class McListItemBase {}\n\n@Component({\n    selector: 'mc-list-item, a[mc-list-item]',\n    host: {\n        class: 'mc-list-item',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()'\n    },\n    templateUrl: './list-item.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListItem extends McListItemBase implements AfterContentInit {\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    private _lineSetter: McLineSetter;\n\n    constructor(private _element: ElementRef) {\n        super();\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    _handleFocus() {\n        this._element.nativeElement.classList.add('mc-focused');\n    }\n\n    _handleBlur() {\n        this._element.nativeElement.classList.remove('mc-focused');\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLineModule } from '@ptsecurity/mosaic/core';\n\nimport { McListSelection, McListOption } from './list-selection.component';\nimport { McList, McListItem, McListSubheaderCssStyler } from './list.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        McLineModule\n    ],\n    exports: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ],\n    declarations: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ]\n})\nexport class McListModule {}\n","import {\n    Input,\n    Attribute,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\nexport class McLinkBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McLinkBase: HasTabIndexCtor & CanDisableCtor & typeof McLinkBase\n    = mixinTabIndex(mixinDisabled(McLinkBase));\n\n@Component({\n    selector: 'a.mc-link',\n    template: `<ng-content></ng-content>`,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcLink',\n    styleUrls: ['./link.css'],\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': 'tabIndex'\n    }\n})\n\nexport class McLink extends _McLinkBase implements OnDestroy, HasTabIndex, CanDisable {\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    private _disabled = false;\n\n    constructor(\n        @Attribute('tabindex') tabIndex: string,\n        public elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _changeDetector: ChangeDetectorRef) {\n\n        super(elementRef);\n        this._focusMonitor.monitor(elementRef.nativeElement, true);\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this.elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLink } from './link.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule\n    ],\n    declarations: [McLink],\n    exports: [McLink]\n})\nexport class McLinkModule {}\n","import { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { McModalRef } from './modal-ref.class';\n\n\ninterface IRegisteredMeta {\n    modalRef: McModalRef;\n    afterOpenSubscription: Subscription;\n    afterCloseSubscription: Subscription;\n}\n\n@Injectable()\nexport class McModalControlService {\n\n    // Track singleton afterAllClose through over the injection tree\n    get afterAllClose(): Subject<void> {\n        return this.parentService ? this.parentService.afterAllClose : this.rootAfterAllClose;\n    }\n\n    // Track singleton openModals array through over the injection tree\n    get openModals(): McModalRef[] {\n        return this.parentService ? this.parentService.openModals : this.rootOpenModals;\n    }\n\n    // @ts-ignore\n    private rootOpenModals: McModalRef[] = this.parentService ? null : [];\n    // @ts-ignore\n    private rootAfterAllClose: Subject<void> = this.parentService ? null : new Subject<void>();\n    // @ts-ignore\n    private rootRegisteredMetaMap: Map<McModalRef, IRegisteredMeta> = this.parentService ? null : new Map();\n\n    // Registered modal for later usage\n    private get registeredMetaMap(): Map<McModalRef, IRegisteredMeta> {\n        return this.parentService ? this.parentService.registeredMetaMap : this.rootRegisteredMetaMap;\n    }\n\n    constructor(\n        @Optional() @SkipSelf() private parentService: McModalControlService) {\n    }\n\n    // Register a modal to listen its open/close\n    registerModal(modalRef: McModalRef): void {\n        if (!this.hasRegistered(modalRef)) {\n            const afterOpenSubscription = modalRef.afterOpen.subscribe(() => this.openModals.push(modalRef));\n            const afterCloseSubscription = modalRef.afterClose.subscribe(() => this.removeOpenModal(modalRef));\n\n            this.registeredMetaMap.set(modalRef, {modalRef, afterOpenSubscription, afterCloseSubscription});\n        }\n    }\n\n    hasRegistered(modalRef: McModalRef): boolean {\n        return this.registeredMetaMap.has(modalRef);\n    }\n\n    // Close all registered opened modals\n    closeAll(): void {\n        let i = this.openModals.length;\n\n        while (i--) {\n            this.openModals[i].close();\n        }\n    }\n\n    private removeOpenModal(modalRef: McModalRef): void {\n        const index = this.openModals.indexOf(modalRef);\n\n        if (index > -1) {\n            this.openModals.splice(index, 1);\n\n            if (!this.openModals.length) {\n                this.afterAllClose.next();\n            }\n        }\n    }\n}\n","import { Observable } from 'rxjs';\n\nimport { McModalComponent } from './modal.component';\n\n\n/**\n * API class that public to users to handle the modal instance.\n * McModalRef is aim to avoid accessing to the modal instance directly by users.\n */\nexport abstract class McModalRef<T = any, R = any> {\n    abstract afterOpen: Observable<void>;\n    abstract afterClose: Observable<R>;\n\n    abstract open(): void;\n\n    abstract close(result?: R): void;\n\n    abstract destroy(result?: R): void;\n\n    /**\n     * Trigger the nzOnOk/nzOnCancel by manual\n     */\n    abstract triggerOk(): void;\n\n    abstract triggerCancel(): void;\n\n    // /**\n    //  * Return the ComponentRef of nzContent when specify nzContent as a Component\n    //  * Note: this method may return undefined if the Component has not ready yet.\n    //    (it only available after Modal's ngOnInit)\n    //  */\n    // abstract getContentComponentRef(): ComponentRef<{}>;\n\n    /**\n     * Return the component instance of nzContent when specify nzContent as a Component\n     * Note: this method may return undefined if the Component has not ready yet.\n     * (it only available after Modal's ngOnInit)\n     */\n    abstract getContentComponent(): T;\n\n    /**\n     * Get the dom element of this Modal\n     */\n    abstract getElement(): HTMLElement;\n\n    /**\n     * Get the instance of the Modal itself\n     */\n    abstract getInstance(): McModalComponent;\n}\n","export interface IClickPosition {\n    x: number;\n    y: number;\n}\n\nexport class ModalUtil {\n    private lastPosition: IClickPosition;\n\n    constructor(private document: Document) {\n        this.lastPosition = {x: -1, y: -1};\n        this.listenDocumentClick();\n    }\n\n    getLastClickPosition(): IClickPosition {\n        return this.lastPosition;\n    }\n\n    listenDocumentClick(): void {\n        this.document.addEventListener('click', (event: MouseEvent) => {\n            this.lastPosition = {x: event.clientX, y: event.clientY};\n        });\n    }\n}\n\nexport default new ModalUtil(document);\n","import { DOCUMENT } from '@angular/common';\nimport {\n    AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    Renderer2,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewContainerRef, ViewEncapsulation\n} from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { McMeasureScrollbarService } from '@ptsecurity/mosaic/core';\nimport { Observable } from 'rxjs';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\n// tslint:disable-next-line\nimport ModalUtil from './modal-util';\nimport { IModalButtonOptions, IModalOptions, ModalType, OnClickCallback } from './modal.type';\n\n\n// Duration when perform animations (ms)\nexport const MODAL_ANIMATE_DURATION = 200;\n\ntype AnimationState = 'enter' | 'leave' | null;\n\n@Component({\n    selector: 'mc-modal',\n    templateUrl: './modal.component.html',\n    styleUrls: ['./modal.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McModalComponent<T = any, R = any> extends McModalRef<T, R>\n    implements OnInit, OnChanges, AfterViewInit, OnDestroy, IModalOptions {\n\n    // tslint:disable-next-line:no-any\n    @Input() mcModalType: ModalType = 'default';\n    // If not specified, will use <ng-content>\n    @Input() mcContent: string | TemplateRef<{}> | Type<T>;\n    // available when mcContent is a component\n    @Input() mcComponentParams: object;\n    // Default Modal ONLY\n    @Input() mcFooter: string | TemplateRef<{}> | IModalButtonOptions<T>[];\n\n    @Input()\n    get mcVisible() { return this._mcVisible; }\n    set mcVisible(value) { this._mcVisible = value; }\n    _mcVisible = false;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n\n    @Input() mcZIndex: number = 1000;\n    @Input() mcWidth: number | string = 480;\n    @Input() mcWrapClassName: string;\n    @Input() mcClassName: string;\n    @Input() mcStyle: object;\n    @Input() mcTitle: string | TemplateRef<{}>;\n    @Input() mcCloseByESC: boolean = true;\n\n    @Input()\n    get mcClosable() { return this._mcClosable; }\n    set mcClosable(value) { this._mcClosable = value; }\n    _mcClosable = true;\n\n    @Input()\n    get mcMask() { return this._mcMask; }\n    set mcMask(value) { this._mcMask = value; }\n    _mcMask = true;\n\n    @Input()\n    get mcMaskClosable() { return this._mcMaskClosable; }\n    set mcMaskClosable(value) { this._mcMaskClosable = value; }\n    _mcMaskClosable = true;\n\n    @Input() mcMaskStyle: object;\n    @Input() mcBodyStyle: object;\n\n    // Trigger when modal open(visible) after animations\n    @Output() mcAfterOpen = new EventEmitter<void>();\n    // Trigger when modal leave-animation over\n    @Output() mcAfterClose = new EventEmitter<R>();\n\n    // --- Predefined OK & Cancel buttons\n    @Input() mcOkText: string;\n    @Input() mcOkType = 'primary';\n\n    @Input()\n    get mcOkLoading() { return this._mcOkLoading; }\n    set mcOkLoading(value) { this._mcOkLoading = value; }\n    _mcOkLoading = false;\n\n    @Input() @Output() mcOnOk: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    // Only aim to focus the ok button that needs to be auto focused\n    @ViewChild('autoFocusButtonOk', {read: ElementRef}) autoFocusButtonOk: ElementRef;\n    @Input() mcCancelText: string;\n\n    @Input()\n    get mcCancelLoading() { return this._mcCancelLoading; }\n    set mcCancelLoading(value) { this._mcCancelLoading = value; }\n    _mcCancelLoading = false;\n\n    @Input() @Output() mcOnCancel: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    @ViewChild('modalContainer') modalContainer: ElementRef;\n    @ViewChild('bodyContainer', {read: ViewContainerRef}) bodyContainer: ViewContainerRef;\n    maskAnimationClassMap: object;\n    modalAnimationClassMap: object;\n    // The origin point that animation based on\n    transformOrigin = '0px 0px 0px';\n\n    // Observable alias for mcAfterOpen\n    get afterOpen(): Observable<void> {\n        return this.mcAfterOpen.asObservable();\n    }\n\n    // Observable alias for mcAfterClose\n    get afterClose(): Observable<R> {\n        return this.mcAfterClose.asObservable();\n    }\n\n    get okText(): string {\n        return this.mcOkText;\n    }\n\n    get cancelText(): string {\n        return this.mcCancelText;\n    }\n\n    // Indicate whether this dialog should hidden\n    get hidden(): boolean {\n        return !this.mcVisible && !this.animationState;\n    }\n\n    // Handle the reference when using mcContent as Component\n    private contentComponentRef: ComponentRef<T>;\n    // Current animation state\n    private animationState: AnimationState;\n    private container: HTMLElement | OverlayRef;\n\n    constructor(\n        private overlay: Overlay,\n        private renderer: Renderer2,\n        private cfr: ComponentFactoryResolver,\n        private elementRef: ElementRef,\n        private viewContainer: ViewContainerRef,\n        private mcMeasureScrollbarService: McMeasureScrollbarService,\n        private modalControl: McModalControlService,\n        private changeDetector: ChangeDetectorRef,\n        @Inject(DOCUMENT) private document: any) {\n\n        super();\n    }\n\n    @Input() mcGetContainer: HTMLElement | OverlayRef | (() => HTMLElement | OverlayRef) = () => this.overlay.create();\n\n    ngOnInit() {\n\n        // Create component along without View\n        if (this.isComponent(this.mcContent)) {\n            this.createDynamicComponent(this.mcContent as Type<T>);\n        }\n\n        // Setup default button options\n        if (this.isModalButtons(this.mcFooter)) {\n            this.mcFooter = this.formatModalButtons(this.mcFooter as IModalButtonOptions<T>[]);\n        }\n\n        // Place the modal dom to elsewhere\n        this.container = typeof this.mcGetContainer === 'function' ? this.mcGetContainer() : this.mcGetContainer;\n        if (this.container instanceof HTMLElement) {\n            this.container.appendChild(this.elementRef.nativeElement);\n        } else if (this.container instanceof OverlayRef) {\n            // NOTE: only attach the dom to overlay, the view container is not changed actually\n            this.container.overlayElement.appendChild(this.elementRef.nativeElement);\n        }\n\n        // Register modal when afterOpen/afterClose is stable\n        this.modalControl.registerModal(this);\n    }\n\n    // [NOTE] NOT available when using by service!\n    // Because ngOnChanges never be called when using by service,\n    // here we can't support \"mcContent\"(Component) etc. as inputs that initialized dynamically.\n    // BUT: User also can change \"mcContent\" dynamically to trigger UI changes\n    // (provided you don't use \bComponent that needs initializations)\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.mcVisible) {\n            // Do not trigger animation while initializing\n            this.handleVisibleStateChange(this.mcVisible, !changes.mcVisible.firstChange);\n        }\n    }\n\n    ngAfterViewInit() {\n        // If using Component, it is the time to attach View while bodyContainer is ready\n        if (this.contentComponentRef) {\n            this.bodyContainer.insert(this.contentComponentRef.hostView);\n        }\n\n        if (this.autoFocusButtonOk) {\n            (this.autoFocusButtonOk.nativeElement as HTMLButtonElement).focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.container instanceof OverlayRef) {\n            this.container.dispose();\n        }\n    }\n\n    open() {\n        this.changeVisibleFromInside(true);\n    }\n\n    close(result?: R) {\n        this.changeVisibleFromInside(false, result);\n    }\n\n    // Destroy equals Close\n    destroy(result?: R) {\n        this.close(result);\n    }\n\n    triggerOk() {\n        this.onClickOkCancel('ok');\n    }\n\n    triggerCancel() {\n        this.onClickOkCancel('cancel');\n    }\n\n    getInstance(): McModalComponent {\n        return this;\n    }\n\n    getContentComponentRef(): ComponentRef<T> {\n        return this.contentComponentRef;\n    }\n\n    getContentComponent(): T {\n        return this.contentComponentRef && this.contentComponentRef.instance;\n    }\n\n    getElement(): HTMLElement {\n        return this.elementRef && this.elementRef.nativeElement;\n    }\n\n    onClickMask($event: MouseEvent) {\n        if (\n            this.mcMask &&\n            this.mcMaskClosable &&\n            ($event.target as HTMLElement).classList.contains('mc-modal-wrap') &&\n            this.mcVisible\n        ) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // tslint:disable-next-line\n    isModalType(type: ModalType): boolean {\n        return this.mcModalType === type;\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        if (event.keyCode === ESCAPE && this.container && (this.container instanceof OverlayRef)) {\n\n            this.close();\n            event.preventDefault();\n        }\n    }\n\n    // AoT\n    onClickCloseBtn() {\n        if (this.mcVisible) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // AoT\n    // tslint:disable-next-line\n    onClickOkCancel(type: 'ok' | 'cancel') {\n        const trigger = { ok: this.mcOnOk, cancel: this.mcOnCancel }[type];\n        const loadingKey = { ok: 'mcOkLoading', cancel: 'mcCancelLoading' }[type];\n\n        if (trigger instanceof EventEmitter) {\n            trigger.emit(this.getContentComponent());\n        } else if (typeof trigger === 'function') {\n\n            const result = trigger(this.getContentComponent());\n            // Users can return \"false\" to prevent closing by default\n            const caseClose = (doClose: boolean | void | {}) => (doClose !== false) && this.close(doClose as R);\n\n            if (isPromise(result)) {\n                this[loadingKey] = true;\n                const handleThen = (doClose) => {\n                    this[loadingKey] = false;\n                    caseClose(doClose);\n                };\n                (result as Promise<void>).then(handleThen).catch(handleThen);\n            } else {\n                caseClose(result);\n            }\n        }\n    }\n\n    // AoT\n    isNonEmptyString(value: {}): boolean {\n        return typeof value === 'string' && value !== '';\n    }\n\n    // AoT\n    isTemplateRef(value: {}): boolean {\n        return value instanceof TemplateRef;\n    }\n\n    // AoT\n    isComponent(value: {}): boolean {\n        return value instanceof Type;\n    }\n\n    // AoT\n    isModalButtons(value: {}): boolean {\n        return Array.isArray(value) && value.length > 0;\n    }\n\n    // Do rest things when visible state changed\n    private handleVisibleStateChange(visible: boolean, animation: boolean = true, closeResult?: R): Promise<any> {\n        // Hide scrollbar at the first time when shown up\n        if (visible) {\n            this.changeBodyOverflow(1);\n        }\n\n        return Promise\n            .resolve(animation && this.animateTo(visible))\n            // Emit open/close event after animations over\n            .then(() => {\n                if (visible) {\n                    this.mcAfterOpen.emit();\n                } else {\n                    this.mcAfterClose.emit(closeResult);\n                    // Show/hide scrollbar when animation is over\n                    this.changeBodyOverflow();\n                }\n            });\n    }\n\n    // Lookup a button's property, if the prop is a function, call & then return the result, otherwise, return itself.\n    // AoT\n    // tslint:disable-next-line\n    getButtonCallableProp(options: IModalButtonOptions<T>, prop: string): {} {\n        const value = options[prop];\n        const args: any[] = [];\n        if (this.contentComponentRef) {\n            args.push(this.contentComponentRef.instance);\n        }\n\n        return typeof value === 'function' ? value.apply(options, args) : value;\n    }\n\n    // On mcFooter's modal button click\n    // AoT\n    // tslint:disable-next-line\n    onButtonClick(button: IModalButtonOptions<T>) {\n        // Call onClick directly\n        const result = this.getButtonCallableProp(button, 'onClick');\n        if (isPromise(result)) {\n            button.loading = true;\n            (result as Promise<{}>).then(() => button.loading = false).catch(() => button.loading = false);\n        }\n    }\n\n    // Change mcVisible from inside\n    private changeVisibleFromInside(visible: boolean, closeResult?: R): Promise<void> {\n        if (this.mcVisible !== visible) {\n            // Change mcVisible value immediately\n            this.mcVisible = visible;\n            this.mcVisibleChange.emit(visible);\n\n            return this.handleVisibleStateChange(visible, true, closeResult);\n        }\n\n        return Promise.resolve();\n    }\n\n    private changeAnimationState(state: AnimationState) {\n        this.animationState = state;\n        if (state) {\n            this.maskAnimationClassMap = {\n                [`fade-${state}`]: true,\n                [`fade-${state}-active`]: true\n            };\n            this.modalAnimationClassMap = {\n                [`zoom-${state}`]: true,\n                [`zoom-${state}-active`]: true\n            };\n        } else {\n            // @ts-ignore\n            this.maskAnimationClassMap = this.modalAnimationClassMap = null;\n        }\n\n        if (this.contentComponentRef) {\n            this.contentComponentRef.changeDetectorRef.markForCheck();\n        } else {\n            this.changeDetector.markForCheck();\n        }\n    }\n\n    private animateTo(isVisible: boolean): Promise<any> {\n        // Figure out the lastest click position when shows up\n        if (isVisible) {\n            // [NOTE] Using timeout due to the document.click event is fired later than visible change,\n            // so if not postponed to next event-loop, we can't get the lastest click position\n            window.setTimeout(() => this.updateTransformOrigin());\n        }\n\n        this.changeAnimationState(isVisible ? 'enter' : 'leave');\n\n        // Return when animation is over\n        return new Promise((resolve) => window.setTimeout(() => {\n            this.changeAnimationState(null);\n            resolve();\n        }, MODAL_ANIMATE_DURATION));\n    }\n\n    private formatModalButtons(buttons: IModalButtonOptions<T>[]): IModalButtonOptions<T>[] {\n        return buttons.map((button) => {\n\n            return {\n                ...{\n                    type: 'default',\n                    size: 'default',\n                    autoLoading: true,\n                    show: true,\n                    loading: false,\n                    disabled: false\n                },\n                ...button\n            };\n        });\n    }\n\n    /**\n     * Create a component dynamically but not attach to any View\n     * (this action will be executed when bodyContainer is ready)\n     * @param component Component class\n     */\n    private createDynamicComponent(component: Type<T>) {\n        const factory = this.cfr.resolveComponentFactory(component);\n        const childInjector = Injector.create({\n            providers: [{provide: McModalRef, useValue: this}],\n            parent: this.viewContainer.parentInjector\n        });\n\n        this.contentComponentRef = factory.create(childInjector);\n\n        if (this.mcComponentParams) {\n            Object.assign(this.contentComponentRef.instance, this.mcComponentParams);\n        }\n\n        // Do the first change detection immediately\n        // (or we do detection at ngAfterViewInit, multi-changes error will be thrown)\n        this.contentComponentRef.changeDetectorRef.detectChanges();\n\n\n    }\n\n    // Update transform-origin to the last click position on document\n    private updateTransformOrigin() {\n        const modalElement = this.modalContainer.nativeElement as HTMLElement;\n        const lastPosition = ModalUtil.getLastClickPosition();\n\n        if (lastPosition) {\n            // tslint:disable-next-line\n            this.transformOrigin = `${lastPosition.x - modalElement.offsetLeft}px ${lastPosition.y - modalElement.offsetTop}px 0px`;\n        }\n    }\n\n    /**\n     * Take care of the body's overflow to decide the existense of scrollbar\n     * @param plusNum The number that the openModals.length will increase soon\n     */\n    private changeBodyOverflow(plusNum: number = 0) {\n        const openModals = this.modalControl.openModals;\n\n        if (openModals.length + plusNum > 0) {\n            // tslint:disable-next-line\n            this.renderer.setStyle(this.document.body, 'padding-right', `${this.mcMeasureScrollbarService.scrollBarWidth}px`);\n            this.renderer.setStyle(this.document.body, 'overflow', 'hidden');\n        } else {\n            this.renderer.removeStyle(this.document.body, 'padding-right');\n            this.renderer.removeStyle(this.document.body, 'overflow');\n        }\n    }\n}\n\n////////////\n\nfunction isPromise(obj: {} | void): boolean {\n    // tslint:disable-next-line\n    return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof (obj as Promise<{}>).then === 'function' && typeof (obj as Promise<{}>).catch === 'function';\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({\n    name: 'toCssUnit'\n})\nexport class CssUnitPipe implements PipeTransform {\n    transform(value: number | string, defaultUnit: string = 'px'): string {\n        const formatted = +value;\n\n        return isNaN(formatted) ? `${value}` : `${formatted}${defaultUnit}`;\n    }\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren, Directive,\n    ElementRef,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { CanColor, CanColorCtor, mixinColor } from '@ptsecurity/mosaic/core';\nimport { EMPTY, merge } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\n\nimport { McCleaner } from './cleaner';\nimport { McFormFieldControl } from './form-field-control';\nimport { getMcFormFieldMissingControlError } from './form-field-errors';\nimport { McFormFieldNumberControl } from './form-field-number-control';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\nlet nextUniqueId = 0;\n\nexport class McFormFieldBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McFormFieldMixinBase: CanColorCtor & typeof McFormFieldBase = mixinColor(McFormFieldBase);\n\n@Component({\n    selector: 'mc-form-field',\n    exportAs: 'mcFormField',\n    templateUrl: 'form-field.html',\n    // McInput is a directive and can't have styles, so we need to include its styles here.\n    // The McInput styles are fairly minimal so it shouldn't be a big deal for people who\n    // aren't using McInput.\n    styleUrls: [\n        'form-field.css',\n        '../input/input.css',\n        '../textarea/textarea.css'\n    ],\n    host: {\n        class: 'mc-form-field',\n        '[class.mc-form-field_invalid]': '_control.errorState',\n        '[class.mc-disabled]': '_control.disabled',\n        '[class.mc-form-field_has-prefix]': 'hasPrefix',\n        '[class.mc-form-field_has-suffix]': 'hasSuffix',\n        '[class.mc-form-field_has-cleaner]': 'canShowCleaner',\n        '[class.mc-form-field_has-stepper]': 'canShowStepper',\n        '[class.mc-focused]': '_control.focused',\n        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n        '[class.ng-touched]': '_shouldForward(\"touched\")',\n        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n        '[class.ng-valid]': '_shouldForward(\"valid\")',\n        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n        '[class.ng-pending]': '_shouldForward(\"pending\")',\n        '(keydown)': 'onKeyDown($event)',\n        '(mouseenter)': 'onHoverChanged(true)',\n        '(mouseleave)': 'onHoverChanged(false)'\n    },\n    inputs: ['color'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class McFormField extends _McFormFieldMixinBase implements\n    AfterContentInit, AfterContentChecked, AfterViewInit, CanColor {\n\n    @ContentChild(McFormFieldControl) _control: McFormFieldControl<any>;\n    @ContentChild(McFormFieldNumberControl) _numberControl: McFormFieldNumberControl<any>;\n    @ContentChild(McStepper) _stepper: McStepper;\n\n    @ContentChildren(McHint) _hint: QueryList<McHint>;\n    @ContentChildren(McSuffix) _suffix: QueryList<McSuffix>;\n    @ContentChildren(McPrefix) _prefix: QueryList<McPrefix>;\n    @ContentChildren(McCleaner) _cleaner: QueryList<McCleaner>;\n\n    // Unique id for the internal form field label.\n    _labelId = `mc-form-field-label-${nextUniqueId++}`;\n\n    hovered: boolean = false;\n\n    constructor(public _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {\n        super(_elementRef);\n    }\n\n    ngAfterContentInit() {\n        this._validateControlChild();\n\n        if (this._control.controlType) {\n            this._elementRef.nativeElement.classList\n                .add(`mc-form-field-type-${this._control.controlType}`);\n\n            if (this._numberControl && this.hasStepper) {\n                this._stepper.stepUp.subscribe(this.onStepUp.bind(this));\n                this._stepper.stepDown.subscribe(this.onStepDown.bind(this));\n            }\n        }\n\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        this._control.stateChanges.pipe(startWith())\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n\n        if (this._numberControl) {\n            this._numberControl.stateChanges.pipe(startWith())\n                .subscribe(() => {\n                    this._changeDetectorRef.markForCheck();\n                });\n        }\n\n        // Run change detection if the value changes.\n        const valueChanges = this._control.ngControl && this._control.ngControl.valueChanges || EMPTY;\n\n        merge(valueChanges)\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n\n    ngAfterContentChecked() {\n        this._validateControlChild();\n    }\n\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._changeDetectorRef.detectChanges();\n    }\n\n    clearValue($event) {\n        $event.stopPropagation();\n\n        if (this._control && this._control.ngControl) {\n            this._control.ngControl.reset();\n        }\n    }\n\n    onContainerClick($event) {\n        if (this._control.onContainerClick) {\n            this._control.onContainerClick($event);\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === ESCAPE && this._control.focused && this.hasCleaner) {\n            if (this._control && this._control.ngControl) {\n                this._control.ngControl.reset();\n            }\n\n            event.preventDefault();\n        }\n    }\n\n    onHoverChanged(isHovered: boolean) {\n        if (isHovered !== this.hovered) {\n            this.hovered  = isHovered;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    onStepUp() {\n        if (this._numberControl) {\n            this._numberControl.stepUp(this._numberControl.step);\n        }\n    }\n\n    onStepDown() {\n        if (this._numberControl) {\n            this._numberControl.stepDown(this._numberControl.step);\n        }\n    }\n\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop: keyof NgControl): boolean {\n        const ngControl = this._control ? this._control.ngControl : null;\n\n        return ngControl && ngControl[prop];\n    }\n\n    /** Throws an error if the form field's control is missing. */\n    protected _validateControlChild() {\n        if (!this._control) {\n            throw getMcFormFieldMissingControlError();\n        }\n    }\n\n    get hasHint(): boolean {\n        return this._hint && this._hint.length > 0;\n    }\n\n    get hasSuffix(): boolean {\n        return this._suffix && this._suffix.length > 0;\n    }\n\n    get hasPrefix(): boolean {\n        return this._prefix && this._prefix.length > 0;\n    }\n\n    get hasCleaner(): boolean {\n        return this._cleaner && this._cleaner.length > 0;\n    }\n\n    get hasStepper(): boolean {\n        return !!this._stepper;\n    }\n\n    get canShowCleaner(): boolean {\n        return this.hasCleaner &&\n            this._control &&\n            this._control.ngControl\n                ? this._control.ngControl.value && !this._control.disabled\n                : false;\n    }\n\n\n    get disabled(): boolean {\n        return this._control && this._control.disabled;\n    }\n\n    get canShowStepper(): boolean {\n        return this._numberControl &&\n            !this.disabled &&\n            (\n                this._numberControl.focused ||\n                this.hovered\n            );\n    }\n}\n\n@Directive({\n    selector: 'mc-form-field[mcFormFieldWithoutBorders]',\n    exportAs: 'mcFormFieldWithoutBorders',\n    host: { class: 'mc-form-field_without-borders' }\n})\nexport class McFormFieldWithoutBorders {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCleaner } from './cleaner';\nimport { McFormField, McFormFieldWithoutBorders } from './form-field';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\n@NgModule({\n    declarations: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ],\n    imports: [CommonModule, McIconModule],\n    exports: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ]\n})\nexport class McFormFieldModule {\n}\n","import { InjectionToken } from '@angular/core';\n\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n","function sanitizeNumber(value: number): number | null {\n    return !isFinite(value) || isNaN(value)\n        ? null\n        : value;\n}\n\nfunction getPrecision(value: number): number {\n    const arr = value.toString().split('.');\n\n    return arr.length === 1\n        ? 1\n        // tslint:disable-next-line:no-magic-numbers\n        :  Math.pow(10, arr[1].length);\n}\n\nfunction add(value1: number, value2: number) {\n    const precision = Math.max(getPrecision(value1), getPrecision(value2));\n\n    const res = (value1 * precision + value2 * precision) / precision;\n\n    return sanitizeNumber(res);\n}\n\nexport const stepUp = (value: number | null,\n                       max: number,\n                       min: number,\n                       step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(min, step);\n\n        return res === null ? null : Math.min(res, max);\n    }\n\n    res = add(value, step);\n\n    return res === null ? null : Math.max(Math.min(res, max), min);\n};\n\nexport const stepDown = (value: number | null,\n                         max: number,\n                         min: number,\n                         step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(max, -step);\n\n        return res === null ? null : Math.max(res, min);\n    }\n\n    res = add(value, -step);\n\n    return res === null ? null : Math.min(Math.max(res, min), max);\n};\n","import {\n    Attribute,\n    Directive, DoCheck, ElementRef, Inject, Input, OnChanges,\n    OnDestroy, Optional, Self\n} from '@angular/core';\nimport {\n    FormGroupDirective,\n    NgControl,\n    NgForm, NgModel\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    END, C, V, X, A, DELETE, BACKSPACE, TAB, ENTER,\n    ESCAPE, ZERO, NINE, NUMPAD_ZERO, NUMPAD_NINE, NUMPAD_MINUS, DASH,\n    FF_MINUS, LEFT_ARROW, RIGHT_ARROW, HOME, UP_ARROW, DOWN_ARROW, F1, F12\n} from '@ptsecurity/cdk/keycodes';\nimport { getSupportedInputTypes, Platform } from '@ptsecurity/cdk/platform';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl, McFormFieldNumberControl } from '@ptsecurity/mosaic/form-field';\nimport { Subject } from 'rxjs';\n\nimport { getMcInputUnsupportedTypeError } from './input-errors';\nimport { MC_INPUT_VALUE_ACCESSOR } from './input-value-accessor';\nimport { stepDown, stepUp } from './stepperUtils';\n\n\nconst MC_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n\nexport const BIG_STEP = 10;\nexport const SMALL_STEP = 1;\n\nlet nextUniqueId = 0;\n\nexport class McInputBase {\n    constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n                public _parentForm: NgForm,\n                public _parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\nexport const _McInputMixinBase: CanUpdateErrorStateCtor & typeof McInputBase = mixinErrorState(McInputBase);\n\n\n@Directive({\n    selector: `input[mcInput][type=\"number\"]`,\n    exportAs: 'mcNumericalInput',\n    providers: [NgModel, { provide: McFormFieldNumberControl, useExisting: McNumberInput }],\n    host: {\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McNumberInput implements McFormFieldNumberControl<any> {\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    bigStep: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    step: number;\n\n    @Input()\n    min: number;\n\n    @Input()\n    max: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    value: any;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    private readonly _host: HTMLInputElement;\n\n    constructor(\n        private _platform: Platform ,\n        private _elementRef: ElementRef,\n        private _model: NgModel,\n        @Attribute('step') step: string,\n        @Attribute('big-step') bigStep: string,\n        @Attribute('min') min: string,\n        @Attribute('max') max: string\n    ) {\n        this.step = this.isDigit(step) ? parseFloat(step) : SMALL_STEP;\n        this.bigStep = this.isDigit(bigStep) ? parseFloat(bigStep) : BIG_STEP;\n        this.min = this.isDigit(min) ? parseFloat(min) : -Infinity;\n        this.max = this.isDigit(max) ? parseFloat(max) : Infinity;\n\n        this._host = this._elementRef.nativeElement;\n\n        const self = this;\n\n        if ('valueAsNumber' in this._host) {\n            Object.defineProperty(Object.getPrototypeOf(this._host), 'valueAsNumber', {\n                // tslint:disable-next-line:no-reserved-keywords\n                get() {\n                    const res = parseFloat(self.normalizeSplitter(this.value));\n\n                    return isNaN(res) ? null : res;\n                }\n            });\n        }\n    }\n\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const keyCode = event.keyCode;\n\n        const isCtrlA = (e) => e.keyCode === A && (e.ctrlKey || e.metaKey);\n        const isCtrlC = (e) => e.keyCode === C && (e.ctrlKey || e.metaKey);\n        const isCtrlV = (e) => e.keyCode === V && (e.ctrlKey || e.metaKey);\n        const isCtrlX = (e) => e.keyCode === X && (e.ctrlKey || e.metaKey);\n\n        const isFKey = (e) => e.keyCode >= F1 && e.keyCode <= F12;\n\n        const isNumber = (e) => (e.keyCode >= ZERO && e.keyCode <= NINE) ||\n            (e.keyCode >= NUMPAD_ZERO && e.keyCode <= NUMPAD_NINE);\n\n        const minuses = [NUMPAD_MINUS, DASH, FF_MINUS];\n        const serviceKeys = [DELETE, BACKSPACE, TAB, ESCAPE, ENTER];\n        const arrows = [LEFT_ARROW, RIGHT_ARROW];\n        const allowedKeys =  [HOME, END].concat(arrows).concat(serviceKeys).concat(minuses);\n\n        const isIEPeriod = (e) => e.key === '.' || e.key === 'Decimal';\n        const isNotIEPeriod = (e) => e.key === '.' || e.key === ',';\n\n        // Decimal is for IE\n        const isPeriod = (e) => this._platform.EDGE || this._platform.TRIDENT\n            ? isIEPeriod(e)\n            : isNotIEPeriod(e);\n\n        if (allowedKeys.indexOf(keyCode) !== -1 ||\n            isCtrlA(event) ||\n            isCtrlC(event) ||\n            isCtrlV(event) ||\n            isCtrlX(event) ||\n            isFKey(event) ||\n            isPeriod(event)\n        ) {\n            // let it happen, don't do anything\n            return;\n        }\n        // Ensure that it is not a number and stop the keypress\n        if (event.shiftKey || !isNumber(event)) {\n            event.preventDefault();\n\n            // process steps\n            const step = event.shiftKey ? this.bigStep : this.step;\n\n            if (keyCode === UP_ARROW) {\n                this.stepUp(step);\n            }\n\n            if (keyCode === DOWN_ARROW) {\n                this.stepDown(step);\n            }\n        }\n    }\n\n    onPaste(event) {\n        let value = event.clipboardData.getData('text');\n        value = this.normalizeSplitter(value);\n\n        if (!this.isDigit(value)) {\n            event.preventDefault();\n        }\n    }\n\n    stepUp(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepUp(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    stepDown(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepDown(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    private normalizeSplitter(value: string): string {\n        return value ? value.replace(/,/g, '.') : value;\n    }\n\n    private isDigit(value: string): boolean {\n        return this.isFloat(value) || this.isInt(value);\n    }\n\n    private isFloat(value: string): boolean {\n        return /^-?\\d+\\.\\d+$/.test(value);\n    }\n\n    private isInt(value: string): boolean {\n        return /^-?\\d+$/.test(value);\n    }\n}\n\n@Directive({\n    selector: `input[mcInput]`,\n    exportAs: 'mcInput',\n    host: {\n        class: 'mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(input)': '_onInput()'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McInput }]\n})\nexport class McInput extends _McInputMixinBase implements McFormFieldControl<any>, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-input';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    // tslint:disable no-reserved-keywords\n    /** Input type of the element. */\n    @Input()\n    get type(): string {\n        return this._type;\n    }\n\n    set type(value: string) {\n        this._type = value || 'text';\n        this._validateType();\n\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    // tslint:enable no-reserved-keywords\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this._inputValueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected _uid = `mc-input-${nextUniqueId++}`;\n    protected _previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n    protected _type = 'text';\n    protected _neverEmptyInputTypes = [\n        'date',\n        'datetime',\n        'datetime-local',\n        'month',\n        'time',\n        'week'\n    ].filter((t) => getSupportedInputTypes().has(t));\n\n    private _inputValueAccessor: { value: any };\n\n    constructor(protected _elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || this._elementRef.nativeElement;\n\n        this._previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n\n    /** Focuses the input. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the input changes. */\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    protected _dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Make sure the input is a supported type. */\n    protected _validateType() {\n        if (MC_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMcInputUnsupportedTypeError(this._type);\n        }\n    }\n\n    /** Checks whether the input type is one of the types that are never empty. */\n    protected _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    protected _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this._elementRef.nativeElement as HTMLInputElement).validity;\n\n        return validity && validity.badInput;\n    }\n}\n\n@Directive({\n    selector: 'input[mcInputMonospace]',\n    exportAs: 'McInputMonospace',\n    host: { class: 'mc-input_monospace' }\n})\nexport class McInputMono {\n}\n","import { Directive, forwardRef, Input, OnChanges, Provider, SimpleChanges } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, ValidatorFn, Validators } from '@angular/forms';\n\n\nexport const MIN_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MinValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[min][formControlName],[min][formControl],[min][ngModel]',\n    providers: [MIN_VALIDATOR],\n    host: {'[attr.min]': 'min ? min : null'}\n})\nexport class MinValidator implements Validator, OnChanges {\n\n    @Input() min: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('min' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.min(parseInt(this.min, 10)); }\n}\n\n\nexport const MAX_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MaxValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[max][formControlName],[max][formControl],[max][ngModel]',\n    providers: [MAX_VALIDATOR],\n    host: {\n        '[attr.max]': 'max ? max : null'\n    }\n})\nexport class MaxValidator implements Validator,\n    OnChanges {\n\n    @Input() max: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('max' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.max(parseInt(this.max, 10)); }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McInput, McInputMono, McNumberInput } from './input';\nimport { MaxValidator, MinValidator } from './input-number-validators';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator],\n    declarations: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator ]\n})\nexport class McInputModule {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-content',\n    preserveWhitespaces: false,\n    templateUrl: './content.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-content]': 'true'\n    }\n})\nexport class McContentComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-footer',\n    preserveWhitespaces: false,\n    templateUrl: './footer.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-footer]': 'true'\n    }\n})\nexport class McFooterComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector : 'mc-header',\n    preserveWhitespaces: false,\n    templateUrl: './header.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-header]': 'true'\n    }\n})\nexport class McHeaderComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-layout',\n    preserveWhitespaces: false,\n    styleUrls: ['layout.css'],\n    templateUrl: './layout.component.html',\n    host: {\n        '[class.mc-layout]': 'true',\n        '[class.mc-layout-has-sidebar]': 'hasSidebar'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McLayoutComponent {\n    hasSidebar = false;\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Host,\n    Input,\n    OnInit,\n    Optional,\n    Output\n} from '@angular/core';\nimport { toBoolean } from '@ptsecurity/mosaic/core';\n\nimport { McLayoutComponent } from './layout.component';\n\n\n@Component({\n    selector: 'mc-sidebar',\n    preserveWhitespaces: false,\n    templateUrl: './sidebar.component.html',\n    host: {\n        '[class.mc-layout-sidebar]': 'true',\n        '[class.mc-layout-sidebar-collapsed]': 'mcCollapsed',\n        '[style.flex]': 'mcFlex',\n        '[style.max-width.px]': 'mcWidth',\n        '[style.min-width.px]': 'mcWidth',\n        '[style.width.px]': 'mcWidth'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSidebarComponent implements OnInit {\n\n    @Input() _mcWidth = 200;\n    @Input() mcCollapsedWidth = 80;\n\n    @Input()\n    set mcCollapsible(value: boolean) {\n        this.collapsible = toBoolean(value);\n    }\n\n    get mcCollapsible(): boolean {\n        return this.collapsible;\n    }\n\n    @Input()\n    set mcCollapsed(value: boolean) {\n        this.collapsed = toBoolean(value);\n    }\n\n    get mcCollapsed(): boolean {\n        return this.collapsed;\n    }\n\n    // tslint:disable-next-line\n    @Output() mcCollapsedChange = new EventEmitter();\n\n    private collapsed = false;\n    private collapsible = false;\n\n    get mcFlex(): string {\n        if (this.mcCollapsed) {\n            return `0 0 ${this.mcCollapsedWidth}px`;\n        } else {\n            return `0 0 ${this.mcWidth}px`;\n        }\n    }\n\n    get mcWidth(): number {\n        if (this.mcCollapsed) {\n            return this.mcCollapsedWidth;\n        } else {\n            return this._mcWidth;\n        }\n    }\n\n    constructor(\n        @Optional() @Host() private mcLayoutComponent: McLayoutComponent) {\n    }\n\n    ngOnInit() {\n        if (this.mcLayoutComponent) {\n            this.mcLayoutComponent.hasSidebar = true;\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McContentComponent } from './content.component';\nimport { McFooterComponent } from './footer.component';\nimport { McHeaderComponent } from './header.component';\nimport { McLayoutComponent } from './layout.component';\nimport { McSidebarComponent } from './sidebar.component';\n\n\n@NgModule({\n    imports: [ CommonModule ],\n    exports: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ],\n    declarations: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ]\n})\nexport class McLayoutModule {\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    OnDestroy,\n    QueryList,\n    ViewEncapsulation,\n    ContentChildren\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\n\nimport { mixinColor, mixinDisabled, CanColor, CanDisable, CanDisableCtor, CanColorCtor } from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\n@Directive({\n    selector: 'button[mc-button], a[mc-button]',\n    host: { class: 'mc-button' }\n})\nexport class McButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-icon-button], a[mc-icon-button]',\n    queries: {\n        contentChildren: new ContentChildren(McIcon)\n    },\n    host: { class: 'mc-icon-button' }\n})\nexport class McIconButtonCSSStyler {\n    nativeElement: Element;\n\n    contentChildren: QueryList<McIcon>;\n\n    constructor(elementRef: ElementRef) {\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const twoIcons = 2;\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-icon-button_left');\n                }\n\n                if (iconElement.previousSibling) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-icon-button_right');\n                }\n            }\n        } else if (icons.length === twoIcons) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n\n\nexport class McButtonBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McButtonMixinBase:\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McButtonBase =\n        mixinColor(mixinDisabled(McButtonBase));\n\n\n@Component({\n    selector: `\n        button[mc-button],\n        button[mc-xs-button],\n        button[mc-sm-button],\n        button[mc-lg-button],\n        button[mc-xl-button]\n    `,\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[disabled]': 'disabled || null'\n    }\n})\nexport class McButton extends _McButtonMixinBase implements OnDestroy, CanDisable, CanColor {\n    constructor(elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        super(elementRef);\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n\n\n@Component({\n    selector: 'a[mc-button], a[mc-xs-button], a[mc-sm-button], a[mc-lg-button], a[mc-xl-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_haltDisabledEvents($event)'\n    }\n})\nexport class McAnchor extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n\n\n@Component({\n    selector: 'button[mc-icon-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null'\n    }\n})\nexport class McIconButton extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McButton,\n    McAnchor,\n    McIconButton,\n    McButtonCSSStyler,\n    McIconButtonCSSStyler\n} from './button.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McIconButtonCSSStyler\n    ],\n    declarations: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McIconButtonCSSStyler\n    ]\n})\nexport class McButtonModule {}\n","import {\n    Output,\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef, Input,\n    OnDestroy, EventEmitter,\n    ViewEncapsulation, HostBinding\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n@Component({\n    selector: 'mc-card',\n    templateUrl: './card.component.html',\n    styleUrls: ['./card.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color'],\n    host: {\n        class: 'mc-card',\n        '[class.mc-card_readonly]': 'readonly',\n        '[class.mc-card_selected]': 'selected',\n        '(keydown)': 'onKeyDown($event)',\n        '(click)': 'onClick($event)'\n    }\n})\nexport class McCard implements OnDestroy {\n    get tabIndex(): number | null {\n        return this.readonly ? null : this._tabIndex;\n    }\n\n    @HostBinding('attr.tabIndex')\n    @Input()\n    set tabIndex(value: number | null) {\n        this._tabIndex = value;\n    }\n\n    @Input()\n    readonly = false;\n\n    @Input()\n    selected = false;\n\n    @Output()\n    selectedChange = new EventEmitter<boolean>();\n\n    private _tabIndex: number | null = 0;\n\n    constructor(private _elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        this._focusMonitor.monitor(this._elementRef.nativeElement, false);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this.hostElement.focus();\n    }\n\n    onClick($event: MouseEvent) {\n        if (!this.readonly) {\n            $event.stopPropagation();\n\n            this.selectedChange.emit(!this.selected);\n        }\n    }\n\n    private get hostElement() {\n        return this._elementRef.nativeElement;\n    }\n\n    onKeyDown($event: KeyboardEvent) {\n        switch ($event.keyCode) {\n            case SPACE:\n                if (!this.readonly) {\n                    $event.preventDefault();\n                    this.selectedChange.emit(!this.selected);\n                }\n                break;\n            default:\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McCard\n} from './card.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [McCard],\n    declarations: [McCard]\n})\nexport class McCardModule {}\n","import { InjectionToken } from '@angular/core';\n\n\n/**\n * Checkbox click action when user click on input element.\n * noop: Do not toggle checked or indeterminate.\n * check: Only toggle checked status, ignore indeterminate.\n * check-indeterminate: Toggle checked status, set indeterminate to false. Default behavior.\n * undefined: Same as `check-indeterminate`.\n */\nexport type McCheckboxClickAction = 'noop' | 'check' | 'check-indeterminate' | undefined;\n\n/**\n * Injection token that can be used to specify the checkbox click behavior.\n */\nexport const MC_CHECKBOX_CLICK_ACTION =\n    new InjectionToken<McCheckboxClickAction>('mc-checkbox-click-action');\n","import {\n    AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_CHECKBOX_CLICK_ACTION, McCheckboxClickAction } from './checkbox-config';\n\n\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n\n/**\n * Provider Expression that allows mc-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nexport const MC_CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McCheckbox),\n    multi: true\n};\n\n/**\n * Represents the different states that require custom transitions between them.\n * @docs-private\n */\nexport enum TransitionCheckState {\n    /** The initial state of the component before any user interaction. */\n    Init,\n    /** The state representing the component when it's becoming checked. */\n    Checked,\n    /** The state representing the component when it's becoming unchecked. */\n    Unchecked,\n    /** The state representing the component when it's becoming indeterminate. */\n    Indeterminate\n}\n\n/** Change event object emitted by McCheckbox. */\nexport class McCheckboxChange {\n    /** The source McCheckbox of the event. */\n    source: McCheckbox;\n    /** The new `checked` value of the checkbox. */\n    checked: boolean;\n}\n\n// Boilerplate for applying mixins to McCheckbox.\n/** @docs-private */\nexport class McCheckboxBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McCheckboxMixinBase:\n    HasTabIndexCtor &\n    CanColorCtor &\n    CanDisableCtor &\n    typeof McCheckboxBase =\n        mixinTabIndex(mixinColor(mixinDisabled(McCheckboxBase)));\n\n\n/**\n * A mosaic checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A McCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n */\n@Component({\n    selector: 'mc-checkbox',\n    templateUrl: 'checkbox.html',\n    styleUrls: ['checkbox.css'],\n    exportAs: 'mcCheckbox',\n    host: {\n        class: 'mc-checkbox',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-indeterminate]': 'indeterminate',\n        '[class.mc-checked]': 'checked',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-checkbox-label-before]': 'labelPosition == \"before\"'\n    },\n    providers: [MC_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCheckbox extends _McCheckboxMixinBase implements ControlValueAccessor,\n    AfterViewInit, OnDestroy, CanColor, CanDisable, HasTabIndex {\n\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\n     * take precedence so this may be omitted.\n     */\n    @Input('aria-label') ariaLabel: string = '';\n\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     */\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-checkbox-${++nextUniqueId}`;\n\n    /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n    @Input() id: string = this._uniqueId;\n\n    /** Returns the unique id for the visual hidden input. */\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    /** Whether the checkbox is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    private _required: boolean;\n\n    /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n    @Input() labelPosition: 'before' | 'after' = 'after';\n\n    /** Name value will be applied to the input element if present */\n    @Input() name: string | null = null;\n\n    /** Event emitted when the checkbox's `checked` value changes. */\n    @Output() readonly change: EventEmitter<McCheckboxChange> =\n        new EventEmitter<McCheckboxChange>();\n\n    /** Event emitted when the checkbox's `indeterminate` value changes. */\n    @Output() readonly indeterminateChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** The value attribute of the native input element */\n    @Input() value: string;\n\n    /** The native `<input type=\"checkbox\">` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n     * @docs-private\n     */\n    _onTouched: () => any = () => {\n    }\n\n    private _currentAnimationClass: string = '';\n\n    private _currentCheckState: TransitionCheckState = TransitionCheckState.Init;\n\n    private _controlValueAccessorChangeFn: (value: any) => void = () => {\n    }\n\n    constructor(elementRef: ElementRef,\n                private _changeDetectorRef: ChangeDetectorRef,\n                private _focusMonitor: FocusMonitor,\n                @Attribute('tabindex') tabIndex: string,\n                @Optional() @Inject(MC_CHECKBOX_CLICK_ACTION)\n                private _clickAction: McCheckboxClickAction) {\n        super(elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._inputElement.nativeElement)\n            .subscribe((focusOrigin) => this._onInputFocusChange(focusOrigin));\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._inputElement.nativeElement);\n    }\n\n    /**\n     * Whether the checkbox is checked.\n     */\n    @Input()\n    get checked(): boolean {\n        return this._checked;\n    }\n\n    set checked(value: boolean) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     */\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value != this.disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    @Input()\n    get indeterminate(): boolean {\n        return this._indeterminate;\n    }\n\n    set indeterminate(value: boolean) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = value;\n\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(TransitionCheckState.Indeterminate);\n            } else {\n                this._transitionCheckState(\n                    this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n    }\n\n    private _indeterminate: boolean = false;\n\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // This method is getting called whenever the label of the checkbox changes.\n        // Since the checkbox uses the OnPush strategy we need to notify it about the change\n        // that has been recognized by the cdkObserveContent directive.\n        this._changeDetectorRef.markForCheck();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: any) {\n        this._onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    _getAriaChecked(): 'true' | 'false' | 'mixed' {\n        return this.checked ? 'true' : (this.indeterminate ? 'mixed' : 'false');\n    }\n\n    private _transitionCheckState(newState: TransitionCheckState) {\n        const oldState = this._currentCheckState;\n        const element: HTMLElement = this._elementRef.nativeElement;\n\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n\n        this._currentCheckState = newState;\n\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n        }\n    }\n\n    private _emitChangeEvent() {\n        const event = new McCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    }\n\n    /** Function is called whenever the focus changes for the input element. */\n    private _onInputFocusChange(focusOrigin: FocusOrigin) {\n        if (focusOrigin) {\n            this._onTouched();\n        }\n    }\n\n    /** Toggles the `checked` state of the checkbox. */\n    toggle(): void {\n        this.checked = !this.checked;\n    }\n\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param event\n     */\n    _onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && this._clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && this._clickAction !== 'check') {\n\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n\n            this.toggle();\n            this._transitionCheckState(\n                this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        } else if (!this.disabled && this._clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mc-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n\n    /** Focuses the checkbox. */\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _onInteractionEvent(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n}\n","import {\n    Directive,\n    forwardRef,\n    Provider\n} from '@angular/core';\nimport {\n    CheckboxRequiredValidator,\n    NG_VALIDATORS\n} from '@angular/forms';\n\n\nexport const MC_CHECKBOX_REQUIRED_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => McCheckboxRequiredValidator),\n    multi: true\n};\n\n/**\n * Validator for Mosaic checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mc-checkbox`.\n */\n@Directive({\n    selector: `mc-checkbox[required][formControlName],\n             mc-checkbox[required][formControl], mc-checkbox[required][ngModel]`,\n    providers: [MC_CHECKBOX_REQUIRED_VALIDATOR],\n    host: { '[attr.required]': 'required ? \"\" : null' }\n})\nexport class McCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McCheckbox } from './checkbox';\nimport { McCheckboxRequiredValidator } from './checkbox-required-validator';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McCheckbox, McCheckboxRequiredValidator],\n    declarations: [McCheckbox, McCheckboxRequiredValidator]\n})\nexport class McCheckboxModule {\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\n\n@Component({\n    selector: 'mc-divider',\n    host: {\n        class: 'mc-divider',\n        role: 'separator',\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n        '[class.mc-divider-vertical]': 'vertical',\n        '[class.mc-divider-inset]': 'inset'\n    },\n    template: '',\n    styleUrls: ['divider.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false\n})\nexport class McDivider {\n    // Whether the divider is vertically aligned.\n    @Input()\n    get vertical(): boolean {\n        return this._vertical;\n    }\n\n    set vertical(value: boolean) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n\n    private _vertical: boolean = false;\n\n    // Whether the divider is an inset divider.\n    @Input()\n    get inset(): boolean {\n        return this._inset;\n    }\n\n    set inset(value: boolean) {\n        this._inset = coerceBooleanProperty(value);\n    }\n\n    private _inset: boolean = false;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McDivider } from './divider.component';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McDivider],\n    declarations: [McDivider]\n})\nexport class McDividerModule {\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    Directive,\n    TemplateRef,\n    ComponentFactoryResolver,\n    ApplicationRef,\n    Injector,\n    ViewContainerRef,\n    Inject,\n    OnDestroy\n} from '@angular/core';\nimport { TemplatePortal, DomPortalOutlet } from '@ptsecurity/cdk/portal';\nimport { Subject } from 'rxjs';\n\n\n/**\n * Dropdown content that will be rendered lazily once the dropdown is opened.\n */\n@Directive({\n    selector: 'ng-template[mcDropdownContent]'\n})\nexport class McDropdownContent implements OnDestroy {\n\n    /** Emits when the dropdown content has been attached. */\n    _attached = new Subject<void>();\n    private _portal: TemplatePortal;\n    private _outlet: DomPortalOutlet;\n\n    constructor(\n        private _template: TemplateRef<any>,\n        private _componentFactoryResolver: ComponentFactoryResolver,\n        private _appRef: ApplicationRef,\n        private _injector: Injector,\n        private _viewContainerRef: ViewContainerRef,\n        @Inject(DOCUMENT) private _document: any) {}\n\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context: any = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n\n        this.detach();\n\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'),\n                this._componentFactoryResolver, this._appRef, this._injector);\n        }\n\n        const element: HTMLElement = this._template.elementRef.nativeElement;\n\n        // Because we support opening the same dropdown from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode!.insertBefore(this._outlet.outletElement, element);\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\n","import { EventEmitter, TemplateRef, InjectionToken } from '@angular/core';\nimport { FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/**\n * Injection token used to provide the parent dropdown to dropdown-specific components.\n * @docs-private\n */\nexport const MC_DROPDOWN_PANEL = new InjectionToken<McDropdownPanel>('MC_DROPDOWN_PANEL');\n\n/**\n * Interface for a custom dropdown panel that can be used with `mcDropdownTriggerFor`.\n * @docs-private\n */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownPanel<T = any> {\n    xPosition: DropdownPositionX;\n    yPosition: DropdownPositionY;\n    overlapTrigger: boolean;\n    templateRef: TemplateRef<any>;\n    closed: EventEmitter<void | 'click' | 'keydown' | 'tab'>;\n    direction?: Direction;\n    lazyContent?: McDropdownContent;\n    backdropClass?: string;\n    hasBackdrop?: boolean;\n    focusFirstItem(origin?: FocusOrigin): void;\n    resetActiveItem(): void;\n    setPositionClasses?(x: DropdownPositionX, y: DropdownPositionY): void;\n    addItem?(item: T): void;\n    removeItem?(item: T): void;\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    Inject,\n    Optional\n} from '@angular/core';\nimport { IFocusableOption, FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\n\n\n// Boilerplate for applying mixins to McDropdownItem.\n/** @docs-private */\nexport class McDropdownItemBase {}\nexport const _McDropdownItemMixinBase: CanDisableCtor & typeof McDropdownItemBase =\n    mixinDisabled(McDropdownItemBase);\n\n/**\n * This directive is intended to be used inside an mc-dropdown tag.\n * It exists mostly to set the role attribute.\n */\n@Component({\n    selector: 'mc-dropdown-item, [mc-dropdown-item]',\n    exportAs: 'mcDropdownItem',\n    inputs: ['disabled'],\n    host: {\n        role: 'dropdown-item',\n        class: 'mc-dropdown__item',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_checkDisabled($event)'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    template: `<ng-content></ng-content>`\n})\nexport class McDropdownItem extends _McDropdownItemMixinBase\n    implements IFocusableOption, CanDisable, OnDestroy {\n\n    private _document: Document;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        @Inject(DOCUMENT) document: any,\n        private _focusMonitor: FocusMonitor,\n        @Inject(MC_DROPDOWN_PANEL) @Optional() private _parentDropdownPanel?: McDropdownPanel<McDropdownItem>) {\n        super();\n\n        if (_focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for dropdown items only when the focus was not caused by a\n            // mouse or touch interaction.\n            _focusMonitor.monitor(this._elementRef.nativeElement, false);\n        }\n\n        if (_parentDropdownPanel && _parentDropdownPanel.addItem) {\n            _parentDropdownPanel.addItem(this);\n        }\n\n        this._document = document;\n    }\n\n    /** Focuses the dropdown item. */\n    focus(origin: FocusOrigin = 'program'): void {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin);\n        } else {\n            this._getHostElement().focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n\n        if (this._parentDropdownPanel && this._parentDropdownPanel.removeItem) {\n            this._parentDropdownPanel.removeItem(this);\n        }\n    }\n\n    /** Used to set the `tabindex`. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Returns the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._elementRef.nativeElement;\n    }\n\n    /** Prevents the default element actions if it is disabled. */\n    _checkDisabled(event: Event): void {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        const element: HTMLElement = this._elementRef.nativeElement;\n        // tslint:disable-next-line:no-magic-numbers\n        const textNodeType = this._document ? this._document.TEXT_NODE : 3;\n        let output = '';\n\n        if (element.childNodes) {\n            const length = element.childNodes.length;\n\n            // Go through all the top-level text nodes and extract their text.\n            // We skip anything that's not a text node to prevent the text from\n            // being thrown off by something like an icon.\n            for (let i = 0; i < length; i++) {\n                if (element.childNodes[i].nodeType === textNodeType) {\n                    output += element.childNodes[i].textContent;\n                }\n            }\n        }\n\n        return output.trim();\n    }\n}\n","import {\n    trigger,\n    state,\n    style,\n    animate,\n    transition,\n    query,\n    group,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\n/**\n * Animations used by the mc-dropdown component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nexport const mcDropdownAnimations: {\n    readonly transformDropdown: AnimationTriggerMetadata;\n    readonly fadeInItems: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation controls the dropdown panel's entry and exit from the page.\n     *\n     * When the dropdown panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the dropdown panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformDropdown: trigger('transformDropdown', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        })),\n        transition('void => enter', group([\n            query('.mc-dropdown__content', animate('50ms linear', style({opacity: 1}))),\n            animate('50ms cubic-bezier(0, 0, 0.2, 1)', style({transform: 'scale(1)'}))\n        ])),\n        transition('* => void', animate('50ms 25ms linear', style({opacity: 0})))\n    ]),\n\n\n    /**\n     * This animation fades in the background color and content of the dropdown panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // now. Remove next time we do breaking changes.\n        state('showing', style({opacity: 1})),\n        transition('void => *', [\n            style({opacity: 0}),\n            animate('200ms 60ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\nexport const fadeInItems = mcDropdownAnimations.fadeInItems;\n\nexport const transformDropdown = mcDropdownAnimations.transformDropdown;\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    Output,\n    TemplateRef,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    OnInit\n} from '@angular/core';\nimport { FocusKeyManager, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE, DOWN_ARROW, UP_ARROW } from '@ptsecurity/cdk/keycodes';\nimport { Subject, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { mcDropdownAnimations } from './dropdown-animations';\nimport { McDropdownContent } from './dropdown-content';\nimport { throwMcDropdownInvalidPositionX, throwMcDropdownInvalidPositionY } from './dropdown-errors';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/** Default `mc-dropdown` options that can be overridden. */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownDefaultOptions {\n    /** The x-axis position of the dropdown. */\n    xPosition: DropdownPositionX;\n\n    /** The y-axis position of the dropdown. */\n    yPosition: DropdownPositionY;\n\n    /** Whether the dropdown should overlap the dropdown trigger. */\n    overlapTrigger: boolean;\n\n    /** Class to be applied to the dropdown's backdrop. */\n    backdropClass: string;\n\n    /** Whether the dropdown has a backdrop. */\n    hasBackdrop?: boolean;\n}\n\n/** Injection token to be used to override the default options for `mc-dropdown`. */\nexport const MC_DROPDOWN_DEFAULT_OPTIONS =\n    new InjectionToken<McDropdownDefaultOptions>('mc-dropdown-default-options', {\n        providedIn: 'root',\n        factory: MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY\n    });\n\n/** @docs-private */\nexport function MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY(): McDropdownDefaultOptions {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop'\n    };\n}\n\n@Component({\n    selector: 'mc-dropdown',\n    templateUrl: 'dropdown.html',\n    styleUrls: ['dropdown.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcDropdown',\n    animations: [\n        mcDropdownAnimations.transformDropdown,\n        mcDropdownAnimations.fadeInItems\n    ],\n    providers: [\n        { provide: MC_DROPDOWN_PANEL, useExisting: McDropdown }\n    ]\n})\nexport class McDropdown implements AfterContentInit, McDropdownPanel<McDropdownItem>, OnInit, OnDestroy {\n\n    /** Position of the dropdown in the X axis. */\n    @Input()\n    get xPosition(): DropdownPositionX { return this._xPosition; }\n    set xPosition(value: DropdownPositionX) {\n        if (value !== 'before' && value !== 'after') {\n            throwMcDropdownInvalidPositionX();\n        }\n\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Position of the dropdown in the Y axis. */\n    @Input()\n    get yPosition(): DropdownPositionY { return this._yPosition; }\n    set yPosition(value: DropdownPositionY) {\n        if (value !== 'above' && value !== 'below') {\n            throwMcDropdownInvalidPositionY();\n        }\n\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Whether the dropdown should overlap its trigger. */\n    @Input()\n    get overlapTrigger(): boolean { return this._overlapTrigger; }\n    set overlapTrigger(value: boolean) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n\n    /** Whether the dropdown has a backdrop. */\n    @Input()\n    get hasBackdrop(): boolean | undefined { return this._hasBackdrop; }\n    set hasBackdrop(value: boolean | undefined) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n\n    /**\n     * This method takes classes set on the host mc-dropdown element and applies them on the\n     * dropdown template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing dropdown from outside the component.\n     * @param classes list of class names\n     */\n    @Input('class')\n    set panelClass(classes: string) {\n        if (classes && classes.length) {\n            this._classList = classes.split(' ').reduce((obj: any, className: string) => {\n                obj[className] = true;\n\n                return obj;\n            }, {});\n\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n\n    /** Config object to be passed into the dropdown's ngClass */\n    _classList: {[key: string]: boolean} = {};\n\n    /** Current state of the panel animation. */\n    _panelAnimationState: 'void' | 'enter' = 'void';\n\n    /** Emits whenever an animation on the dropdown completes. */\n    _animationDone = new Subject<AnimationEvent>();\n\n    /** Whether the dropdown is animating. */\n    _isAnimating: boolean;\n\n    /** Layout direction of the dropdown. */\n    direction: Direction;\n\n    /** Class to be added to the backdrop element. */\n    @Input() backdropClass: string = this._defaultOptions.backdropClass;\n\n    /** @docs-private */\n    @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n\n    /**\n     * List of the items inside of a dropdown.\n     */\n    @ContentChildren(McDropdownItem) items: QueryList<McDropdownItem>;\n\n    /**\n     * Dropdown content that will be rendered lazily.\n     * @docs-private\n     */\n    @ContentChild(McDropdownContent) lazyContent: McDropdownContent;\n\n    /** Event emitted when the dropdown is closed. */\n    @Output() readonly closed: EventEmitter<void | 'click' | 'keydown' | 'tab'> =\n        new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n\n    private _keyManager: FocusKeyManager<McDropdownItem>;\n    private _xPosition: DropdownPositionX = this._defaultOptions.xPosition;\n    private _yPosition: DropdownPositionY = this._defaultOptions.yPosition;\n\n    /** Dropdown items inside the current dropdown. */\n    private _items: McDropdownItem[] = [];\n\n    /** Emits whenever the amount of dropdown items changes. */\n    private _itemChanges = new Subject<McDropdownItem[]>();\n\n    /** Subscription to tab events on the dropdown panel */\n    private _tabSubscription = Subscription.EMPTY;\n    private _overlapTrigger: boolean = this._defaultOptions.overlapTrigger;\n    private _hasBackdrop: boolean | undefined = this._defaultOptions.hasBackdrop;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        private _ngZone: NgZone,\n        @Inject(MC_DROPDOWN_DEFAULT_OPTIONS) private _defaultOptions: McDropdownDefaultOptions) { }\n\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager<McDropdownItem>(this.items).withWrap().withTypeAhead();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n    }\n\n    ngOnDestroy() {\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n\n    /** Handle a keyboard event from the dropdown, delegating to the appropriate action. */\n    _handleKeydown(event: KeyboardEvent) {\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case ESCAPE:\n                this.closed.emit('keydown');\n                break;\n            case UP_ARROW:\n            case DOWN_ARROW:\n                this._keyManager.setFocusOrigin('keyboard');\n                this._keyManager.onKeydown(event);\n                break;\n            default:\n                // todo зачем обрабатывать лишние события ?\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    /**\n     * Focus the first item in the dropdown.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin: FocusOrigin = 'program'): void {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable.asObservable()\n                .pipe(take(1))\n                .subscribe(() => this._keyManager.setFocusOrigin(origin).setFirstItemActive());\n        } else {\n            this._keyManager.setFocusOrigin(origin).setFirstItemActive();\n        }\n    }\n\n    /**\n     * Resets the active item in the dropdown. This is used when the dropdown is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n\n    /**\n     * Registers a dropdown item with the dropdown.\n     * @docs-private\n     */\n    addItem(item: McDropdownItem) {\n        // We register the items through this method, rather than picking them up through\n        // `ContentChildren`, because we need the items to be picked up by their closest\n        // `mc-dropdown` ancestor. If we used `@ContentChildren(McDropdownItem, {descendants: true})`,\n        // all descendant items will bleed into the top-level dropdown in the case where the consumer\n        // has `mc-dropdown` instances nested inside each other.\n        if (this._items.indexOf(item) === -1) {\n            this._items.push(item);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Removes an item from the dropdown.\n     * @docs-private\n     */\n    removeItem(item: McDropdownItem) {\n        const index = this._items.indexOf(item);\n\n        if (this._items.indexOf(item) > -1) {\n            this._items.splice(index, 1);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Adds classes to the dropdown panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the dropdown along the x axis.\n     * @param posY Position of the dropdown along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX: DropdownPositionX = this.xPosition, posY: DropdownPositionY = this.yPosition) {\n        const classes = this._classList;\n        classes['mc-dropdown-before'] = posX === 'before';\n        classes['mc-dropdown-after'] = posX === 'after';\n        classes['mc-dropdown-above'] = posY === 'above';\n        classes['mc-dropdown-below'] = posY === 'below';\n    }\n\n    /** Starts the enter animation. */\n    _startAnimation() {\n        this._panelAnimationState = 'enter';\n    }\n\n    /** Resets the panel animation to its initial state. */\n    _resetAnimation() {\n        this._panelAnimationState = 'void';\n    }\n\n    /** Callback that is invoked when the panel animation completes. */\n    _onAnimationDone(event: AnimationEvent) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n\n        // Scroll the content element to the top once the animation is done. This is necessary, because\n        // we move focus to the first item while it's still being animated, which can throw the browser\n        // off when it determines the scroll position. Alternatively we can move focus when the\n        // animation is done, however moving focus asynchronously will interrupt screen readers\n        // which are in the process of reading out the dropdown already. We take the `element` from\n        // the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n}\n","import {\n    AfterContentInit,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy, OnInit,\n    Optional,\n    Output,\n    ViewContainerRef\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction, Directionality } from '@ptsecurity/cdk/bidi';\nimport {\n    FlexibleConnectedPositionStrategy,\n    HorizontalConnectionPos,\n    Overlay,\n    OverlayConfig,\n    OverlayRef,\n    VerticalConnectionPos,\n    IScrollStrategy\n} from '@ptsecurity/cdk/overlay';\nimport { TemplatePortal } from '@ptsecurity/cdk/portal';\nimport { merge, Subscription } from 'rxjs';\nimport { filter, take, takeUntil } from 'rxjs/operators';\n\nimport { throwMcDropdownMissingError } from './dropdown-errors';\nimport { McDropdownPanel } from './dropdown-panel';\nimport { McDropdown } from './dropdown.component';\n\n\n/** Injection token that determines the scroll handling while the dropdown is open. */\nexport const MC_DROPDOWN_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-dropdown-scroll-strategy');\n\n/** @docs-private */\nexport function MC_DROPDOWN_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_DROPDOWN_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_DROPDOWN_SCROLL_STRATEGY_FACTORY\n};\n\n/**\n * This directive is intended to be used in conjunction with an mc-dropdown tag.  It is\n * responsible for toggling the display of the provided dropdown instance.\n */\n@Directive({\n    selector: `[mcDropdownTriggerFor]`,\n    host: {\n        '(touchstart)': '_openedBy = \"touch\"',\n        '(click)': 'toggle()'\n    },\n    exportAs: 'mcDropdownTrigger'\n})\nexport class McDropdownTrigger implements OnInit, AfterContentInit, OnDestroy {\n\n    /** Whether the dropdown is open. */\n    get opened(): boolean {\n        return this._opened;\n    }\n\n    /** The text direction of the containing app. */\n    get dir(): Direction {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    // Tracking input type is necessary so it's possible to only auto-focus\n    // the first item of the list when the dropdown is opened via the keyboard\n    _openedBy: 'mouse' | 'touch' | null = null;\n\n    /** References the dropdown instance that the trigger is associated with. */\n    @Input('mcDropdownTriggerFor') dropdown: McDropdownPanel;\n\n    /** Data to be passed along to any lazily-rendered content. */\n    @Input('mcDropdownTriggerData') data: any;\n\n    /** Event emitted when the associated dropdown is opened. */\n    @Output() readonly dropdownOpened: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the associated dropdown is closed. */\n    @Output() readonly dropdownClosed: EventEmitter<void> = new EventEmitter<void>();\n\n    private _portal: TemplatePortal;\n    private _overlayRef: OverlayRef | null = null;\n    private _opened: boolean = false;\n    private _closeSubscription = Subscription.EMPTY;\n    private _hoverSubscription = Subscription.EMPTY;\n\n    constructor(private _overlay: Overlay,\n                private _element: ElementRef<HTMLElement>,\n                private _viewContainerRef: ViewContainerRef,\n                @Inject(MC_DROPDOWN_SCROLL_STRATEGY) private _scrollStrategy: any,\n                @Optional() private _dir: Directionality,\n                private _focusMonitor?: FocusMonitor) {}\n\n    ngOnInit(): void {\n        this.dropdown.closed = this.dropdown.closed || new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n    }\n\n    ngAfterContentInit() {\n        this._check();\n\n        this.dropdown.closed.asObservable().subscribe(() => {\n            this._destroy();\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n\n        this._cleanUpSubscriptions();\n    }\n\n    /** Toggles the dropdown between the open and closed states. */\n    toggle(): void {\n        // tslint:disable-next-line:no-void-expression\n        return this._opened ? this.close() : this.open();\n    }\n\n    /** Opens the dropdown. */\n    open(): void {\n        if (this._opened) {\n            return;\n        }\n\n        this._check();\n\n        const overlayRef = this._createOverlay();\n        this._setPosition(overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy);\n        overlayRef.attach(this._portal);\n\n        if (this.dropdown.lazyContent) {\n            this.dropdown.lazyContent.attach(this.data);\n        }\n\n        this._closeSubscription = this._closingActions().subscribe(() => this.close());\n        this._init();\n\n        if (this.dropdown instanceof McDropdown) {\n            this.dropdown._startAnimation();\n        }\n    }\n\n    /** Closes the dropdown. */\n    close(): void {\n        this.dropdown.closed.emit();\n    }\n\n    /**\n     * Focuses the dropdown trigger.\n     * @param origin Source of the dropdown trigger's focus.\n     */\n    focus(origin: FocusOrigin = 'program') {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._element.nativeElement, origin);\n        } else {\n            this._element.nativeElement.focus();\n        }\n    }\n\n    /** Closes the dropdown and does the necessary cleanup. */\n    private _destroy() {\n        if (!this._overlayRef || !this.opened) {\n            return;\n        }\n\n        const dropdown = this.dropdown;\n\n        this._closeSubscription.unsubscribe();\n        this._overlayRef.detach();\n\n        if (dropdown instanceof McDropdown) {\n            dropdown._resetAnimation();\n\n            if (dropdown.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                dropdown._animationDone\n                    .pipe(\n                        filter((event) => event.toState === 'void'),\n                        take(1),\n                        // Interrupt if the content got re-attached.\n                        takeUntil(dropdown.lazyContent._attached)\n                    )\n                    .subscribe(() => dropdown.lazyContent.detach(), undefined, () => {\n                        // No matter whether the content got re-attached, reset the dropdown.\n                        this._reset();\n                    });\n            } else {\n                this._reset();\n            }\n        } else {\n            this._reset();\n\n            if (dropdown.lazyContent) {\n                dropdown.lazyContent.detach();\n            }\n        }\n    }\n\n    /**\n     * This method sets the dropdown state to open and focuses the first item if\n     * the dropdown was opened via the keyboard.\n     */\n    private _init(): void {\n        this.dropdown.direction = this.dir;\n        this._setIsOpened(true);\n        this.dropdown.focusFirstItem(this._openedBy || 'program');\n    }\n\n    /**\n     * This method resets the dropdown when it's closed, most importantly restoring\n     * focus to the dropdown trigger if the dropdown was opened via the keyboard.\n     */\n    private _reset(): void {\n        this._setIsOpened(false);\n\n        // We should reset focus if the user is navigating using a keyboard or\n        // if we have a top-level trigger which might cause focus to be lost\n        // when clicking on the backdrop.\n        if (!this._openedBy) {\n            // Note that the focus style will show up both for `program` and\n            // `keyboard` so we don't have to specify which one it is.\n            this.focus();\n        } else {\n            this.focus(this._openedBy);\n        }\n\n        this._openedBy = null;\n    }\n\n    // set state rather than toggle to support triggers sharing a dropdown\n    private _setIsOpened(isOpen: boolean): void {\n        this._opened = isOpen;\n        // tslint:disable-next-line:no-void-expression\n        this._opened ? this.dropdownOpened.emit() : this.dropdownClosed.emit();\n    }\n\n    /**\n     * This method checks that a valid instance of Dropdown has been passed into\n     * mcDropdownTriggerFor. If not, an exception is thrown.\n     */\n    private _check() {\n        if (!this.dropdown) {\n            throwMcDropdownMissingError();\n        }\n    }\n\n    /**\n     * This method creates the overlay from the provided dropdown's template and saves its\n     * OverlayRef so that it can be attached to the DOM when open is called.\n     */\n    private _createOverlay(): OverlayRef {\n        if (!this._overlayRef) {\n            this._portal = new TemplatePortal(this.dropdown.templateRef, this._viewContainerRef);\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions(config.positionStrategy as FlexibleConnectedPositionStrategy);\n            this._overlayRef = this._overlay.create(config);\n\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `McDropdownPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n\n        return this._overlayRef;\n    }\n\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    private _getOverlayConfig(): OverlayConfig {\n        return new OverlayConfig({\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withTransformOriginOn('.mc-dropdown__panel'),\n            hasBackdrop: this.dropdown.hasBackdrop === null || this.dropdown.hasBackdrop === undefined\n                ? true\n                : this.dropdown.hasBackdrop,\n            backdropClass: this.dropdown.backdropClass || 'cdk-overlay-transparent-backdrop',\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir\n        });\n    }\n\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the dropdown based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    private _subscribeToPositions(position: FlexibleConnectedPositionStrategy): void {\n        if (this.dropdown.setPositionClasses) {\n            // todo possibly we should not recompute positions there\n            /*position.positionChanges.subscribe((change) => {\n                const posX: DropdownPositionX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                const posY: DropdownPositionY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n\n                this.dropdown.setPositionClasses!(posX, posY);\n            });*/\n            position.positionChanges.subscribe(() => {\n                this.dropdown.setPositionClasses!(this.dropdown.xPosition, this.dropdown.yPosition);\n            });\n        }\n    }\n\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    private _setPosition(positionStrategy: FlexibleConnectedPositionStrategy) {\n        const [originX, originFallbackX]: HorizontalConnectionPos[] =\n            this.dropdown.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n\n        const [overlayY, overlayFallbackY]: VerticalConnectionPos[] =\n            this.dropdown.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        const [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        const offsetY = 0;\n\n        if (!this.dropdown.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n\n        positionStrategy.withPositions([\n            {originX, originY, overlayX, overlayY, offsetY},\n            {originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY},\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            }\n        ]);\n    }\n\n    /** Cleans up the active subscriptions. */\n    private _cleanUpSubscriptions(): void {\n        this._closeSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n\n    /** Returns a stream that emits whenever an action that should close the dropdown occurs. */\n    private _closingActions() {\n        const backdrop = this._overlayRef!.backdropClick();\n        const detachments = this._overlayRef!.detachments();\n\n        return merge(backdrop, detachments);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER, McDropdownTrigger } from './dropdown-trigger';\nimport { McDropdown } from './dropdown.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule\n    ],\n    exports: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    declarations: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    providers: [MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER]\n})\nexport class McDropdownModule {}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-cleaner',\n    template: '<i class=\"mc-icon_light\" mc-icon=\"mc-close-M_16\" color=\"second\"></i>'\n})\nexport class McCleaner {}\n","import { NgControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** The element ID for this control. */\n    readonly id: string;\n\n    /** The placeholder for this control. */\n    readonly placeholder: string;\n\n    /** Gets the NgControl for this control. */\n    readonly ngControl: NgControl | null;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Whether the control is empty. */\n    readonly empty: boolean;\n\n    /** Whether the control is required. */\n    readonly required: boolean;\n\n    /** Whether the control is disabled. */\n    readonly disabled: boolean;\n\n    /** Whether the control is in an error state. */\n    readonly errorState: boolean;\n\n    /**\n     * An optional name for the control type that can be used to distinguish `mc-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mc-form-field-type-{{controlType}}` to its root element.\n     */\n    readonly controlType?: string;\n\n    /** Handles a click on the control's container. */\n    abstract onContainerClick(event: MouseEvent): void;\n}\n","import { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldNumberControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** the number step */\n    step: number;\n\n    /** the number big step */\n    bigStep: number;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Handles step up and down */\n    abstract stepUp(step: number): void;\n\n    abstract stepDown(step: number): void;\n}\n","import { Directive, Input } from '@angular/core';\n\n\nlet nextUniqueId = 0;\n\n@Directive({\n    selector: 'mc-hint',\n    host: {\n        class: 'mc-hint',\n        '[attr.id]': 'id'\n    }\n})\nexport class McHint {\n    @Input() id: string = `mc-hint-${nextUniqueId++}`;\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcPrefix]'\n})\nexport class McPrefix {\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-stepper',\n    template: `\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-up mc-angle-L_16\"\n           (mousedown)=\"onStepUp($event)\">\n        </i>\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-down mc-angle-L_16\"\n           (mousedown)=\"onStepDown($event)\">\n        </i>\n    `\n})\nexport class McStepper {\n    @Output()\n    readonly stepUp: EventEmitter<void> = new EventEmitter<void>();\n    @Output()\n    readonly stepDown: EventEmitter<void> = new EventEmitter<void>();\n\n    onStepUp($event: MouseEvent) {\n        this.stepUp.emit();\n        $event.preventDefault();\n    }\n\n    onStepDown($event: MouseEvent) {\n        this.stepDown.emit();\n        $event.preventDefault();\n    }\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcSuffix]'\n})\nexport class McSuffix {\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\nexport function isBoolean(val: any): val is boolean { return typeof val === 'boolean'; }\n\nexport function toBoolean(value: any): boolean {\n    return value != null && `${value}` !== 'false';\n}\n","import { NgModule, InjectionToken, Optional, Inject, isDevMode } from '@angular/core';\nimport { BidiModule } from '@ptsecurity/cdk/bidi';\n\n\n// Injection token that configures whether the Mosaic sanity checks are enabled.\nexport const MC_SANITY_CHECKS = new InjectionToken<boolean>('mc-sanity-checks', {\n    providedIn: 'root',\n    factory: MC_SANITY_CHECKS_FACTORY\n});\n\nexport function MC_SANITY_CHECKS_FACTORY(): boolean {\n    return true;\n}\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Mosaic\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., McTabsModule).\n */\n@NgModule({\n    imports: [ BidiModule ],\n    exports: [ BidiModule ]\n})\nexport class McCommonModule {\n    // Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n    private _hasDoneGlobalChecks = false;\n\n    // Reference to the global `document` object.\n    private _document = typeof document === 'object' && document ? document : null;\n\n    // Reference to the global 'window' object.\n    private _window = typeof window === 'object' && window ? window : null;\n\n    constructor(@Optional() @Inject(MC_SANITY_CHECKS) private _sanityChecksEnabled: boolean) {\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n\n    // Whether any sanity checks are enabled\n    private _areChecksEnabled(): boolean {\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    }\n\n    // Whether the code is running in tests.\n    private _isTestEnv() {\n        // tslint:disable-next-line\n        return this._window && (this._window['__karma__'] || this._window['jasmine']);\n    }\n\n    private _checkDoctypeIsDefined(): void {\n        if (this._document && !this._document.doctype) {\n            console.warn(\n                'Current document does not have a doctype. This may cause ' +\n                'some Mosaic components not to behave as expected.'\n            );\n        }\n    }\n\n    private _checkThemeIsPresent(): void {\n        if (this._document && typeof getComputedStyle === 'function') {\n            const testElement = this._document.createElement('div');\n\n            testElement.classList.add('mc-theme-loaded-marker');\n            this._document.body.appendChild(testElement);\n\n            const computedStyle = getComputedStyle(testElement);\n\n            // In some situations, the computed style of the test element can be null. For example in\n            // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n            if (computedStyle && computedStyle.display !== 'none') {\n                console.warn(\n                    'Could not find Mosaic core theme. Most Mosaic ' +\n                    'components may not work as expected. For more info refer ' +\n                    'to the theming guide: link there'\n                );\n            }\n\n            this._document.body.removeChild(testElement);\n        }\n    }\n}\n","import { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanDisable {\n    disabled: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableCtor = Constructor<CanDisable>;\n\n// Mixin to augment a directive with a `disabled` property.\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): CanDisableCtor & T {\n    return class extends base {\n        private _disabled: boolean = false;\n\n        get disabled() {\n            return this._disabled;\n        }\n\n        set disabled(value: any) {\n            this._disabled = coerceBooleanProperty(value);\n        }\n\n        constructor(...args: any[]) {\n            // tslint:disable-next-line\n            super(...args);\n        }\n    };\n}\n","import { ElementRef } from '@angular/core';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanColor {\n    color: ThemePalette;\n}\n\n/** @docs-private */\nexport type CanColorCtor = Constructor<CanColor>;\n\nexport interface HasElementRef {\n    _elementRef: ElementRef;\n}\n\nexport enum ThemePalette {\n    Primary = 'primary',\n    Second = 'second',\n    Error = 'error',\n    Default = 'second',\n    Empty = ''\n}\n\n/** Mixin to augment a directive with a `color` property. */\nexport function mixinColor<T extends Constructor<HasElementRef>>(\n    base: T,\n    defaultColor: ThemePalette = ThemePalette.Default\n): CanColorCtor & T {\n    return class extends base {\n\n        private _color: ThemePalette;\n\n        get color(): ThemePalette {\n            return this._color;\n        }\n\n        set color(value: ThemePalette) {\n            const colorPalette = value || defaultColor;\n\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mc-${this._color}`);\n                }\n\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mc-${colorPalette}`);\n                }\n\n                this._color = colorPalette;\n            }\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n\n            this.color = defaultColor;\n        }\n    };\n}\n\n","import { Constructor } from './constructor';\nimport { CanDisable } from './disabled';\n\n\nexport interface HasTabIndex {\n    tabIndex: number;\n}\n\nexport type HasTabIndexCtor = Constructor<HasTabIndex>;\n\n// Mixin to augment a directive with a `tabIndex` property.\nexport function mixinTabIndex<T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0)\n    : HasTabIndexCtor & T {\n    return class extends base {\n        private _tabIndex: number = defaultTabIndex;\n\n        get tabIndex(): number {\n            return this.disabled ? -1 : this._tabIndex;\n        }\n\n        set tabIndex(value: number) {\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n    };\n}\n","import { FormControl, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\nimport { ErrorStateMatcher } from '../error/error-options';\n\nimport { Constructor } from './constructor';\n\n\n/** @docs-private */\nexport interface CanUpdateErrorState {\n\n    readonly stateChanges: Subject<void>;\n\n    errorState: boolean;\n    errorStateMatcher: ErrorStateMatcher;\n\n    updateErrorState();\n}\n\n/** @docs-private */\nexport type CanUpdateErrorStateCtor = Constructor<CanUpdateErrorState>;\n\n/** @docs-private */\nexport interface HasErrorState {\n    _parentFormGroup: FormGroupDirective;\n    _parentForm: NgForm;\n    _defaultErrorStateMatcher: ErrorStateMatcher;\n    ngControl: NgControl;\n}\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T): CanUpdateErrorStateCtor & T {\n    return class extends base {\n        /** Whether the component is in an error state. */\n        errorState: boolean = false;\n\n        /**\n         * Stream that emits whenever the state of the input changes such that the wrapping\n         * `MatFormField` needs to run change detection.\n         */\n        readonly stateChanges = new Subject<void>();\n\n        errorStateMatcher: ErrorStateMatcher;\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this._parentFormGroup || this._parentForm;\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control as FormControl : null;\n            const newState = matcher.isErrorState(control, parent);\n\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n","import {\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ENTER, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Subject } from 'rxjs';\n\nimport { McOptgroup } from './optgroup';\n\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n\n/** Event object emitted by McOption when selected or deselected. */\nexport class McOptionSelectionChange {\n    constructor(\n        /** Reference to the option that emitted the event. */\n        public source: McOption,\n        /** Whether the change in the option's value was a result of a user action. */\n        public isUserInput = false) {\n    }\n}\n\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * @docs-private\n */\nexport interface IMcOptionParentComponent {\n    disableRipple?: boolean;\n    multiple?: boolean;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_OPTION_PARENT_COMPONENT =\n    new InjectionToken<IMcOptionParentComponent>('MC_OPTION_PARENT_COMPONENT');\n\n/**\n * Single option inside of a `<mat-select>` element.\n */\n@Component({\n    selector: 'mc-option',\n    exportAs: 'mcOption',\n    host: {\n        '[attr.tabindex]': '_getTabIndex()',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-option-multiple]': 'multiple',\n        '[class.mc-active]': 'active',\n        '[id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '(click)': '_selectViaInteraction()',\n        '(keydown)': '_handleKeydown($event)',\n        class: 'mc-option'\n    },\n    styleUrls: ['option.css'],\n    templateUrl: 'option.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McOption implements AfterViewChecked, OnDestroy {\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n        return this._parent && this._parent.multiple;\n    }\n\n    /** The unique ID of the option. */\n    get id(): string {\n        return this._id;\n    }\n\n    /** Whether or not the option is currently selected. */\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    /** The form value of the option. */\n    @Input() value: any;\n\n    /** Whether the option is disabled. */\n    @Input()\n    get disabled() {\n        return (this.group && this.group.disabled) || this._disabled;\n    }\n\n    set disabled(value: any) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() {\n        return this._parent && this._parent.disableRipple;\n    }\n\n    /** Event emitted when the option is selected or deselected. */\n        // tslint:disable-next-line:no-output-on-prefix\n    @Output() readonly onSelectionChange = new EventEmitter<McOptionSelectionChange>();\n\n    /** Emits when the state of the option changes and any parents have to be notified. */\n    readonly _stateChanges = new Subject<void>();\n\n    private _selected = false;\n    private _active = false;\n    private _disabled = false;\n    private readonly _id = `mc-option-${_uniqueIdCounter++}`;\n    private _mostRecentViewValue = '';\n\n    constructor(\n        private readonly _element: ElementRef,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_OPTION_PARENT_COMPONENT) private readonly _parent: IMcOptionParentComponent,\n        @Optional() readonly group: McOptgroup) {\n    }\n\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active(): boolean {\n        return this._active;\n    }\n\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue(): string {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n\n    /** Selects the option. */\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Deselects the option. */\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Sets focus onto this option. */\n    focus(): void {\n        const element = this._getHostElement();\n\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles(): void {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles(): void {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        return this.viewValue;\n    }\n\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event: KeyboardEvent): void {\n        // tslint:disable-next-line\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\n            this._selectViaInteraction();\n\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction(): void {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Gets the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n\n    /** Emits the selection change event. */\n    private _emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McOptionSelectionChange(this, isUserInput));\n    }\n}\n\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nexport function _countGroupLabelsBeforeOption(\n    optionIndex: number, options: QueryList<McOption>,\n    optionGroups: QueryList<McOptgroup>\n): number {\n\n    if (optionGroups.length) {\n        const optionsArray = options.toArray();\n        const groups = optionGroups.toArray();\n\n        let groupCounter = 0;\n\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n\n        return groupCounter;\n    }\n\n    return 0;\n}\n\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionIndex Index of the option to be scrolled into the view.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nexport function _getOptionScrollPosition(\n    optionIndex: number,\n    optionHeight: number,\n    currentScrollPosition: number,\n    panelHeight: number\n): number {\n    const optionOffset = optionIndex * optionHeight;\n\n    if (optionOffset < currentScrollPosition) { return optionOffset; }\n\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n\n    return currentScrollPosition;\n}\n\n","import { ConnectionPositionPair } from '@ptsecurity/cdk/overlay';\n\n\nexport const POSITION_MAP: { [key: string]: ConnectionPositionPair } = {\n    top         : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom'\n    },\n    topCenter   : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topLeft     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topRight    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    right       : {\n        originX : 'end',\n        originY : 'center',\n        overlayX: 'start',\n        overlayY: 'center'\n    },\n    rightTop    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'top',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    rightBottom : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    bottom      : {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomCenter: {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomLeft  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    bottomRight : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    left        : {\n        originX : 'start',\n        originY : 'center',\n        overlayX: 'end',\n        overlayY: 'center'\n    },\n    leftTop     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    leftBottom  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    }\n};\n\nexport const DEFAULT_4_POSITIONS = _objectValues([\n    POSITION_MAP.top, POSITION_MAP.right, POSITION_MAP.bottom, POSITION_MAP.left\n]);\n\nfunction arrayMap<T, S>(array: T[], iteratee: (item: T, index: number, arr: T[]) => S): S[] {\n    let index = -1;\n    const length = array == null ? 0 : array.length;\n    const result = Array(length);\n\n    while (++index < length) {\n        result[ index ] = iteratee(array[ index ], index, array);\n    }\n\n    return result;\n}\nfunction baseValues<T>(object: { [key: string]: T } | T[], props: string[]): T[] {\n    return arrayMap(props,  (key) => {\n        return object[ key ];\n    });\n}\nfunction _objectValues<T>(object: { [key: string]: T } | T[]): T[] {\n    return object == null ? [] : baseValues(object, Object.keys(object));\n}\n","export function throwMcDropdownMissingError() {\n    throw Error(`mcDropdownTriggerFor: must pass in an mc-dropdown instance.\n    Example:\n      <mc-dropdown #dropdown=\"mcDropdown\"></mc-dropdown>\n      <button [mcDropdownTriggerFor]=\"dropdown\"></button>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mc-dropdown xPosition=\"before\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mc-dropdown yPosition=\"above\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n","export function getMcFormFieldMissingControlError(): Error {\n  return Error('mc-form-field must contain a McFormFieldControl.');\n}\n","export function getMcInputUnsupportedTypeError(inputType: string): Error {\n    return Error(`Input type \"${inputType}\" isn't supported by mcInput.`);\n}\n","/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nexport function getMcSelectDynamicMultipleError(): Error {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nexport function getMcSelectNonArrayValueError(): Error {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nexport function getMcSelectNonFunctionValueError(): Error {\n    return Error('`compareWith` must be a function.');\n}\n","import { NgModule, Directive, ElementRef, QueryList } from '@angular/core';\n\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(McLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({\n    selector: '[mc-line], [mcLine]',\n    host: { class: 'mc-line' }\n})\nexport class McLine {}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nexport class McLineSetter {\n    constructor(private _lines: QueryList<McLine>, private _element: ElementRef) {\n        this._setLineClass(this._lines.length);\n\n        this._lines.changes.subscribe(() => {\n            this._setLineClass(this._lines.length);\n        });\n    }\n\n    private _setLineClass(count: number): void {\n        this._resetClasses();\n        if (count === 2 || count === 3) {\n            this._setClass(`mc-${count}-line`, true);\n        } else if (count > 3) {\n            this._setClass(`mc-multi-line`, true);\n        }\n    }\n\n    private _resetClasses(): void {\n        this._setClass('mc-2-line', false);\n        this._setClass('mc-3-line', false);\n        this._setClass('mc-multi-line', false);\n    }\n\n    private _setClass(className: string, isAdd: boolean): void {\n        if (isAdd) {\n            this._element.nativeElement.classList.add(className);\n        } else {\n            this._element.nativeElement.classList.remove(className);\n        }\n    }\n}\n\n@NgModule({\n    imports: [],\n    exports: [McLine],\n    declarations: [McLine]\n})\nexport class McLineModule {}\n","import { Injectable } from '@angular/core';\nimport { FormGroupDirective, NgForm, FormControl } from '@angular/forms';\n\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n@Injectable()\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\n\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n@Injectable({ providedIn: 'root' })\nexport class ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\n\nexport type McPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mc-primary .mc-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mc-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n@Component({\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'mc-pseudo-checkbox',\n    styleUrls: ['pseudo-checkbox.css'],\n    templateUrl: 'pseudo-checkbox.partial.html',\n    host: {\n        class: 'mc-pseudo-checkbox',\n        '[class.mc-indeterminate]': 'state === \"indeterminate\"',\n        '[class.mc-checked]': 'state === \"checked\"',\n        '[class.mc-disabled]': 'disabled'\n    }\n})\nexport class McPseudoCheckbox {\n    @Input() state: McPseudoCheckboxState = 'unchecked';\n\n    @Input() disabled: boolean = false;\n}\n","import { NgModule } from '@angular/core';\n\nimport { McPseudoCheckbox } from './pseudo-checkbox/pseudo-checkbox';\n\n\n@NgModule({\n    exports: [McPseudoCheckbox],\n    declarations: [McPseudoCheckbox]\n})\nexport class McPseudoCheckboxModule {}\n\n\nexport * from './pseudo-checkbox/pseudo-checkbox';\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class McMeasureScrollbarService {\n\n    get scrollBarWidth(): number {\n        if (this._scrollbarWidth) {\n            return this._scrollbarWidth;\n        }\n        this.initScrollBarWidth();\n\n        return this._scrollbarWidth;\n    }\n\n    private _scrollbarWidth: number;\n    private scrollbarMeasure = {\n        position: 'absolute',\n        top: '-9999px',\n        width: '50px',\n        height: '50px',\n        overflow: 'scroll'\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private document: any\n    ) {\n        this.initScrollBarWidth();\n    }\n\n    initScrollBarWidth() {\n        const scrollDiv = this.document.createElement('div');\n\n        // tslint:disable-next-line\n        for (const scrollProp in this.scrollbarMeasure) {\n            if (this.scrollbarMeasure.hasOwnProperty(scrollProp)) {\n                scrollDiv.style[scrollProp] = this.scrollbarMeasure[scrollProp];\n            }\n        }\n\n        this.document.body.appendChild(scrollDiv);\n\n        const width = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n        this.document.body.removeChild(scrollDiv);\n        this._scrollbarWidth = width;\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\nimport { mixinDisabled, CanDisable, CanDisableCtor } from '../common-behaviors/index';\n\n\n// Boilerplate for applying mixins to McOptgroup.\n/** @docs-private */\nexport class McOptgroupBase {}\n\nexport const _McOptgroupMixinBase: CanDisableCtor & typeof McOptgroupBase = mixinDisabled(McOptgroupBase);\n\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\n\n/**\n * Component that is used to group instances of `mc-option`.\n */\n@Component({\n    selector: 'mc-optgroup',\n    exportAs: 'mcOptgroup',\n    templateUrl: 'optgroup.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    styleUrls: ['optgroup.css'],\n    host: {\n        class: 'mc-optgroup',\n        role: 'group',\n        '[class.mc-optgroup-disabled]': 'disabled',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-labelledby]': '_labelId'\n    }\n})\nexport class McOptgroup extends _McOptgroupMixinBase implements CanDisable {\n    /** Label for the option group. */\n    @Input() label: string;\n\n    /** Unique id for the underlying label. */\n    _labelId: string = `mc-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McPseudoCheckboxModule } from '../selection/index';\n\nimport { McOptgroup } from './optgroup';\nimport { McOption } from './option';\n\n\n@NgModule({\n    imports: [CommonModule, McPseudoCheckboxModule],\n    exports: [McOption, McOptgroup],\n    declarations: [McOption, McOptgroup]\n})\nexport class McOptionModule {}\n\n\nexport * from './option';\nexport * from './optgroup';\n","import { InjectionToken } from '@angular/core';\n\n\n/** InjectionToken that can be used to specify the global label options. */\nexport const MC_LABEL_GLOBAL_OPTIONS =\n    new InjectionToken<LabelOptions>('mc-label-global-options');\n\n/** Type for the available floatLabel values. */\nexport type FloatLabelType = 'always' | 'never' | 'auto';\n\n/** Configurable options for floating labels. */\nexport interface LabelOptions {\n    /**\n     * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n     * Default behavior is assumed to be `auto`.\n     */\n    float?: FloatLabelType;\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata,\n} from '@angular/animations';\n\n\nexport const fadeAnimation: AnimationTriggerMetadata =  trigger('fadeAnimation', [\n    state('void', style({ opacity: 0 })),\n    state('true', style({ opacity: 1 })),\n    state('false', style({ opacity: 0 })),\n    transition('* => true', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n    transition('* => void', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)')),\n]);\n","import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { mixinColor, CanColor, CanColorCtor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\n@Directive({\n    selector: '[mc-icon]',\n    host: { class: 'mc mc-icon' }\n})\nexport class McIconCSSStyler {}\n\n\nexport class McIconBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McIconMixinBase: CanColorCtor & typeof McIconBase = mixinColor(McIconBase, ThemePalette.Empty);\n\n\n@Component({\n    selector: `[mc-icon]`,\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./icon.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color']\n})\nexport class McIcon extends _McIconMixinBase implements CanColor {\n    constructor(elementRef: ElementRef, @Attribute('mc-icon') iconName: string) {\n        super(elementRef);\n\n        elementRef.nativeElement.classList.add(iconName);\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McIcon,\n    McIconCSSStyler\n} from './icon.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McIcon,\n        McIconCSSStyler\n    ],\n    declarations: [\n        McIcon,\n        McIconCSSStyler\n    ]\n})\nexport class McIconModule {}\n"],"names":["this","_onHide","asObservable","McTooltipComponent","prototype","_markForCheck","cdr","markForCheck","_handleBodyInteraction","_closeOnInteraction","hide","tslib_1.__decorate","Output","tslib_1.__metadata","EventEmitter","Input","Component","selector","exportAs","animations","fadeAnimation","template","preserveWhitespaces","styles","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","host","(body:click)","ChangeDetectorRef","MC_TOOLTIP_SCROLL_STRATEGY","InjectionToken","MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","provide","deps","Overlay","useFactory","MC_TOOLTIP_SCROLL_STRATEGY_FACTORY","McTooltip","_overlay","elementRef","_ngZone","_scrollDispatcher","hostView","_scrollStrategy","_dir","isTooltipOpen","isDynamicTooltip","parentDisabled","_disabled","_trigger","_placement","mcVisibleChange","$unsubscribe","Subject","manualListeners","Map","_destroyed","availablePositions","POSITION_MAP","Object","defineProperty","get","_title","set","title","updateCompValue","mcTitle","value","coerceBooleanProperty","_mouseEnterDelay","_mouseLeaveDelay","_visible","tooltipClass","tooltip","setClassMap","_createOverlay","_this","_overlayRef","strategy","position","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withPositions","DEFAULT_4_POSITIONS","slice","scrollableAncestors","getAncestorScrollContainers","withScrollableContainers","positionChanges","pipe","takeUntil","subscribe","change","onPositionChange","scrollableViewProperties","isOverlayClipped","mcVisible","run","create","direction","positionStrategy","panelClass","scrollStrategy","_updatePosition","detachments","_detach","hasAttached","detach","$event","updatedPlacement","mcPlacement","keys","some","key","connectionPair","originX","originY","overlayX","overlayY","handlePositioningUpdate","pos","overlayElement","clientHeight","element","nativeElement","currentContainer","style","top","parseInt","split","ngOnInit","initElementRefListeners","ngOnDestroy","dispose","forEach","listener","event","removeEventListener","clear","next","complete","handleKeydown","e","keyCode","ESCAPE","handleTouchend","mcTrigger","show","addEventListener","disabled","overlayRef","_portal","ComponentPortal","attach","instance","afterHidden","property","distinctUntilChanged","data","emit","getConfig","origin","_getOrigin","overlay","_getOverlayPosition","tslib_1.__assign","main","fallback","originPosition","isLtr","getMcTooltipInvalidPositionError","_a","_invertPosition","x","y","overlayPosition","newX","newY","HostBinding","Directive","(keydown)","(touchend)","tslib_1.__param","Inject","Optional","ElementRef","NgZone","ScrollDispatcher","ViewContainerRef","Directionality","McToolTipModule","NgModule","declarations","exports","imports","BrowserAnimationsModule","CommonModule","OverlayModule","providers","entryComponents","VERSION","Version","SELECT_PANEL_PADDING_X","_focused","panelOpen","_onTouched","_changeDetectorRef","stateChanges","McSelect","_onAttached","overlayDir","positionChange","take","detectChanges","_calculateOverlayOffsetX","panel","scrollTop","_scrollTop","_getPanelTheme","_parentFormField","color","focus","_elementRef","_calculateOverlayScroll","selectedIndex","scrollBuffer","maxScroll","itemHeight","_getItemHeight","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","Math","min","max","onContainerClick","open","onRemoveMatcherItem","option","stopPropagation","deselect","_panelOpen","empty","_calculateHiddenItems","visibleItems","totalItemsWidth","_getTotalItemsWidthInMatcher","totalVisibleItemsWidth","tags","tag","offsetTop","offsetHeight","getBoundingClientRect","width","hiddenItems","selected","length","itemsCounter","trigger","querySelector","matcherList","itemsCounterShowed","matcherListWidth","matcherWidth","triggerClone","cloneNode","remove","_renderer","setStyle","appendChild","querySelectorAll","item","_handleClosedKeydown","isArrowKey","DOWN_ARROW","UP_ARROW","LEFT_ARROW","RIGHT_ARROW","ENTER","SPACE","multiple","altKey","preventDefault","_keyManager","onKeydown","_handleOpenKeydown","manager","HOME","END","setFirstItemActive","setLastItemActive","close","activeItem","_multiple","A","ctrlKey","hasDeselectedOptions_1","options","select","previouslyFocusedIndex","activeItemIndex","shiftKey","_selectViaInteraction","_initializeSelection","Promise","resolve","then","_setSelectionByValue","ngControl","_value","Array","isArray","getMcSelectNonArrayValueError","_selectionModel","currentValue","_selectValue","_sortValues","correspondingOption","setActiveItem","find","_compareWith","error","isDevMode","console","warn","_initKeyManager","ActiveDescendantKeyManager","withTypeAhead","withVerticalOrientation","withHorizontalOrientation","_isRtl","tabOut","_destroy","_scrollActiveOptionIntoView","_resetOptions","changedOrDestroyed","merge","changes","optionSelectionChanges","_onSelect","source","isUserInput","apply","map","_stateChanges","_setOptionIds","wasSelected","isSelected","_propagateChanges","options_1","toArray","sort","a","b","sortComparator","indexOf","fallbackValue","valueToEmit","valueChange","_onChange","selectionChange","McSelectChange","_optionIds","id","join","_highlightCorrectOption","activeOptionIndex","labelCount","_countGroupLabelsBeforeOption","optionGroups","_getOptionScrollPosition","_getOptionIndex","reduce","result","current","index","undefined","_calculateOverlayPosition","items","_getItemCount","panelHeight","scrollContainerHeight","selectedOptionOffset","_offsetY","_calculateOverlayOffsetY","_checkOverlayWithinViewport","offsetX","overlayRect","viewportSize","_viewportRuler","getViewportSize","isRtl","first","group","leftOverflow","left","rightOverflow","right","round","updatePosition","topSpaceAvailable","_triggerRect","bottomSpaceAvailable","height","bottom","panelHeightTop","abs","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_transformOrigin","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","optionHeightAdjustment","ViewChild","ViewChildren","McTag","QueryList","CdkConnectedOverlay","ContentChildren","McOption","descendants","McOptgroup","ContentChild","McSelectTrigger","ErrorStateMatcher","Observable","McSelect_1","inputs","[attr.id]","[attr.tabindex]","class","[class.mc-disabled]","[class.mc-select-invalid]","[class.mc-select-required]","(focus)","(blur)","(window:resize)","mcSelectAnimations","transformPanel","fadeInContent","McFormFieldControl","useExisting","MC_OPTION_PARENT_COMPONENT","Self","Attribute","MC_SELECT_SCROLL_STRATEGY","ViewportRuler","Renderer2","NgForm","FormGroupDirective","McFormField","NgControl","String","_McSelectMixinBase","McSelectModule","McOptionModule","McIconModule","McTagModule","McFormFieldModule","MC_SELECT_SCROLL_STRATEGY_PROVIDER","McSplitterComponent","ngZone","renderer","areas","_gutterSize","isDragging","areaPositionDivider","listeners","_direction","gutterSize","size","coerceNumberProperty","addArea","area","order","getSize","setOrder","push","initialSize","isVertical","onMouseDown","leftAreaIndex","rightAreaIndex","leftArea","rightArea","startPoint","screenX","screenY","disableFlex","setSize","runOutsideAngular","listen","onMouseUp","onMouseMove","removeArea","indexToRemove","splice","endPoint","offset","newLeftAreaSize","newRightAreaSize","minLeftAreaSize","getMinSize","minRightAreaSize","rightAreaOffset","unsubscribe","pop","McGutterDirective","_order","_size","getCursor","getState","coerceCssPixelValue","setAttr","state","Error","attribute","setAttribute","McSplitterAreaDirective","splitter","removeStyle","sz","getSizeProperty","getOffsetSizeProperty","getComputedStyle","parseFloat","getMinSizeProperty","McSplitterModule","nextUniqueId","McToggleBase","_McToggleMixinBase","mixinTabIndex","mixinColor","mixinDisabled","ThemePalette","Primary","McToggleChange","McToggleComponent","_super","_focusMonitor","tabIndex","call","labelPosition","ariaLabel","ariaLabelledby","_uniqueId","name","_checked","_onTouchedCallback","_onChangeCallback","_","monitor","tslib_1.__extends","McToggleComponent_1","stopMonitoring","focusVia","_inputElement","_getAriaChecked","checked","_onInteractionEvent","_onLabelTextChange","_onInputClick","_updateModelValue","_emitChangeEvent","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","NG_VALUE_ACCESSOR","forwardRef","multi","[id]","[class.mc-toggle_off]","transition","animate","FocusMonitor","McToggleModule","A11yModule","McCommonModule","_prefix","_positions","_classMap","visibleSource","BehaviorSubject","$visible","mcMouseEnterDelay","mcMouseLeaveDelay","isTitleString","TemplateRef","visible","unshift","hideTId","clearTimeout","isContentEmpty","showTId","setTimeout","McTabNav","mcTabNavMixinBase","McTabLinkBase","mcTabLinkMixinBase","McTabLink","focusMonitor","isActive","[attr.aria-current]","[attr.aria-disabled]","[attr.tabIndex]","[class.mc-active]","McTabsModule","PortalModule","McTabGroup","McTabLabel","McTab","McTabContent","McLightTabsCssStyler","McAlignTabsCenterCssStyler","McAlignTabsEndCssStyler","McStretchTabsCssStyler","McTabLabelWrapper","McTabBody","McTabBodyPortal","McTabHeader","McTagBase","_McTagMixinBase","ngAfterContentInit","_addClassModificatorForIcons","icons","contentChildren","iconElement","previousElementSibling","nextElementSibling","nextSibling","classList","add","previousSibling","firstIconElement","secondIconElement","McIcon","PlatformModule","MC_TEXTAREA_VALUE_ACCESSOR","McTextareaBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","McTextareaMixinBase","mixinErrorState","McTextarea","inputValueAccessor","canGrow","focused","controlType","uid","_required","lineHeight","freeRowsHeight","minHeight","valueAccessor","previousNativeValue","growObserver","fromEvent","growSubscription","grow","bind","McTextarea_1","_id","paddingTop","paddingBottom","ngOnChanges","ngDoCheck","updateErrorState","dirtyCheckNativeValue","textarea","outerHeight","window","diff","scrollHeight","focusChanged","isFocused","isBadInput","newValue","validity","badInput","getGrowHeight","toString","[class.mc-textarea-resizable]","[attr.placeholder]","[disabled]","[required]","McTextareaModule","FormsModule","TimeParts","TimeFormats","TIMEFORMAT_PLACEHOLDERS","HHmmss","HHmm","DEFAULT_TIME_FORMAT","HOURS_MINUTES_SECONDS_REGEXP","RegExp","HOURS_MINUTES_REGEXP","HOURS_ONLY_REGEXP","uniqueComponentIdSuffix","validatorOnChange","noop","validator","MC_INPUT_VALUE_ACCESSOR","McTimepickerBase","McTimepickerMixinBase","ɵ1","validate","c","registerOnValidatorChange","McTimepicker","_minTime","_maxTime","onChange","placeholder","Validators","compose","parseValidator","minTimeValidator","maxTimeValidator","McTimepicker_1","applyInputChanges","_timeFormat","formatValue","timeFormatKey","minValue","minDateTime","getDateFromTimeString","maxValue","maxDateTime","onTouched","onBlur","onPaste","clipboardUserInput","clipboardData","getData","onInput","initialCursorStart","selectionStart","initialCursorEnd","selectionEnd","isAutocompleteTriggered","getParsedTimeParts","hoursOnly","hoursAndMinutes","hoursAndMinutesAndSeconds","doTimestringReformat","errors","createSelectionOfTimeComponentInInput","setProperty","getTimeStringFromDate","timeFormat","onKeyDown","getKeyCode","upDownTimeByArrowKeys","switchSelectionBetweenTimeparts","applyParams","changedTime","timeToApply","currentDateTimeInput","control","updateValueAndValidity","cursorPos","modifiedTimePart","getTimeEditMetrics","incrementTime","decrementTime","getCursorPositionOfPrevTimePartStart","getCursorPositionOfNextTimePartStart","code","newEditParams","cursorStartPosition","cursorEndPosition","dateVal","whatToIncrement","seconds","getTimeDigitsFromDate","hours","minutes","getDateFromTimeDigits","whatToDecrement","timeString","timeDevider","nextDividerPos","cursorPosition","minutesIndex","hoursIndex","secondsIndex","tempVal","getNumberWithLeadingZero","getHours","getMinutes","getSeconds","match","trim","Number","resultDate","Date","isNaN","getTime","digit","mcTimepickerParse","text","isTimeLowerThenMin","mcTimepickerLowerThenMintime","isTimeGreaterThenMax","mcTimepickerHigherThenMaxtime","timeToCompare","[attr.time-format]","[attr.min-time]","[attr.max-time]","[attr.value]","(input)","(paste)","NG_VALIDATORS","useValue","McTimepickerModule","transform","minWidth","opacity","query","animateChild","MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","McSelectBase","_scrollStrategyFactory","_triggerFontSize","_panelDoneAnimating","_panelDoneAnimatingStream","defer","onSelectionChange","onStable","switchMap","openedChange","_openedStream","filter","o","_closedStream","oneMoreText","_uid","o1","o2","_placeholder","getMcSelectDynamicMultipleError","getMcSelectNonFunctionValueError","SelectionModel","added","removed","startWith","ngAfterViewInit","toggle","fontSize","selectedOptions","viewValue","reverse","isEmpty","_handleKeydown","_onFadeInDone","_onFocus","_onBlur","PAGE_DOWN","setNextPageItemActive","McTreeSelection","FocusKeyManager","updateScrollSize","withScrollSize","floor","_getHeight","setFocusedOption","updateActiveItem","withShift","previousIndex_1","previousActiveItemIndex","activeIndex_1","setSelected","withCtrl","_canDeselectLast","autoSelect","_emitNavigationEvent","toggleFocusedOption","focusedIndex","_isValidIndex","focusedOption","renderNodeChanges","dataDiffer","viewContainer","parentData","_dataDiffer","_nodeOutlet","arrayOfInstances","_embeddedViews","view","viewDef","def","nodes","node","nodeMatchedQueries","matchedQueryIds","nodeData","nodeIndex","reset","notifyOnChanges","getClientRects","navigationChange","McTreeNavigationChange","noUnselect","CdkTreeNodeOutlet","McTreeNodeOption","McTreeSelection_1","[tabIndex]","role","CdkTree","IterableDiffers","_McTreeSelectionBase","MC_TREE_DIRECTIVES","McTreeNodeDef","McTreeNodePadding","McTreeModule","CdkTreeModule","McTreeFlattener","transformFunction","getLevel","isExpandable","getChildren","_flattenNode","level","resultNodes","parentMap","flatNode","children","child","childParentMap","flattenNodes","structuredData","expandFlattenedNodes","treeControl","results","currentExpand","expand","i","isExpanded","McTreeFlatDataSource","treeFlattener","initialData","_flattenedData","_expandedData","_data","dataNodes","connect","collectionViewer","viewChange","expansionModel","disconnect","DataSource","McTreeNestedDataSource","arguments","CdkPortal","ctorParameters","McTabBase","mcTabMixinBase","viewContainerRef","textLabel","contentPortal","hasOwnProperty","TemplatePortal","explicitContent","implicitContent","read","mcTabsAnimations","translateTab","componentFactoryResolver","centeringSub","Subscription","EMPTY","leavingSub","beforeCentering","isCenterPosition","bodyPosition","isCentering","content","afterLeavingCenter","ComponentFactoryResolver","CdkPortalOutlet","dir","changeDetectorRef","onCentering","onCentered","animationDuration","dirChangeSubscription","computePositionAnimationState","positionIndex","computePositionFromOrigin","onTranslateTabStarted","toState","onTranslateTabComplete","fromState","getLayoutDirection","PortalHostDirective","McTabLabelWrapperBase","mcTabLabelWrapperMixinBase","getOffsetLeft","offsetLeft","getOffsetWidth","offsetWidth","McTabHeaderBase","viewportRuler","showPaginationControls","disableScrollAfter","disableScrollBefore","selectFocusedIndex","indexFocused","_scrollDistance","selectedIndexChanged","destroyed","_selectedIndex","coercedValue","keyManager","isValidIndex","focusIndex","v","getMaxScrollDistance","scrollDistanceChanged","checkScrollingControls","ngAfterContentChecked","tabLabelCount","labelWrappers","updatePagination","scrollToLabel","updateTabScrollPosition","dirChange","observableOf","resize","realign","withWrap","requestAnimationFrame","newFocusIndex","setTabFocus","onContentChanges","zoneCallback","checkPaginationEnabled","tab","containerEl","tabListContainer","scrollLeft","scrollWidth","scrollDistance","translateX","tabList","scrollHeader","scrollDir","viewLength","labelIndex","selectedLabel","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","isEnabled","[class.mc-tab-header__pagination-controls_enabled]","[class.mc-tab-header_rtl]","nextId","McTabChangeEvent","MC_TABS_CONFIG","McTabGroupBase","mcTabGroupMixinBase","lightTabs","defaultConfig","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","indexToSelect","tabBodyWrapperHeight","tabsSubscription","tabLabelSubscription","_dynamicHeight","lightTab","groupId","clampTabIndex","isFirstRun_1","createChangeEvent","tabs","subscribeToTabLabels","getTabLabelId","getTabContentId","setTabBodyWrapperHeight","tabHeight","wrapper","tabBodyWrapper","removeTabBodyWrapperHeight","handleClick","tabHeader","getTabIndex","[class.mc-tab-group_dynamic-height]","[class.mc-tab-group_inverted-header]","McTabNavBase","modalControl","closeAll","McModalService","mcOnCancel","mcCloseByESC","mcWidth","ModalBuilderForService","getInstance","confirm","confirmType","mcOnOk","mcModalType","mcClassName","mcMaskClosable","success","simpleConfirm","delete","mcCancelText","Injectable","McModalControlService","McModalModule","McButtonModule","McModalComponent","CssUnitPipe","MC_NAVBAR_CONTAINER","MC_NAVBAR_ITEM","MC_NAVBAR_BRAND","MC_NAVBAR_TITLE","McNavbarLogo","McNavbarBrand","McNavbarTitle","McNavbarItemBase","_McNavbarMixinBase","McNavbarItem","_platform","_cdRef","dropdownItems","isCollapsed","_subscription","encodeURI","dropdownContent","denyClickIfDisabled","_focusMonitor$","hasDropdownContent","listenClickOutside","startListenFocusDropdownItems","stopListenFocusDropdownItems","isActiveDropdownLink","link","isBrowser","location","href","handleClickByItem","toggleDropdown","isNavbarItem","target","contains","handleClickByDropdownItem","forceCloseDropdown","_dropdownElements","el","events","eventListeners","hasAttribute","stopImmediatePropagation","[attr.disabled]","Platform","McNavbarContainer","CollapsibleItem","_collapsed","processCollapsed","collapsed","updateCollapsedClass","CachedItemWidth","itemsForCollapse","_collapsedItemsWidth","calculateAndCacheCollapsedItemsWidth","updateTitle","acc","getTitle","computedTitle","getAttribute","decodeURI","innerText","removeAttribute","McNavbar","forceRecalculateItemsWidth","resizeDebounceInterval","firstLevelElement","secondLevelElements","resizeObserver","debounceTime","_resizeSubscription","updateCollapsed","_itemsWidths","calculateAndCacheItemsWidth","_totalItemsWidths","calculateAndCacheTotalItemsWidth","collapseDelta","maxAllowedWidth","itemsWidths","canCollapse","collapsedItemsWidth","getOuterElementWidth","getPropertyValue","allItemsSelector","allItems","from","getItemsForCollapse","McNavbarModule","idIterator","McProgressBarBase","_McProgressBarMixinBase","McProgressBar","mode","McProgressBarModule","McProgressSpinnerBase","_McProgressSpinnerMixinBase","McProgressSpinner","percentage","McProgressSpinnerModule","McRadioChange","McRadioGroupBase","_McRadioGroupMixinBase","MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","McRadioGroup","_changeDetector","_name","_selected","_isInitialized","_labelPosition","controlValueAccessorChangeFn","updateRadioButtonNames","markRadiosForCheck","updateSelectedRadioFromValue","checkSelectedRadioButton","toBoolean","touch","emitChangeEvent","_radios","radio","isAlreadySelected","McRadioButton","McRadioButtonBase","_McRadioButtonMixinBase","radioGroup","_radioDispatcher","removeUniqueSelectionListener","newCheckedState","notify","newDisabledState","required","onInputClick","onInputChange","groupValueChanged","[class.mc-checked]","UniqueSelectionDispatcher","McRadioModule","McTreeNodeDef_1","CdkTreeNodeDef","_baseLeftPadding","_iconWidth","_indent","McTreeNodePadding_1","_withIcon","_paddingIndent","nodeLevel","_treeNode","_tree","_level","leftPadding","_setPadding","CdkTreeNodePadding","treeSelection","_hasFocus","McTreeNodeOption_1","_handleFocus","_handleBlur","_handleClick","tabindex","[class.mc-selected]","[class.mc-focused]","[attr.aria-expanded]","[attr.aria-level]","(click)","CdkTreeNode","McTreeSelectionChange","_differs","rawValue","log","_onKeyDown","collapse","PAGE_UP","setPreviousPageItemActive","MC_SELECTION_LIST_VALUE_ACCESSOR","McListSelection","_McListSelectionMixinBase","McListBase","McList","McListSubheaderCssStyler","McListItemBase","McListItem","_element","_lineSetter","McLineSetter","_lines","_getHostElement","McLine","McListModule","McLineModule","McListOption","McLinkBase","_McLinkBase","McLink","McLinkModule","parentService","rootOpenModals","rootAfterAllClose","rootRegisteredMetaMap","afterAllClose","openModals","registeredMetaMap","registerModal","modalRef","hasRegistered","afterOpenSubscription","afterOpen","afterCloseSubscription","afterClose","removeOpenModal","has","SkipSelf","McModalRef","ModalUtil","document","lastPosition","listenDocumentClick","getLastClickPosition","clientX","clientY","ModalUtil$1","cfr","mcMeasureScrollbarService","changeDetector","_mcVisible","mcZIndex","_mcClosable","_mcMask","_mcMaskClosable","mcAfterOpen","mcAfterClose","mcOkType","_mcOkLoading","_mcCancelLoading","transformOrigin","mcGetContainer","mcOkText","animationState","isComponent","mcContent","createDynamicComponent","isModalButtons","mcFooter","formatModalButtons","container","HTMLElement","OverlayRef","handleVisibleStateChange","firstChange","contentComponentRef","bodyContainer","insert","autoFocusButtonOk","changeVisibleFromInside","destroy","triggerOk","onClickOkCancel","triggerCancel","getContentComponentRef","getContentComponent","getElement","onClickMask","mcMask","isModalType","type","onClickCloseBtn","ok","cancel","loadingKey","caseClose_1","doClose","isPromise","handleThen","catch","isNonEmptyString","isTemplateRef","Type","animation","closeResult","changeBodyOverflow","animateTo","getButtonCallableProp","prop","args","onButtonClick","button","loading","changeAnimationState","maskAnimationClassMap","modalAnimationClassMap","_b","isVisible","updateTransformOrigin","buttons","autoLoading","component","factory","resolveComponentFactory","childInjector","Injector","parent","parentInjector","mcComponentParams","assign","modalElement","modalContainer","plusNum","body","scrollBarWidth","DOCUMENT","McMeasureScrollbarService","defaultUnit","formatted","Pipe","createModal","changeProps","destroyModal","keydownEvents","McFormFieldBase","_McFormFieldMixinBase","_labelId","hovered","_validateControlChild","_control","_numberControl","hasStepper","_stepper","stepUp","onStepUp","stepDown","onStepDown","valueChanges","clearValue","hasCleaner","onHoverChanged","isHovered","step","_shouldForward","getMcFormFieldMissingControlError","_hint","_suffix","_cleaner","McFormFieldNumberControl","McStepper","McHint","McSuffix","McPrefix","McCleaner","[class.mc-form-field_invalid]","[class.mc-form-field_has-prefix]","[class.mc-form-field_has-suffix]","[class.mc-form-field_has-cleaner]","[class.mc-form-field_has-stepper]","[class.ng-untouched]","[class.ng-touched]","[class.ng-pristine]","[class.ng-dirty]","[class.ng-valid]","[class.ng-invalid]","[class.ng-pending]","(mouseenter)","(mouseleave)","McFormFieldWithoutBorders","res","MC_INPUT_INVALID_TYPES","BIG_STEP","SMALL_STEP","McInputBase","_McInputMixinBase","McNumberInput","_model","bigStep","isDigit","Infinity","_host","self","getPrototypeOf","normalizeSplitter","McNumberInput_1","_focusChanged","minuses","NUMPAD_MINUS","DASH","FF_MINUS","serviceKeys","DELETE","BACKSPACE","TAB","arrows","allowedKeys","concat","isIEPeriod","isNotIEPeriod","metaKey","C","V","X","F1","F12","EDGE","TRIDENT","ZERO","NINE","NUMPAD_ZERO","NUMPAD_NINE","valueAsNumber","update","replace","isFloat","isInt","test","NgModel","McInput","_type","_neverEmptyInputTypes","t","getSupportedInputTypes","_inputValueAccessor","_previousNativeValue","McInput_1","_validateType","_dirtyCheckNativeValue","_onInput","_isNeverEmpty","_isBadInput","getMcInputUnsupportedTypeError","McInputMono","MIN_VALIDATOR","MinValidator","_createValidator","_validator","[attr.min]","MAX_VALIDATOR","MaxValidator","[attr.max]","McInputModule","McContentComponent","[class.mc-layout-content]","McFooterComponent","[class.mc-layout-footer]","McHeaderComponent","[class.mc-layout-header]","McLayoutComponent","hasSidebar","[class.mc-layout]","[class.mc-layout-has-sidebar]","McSidebarComponent","mcLayoutComponent","_mcWidth","mcCollapsedWidth","mcCollapsedChange","collapsible","mcCollapsed","[class.mc-layout-sidebar]","[class.mc-layout-sidebar-collapsed]","[style.flex]","[style.max-width.px]","[style.min-width.px]","[style.width.px]","Host","McLayoutModule","listSelection","checkboxPosition","_reportValueChange","wasSelected_1","_removeOptionFromList","getLabel","_text","textContent","McListSelectionChange","McListSelectionBase","horizontal","_modelChanges","_tempValues","_setOptionsFromValues","_i","_c","selectAll","deselectAll","values","getSelectedOptionValues","listOption","optionIndex","setPreviousItemActive","setNextItemActive","_getOptionByValue","Boolean","McIconButton","McButton","McAnchor","McButtonCSSStyler","McIconButtonCSSStyler","McCard","readonly","selectedChange","_tabIndex","hostElement","onClick","[class.mc-card_readonly]","[class.mc-card_selected]","McCardModule","MC_CHECKBOX_CLICK_ACTION","MC_CHECKBOX_CONTROL_VALUE_ACCESSOR","McCheckbox","TransitionCheckState","McCheckboxChange","McCheckboxBase","_McCheckboxMixinBase","_clickAction","indeterminateChange","_currentAnimationClass","_currentCheckState","Init","_controlValueAccessorChangeFn","_indeterminate","focusOrigin","_onInputFocusChange","changed","_transitionCheckState","Indeterminate","Checked","Unchecked","indeterminate","newState","oldState","[class.mc-indeterminate]","[class.mc-checkbox-label-before]","MC_CHECKBOX_REQUIRED_VALIDATOR","McCheckboxRequiredValidator","[attr.required]","CheckboxRequiredValidator","McCheckboxModule","McDivider","_vertical","_inset","[attr.aria-orientation]","[class.mc-divider-vertical]","[class.mc-divider-inset]","McDividerModule","McDropdownContent","_template","_componentFactoryResolver","_appRef","_injector","_viewContainerRef","_document","_attached","context","_outlet","DomPortalOutlet","createElement","parentNode","insertBefore","outletElement","isAttached","ApplicationRef","MC_DROPDOWN_PANEL","McDropdownItemBase","_McDropdownItemMixinBase","McDropdownItem","_parentDropdownPanel","addItem","removeItem","_getTabIndex","_checkDisabled","textNodeType","TEXT_NODE","output","childNodes","length_1","nodeType","mcDropdownAnimations","transformDropdown","fadeInItems","MC_DROPDOWN_DEFAULT_OPTIONS","providedIn","MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY","McDropdown","_defaultOptions","_classList","_panelAnimationState","_animationDone","backdropClass","closed","_xPosition","xPosition","_yPosition","yPosition","_items","_itemChanges","_tabSubscription","_overlapTrigger","overlapTrigger","_hasBackdrop","hasBackdrop","McDropdown_1","throwMcDropdownInvalidPositionX","setPositionClasses","throwMcDropdownInvalidPositionY","classes","obj","className","setFocusOrigin","focusFirstItem","lazyContent","resetActiveItem","posX","posY","_startAnimation","_resetAnimation","_onAnimationDone","_isAnimating","MC_DROPDOWN_SCROLL_STRATEGY","MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER","MC_DROPDOWN_SCROLL_STRATEGY_FACTORY","McDropdownTrigger","_openedBy","dropdownOpened","dropdownClosed","_opened","_closeSubscription","_hoverSubscription","dropdown","_check","_cleanUpSubscriptions","_setPosition","_closingActions","_init","opened","_reset","_setIsOpened","isOpen","throwMcDropdownMissingError","templateRef","config","_getOverlayConfig","_subscribeToPositions","OverlayConfig","withLockedPosition","originFallbackX","overlayFallbackY","originFallbackY","_d","overlayFallbackX","offsetY","backdrop","backdropClick","(touchstart)","McDropdownModule","__extends","d","__","constructor","extendStatics","__decorate","decorators","desc","r","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","isBoolean","val","MC_SANITY_CHECKS_FACTORY","base","class_1","defaultColor","Default","_color","colorPalette","defaultTabIndex","errorState","matcher","errorStateMatcher","isErrorState","optionsArray","groups","groupCounter","optionHeight","currentScrollPosition","optionOffset","arrayMap","array","iteratee","baseValues","object","props","scrollStrategies","reposition","inputType","sanitizeNumber","isFinite","getPrecision","arr","pow","value1","value2","precision","scrollThrottle","setPrototypeOf","__proto__","p","__assign","s","n","MC_SANITY_CHECKS","_sanityChecksEnabled","_hasDoneGlobalChecks","_window","_areChecksEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","_isTestEnv","doctype","testElement","computedStyle","display","removeChild","BidiModule","_setLineClass","count","_resetClasses","_setClass","isAdd","ShowOnDirtyErrorStateMatcher","form","invalid","dirty","submitted","touched","McPseudoCheckbox","McPseudoCheckboxModule","scrollbarMeasure","overflow","initScrollBarWidth","_scrollbarWidth","scrollDiv","scrollProp","clientWidth","McOptgroupBase","_McOptgroupMixinBase","_uniqueOptgroupIdCounter","[class.mc-optgroup-disabled]","[attr.aria-labelledby]","_uniqueIdCounter","McOptionSelectionChange","_parent","_active","_mostRecentViewValue","disableRipple","_emitSelectionChangeEvent","setActiveStyles","setInactiveStyles","ngAfterViewChecked","[class.mc-option-multiple]","MC_LABEL_GLOBAL_OPTIONS","topCenter","topLeft","topRight","rightTop","rightBottom","bottomCenter","bottomLeft","bottomRight","leftTop","leftBottom","McIconCSSStyler","McIconBase","_McIconMixinBase","Empty","iconName","queries","McButtonBase","_McButtonMixinBase","_haltDisabledEvents"],"mappings":"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"}