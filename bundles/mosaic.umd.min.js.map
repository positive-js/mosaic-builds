{"version":3,"file":"mosaic.umd.min.js","sources":["../../src/lib/core/select/events.ts","../../src/lib/core/select/constants.ts","../../src/lib/select/select.component.ts","../../src/lib/timepicker/timepicker.constants.ts","../../src/lib/sidepanel/sidepanel.service.ts","../../src/lib/sidepanel/sidepanel-directives.ts","../../src/lib/sidepanel/sidepanel.module.ts","../../src/lib/splitter/splitter.component.ts","../../src/lib/splitter/splitter.module.ts","../../src/lib/toggle/toggle.component.ts","../../src/lib/toggle/toggle.module.ts","../../src/lib/tooltip/tooltip.component.ts","../../src/lib/tooltip/tooltip.module.ts","../../src/lib/version.ts","../../src/lib/tree-select/tree-select.component.ts","../../src/lib/tree-select/tree-select.module.ts","../../src/lib/textarea/textarea.component.ts","../../src/lib/textarea/textarea.module.ts","../../src/lib/timepicker/timepicker.ts","../../src/lib/timepicker/timepicker.module.ts","../../src/lib/sidepanel/sidepanel-config.ts","../../src/lib/sidepanel/sidepanel-animations.ts","../../src/lib/sidepanel/sidepanel-container.component.ts","../../src/lib/sidepanel/sidepanel-ref.ts","../../src/lib/select/select.module.ts","../../src/lib/tabs/tab-header.ts","../../src/lib/tabs/tab-group.ts","../../src/lib/tabs/tab-nav-bar/tab-nav-bar.ts","../../src/lib/tabs/tabs.module.ts","../../src/lib/tag/tag.component.ts","../../src/lib/tag/tag.module.ts","../../src/lib/progress-spinner/progress-spinner.component.ts","../../src/lib/progress-spinner/progress-spinner.module.ts","../../src/lib/radio/radio.component.ts","../../src/lib/radio/radio.module.ts","../../src/lib/tree/node.ts","../../src/lib/tree/padding.ts","../../src/lib/tree/toggle.ts","../../src/lib/tree/tree-option.ts","../../src/lib/tree/tree-selection.ts","../../src/lib/tree/tree.module.ts","../../src/lib/tree/data-source/flat-data-source.ts","../../src/lib/tree/data-source/nested-data-source.ts","../../src/lib/tabs/tab-content.ts","../../src/lib/tabs/tab-label.ts","../../src/lib/tabs/tab.ts","../../src/lib/tabs/tabs-animations.ts","../../src/lib/tabs/tab-body.ts","../../src/lib/tabs/tab-label-wrapper.ts","../../src/lib/modal/modal.component.ts","../../src/lib/modal/css-unit.pipe.ts","../../src/lib/modal/modal.service.ts","../../src/lib/modal/modal.module.ts","../../src/lib/navbar/navbar.component.ts","../../src/lib/navbar/navbar.module.ts","../../src/lib/progress-bar/progress-bar.component.ts","../../src/lib/progress-bar/progress-bar.module.ts","../../src/lib/dropdown/dropdown.component.ts","../../src/lib/dropdown/dropdown-trigger.ts","../../src/lib/dropdown/dropdown.module.ts","../../src/lib/layout/content.component.ts","../../src/lib/layout/footer.component.ts","../../src/lib/layout/header.component.ts","../../src/lib/layout/layout.component.ts","../../src/lib/layout/sidebar.component.ts","../../src/lib/layout/layout.module.ts","../../src/lib/list/list-selection.component.ts","../../src/lib/list/list.component.ts","../../src/lib/list/list.module.ts","../../src/lib/link/link.component.ts","../../src/lib/link/link.module.ts","../../src/lib/modal/modal-control.service.ts","../../src/lib/modal/modal-ref.class.ts","../../src/lib/modal/modal-util.ts","../../src/lib/datepicker/calendar.ts","../../src/lib/datepicker/datepicker-animations.ts","../../src/lib/datepicker/datepicker.ts","../../src/lib/datepicker/datepicker-input.ts","../../src/lib/datepicker/datepicker-toggle.ts","../../src/lib/datepicker/datepicker-module.ts","../../src/lib/divider/divider.component.ts","../../src/lib/divider/divider.module.ts","../../src/lib/dropdown/dropdown-content.ts","../../src/lib/dropdown/dropdown-panel.ts","../../src/lib/dropdown/dropdown-item.ts","../../src/lib/dropdown/dropdown-animations.ts","../../src/lib/input/input.ts","../../src/lib/input/input-number-validators.ts","../../src/lib/input/input.module.ts","../../src/lib/datepicker/datepicker-intl.ts","../../src/lib/datepicker/calendar-body.ts","../../src/lib/datepicker/month-view.ts","../../src/lib/datepicker/multi-year-view.ts","../../src/lib/datepicker/year-view.ts","../../src/lib/button-toggle/button-toggle.component.ts","../../src/lib/button-toggle/button-toggle.module.ts","../../src/lib/card/card.component.ts","../../src/lib/card/card.module.ts","../../src/lib/checkbox/checkbox-config.ts","../../src/lib/checkbox/checkbox.ts","../../src/lib/checkbox/checkbox-required-validator.ts","../../src/lib/checkbox/checkbox-module.ts","../../src/lib/icon/icon.component.ts","../../src/lib/icon/icon.module.ts","../../src/lib/form-field/cleaner.ts","../../src/lib/form-field/form-field-control.ts","../../src/lib/form-field/form-field-number-control.ts","../../src/lib/form-field/hint.ts","../../src/lib/form-field/prefix.ts","../../src/lib/form-field/stepper.ts","../../src/lib/form-field/suffix.ts","../../src/lib/form-field/form-field.ts","../../src/lib/form-field/form-field.module.ts","../../src/lib/input/input-value-accessor.ts","../../src/lib/input/stepperUtils.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/utils/utils.ts","../../src/lib/core/common-behaviors/common-module.ts","../../src/lib/core/common-behaviors/disabled.ts","../../src/lib/core/common-behaviors/color.ts","../../src/lib/core/common-behaviors/tabindex.ts","../../src/lib/core/common-behaviors/error-state.ts","../../src/lib/core/option/option.ts","../../src/lib/core/overlay/overlay-position-map.ts","../../src/lib/core/select/errors.ts","../../src/lib/form-field/form-field-errors.ts","../../src/lib/input/input-errors.ts","../../src/lib/datepicker/datepicker-errors.ts","../../src/lib/dropdown/dropdown-errors.ts","../../src/lib/core/line/line.ts","../../src/lib/core/error/error-options.ts","../../src/lib/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../src/lib/core/selection/index.ts","../../src/lib/core/services/measure-scrollbar.service.ts","../../src/lib/core/option/optgroup.ts","../../src/lib/core/option/index.ts","../../src/lib/core/label/label-options.ts","../../src/lib/core/animation/fade-animations.ts","../../src/lib/core/animation/animation.ts","../../src/lib/core/select/animations.ts","../../src/lib/button/button.component.ts","../../src/lib/button/button.module.ts"],"sourcesContent":["export const selectEvents = 'selectEvents';\n","import { InjectionToken } from '@angular/core';\nimport { IScrollStrategy, Overlay, RepositionScrollStrategy } from '@ptsecurity/cdk/overlay';\n\n\n/** The max height of the select's overlay panel */\nexport const SELECT_PANEL_MAX_HEIGHT = 224;\n\n/** The panel's padding on the x-axis */\nexport const SELECT_PANEL_PADDING_X = 1;\n\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\n/* tslint:disable-next-line:no-magic-numbers */\nexport const SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nexport const SELECT_PANEL_VIEWPORT_PADDING = 8;\n\n\n/** Injection token that determines the scroll handling while a select is open. */\nexport const MC_SELECT_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-select-scroll-strategy');\n\n/** @docs-private */\nexport function mcSelectScrollStrategyProviderFactory(overlay: Overlay):\n    () => RepositionScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MC_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: mcSelectScrollStrategyProviderFactory\n};\n","/* tslint:disable:no-empty */\n\nimport {\n    AfterContentInit, AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren,\n    Directive,\n    DoCheck,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Input,\n    isDevMode,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    QueryList, Renderer2,\n    Self,\n    SimpleChanges,\n    ViewChild, ViewChildren,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { ActiveDescendantKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    RIGHT_ARROW,\n    SPACE,\n    UP_ARROW,\n    A\n} from '@ptsecurity/cdk/keycodes';\nimport {\n    CdkConnectedOverlay,\n    ViewportRuler\n} from '@ptsecurity/cdk/overlay';\nimport {\n    countGroupLabelsBeforeOption,\n    getOptionScrollPosition,\n    CanDisable,\n    CanDisableCtor,\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    HasTabIndex,\n    HasTabIndexCtor,\n    MC_OPTION_PARENT_COMPONENT,\n    McOptgroup,\n    McOption,\n    McOptionSelectionChange,\n    mixinDisabled,\n    mixinErrorState,\n    mixinTabIndex,\n    mcSelectAnimations,\n\n    SELECT_PANEL_INDENT_PADDING_X,\n    SELECT_PANEL_MAX_HEIGHT,\n    SELECT_PANEL_PADDING_X,\n    SELECT_PANEL_VIEWPORT_PADDING,\n\n    getMcSelectDynamicMultipleError,\n    getMcSelectNonFunctionValueError,\n    getMcSelectNonArrayValueError,\n    MC_SELECT_SCROLL_STRATEGY\n} from '@ptsecurity/mosaic/core';\nimport { McFormField, McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { McTag } from '@ptsecurity/mosaic/tag';\nimport { defer, merge, Observable, Subject } from 'rxjs';\nimport {\n    filter,\n    map,\n    startWith,\n    switchMap,\n    take,\n    takeUntil,\n    distinctUntilChanged\n} from 'rxjs/operators';\n\n\nlet nextUniqueId = 0;\n\n/** The height of the select items in `em` units. */\nexport const SELECT_ITEM_HEIGHT_EM = 2;\n\n/** Change event object that is emitted when the select value has changed. */\nexport class McSelectChange {\n    constructor(public source: McSelect, public value: any) {}\n}\n\nexport class McSelectBase {\n    constructor(\n        public elementRef: ElementRef,\n        public defaultErrorStateMatcher: ErrorStateMatcher,\n        public parentForm: NgForm,\n        public parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl\n    ) {}\n}\n\nconst McSelectMixinBase: CanDisableCtor & HasTabIndexCtor & CanUpdateErrorStateCtor &\n    typeof McSelectBase = mixinTabIndex(mixinDisabled(mixinErrorState(McSelectBase)));\n\n\n@Directive({ selector: 'mc-select-trigger' })\nexport class McSelectTrigger {}\n\n\n@Component({\n    selector: 'mc-select',\n    exportAs: 'mcSelect',\n    templateUrl: 'select.html',\n    styleUrls: ['./select.css'],\n    inputs: ['disabled', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'tabIndex',\n        class: 'mc-select',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-select-invalid]': 'errorState',\n        '[class.mc-select-required]': 'required',\n        '(keydown)': 'handleKeydown($event)',\n        '(focus)': 'onFocus()',\n        '(blur)': 'onBlur()',\n        '(window:resize)': 'calculateHiddenItems()'\n    },\n    animations: [\n        mcSelectAnimations.transformPanel,\n        mcSelectAnimations.fadeInContent\n    ],\n    providers: [\n        { provide: McFormFieldControl, useExisting: McSelect },\n        { provide: MC_OPTION_PARENT_COMPONENT, useExisting: McSelect }\n    ]\n})\nexport class McSelect extends McSelectMixinBase implements\n    AfterContentInit, AfterViewInit, OnChanges, OnDestroy, OnInit, DoCheck, ControlValueAccessor, CanDisable,\n    HasTabIndex, McFormFieldControl<any>, CanUpdateErrorState {\n\n    /** A name for this control that can be used by `mc-form-field`. */\n    controlType = 'mc-select';\n\n    hiddenItems: number = 0;\n    oneMoreText: string = '...ещё';\n\n    /** The last measured value for the trigger's client bounding rect. */\n    triggerRect: ClientRect;\n\n    /** The cached font-size of the trigger element. */\n    triggerFontSize = 0;\n\n    /** Deals with the selection logic. */\n    selectionModel: SelectionModel<McOption>;\n\n    /** Manages keyboard events for options in the panel. */\n    keyManager: ActiveDescendantKeyManager<McOption>;\n\n    /** The IDs of child options to be passed to the aria-owns attribute. */\n    optionIds: string = '';\n\n    /** The value of the select panel's transform-origin property. */\n    transformOrigin: string = 'top';\n\n    /** Whether the panel's animation is done. */\n    panelDoneAnimating: boolean = false;\n\n    /** Emits when the panel element is finished transforming in. */\n    panelDoneAnimatingStream = new Subject<string>();\n\n    /** Strategy that will be used to handle scrolling while the select panel is open. */\n    scrollStrategy = this._scrollStrategyFactory();\n\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     */\n    offsetY = 0;\n\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     */\n    positions = [\n        {\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top'\n        },\n        {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'bottom'\n        }\n    ];\n\n    @ViewChild('trigger') trigger: ElementRef;\n\n    @ViewChild('panel') panel: ElementRef;\n\n    @ViewChild(CdkConnectedOverlay) overlayDir: CdkConnectedOverlay;\n\n    @ViewChildren(McTag) tags: QueryList<McTag>;\n\n    /** User-supplied override of the trigger element. */\n    @ContentChild(McSelectTrigger) customTrigger: McSelectTrigger;\n\n    /** All of the defined select options. */\n    @ContentChildren(McOption, { descendants: true }) options: QueryList<McOption>;\n\n    /** All of the defined groups of options. */\n    @ContentChildren(McOptgroup) optionGroups: QueryList<McOptgroup>;\n\n    /** Classes to be passed to the select panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[] | Set<string> | { [key: string]: any };\n\n    /** Object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     */\n    @Input() sortComparator: (a: McOption, b: McOption, options: McOption[]) => number;\n\n    /** Combined stream of all of the child options' change events. */\n    readonly optionSelectionChanges: Observable<McOptionSelectionChange> = defer(() => {\n        if (this.options) {\n            return merge(...this.options.map((option) => option.onSelectionChange));\n        }\n\n        return this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n    }) as Observable<McOptionSelectionChange>;\n\n    /** Event emitted when the select panel has been toggled. */\n    @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the select has been opened. */\n    @Output('opened') readonly openedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => o), map(() => {}));\n\n    /** Event emitted when the select has been closed. */\n    @Output('closed') readonly closedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => !o), map(() => {}));\n\n    /** Event emitted when the selected value has been changed by the user. */\n    @Output() readonly selectionChange: EventEmitter<McSelectChange> = new EventEmitter<McSelectChange>();\n\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n    @Input()\n    get placeholder(): string {\n        return this._placeholder;\n    }\n\n    set placeholder(value: string) {\n        this._placeholder = value;\n\n        this.stateChanges.next();\n    }\n\n    private _placeholder: string;\n\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n\n        this.stateChanges.next();\n    }\n\n    private _required: boolean = false;\n\n    @Input()\n    get multiple(): boolean {\n        return this._multiple;\n    }\n\n    set multiple(value: boolean) {\n        if (this.selectionModel) {\n            throw getMcSelectDynamicMultipleError();\n        }\n\n        this._multiple = coerceBooleanProperty(value);\n    }\n\n    private _multiple: boolean = false;\n\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    @Input()\n    get compareWith() {\n        return this._compareWith;\n    }\n\n    set compareWith(fn: (o1: any, o2: any) => boolean) {\n        /* tslint:disable-next-line:strict-type-predicates */\n        if (typeof fn !== 'function') {\n            throw getMcSelectNonFunctionValueError();\n        }\n\n        this._compareWith = fn;\n\n        if (this.selectionModel) {\n            // A different comparator means the selection could change.\n            this.initializeSelection();\n        }\n    }\n\n    /** Value of the select control. */\n    @Input()\n    get value(): any {\n        return this._value;\n    }\n\n    set value(newValue: any) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n\n    private _value: any;\n\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this.uid;\n        this.stateChanges.next();\n    }\n\n    private _id: string;\n\n    /** Whether the select is focused. */\n    get focused(): boolean {\n        return this._focused || this._panelOpen;\n    }\n\n    /**\n     * @deprecated Setter to be removed as this property is intended to be readonly.\n     * @breaking-change 8.0.0\n     */\n    set focused(value: boolean) {\n        this._focused = value;\n    }\n\n    private _focused = false;\n\n    get panelOpen(): boolean {\n        return this._panelOpen;\n    }\n\n    private _panelOpen = false;\n\n    /** The scroll position of the overlay panel, calculated to center the selected option. */\n    private scrollTop = 0;\n\n    /** Unique id for this input. */\n    private readonly uid = `mc-select-${nextUniqueId++}`;\n\n    /** Emits whenever the component is destroyed. */\n    private readonly destroy = new Subject<void>();\n\n    constructor(\n        private readonly _viewportRuler: ViewportRuler,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        private readonly _ngZone: NgZone,\n        private readonly _renderer: Renderer2,\n        defaultErrorStateMatcher: ErrorStateMatcher,\n        elementRef: ElementRef,\n        @Optional() private readonly _dir: Directionality,\n        @Optional() parentForm: NgForm,\n        @Optional() parentFormGroup: FormGroupDirective,\n        @Optional() private readonly _parentFormField: McFormField,\n        @Self() @Optional() public ngControl: NgControl,\n        @Attribute('tabindex') tabIndex: string,\n        @Inject(MC_SELECT_SCROLL_STRATEGY) private readonly _scrollStrategyFactory\n    ) {\n        super(elementRef, defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\n\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnInit() {\n        this.selectionModel = new SelectionModel<McOption>(this.multiple);\n        this.stateChanges.next();\n\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this.panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this.destroy))\n            .subscribe(() => {\n                if (this.panelOpen) {\n                    this.scrollTop = 0;\n                    this.openedChange.emit(true);\n                } else {\n                    this.openedChange.emit(false);\n                    this.panelDoneAnimating = false;\n                    this.overlayDir.offsetX = 0;\n                    this._changeDetectorRef.markForCheck();\n                }\n            });\n    }\n\n    ngAfterContentInit() {\n        this.initKeyManager();\n\n        this.selectionModel.changed\n            .pipe(takeUntil(this.destroy))\n            .subscribe((event) => {\n                event.added.forEach((option) => option.select());\n                event.removed.forEach((option) => option.deselect());\n            });\n\n        this.options.changes\n            .pipe(startWith(null), takeUntil(this.destroy))\n            .subscribe(() => {\n                this.resetOptions();\n                this.initializeSelection();\n            });\n    }\n\n    ngAfterViewInit(): void {\n        this.tags.changes\n            .subscribe(() => {\n                setTimeout(() => this.calculateHiddenItems(), 0);\n            });\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) { this.updateErrorState(); }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes.disabled) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy() {\n        this.destroy.next();\n        this.destroy.complete();\n        this.stateChanges.complete();\n    }\n\n    /** `View -> model callback called when value changes` */\n    _onChange: (value: any) => void = () => {};\n\n    /** `View -> model callback called when select has been touched` */\n    _onTouched = () => {};\n\n    /** Toggles the overlay panel open or closed. */\n    toggle(): void {\n        if (this.panelOpen) {\n            this.close();\n        } else {\n            this.open();\n        }\n    }\n\n    /** Opens the overlay panel. */\n    open(): void {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) { return; }\n\n        this.triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this.triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement)['font-size']);\n\n        this._panelOpen = true;\n        this.keyManager.withHorizontalOrientation(null);\n        this.calculateOverlayPosition();\n        this.highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                if (this.triggerFontSize && this.overlayDir.overlayRef && this.overlayDir.overlayRef.overlayElement) {\n                    this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this.triggerFontSize}px`;\n                }\n            });\n    }\n\n    /** Closes the overlay panel and focuses the host element. */\n    close(): void {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this.keyManager.withHorizontalOrientation(this.isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value: any): void {\n        if (this.options) {\n            this.setSelectionByValue(value);\n        }\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn: () => {}): void {\n        this._onTouched = fn;\n    }\n\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n\n    get selected(): McOption | McOption[] {\n        return this.multiple ? this.selectionModel.selected : this.selectionModel.selected[0];\n    }\n\n    get triggerValue(): string {\n        if (this.empty) { return ''; }\n\n        if (this._multiple) {\n            const selectedOptions = this.selectionModel.selected.map((option) => option.viewValue);\n\n            if (this.isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions.join(', ');\n        }\n\n        return this.selectionModel.selected[0].viewValue;\n    }\n\n    get triggerValues(): McOption[] {\n        if (this.empty) { return []; }\n\n        if (this._multiple) {\n            const selectedOptions = this.selectionModel.selected;\n\n            if (this.isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions;\n        }\n\n        return [this.selectionModel.selected[0]];\n    }\n\n    get empty(): boolean {\n        return !this.selectionModel || this.selectionModel.isEmpty();\n    }\n\n    isRtl(): boolean {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n\n    handleKeydown(event: KeyboardEvent): void {\n        if (!this.disabled) {\n            if (this.panelOpen) {\n                this.handleOpenKeydown(event);\n            } else {\n                this.handleClosedKeydown(event);\n            }\n        }\n    }\n\n    /**\n     * When the panel content is done fading in, the panelDoneAnimating property is\n     * set so the proper class can be added to the panel.\n     */\n    onFadeInDone(): void {\n        this.panelDoneAnimating = this.panelOpen;\n        this._changeDetectorRef.markForCheck();\n    }\n\n    onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    onBlur() {\n        this._focused = false;\n\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    onAttached(): void {\n        this.overlayDir.positionChange\n            .pipe(take(1))\n            .subscribe(() => {\n                this._changeDetectorRef.detectChanges();\n                this.calculateOverlayOffsetX();\n                this.panel.nativeElement.scrollTop = this.scrollTop;\n            });\n    }\n\n    /** Returns the theme to be used on the panel. */\n    getPanelTheme(): string {\n        return this._parentFormField ? `mc-${this._parentFormField.color}` : '';\n    }\n\n    /** Focuses the select element. */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    calculateOverlayScroll(selectedIndex: number, scrollBuffer: number, maxScroll: number): number {\n        const itemHeight = this.getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n\n        /* tslint:disable-next-line:no-magic-numbers */\n        const halfOptionHeight = itemHeight / 2;\n\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n\n    /** Invoked when an option is clicked. */\n    onRemoveMatcherItem(option: McOption, $event): void {\n        $event.stopPropagation();\n\n        option.deselect();\n    }\n\n    calculateHiddenItems(): void {\n        if (this.empty || !this.multiple) { return; }\n\n        let visibleItems: number = 0;\n        const totalItemsWidth = this.getTotalItemsWidthInMatcher();\n        let totalVisibleItemsWidth: number = 0;\n        const itemMargin: number = 4;\n\n        this.tags.forEach((tag) => {\n            if (tag.nativeElement.offsetTop < tag.nativeElement.offsetHeight) {\n                totalVisibleItemsWidth += tag.nativeElement.getBoundingClientRect().width + itemMargin;\n                visibleItems++;\n            }\n        });\n\n        this.hiddenItems = (this.selected as ArrayLike<McOption>).length - visibleItems;\n\n        if (this.hiddenItems) {\n            const itemsCounter = this.trigger.nativeElement.querySelector('.mc-select__match-hidden-text');\n            const matcherList = this.trigger.nativeElement.querySelector('.mc-select__match-list');\n\n            const itemsCounterShowed = itemsCounter.offsetTop < itemsCounter.offsetHeight;\n            // const itemsCounterWidth: number = itemsCounter.getBoundingClientRect().width;\n            const itemsCounterWidth: number = 86;\n\n            const matcherListWidth: number = matcherList.getBoundingClientRect().width;\n            const matcherWidth: number = matcherListWidth + itemsCounterWidth;\n\n            if (itemsCounterShowed && (totalItemsWidth < matcherWidth)) { this.hiddenItems = 0; }\n\n            if (\n                totalVisibleItemsWidth === matcherListWidth ||\n                (totalVisibleItemsWidth + itemsCounterWidth) < matcherListWidth\n            ) {\n                this._changeDetectorRef.markForCheck();\n\n                return ;\n            } else if (!itemsCounterShowed && (totalItemsWidth + itemsCounterWidth) > matcherWidth) {\n                this.hiddenItems++;\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    private getTotalItemsWidthInMatcher(): number {\n        const triggerClone = this.trigger.nativeElement.cloneNode(true);\n        triggerClone.querySelector('.mc-select__match-hidden-text').remove();\n\n        this._renderer.setStyle(triggerClone, 'position', 'absolute');\n        this._renderer.setStyle(triggerClone, 'visibility', 'hidden');\n        this._renderer.setStyle(triggerClone, 'top', '-100%');\n        this._renderer.setStyle(triggerClone, 'left', '0');\n\n        this._renderer.appendChild(this.trigger.nativeElement, triggerClone);\n\n        let totalItemsWidth: number = 0;\n        const itemMargin: number = 4;\n        triggerClone.querySelectorAll('mc-tag').forEach((item) => {\n            totalItemsWidth += item.getBoundingClientRect().width as number + itemMargin;\n        });\n\n        triggerClone.remove();\n\n        return totalItemsWidth;\n    }\n\n    /** Handles keyboard events while the select is closed. */\n    private handleClosedKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n\n        // Open the select on ALT + arrow key to match the native <select>\n        if (isOpenKey || ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        } else if (!this.multiple) {\n            this.keyManager.onKeydown(event);\n        }\n    }\n\n    /** Handles keyboard events when the selected is open. */\n    private handleOpenKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const manager = this.keyManager;\n\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n\n            if (keyCode === HOME) {\n                manager.setFirstItemActive();\n            } else {\n                manager.setLastItemActive();\n            }\n\n        } else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n        } else if ((keyCode === ENTER || keyCode === SPACE) && manager.activeItem) {\n            event.preventDefault();\n            manager.activeItem.selectViaInteraction();\n        } else if (this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some((option) => !option.selected);\n            this.options.forEach((option) => {\n                if (hasDeselectedOptions && !option.disabled) {\n                    option.select();\n                } else {\n                    option.deselect();\n                }\n            });\n        } else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n\n            manager.onKeydown(event);\n\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem.selectViaInteraction();\n            }\n        }\n    }\n\n    private initializeSelection(): void {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this.setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n        });\n    }\n\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    private setSelectionByValue(value: any | any[]): void {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMcSelectNonArrayValueError();\n            }\n\n            this.selectionModel.clear();\n            value.forEach((currentValue: any) => this.selectValue(currentValue));\n            this.sortValues();\n        } else {\n            this.selectionModel.clear();\n            const correspondingOption = this.selectValue(value);\n\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this.keyManager.setActiveItem(correspondingOption);\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    private selectValue(value: any): McOption | undefined {\n        const correspondingOption = this.options.find((option: McOption) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            } catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n\n                return false;\n            }\n        });\n\n        if (correspondingOption) {\n            this.selectionModel.select(correspondingOption);\n        }\n\n        return correspondingOption;\n    }\n\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    private initKeyManager() {\n        this.keyManager = new ActiveDescendantKeyManager<McOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this.isRtl() ? 'rtl' : 'ltr');\n\n        this.keyManager.tabOut\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => {\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            });\n\n        this.keyManager.change\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => {\n                if (this._panelOpen && this.panel) {\n                    this.scrollActiveOptionIntoView();\n                } else if (!this._panelOpen && !this.multiple && this.keyManager.activeItem) {\n                    this.keyManager.activeItem.selectViaInteraction();\n                }\n            });\n    }\n\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    private resetOptions(): void {\n        const changedOrDestroyed = merge(this.options.changes, this.destroy);\n\n        this.optionSelectionChanges\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((event) => {\n                this.onSelect(event.source, event.isUserInput);\n\n                if (event.isUserInput && !this.multiple && this._panelOpen) {\n                    this.close();\n                    this.focus();\n                }\n            });\n\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((option) => option.stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n                this.stateChanges.next();\n            });\n\n        this.setOptionIds();\n    }\n\n    /** Invoked when an option is clicked. */\n    private onSelect(option: McOption, isUserInput: boolean): void {\n        const wasSelected = this.selectionModel.isSelected(option);\n\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this.selectionModel.clear();\n            this.propagateChanges(option.value);\n        } else {\n            if (option.selected) {\n                this.selectionModel.select(option);\n            } else {\n                this.selectionModel.deselect(option);\n            }\n\n            if (isUserInput) {\n                this.keyManager.setActiveItem(option);\n            }\n\n            if (this.multiple) {\n                this.sortValues();\n\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mc-option`.\n                    this.focus();\n                }\n            }\n        }\n\n        if (wasSelected !== this.selectionModel.isSelected(option)) {\n            this.propagateChanges();\n        }\n\n        this.stateChanges.next();\n    }\n\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    private sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n\n            this.selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n\n    /** Emits change event to set the model value. */\n    private propagateChanges(fallbackValue?: any): void {\n        let valueToEmit: any = null;\n\n        if (this.multiple) {\n            valueToEmit = (this.selected as McOption[]).map((option) => option.value);\n        } else {\n            valueToEmit = this.selected ? (this.selected as McOption).value : fallbackValue;\n        }\n\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new McSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /** Records option IDs to pass to the aria-owns property. */\n    private setOptionIds() {\n        this.optionIds = this.options.map((option) => option.id).join(' ');\n    }\n\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    private highlightCorrectOption(): void {\n        if (this.keyManager) {\n            if (this.empty) {\n                this.keyManager.setFirstItemActive();\n            } else {\n                this.keyManager.setActiveItem(this.selectionModel.selected[0]);\n            }\n        }\n    }\n\n    /** Scrolls the active option into view. */\n    private scrollActiveOptionIntoView(): void {\n        const activeOptionIndex = this.keyManager.activeItemIndex || 0;\n        const labelCount = countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n\n        this.panel.nativeElement.scrollTop = getOptionScrollPosition(\n            activeOptionIndex + labelCount,\n            this.getItemHeight(),\n            this.panel.nativeElement.scrollTop,\n            SELECT_PANEL_MAX_HEIGHT\n        );\n    }\n\n    /** Gets the index of the provided option in the option list. */\n    private getOptionIndex(option: McOption): number | undefined {\n        /* tslint:disable-next-line */\n        return this.options.reduce((result: number, current: McOption, index: number) => {\n            /* tslint:disable-next-line:strict-type-predicates */\n            return result === undefined ? (option === current ? index : undefined) : result;\n        }, undefined);\n    }\n\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    private calculateOverlayPosition(): void {\n        const itemHeight = this.getItemHeight();\n        const items = this.getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset =\n            this.empty ? 0 : this.getOptionIndex(this.selectionModel.selected[0])!;\n\n        selectedOptionOffset += countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /* tslint:disable-next-line:no-magic-numbers */\n        const scrollBuffer = panelHeight / 2;\n        this.scrollTop = this.calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this.offsetY = this.calculateOverlayOffsetY();\n\n        this.checkOverlayWithinViewport(maxScroll);\n    }\n\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    private calculateOverlayOffsetX(): void {\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this.isRtl();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const paddingWidth = SELECT_PANEL_PADDING_X * 2;\n        let offsetX: number;\n\n        const selected = this.selectionModel.selected[0] || this.options.first;\n        offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n\n        // Invert the offset in LTR.\n        if (!isRtl) { offsetX *= -1; }\n\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        } else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    private calculateOverlayOffsetY(): number {\n        // const itemHeight = this.getItemHeight();\n        // const optionHeightAdjustment = (itemHeight - this.triggerRect.height) / 2;\n\n        // todo I'm not sure that we will use it\n        return 0;\n        // return Math.round(-optionHeightAdjustment);\n    }\n\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    private checkOverlayWithinViewport(maxScroll: number): void {\n        const itemHeight = this.getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n\n        const topSpaceAvailable = this.triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable =\n            viewportSize.height - this.triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n\n        const panelHeightTop = Math.abs(this.offsetY);\n        const totalPanelHeight =\n            Math.min(this.getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this.triggerRect.height;\n\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this.adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        } else if (panelHeightTop > topSpaceAvailable) {\n            this.adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        } else {\n            this.transformOrigin = this.getOriginBasedOnOption();\n        }\n    }\n\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    private adjustPanelUp(panelHeightBottom: number, bottomSpaceAvailable: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this.scrollTop -= distanceBelowViewport;\n        this.offsetY -= distanceBelowViewport;\n        this.transformOrigin = this.getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this.scrollTop <= 0) {\n            this.scrollTop = 0;\n            this.offsetY = 0;\n            this.transformOrigin = `50% bottom 0px`;\n        }\n    }\n\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    private adjustPanelDown(panelHeightTop: number, topSpaceAvailable: number, maxScroll: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this.scrollTop += distanceAboveViewport;\n        this.offsetY += distanceAboveViewport;\n        this.transformOrigin = this.getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this.scrollTop >= maxScroll) {\n            this.scrollTop = maxScroll;\n            this.offsetY = 0;\n            this.transformOrigin = `50% top 0px`;\n\n            return;\n        }\n    }\n\n    /** Sets the transform origin point based on the selected option. */\n    private getOriginBasedOnOption(): string {\n        const itemHeight = this.getItemHeight();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const optionHeightAdjustment = (itemHeight - this.triggerRect.height) / 2;\n        /* tslint:disable-next-line:no-magic-numbers */\n        const originY = Math.abs(this.offsetY) - optionHeightAdjustment + itemHeight / 2;\n\n        return `50% ${originY}px 0px`;\n    }\n\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    private getItemCount(): number {\n        return this.options.length + this.optionGroups.length;\n    }\n\n    /** Calculates the height of the select's options. */\n    private getItemHeight(): number {\n        // todo доделать\n        /* tslint:disable-next-line:no-magic-numbers */\n        return 32;\n        // return this.triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n\n    /** Comparison function to specify which option is displayed. Defaults to object equality. */\n    private _compareWith = (o1: any, o2: any) => o1 === o2;\n}\n","export enum TimeParts {\n    hours,\n    minutes,\n    seconds\n}\n\nexport enum TimeFormats {\n    HHmmss = 'HH:mm:ss',\n    HHmm = 'HH:mm'\n}\n\nexport const TIMEFORMAT_PLACEHOLDERS: { [timeFormat: string]: string } = {\n    [TimeFormats.HHmmss]: '  :  :  ',\n    [TimeFormats.HHmm]: '  :  '\n};\n\nexport const DEFAULT_TIME_FORMAT: TimeFormats = TimeFormats.HHmm;\n\nexport const HOURS_MINUTES_SECONDS_REGEXP =\n    new RegExp(/^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9]):([0-5][0-9]|[0-9])?$/);\nexport const HOURS_MINUTES_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9])?$/;\nexport const HOURS_ONLY_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):?$/;\n\nexport const SECONDS_PER_MINUTE: number = 59;\nexport const MINUTES_PER_HOUR: number = 59;\nexport const HOURS_PER_DAY: number = 23;\n\n// TODO Move it to common CDK\nexport const ARROW_UP_KEYCODE: string = 'ArrowUp';\nexport const ARROW_DOWN_KEYCODE: string = 'ArrowDown';\nexport const ARROW_LEFT_KEYCODE: string = 'ArrowLeft';\nexport const ARROW_RIGHT_KEYCODE: string = 'ArrowRight';\n","import {\n    ComponentRef,\n    Inject,\n    Injectable,\n    InjectionToken,\n    Injector, OnDestroy,\n    Optional,\n    SkipSelf,\n    TemplateRef\n} from '@angular/core';\nimport { Overlay, OverlayConfig, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal, IComponentType, PortalInjector, TemplatePortal } from '@ptsecurity/cdk/portal';\n\nimport { MC_SIDEPANEL_DATA, McSidepanelConfig } from './sidepanel-config';\nimport {\n    McSidepanelContainerComponent,\n    MC_SIDEPANEL_WITH_INDENT,\n    MC_SIDEPANEL_WITH_SHADOW\n} from './sidepanel-container.component';\nimport { McSidepanelRef } from './sidepanel-ref';\n\n\n/** Injection token that can be used to specify default sidepanel options. */\nexport const MC_SIDEPANEL_DEFAULT_OPTIONS =\n    new InjectionToken<McSidepanelConfig>('mc-sidepanel-default-options');\n\n@Injectable()\nexport class McSidepanelService implements OnDestroy {\n    private openedSidepanelsAtThisLevel: McSidepanelRef[] = [];\n\n    /** Keeps track of the currently-open sidepanels. */\n    get openedSidepanels(): McSidepanelRef[] {\n        return this.parentSidepanelService ? this.parentSidepanelService.openedSidepanels :\n            this.openedSidepanelsAtThisLevel;\n    }\n\n    constructor(\n        private overlay: Overlay,\n        private injector: Injector,\n        @Optional() @Inject(MC_SIDEPANEL_DEFAULT_OPTIONS) private defaultOptions: McSidepanelConfig,\n        @Optional() @SkipSelf() private parentSidepanelService: McSidepanelService) {\n    }\n\n    ngOnDestroy() {\n        // Only close the sidepanels at this level on destroy\n        // since the parent service may still be active.\n        this.closeSidepanels(this.openedSidepanelsAtThisLevel);\n    }\n\n    open<T, D = any>(componentOrTemplateRef: IComponentType<T> | TemplateRef<T>,\n                     config?: McSidepanelConfig<D>): McSidepanelRef<T> {\n        const fullConfig = {\n            ...(this.defaultOptions || new McSidepanelConfig()),\n            ...config\n        };\n\n        if (fullConfig.id && this.getSidepanelById(fullConfig.id)) {\n            throw Error(`Sidepanel with id \"${fullConfig.id}\" exists already. The sidepanel id must be unique.`);\n        }\n\n        const overlayRef = this.createOverlay(fullConfig);\n        const container = this.attachContainer(overlayRef, fullConfig);\n        const ref = new McSidepanelRef(container, overlayRef, fullConfig);\n\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            container.attachTemplatePortal(new TemplatePortal<T>(componentOrTemplateRef, null!, {\n                $implicit: fullConfig.data,\n                sidepanelRef: ref\n            } as any));\n        } else {\n            const injector = this.createInjector(fullConfig, ref, container);\n            const portal = new ComponentPortal(componentOrTemplateRef, undefined, injector);\n            const contentRef = container.attachComponentPortal(portal);\n\n            ref.instance = contentRef.instance;\n        }\n\n        this.openedSidepanels.push(ref);\n        ref.afterClosed().subscribe(() => this.removeOpenSidepanel(ref));\n        container.enter();\n\n        return ref;\n    }\n\n    /**\n     * Closes all of the currently-open sidepanels.\n     */\n    closeAll(): void {\n        this.closeSidepanels(this.openedSidepanels);\n    }\n\n    /**\n     * Finds an open sidepanel by its id.\n     * @param id ID to use when looking up the sidepanel.\n     */\n    getSidepanelById(id: string): McSidepanelRef | undefined {\n        return this.openedSidepanels.find((sidepanel) => sidepanel.id === id);\n    }\n\n    /**\n     * Attaches the sidepanel container component to the overlay.\n     */\n    private attachContainer(overlayRef: OverlayRef, config: McSidepanelConfig): McSidepanelContainerComponent {\n        const openedSidepanelsWithSamePosition = this.getOpenedSidepanelsWithSamePosition(config);\n\n        const injector = new PortalInjector(this.injector, new WeakMap<any>([\n            [McSidepanelConfig, config],\n            [MC_SIDEPANEL_WITH_INDENT, openedSidepanelsWithSamePosition.length >= 1],\n            [MC_SIDEPANEL_WITH_SHADOW, openedSidepanelsWithSamePosition.length < 2] // tslint:disable-line\n        ]));\n\n        const containerPortal = new ComponentPortal(McSidepanelContainerComponent, undefined, injector);\n        const containerRef: ComponentRef<McSidepanelContainerComponent> = overlayRef.attach(containerPortal);\n\n        return containerRef.instance;\n    }\n\n    /**\n     * Creates a custom injector to be used inside the sidepanel. This allows a component loaded inside\n     * of a sidepanel to close itself and, optionally, to return a value.\n     * @param config Config object that is used to construct the sidepanel.\n     * @param sidepanelRef Reference to the sidepanel.\n     * @param sidepanelContainer Sidepanel container element that wraps all of the contents.\n     * @returns The custom injector that can be used inside the sidepanel.\n     */\n    private createInjector<T>(\n        config: McSidepanelConfig,\n        sidepanelRef: McSidepanelRef<T>,\n        sidepanelContainer: McSidepanelContainerComponent): PortalInjector {\n\n        // The McSidepanelContainerComponent is injected in the portal as the McSidepanelContainerComponent and\n        // the sidepanel's content are created out of the same ViewContainerRef and as such, are siblings for injector\n        // purposes. To allow the hierarchy that is expected, the McSidepanelContainerComponent is explicitly\n        // added to the injection tokens.\n        const injectionTokens = new WeakMap<any>([\n            [McSidepanelContainerComponent, sidepanelContainer],\n            [MC_SIDEPANEL_DATA, config.data],\n            [McSidepanelRef, sidepanelRef]\n        ]);\n\n        return new PortalInjector(this.injector, injectionTokens);\n    }\n\n    /**\n     * Creates a new overlay and places it in the correct location.\n     * @param config The user-specified sidepanel config.\n     */\n    private createOverlay(config: McSidepanelConfig): OverlayRef {\n        const overlayConfig = new OverlayConfig({\n            hasBackdrop: config.hasBackdrop,\n            backdropClass: this.getBackdropClass(config),\n            maxWidth: '100%',\n            panelClass: config.overlayPanelClass,\n            scrollStrategy: this.overlay.scrollStrategies.block(),\n            positionStrategy: this.overlay.position().global()\n        });\n\n        return this.overlay.create(overlayConfig);\n    }\n\n    private closeSidepanels(sidepanels: McSidepanelRef[]) {\n        const reversedOpenedSidepanels = [...sidepanels.reverse()];\n\n        reversedOpenedSidepanels.forEach((sidepanelRef: McSidepanelRef) => {\n            sidepanelRef.close();\n        });\n    }\n\n    private getBackdropClass(config: McSidepanelConfig): string {\n        const hasOpenedSidepanelWithBackdrop =\n            this.openedSidepanels.some((sidepanelRef) => sidepanelRef.config.hasBackdrop!);\n\n        return config.requiredBackdrop || !hasOpenedSidepanelWithBackdrop ? 'cdk-overlay-dark-backdrop' :\n            'cdk-overlay-transparent-backdrop';\n    }\n\n    private getOpenedSidepanelsWithSamePosition(config: McSidepanelConfig): McSidepanelRef[] {\n        return this.openedSidepanels.filter((sidepanelRef) => sidepanelRef.config.position === config.position);\n    }\n\n    /**\n     * Removes a sidepanel from the array of open sidepanels.\n     * @param sidepanelRef Sidepanel to be removed.\n     */\n    private removeOpenSidepanel(sidepanelRef: McSidepanelRef) {\n        const index = this.openedSidepanels.indexOf(sidepanelRef);\n\n        if (index > -1) {\n            this.openedSidepanels.splice(index, 1);\n        }\n    }\n}\n","import { Component, Directive, ElementRef, Input, OnChanges, OnInit, Optional, SimpleChanges } from '@angular/core';\n\nimport { McSidepanelRef } from './sidepanel-ref';\nimport { McSidepanelService } from './sidepanel.service';\n\n\n/**\n * Button that will close the current sidepanel.\n */\n@Directive({\n    selector: 'button[mc-sidepanel-close], button[mcSidepanelClose]',\n    host: {\n        '(click)': 'sidepanelRef.close(sidepanelResult)',\n        class: 'mc-sidepanel-close',\n        type: 'button'\n    }\n})\nexport class McSidepanelClose implements OnInit, OnChanges {\n    @Input('mc-sidepanel-close') sidepanelResult: any;\n\n    @Input('mcSidepanelClose') mcSidepanelClose: any;\n\n    constructor(\n        @Optional() public sidepanelRef: McSidepanelRef,\n        private elementRef: ElementRef<HTMLElement>,\n        private sidepanelService: McSidepanelService\n    ) {}\n\n    ngOnInit() {\n        if (!this.sidepanelRef) {\n            // When this directive is included in a sidepanel via TemplateRef (rather than being\n            // in a Component), the SidepanelRef isn't available via injection because embedded\n            // views cannot be given a custom injector. Instead, we look up the SidepanelRef by\n            // ID.\n            // This must occur in `onInit`, as the ID binding for the sidepanel container won't\n            // be resolved at constructor time. We use setTimeout by same reason.\n            setTimeout(() => {\n                this.sidepanelRef = getClosestSidepanel(this.elementRef, this.sidepanelService.openedSidepanels)!;\n            });\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const proxiedChange = changes.mcSidepanelClose || changes.sidepanelResult;\n\n        if (proxiedChange) {\n            this.sidepanelResult = proxiedChange.currentValue;\n        }\n    }\n}\n\n/**\n * Header of a sidepanel.\n */\n@Component({\n    selector: 'mc-sidepanel-header',\n    template: `\n        <div class=\"mc-sidepanel-title\">\n            <ng-content></ng-content>\n        </div>\n        <button *ngIf=\"closeable\" mc-sidepanel-close>\n            <span class=\"mc-sidepanel-close-x\">\n                <i mc-icon=\"mc-close-L_16\" class=\"mc-icon mc-icon_light\" color=\"second\"></i>\n            </span>\n        </button>\n    `,\n    host: {\n        class: 'mc-sidepanel-header'\n    }\n})\nexport class McSidepanelHeader {\n    @Input() closeable: boolean;\n}\n\n/**\n * Scrollable content container of a sidepanel.\n */\n@Directive({\n    selector: 'mc-sidepanel-body, [mc-sidepanel-body], mcSidepanelBody',\n    host: {\n        class: 'mc-sidepanel-body'\n    }\n})\nexport class McSidepanelBody {}\n\n/**\n * Footer of a sidepanel.\n */\n@Directive({\n    selector: 'mc-sidepanel-footer, [mc-sidepanel-footer], mcSidepanelFooter',\n    host: {\n        class: 'mc-sidepanel-footer'\n    }\n})\nexport class McSidepanelFooter {}\n\n/**\n * Actions block of a sidepanel footer.\n */\n@Directive({\n    selector: 'mc-sidepanel-actions, [mc-sidepanel-actions], mcSidepanelActions',\n    host: {\n        class: 'mc-sidepanel-actions'\n    }\n})\nexport class McSidepanelActions {}\n\n/**\n * Finds the closest McSidepanelRef to an element by looking at the DOM.\n * @param element Element relative to which to look for a sidepanel.\n * @param openSidepanels References to the currently-open sidepanels.\n */\nfunction getClosestSidepanel(element: ElementRef<HTMLElement>, openSidepanels: McSidepanelRef[]) {\n    let parent: HTMLElement | null = element.nativeElement.parentElement;\n\n    while (parent && !parent.classList.contains('mc-sidepanel-container')) {\n        parent = parent.parentElement;\n    }\n\n    return parent ? openSidepanels.find((sidepanel) => sidepanel.id === parent!.id) : null;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { PortalModule } from '@ptsecurity/cdk/portal';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McSidepanelContainerComponent } from './sidepanel-container.component';\nimport {\n    McSidepanelActions,\n    McSidepanelBody,\n    McSidepanelClose,\n    McSidepanelFooter,\n    McSidepanelHeader\n} from './sidepanel-directives';\nimport { McSidepanelService } from './sidepanel.service';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        PortalModule,\n        McCommonModule,\n        McIconModule\n    ],\n    providers: [McSidepanelService],\n    declarations: [\n        McSidepanelContainerComponent,\n        McSidepanelClose,\n        McSidepanelHeader,\n        McSidepanelBody,\n        McSidepanelFooter,\n        McSidepanelActions\n    ],\n    entryComponents: [McSidepanelContainerComponent],\n    exports: [\n        McSidepanelContainerComponent,\n        McSidepanelClose,\n        McSidepanelHeader,\n        McSidepanelBody,\n        McSidepanelFooter,\n        McSidepanelActions\n    ]\n})\nexport class McSidepanelModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    NgZone, OnDestroy,\n    OnInit,\n    Renderer2,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { coerceBooleanProperty, coerceCssPixelValue, coerceNumberProperty } from '@ptsecurity/cdk/coercion';\n\n\ninterface IArea {\n    area: McSplitterAreaDirective;\n    index: number;\n    order: number;\n    initialSize: number;\n}\n\ninterface IPoint {\n    x: number;\n    y: number;\n}\n\n\nconst enum AttributeProperty {\n    Disabled = 'disabled'\n}\n\nconst enum Cursor {\n    Default = 'default',\n    ResizeColumn = 'col-resize',\n    ResizeRow = 'row-resize'\n}\n\nconst enum StyleProperty {\n    Cursor = 'cursor',\n    Flex = 'flex',\n    FlexBasis = 'flex-basis',\n    FlexDirection = 'flex-direction',\n    Height = 'height',\n    MaxWidth = 'max-width',\n    MinHeight = 'min-height',\n    MinWidth = 'minWidth',\n    OffsetHeight = 'offsetHeight',\n    OffsetWidth = 'offsetWidth',\n    Order = 'order',\n    Width = 'width'\n}\n\nconst enum State {\n    Disabled = 'disabled',\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\nexport const enum Direction {\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\n@Component({\n    selector: 'mc-splitter',\n    preserveWhitespaces: false,\n    styleUrls: ['splitter.css'],\n    templateUrl: './splitter.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSplitterComponent implements OnInit {\n    readonly areas: IArea[] = [];\n\n    private _direction: Direction;\n    private _disabled: boolean = false;\n    private _gutterSize: number = 6;\n\n    private isDragging: boolean = false;\n\n    private readonly areaPositionDivider: number = 2;\n    private readonly listeners: (() => void)[] = [];\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set gutterSize(gutterSize: number) {\n        const size = coerceNumberProperty(gutterSize);\n        this._gutterSize = size > 0 ? size : this.gutterSize;\n    }\n\n    get gutterSize(): number {\n        return this._gutterSize;\n    }\n\n    constructor(private elementRef: ElementRef,\n                private ngZone: NgZone,\n                private renderer: Renderer2) {}\n\n    addArea(area: McSplitterAreaDirective): void {\n        const index: number = this.areas.length;\n        const order: number = index * this.areaPositionDivider;\n        const size: number = area.getSize();\n\n        area.setOrder(order);\n\n        this.areas.push({\n            area,\n            index,\n            order,\n            initialSize: size\n        });\n    }\n\n    ngOnInit(): void {\n        if (!this.direction) {\n            this.direction = Direction.Horizontal;\n        }\n\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'column' : 'row');\n    }\n\n    onMouseDown(event: MouseEvent, leftAreaIndex: number, rightAreaIndex: number) {\n        if (this.disabled) {\n            return;\n        }\n\n        const leftArea = this.areas[leftAreaIndex];\n        const rightArea = this.areas[rightAreaIndex];\n\n        const startPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        leftArea.initialSize = leftArea.area.getSize();\n        rightArea.initialSize = rightArea.area.getSize();\n\n        this.areas.forEach((item) => {\n            const size = item.area.getSize();\n            item.area.disableFlex();\n            item.area.setSize(size);\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mouseup',\n                    () => this.onMouseUp()\n                )\n            );\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mousemove',\n                    (e: MouseEvent) => this.onMouseMove(e, startPoint, leftArea, rightArea)\n                )\n            );\n        });\n\n        this.isDragging = true;\n    }\n\n    removeArea(area: McSplitterAreaDirective): void {\n        let indexToRemove: number = -1;\n\n        this.areas.some((item, index) => {\n            if (item.area === area) {\n                indexToRemove = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        if (indexToRemove === -1) {\n            return;\n        }\n\n        this.areas.splice(indexToRemove, 1);\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private onMouseMove(event: MouseEvent, startPoint: IPoint, leftArea: IArea, rightArea: IArea) {\n        if (!this.isDragging || this.disabled) {\n            return;\n        }\n\n        const endPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        const offset = this.isVertical()\n            ? startPoint.y - endPoint.y\n            : startPoint.x - endPoint.x;\n\n        const newLeftAreaSize = leftArea.initialSize - offset;\n        const newRightAreaSize = rightArea.initialSize + offset;\n\n        const minLeftAreaSize = leftArea.area.getMinSize();\n        const minRightAreaSize = rightArea.area.getMinSize();\n\n        if (newLeftAreaSize <= minLeftAreaSize || newRightAreaSize <= minRightAreaSize) {\n            const rightAreaOffset = leftArea.initialSize - minLeftAreaSize;\n\n            leftArea.area.setSize(minLeftAreaSize);\n            rightArea.area.setSize(rightArea.initialSize + rightAreaOffset);\n        } else if (newLeftAreaSize <= 0) {\n            leftArea.area.setSize(0);\n            rightArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n        } else if (newRightAreaSize <= 0) {\n            leftArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n            rightArea.area.setSize(0);\n        } else {\n            leftArea.area.setSize(newLeftAreaSize);\n            rightArea.area.setSize(newRightAreaSize);\n        }\n    }\n\n    private onMouseUp() {\n        while (this.listeners.length > 0) {\n            const unsubscribe = this.listeners.pop();\n\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        }\n\n        this.isDragging = false;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-gutter'\n})\nexport class McGutterDirective implements OnInit {\n    private _direction: Direction = Direction.Vertical;\n    private _disabled: boolean = false;\n    private _order: number = 0;\n    private _size: number = 6;\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set order(order: number) {\n        this._order = coerceNumberProperty(order);\n    }\n\n    get order(): number {\n        return this._order;\n    }\n\n    @Input()\n    set size(size: number) {\n        this._size = coerceNumberProperty(size);\n    }\n\n    get size(): number {\n        return this._size;\n    }\n\n    constructor(private renderer: Renderer2,\n                private elementRef: ElementRef) {\n    }\n\n    ngOnInit(): void {\n        this.setStyle(StyleProperty.Cursor, this.getCursor(this.getState()));\n        this.setStyle(StyleProperty.FlexBasis, coerceCssPixelValue(this.size));\n        this.setStyle(this.isVertical() ? StyleProperty.Height : StyleProperty.Width, coerceCssPixelValue(this.size));\n        this.setStyle(StyleProperty.Order, this.order);\n\n        if (!this.isVertical()) {\n            this.setStyle(StyleProperty.Height, '100%');\n        }\n\n        if (this.disabled) {\n            this.setAttr(AttributeProperty.Disabled, 'true');\n        }\n\n        // fix IE issue with gutter icon. flex-direction is requied for flex alignment options\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'row' : 'column');\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private getCursor(state: State): string {\n        switch (state) {\n            case State.Disabled:\n                return Cursor.Default;\n            case State.Vertical:\n                return  Cursor.ResizeRow;\n            case State.Horizontal:\n                return Cursor.ResizeColumn;\n            default:\n                throw Error(`Unknown gutter state for cursor: ${state}`);\n        }\n    }\n\n    private getState(): State {\n        return this.disabled\n            ? State.Disabled\n            : this.direction === Direction.Vertical\n                ? State.Vertical\n                : State.Horizontal;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n\n    private setAttr(attribute: AttributeProperty, value: string) {\n        this.renderer.setAttribute(this.elementRef.nativeElement, attribute, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-splitter-area'\n})\nexport class McSplitterAreaDirective implements OnInit, OnDestroy {\n    constructor(private elementRef: ElementRef,\n                private renderer: Renderer2,\n                private splitter: McSplitterComponent) {}\n\n    disableFlex(): void {\n        this.renderer.removeStyle(this.elementRef.nativeElement, 'flex');\n    }\n\n    ngOnInit(): void {\n        this.splitter.addArea(this);\n\n        this.removeStyle(StyleProperty.MaxWidth);\n        this.setStyle(StyleProperty.Flex, '1');\n\n        if (this.splitter.direction === Direction.Vertical) {\n            this.setStyle(StyleProperty.Width, '100%');\n            this.removeStyle(StyleProperty.Height);\n        } else {\n            this.setStyle(StyleProperty.Height, '100%');\n            this.removeStyle(StyleProperty.Width);\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.splitter.removeArea(this);\n    }\n\n    setOrder(order: number): void {\n        this.setStyle(StyleProperty.Order, order);\n    }\n\n    setSize(size: number): void {\n        const sz = coerceNumberProperty(size);\n        this.setStyle(this.getSizeProperty(), coerceCssPixelValue(sz));\n    }\n\n    getSize(): number {\n        return this.elementRef.nativeElement[this.getOffsetSizeProperty()];\n    }\n\n    getMinSize(): number {\n        const styles = getComputedStyle(this.elementRef.nativeElement);\n\n        return parseFloat(styles[this.getMinSizeProperty()]);\n    }\n\n    private isVertical(): boolean {\n        return this.splitter.direction === Direction.Vertical;\n    }\n\n    private getMinSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.MinHeight\n            : StyleProperty.MinWidth;\n    }\n\n    private getOffsetSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.OffsetHeight\n            : StyleProperty.OffsetWidth;\n    }\n\n    private getSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.Height\n            : StyleProperty.Width;\n    }\n\n    private setStyle(style: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, style, value);\n    }\n\n    private removeStyle(style: StyleProperty) {\n        this.renderer.removeStyle(this.elementRef.nativeElement, style);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McGutterDirective, McSplitterAreaDirective, McSplitterComponent } from './splitter.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McIconModule\n    ],\n    exports: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ],\n    declarations: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ]\n})\nexport class McSplitterModule {\n}\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport {\n    Attribute,\n    ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ElementRef, EventEmitter, forwardRef,\n    Input, Output, ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    ThemePalette,\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\nlet nextUniqueId = 0;\n\ntype ToggleLabelPositionType = 'left' | 'right';\n\nexport class McToggleBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McToggleMixinBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McToggleBase = mixinTabIndex(mixinColor(mixinDisabled(McToggleBase), ThemePalette.Primary));\n\nexport class McToggleChange {\n    source: McToggleComponent;\n    checked: boolean;\n}\n\n@Component({\n    selector: 'mc-toggle',\n    exportAs: 'mcToggle',\n    templateUrl: './toggle.component.html',\n    styleUrls: ['./toggle.css'],\n    providers: [\n        {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => McToggleComponent), multi: true}\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color', 'tabIndex'],\n    host: {\n        class: 'mc-toggle',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-toggle_off]': '!checked'\n    },\n    animations: [\n        trigger('switch', [\n            state('true' , style({ left: '50%' })),\n            state('false', style({ left: '1px' })),\n            transition('true <=> false', animate('150ms'))\n        ])\n    ]\n})\nexport class McToggleComponent extends _McToggleMixinBase\n    implements ControlValueAccessor, CanColor, CanDisable, HasTabIndex {\n\n    @ViewChild('input') _inputElement: ElementRef;\n\n    @Input() labelPosition: ToggleLabelPositionType = 'right';\n\n    @Input('aria-label') ariaLabel: string = '';\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-toggle-${++nextUniqueId}`;\n\n    // tslint:disable:member-ordering\n    @Input() id: string = this._uniqueId;\n\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    @Input() name: string | null = null;\n\n    @Input() value: string;\n\n    private _disabled: boolean = false;\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this._disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    get checked() {\n        return this._checked;\n    }\n\n    @Input()\n    set checked(value: boolean) {\n        if (value !== this._checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    @Output() readonly change: EventEmitter<McToggleChange> =\n        new EventEmitter<McToggleChange>();\n\n    constructor(public _elementRef: ElementRef,\n                private _focusMonitor: FocusMonitor,\n                private _changeDetectorRef: ChangeDetectorRef,\n                @Attribute('tabindex') tabIndex: string\n    ) {\n        super(_elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _getAriaChecked(): boolean {\n        return this.checked;\n    }\n\n    _onInteractionEvent(event: Event) {\n        event.stopPropagation();\n    }\n\n    _onLabelTextChange() {\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onInputClick(event: MouseEvent) {\n        event.stopPropagation();\n        this._updateModelValue();\n        this._emitChangeEvent();\n    }\n\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    registerOnChange(fn: any) {\n        this._onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this._onTouchedCallback = fn;\n    }\n\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    // tslint:disable-next-line:no-empty\n    private _onTouchedCallback = () => {};\n\n    // tslint:disable-next-line:no-empty\n    private _onChangeCallback = (_: any) => {};\n\n    private _updateModelValue() {\n        this._checked = !this.checked;\n        this._onChangeCallback(this.checked);\n        this._onTouchedCallback();\n    }\n\n    private _emitChangeEvent() {\n        const event = new McToggleChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._onChangeCallback(this.checked);\n        this.change.emit(event);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McToggleComponent } from './toggle.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule],\n    exports: [McToggleComponent],\n    declarations: [McToggleComponent]\n})\nexport class McToggleModule {\n}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    TemplateRef,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport {\n    ConnectedOverlayPositionChange,\n    ConnectionPositionPair,\n    Overlay,\n    OverlayRef,\n    ScrollDispatcher,\n    IScrollStrategy,\n    FlexibleConnectedPositionStrategy,\n    IOverlayConnectionPosition,\n    IOriginConnectionPosition,\n    HorizontalConnectionPos,\n    VerticalConnectionPos\n} from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\nimport {\n    fadeAnimation,\n    DEFAULT_4_POSITIONS,\n    POSITION_MAP\n} from '@ptsecurity/mosaic/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\n\n@Component({\n    selector: 'mc-tooltip-component',\n    inputs: [\n        'mcMouseEnterDelay',\n        'mcMouseLeaveDelay',\n        'mcTitle',\n        'mcVisible',\n        'mcTrigger',\n        'mcPlacement'\n    ],\n    outputs: ['mcVisibleChange'],\n    animations: [ fadeAnimation ],\n    templateUrl: './tooltip.component.html',\n    preserveWhitespaces: false,\n    styleUrls: ['./tooltip.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '(body:click)': 'this.handleBodyInteraction()'\n    }\n})\nexport class McTooltipComponent {\n    prefix = 'mc-tooltip_placement';\n    positions: ConnectionPositionPair[] = [ ...DEFAULT_4_POSITIONS ];\n    classMap = {};\n    isTitleString: boolean;\n    showTid: number;\n    hideTid: number;\n    availablePositions: any;\n    $visible: Observable<boolean>;\n\n    @Output() mcVisibleChange: EventEmitter<boolean> = new EventEmitter();\n\n    @Input() mcMouseEnterDelay = 400;\n\n    @Input() mcMouseLeaveDelay = 0;\n\n    @Input()\n    get mcTitle(): string | TemplateRef<void> {\n        return this._mcTitle;\n    }\n    set mcTitle(value: string | TemplateRef<void>) {\n        this.isTitleString = !(value instanceof TemplateRef);\n\n        if (this.isTitleString) {\n            this._mcTitle = value;\n        }\n    }\n    private _mcTitle: string | TemplateRef<void>;\n\n    @Input()\n    get mcTrigger(): string {\n        return this._mcTrigger;\n    }\n    set mcTrigger(value: string) {\n        this._mcTrigger = value;\n    }\n    private _mcTrigger: string = 'hover';\n\n    @Input()\n    get mcPlacement(): string {\n        return this._mcPlacement;\n    }\n    set mcPlacement(value: string) {\n        if (value !== this._mcPlacement) {\n            this._mcPlacement = value;\n            this.positions.unshift(POSITION_MAP[ this.mcPlacement ]);\n        } else if (!value) {\n            this._mcPlacement = 'top';\n        }\n    }\n    private _mcPlacement: string = 'top';\n\n    @Input()\n    get mcVisible(): boolean {\n        return this._mcVisible.value;\n    }\n    set mcVisible(value: boolean) {\n        const visible = coerceBooleanProperty(value);\n\n        if (this._mcVisible.value !== visible) {\n            this._mcVisible.next(visible);\n            this.mcVisibleChange.emit(visible);\n        }\n    }\n    private _mcVisible: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n    /** Subject for notifying that the tooltip has been hidden from the view */\n    private readonly onHideSubject: Subject<any> = new Subject();\n    private closeOnInteraction: boolean = false;\n\n    constructor(public cdr: ChangeDetectorRef) {\n        this.availablePositions = POSITION_MAP;\n        this.$visible = this._mcVisible.asObservable();\n    }\n\n    show(): void {\n        if (this.hideTid) {\n            clearTimeout(this.hideTid);\n        }\n\n        if (!this.isContentEmpty()) {\n            if (this.mcTrigger !== 'manual') {\n                this.closeOnInteraction = true;\n            }\n            this.showTid = setTimeout(() => {\n                this.mcVisible = true;\n                this.mcVisibleChange.emit(true);\n\n                // Mark for check so if any parent component has set the\n                // ChangeDetectionStrategy to OnPush it will be checked anyways\n                this.markForCheck();\n            }, this.mcMouseEnterDelay);\n        }\n    }\n\n    hide(): void {\n        if (this.showTid) {\n            clearTimeout(this.showTid);\n        }\n\n        this.hideTid = setTimeout(() => {\n            this.mcVisible = false;\n            this.mcVisibleChange.emit(false);\n            this.onHideSubject.next();\n\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this.markForCheck();\n        }, this.mcMouseLeaveDelay);\n    }\n\n    setClassMap(): void {\n        this.classMap = `${this.prefix}-${this.mcPlacement}`;\n    }\n\n    isContentEmpty(): boolean {\n        return this.isTitleString ? (this.mcTitle === '' || !this.mcTitle) : false;\n    }\n\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden(): Observable<void> {\n        return this.onHideSubject.asObservable();\n    }\n\n    markForCheck(): void {\n        this.cdr.markForCheck();\n    }\n\n    handleBodyInteraction(): void {\n        if (this.closeOnInteraction) {\n            this.hide();\n        }\n    }\n}\n\nexport const MC_TOOLTIP_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-tooltip-scroll-strategy');\n\n/** @docs-private */\nexport function mcTooltipScrollStrategyFactory(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition({scrollThrottle: 20});\n}\n\n/** @docs-private */\nexport const MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: mcTooltipScrollStrategyFactory\n};\n\n/** Creates an error to be thrown if the user supplied an invalid tooltip position. */\nexport function getMcTooltipInvalidPositionError(position: string) {\n    return Error(`McTooltip position \"${position}\" is invalid.`);\n}\n\nconst VIEWPORT_MARGIN: number = 8;\n\n@Directive({\n    selector: '[mcTooltip], [attribute^=\"mcTooltip\"]',\n    exportAs: 'mcTooltip',\n    host: {\n        '(keydown)': 'handleKeydown($event)',\n        '(touchend)': 'handleTouchend()'\n    }\n})\nexport class McTooltip implements OnInit, OnDestroy {\n    isTooltipOpen: boolean = false;\n    isDynamicTooltip = false;\n    parentDisabled: boolean = false;\n    overlayRef: OverlayRef | null;\n    portal: ComponentPortal<McTooltipComponent>;\n    availablePositions: any;\n    tooltip: McTooltipComponent | null;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n    private $unsubscribe = new Subject<void>();\n\n    @Input('mcTooltip')\n    get mcTitle(): string {\n        return this._mcTitle;\n    }\n    set mcTitle(title: string) {\n        this._mcTitle = title;\n        this.updateCompValue('mcTitle', title);\n    }\n    private _mcTitle: string;\n\n    @Input('mcTitle')\n    set setTitle(title: string) {\n        this.mcTitle = title;\n    }\n\n    @Input('mcTooltipDisabled')\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    private _disabled: boolean = false;\n\n    @Input('mcMouseEnterDelay')\n    get mcMouseEnterDelay(): number {\n        return this._mcMouseEnterDelay;\n    }\n    set mcMouseEnterDelay(value: number) {\n        this._mcMouseEnterDelay = value;\n        this.updateCompValue('mcMouseEnterDelay', value);\n    }\n    private _mcMouseEnterDelay: number;\n\n    @Input('mcMouseLeaveDelay')\n    get mcMouseLeaveDelay(): number {\n        return this._mcMouseLeaveDelay;\n    }\n    set mcMouseLeaveDelay(value: number) {\n        this._mcMouseLeaveDelay = value;\n        this.updateCompValue('mcMouseLeaveDelay', value);\n    }\n    private _mcMouseLeaveDelay: number;\n\n    @Input('mcTrigger')\n    get mcTrigger(): string {\n        return this._mcTrigger;\n    }\n    set mcTrigger(value: string) {\n        if (value) {\n            this._mcTrigger = value;\n            this.updateCompValue('mcTrigger', value);\n        } else {\n            this._mcTrigger = 'hover';\n        }\n    }\n    private _mcTrigger: string = 'hover';\n\n    @Input('mcPlacement')\n    get mcPlacement(): string {\n        return this._mcPlacement;\n    }\n    set mcPlacement(value: string) {\n        if (value) {\n            this._mcPlacement = value;\n            this.updateCompValue('mcPlacement', value);\n        } else {\n            this._mcPlacement = 'top';\n        }\n    }\n    private _mcPlacement: string = 'top';\n\n    @Input('mcTooltipClass')\n    get mcTooltipClass() { return this._mcTooltipClass; }\n    set mсTooltipClass(value: string | string[] | Set<string> | {[key: string]: any}) {\n        this._mcTooltipClass = value;\n\n        if (this.tooltip) {\n            this.tooltip.setClassMap();\n        }\n    }\n    private _mcTooltipClass: string | string[] | Set<string> | {[key: string]: any};\n\n    @Input('mcVisible')\n    get mcVisible(): boolean {\n        return this._mcVisible;\n    }\n    set mcVisible(externalValue: boolean) {\n        const value = coerceBooleanProperty(externalValue);\n        this._mcVisible = value;\n        this.updateCompValue('mcVisible', value);\n\n        if (value) {\n            this.show();\n        }\n    }\n    private _mcVisible: boolean;\n\n    @HostBinding('class.mc-tooltip-open')\n    get isOpen(): boolean {\n        return this.isTooltipOpen;\n    }\n\n    @HostBinding('class.disabled')\n    get isParentDisabled(): boolean {\n        return this.parentDisabled;\n    }\n\n    private manualListeners = new Map<string, EventListenerOrEventListenerObject>();\n    private readonly destroyed = new Subject<void>();\n\n    constructor(\n        private overlay: Overlay,\n        private elementRef: ElementRef,\n        private ngZone: NgZone,\n        private scrollDispatcher: ScrollDispatcher,\n        private hostView: ViewContainerRef,\n        @Inject(MC_TOOLTIP_SCROLL_STRATEGY) private scrollStrategy,\n        @Optional() private direction: Directionality) {\n            this.availablePositions = POSITION_MAP;\n        }\n\n    /** Create the overlay config and position strategy */\n    createOverlay(): OverlayRef {\n        if (this.overlayRef) {\n            return this.overlayRef;\n        }\n\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this.overlay.position()\n            .flexibleConnectedTo(this.elementRef)\n            .withTransformOriginOn('.mc-tooltip')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(VIEWPORT_MARGIN)\n            .withPositions([ ...DEFAULT_4_POSITIONS ]);\n\n        const scrollableAncestors = this.scrollDispatcher\n            .getAncestorScrollContainers(this.elementRef);\n\n        strategy.withScrollableContainers(scrollableAncestors);\n\n        strategy.positionChanges.pipe(takeUntil(this.destroyed)).subscribe((change) => {\n            if (this.tooltip) {\n                this.onPositionChange(change);\n                if (change.scrollableViewProperties.isOverlayClipped && this.tooltip.mcVisible) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this.ngZone.run(() => this.hide());\n                }\n            }\n        });\n\n        this.overlayRef = this.overlay.create({\n            direction: this.direction,\n            positionStrategy: strategy,\n            panelClass: 'mc-tooltip-panel',\n            scrollStrategy: this.scrollStrategy()\n        });\n\n        this.updatePosition();\n\n        this.overlayRef.detachments()\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(() => this.detach());\n\n        return this.overlayRef;\n    }\n\n    detach() {\n        if (this.overlayRef && this.overlayRef.hasAttached()) {\n            this.overlayRef.detach();\n        }\n\n        this.tooltip = null;\n    }\n\n    onPositionChange($event: ConnectedOverlayPositionChange): void {\n        let updatedPlacement = this.mcPlacement;\n        Object.keys(this.availablePositions).some((key) => {\n            if ($event.connectionPair.originX === this.availablePositions[key].originX &&\n                $event.connectionPair.originY === this.availablePositions[key].originY &&\n                $event.connectionPair.overlayX === this.availablePositions[key].overlayX &&\n                $event.connectionPair.overlayY === this.availablePositions[key].overlayY) {\n                updatedPlacement = key;\n\n                return true;\n            }\n\n            return false;\n        });\n        this.updateCompValue('mcPlacement', updatedPlacement);\n\n        if (this.tooltip) {\n            this.tooltip.setClassMap();\n            this.tooltip.markForCheck();\n        }\n\n        this.handlePositioningUpdate();\n    }\n\n    handlePositioningUpdate() {\n        if (!this.overlayRef) {\n            this.overlayRef = this.createOverlay();\n        }\n        if (this.mcPlacement === 'right' || this.mcPlacement === 'left') {\n            const pos =\n                (this.overlayRef.overlayElement.clientHeight -\n                    this.hostView.element.nativeElement.clientHeight) / 2; // tslint:disable-line\n            const currentContainer = this.overlayRef.overlayElement.style.top || '0px';\n            this.overlayRef.overlayElement.style.top =\n                `${parseInt(currentContainer.split('px')[0], 10) + pos - 1}px`;\n            // TODO: обновлять положение стрелки\\указателя\\\"дятла\"\n        }\n    }\n\n    // tslint:disable-next-line:no-any\n    updateCompValue(key: string, value: any): void {\n        if (this.isDynamicTooltip && value) {\n            if (this.tooltip) {\n                this.tooltip[key] = value;\n            }\n        }\n    }\n\n    ngOnInit(): void {\n        this.initElementRefListeners();\n    }\n\n    ngOnDestroy(): void {\n        if (this.overlayRef) {\n            this.overlayRef.dispose();\n        }\n        this.manualListeners.forEach((listener, event) =>\n            this.elementRef.nativeElement.removeEventListener(event, listener));\n        this.manualListeners.clear();\n\n        this.$unsubscribe.next();\n        this.$unsubscribe.complete();\n    }\n\n    handleKeydown(e: KeyboardEvent) {\n        if (this.isTooltipOpen && e.keyCode === ESCAPE) { // tslint:disable-line\n            this.hide();\n        }\n    }\n\n    handleTouchend() {\n        this.hide();\n    }\n\n    initElementRefListeners() {\n        if (this.mcTrigger === 'hover') {\n\n            this.manualListeners\n                .set('mouseenter', () => this.show())\n                .set('mouseleave', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n\n        if (this.mcTrigger === 'focus') {\n\n            this.manualListeners\n                .set('focus', () => this.show())\n                .set('blur', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n    }\n\n    show(): void {\n        if (!this.disabled) {\n            if (!this.tooltip) {\n                const overlayRef = this.createOverlay();\n                this.detach();\n\n                this.portal = this.portal || new ComponentPortal(McTooltipComponent, this.hostView);\n\n                this.tooltip = overlayRef.attach(this.portal).instance;\n                this.tooltip.afterHidden()\n                    .pipe(takeUntil(this.destroyed))\n                    .subscribe(() => this.detach());\n                this.isDynamicTooltip = true;\n                const properties = [\n                    'mcTitle',\n                    'mcPlacement',\n                    'mcTrigger',\n                    'mcTooltipDisabled',\n                    'mcMouseEnterDelay',\n                    'mcMouseLeaveDelay',\n                    'mсTooltipClass',\n                    'mcVisible'\n                ];\n                properties.forEach((property) => this.updateCompValue(property, this[ property ]));\n                this.tooltip.mcVisibleChange.pipe(takeUntil(this.$unsubscribe), distinctUntilChanged())\n                    .subscribe((data) => {\n                        this.mcVisible = data;\n                        this.mcVisibleChange.emit(data);\n                        this.isTooltipOpen = data;\n                    });\n            }\n            this.updatePosition();\n            this.tooltip.show();\n        }\n    }\n\n    hide(): void {\n        if (this.tooltip) {\n            this.tooltip.hide();\n        }\n    }\n\n    /** Updates the position of the current tooltip. */\n    updatePosition() {\n        if (!this.overlayRef) {\n            this.overlayRef = this.createOverlay();\n        }\n        const position =\n            this.overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\n        const origin = this.getOrigin();\n        const overlay = this.getOverlayPosition();\n\n        position.withPositions([\n            {...origin.main, ...overlay.main},\n            {...origin.fallback, ...overlay.fallback}\n        ]);\n    }\n\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    getOrigin(): {main: IOriginConnectionPosition; fallback: IOriginConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this.direction || this.direction.value === 'ltr';\n        let originPosition: IOriginConnectionPosition;\n\n        if (position === 'top' || position === 'bottom') {\n            originPosition = {originX: 'center', originY: position === 'top' ? 'top' : 'bottom'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            originPosition = {originX: 'start', originY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            originPosition = {originX: 'end', originY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this.invertPosition(originPosition.originX, originPosition.originY);\n\n        return {\n            main: originPosition,\n            fallback: {originX: x, originY: y}\n        };\n    }\n\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    getOverlayPosition(): {main: IOverlayConnectionPosition; fallback: IOverlayConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this.direction || this.direction.value === 'ltr';\n        let overlayPosition: IOverlayConnectionPosition;\n\n        if (position === 'top') {\n            overlayPosition = {overlayX: 'center', overlayY: 'bottom'};\n        } else if (position === 'bottom') {\n            overlayPosition = {overlayX: 'center', overlayY: 'top'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            overlayPosition = {overlayX: 'end', overlayY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            overlayPosition = {overlayX: 'start', overlayY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this.invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n\n        return {\n            main: overlayPosition,\n            fallback: {overlayX: x, overlayY: y}\n        };\n    }\n\n    /** Inverts an overlay position. */\n    private invertPosition(x: HorizontalConnectionPos, y: VerticalConnectionPos) {\n        let newX: HorizontalConnectionPos = x;\n        let newY: VerticalConnectionPos = y;\n        if (this.mcPlacement === 'top' || this.mcPlacement === 'bottom') {\n            if (y === 'top') {\n                newY = 'bottom';\n            } else if (y === 'bottom') {\n                newY = 'top';\n            }\n        } else {\n            if (x === 'end') {\n                newX = 'start';\n            } else if (x === 'start') {\n                newX = 'end';\n            }\n        }\n\n        return {x: newX, y: newY};\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport {\n    McTooltipComponent,\n    McTooltip,\n    MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER\n} from './tooltip.component';\n\n\n@NgModule({\n    declarations: [McTooltipComponent, McTooltip],\n    exports: [McTooltipComponent, McTooltip],\n    imports: [CommonModule, OverlayModule],\n    providers: [MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n    entryComponents: [McTooltipComponent]\n})\nexport class McToolTipModule {\n}\n","import { Version } from '@angular/core';\n\n\nexport const VERSION = new Version('1.0.0-beta.5-f7a0aa0');\n","/* tslint:disable:no-empty */\n\nimport {\n    AfterContentInit,\n    AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    Directive,\n    DoCheck,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Input,\n    isDevMode,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    QueryList,\n    Renderer2,\n    Self,\n    SimpleChanges,\n    ViewChild,\n    ViewChildren,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    RIGHT_ARROW,\n    SPACE,\n    UP_ARROW,\n    A\n} from '@ptsecurity/cdk/keycodes';\nimport {\n    CdkConnectedOverlay,\n    ViewportRuler\n} from '@ptsecurity/cdk/overlay';\nimport { CdkTree } from '@ptsecurity/cdk/tree';\nimport {\n    getOptionScrollPosition,\n    CanDisable,\n    CanUpdateErrorState,\n    ErrorStateMatcher,\n    HasTabIndex,\n    CanDisableCtor,\n    HasTabIndexCtor,\n    CanUpdateErrorStateCtor,\n    mixinTabIndex,\n    mixinDisabled,\n    mixinErrorState,\n    mcSelectAnimations,\n\n    SELECT_PANEL_MAX_HEIGHT,\n    SELECT_PANEL_PADDING_X,\n    SELECT_PANEL_VIEWPORT_PADDING,\n\n    getMcSelectDynamicMultipleError,\n    getMcSelectNonFunctionValueError,\n    getMcSelectNonArrayValueError,\n    MC_SELECT_SCROLL_STRATEGY\n} from '@ptsecurity/mosaic/core';\nimport { McFormField, McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { McTag } from '@ptsecurity/mosaic/tag';\nimport { McTreeSelection, McTreeOption } from '@ptsecurity/mosaic/tree';\nimport { defer, merge, Observable, Subject } from 'rxjs';\nimport {\n    filter,\n    map,\n    startWith,\n    switchMap,\n    take,\n    takeUntil,\n    distinctUntilChanged\n} from 'rxjs/operators';\n\n\nlet nextUniqueId = 0;\n\n/** Change event object that is emitted when the select value has changed. */\nexport class McTreeSelectChange {\n    constructor(public source: McTreeOption, public value: any, public isUserInput = false) {}\n}\n\n\n@Directive({ selector: 'mc-tree-select-trigger' })\nexport class McTreeSelectTrigger {}\n\n\nclass McTreeSelectBase {\n    constructor(\n        public elementRef: ElementRef,\n        public defaultErrorStateMatcher: ErrorStateMatcher,\n        public parentForm: NgForm,\n        public parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl\n    ) {}\n}\n\n// tslint:disable-next-line:naming-convention\nconst McTreeSelectMixinBase: CanDisableCtor & HasTabIndexCtor & CanUpdateErrorStateCtor &\n    typeof McTreeSelectBase = mixinTabIndex(mixinDisabled(mixinErrorState(McTreeSelectBase)));\n\n\n@Component({\n    selector: 'mc-tree-select',\n    exportAs: 'mcTreeSelect',\n    templateUrl: 'tree-select.html',\n    styleUrls: ['./tree-select.css'],\n    inputs: ['disabled', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'tabIndex',\n\n        class: 'mc-tree-select',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-select-invalid]': 'errorState',\n        '[class.mc-select-required]': 'required',\n\n        '(keydown)': 'handleKeydown($event)',\n        '(focus)': 'onFocus()',\n        '(blur)': 'onBlur()',\n        '(window:resize)': 'calculateHiddenItems()'\n    },\n    animations: [\n        mcSelectAnimations.transformPanel,\n        mcSelectAnimations.fadeInContent\n    ],\n    providers: [\n        { provide: McFormFieldControl, useExisting: McTreeSelect },\n        { provide: CdkTree, useExisting: McTreeSelect }\n    ]\n})\nexport class McTreeSelect extends McTreeSelectMixinBase implements\n    AfterContentInit, AfterViewInit, OnChanges, OnDestroy, OnInit, DoCheck, ControlValueAccessor,\n    CanDisable, HasTabIndex, McFormFieldControl<any>, CanUpdateErrorState {\n\n    /** A name for this control that can be used by `mc-form-field`. */\n    controlType = 'mc-select';\n\n    hiddenItems: number = 0;\n    oneMoreText: string = '...ещё';\n\n    /** The last measured value for the trigger's client bounding rect. */\n    triggerRect: ClientRect;\n\n    /** The cached font-size of the trigger element. */\n    triggerFontSize = 0;\n\n    /** Deals with the selection logic. */\n    selectionModel: SelectionModel<McTreeOption>;\n\n    /** The IDs of child options to be passed to the aria-owns attribute. */\n    optionIds: string = '';\n\n    /** The value of the select panel's transform-origin property. */\n    transformOrigin: string = 'top';\n\n    /** Whether the panel's animation is done. */\n    panelDoneAnimating: boolean = false;\n\n    /** Emits when the panel element is finished transforming in. */\n    panelDoneAnimatingStream = new Subject<string>();\n\n    /** Strategy that will be used to handle scrolling while the select panel is open. */\n    scrollStrategy = this.scrollStrategyFactory();\n\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     */\n    offsetY = 0;\n\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     */\n    positions = [\n        {\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top'\n        },\n        {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'bottom'\n        }\n    ];\n\n    @ViewChild('trigger') trigger: ElementRef;\n\n    @ViewChild('panel') panel: ElementRef;\n\n    @ViewChild(CdkConnectedOverlay) overlayDir: CdkConnectedOverlay;\n\n    @ViewChildren(McTag) tags: QueryList<McTag>;\n\n    /** User-supplied override of the trigger element. */\n    @ContentChild(McTreeSelectTrigger) customTrigger: McTreeSelectTrigger;\n\n    @ContentChild(McTreeSelection) tree: McTreeSelection;\n\n    /** Event emitted when the select panel has been toggled. */\n    @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the select has been opened. */\n    @Output('opened') readonly openedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => o), map(() => {}));\n\n    /** Event emitted when the select has been closed. */\n    @Output('closed') readonly closedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => !o), map(() => {}));\n\n    /** Event emitted when the selected value has been changed by the user. */\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectChange>();\n\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Classes to be passed to the select panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[] | Set<string> | { [key: string]: any };\n\n    /** Object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     */\n    @Input() sortComparator: (\n        a: McTreeOption, b: McTreeOption, options: McTreeOption[]\n    ) => number;\n\n    /** Combined stream of all of the child options' change events. */\n    readonly optionSelectionChanges: Observable<McTreeSelectChange> = defer(() => {\n        if (this.options) {\n            return merge(...this.options.map((option) => option.onSelectionChange));\n        }\n\n        return this.ngZone.onStable\n            .asObservable()\n            .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n    }) as Observable<McTreeSelectChange>;\n\n    options: QueryList<McTreeOption>;\n\n    private originalOnKeyDown: (event: KeyboardEvent) => void;\n\n    @Input()\n    get placeholder(): string {\n        return this._placeholder;\n    }\n\n    set placeholder(value: string) {\n        this._placeholder = value;\n\n        this.stateChanges.next();\n    }\n\n    private _placeholder: string;\n\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n\n        this.stateChanges.next();\n    }\n\n    private _required: boolean = false;\n\n    @Input()\n    get multiple(): boolean {\n        return this._multiple;\n    }\n\n    set multiple(value: boolean) {\n        if (this.selectionModel) {\n            throw getMcSelectDynamicMultipleError();\n        }\n\n        this._multiple = coerceBooleanProperty(value);\n    }\n\n    private _multiple: boolean = false;\n\n    @Input()\n    get autoSelect(): boolean {\n        if (this.multiple) { return false; }\n\n        return this._autoSelect;\n    }\n\n    set autoSelect(value: boolean) {\n        this._autoSelect = coerceBooleanProperty(value);\n    }\n\n    private _autoSelect: boolean = true;\n\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    @Input()\n    get compareWith() {\n        return this._compareWith;\n    }\n\n    set compareWith(fn: (o1: any, o2: any) => boolean) {\n        /* tslint:disable-next-line:strict-type-predicates */\n        if (typeof fn !== 'function') {\n            throw getMcSelectNonFunctionValueError();\n        }\n\n        this._compareWith = fn;\n\n        if (this.selectionModel) {\n            // A different comparator means the selection could change.\n            this.initializeSelection();\n        }\n    }\n\n    /** Value of the select control. */\n    @Input()\n    get value(): any {\n        return this._value;\n    }\n\n    set value(newValue: any) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n\n    private _value: any;\n\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this.uid;\n        this.stateChanges.next();\n    }\n\n    private _id: string;\n\n    /** Whether the select is focused. */\n    get focused(): boolean {\n        return this._focused || this._panelOpen;\n    }\n\n    /**\n     * @deprecated Setter to be removed as this property is intended to be readonly.\n     * @breaking-change 8.0.0\n     */\n    set focused(value: boolean) {\n        this._focused = value;\n    }\n\n    private _focused = false;\n\n    get panelOpen(): boolean {\n        return this._panelOpen;\n    }\n\n    private _panelOpen = false;\n\n    /** The scroll position of the overlay panel, calculated to center the selected option. */\n    private scrollTop = 0;\n\n    /** Unique id for this input. */\n    private readonly uid = `mc-select-${nextUniqueId++}`;\n\n    /** Emits whenever the component is destroyed. */\n    private readonly destroy = new Subject<void>();\n\n    constructor(\n        private readonly viewportRuler: ViewportRuler,\n        readonly changeDetectorRef: ChangeDetectorRef,\n        private readonly ngZone: NgZone,\n        private readonly renderer: Renderer2,\n        defaultErrorStateMatcher: ErrorStateMatcher,\n        public elementRef: ElementRef,\n        @Optional() private readonly dir: Directionality,\n        @Optional() parentForm: NgForm,\n        @Optional() parentFormGroup: FormGroupDirective,\n        @Optional() private readonly parentFormField: McFormField,\n        @Self() @Optional() public ngControl: NgControl,\n        @Attribute('tabindex') tabIndex: string,\n        @Inject(MC_SELECT_SCROLL_STRATEGY) private readonly scrollStrategyFactory\n    ) {\n        super(elementRef, defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\n\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnInit() {\n        if (this.tree) {\n            this.tree.multiple = this.multiple;\n        }\n\n        this.stateChanges.next();\n\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this.panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this.destroy))\n            .subscribe(() => {\n                if (this.panelOpen) {\n                    this.scrollTop = 0;\n                    this.openedChange.emit(true);\n                } else {\n                    this.openedChange.emit(false);\n                    this.panelDoneAnimating = false;\n                    this.overlayDir.offsetX = 0;\n                    this.changeDetectorRef.markForCheck();\n                }\n            });\n    }\n\n    ngAfterContentInit() {\n        if (!this.tree) { return; }\n\n        this.initKeyManager();\n\n        this.selectionModel = this.tree.selectionModel = new SelectionModel<McTreeOption>(this.multiple);\n        this.options = this.tree.options;\n        this.tree.autoSelect = this.autoSelect;\n\n        this.selectionModel.changed\n            .pipe(takeUntil(this.destroy))\n            .subscribe((event) => {\n                event.added.forEach((option) => option.select());\n                event.removed.forEach((option) => option.deselect());\n            });\n    }\n\n    ngAfterViewInit() {\n        if (!this.tree) { return; }\n\n        this.tags.changes\n            .subscribe(() => {\n                setTimeout(() => this.calculateHiddenItems(), 0);\n            });\n\n        this.options.changes\n            .pipe(startWith(null), takeUntil(this.destroy))\n            .subscribe(() => {\n                this.updateSelectedOptions();\n\n                this.resetOptions();\n            });\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) { this.updateErrorState(); }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes.disabled) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy() {\n        this.destroy.next();\n\n        this.destroy.complete();\n        this.stateChanges.complete();\n    }\n\n    /** `View -> model callback called when value changes` */\n    onChange: (value: any) => void = () => {};\n\n    /** `View -> model callback called when select has been touched` */\n    onTouched = () => {};\n\n    toggle() {\n        if (this.panelOpen) {\n            this.close();\n        } else {\n            this.open();\n        }\n    }\n\n    open() {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) { return; }\n\n        this.triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this.triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement)['font-size']);\n\n        this._panelOpen = true;\n        // this.tree.keyManager.withHorizontalOrientation(null);\n        this.calculateOverlayPosition();\n        this.highlightCorrectOption();\n        this.changeDetectorRef.markForCheck();\n\n        // Set the font size on the panel element once it exists.\n        this.ngZone.onStable.asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                if (this.triggerFontSize && this.overlayDir.overlayRef &&\n                    this.overlayDir.overlayRef.overlayElement) {\n                    this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this.triggerFontSize}px`;\n                }\n            });\n    }\n\n    /** Closes the overlay panel and focuses the host element. */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n\n            // this.tree.keyManager.setActiveItem(-1);\n\n            // this.tree.keyManager.withHorizontalOrientation(this.isRtl() ? 'rtl' : 'ltr');\n            this.changeDetectorRef.markForCheck();\n            this.onTouched();\n        }\n    }\n\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    // todo нужно доделать!\n    writeValue(value: any) {\n        if (this.options) {\n            this.setSelectionByValue(value);\n        }\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn: (value: any) => void) {\n        this.onChange = fn;\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn: () => {}) {\n        this.onTouched = fn;\n    }\n\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n        this.changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n\n    get selected(): McTreeOption | McTreeOption[] {\n        return this.multiple ? this.selectionModel.selected : this.selectionModel.selected[0];\n    }\n\n    get triggerValue(): string {\n        if (this.empty) { return ''; }\n\n        return (this.selected as McTreeOption).viewValue;\n    }\n\n    get triggerValues(): McTreeOption[] {\n        if (this.empty) { return []; }\n\n        const selectedOptions = this.selectionModel.selected;\n\n        if (this.isRtl()) { selectedOptions.reverse(); }\n\n        return selectedOptions;\n    }\n\n    get empty(): boolean {\n        return !this.selectionModel || this.selectionModel.isEmpty();\n    }\n\n    isRtl(): boolean {\n        return this.dir ? this.dir.value === 'rtl' : false;\n    }\n\n    handleKeydown(event: KeyboardEvent) {\n        if (!this.disabled) {\n            if (this.panelOpen) {\n                this.handleOpenKeydown(event);\n            } else {\n                this.handleClosedKeydown(event);\n            }\n        }\n    }\n\n    /**\n     * When the panel content is done fading in, the panelDoneAnimating property is\n     * set so the proper class can be added to the panel.\n     */\n    onFadeInDone() {\n        this.panelDoneAnimating = this.panelOpen;\n        this.changeDetectorRef.markForCheck();\n    }\n\n    onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    onBlur() {\n        this._focused = false;\n\n        if (!this.disabled && !this.panelOpen) {\n            this.onTouched();\n            this.changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n\n    /** Callback that is invoked when the overlay panel has been attached. */\n    onAttached() {\n        this.overlayDir.positionChange\n            .pipe(take(1))\n            .subscribe(() => {\n                this.changeDetectorRef.detectChanges();\n                this.calculateOverlayOffsetX();\n                this.panel.nativeElement.scrollTop = this.scrollTop;\n            });\n    }\n\n    /** Returns the theme to be used on the panel. */\n    getPanelTheme(): string {\n        return this.parentFormField ? `mc-${this.parentFormField.color}` : '';\n    }\n\n    /** Focuses the select element. */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    calculateOverlayScroll(selectedIndex: number, scrollBuffer: number, maxScroll: number): number {\n        const itemHeight = this.getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n\n        /* tslint:disable-next-line:no-magic-numbers */\n        const halfOptionHeight = itemHeight / 2;\n\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n\n    /** Invoked when an option is clicked. */\n    onRemoveSelectedOption(selectedOption: McTreeOption, $event) {\n        $event.stopPropagation();\n\n        this.options.forEach((option) => {\n            if (option.data === selectedOption.data) { option.deselect(); }\n        });\n\n        this.selectionModel.deselect(selectedOption);\n    }\n\n    calculateHiddenItems() {\n        if (this.empty || !this.multiple) { return; }\n\n        let visibleItems: number = 0;\n        const totalItemsWidth = this.getTotalItemsWidthInMatcher();\n        let totalVisibleItemsWidth: number = 0;\n        const itemMargin: number = 4;\n\n        this.tags.forEach((tag) => {\n            if (tag.nativeElement.offsetTop < tag.nativeElement.offsetHeight) {\n                totalVisibleItemsWidth += tag.nativeElement.getBoundingClientRect().width + itemMargin;\n                visibleItems++;\n            }\n        });\n\n        this.hiddenItems = this.selectionModel.selected.length - visibleItems;\n\n        if (this.hiddenItems) {\n            const itemsCounter = this.trigger.nativeElement.querySelector('.mc-tree-select__match-hidden-text');\n            const matcherList = this.trigger.nativeElement.querySelector('.mc-tree-select__match-list');\n\n            const itemsCounterShowed = itemsCounter.offsetTop < itemsCounter.offsetHeight;\n            // const itemsCounterWidth: number = itemsCounter.getBoundingClientRect().width;\n            const itemsCounterWidth: number = 86;\n\n            const matcherListWidth: number = matcherList.getBoundingClientRect().width;\n            const matcherWidth: number = matcherListWidth + itemsCounterWidth;\n\n            if (itemsCounterShowed && (totalItemsWidth < matcherWidth)) { this.hiddenItems = 0; }\n\n            if (\n                totalVisibleItemsWidth === matcherListWidth ||\n                (totalVisibleItemsWidth + itemsCounterWidth) < matcherListWidth\n            ) {\n                this.changeDetectorRef.markForCheck();\n\n                return ;\n            } else if (!itemsCounterShowed && (totalItemsWidth + itemsCounterWidth) > matcherWidth) {\n                this.hiddenItems++;\n            }\n        }\n\n        this.changeDetectorRef.markForCheck();\n    }\n\n    private updateSelectedOptions(): void {\n        this.selectionModel.selected.forEach((selectedOption) => {\n            this.options.forEach((option) => {\n                if (option.data === selectedOption.data) {\n                    this.selectionModel.deselect(selectedOption);\n                    this.selectionModel.select(option);\n\n                    option.select();\n                }\n            });\n        });\n    }\n\n    private getTotalItemsWidthInMatcher(): number {\n        const triggerClone = this.trigger.nativeElement.cloneNode(true);\n        triggerClone.querySelector('.mc-tree-select__match-hidden-text').remove();\n\n        this.renderer.setStyle(triggerClone, 'position', 'absolute');\n        this.renderer.setStyle(triggerClone, 'visibility', 'hidden');\n        this.renderer.setStyle(triggerClone, 'top', '-100%');\n        this.renderer.setStyle(triggerClone, 'left', '0');\n\n        this.renderer.appendChild(this.trigger.nativeElement, triggerClone);\n\n        let totalItemsWidth: number = 0;\n        const itemMargin: number = 4;\n        triggerClone.querySelectorAll('mc-tag').forEach((item) => {\n            totalItemsWidth += item.getBoundingClientRect().width as number + itemMargin;\n        });\n\n        triggerClone.remove();\n\n        return totalItemsWidth;\n    }\n\n    private handleClosedKeydown(event: KeyboardEvent) {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n\n        // Open the select on ALT + arrow key to match the native <select>\n        if (isOpenKey || ((this.multiple || event.altKey) && isArrowKey)) {\n            // prevents the page from scrolling down when pressing space\n            event.preventDefault();\n\n            this.open();\n        } else if (!this.multiple && this.tree.keyManager && this.tree.keyManager.onKeydown) {\n            this.tree.keyManager.onKeydown(event);\n        }\n    }\n\n    private handleOpenKeydown(event: KeyboardEvent) {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n\n        if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n\n            this.close();\n        } else if (keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW) {\n            return this.originalOnKeyDown.call(this.tree, event);\n        } else if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n\n            if (keyCode === HOME) {\n                this.tree.keyManager.setFirstItemActive();\n            } else {\n                this.tree.keyManager.setLastItemActive();\n            }\n        } else if ((keyCode === ENTER || keyCode === SPACE) && this.tree.keyManager.activeItem) {\n            event.preventDefault();\n\n            this.tree.keyManager.activeItem.selectViaInteraction();\n        } else if (this.multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n\n            const hasDeselectedOptions = this.options.some((option) => !option.selected);\n\n            this.options.forEach((option) => {\n                if (hasDeselectedOptions && !option.disabled) {\n                    option.select();\n                } else {\n                    option.deselect();\n                }\n            });\n        } else {\n            const previouslyFocusedIndex = this.tree.keyManager.activeItemIndex;\n\n            this.tree.keyManager.onKeydown(event);\n\n            if (this.multiple && isArrowKey && event.shiftKey && this.tree.keyManager.activeItem &&\n                this.tree.keyManager.activeItemIndex !== previouslyFocusedIndex) {\n                this.tree.keyManager.activeItem.selectViaInteraction();\n            }\n        }\n    }\n\n    private initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this.setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n        });\n    }\n\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    private setSelectionByValue(value: any | any[]) {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) { throw getMcSelectNonArrayValueError(); }\n\n            this.selectionModel.clear();\n            value.forEach((currentValue: any) => this.selectValue(currentValue));\n            this.sortValues();\n        } else {\n            this.selectionModel.clear();\n            const correspondingOption = this.selectValue(value);\n\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this.tree.keyManager.setActiveItem(correspondingOption);\n            }\n        }\n\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    private selectValue(value: any): McTreeOption | undefined {\n        const correspondingOption = this.options.find((option: McTreeOption) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            } catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n\n                return false;\n            }\n        });\n\n        if (correspondingOption) {\n            this.selectionModel.select(correspondingOption);\n        }\n\n        return correspondingOption;\n    }\n\n    private initKeyManager() {\n        this.originalOnKeyDown = this.tree.onKeyDown;\n\n        this.tree.onKeyDown = () => {};\n\n        this.tree.keyManager.tabOut\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => {\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            });\n\n        this.tree.keyManager.change\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => {\n                if (this._panelOpen && this.panel) {\n                    this.scrollActiveOptionIntoView();\n                } else if (!this._panelOpen && !this.multiple && this.tree.keyManager.activeItem) {\n                    this.tree.keyManager.activeItem.selectViaInteraction();\n                }\n            });\n    }\n\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    private resetOptions() {\n        const changedOrDestroyed = merge(this.options.changes, this.destroy);\n\n        this.optionSelectionChanges\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((event) => {\n                this.onSelect(event.source, event.isUserInput);\n\n                if (event.isUserInput && !this.multiple && this._panelOpen) {\n                    this.close();\n                    this.focus();\n                }\n            });\n\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        // merge(...this.options.map((option) => option.stateChanges))\n        //     .pipe(takeUntil(changedOrDestroyed))\n        //     .subscribe(() => {\n        //         this.changeDetectorRef.markForCheck();\n        //         this.stateChanges.next();\n        //     });\n\n        this.setOptionIds();\n    }\n\n    /** Invoked when an option is clicked. */\n    private onSelect(option: McTreeOption, isUserInput: boolean) {\n        const wasSelected = this.selectionModel.isSelected(option);\n\n        if (option.value == null && !this.multiple) {\n            option.deselect();\n            this.selectionModel.clear();\n            this.propagateChanges(option.value);\n        } else {\n            if (option.selected) {\n                this.selectionModel.select(option);\n            } else {\n                this.selectionModel.deselect(option);\n            }\n\n            if (isUserInput) {\n                this.tree.keyManager.setActiveItem(option);\n            }\n\n            if (this.multiple) {\n                this.sortValues();\n\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mc-option`.\n                    this.focus();\n                }\n            }\n        }\n\n        if (wasSelected !== this.selectionModel.isSelected(option)) {\n            this.propagateChanges();\n        }\n\n        this.stateChanges.next();\n    }\n\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    private sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n\n            this.selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n\n    /** Emits change event to set the model value. */\n    private propagateChanges(fallbackValue?: any) {\n        let valueToEmit: any = null;\n\n        if (this.multiple) {\n            valueToEmit = (this.selected as any).map((option) => option.value);\n        } else {\n            valueToEmit = this.selected ? (this.selected as any).value : fallbackValue;\n        }\n\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this.onChange(valueToEmit);\n        this.selectionChange.emit(new McTreeSelectChange(this as any, valueToEmit));\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** Records option IDs to pass to the aria-owns property. */\n    private setOptionIds() {\n        this.optionIds = this.options.map((option) => option.id).join(' ');\n    }\n\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    private highlightCorrectOption() {\n        if (this.tree.keyManager) {\n            if (this.empty) {\n                this.tree.keyManager.setFirstItemActive();\n            } else {\n                this.tree.keyManager.setActiveItem(this.selectionModel.selected[0]);\n            }\n        }\n    }\n\n    /** Scrolls the active option into view. */\n    private scrollActiveOptionIntoView() {\n        const activeOptionIndex = this.tree.keyManager.activeItemIndex || 0;\n\n        this.panel.nativeElement.scrollTop = getOptionScrollPosition(\n            activeOptionIndex,\n            this.getItemHeight(),\n            this.panel.nativeElement.scrollTop,\n            SELECT_PANEL_MAX_HEIGHT\n        );\n    }\n\n    /** Gets the index of the provided option in the option list. */\n    private getOptionIndex(option: McTreeOption): number | undefined {\n        // todo разобраться с этим срачем!\n        return this.options.reduce((result: number, current: McTreeOption, index: number) => {\n            /* tslint:disable-next-line:strict-type-predicates */\n            return result === undefined ? (option === current ? index : undefined) : result;\n        }, undefined);\n    }\n\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    private calculateOverlayPosition() {\n        const itemHeight = this.getItemHeight();\n        const items = this.getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n\n        // If no value is selected we open the popup to the first item.\n        const selectedOptionOffset =\n            this.empty ? 0 : this.getOptionIndex(this.selectionModel.selected[0])!;\n\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /* tslint:disable-next-line:no-magic-numbers */\n        const scrollBuffer = panelHeight / 2;\n        this.scrollTop = this.calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this.offsetY = this.calculateOverlayOffsetY();\n\n        this.checkOverlayWithinViewport(maxScroll);\n    }\n\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    private calculateOverlayOffsetX() {\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this.viewportRuler.getViewportSize();\n        const isRtl = this.isRtl();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const paddingWidth = SELECT_PANEL_PADDING_X * 2;\n        let offsetX: number = SELECT_PANEL_PADDING_X;\n\n        // Invert the offset in LTR.\n        if (!isRtl) { offsetX *= -1; }\n\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        } else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    private calculateOverlayOffsetY(): number {\n        // const itemHeight = this.getItemHeight();\n        // const optionHeightAdjustment = (itemHeight - this.triggerRect.height) / 2;\n\n        // todo I'm not sure that we will use it\n        return 0;\n        // return Math.round(-optionHeightAdjustment);\n    }\n\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    private checkOverlayWithinViewport(maxScroll: number) {\n        const itemHeight = this.getItemHeight();\n        const viewportSize = this.viewportRuler.getViewportSize();\n\n        const topSpaceAvailable = this.triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable =\n            viewportSize.height - this.triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n\n        const panelHeightTop = Math.abs(this.offsetY);\n        const totalPanelHeight =\n            Math.min(this.getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this.triggerRect.height;\n\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this.adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        } else if (panelHeightTop > topSpaceAvailable) {\n            this.adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        } else {\n            this.transformOrigin = this.getOriginBasedOnOption();\n        }\n    }\n\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    private adjustPanelUp(panelHeightBottom: number, bottomSpaceAvailable: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this.scrollTop -= distanceBelowViewport;\n        this.offsetY -= distanceBelowViewport;\n        this.transformOrigin = this.getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this.scrollTop <= 0) {\n            this.scrollTop = 0;\n            this.offsetY = 0;\n            this.transformOrigin = `50% bottom 0px`;\n        }\n    }\n\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    private adjustPanelDown(panelHeightTop: number, topSpaceAvailable: number, maxScroll: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this.scrollTop += distanceAboveViewport;\n        this.offsetY += distanceAboveViewport;\n        this.transformOrigin = this.getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this.scrollTop >= maxScroll) {\n            this.scrollTop = maxScroll;\n            this.offsetY = 0;\n            this.transformOrigin = `50% top 0px`;\n\n            return;\n        }\n    }\n\n    /** Sets the transform origin point based on the selected option. */\n    private getOriginBasedOnOption(): string {\n        const itemHeight = this.getItemHeight();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const optionHeightAdjustment = (itemHeight - this.triggerRect.height) / 2;\n        /* tslint:disable-next-line:no-magic-numbers */\n        const originY = Math.abs(this.offsetY) - optionHeightAdjustment + itemHeight / 2;\n\n        return `50% ${originY}px 0px`;\n    }\n\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    private getItemCount(): number {\n        return this.options.length;\n    }\n\n    /** Calculates the height of the select's options. */\n    private getItemHeight(): number {\n        // todo доделать\n        /* tslint:disable-next-line:no-magic-numbers */\n        return 32;\n        // return this.triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n\n    /** Comparison function to specify which option is displayed. Defaults to object equality. */\n    private _compareWith = (o1: any, o2: any) => o1 === o2;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\nimport { MC_SELECT_SCROLL_STRATEGY_PROVIDER, McPseudoCheckboxModule } from '@ptsecurity/mosaic/core';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport { McTagModule } from '@ptsecurity/mosaic/tag';\nimport { McTreeModule } from '@ptsecurity/mosaic/tree';\n\nimport { McTreeSelect, McTreeSelectTrigger } from './tree-select.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        CdkTreeModule,\n        McTreeModule,\n        McIconModule,\n        McTagModule,\n        McPseudoCheckboxModule\n    ],\n    exports: [McTreeSelect, McTreeSelectTrigger, CommonModule],\n    declarations: [McTreeSelect, McTreeSelectTrigger],\n    providers: [MC_SELECT_SCROLL_STRATEGY_PROVIDER]\n})\nexport class McTreeSelectModule {}\n","import {\n    Directive, DoCheck, ElementRef, Inject,\n    Input, OnChanges, OnDestroy, Optional,\n    Self, InjectionToken, NgZone, OnInit\n} from '@angular/core';\nimport { FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { fromEvent, Subscription, Subject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\n\nexport const MC_TEXTAREA_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_TEXTAREA_VALUE_ACCESSOR');\n\nlet nextUniqueId = 0;\n\nconst ROW_SEPARATOR = '\\n';\n\nexport class McTextareaBase {\n    constructor(public defaultErrorStateMatcher: ErrorStateMatcher,\n                public parentForm: NgForm,\n                public parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McTextareaMixinBase: CanUpdateErrorStateCtor & typeof McTextareaBase = mixinErrorState(McTextareaBase);\n\n@Directive({\n    selector: 'textarea[mcTextarea]',\n    exportAs: 'mcTextarea',\n    host: {\n        class: 'mc-textarea',\n        '[class.mc-textarea-resizable]': '!canGrow',\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[attr.aria-invalid]': 'errorState',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': 'focusChanged(false)',\n        '(focus)': 'focusChanged(true)'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McTextarea }]\n})\nexport class McTextarea extends McTextareaMixinBase implements McFormFieldControl<any>, OnInit, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    @Input() canGrow: boolean = true;\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-textarea';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this.uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this.valueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this.valueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected uid = `mc-textsrea-${nextUniqueId++}`;\n    protected previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n\n    private valueAccessor: { value: any };\n    private growSubscription: Subscription;\n\n    private lineHeight: number = 0;\n    private freeRowsHeight: number = 0;\n    private minHeight: number = 0;\n\n    constructor(protected elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() parentForm: NgForm,\n                @Optional() parentFormGroup: FormGroupDirective,\n                defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_TEXTAREA_VALUE_ACCESSOR) inputValueAccessor: any,\n                private ngZone: NgZone) {\n        super(defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the textarea value\n        // accessor.\n        this.valueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        const growObserver = fromEvent(elementRef.nativeElement, 'input')\n            /*.pipe(\n                map((event: any) => this.getGrowHeight()),\n                // map((event: any) => event.target.scrollHeight),\n                distinctUntilChanged()\n            )*/;\n        this.growSubscription = growObserver.subscribe(this.grow.bind(this));\n    }\n\n    ngOnInit() {\n        setTimeout(() => this.grow(), 0);\n        this.lineHeight = parseInt(getComputedStyle(this.elementRef.nativeElement).lineHeight!, 10);\n\n        const paddingTop = parseInt(getComputedStyle(this.elementRef.nativeElement).paddingTop!, 10);\n        const paddingBottom = parseInt(getComputedStyle(this.elementRef.nativeElement).paddingBottom!, 10);\n\n        // tslint:disable-next-line:no-magic-numbers\n        this.minHeight = this.lineHeight * 2 + paddingTop + paddingBottom;\n        this.freeRowsHeight = this.lineHeight;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        this.growSubscription.unsubscribe();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    /** Grow textarea height to avoid vertical scroll  */\n    grow() {\n        if (!this.canGrow) {\n            return;\n        }\n\n        this.ngZone.runOutsideAngular(() => {\n            const textarea = this.elementRef.nativeElement;\n\n            const outerHeight = parseInt(window.getComputedStyle(textarea).height!, 10);\n            const diff = outerHeight - textarea.clientHeight;\n\n            textarea.style.height = 0; // this line is important to height recalculation\n\n            const height = Math.max(this.minHeight, textarea.scrollHeight + diff + this.freeRowsHeight);\n            textarea.style.height = `${height}px`;\n        });\n    }\n\n    /** Focuses the textarea. */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the textarea changes. */\n    focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native textarea `value` property. */\n    protected dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the textarea is invalid based on the native validation. */\n    protected isBadInput(): boolean {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this.elementRef.nativeElement as HTMLTextAreaElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private getGrowHeight(): number {\n        const textarea = this.elementRef.nativeElement;\n        const outerHeight = parseInt(window.getComputedStyle(textarea).height!.toString(), 10);\n        const diff = outerHeight - textarea.clientHeight;\n\n        return Math.max(this.minHeight, textarea.scrollHeight + diff);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McTextarea } from './textarea.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McTextarea],\n    declarations: [McTextarea]\n})\nexport class McTextareaModule {\n}\n","import {\n    Directive,\n    DoCheck,\n    ElementRef,\n    forwardRef,\n    Inject,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Renderer2,\n    Self\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroupDirective,\n    NG_VALIDATORS,\n    NgControl,\n    NgForm,\n    ValidationErrors,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { MC_INPUT_VALUE_ACCESSOR } from '@ptsecurity/mosaic/input';\nimport {\n    noop,\n    Subject\n} from 'rxjs';\n\nimport {\n    ARROW_DOWN_KEYCODE,\n    ARROW_LEFT_KEYCODE,\n    ARROW_RIGHT_KEYCODE,\n    ARROW_UP_KEYCODE,\n    DEFAULT_TIME_FORMAT,\n    HOURS_PER_DAY,\n    HOURS_MINUTES_REGEXP,\n    HOURS_MINUTES_SECONDS_REGEXP,\n    HOURS_ONLY_REGEXP,\n    MINUTES_PER_HOUR,\n    SECONDS_PER_MINUTE,\n    TIMEFORMAT_PLACEHOLDERS,\n    TimeFormats,\n    TimeParts\n} from './timepicker.constants';\n\n\nlet uniqueComponentIdSuffix: number = 0;\n\nconst formValidators: WeakMap<FormControl, ValidatorFn | null> = new WeakMap();\nconst formValidatorOnChangeRegistrators: WeakMap<FormControl, () => void> = new WeakMap();\nconst validatorOnChange = (c: FormControl) => {\n    const validatorOnChangeHandler = formValidatorOnChangeRegistrators.get(c);\n\n    if (validatorOnChangeHandler !== undefined) { validatorOnChangeHandler(); }\n};\n\nexport class McTimepickerBase {\n    constructor(\n        public defaultErrorStateMatcher: ErrorStateMatcher,\n        public parentForm: NgForm,\n        public parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl) { }\n}\n\n// tslint:disable-next-line naming-convention\nexport const McTimepickerMixinBase:\n    CanUpdateErrorStateCtor &\n    typeof McTimepickerBase = mixinErrorState(McTimepickerBase);\n\n@Directive({\n    selector: 'input[mcTimepicker]',\n    exportAs: 'mcTimepickerInput',\n    host: {\n        class: 'mc-timepicker mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '[attr.time-format]': 'timeFormat',\n        '[attr.min-time]': 'minTime',\n        '[attr.max-time]': 'maxTime',\n        '[attr.value]': 'value',\n        '[attr.aria-invalid]': 'errorState',\n        '(blur)': 'onBlur()',\n        '(focus)': 'focusChanged(true)',\n        '(input)': 'onInput()',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    },\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useValue: {\n                validate(c: FormControl) {\n                    // TODO This is `workaround` to bind singleton-like Validator implementation to\n                    // context of each validated component. This MUST be realized in proper way!\n                    if (this.__validatorOnChangeHandler !== undefined) {\n                        formValidatorOnChangeRegistrators.set(c, this.__validatorOnChangeHandler);\n                        this.__validatorOnChangeHandler = undefined;\n                    }\n                    const validator = formValidators.get(c);\n\n                    return validator ? validator(c) : null;\n                },\n                registerOnValidatorChange(fn: () => void): void {\n                    this.__validatorOnChangeHandler = fn;\n                }\n            },\n            multi: true\n        },\n        {\n            provide: McFormFieldControl,\n            useExisting: forwardRef(() => McTimepicker)\n        }\n    ]\n\n})\nexport class McTimepicker extends McTimepickerMixinBase\n    implements McFormFieldControl<any>,\n        OnChanges,\n        OnDestroy,\n        DoCheck,\n        CanUpdateErrorState,\n        ControlValueAccessor {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-timepicker';\n\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) { return this.ngControl.disabled; }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n        }\n\n        this.stateChanges.next();\n    }\n\n    @Input()\n    get id(): string { return this._id; }\n\n    set id(value: string) { this._id = value || this.uid; }\n\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean { return this._required; }\n\n    set required(value: boolean) { this._required = coerceBooleanProperty(value); }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string { return this.inputValueAccessor.value; }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this.inputValueAccessor.value = value;\n            this.applyInputChanges();\n        }\n    }\n\n    @Input('time-format')\n    get timeFormat(): TimeFormats { return this._timeFormat; }\n\n    set timeFormat(formatValue: TimeFormats) {\n        this._timeFormat = Object\n            .keys(TimeFormats)\n            .map((timeFormatKey) => TimeFormats[timeFormatKey])\n            .indexOf(formatValue) > -1 ? formatValue : DEFAULT_TIME_FORMAT;\n\n        validatorOnChange(<FormControl> this.ngControl.control);\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[this._timeFormat];\n    }\n\n    @Input('min-time')\n    get minTime(): string | null { return this._minTime; }\n\n    set minTime(minValue: string | null) {\n        this._minTime = minValue;\n        this.minDateTime = minValue !== null ? this.getDateFromTimeString(minValue) : undefined;\n        validatorOnChange(<FormControl> this.ngControl.control);\n    }\n\n    @Input('max-time')\n    get maxTime(): string | null { return this._maxTime; }\n\n    set maxTime(maxValue: string | null) {\n        this._maxTime = maxValue;\n        this.maxDateTime = maxValue !== null ? this.getDateFromTimeString(maxValue) : undefined;\n        validatorOnChange(<FormControl> this.ngControl.control);\n    }\n\n    private _id: string;\n    private readonly uid = `mc-timepicker-${uniqueComponentIdSuffix++}`;\n    private _disabled: boolean;\n    private _required: boolean;\n    private previousNativeValue: any;\n    private readonly inputValueAccessor: { value: any };\n    private onChange: (value: any) => void;\n    private onTouched: () => void;\n    private _timeFormat: TimeFormats;\n    private _minTime: string | null = null;\n    private minDateTime: Date | undefined;\n    private _maxTime: string | null = null;\n    private maxDateTime: Date | undefined;\n    private currentDateTimeInput: Date | undefined;\n\n    constructor(private readonly elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() parentForm: NgForm,\n                @Optional() parentFormGroup: FormGroupDirective,\n                defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any,\n                private readonly renderer: Renderer2) {\n        super(defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\n\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this.inputValueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n        this.onChange = noop;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[DEFAULT_TIME_FORMAT];\n\n        // Instead of NG_VALUE_ACCESSOR (https://github.com/angular/material2/issues/8158#issuecomment-344618103)\n        if (this.ngControl) { this.ngControl.valueAccessor = this; }\n\n        // Substitute initial empty validator with validator linked to directive object instance (workaround)\n\n        formValidators.set(\n            <FormControl> this.ngControl.control,\n            Validators.compose([\n                () => this.parseValidator(),\n                () => this.minTimeValidator(),\n                () => this.maxTimeValidator()\n            ])\n        );\n    }\n\n    ngOnChanges(): void {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck(): void {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    focusChanged(isFocused: boolean): void {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.onTouched();\n            this.stateChanges.next();\n        }\n    }\n\n    onBlur() {\n        this.applyInputChanges();\n        this.focusChanged(false);\n    }\n\n    onPaste($event) {\n        $event.preventDefault();\n        const clipboardUserInput: string = $event.clipboardData.getData('text');\n\n        if (this.getDateFromTimeString(clipboardUserInput) === undefined) { return; }\n\n        this.elementRef.nativeElement.value = clipboardUserInput;\n        this.onInput();\n    }\n\n    onInput() {\n        const initialCursorStart: number = this.elementRef.nativeElement.selectionStart;\n        const initialCursorEnd: number = this.elementRef.nativeElement.selectionEnd;\n        let isAutocompleteTriggered: boolean = false;\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(this.elementRef.nativeElement.value);\n\n        // tslint:disable no-magic-numbers\n        if (hoursOnly &&\n            hoursOnly[1] &&\n            hoursOnly[1].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutes &&\n            hoursAndMinutes[1].length === 1 &&\n            hoursAndMinutes[2] &&\n            hoursAndMinutes[2].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutesAndSeconds &&\n            hoursAndMinutesAndSeconds[1].length === 2 &&\n            hoursAndMinutesAndSeconds[2].length === 2 &&\n            hoursAndMinutesAndSeconds[3] &&\n            hoursAndMinutesAndSeconds[3].length === 2) {\n            isAutocompleteTriggered = true;\n        }\n        // tslint:enable no-magic-numbers\n\n        this.applyInputChanges({ doTimestringReformat: isAutocompleteTriggered });\n\n        this.elementRef.nativeElement.selectionStart = initialCursorStart;\n        this.elementRef.nativeElement.selectionEnd = initialCursorEnd;\n\n        if (isAutocompleteTriggered && this.ngControl.errors === null) {\n            this.createSelectionOfTimeComponentInInput(initialCursorStart + 1);\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    writeValue(value: Date | null): void {\n        if (value !== null) {\n            this.renderer.setProperty(this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(value, this.timeFormat)\n            );\n        }\n        this.onChange(value || null);\n        this.applyInputChanges();\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        const keyCode: string = this.getKeyCode(event);\n\n        if (keyCode === ARROW_UP_KEYCODE || keyCode === ARROW_DOWN_KEYCODE) {\n            this.upDownTimeByArrowKeys(event);\n        }\n        if (keyCode === ARROW_LEFT_KEYCODE || keyCode === ARROW_RIGHT_KEYCODE) {\n            this.switchSelectionBetweenTimeparts(event);\n        }\n    }\n\n    registerOnChange(fn: (value: Date) => void): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    private dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    private isBadInput(): boolean {\n        const validity = (<HTMLInputElement> this.elementRef.nativeElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private applyInputChanges(applyParams: {\n        changedTime?: Date;\n        doTimestringReformat?: boolean;\n    } = {}): void {\n        const { changedTime, doTimestringReformat = true } = applyParams;\n        const timeToApply: Date | undefined = changedTime ||\n            this.getDateFromTimeString(this.elementRef.nativeElement.value);\n        this.currentDateTimeInput = timeToApply;\n\n        if (doTimestringReformat && timeToApply !== undefined) {\n            const selectionStart: number = this.elementRef.nativeElement.selectionStart;\n            const selectionEnd: number = this.elementRef.nativeElement.selectionEnd;\n            this.renderer.setProperty(\n                this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(timeToApply, this.timeFormat));\n            this.elementRef.nativeElement.selectionStart = selectionStart;\n            this.elementRef.nativeElement.selectionEnd = selectionEnd;\n        }\n\n        (<FormControl> this.ngControl.control).updateValueAndValidity();\n        const result = this.ngControl.errors === null && timeToApply !== undefined ? timeToApply : null;\n        this.onChange(result);\n        this.stateChanges.next();\n    }\n\n    private upDownTimeByArrowKeys(event: KeyboardEvent): void {\n        event.preventDefault();\n\n        let changedTime: Date | undefined = this.currentDateTimeInput;\n        if (changedTime !== undefined) {\n            const cursorPos = this.elementRef.nativeElement.selectionStart;\n\n            const modifiedTimePart = this.getTimeEditMetrics(cursorPos)\n                .modifiedTimePart;\n            const keyCode: string = this.getKeyCode(event);\n            if (keyCode === ARROW_UP_KEYCODE) { changedTime = this.incrementTime(changedTime, modifiedTimePart); }\n            if (keyCode === ARROW_DOWN_KEYCODE) { changedTime = this.decrementTime(changedTime, modifiedTimePart); }\n            this.applyInputChanges({ changedTime });\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    private switchSelectionBetweenTimeparts(event: KeyboardEvent): void {\n        const changedTime: Date | undefined = this.currentDateTimeInput;\n        const keyCode: string = this.getKeyCode(event);\n\n        if (changedTime !== undefined) {\n            let cursorPos: number = this.elementRef.nativeElement.selectionStart;\n            if (keyCode === ARROW_LEFT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfPrevTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            } else if (keyCode === ARROW_RIGHT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfNextTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            }\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    /**\n     * @description Microsoft EDGE doesn't support KeyboaedEvent.code thus we need this helper\n     */\n    private getKeyCode(event: KeyboardEvent): string {\n        return event.code || event.key;\n    }\n\n    private createSelectionOfTimeComponentInInput(cursorPos: number): void {\n        setTimeout(() => {\n            const newEditParams = this.getTimeEditMetrics(cursorPos);\n            this.elementRef.nativeElement.selectionStart = newEditParams.cursorStartPosition;\n            this.elementRef.nativeElement.selectionEnd = newEditParams.cursorEndPosition;\n        });\n    }\n\n    private incrementTime(dateVal: Date,\n                          whatToIncrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToIncrement) {\n            case TimeParts.hours:\n                hours++;\n                break;\n            case TimeParts.minutes:\n                minutes++;\n                break;\n            case TimeParts.seconds:\n                seconds++;\n                break;\n            default:\n        }\n\n        if (seconds > SECONDS_PER_MINUTE) { seconds = 0; }\n\n        if (minutes > MINUTES_PER_HOUR) { minutes = 0; }\n\n        if (hours > HOURS_PER_DAY) { hours = 0; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    /**\n     * @description Decrement part of time\n     */\n    private decrementTime(dateVal: Date,\n                          whatToDecrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToDecrement) {\n            case TimeParts.hours:\n                hours--;\n                break;\n            case TimeParts.minutes:\n                minutes--;\n                break;\n            case TimeParts.seconds:\n                seconds--;\n                break;\n            default:\n        }\n\n        if (seconds < 0) { seconds = SECONDS_PER_MINUTE; }\n\n        if (minutes < 0) { minutes = MINUTES_PER_HOUR; }\n\n        if (hours < 0) { hours = HOURS_PER_DAY; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    private getCursorPositionOfPrevTimePartStart(cursorPos: number, timeString: string): number {\n        return cursorPos === 0 ? timeString.length : cursorPos - 1;\n    }\n\n    private getCursorPositionOfNextTimePartStart(cursorPos: number,\n                                                 timeString: string,\n                                                 timeDevider: string = ':'): number {\n        const nextDividerPos: number = timeString.indexOf(timeDevider, cursorPos);\n\n        return nextDividerPos !== undefined ? nextDividerPos + 1 : 0;\n    }\n\n    /**\n     * @description Get params for arrow-keys (up/down) time valie edit.\n     * @param cursorPosition Current cursor position in timeString\n     */\n    private getTimeEditMetrics(cursorPosition: number): {\n        modifiedTimePart: TimeParts;\n        cursorStartPosition: number;\n        cursorEndPosition: number;\n    } {\n        const timeString: string = this.elementRef.nativeElement.value;\n        let modifiedTimePart: TimeParts;\n        let cursorStartPosition: number;\n        let cursorEndPosition: number;\n        const hoursIndex = 0;\n        const minutesIndex = timeString.indexOf(':', hoursIndex + 1);\n        const secondsIndex = minutesIndex !== -1 ? timeString.indexOf(':', minutesIndex + 1) : -1;\n\n        if (secondsIndex !== -1 && cursorPosition > secondsIndex) {\n            modifiedTimePart = TimeParts.seconds;\n            cursorStartPosition = secondsIndex + 1;\n            cursorEndPosition = timeString.length;\n        } else if (minutesIndex !== -1 && cursorPosition > minutesIndex) {\n            modifiedTimePart = TimeParts.minutes;\n            cursorStartPosition = minutesIndex + 1;\n            cursorEndPosition = secondsIndex > -1 ? secondsIndex : timeString.length;\n        } else {\n            modifiedTimePart = TimeParts.hours;\n            cursorStartPosition = hoursIndex;\n            cursorEndPosition = minutesIndex !== -1 ? minutesIndex : timeString.length;\n        }\n\n        return {\n            modifiedTimePart,\n            cursorStartPosition,\n            cursorEndPosition\n        };\n    }\n\n    /**\n     * @description Create time string for displaying inside input element of UI\n     */\n    private getTimeStringFromDate(tempVal: Date,\n                                  timeFormat: TimeFormats = DEFAULT_TIME_FORMAT): string {\n        const hours: string = this.getNumberWithLeadingZero(tempVal.getHours());\n        const minutes: string = this.getNumberWithLeadingZero(tempVal.getMinutes());\n        const seconds: string = this.getNumberWithLeadingZero(tempVal.getSeconds());\n\n        const formattedTimeGenerators = {\n            [TimeFormats.HHmm]: () => `${hours}:${minutes}`,\n            [TimeFormats.HHmmss]: () => `${hours}:${minutes}:${seconds}`\n        };\n\n        return formattedTimeGenerators[timeFormat]();\n    }\n\n    private getParsedTimeParts(timeString: string): {\n        hoursOnly: any;\n        hoursAndMinutes: any;\n        hoursAndMinutesAndSeconds: any;\n    } {\n        const hoursAndMinutesAndSeconds = timeString.match(HOURS_MINUTES_SECONDS_REGEXP);\n        const hoursAndMinutes = timeString.match(HOURS_MINUTES_REGEXP);\n        const hoursOnly = timeString.match(HOURS_ONLY_REGEXP);\n\n        return {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        };\n    }\n\n    /**\n     * @description Create Date object from separate parts of time\n     */\n    private getDateFromTimeDigits(hours: number, minutes: number, seconds: number = 0): Date | undefined {\n        return this.getDateFromTimeString(`${hours}:${minutes}:${seconds}`);\n    }\n\n    private getDateFromTimeString(timeString: string | undefined): Date | undefined {\n        // TODO Use moment-js\n        if (timeString === undefined) { return; }\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(timeString);\n\n        if (timeString.trim().length === 0 ||\n            hoursOnly === null && hoursAndMinutes === null && hoursAndMinutesAndSeconds === null) {\n            return;\n        }\n\n        // tslint:disable no-magic-numbers\n        let hours: number = 0;\n        let minutes: number = 0;\n        let seconds: number = 0;\n\n        if (hoursOnly) {\n            hours = Number(hoursOnly[1]);\n        } else if (hoursAndMinutes) {\n            hours = Number(hoursAndMinutes[1]);\n            minutes = Number(hoursAndMinutes[2]);\n        } else if (hoursAndMinutesAndSeconds) {\n            hours = Number(hoursAndMinutesAndSeconds[1]);\n            minutes = Number(hoursAndMinutesAndSeconds[2]);\n            seconds = Number(hoursAndMinutesAndSeconds[3]);\n        }\n        // const timestamp: number = Date.parse(fullDateString);\n        const resultDate: Date = new Date(1970, 0, 1, hours, minutes, seconds);\n        // tslint:enable no-magic-numbers\n\n        return isNaN(resultDate.getTime()) ? undefined : resultDate;\n    }\n\n    private getNumberWithLeadingZero(digit: number): string {\n        const MAX_DIGIT_WITH_LEADING_ZERO: number = 9;\n\n        return digit > MAX_DIGIT_WITH_LEADING_ZERO ? `${digit}` : `0${digit}`;\n    }\n\n    private getTimeDigitsFromDate(dateVal: Date): { hours: number; minutes: number; seconds: number } {\n        return {\n            hours: dateVal.getHours(),\n            minutes: dateVal.getMinutes(),\n            seconds: dateVal.getSeconds()\n        };\n    }\n\n    private parseValidator(): ValidationErrors | null {\n        return this.currentDateTimeInput === undefined ?\n            { mcTimepickerParse: { text: this.elementRef.nativeElement.value } } :\n            null;\n    }\n\n    private minTimeValidator(): ValidationErrors | null {\n\n        if (this.currentDateTimeInput !== undefined &&\n            this.minDateTime !== undefined &&\n            this.isTimeLowerThenMin(this.currentDateTimeInput)) {\n            return { mcTimepickerLowerThenMintime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private maxTimeValidator(): ValidationErrors | null {\n        if (this.currentDateTimeInput !== undefined &&\n            this.maxDateTime !== undefined &&\n            this.isTimeGreaterThenMax(this.currentDateTimeInput)) {\n            return { mcTimepickerHigherThenMaxtime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private isTimeLowerThenMin(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.minDateTime).getTime() < 0;\n    }\n\n    private isTimeGreaterThenMax(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.maxDateTime).getTime() >= 0;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTimepicker } from './timepicker';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        FormsModule\n    ],\n    declarations: [\n        McTimepicker\n    ],\n    exports: [\n        McTimepicker\n    ]\n})\nexport class McTimepickerModule {}\n","import { InjectionToken } from '@angular/core';\n\n\n/** Injection token that can be used to access the data that was passed in to a sidepanel. */\nexport const MC_SIDEPANEL_DATA = new InjectionToken<any>('McSidepanelData');\n\nexport enum McSidepanelPosition {\n    Right = 'right',\n    Left = 'left',\n    Top = 'top',\n    Bottom = 'bottom'\n}\n\nexport class McSidepanelConfig<D = any> {\n    /** ID for the sidepanel. If omitted, a unique one will be generated. */\n    id?: string;\n\n    /** Data being injected into the child component. */\n    data?: D | null = null;\n\n    position?: McSidepanelPosition = McSidepanelPosition.Right;\n\n    /** Whether the sidepanel has a backdrop. */\n    hasBackdrop?: boolean = true;\n\n    /** When we open multiple sidepanels, backdrop appears only once, except cases then this flag is true. */\n    requiredBackdrop?: boolean = false;\n\n    /** Whether the user can use escape or clicking outside to close the sidepanel. */\n    disableClose?: boolean = false;\n\n    /** Custom class for the overlay pane. */\n    overlayPanelClass?: string | string[] = '';\n}\n","import { animate, AnimationTriggerMetadata, state, style, transition, trigger } from '@angular/animations';\nimport { AnimationCurves } from '@ptsecurity/mosaic/core';\n\nimport { McSidepanelPosition } from './sidepanel-config';\n\n\nexport enum McSidepanelAnimationState {\n    Void = 'void',\n    Visible = 'visible',\n    Hidden = 'hidden'\n}\n\n// TODO Find a way to use dynamic keys and avoid error \"Expression form not supported.\"\n// tslint:disable-next-line\nexport const mcSidepanelTransformAnimation: Record<McSidepanelPosition, { in: string; out: string }> = {\n    right: { in: 'translateX(100%)', out: 'translateX(0%)' },\n    left: { in: 'translateX(-100%)', out: 'translateX(0%)' },\n    top: { in: 'translateY(-100%)', out: 'translateY(0%)' },\n    bottom: { in: 'translateY(100%)', out: 'translateY(0%)' }\n};\n\nexport const mcSidepanelAnimations: {\n    readonly sidepanelState: AnimationTriggerMetadata;\n} = {\n    sidepanelState: trigger('state', [\n        state('hidden',\n            style({ transform: '{{transformIn}}' }),\n            { params: { transformIn: mcSidepanelTransformAnimation[McSidepanelPosition.Right].in }}\n        ),\n        state('visible',\n            style({ transform: '{{transformOut}}' }),\n            { params: { transformOut: mcSidepanelTransformAnimation[McSidepanelPosition.Right].out }}\n        ),\n        transition('visible => void, visible => hidden',\n            animate(`200ms ${AnimationCurves.AccelerationCurve}`)),\n        transition('void => visible',\n            animate(`200ms ${AnimationCurves.DecelerationCurve}`))\n    ])\n};\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ComponentRef,\n    ElementRef,\n    EmbeddedViewRef,\n    EventEmitter, Inject, InjectionToken,\n    OnDestroy,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal } from '@ptsecurity/cdk/portal';\n\nimport {\n    mcSidepanelAnimations,\n    McSidepanelAnimationState,\n    mcSidepanelTransformAnimation\n} from './sidepanel-animations';\n\nimport { McSidepanelConfig, McSidepanelPosition } from './sidepanel-config';\n\n\nexport const MC_SIDEPANEL_WITH_INDENT =\n    new InjectionToken<boolean>('mc-sidepanel-with-indent');\n\nexport const MC_SIDEPANEL_WITH_SHADOW =\n    new InjectionToken<boolean>('mc-sidepanel-with-shadow');\n\n@Component({\n    selector: 'mc-sidepanel-container',\n    templateUrl: './sidepanel-container.component.html',\n    styleUrls: ['./sidepanel.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    animations: [mcSidepanelAnimations.sidepanelState],\n    host: {\n        class: 'mc-sidepanel-container',\n        tabindex: '-1',\n        role: 'dialog',\n        'aria-modal': 'true',\n        '[attr.id]': 'id',\n        '[@state]': `{\n            value: animationState,\n            params: animationTransform\n        }`,\n        '(@state.start)': 'onAnimation($event)',\n        '(@state.done)': 'onAnimation($event)'\n    }\n})\nexport class McSidepanelContainerComponent extends BasePortalOutlet implements OnDestroy {\n    /** ID for the container DOM element. */\n    id: string;\n\n    /** The portal outlet inside of this container into which the content will be loaded. */\n    @ViewChild(CdkPortalOutlet) portalOutlet: CdkPortalOutlet;\n\n    /** The state of the sidepanel animations. */\n    animationState: McSidepanelAnimationState = McSidepanelAnimationState.Void;\n\n    animationTransform: { transformIn: string; transformOut: string };\n\n    /** Emits whenever the state of the animation changes. */\n    animationStateChanged = new EventEmitter<AnimationEvent>();\n\n    /** Whether the component has been destroyed. */\n    private destroyed: boolean;\n\n    constructor(\n        private elementRef: ElementRef<HTMLElement>,\n        private changeDetectorRef: ChangeDetectorRef,\n        public sidepanelConfig: McSidepanelConfig,\n        @Inject(MC_SIDEPANEL_WITH_INDENT) public withIndent: boolean,\n        @Inject(MC_SIDEPANEL_WITH_SHADOW) public withShadow: boolean) {\n        super();\n    }\n\n    ngOnDestroy(): void {\n        this.destroyed = true;\n    }\n\n    /** Attach a component portal as content to this sidepanel container. */\n    attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n        this.validatePortalAttached();\n        this.setAnimation();\n        this.setPanelClass();\n\n        return this.portalOutlet.attachComponentPortal(portal);\n    }\n\n    /** Attach a template portal as content to this sidepanel container. */\n    attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n        this.validatePortalAttached();\n        this.setAnimation();\n        this.setPanelClass();\n\n        return this.portalOutlet.attachTemplatePortal(portal);\n    }\n\n    /** Begin animation of the sidepanel entrance into view. */\n    enter(): void {\n        if (!this.destroyed) {\n            this.animationState = McSidepanelAnimationState.Visible;\n            this.changeDetectorRef.detectChanges();\n        }\n    }\n\n    /** Begin animation of the sidepanel exiting from view. */\n    exit(): void {\n        if (!this.destroyed) {\n            this.animationState = McSidepanelAnimationState.Hidden;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    onAnimation(event: AnimationEvent) {\n        this.animationStateChanged.emit(event);\n    }\n\n    private setAnimation() {\n        const position: McSidepanelPosition = this.sidepanelConfig.position!;\n\n        this.animationTransform = {\n            transformIn: mcSidepanelTransformAnimation[position].in,\n            transformOut: mcSidepanelTransformAnimation[position].out\n        };\n    }\n\n    private setPanelClass() {\n        const element: HTMLElement = this.elementRef.nativeElement;\n        const position: McSidepanelPosition = this.sidepanelConfig.position!;\n\n        element.classList.add(`mc-sidepanel-container_${position}`);\n\n        if (this.withShadow) {\n            element.classList.add('mc-sidepanel-container_shadowed');\n        }\n    }\n\n    private validatePortalAttached() {\n        if (this.portalOutlet.hasAttached()) {\n            throw Error('Attempting to attach sidepanel content after content is already attached');\n        }\n    }\n}\n","import { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { merge, Observable, Subject } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\n\nimport { McSidepanelAnimationState } from './sidepanel-animations';\nimport { McSidepanelConfig } from './sidepanel-config';\nimport { McSidepanelContainerComponent } from './sidepanel-container.component';\n\n\n// Counter for unique sidepanel ids.\nlet uniqueId = 0;\n\nexport class McSidepanelRef<T = any, R = any> {\n    readonly id: string;\n\n    /** Instance of the component making up the content of the sidepanel. */\n    instance: T;\n\n    /** Subject for notifying the user that the sidepanel has been closed and dismissed. */\n    private readonly afterClosed$ = new Subject<R | undefined>();\n\n    /** Subject for notifying the user that the sidepanel has opened and appeared. */\n    private readonly afterOpened$ = new Subject<void>();\n\n    /** Result to be passed down to the `afterDismissed` stream. */\n    private result: R | undefined;\n\n    constructor(\n        public containerInstance: McSidepanelContainerComponent,\n        private overlayRef: OverlayRef,\n        public config: McSidepanelConfig) {\n\n        this.id = this.config.id || `mc-sidepanel-${uniqueId++}`;\n        this.containerInstance.id = this.id;\n\n        // Emit when opening animation completes\n        containerInstance.animationStateChanged.pipe(\n            filter(\n                (event) => event.phaseName === 'done' && event.toState === McSidepanelAnimationState.Visible\n            ),\n            take(1)\n        ).subscribe(() => {\n            this.afterOpened$.next();\n            this.afterOpened$.complete();\n        });\n\n        // Dispose overlay when closing animation is complete\n        containerInstance.animationStateChanged.pipe(\n            filter(\n                (event) => event.phaseName === 'done' && event.toState === McSidepanelAnimationState.Hidden\n            ),\n            take(1)\n        ).subscribe(() => {\n            overlayRef.dispose();\n            this.afterClosed$.next(this.result);\n            this.afterClosed$.complete();\n        });\n\n        if (!containerInstance.sidepanelConfig.disableClose) {\n            merge(\n                overlayRef.backdropClick(),\n                overlayRef.keydownEvents().pipe(\n                    // tslint:disable:deprecation\n                    // keyCode is deprecated, but IE11 and Edge don't support code property, which we need use instead\n                    filter((event) => event.keyCode === ESCAPE)\n                )\n            ).subscribe(() => this.close());\n        }\n    }\n\n    close(result?: R): void {\n        if (!this.afterClosed$.closed) {\n            // Transition the backdrop in parallel to the sidepanel.\n            this.containerInstance.animationStateChanged.pipe(\n                filter((event) => event.phaseName === 'done'),\n                take(1)\n            ).subscribe(() => this.overlayRef.detachBackdrop());\n\n            this.result = result;\n            this.containerInstance.exit();\n        }\n    }\n\n    /** Gets an observable that is notified when the sidepanel is finished closing. */\n    afterClosed(): Observable<R | undefined> {\n        return this.afterClosed$.asObservable();\n    }\n\n    /** Gets an observable that is notified when the sidepanel has opened and appeared. */\n    afterOpened(): Observable<void> {\n        return this.afterOpened$.asObservable();\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { MC_SELECT_SCROLL_STRATEGY_PROVIDER, McOptionModule } from '@ptsecurity/mosaic/core';\nimport { McFormFieldModule } from '@ptsecurity/mosaic/form-field';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport { McTagModule } from '@ptsecurity/mosaic/tag';\n\nimport { McSelect, McSelectTrigger } from './select.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        McOptionModule,\n        McIconModule,\n        McTagModule\n    ],\n    exports: [McFormFieldModule, McSelect, McSelectTrigger, McOptionModule, CommonModule],\n    declarations: [McSelect, McSelectTrigger],\n    providers: [MC_SELECT_SCROLL_STRATEGY_PROVIDER]\n})\nexport class McSelectModule {}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Input,\n    NgZone,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Direction, Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceNumberProperty } from '@ptsecurity/cdk/coercion';\nimport { END, ENTER, HOME, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { ViewportRuler } from '@ptsecurity/cdk/scrolling';\nimport { merge, of as observableOf, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { McTabLabelWrapper } from './tab-label-wrapper';\n\n\nconst VIEWPORT_THROTTLE_TIME = 150;\nconst SCROLL_DISTANCE_DELIMITER = 3;\n\n\n/**\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n\n// Boilerplate for applying mixins to McTabHeader.\n/** @docs-private */\nexport class McTabHeaderBase {}\n\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group.\n * When the tabs list's width exceeds the width of the header container,\n * then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\n@Component({\n    selector: 'mc-tab-header',\n    templateUrl: 'tab-header.html',\n    styleUrls: ['tab-header.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        class: 'mc-tab-header',\n        '[class.mc-tab-header__pagination-controls_enabled]':\n            'showPaginationControls',\n        '[class.mc-tab-header_rtl]': 'getLayoutDirection() == \\'rtl\\''\n    }\n})\nexport class McTabHeader extends McTabHeaderBase\n    implements AfterContentChecked, AfterContentInit, OnDestroy {\n    /** The index of the active tab. */\n    @Input()\n    get selectedIndex(): number {\n        return this._selectedIndex;\n    }\n    set selectedIndex(value: number) {\n        const coercedValue = coerceNumberProperty(value);\n        this.selectedIndexChanged = this._selectedIndex !== coercedValue;\n        this._selectedIndex = coercedValue;\n\n        if (this.keyManager) {\n            this.keyManager.updateActiveItem(coercedValue);\n        }\n    }\n\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex(): number {\n        return this.keyManager ? this.keyManager.activeItemIndex! : 0;\n    }\n\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value: number) {\n        if (\n            !this.isValidIndex(value) ||\n            this.focusIndex === value ||\n            !this.keyManager\n        ) {\n            return;\n        }\n\n        this.keyManager.setActiveItem(value);\n    }\n\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance(): number {\n        return this._scrollDistance;\n    }\n    set scrollDistance(v: number) {\n        this._scrollDistance = Math.max(\n            0,\n            Math.min(this.getMaxScrollDistance(), v)\n        );\n\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this.scrollDistanceChanged = true;\n        this.checkScrollingControls();\n    }\n\n    @ContentChildren(McTabLabelWrapper)\n    labelWrappers: QueryList<McTabLabelWrapper>;\n    @ViewChild('tabListContainer')\n    tabListContainer: ElementRef;\n    @ViewChild('tabList')\n    tabList: ElementRef;\n\n    /** Whether the controls for pagination should be displayed */\n    showPaginationControls = false;\n\n    /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n    disableScrollAfter = true;\n\n    /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n    disableScrollBefore = true;\n\n    /** Event emitted when the option is selected. */\n    @Output()\n    readonly selectFocusedIndex: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted when a label is focused. */\n    @Output()\n    readonly indexFocused: EventEmitter<number> = new EventEmitter<number>();\n\n    /** The distance in pixels that the tab labels should be translated to the left. */\n    private _scrollDistance = 0;\n\n    /** Whether the header should scroll to the selected index after the view has been checked. */\n    private selectedIndexChanged = false;\n\n    /** Emits when the component is destroyed. */\n    private readonly destroyed = new Subject<void>();\n\n    /**\n     * The number of tab labels that are displayed on the header. When this changes, the header\n     * should re-evaluate the scroll position.\n     */\n    private tabLabelCount: number;\n\n    /** Whether the scroll distance has changed and should be applied after the view is checked. */\n    private scrollDistanceChanged: boolean;\n\n    /** Used to manage focus between the tabs. */\n    private keyManager: FocusKeyManager<McTabLabelWrapper>;\n\n    /** Cached text content of the header. */\n    private currentTextContent: string;\n\n    private _selectedIndex: number = 0;\n\n    constructor(\n        private elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        private viewportRuler: ViewportRuler,\n        @Optional() private dir: Directionality,\n        private ngZone: NgZone\n    ) {\n        super();\n    }\n\n    ngAfterContentChecked(): void {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this.tabLabelCount !== this.labelWrappers.length) {\n            this.updatePagination();\n            this.tabLabelCount = this.labelWrappers.length;\n            this.changeDetectorRef.markForCheck();\n        }\n\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this.selectedIndexChanged) {\n            this.scrollToLabel(this._selectedIndex);\n            this.checkScrollingControls();\n            this.selectedIndexChanged = false;\n            this.changeDetectorRef.markForCheck();\n        }\n\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this.scrollDistanceChanged) {\n            this.updateTabScrollPosition();\n            this.scrollDistanceChanged = false;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    handleKeydown(event: KeyboardEvent) {\n        switch (event.keyCode) {\n            case HOME:\n                this.keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case END:\n                this.keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case ENTER:\n            case SPACE:\n                this.selectFocusedIndex.emit(this.focusIndex);\n                event.preventDefault();\n                break;\n            default:\n                this.keyManager.onKeydown(event);\n        }\n    }\n\n    ngAfterContentInit() {\n        const dirChange = this.dir ? this.dir.change : observableOf(null);\n        const resize = this.viewportRuler.change(VIEWPORT_THROTTLE_TIME);\n        const realign = () => {\n            this.updatePagination();\n        };\n\n        this.keyManager = new FocusKeyManager(this.labelWrappers)\n            .withHorizontalOrientation(this.getLayoutDirection())\n            .withWrap();\n\n        this.keyManager.updateActiveItem(0);\n\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame === undefined\n            ? realign()\n            : requestAnimationFrame(realign);\n\n        // On dir change or window resize, update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize)\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(() => {\n                realign();\n                this.keyManager.withHorizontalOrientation(\n                    this.getLayoutDirection()\n                );\n            });\n\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this.keyManager.change\n            .pipe(takeUntil(this.destroyed))\n            .subscribe((newFocusIndex) => {\n                this.indexFocused.emit(newFocusIndex);\n                this.setTabFocus(newFocusIndex);\n            });\n    }\n\n    ngOnDestroy() {\n        this.destroyed.next();\n        this.destroyed.complete();\n    }\n\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    onContentChanges() {\n        const textContent = this.elementRef.nativeElement.textContent;\n\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in.\n\n        if (textContent !== this.currentTextContent) {\n            this.currentTextContent = textContent;\n\n            const zoneCallback = () => {\n                this.updatePagination();\n                this.changeDetectorRef.markForCheck();\n            };\n\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            // TODO: Remove null check for `_ngZone` once it's a required parameter.\n            this.ngZone ? this.ngZone.run(zoneCallback) : zoneCallback();\n        }\n    }\n\n    /**\n     * Updating the view whether pagination should be enabled or not\n     *\n     * WARNING: Calling this method can be very costly in terms of performance.  It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        this.checkPaginationEnabled();\n        this.checkScrollingControls();\n        this.updateTabScrollPosition();\n    }\n\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    isValidIndex(index: number): boolean {\n        if (!this.labelWrappers) {\n            return true;\n        }\n\n        const tab = this.labelWrappers\n            ? this.labelWrappers.toArray()[index]\n            : null;\n\n        return !!tab && !tab.disabled;\n    }\n\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    setTabFocus(tabIndex: number) {\n        if (this.showPaginationControls) {\n            this.scrollToLabel(tabIndex);\n        }\n\n        if (this.labelWrappers && this.labelWrappers.length) {\n            this.labelWrappers.toArray()[tabIndex].focus();\n\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            const containerEl = this.tabListContainer.nativeElement;\n            const dir = this.getLayoutDirection();\n\n            if (dir === 'ltr') {\n                containerEl.scrollLeft = 0;\n            } else {\n                containerEl.scrollLeft =\n                    containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n\n    /** The layout direction of the containing app. */\n    getLayoutDirection(): Direction {\n        return this.dir && this.dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    updateTabScrollPosition() {\n        const scrollDistance = this.scrollDistance;\n        const translateX =\n            this.getLayoutDirection() === 'ltr'\n                ? -scrollDistance\n                : scrollDistance;\n\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer.\n        // See: https://github.com/angular/material2/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this.tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off.\n        this.tabList.nativeElement.scrollLeft = 0;\n    }\n\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    scrollHeader(scrollDir: ScrollDirection) {\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        this.scrollDistance +=\n            ((scrollDir === 'before' ? -1 : 1) * viewLength) / SCROLL_DISTANCE_DELIMITER;\n    }\n\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    scrollToLabel(labelIndex: number) {\n        const selectedLabel = this.labelWrappers\n            ? this.labelWrappers.toArray()[labelIndex]\n            : null;\n\n        if (!selectedLabel) {\n            return;\n        }\n\n        // The view length is the visible width of the tab labels.\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        let labelBeforePos: number;\n        let labelAfterPos: number;\n\n        if (this.getLayoutDirection() === 'ltr') {\n            labelBeforePos = selectedLabel.getOffsetLeft();\n            labelAfterPos = labelBeforePos + selectedLabel.getOffsetWidth();\n        } else {\n            labelAfterPos =\n                this.tabList.nativeElement.offsetWidth -\n                selectedLabel.getOffsetLeft();\n            labelBeforePos = labelAfterPos - selectedLabel.getOffsetWidth();\n        }\n\n        const beforeVisiblePos = this.scrollDistance;\n        const afterVisiblePos = this.scrollDistance + viewLength;\n\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -=\n                beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        } else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance +=\n                labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    checkPaginationEnabled() {\n        const isEnabled =\n            this.tabList.nativeElement.scrollWidth >\n            this.elementRef.nativeElement.offsetWidth;\n\n        if (!isEnabled) {\n            this.scrollDistance = 0;\n        }\n\n        if (isEnabled !== this.showPaginationControls) {\n            this.changeDetectorRef.markForCheck();\n        }\n\n        this.showPaginationControls = isEnabled;\n    }\n\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    checkScrollingControls() {\n        // Check if the pagination arrows should be activated.\n        this.disableScrollBefore = this.scrollDistance === 0;\n        this.disableScrollAfter =\n            this.scrollDistance === this.getMaxScrollDistance();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    getMaxScrollDistance(): number {\n        const lengthOfTabList = this.tabList.nativeElement.scrollWidth;\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        return lengthOfTabList - viewLength || 0;\n    }\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    InjectionToken,\n    Inject,\n    Optional,\n    Directive, Attribute\n} from '@angular/core';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanColor,\n    CanColorCtor,\n    mixinColor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { merge, Subscription } from 'rxjs';\n\nimport { McTab } from './tab';\nimport { McTabHeader } from './tab-header';\n\n\n@Directive({\n    selector: 'mc-tab-group[mc-light-tabs], [mc-tab-nav-bar][mc-light-tabs]',\n    host: { class: 'mc-tab-group_light' }\n})\nexport class McLightTabsCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-align-tabs-center], [mc-tab-nav-bar][mc-align-tabs-center]',\n    host: { class: 'mc-tab-group_align-labels-center' }\n})\nexport class McAlignTabsCenterCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-align-tabs-end], [mc-tab-nav-bar][mc-align-tabs-end]',\n    host: { class: 'mc-tab-group_align-labels-end' }\n})\nexport class McAlignTabsEndCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-stretch-tabs], [mc-tab-nav-bar][mc-stretch-tabs]',\n    host: { class: 'mc-tab-group_stretch-labels' }\n})\nexport class McStretchTabsCssStyler { }\n\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n\n/** A simple change event emitted on focus or selection changes. */\nexport class McTabChangeEvent {\n    /** Index of the currently-selected tab. */\n    index: number;\n    /** Reference to the currently-selected tab. */\n    tab: McTab;\n}\n\n/** Possible positions for the tab header. */\nexport type McTabHeaderPosition = 'above' | 'below';\n\n/** Object that can be used to configure the default options for the tabs module. */\nexport interface IMcTabsConfig {\n    /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n    animationDuration?: string;\n}\n\n/** Injection token that can be used to provide the default options the tabs module. */\nexport const MC_TABS_CONFIG = new InjectionToken('MC_TABS_CONFIG');\n\n// Boilerplate for applying mixins to McTabGroup.\n/** @docs-private */\nexport class McTabGroupBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) { }\n}\nexport const mcTabGroupMixinBase:\n    CanColorCtor &\n    typeof McTabGroupBase =\n    mixinColor(mixinDisabled(McTabGroupBase));\n\n/**\n * Tab-group component.  Supports basic tab pairs (label + content) and includes\n * keyboard navigation.\n */\n@Component({\n    selector: 'mc-tab-group',\n    exportAs: 'mcTabGroup',\n    templateUrl: 'tab-group.html',\n    styleUrls: ['tab-group.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['color'],\n    host: {\n        class: 'mc-tab-group',\n        '[class.mc-tab-group_dynamic-height]': 'dynamicHeight',\n        '[class.mc-tab-group_inverted-header]': 'headerPosition === \"below\"'\n    }\n})\nexport class McTabGroup extends mcTabGroupMixinBase implements AfterContentInit,\n    AfterContentChecked, OnDestroy, CanColor {\n    lightTab: boolean;\n\n    /** Whether the tab group should grow to the size of the active tab. */\n    @Input()\n    get dynamicHeight(): boolean { return this._dynamicHeight; }\n    set dynamicHeight(value: boolean) { this._dynamicHeight = coerceBooleanProperty(value); }\n\n    /** The index of the active tab. */\n    @Input()\n    get selectedIndex(): number | null { return this._selectedIndex; }\n    set selectedIndex(value: number | null) {\n        this.indexToSelect = coerceNumberProperty(value, null);\n    }\n\n    @ContentChildren(McTab) tabs: QueryList<McTab>;\n\n    @ViewChild('tabBodyWrapper') tabBodyWrapper: ElementRef;\n\n    @ViewChild('tabHeader') tabHeader: McTabHeader;\n\n    /** Position of the tab header. */\n    @Input() headerPosition: McTabHeaderPosition = 'above';\n\n    /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n    @Input() animationDuration: string;\n\n    /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n    @Output() readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted when focus has changed within a tab group. */\n    @Output() readonly focusChange: EventEmitter<McTabChangeEvent> =\n        new EventEmitter<McTabChangeEvent>();\n\n    /** Event emitted when the body animation has completed */\n    @Output() readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the tab selection has changed. */\n    @Output() readonly selectedTabChange: EventEmitter<McTabChangeEvent> =\n        new EventEmitter<McTabChangeEvent>(true);\n\n    /** The tab index that should be selected after the content has been checked. */\n    private indexToSelect: number | null = 0;\n\n    /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n    private tabBodyWrapperHeight: number = 0;\n\n    /** Subscription to tabs being added/removed. */\n    private tabsSubscription = Subscription.EMPTY;\n\n    /** Subscription to changes in the tab labels. */\n    private tabLabelSubscription = Subscription.EMPTY;\n    private _dynamicHeight: boolean = false;\n    private _selectedIndex: number | null = null;\n\n    private groupId: number;\n\n    constructor(\n        elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        @Attribute('mc-light-tabs') lightTabs: string,\n        @Inject(MC_TABS_CONFIG) @Optional() defaultConfig?: IMcTabsConfig\n    ) {\n        super(elementRef);\n\n        this.lightTab = coerceBooleanProperty(lightTabs);\n\n        this.groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '0ms';\n    }\n\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = this.indexToSelect = this.clampTabIndex(this.indexToSelect);\n\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex !== indexToSelect) {\n            const isFirstRun = this._selectedIndex == null;\n\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this.createChangeEvent(indexToSelect));\n            }\n\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this.tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            });\n        }\n\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this.tabs.forEach((tab: McTab, index: number) => {\n            tab.position = index - indexToSelect;\n\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position === 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    ngAfterContentInit() {\n        this.subscribeToTabLabels();\n\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this.tabsSubscription = this.tabs.changes.subscribe(() => {\n            const indexToSelect = this.clampTabIndex(this.indexToSelect);\n\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                const tabs = this.tabs.toArray();\n\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this.indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n\n            this.subscribeToTabLabels();\n            this.changeDetectorRef.markForCheck();\n        });\n    }\n\n    ngOnDestroy() {\n        this.tabsSubscription.unsubscribe();\n        this.tabLabelSubscription.unsubscribe();\n    }\n\n    focusChanged(index: number) {\n        this.focusChange.emit(this.createChangeEvent(index));\n    }\n\n    /** Returns a unique id for each tab label element */\n    getTabLabelId(i: number): string {\n        return `mc-tab-label-${this.groupId}-${i}`;\n    }\n\n    /** Returns a unique id for each tab content element */\n    getTabContentId(i: number): string {\n        return `mc-tab-content-${this.groupId}-${i}`;\n    }\n\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    setTabBodyWrapperHeight(tabHeight: number): void {\n        if (!this._dynamicHeight || !this.tabBodyWrapperHeight) { return; }\n\n        const wrapper: HTMLElement = this.tabBodyWrapper.nativeElement;\n\n        wrapper.style.height = `${this.tabBodyWrapperHeight}px`;\n\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this.tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = `${tabHeight}px`;\n        }\n    }\n\n    /** Removes the height of the tab body wrapper. */\n    removeTabBodyWrapperHeight(): void {\n        this.tabBodyWrapperHeight = this.tabBodyWrapper.nativeElement.clientHeight;\n        this.tabBodyWrapper.nativeElement.style.height = '';\n        this.animationDone.emit();\n    }\n\n    /** Handle click events, setting new selected index if appropriate. */\n    handleClick(tab: McTab, tabHeader: McTabHeader, index: number) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n\n    /** Retrieves the tabindex for the tab. */\n    getTabIndex(tab: McTab, index: number): number | null {\n        if (tab.disabled) {\n            return null;\n        }\n\n        return this.selectedIndex === index ? 0 : -1;\n    }\n\n    private createChangeEvent(index: number): McTabChangeEvent {\n        const event = new McTabChangeEvent();\n        event.index = index;\n        if (this.tabs && this.tabs.length) {\n            event.tab = this.tabs.toArray()[index];\n        }\n\n        return event;\n    }\n\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the McTab component, whereas the data binding is inside the McTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    private subscribeToTabLabels() {\n        if (this.tabLabelSubscription) {\n            this.tabLabelSubscription.unsubscribe();\n        }\n\n        this.tabLabelSubscription = merge(...this.tabs.map((tab) => tab.stateChanges))\n            .subscribe(() => this.changeDetectorRef.markForCheck());\n    }\n\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    private clampTabIndex(index: number | null): number {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Mch.max(NaN, 0) === NaN).\n        return Math.min(this.tabs.length - 1, Math.max(index || 0, 0));\n    }\n}\n","import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    OnDestroy,\n    ViewEncapsulation\n} from '@angular/core';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    CanColor,\n    CanColorCtor,\n    CanDisable,\n    CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\n// Boilerplate for applying mixins to McTabNav.\n/** @docs-private */\nexport class McTabNavBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {}\n}\nexport const mcTabNavMixinBase: CanColorCtor &\n    typeof McTabNavBase = mixinColor(McTabNavBase);\n\n/**\n * Navigation component matching the styles of the tab group header.\n */\n@Component({\n    selector: '[mc-tab-nav-bar]',\n    exportAs: 'mcTabNavBar, mcTabNav',\n    inputs: ['color'],\n    templateUrl: 'tab-nav-bar.html',\n    styleUrls: ['tab-nav-bar.css'],\n    host: { class: 'mc-tab-nav-bar' },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McTabNav extends mcTabNavMixinBase\n    implements CanColor {\n        constructor(elementRef: ElementRef) {\n            super(elementRef);\n        }\n     }\n\n// Boilerplate for applying mixins to McTabLink.\nexport class McTabLinkBase {}\nexport const mcTabLinkMixinBase: HasTabIndexCtor & CanDisableCtor &\n    typeof McTabLinkBase = mixinTabIndex(mixinDisabled(McTabLinkBase));\n\n/**\n * Link inside of a `mc-tab-nav-bar`.\n */\n@Directive({\n    selector: '[mc-tab-link], [mcTabLink]',\n    exportAs: 'mcTabLink',\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-tab-link',\n        '[attr.aria-current]': 'active',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.tabIndex]': 'tabIndex',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-active]': 'active'\n    }\n})\nexport class McTabLink extends mcTabLinkMixinBase\n    implements OnDestroy, CanDisable, HasTabIndex {\n    /** Whether the link is active. */\n    @Input()\n    get active(): boolean {\n        return this.isActive;\n    }\n    set active(value: boolean) {\n        if (value !== this.isActive) {\n            this.isActive = value;\n        }\n    }\n\n    /** Whether the tab link is active or not. */\n    protected isActive: boolean = false;\n\n    constructor(\n        public elementRef: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        private focusMonitor: FocusMonitor\n    ) {\n        super();\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this.focusMonitor.monitor(this.elementRef.nativeElement);\n    }\n\n    ngOnDestroy() {\n        this.focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PortalModule } from '@ptsecurity/cdk/portal';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McTab } from './tab';\nimport { McTabBody, McTabBodyPortal } from './tab-body';\nimport { McTabContent } from './tab-content';\nimport {\n    McTabGroup,\n    McLightTabsCssStyler,\n    McAlignTabsCenterCssStyler,\n    McAlignTabsEndCssStyler,\n    McStretchTabsCssStyler\n} from './tab-group';\nimport { McTabHeader } from './tab-header';\nimport { McTabLabel } from './tab-label';\nimport { McTabLabelWrapper } from './tab-label-wrapper';\nimport { McTabLink, McTabNav } from './tab-nav-bar/tab-nav-bar';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McCommonModule,\n        PortalModule,\n        A11yModule\n    ],\n    // Don't export all components because some are only to be used internally.\n    exports: [\n        McCommonModule,\n        McTabGroup,\n        McTabLabel,\n        McTab,\n        McTabNav,\n        McTabLink,\n        McTabContent,\n        McLightTabsCssStyler,\n        McAlignTabsCenterCssStyler,\n        McAlignTabsEndCssStyler,\n        McStretchTabsCssStyler\n    ],\n    declarations: [\n        McTabGroup,\n        McTabLabel,\n        McTab,\n        McTabLabelWrapper,\n        McTabNav,\n        McTabLink,\n        McTabBody,\n        McTabBodyPortal,\n        McTabHeader,\n        McTabContent,\n        McLightTabsCssStyler,\n        McAlignTabsCenterCssStyler,\n        McAlignTabsEndCssStyler,\n        McStretchTabsCssStyler\n    ]\n})\nexport class McTabsModule {}\n","import {\n    ElementRef,\n    QueryList,\n    ContentChildren,\n    Component,\n    ChangeDetectionStrategy,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport {\n    mixinColor,\n    CanColor,\n    CanColorCtor,\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\nexport class McTagBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McTagMixinBase: CanColorCtor & CanDisableCtor & typeof McTagBase = mixinColor(mixinDisabled(McTagBase));\n\n\n@Component({\n    selector: 'mc-tag',\n    templateUrl: 'tag.partial.html',\n    styleUrls: ['./tag.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-tag',\n        '[class.mc-disabled]': 'disabled'\n    },\n    inputs: ['color', 'disabled']\n})\nexport class McTag extends _McTagMixinBase implements CanColor, CanDisable {\n    @ContentChildren(McIcon) contentChildren: QueryList<McIcon>;\n\n    nativeElement: HTMLElement;\n\n    private _disabled: boolean = false;\n\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this.disabled) { this._disabled = value; }\n    }\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-left-icon');\n                }\n\n                if (iconElement.previousSibling) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-right-icon');\n                }\n            }\n        } else if (icons.length > 1) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTag } from './tag.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McTag\n    ],\n    declarations: [\n        McTag\n    ]\n})\nexport class McTagModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressSpinnerMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressSpinnerBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressSpinnerMixinBase:\n    CanColorCtor &\n    typeof McProgressSpinnerBase =\n        mixinColor(McProgressSpinnerBase);\n\nconst MAX_DASH_ARRAY = 273;\n\n@Component({\n    selector: 'mc-progress-spinner',\n    templateUrl: './progress-spinner.component.html',\n    styleUrls: ['./progress-spinner.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-spinner',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressSpinner extends _McProgressSpinnerMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-spinner-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressSpinnerMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n\n    get dashOffsetPercent(): string {\n        return `${MAX_DASH_ARRAY - this.percentage * MAX_DASH_ARRAY}%`;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McProgressSpinner } from './progress-spinner.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressSpinner\n    ],\n    declarations: [\n        McProgressSpinner\n    ]\n})\nexport class McProgressSpinnerModule {}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, Directive, ElementRef, EventEmitter, forwardRef,\n    Input, OnDestroy, OnInit, Optional, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { UniqueSelectionDispatcher } from '@ptsecurity/cdk/collections';\n\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n\n/** Change event object emitted by McRadio. */\nexport class McRadioChange {\n    constructor(\n        /** The McRadioButton that emits the change event. */\n        public source: McRadioButton,\n        /** The value of the McRadioButton. */\n        public value: any) {}\n}\n\n// Boilerplate for applying mixins to McRadioGroup.\n/** @docs-private */\nexport class McRadioGroupBase {}\nexport const _McRadioGroupMixinBase: CanDisableCtor & typeof McRadioGroupBase = mixinDisabled(McRadioGroupBase);\n\n/**\n * Provider Expression that allows mc-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nexport const MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McRadioGroup),\n    multi: true\n};\n\n@Directive({\n    selector: 'mc-radio-group',\n    exportAs: 'mcRadioGroup',\n    providers: [MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n    host: {\n        role: 'radiogroup',\n        class: 'mc-radio-group'\n    },\n    inputs: ['disabled']\n})\nexport class McRadioGroup extends _McRadioGroupMixinBase\n    implements AfterContentInit, ControlValueAccessor, CanDisable {\n\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    @Input()\n    get name(): string { return this._name; }\n    set name(value: string) {\n        this._name = value;\n        this.updateRadioButtonNames();\n    }\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this.markRadiosForCheck();\n    }\n\n    /** Value of the radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(newValue: any) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n\n            this.updateSelectedRadioFromValue();\n            this.checkSelectedRadioButton();\n        }\n    }\n\n    /** Whether the radio button is selected. */\n    @Input()\n    get selected() { return this._selected; }\n    set selected(selected: McRadioButton | null) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this.checkSelectedRadioButton();\n    }\n\n    /** Whether the radio group is disabled */\n    @Input()\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /** Whether the radio group is required */\n    @Input()\n    get required(): boolean { return this._required; }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /**\n     * Event emitted when the group value changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * a radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** Child radio buttons. */\n    @ContentChildren(forwardRef(() => McRadioButton), { descendants: true })\n    _radios: QueryList<McRadioButton>;\n\n    /**\n     * Selected value for group. Should equal the value of the selected radio button if there *is*\n     * a corresponding radio button with a matching value. If there is *not* such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    private _value: any = null;\n\n    /** The HTML name attribute applied to radio buttons in this group. */\n    private _name: string = `mc-radio-group-${nextUniqueId++}`;\n\n    /** The currently selected radio button. Should match value. */\n    private _selected: McRadioButton | null = null;\n\n    /** Whether the `value` has been set to its initial value. */\n    private _isInitialized: boolean = false;\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    private _labelPosition: 'before' | 'after' = 'after';\n\n    /** Whether the radio group is disabled. */\n    private _disabled: boolean = false;\n\n    /** Whether the radio group is required. */\n    private _required: boolean = false;\n\n    constructor(\n        private readonly _changeDetector: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    /** The method to be called in order to update ngModel */\n    // tslint:disable-next-line\n    controlValueAccessorChangeFn: (value: any) => void = () => {};\n\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * @docs-private\n     */\n    // tslint:disable-next-line\n    onTouched: () => any = () => {};\n\n    checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on McRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the McRadioGroup.\n        this._isInitialized = true;\n    }\n\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n\n    /** Dispatch change event with current selection and group value. */\n    emitChangeEvent(): void {\n        if (this._isInitialized) {\n            this.change.emit(new McRadioChange(this._selected!, this._value));\n        }\n    }\n\n    markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach((radio) => radio.markForCheck());\n        }\n    }\n\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     */\n    writeValue(value: any) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn: (value: any) => void) {\n        this.controlValueAccessorChangeFn = fn;\n    }\n\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n\n    private updateRadioButtonNames(): void {\n        if (this._radios) {\n            this._radios.forEach((radio) => {\n                radio.name = this.name;\n            });\n        }\n    }\n\n    /** Updates the `selected` radio button from the internal _value state. */\n    private updateSelectedRadioFromValue(): void {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n\n        if (this._radios != null && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach((radio) => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n}\n\n\n// Boilerplate for applying mixins to McRadioButton.\n/** @docs-private */\nexport class McRadioButtonBase {\n    // Since the disabled property is manually defined for the McRadioButton and isn't set up in\n    // the mixin base class. To be able to use the tabindex mixin, a disabled property must be\n    // defined to properly work.\n    disabled: boolean;\n\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McRadioButtonMixinBase:\n    CanColorCtor &\n    HasTabIndexCtor &\n    typeof McRadioButtonBase =\n        mixinColor(mixinTabIndex(McRadioButtonBase));\n\n\n@Component({\n    selector: 'mc-radio-button',\n    templateUrl: 'radio.component.html',\n    styleUrls: ['radio.css'],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    exportAs: 'mcRadioButton',\n    host: {\n        class: 'mc-radio-button',\n        '[attr.id]': 'id',\n        '[class.mc-checked]': 'checked',\n        '[class.mc-disabled]': 'disabled',\n        '(focus)': '_inputElement.nativeElement.focus()'\n    }\n})\nexport class McRadioButton extends _McRadioButtonMixinBase\n    implements OnInit, OnDestroy, CanColor, HasTabIndex {\n\n    private readonly _uniqueId: string = `mc-radio-${++nextUniqueId}`;\n\n    /* tslint:disable:member-ordering */\n\n    /** The unique ID for the radio button. */\n    @Input() id: string = this._uniqueId;\n\n    /** Analog to HTML 'name' attribute used to group radios for unique selection. */\n    @Input() name: string;\n\n    /** Used to set the 'aria-label' attribute on the underlying input element. */\n    @Input('aria-label') ariaLabel: string;\n\n    /** The 'aria-labelledby' attribute takes precedence as the element's text alternative. */\n    @Input('aria-labelledby') ariaLabelledby: string;\n\n    /** The 'aria-describedby' attribute is read after the element's label and field type. */\n    @Input('aria-describedby') ariaDescribedby: string;\n\n    /** Whether this radio button is checked. */\n    @Input()\n    get checked(): boolean { return this._checked; }\n    set checked(value: boolean) {\n        const newCheckedState = toBoolean(value);\n\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            } else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** The value of this radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(value: any) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup != null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n\n    /** Whether the radio button is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled || (this.radioGroup != null && this.radioGroup.disabled);\n    }\n    set disabled(value: boolean) {\n        const newDisabledState = toBoolean(value);\n\n        if (this._disabled !== newDisabledState) {\n\n            this._disabled = newDisabledState;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** Whether the radio button is required. */\n    @Input()\n    get required(): boolean {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    private _labelPosition: 'before' | 'after';\n\n    /** The native `<input type=radio>` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Event emitted when the checked state of this radio button changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * the radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** The parent radio group. May or may not be present. */\n    radioGroup: McRadioGroup;\n\n    @Input()\n    isFocused: boolean = false;\n\n    /** ID of the native input element inside `<mc-radio-button>` */\n    get inputId(): string { return `${this.id || this._uniqueId}-input`; }\n\n    /** Whether this radio is checked. */\n    private _checked: boolean = false;\n\n    /** Whether this radio is disabled. */\n    private _disabled: boolean;\n\n    /** Whether this radio is required. */\n    private _required: boolean;\n\n    /** Value assigned to this radio. */\n    private _value: any = null;\n\n    /** Unregister function for _radioDispatcher */\n    // tslint:disable-next-line\n    private readonly removeUniqueSelectionListener: () => void = () => {};\n\n    constructor(\n        @Optional() radioGroup: McRadioGroup,\n        elementRef: ElementRef,\n        private readonly _changeDetector: ChangeDetectorRef,\n        private readonly _radioDispatcher: UniqueSelectionDispatcher\n    ) {\n\n        super(elementRef);\n\n        this.radioGroup = radioGroup;\n\n        this.removeUniqueSelectionListener =\n            _radioDispatcher.listen((id: string, name: string) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            });\n    }\n\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n\n    ngOnDestroy() {\n        this.removeUniqueSelectionListener();\n    }\n\n    /** Focuses the radio button. */\n    // tslint:disable-next-line\n    focus(): void {}\n\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n\n    onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n\n    onInputChange(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this.emitChangeEvent();\n\n        if (this.radioGroup) {\n            this.radioGroup.controlValueAccessorChangeFn(this.value);\n            this.radioGroup.touch();\n            if (groupValueChanged) {\n                this.radioGroup.emitChangeEvent();\n            }\n        }\n    }\n\n    /** Dispatch change event with current value. */\n    private emitChangeEvent(): void {\n        this.change.emit(new McRadioChange(this, this._value));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McRadioButton, McRadioGroup } from './radio.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule],\n    exports: [McRadioGroup, McRadioButton],\n    declarations: [McRadioGroup, McRadioButton]\n})\nexport class McRadioModule {\n}\n","import { Directive, Input } from '@angular/core';\n\nimport { CdkTreeNodeDef } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeDef]',\n    inputs: ['when: mcTreeNodeDefWhen'],\n    providers: [{ provide: CdkTreeNodeDef, useExisting: McTreeNodeDef }]\n})\nexport class McTreeNodeDef<T> extends CdkTreeNodeDef<T> {\n    @Input('mcTreeNode') data: T;\n}\n","import { Directive, Input, OnInit } from '@angular/core';\nimport { CdkTreeNodePadding } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodePadding]',\n    providers: [{ provide: CdkTreeNodePadding, useExisting: McTreeNodePadding }]\n})\nexport class McTreeNodePadding<T> extends CdkTreeNodePadding<T> implements OnInit {\n    @Input('mcTreeNodePadding') level: number;\n\n    @Input('mcTreeNodePaddingIndent') indent: number;\n\n    baseLeftPadding: number = 12;\n    /* tslint:disable-next-line:naming-convention */\n    _indent: number = 20;\n\n    withIcon: boolean;\n    iconWidth: number = 20;\n\n    get leftPadding(): number {\n        return (this.withIcon ? 0 : this.iconWidth) + this.baseLeftPadding;\n    }\n\n    paddingIndent(): string | null {\n        const nodeLevel = (this.treeNode.data && this.tree.treeControl.getLevel)\n            ? this.tree.treeControl.getLevel(this.treeNode.data)\n            : null;\n\n        const level = this.level || nodeLevel;\n\n        return level ? `${(level * this._indent) + this.leftPadding}px` : `${this.baseLeftPadding}px`;\n    }\n\n    ngOnInit(): void {\n        this.withIcon = this.tree.treeControl.isExpandable(this.treeNode.data);\n\n        this.setPadding();\n    }\n}\n","import { Directive } from '@angular/core';\nimport { CdkTreeNodeToggle } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeToggle]',\n    host: {\n        '(click)': 'toggle($event)'\n    },\n    providers: [{ provide: CdkTreeNodeToggle, useExisting: McTreeNodeToggle }]\n})\nexport class McTreeNodeToggle<T> extends CdkTreeNodeToggle<T> {}\n","import {\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ElementRef,\n    Inject,\n    Optional,\n    InjectionToken\n} from '@angular/core';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { CdkTreeNode } from '@ptsecurity/cdk/tree';\nimport { CanDisable, toBoolean } from '@ptsecurity/mosaic/core';\n\n\n/* tslint:disable-next-line:naming-convention */\nexport interface McTreeOptionParentComponent {\n    multiple: boolean;\n    selectionModel: SelectionModel<McTreeOption>;\n    setFocusedOption: any;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_TREE_OPTION_PARENT_COMPONENT =\n    new InjectionToken<McTreeOptionParentComponent>('MC_TREE_OPTION_PARENT_COMPONENT');\n\nexport class McTreeOptionChange {\n    constructor(public source: McTreeOption, public isUserInput = false) {}\n}\n\nlet uniqueIdCounter: number = 0;\n\n@Component({\n    selector: 'mc-tree-option',\n    exportAs: 'mcTreeOption',\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'getTabIndex()',\n\n        '[attr.disabled]': 'disabled || null',\n\n        class: 'mc-tree-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-active]': 'active',\n\n        '(click)': 'selectViaInteraction()'\n    },\n    templateUrl: './tree-option.html',\n    providers: [{ provide: CdkTreeNode, useExisting: McTreeOption }]\n})\nexport class McTreeOption extends CdkTreeNode<McTreeOption> implements CanDisable {\n    @Output() readonly onSelectionChange = new EventEmitter<McTreeOptionChange>();\n\n    @Input() value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    // @Input()\n    // get selected(): boolean {\n    //     return this.treeSelection.selectionModel && this.treeSelection.selectionModel.isSelected(this) || false;\n    // }\n\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            // this.treeSelection._reportValueChange();\n        }\n    }\n\n    private _selected: boolean = false;\n\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active(): boolean {\n        return this._active;\n    }\n\n    private _active = false;\n\n    get id(): string {\n        return this._id;\n    }\n\n    private _id = `mc-tree-option-${uniqueIdCounter++}`;\n\n    get multiple(): boolean {\n        return this.parent.multiple;\n    }\n\n    constructor(\n        protected elementRef: ElementRef,\n        protected changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_TREE_OPTION_PARENT_COMPONENT) private readonly parent: McTreeOptionParentComponent\n    ) {\n        // todo any\n        super(elementRef, parent as any);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.parent.selectionModel) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.parent.selectionModel.select(this);\n        } else {\n            this.parent.selectionModel.deselect(this);\n        }\n\n        // this._changeDetector.markForCheck();\n    }\n\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles(): void {\n        if (!this._active) {\n            this._active = true;\n\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles(): void {\n        if (this._active) {\n            this._active = false;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    getHeight(): number {\n        const clientRects = this.elementRef.nativeElement.getClientRects();\n        if (clientRects.length) {\n            return clientRects[0].height;\n        }\n\n        return 0;\n    }\n\n    focus(): void {\n        const element = this.getHostElement();\n\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n\n    // todo старая реализация, нужно восстановить tree-selection\n    // handleClick(): void {\n    //     if (this.disabled) { return; }\n    //\n    //     this.treeSelection.setFocusedOption(this);\n    // }\n\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue(): string {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this.getHostElement().textContent || '').trim();\n    }\n\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    selectViaInteraction(): void {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent(true);\n\n            if (this.parent.setFocusedOption) {\n                this.parent.setFocusedOption(this);\n            }\n        }\n    }\n\n    emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McTreeOptionChange(this, isUserInput));\n    }\n\n    getHostElement(): HTMLElement {\n        return this.elementRef.nativeElement;\n    }\n\n    getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    EventEmitter,\n    Input,\n    IterableDiffer,\n    IterableDiffers,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    ElementRef\n} from '@angular/core';\nimport { NodeDef, ViewData } from '@angular/core/src/view';\nimport { ActiveDescendantKeyManager } from '@ptsecurity/cdk/a11y';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { CdkTree, CdkTreeNodeOutlet } from '@ptsecurity/cdk/tree';\nimport {\n    CanDisable,\n    CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\nimport { Subject } from 'rxjs';\n\nimport { MC_TREE_OPTION_PARENT_COMPONENT, McTreeOption } from './tree-option';\n\n\nexport class McTreeNavigationChange {\n    constructor(\n        public source: McTreeSelection,\n        public option: McTreeOption\n    ) {}\n}\n\nexport class McTreeSelectionChange {\n    constructor(public source: McTreeSelection, public option: McTreeOption) {}\n}\n\nclass McTreeSelectionBase<T> extends CdkTree<T> {\n    constructor(differs: IterableDiffers, changeDetectorRef: ChangeDetectorRef) {\n        super(differs, changeDetectorRef);\n    }\n}\n\n/* tslint:disable-next-line:naming-convention */\nconst McTreeSelectionBaseMixin: HasTabIndexCtor & CanDisableCtor &\n    typeof McTreeSelectionBase = mixinTabIndex(mixinDisabled(McTreeSelectionBase));\n\n\n@Component({\n    selector: 'mc-tree-selection',\n    exportAs: 'mcTreeSelection',\n    template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n    host: {\n        class: 'mc-tree-selection',\n\n        '[attr.tabindex]': 'tabIndex',\n\n        '(keydown)': 'onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    styleUrls: ['./tree.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        { provide: MC_TREE_OPTION_PARENT_COMPONENT, useExisting: McTreeSelection },\n        { provide: CdkTree, useExisting: McTreeSelection }\n    ]\n})\nexport class McTreeSelection extends McTreeSelectionBaseMixin<McTreeOption>\n    implements AfterContentInit, CanDisable, HasTabIndex {\n\n    @ViewChild(CdkTreeNodeOutlet) nodeOutlet: CdkTreeNodeOutlet;\n\n    @ContentChildren(McTreeOption) options: QueryList<McTreeOption>;\n\n    keyManager: ActiveDescendantKeyManager<McTreeOption>;\n\n    selectionModel: SelectionModel<McTreeOption>;\n\n    tabIndex: number;\n    multiple: boolean;\n    autoSelect: boolean;\n    noUnselect: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n\n    @Output() readonly navigationChange = new EventEmitter<McTreeNavigationChange>();\n\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectionChange>();\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(rawValue: boolean) {\n        const value = toBoolean(rawValue);\n\n        if (this._disabled !== value) {\n            this._disabled = value;\n\n            if (this._disabled) {\n                /* tslint:disable-next-line:no-console */\n                console.log('need disable all options');\n            } else {\n                /* tslint:disable-next-line:no-console */\n                console.log('need enable all options');\n            }\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    private readonly destroy = new Subject<void>();\n\n    constructor(\n        private elementRef: ElementRef,\n        differs: IterableDiffers,\n        changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('multiple') multiple: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string\n    ) {\n        super(differs, changeDetectorRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.multiple = multiple === null ? false : toBoolean(multiple);\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.selectionModel = new SelectionModel<McTreeOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.keyManager = new ActiveDescendantKeyManager<McTreeOption>(this.options)\n            // .withTypeAhead()\n            .withVerticalOrientation(true)\n            .withHorizontalOrientation(null);\n    }\n\n    ngOnDestroy() {\n        this.destroy.next();\n\n        this.destroy.complete();\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case LEFT_ARROW:\n                if (this.keyManager.activeItem) {\n                    this.treeControl.collapse(this.keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case RIGHT_ARROW:\n                if (this.keyManager.activeItem) {\n                    this.treeControl.expand(this.keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this.keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this.keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                this.keyManager.setPreviousPageItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                this.keyManager.setNextPageItemActive();\n                event.preventDefault();\n\n                break;\n            default:\n                this.keyManager.onKeydown(event);\n        }\n    }\n\n    updateScrollSize(): void {\n        if (!this.options.first) { return; }\n\n        this.keyManager.withScrollSize(Math.floor(this.getHeight() / this.options.first.getHeight()));\n    }\n\n    setFocusedOption(option: McTreeOption) {\n        this.keyManager.setActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this.keyManager.previousActiveItemIndex;\n            const activeIndex = this.keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this.canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this.emitNavigationEvent(option);\n    }\n\n    toggleFocusedOption(): void {\n        const focusedIndex = this.keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this.isValidIndex(focusedIndex)) {\n            const focusedOption: McTreeOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this.canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this.emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    renderNodeChanges(\n        data: McTreeOption[],\n        dataDiffer: IterableDiffer<McTreeOption> = this.dataDiffer,\n        viewContainer: any = this.nodeOutlet.viewContainer,\n        parentData?: McTreeOption\n    ): void {\n        super.renderNodeChanges(data, dataDiffer, viewContainer, parentData);\n\n        const arrayOfInstances = [];\n\n        viewContainer._embeddedViews.forEach((view: ViewData) => {\n            const viewDef = view.def;\n\n            viewDef.nodes.forEach((node: NodeDef) => {\n                if (viewDef.nodeMatchedQueries === node.matchedQueryIds) {\n                    const nodeData: any = view.nodes[node.nodeIndex];\n\n                    arrayOfInstances.push(nodeData.instance as never);\n                }\n            });\n        });\n\n        if (this.options) {\n            this.options.reset(arrayOfInstances);\n            this.options.notifyOnChanges();\n        }\n\n        this.updateScrollSize();\n    }\n\n    getHeight(): number {\n        const clientRects = this.elementRef.nativeElement.getClientRects();\n        if (clientRects.length) {\n            return clientRects[0].height;\n        }\n\n        return 0;\n    }\n\n    emitNavigationEvent(option: McTreeOption): void {\n        this.navigationChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    emitChangeEvent(option: McTreeOption): void {\n        this.selectionChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    private isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    private canDeselectLast(option: McTreeOption): boolean {\n        return !(this.noUnselect && this.selectionModel.selected.length === 1 && option.selected);\n    }\n}\n\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\nimport { McPseudoCheckboxModule } from '@ptsecurity/mosaic/core';\n\nimport { McTreeNodeDef } from './node';\nimport { McTreeNodePadding } from './padding';\nimport { McTreeNodeToggle } from './toggle';\nimport { McTreeOption } from './tree-option';\nimport { McTreeSelection } from './tree-selection';\n\n\nconst MC_TREE_DIRECTIVES = [\n    McTreeSelection,\n    McTreeOption,\n    McTreeNodeDef,\n    McTreeNodePadding,\n    McTreeNodeToggle\n];\n\n@NgModule({\n    imports: [CommonModule, CdkTreeModule, McPseudoCheckboxModule],\n    exports: MC_TREE_DIRECTIVES,\n    declarations: MC_TREE_DIRECTIVES\n})\nexport class McTreeModule {}\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { FlatTreeControl, ITreeControl } from '@ptsecurity/cdk/tree';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nexport class McTreeFlattener<T, F> {\n    constructor(\n        public transformFunction: (node: T, level: number) => F,\n        public getLevel: (node: F) => number,\n        public isExpandable: (node: F) => boolean,\n        public getChildren: (node: T) => Observable<T[]>\n    ) {}\n\n    flattenNode(node: T, level: number, resultNodes: F[], parentMap: boolean[]): F[] {\n        const flatNode = this.transformFunction(node, level);\n        resultNodes.push(flatNode);\n\n        if (this.isExpandable(flatNode)) {\n            this.getChildren(node)\n                .pipe(take(1))\n                .subscribe((children) => {\n                    children.forEach((child, index) => {\n                        const childParentMap: boolean[] = parentMap.slice();\n                        childParentMap.push(index !== children.length - 1);\n\n                        this.flattenNode(child, level + 1, resultNodes, childParentMap);\n                    });\n                });\n        }\n\n        return resultNodes;\n    }\n\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData: T[]): F[] {\n        const resultNodes: F[] = [];\n        structuredData.forEach((node) => this.flattenNode(node, 0, resultNodes, []));\n\n        return resultNodes;\n    }\n\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes: F[], treeControl: ITreeControl<F>): F[] {\n        const results: F[] = [];\n        const currentExpand: boolean[] = [];\n        currentExpand[0] = true;\n\n        nodes.forEach((node) => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n\n            if (expand) { results.push(node); }\n\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n\n        return results;\n    }\n}\n\n\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `McTree`.\n * The nested tree nodes of type `T` are flattened through `MсTreeFlattener`, and converted\n * to type `F` for `McTree` to consume.\n */\nexport class McTreeFlatDataSource<T, F> extends DataSource<F> {\n    flattenedData = new BehaviorSubject<F[]>([]);\n\n    expandedData = new BehaviorSubject<F[]>([]);\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n\n        this.flattenedData.next(this.treeFlattener.flattenNodes(this.data));\n        this.treeControl.dataNodes = this.flattenedData.value;\n    }\n\n    private _data: BehaviorSubject<T[]>;\n\n    constructor(\n        private treeControl: FlatTreeControl<F>,\n        private treeFlattener: McTreeFlattener<T, F>,\n        initialData: T[] = []\n    ) {\n        super();\n\n        this._data = new BehaviorSubject<T[]>(initialData);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<F[]> {\n        const changes = [\n            collectionViewer.viewChange,\n            this.treeControl.expansionModel.changed,\n            this.flattenedData\n        ];\n\n        return merge(...changes)\n            .pipe(map(() => {\n                this.expandedData.next(\n                    this.treeFlattener.expandFlattenedNodes(this.flattenedData.value, this.treeControl)\n                );\n\n                return this.expandedData.value;\n            }));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by ITreeControl and each non-leaf node.\n */\nexport class McTreeNestedDataSource<T> extends DataSource<T> {\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n    }\n\n    /* tslint:disable-next-line:naming-convention */\n    private _data = new BehaviorSubject<T[]>([]);\n\n    connect(collectionViewer: ICollectionViewer): Observable<T[]> {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map(() => this.data));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { Directive, TemplateRef } from '@angular/core';\n\n\n/** Decorates the `ng-template` tags and reads out the template from it. */\n@Directive({ selector: '[mcTabContent]' })\nexport class McTabContent {\n    constructor(public template: TemplateRef<any>) { }\n}\n","import { Directive } from '@angular/core';\nimport { CdkPortal } from '@ptsecurity/cdk/portal';\n\n\n/** Used to flag tab labels for use with the portal directive */\n@Directive({\n    selector: '[mc-tab-label], [mcTabLabel]'\n})\nexport class McTabLabel extends CdkPortal {}\n\n// TODO: workaround for https://github.com/angular/material2/issues/12760\n(McTabLabel as any).ctorParameters = () => (CdkPortal as any).ctorParameters;\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { TemplatePortal } from '@ptsecurity/cdk/portal';\nimport {\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { Subject } from 'rxjs';\n\nimport { McTabContent } from './tab-content';\nimport { McTabLabel } from './tab-label';\n\n\nexport class McTabBase {}\nexport const mcTabMixinBase: CanDisableCtor & typeof McTabBase = mixinDisabled(\n    McTabBase\n);\n\n@Component({\n    selector: 'mc-tab',\n    // Create a template for the content of the <mc-tab> so that we can grab a reference to this\n    // TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\n    // tab-group.\n    template: '<ng-template><ng-content></ng-content></ng-template>',\n    inputs: ['disabled'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcTab'\n})\nexport class McTab extends mcTabMixinBase\n    implements OnInit, CanDisable, OnChanges, OnDestroy {\n    /** @docs-private */\n    get content(): TemplatePortal | null {\n        return this.contentPortal;\n    }\n    /** Content for the tab label given by `<ng-template mc-tab-label>`. */\n    @ContentChild(McTabLabel)\n    templateLabel: McTabLabel;\n\n    /**\n     * Template provided in the tab content that will be used if present, used to enable lazy-loading\n     */\n    @ContentChild(McTabContent, { read: TemplateRef })\n    explicitContent: TemplateRef<any>;\n\n    /** Template inside the McTab view that contains an `<ng-content>`. */\n    @ViewChild(TemplateRef)\n    implicitContent: TemplateRef<any>;\n\n    /** Plain text label for the tab, used when there is no template label. */\n    @Input('label')\n    textLabel: string = '';\n\n    /** Aria label for the tab. */\n    @Input('aria-label')\n    ariaLabel: string;\n\n    /**\n     * Reference to the element that the tab is labelled by.\n     * Will be cleared if `aria-label` is set at the same time.\n     */\n    @Input('aria-labelledby')\n    ariaLabelledby: string;\n\n    /** Emits whenever the internal state of the tab changes. */\n    readonly stateChanges = new Subject<void>();\n\n    /**\n     * The relatively indexed position where 0 represents the center, negative is left, and positive\n     * represents the right.\n     */\n    position: number | null = null;\n\n    /**\n     * The initial relatively index origin of the tab if it was created and selected after there\n     * was already a selected tab. Provides context of what position the tab should originate from.\n     */\n    origin: number | null = null;\n\n    /**\n     * Whether the tab is currently active.\n     */\n    isActive = false;\n\n    /** Portal that will be the hosted content of the tab */\n    private contentPortal: TemplatePortal | null = null;\n\n    constructor(private viewContainerRef: ViewContainerRef) {\n        super();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (\n            changes.hasOwnProperty('textLabel') ||\n            changes.hasOwnProperty('disabled')\n        ) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngOnInit(): void {\n        this.contentPortal = new TemplatePortal(\n            this.explicitContent || this.implicitContent,\n            this.viewContainerRef\n        );\n    }\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\nexport const mcTabsAnimations: {\n    readonly translateTab: AnimationTriggerMetadata;\n} = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state(\n            'center, void, left-origin-center, right-origin-center',\n            style({ transform: 'none' })\n        ),\n\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state(\n            'left',\n            style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })\n        ),\n        state(\n            'right',\n            style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })\n        ),\n\n        transition(\n            '* => left, * => right, left => center, right => center',\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    Component,\n    ChangeDetectorRef,\n    Input,\n    Inject,\n    Output,\n    EventEmitter,\n    OnDestroy,\n    OnInit,\n    ElementRef,\n    Directive,\n    Optional,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ComponentFactoryResolver,\n    ViewContainerRef,\n    forwardRef,\n    ViewChild\n} from '@angular/core';\nimport { Directionality, Direction } from '@ptsecurity/cdk/bidi';\nimport { TemplatePortal, CdkPortalOutlet, PortalHostDirective } from '@ptsecurity/cdk/portal';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\nimport { mcTabsAnimations } from './tabs-animations';\n\n\n/**\n * These position states are used internally as animation states for the tab body. Setting the\n * position state to left, right, or center will transition the tab body from its current\n * position to its respective state. If there is not current position (void, in the case of a new\n * tab body), then there will be no transition animation to its state.\n *\n * In the case of a new tab body that should immediately be centered with an animating transition,\n * then left-origin-center or right-origin-center can be used, which will use left or right as its\n * psuedo-prior state.\n */\nexport type McTabBodyPositionState =\n    'left' | 'center' | 'right' | 'left-origin-center' | 'right-origin-center';\n\n/**\n * The origin state is an internally used state that is set on a new tab body indicating if it\n * began to the left or right of the prior selected index. For example, if the selected index was\n * set to 1, and a new tab is created and selected at index 2, then the tab body would have an\n * origin of right because its index was greater than the prior selected index.\n */\nexport type McTabBodyOriginState = 'left' | 'right';\n\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\n@Component({\n    selector: 'mc-tab-body',\n    templateUrl: 'tab-body.html',\n    styleUrls: ['tab-body.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [mcTabsAnimations.translateTab],\n    host: {\n        class: 'mc-tab-body'\n    }\n})\nexport class McTabBody implements OnInit, OnDestroy {\n\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    @Input()\n    set position(position: number) {\n        this.positionIndex = position;\n        this.computePositionAnimationState();\n    }\n\n    /** Tab body position state. Used by the animation trigger for the current state. */\n    bodyPosition: McTabBodyPositionState;\n\n    /** Event emitted when the tab begins to animate towards the center as the active tab. */\n    @Output() readonly onCentering: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted before the centering of the tab begins. */\n    @Output() readonly beforeCentering: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted before the centering of the tab begins. */\n    @Output() readonly afterLeavingCenter: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the tab completes its animation towards the center. */\n    @Output() readonly onCentered: EventEmitter<void> = new EventEmitter<void>(true);\n\n    /** The portal host inside of this container into which the tab body content will be loaded. */\n    @ViewChild(PortalHostDirective) portalHost: PortalHostDirective;\n\n    /** The tab body content to display. */\n    @Input('content') content: TemplatePortal;\n\n    /** Position that will be used when the tab is immediately becoming visible after creation. */\n    @Input() origin: number;\n\n    // Note that the default value will always be overwritten by `McTabBody`, but we need one\n    // anyway to prevent the animations module from throwing an error if the body is used on its own.\n    /** Duration for the tab's animation. */\n    @Input() animationDuration: string = '0ms';\n\n    /** Current position of the tab-body in the tab-group. Zero means that the tab is visible. */\n    private positionIndex: number;\n\n    /** Subscription to the directionality change observable. */\n    private dirChangeSubscription = Subscription.EMPTY;\n\n    constructor(private elementRef: ElementRef<HTMLElement>,\n                @Optional() private dir: Directionality,\n                changeDetectorRef: ChangeDetectorRef) {\n\n        if (this.dir && changeDetectorRef) {\n            this.dirChangeSubscription = this.dir.change.subscribe((direction: Direction) => {\n                this.computePositionAnimationState(direction);\n                changeDetectorRef.markForCheck();\n            });\n        }\n    }\n\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n        if (this.bodyPosition === 'center' && this.origin != null) {\n            this.bodyPosition = this.computePositionFromOrigin();\n        }\n    }\n\n    ngOnDestroy() {\n        this.dirChangeSubscription.unsubscribe();\n    }\n\n    onTranslateTabStarted(e: AnimationEvent): void {\n        const isCentering = this.isCenterPosition(e.toState);\n        this.beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this.onCentering.emit(this.elementRef.nativeElement.clientHeight);\n        }\n    }\n\n    onTranslateTabComplete(e: AnimationEvent): void {\n        // If the transition to the center is complete, emit an event.\n        if (this.isCenterPosition(e.toState) && this.isCenterPosition(this.bodyPosition)) {\n            this.onCentered.emit();\n        }\n\n        if (this.isCenterPosition(e.fromState) && !this.isCenterPosition(this.bodyPosition)) {\n            this.afterLeavingCenter.emit();\n        }\n    }\n\n    /** The text direction of the containing app. */\n    getLayoutDirection(): Direction {\n        return this.dir && this.dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    /** Whether the provided position state is considered center, regardless of origin. */\n    isCenterPosition(position: McTabBodyPositionState | string): boolean {\n        return position === 'center' ||\n            position === 'left-origin-center' ||\n            position === 'right-origin-center';\n    }\n\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    private computePositionAnimationState(dir: Direction = this.getLayoutDirection()) {\n        if (this.positionIndex < 0) {\n            this.bodyPosition = dir === 'ltr' ? 'left' : 'right';\n        } else if (this.positionIndex > 0) {\n            this.bodyPosition = dir === 'ltr' ? 'right' : 'left';\n        } else {\n            this.bodyPosition = 'center';\n        }\n    }\n\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    private computePositionFromOrigin(): McTabBodyPositionState {\n        const dir = this.getLayoutDirection();\n\n        if ((dir === 'ltr' && this.origin <= 0) || (dir === 'rtl' && this.origin > 0)) {\n            return 'left-origin-center';\n        }\n\n        return 'right-origin-center';\n    }\n}\n\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\n@Directive({\n    selector: '[mcTabBodyHost]'\n})\nexport class McTabBodyPortal extends CdkPortalOutlet implements OnInit, OnDestroy {\n    /** Subscription to events for when the tab body begins centering. */\n    private centeringSub = Subscription.EMPTY;\n    /** Subscription to events for when the tab body finishes leaving from center position. */\n    private leavingSub = Subscription.EMPTY;\n\n    constructor(\n        componentFactoryResolver: ComponentFactoryResolver,\n        viewContainerRef: ViewContainerRef,\n        @Inject(forwardRef(() => McTabBody)) private host: McTabBody) {\n        super(componentFactoryResolver, viewContainerRef);\n    }\n\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit(): void {\n        super.ngOnInit();\n\n        this.centeringSub = this.host.beforeCentering\n            .pipe(startWith(this.host.isCenterPosition(this.host.bodyPosition)))\n            .subscribe((isCentering: boolean) => {\n                if (isCentering && !this.hasAttached()) {\n                    this.attach(this.host.content);\n                }\n            });\n\n        this.leavingSub = this.host.afterLeavingCenter.subscribe(() => {\n            this.detach();\n        });\n    }\n\n    /** Clean up centering subscription. */\n    ngOnDestroy(): void {\n        super.ngOnDestroy();\n        this.centeringSub.unsubscribe();\n        this.leavingSub.unsubscribe();\n    }\n}\n","import { Directive, ElementRef } from '@angular/core';\nimport {\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\n\n\n// Boilerplate for applying mixins to McTabLabelWrapper.\n/** @docs-private */\nexport class McTabLabelWrapperBase {}\nexport const mcTabLabelWrapperMixinBase: CanDisableCtor &\n    typeof McTabLabelWrapperBase = mixinDisabled(McTabLabelWrapperBase);\n\n/**\n * Used in the `mc-tab-group` view to display tab labels.\n * @docs-private\n */\n@Directive({\n    selector: '[mcTabLabelWrapper]',\n    inputs: ['disabled'],\n    host: {\n        '[class.mc-disabled]': 'disabled',\n        '[attr.aria-disabled]': '!!disabled'\n    }\n})\nexport class McTabLabelWrapper extends mcTabLabelWrapperMixinBase implements CanDisable {\n    constructor(public elementRef: ElementRef) {\n        super();\n    }\n\n    /** Sets focus on the wrapper element */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    getOffsetLeft(): number {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n\n    getOffsetWidth(): number {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    Renderer2,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewContainerRef, ViewEncapsulation\n} from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { McMeasureScrollbarService } from '@ptsecurity/mosaic/core';\nimport { Observable } from 'rxjs';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\n// tslint:disable-next-line\nimport ModalUtil from './modal-util';\nimport { IModalButtonOptions, IModalOptions, ModalType, OnClickCallback } from './modal.type';\n\n\n// Duration when perform animations (ms)\nexport const MODAL_ANIMATE_DURATION = 200;\n\ntype AnimationState = 'enter' | 'leave' | null;\n\n@Component({\n    selector: 'mc-modal',\n    templateUrl: './modal.component.html',\n    styleUrls: ['./modal.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McModalComponent<T = any, R = any> extends McModalRef<T, R>\n    implements OnInit, OnChanges, AfterViewInit, OnDestroy, IModalOptions {\n\n    // tslint:disable-next-line:no-any\n    @Input() mcModalType: ModalType = 'default';\n    // If not specified, will use <ng-content>\n    @Input() mcContent: string | TemplateRef<{}> | Type<T>;\n    // available when mcContent is a component\n    @Input() mcComponentParams: T;\n    // Default Modal ONLY\n    @Input() mcFooter: string | TemplateRef<{}> | IModalButtonOptions<T>[];\n\n    @Input()\n    get mcVisible() { return this._mcVisible; }\n    set mcVisible(value) { this._mcVisible = value; }\n\n    _mcVisible = false;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n\n    @Input() mcZIndex: number = 1000;\n    @Input() mcWidth: number | string = 480;\n    @Input() mcWrapClassName: string;\n    @Input() mcClassName: string;\n    @Input() mcStyle: object;\n    @Input() mcTitle: string | TemplateRef<{}>;\n    @Input() mcCloseByESC: boolean = true;\n\n    @Input()\n    get mcClosable() { return this._mcClosable; }\n    set mcClosable(value) { this._mcClosable = value; }\n    _mcClosable = true;\n\n    @Input()\n    get mcMask() { return this._mcMask; }\n    set mcMask(value) { this._mcMask = value; }\n    _mcMask = true;\n\n    @Input()\n    get mcMaskClosable() { return this._mcMaskClosable; }\n    set mcMaskClosable(value) { this._mcMaskClosable = value; }\n    _mcMaskClosable = true;\n\n    @Input() mcMaskStyle: object;\n    @Input() mcBodyStyle: object;\n\n    // Trigger when modal open(visible) after animations\n    @Output() mcAfterOpen = new EventEmitter<void>();\n    // Trigger when modal leave-animation over\n    @Output() mcAfterClose = new EventEmitter<R>();\n\n    // --- Predefined OK & Cancel buttons\n    @Input() mcOkText: string;\n    @Input() mcOkType = 'primary';\n\n    @Input()\n    get mcOkLoading() { return this._mcOkLoading; }\n    set mcOkLoading(value) { this._mcOkLoading = value; }\n    _mcOkLoading = false;\n\n    @Input() @Output() mcOnOk: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    @Input() mcCancelText: string;\n\n    @Input()\n    get mcCancelLoading() { return this._mcCancelLoading; }\n    set mcCancelLoading(value) { this._mcCancelLoading = value; }\n    _mcCancelLoading = false;\n\n    @Input() @Output() mcOnCancel: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n\n    @ViewChild('modalContainer') modalContainer: ElementRef;\n    @ViewChild('bodyContainer', { read: ViewContainerRef }) bodyContainer: ViewContainerRef;\n    // Only aim to focus the ok button that needs to be auto focused\n    @ViewChild('autoFocusButtonOk', { read: ElementRef }) autoFocusButtonOk: ElementRef;\n\n    maskAnimationClassMap: object;\n    modalAnimationClassMap: object;\n    // The origin point that animation based on\n    transformOrigin = '0px 0px 0px';\n\n    // Observable alias for mcAfterOpen\n    get afterOpen(): Observable<void> {\n        return this.mcAfterOpen.asObservable();\n    }\n\n    // Observable alias for mcAfterClose\n    get afterClose(): Observable<R> {\n        return this.mcAfterClose.asObservable();\n    }\n\n    get okText(): string {\n        return this.mcOkText;\n    }\n\n    get cancelText(): string {\n        return this.mcCancelText;\n    }\n\n    // Indicate whether this dialog should hidden\n    get hidden(): boolean {\n        return !this.mcVisible && !this.animationState;\n    }\n\n    // Handle the reference when using mcContent as Component\n    private contentComponentRef: ComponentRef<T>;\n    // Current animation state\n    private animationState: AnimationState;\n    private container: HTMLElement | OverlayRef;\n\n    constructor(\n        private overlay: Overlay,\n        private renderer: Renderer2,\n        private cfr: ComponentFactoryResolver,\n        private elementRef: ElementRef,\n        private viewContainer: ViewContainerRef,\n        private mcMeasureScrollbarService: McMeasureScrollbarService,\n        private modalControl: McModalControlService,\n        private changeDetector: ChangeDetectorRef,\n        @Inject(DOCUMENT) private document: any) {\n\n        super();\n    }\n\n    @Input() mcGetContainer: HTMLElement | OverlayRef | (() => HTMLElement | OverlayRef) = () => this.overlay.create();\n\n    ngOnInit() {\n\n        // Create component along without View\n        if (this.isComponent(this.mcContent)) {\n            this.createDynamicComponent(this.mcContent as Type<T>);\n        }\n\n        // Setup default button options\n        if (this.isModalButtons(this.mcFooter)) {\n            this.mcFooter = this.formatModalButtons(this.mcFooter as IModalButtonOptions<T>[]);\n        }\n\n        // Place the modal dom to elsewhere\n        this.container = typeof this.mcGetContainer === 'function' ? this.mcGetContainer() : this.mcGetContainer;\n        if (this.container instanceof HTMLElement) {\n            this.container.appendChild(this.elementRef.nativeElement);\n        } else if (this.container instanceof OverlayRef) {\n            // NOTE: only attach the dom to overlay, the view container is not changed actually\n            this.container.overlayElement.appendChild(this.elementRef.nativeElement);\n        }\n\n        // Register modal when afterOpen/afterClose is stable\n        this.modalControl.registerModal(this);\n    }\n\n    // [NOTE] NOT available when using by service!\n    // Because ngOnChanges never be called when using by service,\n    // here we can't support \"mcContent\"(Component) etc. as inputs that initialized dynamically.\n    // BUT: User also can change \"mcContent\" dynamically to trigger UI changes\n    // (provided you don't use \bComponent that needs initializations)\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.mcVisible) {\n            // Do not trigger animation while initializing\n            this.handleVisibleStateChange(this.mcVisible, !changes.mcVisible.firstChange);\n        }\n    }\n\n    ngAfterViewInit() {\n        // If using Component, it is the time to attach View while bodyContainer is ready\n        if (this.contentComponentRef) {\n            this.bodyContainer.insert(this.contentComponentRef.hostView);\n        }\n\n        if (this.autoFocusButtonOk) {\n            (this.autoFocusButtonOk.nativeElement as HTMLButtonElement).focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.container instanceof OverlayRef) {\n            this.container.dispose();\n        }\n    }\n\n    open() {\n        this.changeVisibleFromInside(true);\n    }\n\n    close(result?: R) {\n        this.changeVisibleFromInside(false, result);\n    }\n\n    // Destroy equals Close\n    destroy(result?: R) {\n        this.close(result);\n    }\n\n    triggerOk() {\n        this.onClickOkCancel('ok');\n    }\n\n    triggerCancel() {\n        this.onClickOkCancel('cancel');\n    }\n\n    getInstance(): McModalComponent {\n        return this;\n    }\n\n    getContentComponentRef(): ComponentRef<T> {\n        return this.contentComponentRef;\n    }\n\n    getContentComponent(): T {\n        return this.contentComponentRef && this.contentComponentRef.instance;\n    }\n\n    getElement(): HTMLElement {\n        return this.elementRef && this.elementRef.nativeElement;\n    }\n\n    onClickMask($event: MouseEvent) {\n        if (\n            this.mcMask &&\n            this.mcMaskClosable &&\n            ($event.target as HTMLElement).classList.contains('mc-modal-wrap') &&\n            this.mcVisible\n        ) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // tslint:disable-next-line\n    isModalType(type: ModalType): boolean {\n        return this.mcModalType === type;\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        if (event.keyCode === ESCAPE && this.container && (this.container instanceof OverlayRef)) {\n\n            this.close();\n            event.preventDefault();\n        }\n    }\n\n    // AoT\n    onClickCloseBtn() {\n        if (this.mcVisible) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // AoT\n    // tslint:disable-next-line\n    onClickOkCancel(type: 'ok' | 'cancel') {\n        const trigger = { ok: this.mcOnOk, cancel: this.mcOnCancel }[type];\n        const loadingKey = { ok: 'mcOkLoading', cancel: 'mcCancelLoading' }[type];\n\n        if (trigger instanceof EventEmitter) {\n            trigger.emit(this.getContentComponent());\n        } else if (typeof trigger === 'function') {\n\n            const result = trigger(this.getContentComponent());\n            // Users can return \"false\" to prevent closing by default\n            const caseClose = (doClose: boolean | void | {}) => (doClose !== false) && this.close(doClose as R);\n\n            if (isPromise(result)) {\n                this[loadingKey] = true;\n                const handleThen = (doClose) => {\n                    this[loadingKey] = false;\n                    caseClose(doClose);\n                };\n                (result as Promise<void>).then(handleThen).catch(handleThen);\n            } else {\n                caseClose(result);\n            }\n        }\n    }\n\n    // AoT\n    isNonEmptyString(value: {}): boolean {\n        return typeof value === 'string' && value !== '';\n    }\n\n    // AoT\n    isTemplateRef(value: {}): boolean {\n        return value instanceof TemplateRef;\n    }\n\n    // AoT\n    isComponent(value: {}): boolean {\n        return value instanceof Type;\n    }\n\n    // AoT\n    isModalButtons(value: {}): boolean {\n        return Array.isArray(value) && value.length > 0;\n    }\n\n    // Do rest things when visible state changed\n    private handleVisibleStateChange(visible: boolean, animation: boolean = true, closeResult?: R): Promise<any> {\n        // Hide scrollbar at the first time when shown up\n        if (visible) {\n            this.changeBodyOverflow(1);\n        }\n\n        return Promise\n            .resolve(animation && this.animateTo(visible))\n            // Emit open/close event after animations over\n            .then(() => {\n                if (visible) {\n                    this.mcAfterOpen.emit();\n                } else {\n                    this.mcAfterClose.emit(closeResult);\n                    // Show/hide scrollbar when animation is over\n                    this.changeBodyOverflow();\n                }\n            });\n    }\n\n    // Lookup a button's property, if the prop is a function, call & then return the result, otherwise, return itself.\n    // AoT\n    // tslint:disable-next-line\n    getButtonCallableProp(options: IModalButtonOptions<T>, prop: string): {} {\n        const value = options[prop];\n        const args: any[] = [];\n        if (this.contentComponentRef) {\n            args.push(this.contentComponentRef.instance);\n        }\n\n        return typeof value === 'function' ? value.apply(options, args) : value;\n    }\n\n    // On mcFooter's modal button click\n    // AoT\n    // tslint:disable-next-line\n    onButtonClick(button: IModalButtonOptions<T>) {\n        // Call onClick directly\n        const result = this.getButtonCallableProp(button, 'onClick');\n        if (isPromise(result)) {\n            button.loading = true;\n            (result as Promise<{}>).then(() => button.loading = false).catch(() => button.loading = false);\n        }\n    }\n\n    // Change mcVisible from inside\n    private changeVisibleFromInside(visible: boolean, closeResult?: R): Promise<void> {\n        if (this.mcVisible !== visible) {\n            // Change mcVisible value immediately\n            this.mcVisible = visible;\n            this.mcVisibleChange.emit(visible);\n\n            return this.handleVisibleStateChange(visible, true, closeResult);\n        }\n\n        return Promise.resolve();\n    }\n\n    private changeAnimationState(state: AnimationState) {\n        this.animationState = state;\n        if (state) {\n            this.maskAnimationClassMap = {\n                [`fade-${state}`]: true,\n                [`fade-${state}-active`]: true\n            };\n            this.modalAnimationClassMap = {\n                [`zoom-${state}`]: true,\n                [`zoom-${state}-active`]: true\n            };\n        } else {\n            // @ts-ignore\n            this.maskAnimationClassMap = this.modalAnimationClassMap = null;\n        }\n\n        if (this.contentComponentRef) {\n            this.contentComponentRef.changeDetectorRef.markForCheck();\n        } else {\n            this.changeDetector.markForCheck();\n        }\n    }\n\n    private animateTo(isVisible: boolean): Promise<any> {\n        // Figure out the lastest click position when shows up\n        if (isVisible) {\n            // [NOTE] Using timeout due to the document.click event is fired later than visible change,\n            // so if not postponed to next event-loop, we can't get the lastest click position\n            window.setTimeout(() => this.updateTransformOrigin());\n        }\n\n        this.changeAnimationState(isVisible ? 'enter' : 'leave');\n\n        // Return when animation is over\n        return new Promise((resolve) => window.setTimeout(() => {\n            this.changeAnimationState(null);\n            resolve();\n        }, MODAL_ANIMATE_DURATION));\n    }\n\n    private formatModalButtons(buttons: IModalButtonOptions<T>[]): IModalButtonOptions<T>[] {\n        return buttons.map((button) => {\n\n            return {\n                ...{\n                    type: 'default',\n                    size: 'default',\n                    autoLoading: true,\n                    show: true,\n                    loading: false,\n                    disabled: false\n                },\n                ...button\n            };\n        });\n    }\n\n    /**\n     * Create a component dynamically but not attach to any View\n     * (this action will be executed when bodyContainer is ready)\n     * @param component Component class\n     */\n    private createDynamicComponent(component: Type<T>) {\n        const factory = this.cfr.resolveComponentFactory(component);\n        const childInjector = Injector.create({\n            providers: [{provide: McModalRef, useValue: this}],\n            parent: this.viewContainer.parentInjector\n        });\n\n        this.contentComponentRef = factory.create(childInjector);\n\n        if (this.mcComponentParams) {\n            Object.assign(this.contentComponentRef.instance, this.mcComponentParams);\n        }\n\n        // Do the first change detection immediately\n        // (or we do detection at ngAfterViewInit, multi-changes error will be thrown)\n        this.contentComponentRef.changeDetectorRef.detectChanges();\n\n\n    }\n\n    // Update transform-origin to the last click position on document\n    private updateTransformOrigin() {\n        const modalElement = this.modalContainer.nativeElement as HTMLElement;\n        const lastPosition = ModalUtil.getLastClickPosition();\n\n        if (lastPosition) {\n            // tslint:disable-next-line\n            this.transformOrigin = `${lastPosition.x - modalElement.offsetLeft}px ${lastPosition.y - modalElement.offsetTop}px 0px`;\n        }\n    }\n\n    /**\n     * Take care of the body's overflow to decide the existense of scrollbar\n     * @param plusNum The number that the openModals.length will increase soon\n     */\n    private changeBodyOverflow(plusNum: number = 0) {\n        const openModals = this.modalControl.openModals;\n\n        if (openModals.length + plusNum > 0) {\n            // tslint:disable-next-line\n            this.renderer.setStyle(this.document.body, 'padding-right', `${this.mcMeasureScrollbarService.scrollBarWidth}px`);\n            this.renderer.setStyle(this.document.body, 'overflow', 'hidden');\n        } else {\n            this.renderer.removeStyle(this.document.body, 'padding-right');\n            this.renderer.removeStyle(this.document.body, 'overflow');\n        }\n    }\n}\n\n////////////\n\nfunction isPromise(obj: {} | void): boolean {\n    // tslint:disable-next-line\n    return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof (obj as Promise<{}>).then === 'function' && typeof (obj as Promise<{}>).catch === 'function';\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({\n    name: 'toCssUnit'\n})\nexport class CssUnitPipe implements PipeTransform {\n    transform(value: number | string, defaultUnit: string = 'px'): string {\n        const formatted = +value;\n\n        return isNaN(formatted) ? `${value}` : `${formatted}${defaultUnit}`;\n    }\n}\n","import { ComponentRef, Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\nimport { McModalComponent } from './modal.component';\nimport { ConfirmType, IModalOptions, IModalOptionsForService } from './modal.type';\n\n\n// A builder used for managing service creating modals\nexport class ModalBuilderForService {\n\n    // Modal ComponentRef, \"null\" means it has been destroyed\n    private modalRef: ComponentRef<McModalComponent> | null;\n    private overlayRef: OverlayRef;\n\n    constructor(private overlay: Overlay, options: IModalOptionsForService = {}) {\n        this.createModal();\n\n        if (!('mcGetContainer' in options)) {\n            options.mcGetContainer = undefined;\n        }\n\n        this.changeProps(options);\n        this.modalRef!.instance.open();\n        this.modalRef!.instance.mcAfterClose.subscribe(() => this.destroyModal());\n\n        this.overlayRef.keydownEvents()\n            // @ts-ignore\n            .pipe(filter((event: KeyboardEvent) => {\n                return event.keyCode === ESCAPE && options.mcCloseByESC;\n            }))\n            .subscribe(() => this.modalRef!.instance.close());\n    }\n\n    getInstance(): McModalComponent | null {\n        return this.modalRef && this.modalRef.instance;\n    }\n\n    destroyModal(): void {\n        if (this.modalRef) {\n            this.overlayRef.dispose();\n            this.modalRef = null;\n        }\n    }\n\n    private changeProps(options: IModalOptions): void {\n        if (this.modalRef) {\n            // here not limit user's inputs at runtime\n            Object.assign(this.modalRef.instance, options);\n        }\n    }\n\n    // Create component to ApplicationRef\n    private createModal(): void {\n        this.overlayRef = this.overlay.create();\n        this.modalRef = this.overlayRef.attach(new ComponentPortal(McModalComponent));\n    }\n}\n\n@Injectable()\nexport class McModalService {\n    // Track of the current close modals (we assume invisible is close this time)\n    get openModals(): McModalRef[] {\n        return this.modalControl.openModals;\n    }\n\n    get afterAllClose(): Observable<void> {\n        return this.modalControl.afterAllClose.asObservable();\n    }\n\n    constructor(\n        private overlay: Overlay,\n        private modalControl: McModalControlService) {\n    }\n\n    // Closes all of the currently-open dialogs\n    closeAll(): void {\n        this.modalControl.closeAll();\n    }\n\n    create<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n\n        if (typeof options.mcOnCancel !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnCancel = () => {};\n        }\n\n        if (!('mcCloseByESC' in options)) {\n            options.mcCloseByESC = true;\n        }\n\n\n        if (!('mcWidth' in options)) {\n            // tslint:disable-next-line\n            options.mcWidth = 480;\n        }\n\n        return new ModalBuilderForService(this.overlay, options).getInstance()!;\n    }\n\n    confirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType = 'confirm'): McModalRef<T> {\n        if ('mcFooter' in options) {\n            console.warn(`The Confirm-Modal doesn't support \"mcFooter\", this property will be ignored.`);\n        }\n\n        // NOTE: only support function currently by calling confirm()\n        if (typeof options.mcOnOk !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnOk = () => {};\n        }\n\n        options.mcModalType = 'confirm';\n        options.mcClassName = `mc-confirm mc-confirm-${confirmType} ${options.mcClassName || ''}`;\n        options.mcMaskClosable = false;\n\n        return this.create(options);\n    }\n\n    success<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'success');\n    }\n\n    delete<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'warn');\n    }\n\n    private simpleConfirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType): McModalRef<T> {\n        // Remove the Cancel button if the user not specify a Cancel button\n        if (!('mcCancelText' in options)) {\n            // @ts-ignore\n            options.mcCancelText = null;\n        }\n\n        return this.confirm(options, confirmType);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { CssUnitPipe } from './css-unit.pipe';\nimport { McModalControlService } from './modal-control.service';\nimport { McModalComponent } from './modal.component';\nimport { McModalService } from './modal.service';\n\n\n@NgModule({\n    imports: [ CommonModule, OverlayModule, McButtonModule, McIconModule ],\n    exports: [ McModalComponent ],\n    declarations: [ McModalComponent, CssUnitPipe ],\n    entryComponents: [ McModalComponent ],\n    providers: [ McModalControlService, McModalService ]\n})\nexport class McModalModule { }\n","import { fromEvent, Observable, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport {\n    AfterViewInit,\n    Component, Directive,\n    ElementRef,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    ViewEncapsulation,\n    ContentChild,\n    TemplateRef,\n    ChangeDetectorRef,\n    ChangeDetectionStrategy,\n    ViewChild\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Platform } from '@ptsecurity/cdk/platform';\nimport { CanDisable, CanDisableCtor, mixinDisabled } from '@ptsecurity/mosaic/core';\n\n\nconst COLLAPSED_CLASS: string = 'mc-navbar-collapsed-title';\nconst MC_ICON = 'mc-icon';\nconst MC_NAVBAR = 'mc-navbar';\nconst MC_NAVBAR_CONTAINER = 'mc-navbar-container';\nconst MC_NAVBAR_ITEM = 'mc-navbar-item';\nconst MC_NAVBAR_BRAND = 'mc-navbar-brand';\nconst MC_NAVBAR_TITLE = 'mc-navbar-title';\nconst MC_NAVBAR_LOGO = 'mc-navbar-logo';\n\nexport type McNavbarContainerPositionType = 'left' | 'right';\n\nexport interface IMcNavbarDropdownItem {\n    link?: string;\n    text: string;\n}\n\n@Directive({\n    selector: MC_NAVBAR_LOGO,\n    host: {\n        class: MC_NAVBAR_LOGO\n    }\n})\nexport class McNavbarLogo {}\n\n@Directive({\n    selector: MC_NAVBAR_BRAND,\n    host: {\n        class: MC_NAVBAR_BRAND\n    }\n})\nexport class McNavbarBrand {}\n\n@Directive({\n    selector: MC_NAVBAR_TITLE,\n    host: {\n        class: MC_NAVBAR_TITLE\n    }\n})\nexport class McNavbarTitle {}\n\nexport class McNavbarItemBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McNavbarMixinBase: CanDisableCtor & typeof McNavbarItemBase = mixinDisabled(McNavbarItemBase);\n\n@Component({\n    selector: MC_NAVBAR_ITEM,\n    template: `\n        <a\n            [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\n            (click)=\"handleClickByItem()\"\n            (keydown)=\"handleKeydown($event)\"\n            class=\"mc-navbar-item\"\n        >\n            <ng-content></ng-content>\n            <i *ngIf=\"hasDropdownContent\" mc-icon=\"mc-angle-down-M_16\"></i>\n        </a>\n        <ul\n            #dropdownContent\n            *ngIf=\"hasDropdownContent\"\n            [ngClass]=\"{ 'is-collapsed': isCollapsed }\"\n            class=\"mc-navbar-dropdown\"\n        >\n            <li\n                *ngFor=\"let item of dropdownItems\"\n                (click)=\"handleClickByDropdownItem()\"\n                class=\"mc-navbar-dropdown-item\"\n            >\n                <ng-container *ngIf=\"dropdownItemTmpl\">\n                    <ng-container *ngTemplateOutlet=\"dropdownItemTmpl; context: { $implicit: item }\"></ng-container>\n                </ng-container>\n                <a\n                    *ngIf=\"!dropdownItemTmpl\"\n                    [attr.href]=\"item.link\"\n                    [ngClass]=\"{ 'is-active': isActiveDropdownLink(item.link) }\"\n                    class=\"mc-navbar-dropdown-link\"\n                >{{ item.text }}</a>\n            </li>\n        </ul>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': '-1'\n    }\n})\nexport class McNavbarItem extends _McNavbarMixinBase implements OnInit, AfterViewInit, OnDestroy, CanDisable {\n\n    @Input()\n    tabIndex: number = 0;\n\n    @Input()\n    dropdownItems: IMcNavbarDropdownItem[] = [];\n\n    @Input()\n    set collapsedTitle(value: string) {\n        this.elementRef.nativeElement.setAttribute('computedTitle', encodeURI(value));\n    }\n\n    @ContentChild('dropdownItemTmpl', { read: TemplateRef })\n    dropdownItemTmpl: TemplateRef<IMcNavbarDropdownItem>;\n\n    @ViewChild('dropdownContent', { read: ElementRef })\n    dropdownContent: ElementRef;\n\n    get hasDropdownContent() {\n        return this.dropdownItems.length > 0;\n    }\n\n    isCollapsed: boolean = true;\n\n    private _subscription: Subscription = new Subscription();\n    private _focusMonitor$: Observable<FocusOrigin>;\n\n    private get _dropdownElements(): HTMLElement[] {\n        return this.dropdownContent ? this.dropdownContent.nativeElement.querySelectorAll('li > *') : [];\n    }\n\n    constructor(\n        public  elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _platform: Platform,\n        private _cdRef: ChangeDetectorRef\n    ) {\n        super(elementRef);\n    }\n\n    ngOnInit() {\n        this.denyClickIfDisabled();\n\n        this._focusMonitor$ = this._focusMonitor.monitor(this.elementRef.nativeElement, true);\n\n        if (this.hasDropdownContent) {\n            this.listenClickOutside();\n        }\n    }\n\n    ngAfterViewInit() {\n        if (!this.hasDropdownContent) {\n            return;\n        }\n\n        this.startListenFocusDropdownItems();\n    }\n\n    ngOnDestroy() {\n        this._subscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n        this.stopListenFocusDropdownItems();\n    }\n\n    isActiveDropdownLink(link: string): boolean {\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n\n        return window.location.href.indexOf(link) >= 0;\n    }\n\n    handleClickByItem() {\n        this.toggleDropdown();\n    }\n\n    handleKeydown($event: KeyboardEvent) {\n        const isNavbarItem = ($event.target as HTMLElement).classList.contains(MC_NAVBAR_ITEM);\n\n        // tslint:disable-next-line\n        if (this.hasDropdownContent && $event.keyCode === SPACE && isNavbarItem) {\n            this.toggleDropdown();\n        }\n    }\n\n    handleClickByDropdownItem() {\n        this.forceCloseDropdown();\n    }\n\n    private listenClickOutside() {\n        this._subscription.add(\n            this._focusMonitor$.subscribe((origin) => {\n                if (origin === null) {\n                    this.forceCloseDropdown();\n                }\n            })\n        );\n    }\n\n    private toggleDropdown() {\n        this.isCollapsed = !this.isCollapsed;\n    }\n\n    private forceCloseDropdown() {\n        this.isCollapsed = true;\n        this._cdRef.detectChanges();\n    }\n\n    private startListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.monitor(el, true);\n        });\n    }\n\n    private stopListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.stopMonitoring(el);\n        });\n    }\n\n    // This method is required due to angular 2 issue https://github.com/angular/angular/issues/11200\n    private denyClickIfDisabled() {\n        const events: Event[] = this.elementRef.nativeElement.eventListeners('click');\n\n        events.forEach((event) => this.elementRef.nativeElement.removeEventListener('click', event));\n\n        this.elementRef.nativeElement.addEventListener('click', (event: MouseEvent) => {\n            if (this.elementRef.nativeElement.hasAttribute('disabled')) {\n                event.stopImmediatePropagation();\n            }\n        }, true);\n\n        events.forEach((event) => this.elementRef.nativeElement.addEventListener('click', event));\n    }\n}\n\n@Directive({\n    selector: MC_NAVBAR_CONTAINER\n})\nexport class McNavbarContainer {\n    @Input()\n    position: McNavbarContainerPositionType = 'left';\n\n    @HostBinding('class')\n    get cssClasses(): string {\n        return this.position === 'left' ? 'mc-navbar-left' : 'mc-navbar-right';\n    }\n}\n\nclass CollapsibleItem {\n    private _collapsed: boolean = false;\n\n    constructor(\n        public element: HTMLElement,\n        public width: number\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        this._collapsed = collapsed;\n\n        this.updateCollapsedClass();\n    }\n\n    private updateCollapsedClass() {\n        if (this._collapsed) {\n            this.element.classList.add(COLLAPSED_CLASS);\n        } else {\n            this.element.classList.remove(COLLAPSED_CLASS);\n        }\n\n    }\n}\n\nclass CachedItemWidth {\n\n    get canCollapse(): boolean {\n        return this.itemsForCollapse.length > 0;\n    }\n\n    private _collapsedItemsWidth: number;\n\n    get collapsedItemsWidth(): number {\n        if (this._collapsedItemsWidth !== undefined) {\n            return this._collapsedItemsWidth;\n        }\n\n        this.calculateAndCacheCollapsedItemsWidth();\n\n        return this._collapsedItemsWidth;\n    }\n\n    constructor(\n        public element: HTMLElement,\n        public width: number,\n        public itemsForCollapse: CollapsibleItem[] = []\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        if (this.itemsForCollapse.length > 0) {\n            this.updateTitle(collapsed);\n        }\n\n        this.itemsForCollapse.forEach((item) => item.processCollapsed(collapsed));\n    }\n\n    private calculateAndCacheCollapsedItemsWidth() {\n        this._collapsedItemsWidth = this.itemsForCollapse\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getTitle(): string {\n        const computedTitle = this.element.getAttribute('computedTitle');\n\n        return computedTitle\n            ? decodeURI(computedTitle)\n            : (this.itemsForCollapse.length > 0 ? this.itemsForCollapse[0].element.innerText : '');\n    }\n\n    private updateTitle(collapsed: boolean) {\n        if (collapsed) {\n            this.element.setAttribute('title', this.getTitle());\n        } else {\n            this.element.removeAttribute('title');\n        }\n    }\n}\n\n\n@Component({\n    selector: MC_NAVBAR,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <nav class=\"mc-navbar\">\n            <ng-content select=\"[${MC_NAVBAR_CONTAINER}],${MC_NAVBAR_CONTAINER}\"></ng-content>\n        </nav>\n    `,\n    styleUrls: ['./navbar.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class McNavbar implements AfterViewInit, OnDestroy {\n\n    private readonly forceRecalculateItemsWidth: boolean = false;\n    private readonly resizeDebounceInterval: number = 100;\n    private readonly firstLevelElement: string = MC_NAVBAR_CONTAINER;\n    private readonly secondLevelElements: string[] = [\n        MC_NAVBAR_ITEM,\n        MC_NAVBAR_BRAND,\n        MC_NAVBAR_TITLE\n    ];\n\n    private _totalItemsWidths: number;\n    private _itemsWidths: CachedItemWidth[];\n\n    private get maxAllowedWidth(): number {\n        return this._elementRef.nativeElement.querySelector('nav').getBoundingClientRect().width;\n    }\n\n    private get itemsWidths(): CachedItemWidth[] {\n        if (this._itemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._itemsWidths;\n        }\n\n        this.calculateAndCacheItemsWidth();\n\n        return this._itemsWidths;\n    }\n\n    private get totalItemsWidth(): number {\n        if (this._totalItemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._totalItemsWidths;\n        }\n\n        this.calculateAndCacheTotalItemsWidth();\n\n        return this._totalItemsWidths;\n    }\n\n    private _resizeSubscription: Subscription;\n\n    constructor(\n        private _elementRef: ElementRef\n    ) {\n        const resizeObserver = fromEvent(window, 'resize')\n            .pipe(debounceTime(this.resizeDebounceInterval));\n\n        this._resizeSubscription = resizeObserver.subscribe(this.updateCollapsed.bind(this));\n    }\n\n    updateCollapsed(): void {\n        let collapseDelta = this.totalItemsWidth - this.maxAllowedWidth;\n\n        for (let i = this.itemsWidths.length - 1; i >= 0; i--) {\n            const item = this.itemsWidths[i];\n\n            if (!item.canCollapse) {\n                continue;\n            }\n\n            item.processCollapsed(collapseDelta > 0);\n            collapseDelta -= item.collapsedItemsWidth;\n        }\n    }\n\n    ngAfterViewInit(): void {\n        // Note: this wait is required for loading and rendering fonts for icons;\n        // unfortunately we cannot control font rendering\n        setTimeout(() => this.updateCollapsed(), 0);\n    }\n\n    ngOnDestroy() {\n        this._resizeSubscription.unsubscribe();\n    }\n\n    private calculateAndCacheTotalItemsWidth() {\n        this._totalItemsWidths = this.itemsWidths\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getOuterElementWidth(element: HTMLElement): number {\n        const baseWidth  = element.getBoundingClientRect().width;\n        const marginRight = parseInt(getComputedStyle(element).getPropertyValue('margin-right'));\n        const marginLeft = parseInt(getComputedStyle(element).getPropertyValue('margin-left'));\n\n        return baseWidth + marginRight + marginLeft;\n    }\n\n    private calculateAndCacheItemsWidth() {\n        const allItemsSelector = this.secondLevelElements\n            .map((e: string) => `${this.firstLevelElement}>${e}`);\n        const allItems: HTMLElement[] = Array.from(this._elementRef.nativeElement.querySelectorAll(allItemsSelector));\n\n        this._itemsWidths = allItems\n            .map((el) => new CachedItemWidth(el, this.getOuterElementWidth(el), this.getItemsForCollapse(el)));\n    }\n\n    private getItemsForCollapse(element: HTMLElement): CollapsibleItem[] {\n        const icon = element.querySelector(`[${MC_ICON}],${MC_NAVBAR_LOGO},[${MC_NAVBAR_LOGO}]`);\n\n        if (!icon) {\n            return [];\n        }\n\n        return Array.from(element.querySelectorAll(MC_NAVBAR_TITLE))\n            .map((el) => new CollapsibleItem(<HTMLElement> el, el.getBoundingClientRect().width));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport {\n    McNavbar,\n    McNavbarContainer,\n    McNavbarItem,\n    McNavbarTitle,\n    McNavbarBrand,\n    McNavbarLogo\n} from './navbar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        McIconModule\n    ],\n    exports: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ],\n    declarations: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ]\n})\nexport class McNavbarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressBarMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressBarBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressBarMixinBase:\n    CanColorCtor &\n    typeof McProgressBarBase =\n        mixinColor(McProgressBarBase);\n\n@Component({\n    selector: 'mc-progress-bar',\n    templateUrl: './progress-bar.component.html',\n    styleUrls: ['./progress-bar.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-bar',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressBar extends _McProgressBarMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-bar-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressBarMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McProgressBar\n} from './progress-bar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressBar\n    ],\n    declarations: [\n        McProgressBar\n    ]\n})\nexport class McProgressBarModule {}\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    Output,\n    TemplateRef,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    OnInit\n} from '@angular/core';\nimport { FocusKeyManager, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE, DOWN_ARROW, UP_ARROW } from '@ptsecurity/cdk/keycodes';\nimport { Subject, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { mcDropdownAnimations } from './dropdown-animations';\nimport { McDropdownContent } from './dropdown-content';\nimport { throwMcDropdownInvalidPositionX, throwMcDropdownInvalidPositionY } from './dropdown-errors';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/** Default `mc-dropdown` options that can be overridden. */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownDefaultOptions {\n    /** The x-axis position of the dropdown. */\n    xPosition: DropdownPositionX;\n\n    /** The y-axis position of the dropdown. */\n    yPosition: DropdownPositionY;\n\n    /** Whether the dropdown should overlap the dropdown trigger. */\n    overlapTrigger: boolean;\n\n    /** Class to be applied to the dropdown's backdrop. */\n    backdropClass: string;\n\n    /** Whether the dropdown has a backdrop. */\n    hasBackdrop?: boolean;\n}\n\n/** Injection token to be used to override the default options for `mc-dropdown`. */\nexport const MC_DROPDOWN_DEFAULT_OPTIONS =\n    new InjectionToken<McDropdownDefaultOptions>('mc-dropdown-default-options', {\n        providedIn: 'root',\n        factory: MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY\n    });\n\n/** @docs-private */\nexport function MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY(): McDropdownDefaultOptions {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop'\n    };\n}\n\n@Component({\n    selector: 'mc-dropdown',\n    templateUrl: 'dropdown.html',\n    styleUrls: ['dropdown.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcDropdown',\n    animations: [\n        mcDropdownAnimations.transformDropdown,\n        mcDropdownAnimations.fadeInItems\n    ],\n    providers: [\n        { provide: MC_DROPDOWN_PANEL, useExisting: McDropdown }\n    ]\n})\nexport class McDropdown implements AfterContentInit, McDropdownPanel<McDropdownItem>, OnInit, OnDestroy {\n\n    /** Position of the dropdown in the X axis. */\n    @Input()\n    get xPosition(): DropdownPositionX { return this._xPosition; }\n    set xPosition(value: DropdownPositionX) {\n        if (value !== 'before' && value !== 'after') {\n            throwMcDropdownInvalidPositionX();\n        }\n\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Position of the dropdown in the Y axis. */\n    @Input()\n    get yPosition(): DropdownPositionY { return this._yPosition; }\n    set yPosition(value: DropdownPositionY) {\n        if (value !== 'above' && value !== 'below') {\n            throwMcDropdownInvalidPositionY();\n        }\n\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Whether the dropdown should overlap its trigger. */\n    @Input()\n    get overlapTrigger(): boolean { return this._overlapTrigger; }\n    set overlapTrigger(value: boolean) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n\n    /** Whether the dropdown has a backdrop. */\n    @Input()\n    get hasBackdrop(): boolean | undefined { return this._hasBackdrop; }\n    set hasBackdrop(value: boolean | undefined) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n\n    /**\n     * This method takes classes set on the host mc-dropdown element and applies them on the\n     * dropdown template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing dropdown from outside the component.\n     * @param classes list of class names\n     */\n    @Input('class')\n    set panelClass(classes: string) {\n        if (classes && classes.length) {\n            this._classList = classes.split(' ').reduce((obj: any, className: string) => {\n                obj[className] = true;\n\n                return obj;\n            }, {});\n\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n\n    /** Config object to be passed into the dropdown's ngClass */\n    _classList: {[key: string]: boolean} = {};\n\n    /** Current state of the panel animation. */\n    _panelAnimationState: 'void' | 'enter' = 'void';\n\n    /** Emits whenever an animation on the dropdown completes. */\n    _animationDone = new Subject<AnimationEvent>();\n\n    /** Whether the dropdown is animating. */\n    _isAnimating: boolean;\n\n    /** Layout direction of the dropdown. */\n    direction: Direction;\n\n    /** Class to be added to the backdrop element. */\n    @Input() backdropClass: string = this._defaultOptions.backdropClass;\n\n    /** @docs-private */\n    @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n\n    /**\n     * List of the items inside of a dropdown.\n     */\n    @ContentChildren(McDropdownItem) items: QueryList<McDropdownItem>;\n\n    /**\n     * Dropdown content that will be rendered lazily.\n     * @docs-private\n     */\n    @ContentChild(McDropdownContent) lazyContent: McDropdownContent;\n\n    /** Event emitted when the dropdown is closed. */\n    @Output() readonly closed: EventEmitter<void | 'click' | 'keydown' | 'tab'> =\n        new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n\n    private _keyManager: FocusKeyManager<McDropdownItem>;\n    private _xPosition: DropdownPositionX = this._defaultOptions.xPosition;\n    private _yPosition: DropdownPositionY = this._defaultOptions.yPosition;\n\n    /** Dropdown items inside the current dropdown. */\n    private _items: McDropdownItem[] = [];\n\n    /** Emits whenever the amount of dropdown items changes. */\n    private _itemChanges = new Subject<McDropdownItem[]>();\n\n    /** Subscription to tab events on the dropdown panel */\n    private _tabSubscription = Subscription.EMPTY;\n    private _overlapTrigger: boolean = this._defaultOptions.overlapTrigger;\n    private _hasBackdrop: boolean | undefined = this._defaultOptions.hasBackdrop;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        private _ngZone: NgZone,\n        @Inject(MC_DROPDOWN_DEFAULT_OPTIONS) private _defaultOptions: McDropdownDefaultOptions) { }\n\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager<McDropdownItem>(this.items).withWrap().withTypeAhead();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n    }\n\n    ngOnDestroy() {\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n\n    /** Handle a keyboard event from the dropdown, delegating to the appropriate action. */\n    _handleKeydown(event: KeyboardEvent) {\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case ESCAPE:\n                this.closed.emit('keydown');\n                break;\n            case UP_ARROW:\n            case DOWN_ARROW:\n                this._keyManager.setFocusOrigin('keyboard');\n                this._keyManager.onKeydown(event);\n                break;\n            default:\n                // todo зачем обрабатывать лишние события ?\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    /**\n     * Focus the first item in the dropdown.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin: FocusOrigin = 'program'): void {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable.asObservable()\n                .pipe(take(1))\n                .subscribe(() => this._keyManager.setFocusOrigin(origin).setFirstItemActive());\n        } else {\n            this._keyManager.setFocusOrigin(origin).setFirstItemActive();\n        }\n    }\n\n    /**\n     * Resets the active item in the dropdown. This is used when the dropdown is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n\n    /**\n     * Registers a dropdown item with the dropdown.\n     * @docs-private\n     */\n    addItem(item: McDropdownItem) {\n        // We register the items through this method, rather than picking them up through\n        // `ContentChildren`, because we need the items to be picked up by their closest\n        // `mc-dropdown` ancestor. If we used `@ContentChildren(McDropdownItem, {descendants: true})`,\n        // all descendant items will bleed into the top-level dropdown in the case where the consumer\n        // has `mc-dropdown` instances nested inside each other.\n        if (this._items.indexOf(item) === -1) {\n            this._items.push(item);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Removes an item from the dropdown.\n     * @docs-private\n     */\n    removeItem(item: McDropdownItem) {\n        const index = this._items.indexOf(item);\n\n        if (this._items.indexOf(item) > -1) {\n            this._items.splice(index, 1);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Adds classes to the dropdown panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the dropdown along the x axis.\n     * @param posY Position of the dropdown along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX: DropdownPositionX = this.xPosition, posY: DropdownPositionY = this.yPosition) {\n        const classes = this._classList;\n        classes['mc-dropdown-before'] = posX === 'before';\n        classes['mc-dropdown-after'] = posX === 'after';\n        classes['mc-dropdown-above'] = posY === 'above';\n        classes['mc-dropdown-below'] = posY === 'below';\n    }\n\n    /** Starts the enter animation. */\n    _startAnimation() {\n        this._panelAnimationState = 'enter';\n    }\n\n    /** Resets the panel animation to its initial state. */\n    _resetAnimation() {\n        this._panelAnimationState = 'void';\n    }\n\n    /** Callback that is invoked when the panel animation completes. */\n    _onAnimationDone(event: AnimationEvent) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n\n        // Scroll the content element to the top once the animation is done. This is necessary, because\n        // we move focus to the first item while it's still being animated, which can throw the browser\n        // off when it determines the scroll position. Alternatively we can move focus when the\n        // animation is done, however moving focus asynchronously will interrupt screen readers\n        // which are in the process of reading out the dropdown already. We take the `element` from\n        // the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n}\n","import {\n    AfterContentInit,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy, OnInit,\n    Optional,\n    Output,\n    ViewContainerRef\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction, Directionality } from '@ptsecurity/cdk/bidi';\nimport {\n    FlexibleConnectedPositionStrategy,\n    HorizontalConnectionPos,\n    Overlay,\n    OverlayConfig,\n    OverlayRef,\n    VerticalConnectionPos,\n    IScrollStrategy\n} from '@ptsecurity/cdk/overlay';\nimport { TemplatePortal } from '@ptsecurity/cdk/portal';\nimport { merge, Subscription } from 'rxjs';\nimport { filter, take, takeUntil } from 'rxjs/operators';\n\nimport { throwMcDropdownMissingError } from './dropdown-errors';\nimport { McDropdownPanel } from './dropdown-panel';\nimport { McDropdown } from './dropdown.component';\n\n\n/** Injection token that determines the scroll handling while the dropdown is open. */\nexport const MC_DROPDOWN_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-dropdown-scroll-strategy');\n\n/** @docs-private */\nexport function MC_DROPDOWN_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_DROPDOWN_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_DROPDOWN_SCROLL_STRATEGY_FACTORY\n};\n\n/**\n * This directive is intended to be used in conjunction with an mc-dropdown tag.  It is\n * responsible for toggling the display of the provided dropdown instance.\n */\n@Directive({\n    selector: `[mcDropdownTriggerFor]`,\n    host: {\n        '(touchstart)': '_openedBy = \"touch\"',\n        '(click)': 'toggle()'\n    },\n    exportAs: 'mcDropdownTrigger'\n})\nexport class McDropdownTrigger implements OnInit, AfterContentInit, OnDestroy {\n\n    /** Whether the dropdown is open. */\n    get opened(): boolean {\n        return this._opened;\n    }\n\n    /** The text direction of the containing app. */\n    get dir(): Direction {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    // Tracking input type is necessary so it's possible to only auto-focus\n    // the first item of the list when the dropdown is opened via the keyboard\n    _openedBy: 'mouse' | 'touch' | null = null;\n\n    /** References the dropdown instance that the trigger is associated with. */\n    @Input('mcDropdownTriggerFor') dropdown: McDropdownPanel;\n\n    /** Data to be passed along to any lazily-rendered content. */\n    @Input('mcDropdownTriggerData') data: any;\n\n    /** Event emitted when the associated dropdown is opened. */\n    @Output() readonly dropdownOpened: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the associated dropdown is closed. */\n    @Output() readonly dropdownClosed: EventEmitter<void> = new EventEmitter<void>();\n\n    private _portal: TemplatePortal;\n    private _overlayRef: OverlayRef | null = null;\n    private _opened: boolean = false;\n    private _closeSubscription = Subscription.EMPTY;\n    private _hoverSubscription = Subscription.EMPTY;\n\n    constructor(private _overlay: Overlay,\n                private _element: ElementRef<HTMLElement>,\n                private _viewContainerRef: ViewContainerRef,\n                @Inject(MC_DROPDOWN_SCROLL_STRATEGY) private _scrollStrategy: any,\n                @Optional() private _dir: Directionality,\n                private _focusMonitor?: FocusMonitor) {}\n\n    ngOnInit(): void {\n        this.dropdown.closed = this.dropdown.closed || new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n    }\n\n    ngAfterContentInit() {\n        this._check();\n\n        this.dropdown.closed.asObservable().subscribe(() => {\n            this._destroy();\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n\n        this._cleanUpSubscriptions();\n    }\n\n    /** Toggles the dropdown between the open and closed states. */\n    toggle(): void {\n        // tslint:disable-next-line:no-void-expression\n        return this._opened ? this.close() : this.open();\n    }\n\n    /** Opens the dropdown. */\n    open(): void {\n        if (this._opened) {\n            return;\n        }\n\n        this._check();\n\n        const overlayRef = this._createOverlay();\n        this._setPosition(overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy);\n        overlayRef.attach(this._portal);\n\n        if (this.dropdown.lazyContent) {\n            this.dropdown.lazyContent.attach(this.data);\n        }\n\n        this._closeSubscription = this._closingActions().subscribe(() => this.close());\n        this._init();\n\n        if (this.dropdown instanceof McDropdown) {\n            this.dropdown._startAnimation();\n        }\n    }\n\n    /** Closes the dropdown. */\n    close(): void {\n        this.dropdown.closed.emit();\n    }\n\n    /**\n     * Focuses the dropdown trigger.\n     * @param origin Source of the dropdown trigger's focus.\n     */\n    focus(origin: FocusOrigin = 'program') {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._element.nativeElement, origin);\n        } else {\n            this._element.nativeElement.focus();\n        }\n    }\n\n    /** Closes the dropdown and does the necessary cleanup. */\n    private _destroy() {\n        if (!this._overlayRef || !this.opened) {\n            return;\n        }\n\n        const dropdown = this.dropdown;\n\n        this._closeSubscription.unsubscribe();\n        this._overlayRef.detach();\n\n        if (dropdown instanceof McDropdown) {\n            dropdown._resetAnimation();\n\n            if (dropdown.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                dropdown._animationDone\n                    .pipe(\n                        filter((event) => event.toState === 'void'),\n                        take(1),\n                        // Interrupt if the content got re-attached.\n                        takeUntil(dropdown.lazyContent._attached)\n                    )\n                    .subscribe(() => dropdown.lazyContent.detach(), undefined, () => {\n                        // No matter whether the content got re-attached, reset the dropdown.\n                        this._reset();\n                    });\n            } else {\n                this._reset();\n            }\n        } else {\n            this._reset();\n\n            if (dropdown.lazyContent) {\n                dropdown.lazyContent.detach();\n            }\n        }\n    }\n\n    /**\n     * This method sets the dropdown state to open and focuses the first item if\n     * the dropdown was opened via the keyboard.\n     */\n    private _init(): void {\n        this.dropdown.direction = this.dir;\n        this._setIsOpened(true);\n        this.dropdown.focusFirstItem(this._openedBy || 'program');\n    }\n\n    /**\n     * This method resets the dropdown when it's closed, most importantly restoring\n     * focus to the dropdown trigger if the dropdown was opened via the keyboard.\n     */\n    private _reset(): void {\n        this._setIsOpened(false);\n\n        // We should reset focus if the user is navigating using a keyboard or\n        // if we have a top-level trigger which might cause focus to be lost\n        // when clicking on the backdrop.\n        if (!this._openedBy) {\n            // Note that the focus style will show up both for `program` and\n            // `keyboard` so we don't have to specify which one it is.\n            this.focus();\n        } else {\n            this.focus(this._openedBy);\n        }\n\n        this._openedBy = null;\n    }\n\n    // set state rather than toggle to support triggers sharing a dropdown\n    private _setIsOpened(isOpen: boolean): void {\n        this._opened = isOpen;\n        // tslint:disable-next-line:no-void-expression\n        this._opened ? this.dropdownOpened.emit() : this.dropdownClosed.emit();\n    }\n\n    /**\n     * This method checks that a valid instance of Dropdown has been passed into\n     * mcDropdownTriggerFor. If not, an exception is thrown.\n     */\n    private _check() {\n        if (!this.dropdown) {\n            throwMcDropdownMissingError();\n        }\n    }\n\n    /**\n     * This method creates the overlay from the provided dropdown's template and saves its\n     * OverlayRef so that it can be attached to the DOM when open is called.\n     */\n    private _createOverlay(): OverlayRef {\n        if (!this._overlayRef) {\n            this._portal = new TemplatePortal(this.dropdown.templateRef, this._viewContainerRef);\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions(config.positionStrategy as FlexibleConnectedPositionStrategy);\n            this._overlayRef = this._overlay.create(config);\n\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `McDropdownPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n\n        return this._overlayRef;\n    }\n\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    private _getOverlayConfig(): OverlayConfig {\n        return new OverlayConfig({\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withTransformOriginOn('.mc-dropdown__panel'),\n            hasBackdrop: this.dropdown.hasBackdrop === null || this.dropdown.hasBackdrop === undefined\n                ? true\n                : this.dropdown.hasBackdrop,\n            backdropClass: this.dropdown.backdropClass || 'cdk-overlay-transparent-backdrop',\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir\n        });\n    }\n\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the dropdown based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    private _subscribeToPositions(position: FlexibleConnectedPositionStrategy): void {\n        if (this.dropdown.setPositionClasses) {\n            // todo possibly we should not recompute positions there\n            /*position.positionChanges.subscribe((change) => {\n                const posX: DropdownPositionX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                const posY: DropdownPositionY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n\n                this.dropdown.setPositionClasses!(posX, posY);\n            });*/\n            position.positionChanges.subscribe(() => {\n                this.dropdown.setPositionClasses!(this.dropdown.xPosition, this.dropdown.yPosition);\n            });\n        }\n    }\n\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    private _setPosition(positionStrategy: FlexibleConnectedPositionStrategy) {\n        const [originX, originFallbackX]: HorizontalConnectionPos[] =\n            this.dropdown.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n\n        const [overlayY, overlayFallbackY]: VerticalConnectionPos[] =\n            this.dropdown.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        const [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        const offsetY = 0;\n\n        if (!this.dropdown.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n\n        positionStrategy.withPositions([\n            {originX, originY, overlayX, overlayY, offsetY},\n            {originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY},\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            }\n        ]);\n    }\n\n    /** Cleans up the active subscriptions. */\n    private _cleanUpSubscriptions(): void {\n        this._closeSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n\n    /** Returns a stream that emits whenever an action that should close the dropdown occurs. */\n    private _closingActions() {\n        const backdrop = this._overlayRef!.backdropClick();\n        const detachments = this._overlayRef!.detachments();\n\n        return merge(backdrop, detachments);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER, McDropdownTrigger } from './dropdown-trigger';\nimport { McDropdown } from './dropdown.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule\n    ],\n    exports: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    declarations: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    providers: [MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER]\n})\nexport class McDropdownModule {}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-content',\n    preserveWhitespaces: false,\n    templateUrl: './content.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-content]': 'true'\n    }\n})\nexport class McContentComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-footer',\n    preserveWhitespaces: false,\n    templateUrl: './footer.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-footer]': 'true'\n    }\n})\nexport class McFooterComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector : 'mc-header',\n    preserveWhitespaces: false,\n    templateUrl: './header.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-header]': 'true'\n    }\n})\nexport class McHeaderComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-layout',\n    preserveWhitespaces: false,\n    styleUrls: ['layout.css'],\n    templateUrl: './layout.component.html',\n    host: {\n        '[class.mc-layout]': 'true',\n        '[class.mc-layout-has-sidebar]': 'hasSidebar'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McLayoutComponent {\n    hasSidebar = false;\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Host,\n    Input,\n    OnInit,\n    Optional,\n    Output\n} from '@angular/core';\nimport { toBoolean } from '@ptsecurity/mosaic/core';\n\nimport { McLayoutComponent } from './layout.component';\n\n\n@Component({\n    selector: 'mc-sidebar',\n    preserveWhitespaces: false,\n    templateUrl: './sidebar.component.html',\n    host: {\n        '[class.mc-layout-sidebar]': 'true',\n        '[class.mc-layout-sidebar-collapsed]': 'mcCollapsed',\n        '[style.flex]': 'mcFlex',\n        '[style.max-width.px]': 'mcWidth',\n        '[style.min-width.px]': 'mcWidth',\n        '[style.width.px]': 'mcWidth'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSidebarComponent implements OnInit {\n\n    @Input() _mcWidth = 200;\n    @Input() mcCollapsedWidth = 80;\n\n    @Input()\n    set mcCollapsible(value: boolean) {\n        this.collapsible = toBoolean(value);\n    }\n\n    get mcCollapsible(): boolean {\n        return this.collapsible;\n    }\n\n    @Input()\n    set mcCollapsed(value: boolean) {\n        this.collapsed = toBoolean(value);\n    }\n\n    get mcCollapsed(): boolean {\n        return this.collapsed;\n    }\n\n    // tslint:disable-next-line\n    @Output() mcCollapsedChange = new EventEmitter();\n\n    private collapsed = false;\n    private collapsible = false;\n\n    get mcFlex(): string {\n        if (this.mcCollapsed) {\n            return `0 0 ${this.mcCollapsedWidth}px`;\n        } else {\n            return `0 0 ${this.mcWidth}px`;\n        }\n    }\n\n    get mcWidth(): number {\n        if (this.mcCollapsed) {\n            return this.mcCollapsedWidth;\n        } else {\n            return this._mcWidth;\n        }\n    }\n\n    constructor(\n        @Optional() @Host() private mcLayoutComponent: McLayoutComponent) {\n    }\n\n    ngOnInit() {\n        if (this.mcLayoutComponent) {\n            this.mcLayoutComponent.hasSidebar = true;\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McContentComponent } from './content.component';\nimport { McFooterComponent } from './footer.component';\nimport { McHeaderComponent } from './header.component';\nimport { McLayoutComponent } from './layout.component';\nimport { McSidebarComponent } from './sidebar.component';\n\n\n@NgModule({\n    imports: [ CommonModule ],\n    exports: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ],\n    declarations: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ]\n})\nexport class McLayoutModule {\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n    QueryList,\n    ViewEncapsulation,\n    ChangeDetectorRef,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\n\nimport { FocusKeyManager, IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { END, ENTER, HOME, PAGE_DOWN, PAGE_UP, SPACE } from '@ptsecurity/cdk/keycodes';\n\nimport {\n    McLine,\n    McLineSetter,\n    CanDisable,\n    mixinDisabled,\n    toBoolean, CanDisableCtor\n} from '@ptsecurity/mosaic/core';\n\n\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\n@Component({\n    exportAs: 'mcListOption',\n    selector: 'mc-list-option',\n    host: {\n        tabindex: '-1',\n\n        class: 'mc-list-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n        '(click)': '_handleClick()'\n    },\n    templateUrl: 'list-option.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListOption implements AfterContentInit, OnDestroy, OnInit, IFocusableOption {\n    _hasFocus: boolean = false;\n\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    @ViewChild('text') _text: ElementRef;\n\n    // Whether the label should appear before or after the checkbox. Defaults to 'after'\n    @Input() checkboxPosition: 'before' | 'after' = 'after';\n\n    @Input() value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled || (this.listSelection && this.listSelection.disabled);\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.listSelection.selectedOptions && this.listSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            this.listSelection._reportValueChange();\n        }\n    }\n\n    private _lineSetter: McLineSetter;\n    private _selected = false;\n    private _disabled = false;\n\n    constructor(\n        private _element: ElementRef,\n        private _changeDetector: ChangeDetectorRef,\n        @Inject(forwardRef(() => McListSelection))\n        public listSelection: McListSelection\n    ) {}\n\n    ngOnInit() {\n        if (this._selected) {\n            // List options that are selected at initialization can't be reported properly to the form\n            // control. This is because it takes some time until the selection-list knows about all\n            // available options. Also it can happen that the ControlValueAccessor has an initial value\n            // that should be used instead. Deferring the value change report to the next tick ensures\n            // that the form control value is not being overwritten.\n            const wasSelected = this._selected;\n\n            Promise.resolve().then(() => {\n                if (this._selected || wasSelected) {\n                    this.selected = true;\n                    this._changeDetector.markForCheck();\n                }\n            });\n        }\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    ngOnDestroy(): void {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => this.selected = false);\n        }\n\n        this.listSelection._removeOptionFromList(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    focus(): void {\n        this._element.nativeElement.focus();\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    getLabel() {\n        return this._text ? this._text.nativeElement.textContent : '';\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.listSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.listSelection.selectedOptions.select(this);\n        } else {\n            this.listSelection.selectedOptions.deselect(this);\n        }\n\n        this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleClick() {\n        if (this.disabled) { return; }\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    _handleFocus() {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur() {\n        this._hasFocus = false;\n\n        this.listSelection._onTouched();\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n\n\nexport const MC_SELECTION_LIST_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McListSelection),\n    multi: true\n};\n\n// Change event that is being fired whenever the selected state of an option changes. */\nexport class McListSelectionChange {\n    constructor(\n        // Reference to the selection list that emitted the event.\n        public source: McListSelection,\n        // Reference to the option that has been changed.\n        public option: McListOption\n    ) {}\n}\n\n\nexport class McListSelectionBase {}\n\nexport const _McListSelectionMixinBase: CanDisableCtor & typeof McListSelectionBase\n    = mixinDisabled(McListSelectionBase);\n\n@Component({\n    exportAs: 'mcListSelection',\n    selector: 'mc-list-selection',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-list-selection',\n        '[tabIndex]': 'tabIndex',\n        '(focus)': 'focus()',\n        '(blur)': '_onTouched()',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    providers: [MC_SELECTION_LIST_VALUE_ACCESSOR],\n    preserveWhitespaces: false\n})\nexport class McListSelection extends _McListSelectionMixinBase implements\n    IFocusableOption, CanDisable, AfterContentInit, ControlValueAccessor {\n\n    _keyManager: FocusKeyManager<McListOption>;\n\n    // The option components contained within this selection-list.\n    @ContentChildren(McListOption) options: QueryList<McListOption>;\n\n    tabIndex: number;\n\n    autoSelect: boolean;\n    noUnselect: boolean;\n    multiple: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input() horizontal: boolean = false;\n\n    // Emits a change event whenever the selected state of an option changes.\n    @Output() readonly selectionChange: EventEmitter<McListSelectionChange> = new EventEmitter<McListSelectionChange>();\n\n    selectedOptions: SelectionModel<McListOption>;\n\n    // Used for storing the values that were assigned before the options were initialized.\n    private _tempValues: string[] | null;\n\n    private _modelChanges = Subscription.EMPTY;\n\n    constructor(\n        private _element: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string,\n        @Attribute('multiple') multiple: string\n    ) {\n        super();\n\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.selectedOptions = new SelectionModel<McListOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.horizontal = toBoolean(this.horizontal);\n\n        this._keyManager = new FocusKeyManager<McListOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(!this.horizontal)\n            .withHorizontalOrientation(this.horizontal ? 'ltr' : null);\n\n        if (this._tempValues) {\n            this._setOptionsFromValues(this._tempValues);\n            this._tempValues = null;\n        }\n\n        // Sync external changes to the model back to the options.\n        this._modelChanges = this.selectedOptions.onChange!.subscribe((event) => {\n            for (const item of event.added) {\n                item.selected = true;\n            }\n\n            for (const item of event.removed) {\n                item.selected = false;\n            }\n        });\n\n        this.updateScrollSize();\n    }\n\n    ngOnDestroy() {\n        this._modelChanges.unsubscribe();\n    }\n\n    focus() {\n        this._element.nativeElement.focus();\n    }\n\n    selectAll() {\n        this.options.forEach((option) => option.setSelected(true));\n\n        this._reportValueChange();\n    }\n\n    deselectAll() {\n        this.options.forEach((option) => option.setSelected(false));\n\n        this._reportValueChange();\n    }\n\n    updateScrollSize(): void {\n        if (this.horizontal || !this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    // Sets the focused option of the selection-list.\n    setFocusedOption(option: McListOption): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitChangeEvent(option);\n        this._reportValueChange();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(values: string[]): void {\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        } else {\n            this._tempValues = values;\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this._onTouched = fn;\n    }\n\n    // Implemented as a part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        if (this.options) {\n            this.options.forEach((option) => option.disabled = isDisabled);\n        }\n    }\n\n    getSelectedOptionValues(): string[] {\n        return this.options.filter((option) => option.selected).map((option) => option.value);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McListOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    _canDeselectLast(listOption: McListOption): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && listOption.selected);\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    // View to model callback that should be called if the list or its options lost focus.\n    _onTouched: () => void = () => {};\n\n    // Removes an option from the selection list and updates the active item.\n    _removeOptionFromList(option: McListOption) {\n        if (option._hasFocus) {\n            const optionIndex = this._getOptionIndex(option);\n\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.setPreviousItemActive();\n            } else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.setNextItemActive();\n            }\n        }\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                if (!this.horizontal) { this._keyManager.setPreviousPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                if (!this.horizontal) { this._keyManager.setNextPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    // Reports a value change to the ControlValueAccessor\n    _reportValueChange() {\n        if (this.options) {\n            this._onChange(this.getSelectedOptionValues());\n        }\n    }\n\n    // Emits a change event if the selected state of an option changed.\n    _emitChangeEvent(option: McListOption) {\n        this.selectionChange.emit(new McListSelectionChange(this, option));\n    }\n\n    // Returns the option with the specified value.\n    private _getOptionByValue(value: string): McListOption | undefined {\n        return this.options.find((option) => option.value === value);\n    }\n\n    // Sets the selected options based on the specified values.\n    private _setOptionsFromValues(values: string[]) {\n        this.options.forEach((option) => option.setSelected(false));\n\n        values\n            .map((value) => this._getOptionByValue(value))\n            .filter(Boolean)\n            .forEach((option) => option!.setSelected(true));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    // Returns the index of the specified list option.\n    private _getOptionIndex(option: McListOption): number {\n        return this.options.toArray().indexOf(option);\n    }\n\n    // View to model callback that should be called whenever the selected options change.\n    private _onChange: (value: any) => void = (_: any) => {};\n}\n","// todo пока не делаем, перенесено из материала, но у нас в доках таких простых списков нет.\nimport {\n    AfterContentInit, ChangeDetectionStrategy, Component, ContentChildren, Directive, ElementRef, QueryList,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { McLine, McLineSetter } from '@ptsecurity/mosaic/core';\n\n\nexport class McListBase {}\n\n@Component({\n    selector: 'mc-list',\n    host: { class: 'mc-list' },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McList extends McListBase {}\n\n\n/**\n * Directive whose purpose is to add the mc- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n    selector: '[mc-subheader], [mcSubheader]',\n    host: { class: 'mc-subheader' }\n})\nexport class McListSubheaderCssStyler {}\n\n\n// Boilerplate for applying mixins to McListItem.\nexport class McListItemBase {}\n\n@Component({\n    selector: 'mc-list-item, a[mc-list-item]',\n    host: {\n        class: 'mc-list-item',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()'\n    },\n    templateUrl: './list-item.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListItem extends McListItemBase implements AfterContentInit {\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    private _lineSetter: McLineSetter;\n\n    constructor(private _element: ElementRef) {\n        super();\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    _handleFocus() {\n        this._element.nativeElement.classList.add('mc-focused');\n    }\n\n    _handleBlur() {\n        this._element.nativeElement.classList.remove('mc-focused');\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLineModule } from '@ptsecurity/mosaic/core';\n\nimport { McListSelection, McListOption } from './list-selection.component';\nimport { McList, McListItem, McListSubheaderCssStyler } from './list.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        McLineModule\n    ],\n    exports: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ],\n    declarations: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ]\n})\nexport class McListModule {}\n","import {\n    Input,\n    Attribute,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\nexport class McLinkBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McLinkBase: HasTabIndexCtor & CanDisableCtor & typeof McLinkBase\n    = mixinTabIndex(mixinDisabled(McLinkBase));\n\n@Component({\n    selector: 'a.mc-link',\n    template: `<ng-content></ng-content>`,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcLink',\n    styleUrls: ['./link.css'],\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': 'tabIndex'\n    }\n})\n\nexport class McLink extends _McLinkBase implements OnDestroy, HasTabIndex, CanDisable {\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    private _disabled = false;\n\n    constructor(\n        @Attribute('tabindex') tabIndex: string,\n        public elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _changeDetector: ChangeDetectorRef) {\n\n        super(elementRef);\n        this._focusMonitor.monitor(elementRef.nativeElement, true);\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this.elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLink } from './link.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule\n    ],\n    declarations: [McLink],\n    exports: [McLink]\n})\nexport class McLinkModule {}\n","import { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { McModalRef } from './modal-ref.class';\n\n\ninterface IRegisteredMeta {\n    modalRef: McModalRef;\n    afterOpenSubscription: Subscription;\n    afterCloseSubscription: Subscription;\n}\n\n@Injectable()\nexport class McModalControlService {\n\n    // Track singleton afterAllClose through over the injection tree\n    get afterAllClose(): Subject<void> {\n        return this.parentService ? this.parentService.afterAllClose : this.rootAfterAllClose!;\n    }\n\n    // Track singleton openModals array through over the injection tree\n    get openModals(): McModalRef[] {\n        return this.parentService ? this.parentService.openModals : this.rootOpenModals!;\n    }\n\n    // @ts-ignore\n    private rootOpenModals: McModalRef[] = this.parentService ? null : [];\n    // @ts-ignore\n    private rootAfterAllClose: Subject<void> = this.parentService ? null : new Subject<void>();\n    // @ts-ignore\n    private rootRegisteredMetaMap: Map<McModalRef, IRegisteredMeta> = this.parentService ? null : new Map();\n\n    // Registered modal for later usage\n    private get registeredMetaMap(): Map<McModalRef, IRegisteredMeta> {\n        return this.parentService ? this.parentService.registeredMetaMap : this.rootRegisteredMetaMap;\n    }\n\n    constructor(\n        @Optional() @SkipSelf() private parentService: McModalControlService) {\n    }\n\n    // Register a modal to listen its open/close\n    registerModal(modalRef: McModalRef): void {\n        if (!this.hasRegistered(modalRef)) {\n            const afterOpenSubscription = modalRef.afterOpen.subscribe(() => this.openModals.push(modalRef));\n            const afterCloseSubscription = modalRef.afterClose.subscribe(() => this.removeOpenModal(modalRef));\n\n            this.registeredMetaMap.set(modalRef, {modalRef, afterOpenSubscription, afterCloseSubscription});\n        }\n    }\n\n    hasRegistered(modalRef: McModalRef): boolean {\n        return this.registeredMetaMap.has(modalRef);\n    }\n\n    // Close all registered opened modals\n    closeAll(): void {\n        let i = this.openModals.length;\n\n        while (i--) {\n            this.openModals[i].close();\n        }\n    }\n\n    private removeOpenModal(modalRef: McModalRef): void {\n        const index = this.openModals.indexOf(modalRef);\n\n        if (index > -1) {\n            this.openModals.splice(index, 1);\n\n            if (!this.openModals.length) {\n                this.afterAllClose.next();\n            }\n        }\n    }\n}\n","import { Observable } from 'rxjs';\n\nimport { McModalComponent } from './modal.component';\n\n\n/**\n * API class that public to users to handle the modal instance.\n * McModalRef is aim to avoid accessing to the modal instance directly by users.\n */\nexport abstract class McModalRef<T = any, R = any> {\n    abstract afterOpen: Observable<void>;\n    abstract afterClose: Observable<R>;\n\n    abstract open(): void;\n\n    abstract close(result?: R): void;\n\n    abstract destroy(result?: R): void;\n\n    /**\n     * Trigger the mcOnOk/mcOnCancel by manual\n     */\n    abstract triggerOk(): void;\n\n    abstract triggerCancel(): void;\n\n    // /**\n    //  * Return the ComponentRef of mcContent when specify mcContent as a Component\n    //  * Note: this method may return undefined if the Component has not ready yet.\n    //    (it only available after Modal's ngOnInit)\n    //  */\n    // abstract getContentComponentRef(): ComponentRef<{}>;\n\n    /**\n     * Return the component instance of mcContent when specify mcContent as a Component\n     * Note: this method may return undefined if the Component has not ready yet.\n     * (it only available after Modal's ngOnInit)\n     */\n    abstract getContentComponent(): T;\n\n    /**\n     * Get the dom element of this Modal\n     */\n    abstract getElement(): HTMLElement;\n\n    /**\n     * Get the instance of the Modal itself\n     */\n    abstract getInstance(): McModalComponent;\n}\n","export interface IClickPosition {\n    x: number;\n    y: number;\n}\n\nexport class ModalUtil {\n    private lastPosition: IClickPosition;\n\n    constructor(private document: Document) {\n        this.lastPosition = {x: -1, y: -1};\n        this.listenDocumentClick();\n    }\n\n    getLastClickPosition(): IClickPosition {\n        return this.lastPosition;\n    }\n\n    listenDocumentClick(): void {\n        this.document.addEventListener('click', (event: MouseEvent) => {\n            this.lastPosition = {x: event.clientX, y: event.clientY};\n        });\n    }\n}\n\nexport default new ModalUtil(document);\n","import {\n    AfterContentInit,\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Output,\n    SimpleChanges,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport { ComponentPortal, IComponentType, Portal } from '@ptsecurity/cdk/portal';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { McCalendarCellCssClasses } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\nimport { McDatepickerIntl } from './datepicker-intl';\nimport { McMonthView } from './month-view';\nimport { McMultiYearView, yearsPerPage } from './multi-year-view';\nimport { McYearView } from './year-view';\n\n\n/**\n * Possible views for the calendar.\n * @docs-private\n */\nexport type McCalendarView = 'month' | 'year' | 'multi-year';\n\n/** Default header for McCalendar */\n@Component({\n    selector: 'mc-calendar-header',\n    templateUrl: 'calendar-header.html',\n    exportAs: 'mcCalendarHeader',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCalendarHeader<D> {\n    constructor(private intl: McDatepickerIntl,\n                @Inject(forwardRef(() => McCalendar)) public calendar: McCalendar<D>,\n                @Optional() private dateAdapter: DateAdapter<D>,\n                @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n                changeDetectorRef: ChangeDetectorRef) {\n\n        this.calendar.stateChanges.subscribe(() => changeDetectorRef.markForCheck());\n    }\n\n    /** The label for the current calendar view. */\n    get periodButtonText(): string {\n        if (this.calendar.currentView === 'month') {\n            const label = this.dateAdapter\n                .format(this.calendar.activeDate, this.dateFormats.display.monthYearLabel);\n\n            return label[0].toLocaleUpperCase() + label.substr(1);\n        }\n\n        if (this.calendar.currentView === 'year') {\n            return this.dateAdapter.getYearName(this.calendar.activeDate);\n        }\n\n        const activeYear = this.dateAdapter.getYear(this.calendar.activeDate);\n        const firstYearInView = this.dateAdapter.getYearName(\n            // tslint:disable-next-line:no-magic-numbers\n            this.dateAdapter.createDate(activeYear - activeYear % 24, 0, 1));\n        const lastYearInView = this.dateAdapter.getYearName(\n            // tslint:disable-next-line:no-magic-numbers\n            this.dateAdapter.createDate(activeYear + yearsPerPage - 1 - activeYear % 24, 0, 1));\n\n        return `${firstYearInView} \\u2013 ${lastYearInView}`;\n    }\n\n    get periodButtonLabel(): string {\n        return this.calendar.currentView === 'month' ?\n            this.intl.switchToMultiYearViewLabel : this.intl.switchToMonthViewLabel;\n    }\n\n    /** The label for the previous button. */\n    get prevButtonLabel(): string {\n        return {\n            month: this.intl.prevMonthLabel,\n            year: this.intl.prevYearLabel,\n            'multi-year': this.intl.prevMultiYearLabel\n        }[this.calendar.currentView];\n    }\n\n    /** The label for the next button. */\n    get nextButtonLabel(): string {\n        return {\n            month: this.intl.nextMonthLabel,\n            year: this.intl.nextYearLabel,\n            'multi-year': this.intl.nextMultiYearLabel\n        }[this.calendar.currentView];\n    }\n\n    /** Handles user clicks on the period label. */\n    currentPeriodClicked(): void {\n        this.calendar.currentView = this.calendar.currentView === 'month' ? 'multi-year' : 'month';\n    }\n\n    /** Handles user clicks on the previous button. */\n    previousClicked(): void {\n        this.calendar.activeDate = this.calendar.currentView === 'month' ?\n            this.dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) :\n            this.dateAdapter.addCalendarYears(\n                this.calendar.activeDate, this.calendar.currentView === 'year' ? -1 : -yearsPerPage\n            );\n    }\n\n    /** Handles user clicks on the next button. */\n    nextClicked(): void {\n        this.calendar.activeDate = this.calendar.currentView === 'month' ?\n            this.dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) :\n            this.dateAdapter.addCalendarYears(\n                this.calendar.activeDate,\n                this.calendar.currentView === 'year' ? 1 : yearsPerPage\n            );\n    }\n\n    /** Whether the previous period button is enabled. */\n    previousEnabled(): boolean {\n        if (!this.calendar.minDate) {\n            return true;\n        }\n\n        return !this.calendar.minDate ||\n            !this.isSameView(this.calendar.activeDate, this.calendar.minDate);\n    }\n\n    /** Whether the next period button is enabled. */\n    nextEnabled(): boolean {\n        return !this.calendar.maxDate ||\n            !this.isSameView(this.calendar.activeDate, this.calendar.maxDate);\n    }\n\n    /** Whether the two dates represent the same view in the current view mode (month or year). */\n    private isSameView(date1: D, date2: D): boolean {\n        if (this.calendar.currentView === 'month') {\n            return this.dateAdapter.getYear(date1) === this.dateAdapter.getYear(date2) &&\n                this.dateAdapter.getMonth(date1) === this.dateAdapter.getMonth(date2);\n        }\n        if (this.calendar.currentView === 'year') {\n            return this.dateAdapter.getYear(date1) === this.dateAdapter.getYear(date2);\n        }\n\n        // Otherwise we are in 'multi-year' view.\n        return Math.floor(this.dateAdapter.getYear(date1) / yearsPerPage) ===\n            Math.floor(this.dateAdapter.getYear(date2) / yearsPerPage);\n    }\n}\n\n/**\n * A calendar that is used as part of the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-calendar',\n    templateUrl: 'calendar.html',\n    styleUrls: ['calendar.css'],\n    host: {\n        class: 'mc-calendar'\n    },\n    exportAs: 'mcCalendar',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCalendar<D> implements AfterContentInit, AfterViewChecked, OnDestroy, OnChanges {\n\n    /** A date representing the period (month or year) to start the calendar in. */\n    @Input()\n    get startAt(): D | null {\n        return this._startAt;\n    }\n\n    set startAt(value: D | null) {\n        this._startAt = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /**\n     * The current active date. This determines which time period is shown and which date is\n     * highlighted when using keyboard navigation.\n     */\n    get activeDate(): D {\n        return this.clampedActiveDate;\n    }\n\n    set activeDate(value: D) {\n        this.clampedActiveDate = this.dateAdapter.clampDate(value, this.minDate, this.maxDate);\n        this.stateChanges.next();\n    }\n\n    /** Whether the calendar is in month view. */\n    get currentView(): McCalendarView {\n        return this._currentView;\n    }\n\n    set currentView(value: McCalendarView) {\n        this._currentView = value;\n        this.moveFocusOnNextTick = true;\n    }\n\n    /** An input indicating the type of the header component, if set. */\n    @Input() headerComponent: IComponentType<any>;\n\n    /** A portal containing the header component type for this calendar. */\n    calendarHeaderPortal: Portal<any>;\n\n    /** Whether the calendar should be started in month or year view. */\n    @Input() startView: McCalendarView = 'month';\n\n    /** Function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Function that can be used to add custom CSS classes to dates. */\n    @Input() dateClass: (date: D) => McCalendarCellCssClasses;\n\n    /** Emits when the currently selected date changes. */\n    @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /**\n     * Emits the year chosen in multiyear view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /**\n     * Emits the month chosen in year view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits when any date is selected. */\n    @Output() readonly userSelection: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Reference to the current month view component. */\n    @ViewChild(McMonthView) monthView: McMonthView<D>;\n\n    /** Reference to the current year view component. */\n    @ViewChild(McYearView) yearView: McYearView<D>;\n\n    /** Reference to the current multi-year view component. */\n    @ViewChild(McMultiYearView) multiYearView: McMultiYearView<D>;\n\n    /**\n     * Emits whenever there is a state change that the header may need to respond to.\n     */\n    stateChanges = new Subject<void>();\n\n    private intlChanges: Subscription;\n\n    /**\n     * Used for scheduling that focus should be moved to the active cell on the next tick.\n     * We need to schedule it, rather than do it immediately, because we have to wait\n     * for Angular to re-evaluate the view children.\n     */\n    private moveFocusOnNextTick = false;\n    private _startAt: D | null;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n    private clampedActiveDate: D;\n    private _currentView: McCalendarView;\n\n    constructor(\n        intl: McDatepickerIntl,\n        @Optional() private dateAdapter: DateAdapter<D>,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        this.intlChanges = intl.changes.subscribe(() => {\n            changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        });\n    }\n\n    ngAfterContentInit() {\n        this.calendarHeaderPortal = new ComponentPortal(this.headerComponent || McCalendarHeader);\n        this.activeDate = this.startAt || this.dateAdapter.today();\n\n        // Assign to the private property since we don't want to move focus on init.\n        this._currentView = this.startView;\n    }\n\n    ngAfterViewChecked() {\n        if (this.moveFocusOnNextTick) {\n            this.moveFocusOnNextTick = false;\n            this.focusActiveCell();\n        }\n    }\n\n    ngOnDestroy() {\n        this.intlChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const change = changes.minDate || changes.maxDate || changes.dateFilter;\n\n        if (change && !change.firstChange) {\n            const view = this.getCurrentViewComponent();\n\n            if (view) {\n                // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n                // passed down to the view via data bindings which won't be up-to-date when we call `init`.\n                this.changeDetectorRef.detectChanges();\n                view.init();\n            }\n        }\n\n        this.stateChanges.next();\n    }\n\n    focusActiveCell() {\n        this.getCurrentViewComponent().focusActiveCell();\n    }\n\n    /** Updates today's date after an update of the active date */\n    updateTodaysDate() {\n        const view = this.currentView === 'month' ? this.monthView :\n            (this.currentView === 'year' ? this.yearView : this.multiYearView);\n\n        view.ngAfterContentInit();\n    }\n\n    /** Handles date selection in the month view. */\n    dateSelected(date: D): void {\n        if (!this.dateAdapter.sameDate(date, this.selected)) {\n            this.selectedChange.emit(date);\n        }\n    }\n\n    /** Handles year selection in the multiyear view. */\n    yearSelectedInMultiYearView(normalizedYear: D) {\n        this.yearSelected.emit(normalizedYear);\n    }\n\n    /** Handles month selection in the year view. */\n    monthSelectedInYearView(normalizedMonth: D) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n\n    userSelected(): void {\n        this.userSelection.emit();\n    }\n\n    /** Handles year/month selection in the multi-year/year views. */\n    goToDateInView(date: D, view: 'month' | 'year' | 'multi-year'): void {\n        this.activeDate = date;\n        this.currentView = view;\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Returns the component instance that corresponds to the current calendar view. */\n    private getCurrentViewComponent() {\n        return this.monthView || this.yearView || this.multiYearView;\n    }\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\n/**\n * Animations used by the mosaic datepicker.\n * @docs-private\n */\nexport const mcDatepickerAnimations: {\n    readonly transformPanel: AnimationTriggerMetadata;\n    readonly fadeInCalendar: AnimationTriggerMetadata;\n} = {\n    /** Transforms the height of the datepicker's calendar. */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(1, 0.8)'\n        })),\n        transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1, 1)'\n        }))),\n        transition('* => void', animate('100ms linear', style({ opacity: 0 })))\n    ]),\n\n    /** Fades in the content of the calendar. */\n    fadeInCalendar: trigger('fadeInCalendar', [\n        state('void', style({ opacity: 0 })),\n        state('enter', style({ opacity: 1 })),\n\n        // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n        transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n    ])\n};\n\n// todo should be put into polyfils\n// https://github.com/angular/angular/issues/24769\nif (!Element.prototype.matches) {\n    Element.prototype.matches = (Element.prototype as any).msMatchesSelector;\n}\n","// tslint:disable:no-unbound-method\n// tslint:disable:no-magic-numbers\nimport { DOCUMENT } from '@angular/common';\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    Component,\n    ComponentRef,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    Optional,\n    Output,\n    ViewChild,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { DateAdapter } from '@ptsecurity/cdk/datetime';\nimport { ESCAPE, UP_ARROW } from '@ptsecurity/cdk/keycodes';\nimport {\n    Overlay,\n    OverlayConfig,\n    OverlayRef,\n    IPositionStrategy,\n    IScrollStrategy\n} from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal, IComponentType } from '@ptsecurity/cdk/portal';\nimport {\n    CanColor,\n    CanColorCtor,\n    mixinColor,\n    ThemePalette\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { merge, Observable, Subject, Subscription } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\n\nimport { McCalendar } from './calendar';\nimport { McCalendarCellCssClasses } from './calendar-body';\nimport { mcDatepickerAnimations } from './datepicker-animations';\nimport { createMissingDateImplError } from './datepicker-errors';\nimport { McDatepickerInput } from './datepicker-input';\n\n\n/** Used to generate a unique ID for each datepicker instance. */\nlet datepickerUid = 0;\n\n/** Injection token that determines the scroll handling while the calendar is open. */\nexport const MC_DATEPICKER_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-datepicker-scroll-strategy');\n\n/** @docs-private */\n// tslint:disable-next-line:naming-convention\nexport function MC_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_DATEPICKER_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_DATEPICKER_SCROLL_STRATEGY_FACTORY\n};\n\n// Boilerplate for applying mixins to McDatepickerContent.\n/** @docs-private */\nexport class McDatepickerContentBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McDatepickerContentMixinBase: CanColorCtor & typeof McDatepickerContentBase =\n    mixinColor(McDatepickerContentBase);\n\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * McCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * @docs-private\n */\n@Component({\n    selector: 'mc-datepicker__content',\n    templateUrl: 'datepicker-content.html',\n    styleUrls: ['datepicker-content.css'],\n    host: {\n        class: 'mc-datepicker__content',\n        '[@transformPanel]': '\"enter\"'\n    },\n    animations: [\n        mcDatepickerAnimations.transformPanel,\n        mcDatepickerAnimations.fadeInCalendar\n    ],\n    exportAs: 'mcDatepickerContent',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['color']\n})\nexport class McDatepickerContent<D> extends McDatepickerContentMixinBase\n    implements AfterViewInit, CanColor {\n\n    /** Reference to the internal calendar component. */\n    @ViewChild(McCalendar) calendar: McCalendar<D>;\n\n    /** Reference to the datepicker that created the overlay. */\n    datepicker: McDatepicker<D>;\n\n    /** Whether the datepicker is above or below the input. */\n    isAbove: boolean;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    ngAfterViewInit() {\n        this.calendar.focusActiveCell();\n    }\n}\n\n\n// TODO: We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"mcDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the datepicker popup/dialog. */\n@Component({\n    selector: 'mc-datepicker',\n    template: '',\n    exportAs: 'mcDatepicker',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    providers: [{ provide: McFormFieldControl, useExisting: McDatepicker }]\n})\nexport class McDatepicker<D> implements OnDestroy, CanColor {\n\n    /** The date to open the calendar to initially. */\n    @Input()\n    get startAt(): D | null {\n        // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n        // selected value is.\n        return this._startAt || (this.datepickerInput ? this.datepickerInput.value : null);\n    }\n\n    set startAt(value: D | null) {\n        this._startAt = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** Color palette to use on the datepicker's calendar. */\n    @Input()\n    get color(): ThemePalette {\n        // @ts-ignore:next-line\n        return this._color ||\n            (this.datepickerInput ? this.datepickerInput.getThemePalette() : undefined);\n    }\n\n    set color(value: ThemePalette) {\n        this._color = value;\n    }\n\n    /** Whether the datepicker pop-up should be disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled === undefined && this.datepickerInput ?\n            this.datepickerInput.disabled : !!this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        const newValue = coerceBooleanProperty(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this.disabledChange.next(newValue);\n        }\n    }\n\n    /** Whether the calendar is open. */\n    @Input()\n    get opened(): boolean {\n        return this._opened;\n    }\n\n    set opened(value: boolean) {\n        if (value) {\n            this.open();\n        } else {\n            this.close();\n        }\n    }\n\n    /** The currently selected date. */\n    get selected(): D | null {\n        return this.validSelected;\n    }\n\n    set selected(value: D | null) {\n        this.validSelected = value;\n    }\n\n    /** The minimum selectable date. */\n    get minDate(): D | null {\n        return this.datepickerInput && this.datepickerInput.min;\n    }\n\n    /** The maximum selectable date. */\n    get maxDate(): D | null {\n        return this.datepickerInput && this.datepickerInput.max;\n    }\n\n    get dateFilter(): (date: D | null) => boolean {\n        return this.datepickerInput && this.datepickerInput.dateFilter;\n    }\n\n\n    get value(): D | null {\n        return this.selected;\n    }\n\n    /** An input indicating the type of the custom header component for the calendar, if set. */\n    @Input() calendarHeaderComponent: IComponentType<any>;\n\n    /** The view that the calendar should start in. */\n    @Input() startView: 'month' | 'year' | 'multi-year' = 'month';\n\n    /**\n     * Emits selected year in multiyear view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /**\n     * Emits selected month in year view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Classes to be passed to the date picker panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[];\n\n    /** Function that can be used to add custom CSS classes to dates. */\n    @Input() dateClass: (date: D) => McCalendarCellCssClasses;\n\n    /** Emits when the datepicker has been opened. */\n    @Output('opened') openedStream: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emits when the datepicker has been closed. */\n    @Output('closed') closedStream: EventEmitter<void> = new EventEmitter<void>();\n\n    /** The id for the datepicker calendar. */\n    id: string = `mc-datepicker-${datepickerUid++}`;\n\n    /** A reference to the overlay when the calendar is opened as a popup. */\n    popupRef: OverlayRef;\n\n    /** The input element this datepicker is associated with. */\n    datepickerInput: McDatepickerInput<D>;\n\n    readonly stateChanges: Observable<void> = new Subject<void>();\n\n    /** Emits when the datepicker is disabled. */\n    readonly disabledChange = new Subject<boolean>();\n\n    /** Emits new selected date when selected date changes. */\n    readonly selectedChanged = new Subject<D>();\n    private scrollStrategy: () => IScrollStrategy;\n    private _startAt: D | null;\n    private _disabled: boolean;\n    private _opened = false;\n    private validSelected: D | null = null;\n    private _color: ThemePalette;\n\n    /** A portal containing the calendar for this datepicker. */\n    private calendarPortal: ComponentPortal<McDatepickerContent<D>>;\n\n    /** Reference to the component instantiated in popup mode. */\n    private popupComponentRef: ComponentRef<McDatepickerContent<D>> | null;\n\n    /** The element that was focused before the datepicker was opened. */\n    private focusedElementBeforeOpen: HTMLElement | null = null;\n\n    /** Subscription to value changes in the associated input element. */\n    private inputSubscription = Subscription.EMPTY;\n\n    constructor(private overlay: Overlay,\n                private ngZone: NgZone,\n                private viewContainerRef: ViewContainerRef,\n                @Inject(MC_DATEPICKER_SCROLL_STRATEGY) scrollStrategy: any,\n                @Optional() private dateAdapter: DateAdapter<D>,\n                @Optional() private dir: Directionality,\n                @Optional() @Inject(DOCUMENT) private document: any) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        this.scrollStrategy = scrollStrategy;\n    }\n\n    ngOnDestroy() {\n        this.close();\n        this.inputSubscription.unsubscribe();\n        this.disabledChange.complete();\n\n        if (this.popupRef) {\n            this.popupRef.dispose();\n            this.popupComponentRef = null;\n        }\n    }\n\n    /** Selects the given date */\n    select(date: D): void {\n        const oldValue = this.selected;\n        this.selected = date;\n        if (!this.dateAdapter.sameDate(oldValue, this.selected)) {\n            this.selectedChanged.next(date);\n        }\n    }\n\n    /** Emits the selected year in multiyear view */\n    selectYear(normalizedYear: D): void {\n        this.yearSelected.emit(normalizedYear);\n    }\n\n    /** Emits selected month in year view */\n    selectMonth(normalizedMonth: D): void {\n        this.monthSelected.emit(normalizedMonth);\n    }\n\n    /**\n     * Register an input with this datepicker.\n     * @param input The datepicker input to register with this datepicker.\n     */\n    registerInput(input: McDatepickerInput<D>): void {\n        if (this.datepickerInput) {\n            throw Error('A McDatepicker can only be associated with a single input.');\n        }\n        this.datepickerInput = input;\n        this.inputSubscription =\n            this.datepickerInput.valueChange.subscribe((value: D | null) => this.selected = value);\n    }\n\n    /** Open the calendar. */\n    open(): void {\n        if (this._opened || this.disabled) {\n            return;\n        }\n        if (!this.datepickerInput) {\n            throw Error('Attempted to open an McDatepicker with no associated input.');\n        }\n        if (this.document) {\n            this.focusedElementBeforeOpen = this.document.activeElement;\n        }\n\n        this.openAsPopup();\n\n        this._opened = true;\n        this.openedStream.emit();\n    }\n\n    /** Close the calendar. */\n    close(): void {\n        if (!this._opened) {\n            return;\n        }\n\n        if (this.popupRef && this.popupRef.hasAttached()) {\n            this.popupRef.detach();\n        }\n\n        if (this.calendarPortal && this.calendarPortal.isAttached) {\n            this.calendarPortal.detach();\n        }\n\n        const completeClose = () => {\n            // The `_opened` could've been reset already if\n            // we got two events in quick succession.\n            if (this._opened) {\n                this._opened = false;\n                this.closedStream.emit();\n                this.focusedElementBeforeOpen = null;\n            }\n        };\n\n        if (this.focusedElementBeforeOpen &&\n            typeof this.focusedElementBeforeOpen.focus === 'function') {\n            // Because IE moves focus asynchronously, we can't count on it being restored before we've\n            // marked the datepicker as closed. If the event fires out of sequence and the element that\n            // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n            // able to close the calendar at all. We work around it by making the logic, that marks\n            // the datepicker as closed, async as well.\n            this.focusedElementBeforeOpen.focus();\n            setTimeout(completeClose);\n        } else {\n            completeClose();\n        }\n    }\n\n    /** Open the calendar as a popup. */\n    private openAsPopup(): void {\n        if (!this.calendarPortal) {\n            this.calendarPortal = new ComponentPortal<McDatepickerContent<D>>(McDatepickerContent,\n                this.viewContainerRef);\n        }\n\n        if (!this.popupRef) {\n            this.createPopup();\n        }\n\n        if (!this.popupRef.hasAttached()) {\n            this.popupComponentRef = this.popupRef.attach(this.calendarPortal);\n            this.popupComponentRef.instance.datepicker = this;\n            this.setColor();\n\n            // Update the position once the calendar has rendered.\n            this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n                this.popupRef.updatePosition();\n            });\n        }\n    }\n\n    /** Create the popup. */\n    private createPopup(): void {\n        const overlayConfig = new OverlayConfig({\n            positionStrategy: this.createPopupPositionStrategy(),\n            hasBackdrop: true,\n            backdropClass: 'mc-overlay-transparent-backdrop',\n            direction: this.dir,\n            scrollStrategy: this.scrollStrategy(),\n            panelClass: 'mc-datepicker__popup'\n        });\n\n        this.popupRef = this.overlay.create(overlayConfig);\n        this.popupRef.overlayElement.setAttribute('role', 'dialog');\n\n        merge(\n            this.popupRef.backdropClick(),\n            this.popupRef.detachments(),\n            this.popupRef.keydownEvents().pipe(filter((event) => {\n                // Closing on alt + up is only valid when there's an input associated with the datepicker.\n                // tslint:disable-next-line:deprecation\n                return event.keyCode === ESCAPE || (this.datepickerInput && event.altKey && event.keyCode === UP_ARROW);\n            }))\n        ).subscribe(() => this.close());\n    }\n\n    /** Create the popup PositionStrategy. */\n    private createPopupPositionStrategy(): IPositionStrategy {\n        return this.overlay.position()\n            .flexibleConnectedTo(this.datepickerInput.elementRef)\n            .withTransformOriginOn('.mc-datepicker__content')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withLockedPosition()\n            .withPositions([\n                {\n                    originX: 'start',\n                    originY: 'bottom',\n                    overlayX: 'start',\n                    overlayY: 'top'\n                },\n                {\n                    originX: 'start',\n                    originY: 'top',\n                    overlayX: 'start',\n                    overlayY: 'bottom'\n                },\n                {\n                    originX: 'end',\n                    originY: 'bottom',\n                    overlayX: 'end',\n                    overlayY: 'top'\n                },\n                {\n                    originX: 'end',\n                    originY: 'top',\n                    overlayX: 'end',\n                    overlayY: 'bottom'\n                }\n            ]);\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Passes the current theme color along to the calendar overlay. */\n    private setColor(): void {\n        const color = this.color;\n        if (this.popupComponentRef) {\n            this.popupComponentRef.instance.color = color;\n        }\n    }\n}\n","// tslint:disable:no-empty\nimport {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Output\n} from '@angular/core';\nimport {\n    AbstractControl,\n    ControlValueAccessor,\n    NG_VALIDATORS,\n    NG_VALUE_ACCESSOR,\n    ValidationErrors,\n    Validator,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport { DOWN_ARROW } from '@ptsecurity/cdk/keycodes';\nimport { ThemePalette } from '@ptsecurity/mosaic/core';\nimport { McFormField } from '@ptsecurity/mosaic/form-field';\nimport { MC_INPUT_VALUE_ACCESSOR } from '@ptsecurity/mosaic/input';\nimport { Subscription } from 'rxjs';\n\nimport { McDatepicker } from './datepicker';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\n/** @docs-private */\nexport const MC_DATEPICKER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McDatepickerInput),\n    multi: true\n};\n\n/** @docs-private */\nexport const MC_DATEPICKER_VALIDATORS: any = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => McDatepickerInput),\n    multi: true\n};\n\n\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use McDatepickerInputEvent instead.\n */\nexport class McDatepickerInputEvent<D> {\n    /** The new value for the target datepicker input. */\n    value: D | null;\n\n    constructor(\n        /** Reference to the datepicker input component that emitted the event. */\n        public target: McDatepickerInput<D>,\n        /** Reference to the native input element associated with the datepicker input. */\n        public targetElement: HTMLElement) {\n        this.value = this.target.value;\n    }\n}\n\n\n/** Directive used to connect an input to a McDatepicker. */\n@Directive({\n    selector: 'input[mcDatepicker]',\n    providers: [\n        MC_DATEPICKER_VALUE_ACCESSOR,\n        MC_DATEPICKER_VALIDATORS,\n        { provide: MC_INPUT_VALUE_ACCESSOR, useExisting: McDatepickerInput }\n    ],\n    host: {\n        '[attr.aria-haspopup]': 'true',\n        '[attr.aria-owns]': '(datepicker?.opened && datepicker.id) || null',\n        '[attr.min]': 'min ? dateAdapter.toIso8601(min) : null',\n        '[attr.max]': 'max ? dateAdapter.toIso8601(max) : null',\n        '[disabled]': 'disabled',\n        '(input)': 'onInput($event.target.value)',\n        '(change)': 'onChange()',\n        '(blur)': 'onBlur()',\n        '(keydown)': 'onKeydown($event)'\n    },\n    exportAs: 'mcDatepickerInput'\n})\nexport class McDatepickerInput<D> implements ControlValueAccessor, OnDestroy, Validator {\n    /** The datepicker that this input is associated with. */\n    @Input()\n    set mcDatepicker(value: McDatepicker<D>) {\n        if (!value) {\n            return;\n        }\n\n        this.datepicker = value;\n        this.datepicker.registerInput(this);\n        this.datepickerSubscription.unsubscribe();\n\n        this.datepickerSubscription = this.datepicker.selectedChanged.subscribe((selected: D) => {\n            this.value = selected;\n            this.cvaOnChange(selected);\n            this.onTouched();\n            this.dateInput.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n            this.dateChange.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n        });\n    }\n\n    /** Function that can be used to filter out dates within the datepicker. */\n    @Input()\n    set mcDatepickerFilter(value: (date: D | null) => boolean) {\n        this.dateFilter = value;\n        this.validatorOnChange();\n    }\n\n    /** The value of the input. */\n    @Input()\n    get value(): D | null {\n        return this._value;\n    }\n\n    set value(value: D | null) {\n        // tslint:disable-next-line:no-parameter-reassignment\n        value = this.dateAdapter.deserialize(value);\n        this.lastValueValid = !value || this.dateAdapter.isValid(value);\n        // tslint:disable-next-line:no-parameter-reassignment\n        value = this.getValidDateOrNull(value);\n        const oldDate = this.value;\n        this._value = value;\n        this.formatValue(value);\n\n        if (!this.dateAdapter.sameDate(oldDate, value)) {\n            this.valueChange.emit(value);\n        }\n    }\n\n    /** The minimum valid date. */\n    @Input()\n    get min(): D | null {\n        return this._min;\n    }\n\n    set min(value: D | null) {\n        this._min = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.validatorOnChange();\n    }\n\n    /** The maximum valid date. */\n    @Input()\n    get max(): D | null {\n        return this._max;\n    }\n\n    set max(value: D | null) {\n        this._max = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.validatorOnChange();\n    }\n\n    /** Whether the datepicker-input is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return !!this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        const newValue = coerceBooleanProperty(value);\n        const element = this.elementRef.nativeElement;\n\n        if (this._disabled !== newValue) {\n            this._disabled = newValue;\n            this.disabledChange.emit(newValue);\n        }\n\n        // We need to null check the `blur` method, because it's undefined during SSR.\n        if (newValue && element.blur) {\n            // Normally, native input elements automatically blur if they turn disabled. This behavior\n            // is problematic, because it would mean that it triggers another change detection cycle,\n            // which then causes a changed after checked error if the input element was focused before.\n            element.blur();\n        }\n    }\n\n    datepicker: McDatepicker<D>;\n    dateFilter: (date: D | null) => boolean;\n\n    /** Emits when a `change` event is fired on this `<input>`. */\n    @Output() readonly dateChange: EventEmitter<McDatepickerInputEvent<D>> =\n        new EventEmitter<McDatepickerInputEvent<D>>();\n\n    /** Emits when an `input` event is fired on this `<input>`. */\n    @Output() readonly dateInput: EventEmitter<McDatepickerInputEvent<D>> =\n        new EventEmitter<McDatepickerInputEvent<D>>();\n\n    /** Emits when the value changes (either due to user input or programmatic change). */\n    valueChange = new EventEmitter<D | null>();\n\n    /** Emits when the disabled state has changed */\n    disabledChange = new EventEmitter<boolean>();\n    private _value: D | null;\n    private _min: D | null;\n    private _max: D | null;\n    private _disabled: boolean;\n\n    private datepickerSubscription = Subscription.EMPTY;\n\n    private localeSubscription = Subscription.EMPTY;\n\n    /** Whether the last value set on the input was valid. */\n    private lastValueValid = false;\n\n    constructor(\n        public elementRef: ElementRef<HTMLInputElement>,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        @Optional() private formField: McFormField\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        // Update the displayed date when the locale changes.\n        this.localeSubscription = dateAdapter.localeChanges.subscribe(() => {\n            this.value = this.value;\n        });\n    }\n\n    onTouched = () => {\n    }\n\n    ngOnDestroy() {\n        this.datepickerSubscription.unsubscribe();\n        this.localeSubscription.unsubscribe();\n        this.valueChange.complete();\n        this.disabledChange.complete();\n    }\n\n    /** @docs-private */\n    registerOnValidatorChange(fn: () => void): void {\n        this.validatorOnChange = fn;\n    }\n\n    /** @docs-private */\n    validate(c: AbstractControl): ValidationErrors | null {\n        return this.validator ? this.validator(c) : null;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value: D): void {\n        this.value = value;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this.cvaOnChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    onKeydown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n\n        if (this.datepicker && isAltDownArrow && !this.elementRef.nativeElement.readOnly) {\n            this.datepicker.open();\n            event.preventDefault();\n        }\n    }\n\n    onInput(value: string) {\n        let date = this.dateAdapter.parse(value, this.dateFormats.parse.dateInput);\n        this.lastValueValid = !date || this.dateAdapter.isValid(date);\n        date = this.getValidDateOrNull(date);\n\n        if (!this.dateAdapter.sameDate(date, this._value)) {\n            this._value = date;\n            this.cvaOnChange(date);\n            this.valueChange.emit(date);\n            this.dateInput.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n        }\n    }\n\n    onChange() {\n        this.dateChange.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n    }\n\n    /** Returns the palette used by the input's form field, if any. */\n    getThemePalette(): ThemePalette | undefined {\n        return this.formField ? this.formField.color : undefined;\n    }\n\n    /** Handles blur events on the input. */\n    onBlur() {\n        // Reformat the input only if we have a valid value.\n        if (this.value) {\n            this.formatValue(this.value);\n        }\n\n        this.onTouched();\n    }\n\n    private cvaOnChange: (value: any) => void = () => {\n    }\n\n    private validatorOnChange = () => {\n    }\n\n    /** The form control validator for whether the input parses. */\n    private parseValidator: ValidatorFn = (): ValidationErrors | null => {\n        return this.lastValueValid ?\n            null : { mcDatepickerParse: { text: this.elementRef.nativeElement.value } };\n    }\n\n    /** The form control validator for the min date. */\n    private minValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n        const controlValue = this.getValidDateOrNull(this.dateAdapter.deserialize(control.value));\n\n        return (!this.min || !controlValue ||\n            this.dateAdapter.compareDate(this.min, controlValue) <= 0) ?\n            null : { mcDatepickerMin: { min: this.min, actual: controlValue } };\n    }\n\n    /** The form control validator for the max date. */\n    private maxValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n        const controlValue = this.getValidDateOrNull(this.dateAdapter.deserialize(control.value));\n\n        return (!this.max || !controlValue ||\n            this.dateAdapter.compareDate(this.max, controlValue) >= 0) ?\n            null : { mcDatepickerMax: { max: this.max, actual: controlValue } };\n    }\n\n    /** The form control validator for the date filter. */\n    private filterValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n        const controlValue = this.getValidDateOrNull(this.dateAdapter.deserialize(control.value));\n\n        return !this.dateFilter || !controlValue || this.dateFilter(controlValue) ?\n            null : { mcDatepickerFilter: true };\n    }\n\n    /** Formats a value and sets it on the input element. */\n    private formatValue(value: D | null) {\n        this.elementRef.nativeElement.value =\n            value ? this.dateAdapter.format(value, this.dateFormats.display.dateInput) : '';\n    }\n\n    /** The combined form control validator for this input. */\n        // tslint:disable:member-ordering\n    private validator: ValidatorFn | null =\n        Validators.compose([\n            this.parseValidator,\n            this.minValidator,\n            this.maxValidator,\n            this.filterValidator\n        ]);\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    Directive,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    ViewEncapsulation,\n    ViewChild\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { McButton } from '@ptsecurity/mosaic/button';\nimport { merge, of as observableOf, Subscription } from 'rxjs';\n\nimport { McDatepicker } from './datepicker';\nimport { McDatepickerIntl } from './datepicker-intl';\n\n\n/** Can be used to override the icon of a `mcDatepickerToggle`. */\n@Directive({\n    selector: '[mcDatepickerToggleIcon]'\n})\nexport class McDatepickerToggleIcon {\n}\n\n\n@Component({\n    selector: 'mc-datepicker-toggle',\n    templateUrl: 'datepicker-toggle.html',\n    styleUrls: ['datepicker-toggle.css'],\n    host: {\n        class: 'mc-datepicker-toggle',\n        // Always set the tabindex to -1 so that it doesn't overlap with any custom tabindex the\n        // consumer may have provided, while still being able to receive focus.\n        '[attr.tabindex]': '-1',\n        '[class.mc-datepicker-toggle_active]': 'datepicker && datepicker.opened',\n        '[class.mc-warn]': 'datepicker && datepicker.color === \"error\"',\n        '(focus)': 'button.focus()'\n    },\n    exportAs: 'mcDatepickerToggle',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McDatepickerToggle<D> implements AfterContentInit, OnChanges, OnDestroy {\n\n    /** Whether the toggle button is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled === undefined ? this.datepicker.disabled : !!this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    /** Datepicker instance that the button will toggle. */\n    @Input('for') datepicker: McDatepicker<D>;\n\n    /** Tabindex for the toggle. */\n    @Input() tabIndex: number | null;\n\n    /** Custom icon set by the consumer. */\n    @ContentChild(McDatepickerToggleIcon) customIcon: McDatepickerToggleIcon;\n\n    /** Underlying button element. */\n    @ViewChild('button') button: McButton;\n    private stateChanges = Subscription.EMPTY;\n\n    private _disabled: boolean;\n\n    constructor(\n        public intl: McDatepickerIntl,\n        private changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') defaultTabIndex: string\n    ) {\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.datepicker) {\n            this.watchStateChanges();\n        }\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.unsubscribe();\n    }\n\n    ngAfterContentInit() {\n        this.watchStateChanges();\n    }\n\n    open(event: Event): void {\n        if (this.datepicker && !this.disabled) {\n            this.datepicker.open();\n            event.stopPropagation();\n        }\n    }\n\n    private watchStateChanges() {\n        const datepickerDisabled = this.datepicker ? this.datepicker.disabledChange : observableOf();\n        const inputDisabled = this.datepicker && this.datepicker.datepickerInput ?\n            this.datepicker.datepickerInput.disabledChange : observableOf();\n        const datepickerToggled = this.datepicker ?\n            merge(this.datepicker.openedStream, this.datepicker.closedStream) :\n            observableOf();\n\n        this.stateChanges.unsubscribe();\n        this.stateChanges = merge(\n            this.intl.changes,\n            datepickerDisabled,\n            inputDisabled,\n            datepickerToggled\n        ).subscribe(() => this.changeDetectorRef.markForCheck());\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { PortalModule } from '@ptsecurity/cdk/portal';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCalendar, McCalendarHeader } from './calendar';\nimport { McCalendarBody } from './calendar-body';\nimport {\n    McDatepicker,\n    McDatepickerContent,\n    MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER\n} from './datepicker';\nimport { McDatepickerInput } from './datepicker-input';\nimport { McDatepickerIntl } from './datepicker-intl';\nimport { McDatepickerToggle, McDatepickerToggleIcon } from './datepicker-toggle';\nimport { McMonthView } from './month-view';\nimport { McMultiYearView } from './multi-year-view';\nimport { McYearView } from './year-view';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McButtonModule,\n        OverlayModule,\n        A11yModule,\n        PortalModule,\n        McButtonModule,\n        McIconModule\n    ],\n    exports: [\n        McCalendar,\n        McCalendarBody,\n        McDatepicker,\n        McDatepickerContent,\n        McDatepickerInput,\n        McDatepickerToggle,\n        McDatepickerToggleIcon,\n        McMonthView,\n        McYearView,\n        McMultiYearView,\n        McCalendarHeader\n    ],\n    declarations: [\n        McCalendar,\n        McCalendarBody,\n        McDatepicker,\n        McDatepickerContent,\n        McDatepickerInput,\n        McDatepickerToggle,\n        McDatepickerToggleIcon,\n        McMonthView,\n        McYearView,\n        McMultiYearView,\n        McCalendarHeader\n    ],\n    providers: [\n        McDatepickerIntl,\n        MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER\n    ],\n    entryComponents: [\n        McDatepickerContent,\n        McCalendarHeader\n    ]\n})\nexport class McDatepickerModule {\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\n\n@Component({\n    selector: 'mc-divider',\n    host: {\n        class: 'mc-divider',\n        role: 'separator',\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n        '[class.mc-divider-vertical]': 'vertical',\n        '[class.mc-divider-inset]': 'inset'\n    },\n    template: '',\n    styleUrls: ['divider.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false\n})\nexport class McDivider {\n    // Whether the divider is vertically aligned.\n    @Input()\n    get vertical(): boolean {\n        return this._vertical;\n    }\n\n    set vertical(value: boolean) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n\n    private _vertical: boolean = false;\n\n    // Whether the divider is an inset divider.\n    @Input()\n    get inset(): boolean {\n        return this._inset;\n    }\n\n    set inset(value: boolean) {\n        this._inset = coerceBooleanProperty(value);\n    }\n\n    private _inset: boolean = false;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McDivider } from './divider.component';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McDivider],\n    declarations: [McDivider]\n})\nexport class McDividerModule {\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    Directive,\n    TemplateRef,\n    ComponentFactoryResolver,\n    ApplicationRef,\n    Injector,\n    ViewContainerRef,\n    Inject,\n    OnDestroy\n} from '@angular/core';\nimport { TemplatePortal, DomPortalOutlet } from '@ptsecurity/cdk/portal';\nimport { Subject } from 'rxjs';\n\n\n/**\n * Dropdown content that will be rendered lazily once the dropdown is opened.\n */\n@Directive({\n    selector: 'ng-template[mcDropdownContent]'\n})\nexport class McDropdownContent implements OnDestroy {\n\n    /** Emits when the dropdown content has been attached. */\n    _attached = new Subject<void>();\n    private _portal: TemplatePortal;\n    private _outlet: DomPortalOutlet;\n\n    constructor(\n        private _template: TemplateRef<any>,\n        private _componentFactoryResolver: ComponentFactoryResolver,\n        private _appRef: ApplicationRef,\n        private _injector: Injector,\n        private _viewContainerRef: ViewContainerRef,\n        @Inject(DOCUMENT) private _document: any) {}\n\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context: any = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n\n        this.detach();\n\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'),\n                this._componentFactoryResolver, this._appRef, this._injector);\n        }\n\n        const element: HTMLElement = this._template.elementRef.nativeElement;\n\n        // Because we support opening the same dropdown from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode!.insertBefore(this._outlet.outletElement, element);\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\n","import { EventEmitter, TemplateRef, InjectionToken } from '@angular/core';\nimport { FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/**\n * Injection token used to provide the parent dropdown to dropdown-specific components.\n * @docs-private\n */\nexport const MC_DROPDOWN_PANEL = new InjectionToken<McDropdownPanel>('MC_DROPDOWN_PANEL');\n\n/**\n * Interface for a custom dropdown panel that can be used with `mcDropdownTriggerFor`.\n * @docs-private\n */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownPanel<T = any> {\n    xPosition: DropdownPositionX;\n    yPosition: DropdownPositionY;\n    overlapTrigger: boolean;\n    templateRef: TemplateRef<any>;\n    closed: EventEmitter<void | 'click' | 'keydown' | 'tab'>;\n    direction?: Direction;\n    lazyContent?: McDropdownContent;\n    backdropClass?: string;\n    hasBackdrop?: boolean;\n    focusFirstItem(origin?: FocusOrigin): void;\n    resetActiveItem(): void;\n    setPositionClasses?(x: DropdownPositionX, y: DropdownPositionY): void;\n    addItem?(item: T): void;\n    removeItem?(item: T): void;\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    Inject,\n    Optional\n} from '@angular/core';\nimport { IFocusableOption, FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\n\n\n// Boilerplate for applying mixins to McDropdownItem.\n/** @docs-private */\nexport class McDropdownItemBase {}\nexport const _McDropdownItemMixinBase: CanDisableCtor & typeof McDropdownItemBase =\n    mixinDisabled(McDropdownItemBase);\n\n/**\n * This directive is intended to be used inside an mc-dropdown tag.\n * It exists mostly to set the role attribute.\n */\n@Component({\n    selector: 'mc-dropdown-item, [mc-dropdown-item]',\n    exportAs: 'mcDropdownItem',\n    inputs: ['disabled'],\n    host: {\n        role: 'dropdown-item',\n        class: 'mc-dropdown__item',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_checkDisabled($event)'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    template: `<ng-content></ng-content>`\n})\nexport class McDropdownItem extends _McDropdownItemMixinBase\n    implements IFocusableOption, CanDisable, OnDestroy {\n\n    private _document: Document;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        @Inject(DOCUMENT) document: any,\n        private _focusMonitor: FocusMonitor,\n        @Inject(MC_DROPDOWN_PANEL) @Optional() private _parentDropdownPanel?: McDropdownPanel<McDropdownItem>) {\n        super();\n\n        if (_focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for dropdown items only when the focus was not caused by a\n            // mouse or touch interaction.\n            _focusMonitor.monitor(this._elementRef.nativeElement, false);\n        }\n\n        if (_parentDropdownPanel && _parentDropdownPanel.addItem) {\n            _parentDropdownPanel.addItem(this);\n        }\n\n        this._document = document;\n    }\n\n    /** Focuses the dropdown item. */\n    focus(origin: FocusOrigin = 'program'): void {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin);\n        } else {\n            this._getHostElement().focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n\n        if (this._parentDropdownPanel && this._parentDropdownPanel.removeItem) {\n            this._parentDropdownPanel.removeItem(this);\n        }\n    }\n\n    /** Used to set the `tabindex`. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Returns the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._elementRef.nativeElement;\n    }\n\n    /** Prevents the default element actions if it is disabled. */\n    _checkDisabled(event: Event): void {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        const element: HTMLElement = this._elementRef.nativeElement;\n        // tslint:disable-next-line:no-magic-numbers\n        const textNodeType = this._document ? this._document.TEXT_NODE : 3;\n        let output = '';\n\n        if (element.childNodes) {\n            const length = element.childNodes.length;\n\n            // Go through all the top-level text nodes and extract their text.\n            // We skip anything that's not a text node to prevent the text from\n            // being thrown off by something like an icon.\n            for (let i = 0; i < length; i++) {\n                if (element.childNodes[i].nodeType === textNodeType) {\n                    output += element.childNodes[i].textContent;\n                }\n            }\n        }\n\n        return output.trim();\n    }\n}\n","import {\n    trigger,\n    state,\n    style,\n    animate,\n    transition,\n    query,\n    group,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\n/**\n * Animations used by the mc-dropdown component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nexport const mcDropdownAnimations: {\n    readonly transformDropdown: AnimationTriggerMetadata;\n    readonly fadeInItems: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation controls the dropdown panel's entry and exit from the page.\n     *\n     * When the dropdown panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the dropdown panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformDropdown: trigger('transformDropdown', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        })),\n        transition('void => enter', group([\n            query('.mc-dropdown__content', animate('50ms linear', style({opacity: 1}))),\n            animate('50ms cubic-bezier(0, 0, 0.2, 1)', style({transform: 'scale(1)'}))\n        ])),\n        transition('* => void', animate('50ms 25ms linear', style({opacity: 0})))\n    ]),\n\n\n    /**\n     * This animation fades in the background color and content of the dropdown panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // now. Remove next time we do breaking changes.\n        state('showing', style({opacity: 1})),\n        transition('void => *', [\n            style({opacity: 0}),\n            animate('200ms 60ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\nexport const fadeInItems = mcDropdownAnimations.fadeInItems;\n\nexport const transformDropdown = mcDropdownAnimations.transformDropdown;\n","import {\n    Attribute,\n    Directive, DoCheck, ElementRef, Inject, Input, OnChanges,\n    OnDestroy, Optional, Self\n} from '@angular/core';\nimport {\n    FormGroupDirective,\n    NgControl,\n    NgForm, NgModel\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    END, C, V, X, A, DELETE, BACKSPACE, TAB, ENTER,\n    ESCAPE, ZERO, NINE, NUMPAD_ZERO, NUMPAD_NINE, NUMPAD_MINUS, DASH,\n    FF_MINUS, LEFT_ARROW, RIGHT_ARROW, HOME, UP_ARROW, DOWN_ARROW, F1, F12\n} from '@ptsecurity/cdk/keycodes';\nimport { getSupportedInputTypes, Platform } from '@ptsecurity/cdk/platform';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl, McFormFieldNumberControl } from '@ptsecurity/mosaic/form-field';\nimport { Subject } from 'rxjs';\n\nimport { getMcInputUnsupportedTypeError } from './input-errors';\nimport { MC_INPUT_VALUE_ACCESSOR } from './input-value-accessor';\nimport { stepDown, stepUp } from './stepperUtils';\n\n\nconst MC_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n\nexport const BIG_STEP = 10;\nexport const SMALL_STEP = 1;\n\nlet nextUniqueId = 0;\n\nexport class McInputBase {\n    constructor(public defaultErrorStateMatcher: ErrorStateMatcher,\n                public parentForm: NgForm,\n                public parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\nexport const _McInputMixinBase: CanUpdateErrorStateCtor & typeof McInputBase = mixinErrorState(McInputBase);\n\n\n@Directive({\n    selector: `input[mcInput][type=\"number\"]`,\n    exportAs: 'mcNumericalInput',\n    providers: [NgModel, { provide: McFormFieldNumberControl, useExisting: McNumberInput }],\n    host: {\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McNumberInput implements McFormFieldNumberControl<any> {\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    bigStep: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    step: number;\n\n    @Input()\n    min: number;\n\n    @Input()\n    max: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    value: any;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    private readonly _host: HTMLInputElement;\n\n    constructor(\n        private _platform: Platform ,\n        private _elementRef: ElementRef,\n        private _model: NgModel,\n        @Attribute('step') step: string,\n        @Attribute('big-step') bigStep: string,\n        @Attribute('min') min: string,\n        @Attribute('max') max: string\n    ) {\n        this.step = this.isDigit(step) ? parseFloat(step) : SMALL_STEP;\n        this.bigStep = this.isDigit(bigStep) ? parseFloat(bigStep) : BIG_STEP;\n        this.min = this.isDigit(min) ? parseFloat(min) : -Infinity;\n        this.max = this.isDigit(max) ? parseFloat(max) : Infinity;\n\n        this._host = this._elementRef.nativeElement;\n\n        const self = this;\n\n        if ('valueAsNumber' in this._host) {\n            Object.defineProperty(Object.getPrototypeOf(this._host), 'valueAsNumber', {\n                // tslint:disable-next-line:no-reserved-keywords\n                get() {\n                    const res = parseFloat(self.normalizeSplitter(this.value));\n\n                    return isNaN(res) ? null : res;\n                }\n            });\n        }\n    }\n\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const keyCode = event.keyCode;\n\n        const isCtrlA = (e) => e.keyCode === A && (e.ctrlKey || e.metaKey);\n        const isCtrlC = (e) => e.keyCode === C && (e.ctrlKey || e.metaKey);\n        const isCtrlV = (e) => e.keyCode === V && (e.ctrlKey || e.metaKey);\n        const isCtrlX = (e) => e.keyCode === X && (e.ctrlKey || e.metaKey);\n\n        const isFKey = (e) => e.keyCode >= F1 && e.keyCode <= F12;\n\n        const isNumber = (e) => (e.keyCode >= ZERO && e.keyCode <= NINE) ||\n            (e.keyCode >= NUMPAD_ZERO && e.keyCode <= NUMPAD_NINE);\n\n        const minuses = [NUMPAD_MINUS, DASH, FF_MINUS];\n        const serviceKeys = [DELETE, BACKSPACE, TAB, ESCAPE, ENTER];\n        const arrows = [LEFT_ARROW, RIGHT_ARROW];\n        const allowedKeys =  [HOME, END].concat(arrows).concat(serviceKeys).concat(minuses);\n\n        const isIEPeriod = (e) => e.key === '.' || e.key === 'Decimal';\n        const isNotIEPeriod = (e) => e.key === '.' || e.key === ',';\n\n        // Decimal is for IE\n        const isPeriod = (e) => this._platform.EDGE || this._platform.TRIDENT\n            ? isIEPeriod(e)\n            : isNotIEPeriod(e);\n\n        if (allowedKeys.indexOf(keyCode) !== -1 ||\n            isCtrlA(event) ||\n            isCtrlC(event) ||\n            isCtrlV(event) ||\n            isCtrlX(event) ||\n            isFKey(event) ||\n            isPeriod(event)\n        ) {\n            // let it happen, don't do anything\n            return;\n        }\n        // Ensure that it is not a number and stop the keypress\n        if (event.shiftKey || !isNumber(event)) {\n            event.preventDefault();\n\n            // process steps\n            const step = event.shiftKey ? this.bigStep : this.step;\n\n            if (keyCode === UP_ARROW) {\n                this.stepUp(step);\n            }\n\n            if (keyCode === DOWN_ARROW) {\n                this.stepDown(step);\n            }\n        }\n    }\n\n    onPaste(event) {\n        let value = event.clipboardData.getData('text');\n        value = this.normalizeSplitter(value);\n\n        if (!this.isDigit(value)) {\n            event.preventDefault();\n        }\n    }\n\n    stepUp(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepUp(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    stepDown(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepDown(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    private normalizeSplitter(value: string): string {\n        return value ? value.replace(/,/g, '.') : value;\n    }\n\n    private isDigit(value: string): boolean {\n        return this.isFloat(value) || this.isInt(value);\n    }\n\n    private isFloat(value: string): boolean {\n        return /^-?\\d+\\.\\d+$/.test(value);\n    }\n\n    private isInt(value: string): boolean {\n        return /^-?\\d+$/.test(value);\n    }\n}\n\n@Directive({\n    selector: `input[mcInput]`,\n    exportAs: 'mcInput',\n    host: {\n        class: 'mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(input)': '_onInput()'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McInput }]\n})\nexport class McInput extends _McInputMixinBase implements McFormFieldControl<any>, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-input';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    // tslint:disable no-reserved-keywords\n    /** Input type of the element. */\n    @Input()\n    get type(): string {\n        return this._type;\n    }\n\n    set type(value: string) {\n        this._type = value || 'text';\n        this._validateType();\n\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    // tslint:enable no-reserved-keywords\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this._inputValueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected _uid = `mc-input-${nextUniqueId++}`;\n    protected _previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n    protected _type = 'text';\n    protected _neverEmptyInputTypes = [\n        'date',\n        'datetime',\n        'datetime-local',\n        'month',\n        'time',\n        'week'\n    ].filter((t) => getSupportedInputTypes().has(t));\n\n    private _inputValueAccessor: { value: any };\n\n    constructor(protected _elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() parentForm: NgForm,\n                @Optional() parentFormGroup: FormGroupDirective,\n                defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any) {\n        super(defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || this._elementRef.nativeElement;\n\n        this._previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n\n    /** Focuses the input. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the input changes. */\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    protected _dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Make sure the input is a supported type. */\n    protected _validateType() {\n        if (MC_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMcInputUnsupportedTypeError(this._type);\n        }\n    }\n\n    /** Checks whether the input type is one of the types that are never empty. */\n    protected _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    protected _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this._elementRef.nativeElement as HTMLInputElement).validity;\n\n        return validity && validity.badInput;\n    }\n}\n\n@Directive({\n    selector: 'input[mcInputMonospace]',\n    exportAs: 'McInputMonospace',\n    host: { class: 'mc-input_monospace' }\n})\nexport class McInputMono {\n}\n","import { Directive, forwardRef, Input, OnChanges, Provider, SimpleChanges } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, ValidatorFn, Validators } from '@angular/forms';\n\n\nexport const MIN_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MinValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[min][formControlName],[min][formControl],[min][ngModel]',\n    providers: [MIN_VALIDATOR],\n    host: {'[attr.min]': 'min ? min : null'}\n})\nexport class MinValidator implements Validator, OnChanges {\n\n    @Input() min: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('min' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.min(parseInt(this.min, 10)); }\n}\n\n\nexport const MAX_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MaxValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[max][formControlName],[max][formControl],[max][ngModel]',\n    providers: [MAX_VALIDATOR],\n    host: {\n        '[attr.max]': 'max ? max : null'\n    }\n})\nexport class MaxValidator implements Validator,\n    OnChanges {\n\n    @Input() max: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('max' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.max(parseInt(this.max, 10)); }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McInput, McInputMono, McNumberInput } from './input';\nimport { MaxValidator, MinValidator } from './input-number-validators';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator],\n    declarations: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator ]\n})\nexport class McInputModule {\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n\n/** Datepicker data that requires internationalization. */\n@Injectable({ providedIn: 'root' })\nexport class McDatepickerIntl {\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     */\n    readonly changes: Subject<void> = new Subject<void>();\n\n    /** A label for the calendar popup (used by screen readers). */\n    calendarLabel: string = 'Calendar';\n\n    /** A label for the button used to open the calendar popup (used by screen readers). */\n    openCalendarLabel: string = 'Open calendar';\n\n    /** A label for the previous month button (used by screen readers). */\n    prevMonthLabel: string = 'Previous month';\n\n    /** A label for the next month button (used by screen readers). */\n    nextMonthLabel: string = 'Next month';\n\n    /** A label for the previous year button (used by screen readers). */\n    prevYearLabel: string = 'Previous year';\n\n    /** A label for the next year button (used by screen readers). */\n    nextYearLabel: string = 'Next year';\n\n    /** A label for the previous multi-year button (used by screen readers). */\n    prevMultiYearLabel: string = 'Previous 20 years';\n\n    /** A label for the next multi-year button (used by screen readers). */\n    nextMultiYearLabel: string = 'Next 20 years';\n\n    /** A label for the 'switch to month view' button (used by screen readers). */\n    switchToMonthViewLabel: string = 'Choose date';\n\n    /** A label for the 'switch to year view' button (used by screen readers). */\n    switchToMultiYearViewLabel: string = 'Choose month and year';\n}\n","// tslint:disable:no-magic-numbers\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    Output,\n    ViewEncapsulation,\n    NgZone,\n    OnChanges,\n    SimpleChanges\n} from '@angular/core';\nimport { take } from 'rxjs/operators';\n\n\n/**\n * Extra CSS classes that can be associated with a calendar cell.\n */\nexport type McCalendarCellCssClasses = string | string[] | Set<string> | { [key: string]: any };\n\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * @docs-private\n */\nexport class McCalendarCell {\n    constructor(\n        public value: number,\n        public displayValue: string,\n        public ariaLabel: string,\n        public enabled: boolean,\n        public cssClasses?: McCalendarCellCssClasses\n    ) {\n    }\n}\n\n\n/**\n * An internal component used to display calendar data in a table.\n * @docs-private\n */\n@Component({\n    selector: '[mc-calendar-body]',\n    templateUrl: 'calendar-body.html',\n    styleUrls: ['calendar-body.css'],\n    host: {\n        class: 'mc-calendar__body',\n        role: 'grid',\n        'aria-readonly': 'true'\n    },\n    exportAs: 'mcCalendarBody',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCalendarBody implements OnChanges {\n    /** The label for the table. (e.g. \"Jan 2017\"). */\n    @Input() label: string;\n\n    /** The cells to display in the table. */\n    @Input() rows: McCalendarCell[][];\n\n    /** The value in the table that corresponds to today. */\n    @Input() todayValue: number;\n\n    /** The value in the table that is currently selected. */\n    @Input() selectedValue: number;\n\n    /** The minimum number of free cells needed to fit the label in the first row. */\n    @Input() labelMinRequiredCells: number;\n\n    /** The number of columns in the table. */\n    @Input() numCols = 7;\n\n    /** The cell number of the active cell in the table. */\n    @Input() activeCell = 0;\n\n    /**\n     * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n     * maintained even as the table resizes.\n     */\n    @Input() cellAspectRatio = 1;\n\n    /** Emits when a new value is selected. */\n    @Output() readonly selectedValueChange: EventEmitter<number> = new EventEmitter<number>();\n\n    /** The number of blank cells to put at the beginning for the first row. */\n    firstRowOffset: number;\n\n    /** Padding for the individual date cells. */\n    cellPadding: string;\n\n    /** Width of an individual cell. */\n    cellWidth: string;\n\n    constructor(private elementRef: ElementRef<HTMLElement>, private ngZone: NgZone) {\n    }\n\n    cellClicked(cell: McCalendarCell): void {\n        if (cell.enabled) {\n            this.selectedValueChange.emit(cell.value);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const columnChanges = changes.numCols;\n        // tslint:disable-next-line:no-this-assignment\n        const { rows, numCols } = this;\n\n        if (changes.rows || columnChanges) {\n            this.firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n        }\n\n        if (changes.cellAspectRatio || columnChanges || !this.cellPadding) {\n            this.cellPadding = `${this.cellAspectRatio * 50 / numCols}%`;\n        }\n\n        if (columnChanges || !this.cellWidth) {\n            this.cellWidth = `${100 / numCols}%`;\n        }\n    }\n\n    isActiveCell(rowIndex: number, colIndex: number): boolean {\n        let cellNumber = rowIndex * this.numCols + colIndex;\n\n        // Account for the fact that the first row may not have as many cells.\n        if (rowIndex) {\n            cellNumber -= this.firstRowOffset;\n        }\n\n        return cellNumber === this.activeCell;\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.ngZone.runOutsideAngular(() => {\n            this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n                const activeCell: HTMLElement | null =\n                    this.elementRef.nativeElement.querySelector('.mc-calendar__body_active');\n\n                if (activeCell) {\n                    activeCell.focus();\n                }\n            });\n        });\n    }\n}\n","// tslint:disable:no-magic-numbers\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Optional,\n    Output,\n    ViewEncapsulation,\n    ViewChild\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    UP_ARROW,\n    SPACE\n} from '@ptsecurity/cdk/keycodes';\n\nimport { McCalendarBody, McCalendarCell, McCalendarCellCssClasses } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\nconst DAYS_PER_WEEK = 7;\n\n\n/**\n * An internal component used to display a single month in the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-month-view',\n    templateUrl: 'month-view.html',\n    exportAs: 'mcMonthView',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McMonthView<D> implements AfterContentInit {\n    /**\n     * The date to display in this month view (everything other than the month and year is ignored).\n     */\n    @Input()\n    get activeDate(): D {\n        return this._activeDate;\n    }\n\n    set activeDate(value: D) {\n        const oldActiveDate = this._activeDate;\n        const validDate =\n            this.getValidDateOrNull(this.dateAdapter.deserialize(value)) || this.dateAdapter.today();\n        this._activeDate = this.dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n        if (!this.hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n            this.init();\n        }\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.selectedDate = this.getDateInCurrentMonth(this._selected);\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** Function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Function that can be used to add custom CSS classes to dates. */\n    @Input() dateClass: (date: D) => McCalendarCellCssClasses;\n\n    /** Emits when a new date is selected. */\n    @Output() readonly selectedChange: EventEmitter<D | null> = new EventEmitter<D | null>();\n\n    /** Emits when any date is selected. */\n    @Output() readonly userSelection: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emits when any date is activated. */\n    @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** The body of calendar table */\n    @ViewChild(McCalendarBody) mcCalendarBody: McCalendarBody;\n\n    /** The label for this month (e.g. \"January 2017\"). */\n    monthLabel: string;\n\n    /** Grid of calendar cells representing the dates of the month. */\n    weeks: McCalendarCell[][];\n\n    /** The number of blank cells in the first row before the 1st of the month. */\n    firstWeekOffset: number;\n\n    /**\n     * The date of the month that the currently selected Date falls on.\n     * Null if the currently selected Date is in another month.\n     */\n    selectedDate: number | null;\n\n    /** The date of the month that today falls on. Null if today is in another month. */\n    todayDate: number | null;\n\n    /** The names of the weekdays. */\n    weekdays: { long: string; narrow: string }[];\n    private _activeDate: D;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() private dir?: Directionality\n    ) {\n\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        const firstDayOfWeek = this.dateAdapter.getFirstDayOfWeek();\n        const narrowWeekdays = this.dateAdapter.getDayOfWeekNames('narrow');\n        const longWeekdays = this.dateAdapter.getDayOfWeekNames('long');\n\n        // Rotate the labels for days of the week based on the configured first day of the week.\n        const weekdays = longWeekdays.map((long, i) => {\n            return { long, narrow: narrowWeekdays[i] };\n        });\n        this.weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n\n        this._activeDate = this.dateAdapter.today();\n    }\n\n    ngAfterContentInit() {\n        this.init();\n    }\n\n    /** Handles when a new date is selected. */\n    dateSelected(date: number) {\n        if (this.selectedDate !== date) {\n            const selectedYear = this.dateAdapter.getYear(this.activeDate);\n            const selectedMonth = this.dateAdapter.getMonth(this.activeDate);\n            const selectedDate = this.dateAdapter.createDate(selectedYear, selectedMonth, date);\n\n            this.selectedChange.emit(selectedDate);\n        }\n\n        this.userSelection.emit();\n    }\n\n    /** Handles keydown events on the calendar body when calendar is in month view. */\n    handleCalendarBodyKeydown(event: KeyboardEvent): void {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n        const oldActiveDate = this._activeDate;\n        const isRtl = this.isRtl();\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, -7);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, 7);\n                break;\n            case HOME:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate,\n                    1 - this.dateAdapter.getDate(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate,\n                    (this.dateAdapter.getNumDaysInMonth(this._activeDate) -\n                        this.dateAdapter.getDate(this._activeDate)));\n                break;\n            case PAGE_UP:\n                this.activeDate = event.altKey ?\n                    this.dateAdapter.addCalendarYears(this._activeDate, -1) :\n                    this.dateAdapter.addCalendarMonths(this._activeDate, -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = event.altKey ?\n                    this.dateAdapter.addCalendarYears(this._activeDate, 1) :\n                    this.dateAdapter.addCalendarMonths(this._activeDate, 1);\n                break;\n            case ENTER:\n            case SPACE:\n                if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n                    this.dateSelected(this.dateAdapter.getDate(this._activeDate));\n                    this.userSelection.emit();\n                    // Prevent unexpected default actions such as form submission.\n                    event.preventDefault();\n                }\n\n                return;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n\n        if (this.dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n\n        this.focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n\n    /** Initializes this month view. */\n    init() {\n        this.selectedDate = this.getDateInCurrentMonth(this.selected);\n        this.todayDate = this.getDateInCurrentMonth(this.dateAdapter.today());\n        this.monthLabel =\n            this.dateAdapter.getMonthNames('short')[this.dateAdapter.getMonth(this.activeDate)];\n\n        this.monthLabel = this.monthLabel[0].toLocaleUpperCase() + this.monthLabel.substr(1);\n\n        const firstOfMonth = this.dateAdapter.createDate(this.dateAdapter.getYear(this.activeDate),\n            this.dateAdapter.getMonth(this.activeDate), 1);\n        this.firstWeekOffset =\n            (DAYS_PER_WEEK + this.dateAdapter.getDayOfWeek(firstOfMonth) -\n                this.dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n\n        this.createWeekCells();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.mcCalendarBody.focusActiveCell();\n    }\n\n    /** Creates McCalendarCells for the dates in this month. */\n    private createWeekCells() {\n        const daysInMonth = this.dateAdapter.getNumDaysInMonth(this.activeDate);\n        const dateNames = this.dateAdapter.getDateNames();\n\n        this.weeks = [[]];\n\n        for (let i = 0, cell = this.firstWeekOffset; i < daysInMonth; i++, cell++) {\n            if (cell === DAYS_PER_WEEK) {\n                this.weeks.push([]);\n                cell = 0;\n            }\n            const date = this.dateAdapter.createDate(\n                this.dateAdapter.getYear(this.activeDate),\n                this.dateAdapter.getMonth(this.activeDate), i + 1);\n            const enabled = this.shouldEnableDate(date);\n            const ariaLabel = this.dateAdapter.format(date, this.dateFormats.display.dateA11yLabel);\n            const cellClasses = this.dateClass ? this.dateClass(date) : undefined;\n\n            this.weeks[this.weeks.length - 1]\n                .push(new McCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses));\n        }\n    }\n\n    /** Date filter for the month */\n    private shouldEnableDate(date: D): boolean {\n        return !!date &&\n            (!this.dateFilter || this.dateFilter(date)) &&\n            (!this.minDate || this.dateAdapter.compareDate(date, this.minDate) >= 0) &&\n            (!this.maxDate || this.dateAdapter.compareDate(date, this.maxDate) <= 0);\n    }\n\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     */\n    private getDateInCurrentMonth(date: D | null): number | null {\n        return date && this.hasSameMonthAndYear(date, this.activeDate) ?\n            this.dateAdapter.getDate(date) : null;\n    }\n\n    /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\n    private hasSameMonthAndYear(d1: D | null, d2: D | null): boolean {\n        return !!(d1 && d2 && this.dateAdapter.getMonth(d1) === this.dateAdapter.getMonth(d2) &&\n            this.dateAdapter.getYear(d1) === this.dateAdapter.getYear(d2));\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Determines whether the user has the RTL layout direction. */\n    private isRtl() {\n        return this.dir && this.dir.value === 'rtl';\n    }\n}\n","// tslint:disable:no-magic-numbers\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { DateAdapter } from '@ptsecurity/cdk/datetime';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    UP_ARROW,\n    SPACE\n} from '@ptsecurity/cdk/keycodes';\n\nimport { McCalendarBody, McCalendarCell } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\nexport const yearsPerPage = 24;\n\nexport const yearsPerRow = 4;\n\n\n/**\n * An internal component used to display a year selector in the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-multi-year-view',\n    templateUrl: 'multi-year-view.html',\n    exportAs: 'mcMultiYearView',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McMultiYearView<D> implements AfterContentInit {\n    /** The date to display in this multi-year view (everything other than the year is ignored). */\n    @Input()\n    get activeDate(): D {\n        return this._activeDate;\n    }\n\n    set activeDate(value: D) {\n        const oldActiveDate = this._activeDate;\n        const validDate =\n            this.getValidDateOrNull(this.dateAdapter.deserialize(value)) || this.dateAdapter.today();\n        this._activeDate = this.dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n        if (Math.floor(this.dateAdapter.getYear(oldActiveDate) / yearsPerPage) !==\n            Math.floor(this.dateAdapter.getYear(this._activeDate) / yearsPerPage)) {\n            this.init();\n        }\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.selectedYear = this._selected && this.dateAdapter.getYear(this._selected);\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** A function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Emits when a new year is selected. */\n    @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits the selected year. This doesn't imply a change on the selected date */\n    @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits when any date is activated. */\n    @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** The body of calendar table */\n    @ViewChild(McCalendarBody) mcCalendarBody: McCalendarBody;\n\n    /** Grid of calendar cells representing the currently displayed years. */\n    years: McCalendarCell[][];\n\n    /** The year that today falls on. */\n    todayYear: number;\n\n    /** The year of the selected date. Null if the selected date is null. */\n    selectedYear: number | null;\n    private _activeDate: D;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() private dir?: Directionality\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        this._activeDate = this.dateAdapter.today();\n    }\n\n    ngAfterContentInit() {\n        this.init();\n    }\n\n    /** Initializes this multi-year view. */\n    init() {\n        this.todayYear = this.dateAdapter.getYear(this.dateAdapter.today());\n        const activeYear = this.dateAdapter.getYear(this._activeDate);\n        const activeOffset = activeYear % yearsPerPage;\n        this.years = [];\n        for (let i = 0, row: number[] = []; i < yearsPerPage; i++) {\n            row.push(activeYear - activeOffset + i);\n            if (row.length === yearsPerRow) {\n                this.years.push(row.map((year) => this.createCellForYear(year)));\n                row = [];\n            }\n        }\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** Handles when a new year is selected. */\n    onYearSelected(year: number) {\n        this.yearSelected.emit(this.dateAdapter.createDate(year, 0, 1));\n        const month = this.dateAdapter.getMonth(this.activeDate);\n        const daysInMonth =\n            this.dateAdapter.getNumDaysInMonth(this.dateAdapter.createDate(year, month, 1));\n        this.selectedChange.emit(this.dateAdapter.createDate(year, month,\n            Math.min(this.dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n\n    /** Handles keydown events on the calendar body when calendar is in multi-year view. */\n    handleCalendarBodyKeydown(event: KeyboardEvent): void {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n        const oldActiveDate = this._activeDate;\n        const isRtl = this.isRtl();\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n                break;\n            case HOME:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate,\n                    -this.dateAdapter.getYear(this._activeDate) % yearsPerPage);\n                break;\n            case END:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate,\n                    yearsPerPage - this.dateAdapter.getYear(this._activeDate) % yearsPerPage - 1);\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(\n                        this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(\n                        this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n                break;\n            case ENTER:\n            case SPACE:\n                this.onYearSelected(this.dateAdapter.getYear(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n\n        if (this.dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n\n        this.focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n\n    getActiveCell(): number {\n        return this.dateAdapter.getYear(this.activeDate) % yearsPerPage;\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.mcCalendarBody.focusActiveCell();\n    }\n\n    /** Creates an McCalendarCell for the given year. */\n    private createCellForYear(year: number) {\n        const yearName = this.dateAdapter.getYearName(this.dateAdapter.createDate(year, 0, 1));\n\n        return new McCalendarCell(year, yearName, yearName, this.shouldEnableYear(year));\n    }\n\n    /** Whether the given year is enabled. */\n    private shouldEnableYear(year: number) {\n        // disable if the year is greater than maxDate lower than minDate\n        if (year === undefined || year === null ||\n            (this.maxDate && year > this.dateAdapter.getYear(this.maxDate)) ||\n            (this.minDate && year < this.dateAdapter.getYear(this.minDate))) {\n            return false;\n        }\n\n        // enable if it reaches here and there's no filter defined\n        if (!this.dateFilter) {\n            return true;\n        }\n\n        const firstOfYear = this.dateAdapter.createDate(year, 0, 1);\n\n        // If any date in the year is enabled count the year as enabled.\n        for (let date = firstOfYear; this.dateAdapter.getYear(date) === year;\n             date = this.dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Determines whether the user has the RTL layout direction. */\n    private isRtl() {\n        return this.dir && this.dir.value === 'rtl';\n    }\n}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    UP_ARROW,\n    SPACE\n} from '@ptsecurity/cdk/keycodes';\n\nimport { McCalendarBody, McCalendarCell } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\n/**\n * An internal component used to display a single year in the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-year-view',\n    templateUrl: 'year-view.html',\n    exportAs: 'mcYearView',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McYearView<D> implements AfterContentInit {\n    /** The date to display in this year view (everything other than the year is ignored). */\n    @Input()\n    get activeDate(): D {\n        return this._activeDate;\n    }\n\n    set activeDate(value: D) {\n        const oldActiveDate = this._activeDate;\n        const validDate =\n            this.getValidDateOrNull(this.dateAdapter.deserialize(value)) || this.dateAdapter.today();\n        this._activeDate = this.dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n        if (this.dateAdapter.getYear(oldActiveDate) !== this.dateAdapter.getYear(this._activeDate)) {\n            this.init();\n        }\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.selectedMonth = this.getMonthInCurrentYear(this._selected);\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** A function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Emits when a new month is selected. */\n    @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits the selected month. This doesn't imply a change on the selected date */\n    @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits when any date is activated. */\n    @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** The body of calendar table */\n    @ViewChild(McCalendarBody) mcCalendarBody: McCalendarBody;\n\n    /** Grid of calendar cells representing the months of the year. */\n    months: McCalendarCell[][];\n\n    /** The label for this year (e.g. \"2017\"). */\n    yearLabel: string;\n\n    /** The month in this year that today falls on. Null if today is in a different year. */\n    todayMonth: number | null;\n\n    /**\n     * The month in this year that the selected Date falls on.\n     * Null if the selected Date is in a different year.\n     */\n    selectedMonth: number | null;\n    private _activeDate: D;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() private dir?: Directionality\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        this._activeDate = this.dateAdapter.today();\n    }\n\n    ngAfterContentInit() {\n        this.init();\n    }\n\n    /** Handles when a new month is selected. */\n    onMonthSelected(month: number) {\n        const normalizedDate =\n            this.dateAdapter.createDate(this.dateAdapter.getYear(this.activeDate), month, 1);\n\n        this.monthSelected.emit(normalizedDate);\n\n        const daysInMonth = this.dateAdapter.getNumDaysInMonth(normalizedDate);\n\n        this.selectedChange.emit(this.dateAdapter.createDate(\n            this.dateAdapter.getYear(this.activeDate), month,\n            Math.min(this.dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n\n    /** Handles keydown events on the calendar body when calendar is in year view. */\n    handleCalendarBodyKeydown(event: KeyboardEvent): void {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n        const oldActiveDate = this._activeDate;\n        const isRtl = this.isRtl();\n\n        const VERTICAL_SHIFT = 4;\n        const PAGE_SHIFT = 10;\n        const MAX_MONTH_INDEX = 11;\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, -VERTICAL_SHIFT);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, VERTICAL_SHIFT);\n                break;\n            case HOME:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate,\n                    -this.dateAdapter.getMonth(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate,\n                    MAX_MONTH_INDEX - this.dateAdapter.getMonth(this._activeDate));\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -PAGE_SHIFT : -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(this._activeDate, event.altKey ? PAGE_SHIFT : 1);\n                break;\n            case ENTER:\n            case SPACE:\n                this.onMonthSelected(this.dateAdapter.getMonth(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n\n        if (this.dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n\n        this.focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n\n    /** Initializes this year view. */\n    init() {\n        this.selectedMonth = this.getMonthInCurrentYear(this.selected);\n        this.todayMonth = this.getMonthInCurrentYear(this.dateAdapter.today());\n        this.yearLabel = this.dateAdapter.getYearName(this.activeDate);\n\n        const monthNames = this.dateAdapter.getMonthNames('short');\n\n        // First row of months only contains 5 elements so we can fit the year label on the same row.\n        // tslint:disable-next-line:no-magic-numbers\n        this.months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map((row) => row.map(\n            (month) => this.createCellForMonth(month, monthNames[month])));\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.mcCalendarBody.focusActiveCell();\n    }\n\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     */\n    private getMonthInCurrentYear(date: D | null) {\n        return date && this.dateAdapter.getYear(date) === this.dateAdapter.getYear(this.activeDate) ?\n            this.dateAdapter.getMonth(date) : null;\n    }\n\n    /** Creates an McCalendarCell for the given month. */\n    private createCellForMonth(month: number, monthName: string) {\n        const ariaLabel = this.dateAdapter.format(\n            this.dateAdapter.createDate(this.dateAdapter.getYear(this.activeDate), month, 1),\n            this.dateFormats.display.monthYearA11yLabel);\n\n        const newMonthName = monthName[0].toLocaleUpperCase() + monthName.substr(1);\n\n        return new McCalendarCell(\n            month, newMonthName, ariaLabel, this.shouldEnableMonth(month));\n    }\n\n    /** Whether the given month is enabled. */\n    private shouldEnableMonth(month: number) {\n\n        const activeYear = this.dateAdapter.getYear(this.activeDate);\n\n        if (month === undefined || month === null ||\n            this.isYearAndMonthAfterMaxDate(activeYear, month) ||\n            this.isYearAndMonthBeforeMinDate(activeYear, month)) {\n            return false;\n        }\n\n        if (!this.dateFilter) {\n            return true;\n        }\n\n        const firstOfMonth = this.dateAdapter.createDate(activeYear, month, 1);\n\n        // If any date in the month is enabled count the month as enabled.\n        for (let date = firstOfMonth; this.dateAdapter.getMonth(date) === month;\n             date = this.dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Tests whether the combination month/year is after this.maxDate, considering\n     * just the month and year of this.maxDate\n     */\n    private isYearAndMonthAfterMaxDate(year: number, month: number) {\n        if (this.maxDate) {\n            const maxYear = this.dateAdapter.getYear(this.maxDate);\n            const maxMonth = this.dateAdapter.getMonth(this.maxDate);\n\n            return year > maxYear || (year === maxYear && month > maxMonth);\n        }\n\n        return false;\n    }\n\n    /**\n     * Tests whether the combination month/year is before this.minDate, considering\n     * just the month and year of this.minDate\n     */\n    private isYearAndMonthBeforeMinDate(year: number, month: number) {\n        if (this.minDate) {\n            const minYear = this.dateAdapter.getYear(this.minDate);\n            const minMonth = this.dateAdapter.getMonth(this.minDate);\n\n            return year < minYear || (year === minYear && month < minMonth);\n        }\n\n        return false;\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Determines whether the user has the RTL layout direction. */\n    private isRtl() {\n        return this.dir && this.dir.value === 'rtl';\n    }\n}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    QueryList,\n    ViewEncapsulation,\n    ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { McButton } from '@ptsecurity/mosaic/button';\n\n\n/** Acceptable types for a button toggle. */\nexport type ToggleType = 'checkbox' | 'radio';\n\n/**\n * Provider Expression that allows mc-button-toggle-group to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nexport const MC_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McButtonToggleGroup),\n    multi: true\n};\n\n/** Change event object emitted by MсButtonToggle. */\nexport class McButtonToggleChange {\n    constructor(\n        /** The MсButtonToggle that emits the event. */\n        public source: McButtonToggle,\n        /** The value assigned to the MсButtonToggle. */\n        public value: any) {\n    }\n}\n\n/** Exclusive selection button toggle group that behaves like a radio-button group. */\n@Directive({\n    selector: 'mc-button-toggle-group',\n    providers: [MC_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR],\n    host: {\n        role: 'group',\n        class: 'mc-button-toggle-group',\n        '[class.mc-button-toggle-vertical]': 'vertical'\n    },\n    exportAs: 'mcButtonToggleGroup'\n})\nexport class McButtonToggleGroup implements ControlValueAccessor, OnInit, AfterContentInit {\n\n    /** Whether the toggle group is vertical. */\n    @Input()\n    get vertical(): boolean {\n        return this._vertical;\n    }\n\n    set vertical(value: boolean) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n\n    /** Value of the toggle group. */\n    @Input()\n    get value(): any {\n        const selected = this.selectionModel ? this.selectionModel.selected : [];\n\n        if (this.multiple) {\n            return selected.map((toggle) => toggle.value);\n        }\n\n        return selected[0] ? selected[0].value : undefined;\n    }\n\n    set value(newValue: any) {\n        this.setSelectionByValue(newValue);\n        this.valueChange.emit(this.value);\n    }\n\n    /** Selected button toggles in the group. */\n    get selected(): any {\n        const selected = this.selectionModel.selected;\n\n        return this.multiple ? selected : (selected[0] || null);\n    }\n\n    /** Whether multiple button toggles can be selected. */\n    @Input()\n    get multiple(): boolean {\n        return this._multiple;\n    }\n\n    set multiple(value: boolean) {\n        this._multiple = coerceBooleanProperty(value);\n    }\n\n    /** Child button toggle buttons. */\n    @ContentChildren(forwardRef(() => McButtonToggle)) buttonToggles: QueryList<McButtonToggle>;\n\n    /** Whether multiple button toggle group is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        if (!this.buttonToggles) {\n            return;\n        }\n\n        this.buttonToggles.forEach((toggle) => toggle.markForCheck());\n    }\n\n    /**\n     * Event that emits whenever the value of the group changes.\n     * Used to facilitate two-way data binding.\n     * @docs-private\n     */\n    @Output() readonly valueChange = new EventEmitter<any>();\n\n    /** Event emitted when the group's value changes. */\n    @Output() readonly change: EventEmitter<McButtonToggleChange> =\n        new EventEmitter<McButtonToggleChange>();\n    private _vertical = false;\n    private _multiple = false;\n    private _disabled = false;\n    private selectionModel: SelectionModel<McButtonToggle>;\n\n    /**\n     * Reference to the raw value that the consumer tried to assign. The real\n     * value will exclude any values from this one that don't correspond to a\n     * toggle. Useful for the cases where the value is assigned before the toggles\n     * have been initialized or at the same that they're being swapped out.\n     */\n    private rawValue: any;\n\n    constructor(private _changeDetector: ChangeDetectorRef) {}\n\n    /**\n     * The method to be called in order to update ngModel.\n     * Now `ngModel` binding is not supported in multiple selection mode.\n     */\n    // tslint:disable-next-line:no-empty\n    controlValueAccessorChangeFn: (value: any) => void = () => {};\n\n    /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n    // tslint:disable-next-line:no-empty\n    onTouched: () => any = () => {};\n\n    ngOnInit() {\n        this.selectionModel = new SelectionModel<McButtonToggle>(this.multiple, undefined, false);\n    }\n\n    ngAfterContentInit() {\n        this.selectionModel.select(...this.buttonToggles.filter((toggle) => toggle.checked));\n        this.disabled = this._disabled;\n    }\n\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value Value to be set to the model.\n     */\n    writeValue(value: any) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void) {\n        this.controlValueAccessorChangeFn = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    /** Dispatch change event with current selection and group value. */\n    emitChangeEvent(): void {\n        const selected = this.selected;\n        const source = Array.isArray(selected) ? selected[selected.length - 1] : selected;\n        const event = new McButtonToggleChange(source, this.value);\n        this.controlValueAccessorChangeFn(event.value);\n        this.change.emit(event);\n    }\n\n    /**\n     * Syncs a button toggle's selected state with the model value.\n     * @param toggle Toggle to be synced.\n     * @param select Whether the toggle should be selected.\n     * @param isUserInput Whether the change was a result of a user interaction.\n     */\n    syncButtonToggle(toggle: McButtonToggle, select: boolean, isUserInput = false) {\n        // Deselect the currently-selected toggle, if we're in single-selection\n        // mode and the button being toggled isn't selected at the moment.\n        if (!this.multiple && this.selected && !toggle.checked) {\n            (this.selected as McButtonToggle).checked = false;\n        }\n\n        if (select) {\n            this.selectionModel.select(toggle);\n        } else {\n            this.selectionModel.deselect(toggle);\n        }\n\n        // Only emit the change event for user input.\n        if (isUserInput) {\n            this.emitChangeEvent();\n        }\n\n        // Note: we emit this one no matter whether it was a user interaction, because\n        // it is used by Angular to sync up the two-way data binding.\n        this.valueChange.emit(this.value);\n    }\n\n    /** Checks whether a button toggle is selected. */\n    isSelected(toggle: McButtonToggle) {\n        return this.selectionModel.isSelected(toggle);\n    }\n\n    /** Determines whether a button toggle should be checked on init. */\n    isPrechecked(toggle: McButtonToggle) {\n        if (this.rawValue === undefined) {\n            return false;\n        }\n\n        if (this.multiple && Array.isArray(this.rawValue)) {\n            return this.rawValue.some((value) => toggle.value != null && value === toggle.value);\n        }\n\n        return toggle.value === this.rawValue;\n    }\n\n    /** Updates the selection state of the toggles in the group based on a value. */\n    private setSelectionByValue(value: any | any[]) {\n        this.rawValue = value;\n\n        if (!this.buttonToggles) {\n            return;\n        }\n\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw Error('Value must be an array in multiple-selection mode.');\n            }\n\n            this.clearSelection();\n            value.forEach((currentValue: any) => this.selectValue(currentValue));\n        } else {\n            this.clearSelection();\n            this.selectValue(value);\n        }\n    }\n\n    /** Clears the selected toggles. */\n    private clearSelection() {\n        this.selectionModel.clear();\n        this.buttonToggles.forEach((toggle) => toggle.checked = false);\n    }\n\n    /** Selects a value if there's a toggle that corresponds to it. */\n    private selectValue(value: any) {\n        const correspondingOption = this.buttonToggles.find((toggle) => {\n            return toggle.value != null && toggle.value === value;\n        });\n\n        if (correspondingOption) {\n            correspondingOption.checked = true;\n            this.selectionModel.select(correspondingOption);\n        }\n    }\n}\n\n/** Single button inside of a toggle group. */\n@Component({\n    selector: 'mc-button-toggle',\n    template: `\n        <button\n            mc-button\n            [disabled]=\"disabled\"\n            [attr.tabindex]=\"disabled ? -1 : tabIndex\"\n            (click)=\"onToggleClick()\">\n            <ng-content></ng-content>\n        </button>\n    `,\n    styleUrls: ['button-toggle.css'],\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcButtonToggle',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[class.mc-button-toggle-standalone]': '!buttonToggleGroup',\n        '[class.mc-button-toggle-checked]': 'checked',\n        class: 'mc-button-toggle',\n        // Always reset the tabindex to -1 so it doesn't conflict with the one on the `button`,\n        // but can still receive focus from things like cdkFocusInitial.\n        '[attr.tabindex]': '-1',\n        '[attr.disabled]': 'disabled || null',\n        '(focus)': 'focus()'\n    }\n})\nexport class McButtonToggle implements OnInit, OnDestroy {\n\n    /** Whether the button is checked. */\n    @Input()\n    get checked(): boolean {\n        return this.buttonToggleGroup ? this.buttonToggleGroup.isSelected(this) : this._checked;\n    }\n\n    set checked(value: boolean) {\n        const newValue = coerceBooleanProperty(value);\n\n        if (newValue !== this._checked) {\n            this._checked = newValue;\n\n            if (this.buttonToggleGroup) {\n                this.buttonToggleGroup.syncButtonToggle(this, this._checked);\n            }\n\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    // tslint:disable-next-line:no-reserved-keywords\n    type: ToggleType;\n\n    @ViewChild(McButton) mcButton: McButton;\n\n    /** McButtonToggleGroup reads this to assign its own value. */\n    @Input() value: any;\n\n    /** Tabindex for the toggle. */\n    @Input() tabIndex: number | null;\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled || (this.buttonToggleGroup && this.buttonToggleGroup.disabled);\n    }\n    set disabled(value: boolean) { this._disabled = coerceBooleanProperty(value); }\n\n    /** Event emitted when the group value changes. */\n    @Output() readonly change: EventEmitter<McButtonToggleChange> =\n        new EventEmitter<McButtonToggleChange>();\n\n    private isSingleSelector = false;\n    private _checked = false;\n    private _disabled: boolean = false;\n\n    constructor(\n        @Optional() public buttonToggleGroup: McButtonToggleGroup,\n        private changeDetectorRef: ChangeDetectorRef,\n        private focusMonitor: FocusMonitor,\n        private element: ElementRef\n    ) {}\n\n    ngOnInit() {\n        this.isSingleSelector = this.buttonToggleGroup && !this.buttonToggleGroup.multiple;\n        this.type = this.isSingleSelector ? 'radio' : 'checkbox';\n\n        if (this.buttonToggleGroup && this.buttonToggleGroup.isPrechecked(this)) {\n            this.checked = true;\n        }\n\n        this.focusMonitor.monitor(this.element.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        const group = this.buttonToggleGroup;\n\n        this.focusMonitor.stopMonitoring(this.element.nativeElement);\n\n        // Remove the toggle from the selection once it's destroyed. Needs to happen\n        // on the next tick in order to avoid \"changed after checked\" errors.\n        if (group && group.isSelected(this)) {\n            Promise.resolve().then(() => group.syncButtonToggle(this, false));\n        }\n    }\n\n    /** Focuses the button. */\n    focus(): void {\n        this.element.nativeElement.focus();\n    }\n\n    /** Checks the button toggle due to an interaction with the underlying native button. */\n    onToggleClick() {\n        if (this.disabled) {\n            return;\n        }\n\n        const newChecked = this.isSingleSelector ? true : !this._checked;\n\n        if (newChecked !== this._checked) {\n            this._checked = newChecked;\n            if (this.buttonToggleGroup) {\n                this.buttonToggleGroup.syncButtonToggle(this, this._checked, true);\n                this.buttonToggleGroup.onTouched();\n            }\n        }\n        // Emit a change event when it's the single selector\n        this.change.emit(new McButtonToggleChange(this, this.value));\n    }\n\n    /**\n     * Marks the button toggle as needing checking for change detection.\n     * This method is exposed because the parent button toggle group will directly\n     * update bound properties of the radio button.\n     */\n    markForCheck() {\n        // When the group value changes, the button will not be notified.\n        // Use `markForCheck` to explicit update button toggle's status.\n        this.changeDetectorRef.markForCheck();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McButtonToggle, McButtonToggleGroup } from './button-toggle.component';\n\n\n@NgModule({\n    imports: [McCommonModule, McButtonModule],\n    exports: [McCommonModule, McButtonToggleGroup, McButtonToggle],\n    declarations: [McButtonToggleGroup, McButtonToggle]\n})\nexport class McButtonToggleModule {}\n","import {\n    Output,\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef, Input,\n    OnDestroy, EventEmitter,\n    ViewEncapsulation, HostBinding\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n@Component({\n    selector: 'mc-card',\n    templateUrl: './card.component.html',\n    styleUrls: ['./card.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color'],\n    host: {\n        class: 'mc-card',\n        '[class.mc-card_readonly]': 'readonly',\n        '[class.mc-card_selected]': 'selected',\n        '(keydown)': 'onKeyDown($event)',\n        '(click)': 'onClick($event)'\n    }\n})\nexport class McCard implements OnDestroy {\n    get tabIndex(): number | null {\n        return this.readonly ? null : this._tabIndex;\n    }\n\n    @HostBinding('attr.tabIndex')\n    @Input()\n    set tabIndex(value: number | null) {\n        this._tabIndex = value;\n    }\n\n    @Input()\n    readonly = false;\n\n    @Input()\n    selected = false;\n\n    @Output()\n    selectedChange = new EventEmitter<boolean>();\n\n    private _tabIndex: number | null = 0;\n\n    constructor(private _elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        this._focusMonitor.monitor(this._elementRef.nativeElement, false);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this.hostElement.focus();\n    }\n\n    onClick($event: MouseEvent) {\n        if (!this.readonly) {\n            $event.stopPropagation();\n\n            this.selectedChange.emit(!this.selected);\n        }\n    }\n\n    private get hostElement() {\n        return this._elementRef.nativeElement;\n    }\n\n    onKeyDown($event: KeyboardEvent) {\n        switch ($event.keyCode) {\n            case SPACE:\n                if (!this.readonly) {\n                    $event.preventDefault();\n                    this.selectedChange.emit(!this.selected);\n                }\n                break;\n            default:\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McCard\n} from './card.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [McCard],\n    declarations: [McCard]\n})\nexport class McCardModule {}\n","import { InjectionToken } from '@angular/core';\n\n\n/**\n * Checkbox click action when user click on input element.\n * noop: Do not toggle checked or indeterminate.\n * check: Only toggle checked status, ignore indeterminate.\n * check-indeterminate: Toggle checked status, set indeterminate to false. Default behavior.\n * undefined: Same as `check-indeterminate`.\n */\nexport type McCheckboxClickAction = 'noop' | 'check' | 'check-indeterminate' | undefined;\n\n/**\n * Injection token that can be used to specify the checkbox click behavior.\n */\nexport const MC_CHECKBOX_CLICK_ACTION =\n    new InjectionToken<McCheckboxClickAction>('mc-checkbox-click-action');\n","import {\n    AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_CHECKBOX_CLICK_ACTION, McCheckboxClickAction } from './checkbox-config';\n\n\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n\n/**\n * Provider Expression that allows mc-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nexport const MC_CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McCheckbox),\n    multi: true\n};\n\n/**\n * Represents the different states that require custom transitions between them.\n * @docs-private\n */\nexport enum TransitionCheckState {\n    /** The initial state of the component before any user interaction. */\n    Init,\n    /** The state representing the component when it's becoming checked. */\n    Checked,\n    /** The state representing the component when it's becoming unchecked. */\n    Unchecked,\n    /** The state representing the component when it's becoming indeterminate. */\n    Indeterminate\n}\n\n/** Change event object emitted by McCheckbox. */\nexport class McCheckboxChange {\n    /** The source McCheckbox of the event. */\n    source: McCheckbox;\n    /** The new `checked` value of the checkbox. */\n    checked: boolean;\n}\n\n// Boilerplate for applying mixins to McCheckbox.\n/** @docs-private */\nexport class McCheckboxBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McCheckboxMixinBase:\n    HasTabIndexCtor &\n    CanColorCtor &\n    CanDisableCtor &\n    typeof McCheckboxBase =\n        mixinTabIndex(mixinColor(mixinDisabled(McCheckboxBase)));\n\n\n/**\n * A mosaic checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A McCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n */\n@Component({\n    selector: 'mc-checkbox',\n    templateUrl: 'checkbox.html',\n    styleUrls: ['checkbox.css'],\n    exportAs: 'mcCheckbox',\n    host: {\n        class: 'mc-checkbox',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-indeterminate]': 'indeterminate',\n        '[class.mc-checked]': 'checked',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-checkbox-label-before]': 'labelPosition == \"before\"'\n    },\n    providers: [MC_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCheckbox extends _McCheckboxMixinBase implements ControlValueAccessor,\n    AfterViewInit, OnDestroy, CanColor, CanDisable, HasTabIndex {\n\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\n     * take precedence so this may be omitted.\n     */\n    @Input('aria-label') ariaLabel: string = '';\n\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     */\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-checkbox-${++nextUniqueId}`;\n\n    /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n    @Input() id: string = this._uniqueId;\n\n    /** Returns the unique id for the visual hidden input. */\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    /** Whether the checkbox is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    private _required: boolean;\n\n    /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n    @Input() labelPosition: 'before' | 'after' = 'after';\n\n    /** Name value will be applied to the input element if present */\n    @Input() name: string | null = null;\n\n    /** Event emitted when the checkbox's `checked` value changes. */\n    @Output() readonly change: EventEmitter<McCheckboxChange> =\n        new EventEmitter<McCheckboxChange>();\n\n    /** Event emitted when the checkbox's `indeterminate` value changes. */\n    @Output() readonly indeterminateChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** The value attribute of the native input element */\n    @Input() value: string;\n\n    /** The native `<input type=\"checkbox\">` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n     * @docs-private\n     */\n    _onTouched: () => any = () => {\n    }\n\n    private _currentAnimationClass: string = '';\n\n    private _currentCheckState: TransitionCheckState = TransitionCheckState.Init;\n\n    private _controlValueAccessorChangeFn: (value: any) => void = () => {\n    }\n\n    constructor(elementRef: ElementRef,\n                private _changeDetectorRef: ChangeDetectorRef,\n                private _focusMonitor: FocusMonitor,\n                @Attribute('tabindex') tabIndex: string,\n                @Optional() @Inject(MC_CHECKBOX_CLICK_ACTION)\n                private _clickAction: McCheckboxClickAction) {\n        super(elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._inputElement.nativeElement)\n            .subscribe((focusOrigin) => this._onInputFocusChange(focusOrigin));\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._inputElement.nativeElement);\n    }\n\n    /**\n     * Whether the checkbox is checked.\n     */\n    @Input()\n    get checked(): boolean {\n        return this._checked;\n    }\n\n    set checked(value: boolean) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     */\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value != this.disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    @Input()\n    get indeterminate(): boolean {\n        return this._indeterminate;\n    }\n\n    set indeterminate(value: boolean) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = value;\n\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(TransitionCheckState.Indeterminate);\n            } else {\n                this._transitionCheckState(\n                    this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n    }\n\n    private _indeterminate: boolean = false;\n\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // This method is getting called whenever the label of the checkbox changes.\n        // Since the checkbox uses the OnPush strategy we need to notify it about the change\n        // that has been recognized by the cdkObserveContent directive.\n        this._changeDetectorRef.markForCheck();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: any) {\n        this._onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    _getAriaChecked(): 'true' | 'false' | 'mixed' {\n        return this.checked ? 'true' : (this.indeterminate ? 'mixed' : 'false');\n    }\n\n    private _transitionCheckState(newState: TransitionCheckState) {\n        const oldState = this._currentCheckState;\n        const element: HTMLElement = this._elementRef.nativeElement;\n\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n\n        this._currentCheckState = newState;\n\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n        }\n    }\n\n    private _emitChangeEvent() {\n        const event = new McCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    }\n\n    /** Function is called whenever the focus changes for the input element. */\n    private _onInputFocusChange(focusOrigin: FocusOrigin) {\n        if (focusOrigin) {\n            this._onTouched();\n        }\n    }\n\n    /** Toggles the `checked` state of the checkbox. */\n    toggle(): void {\n        this.checked = !this.checked;\n    }\n\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param event\n     */\n    _onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && this._clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && this._clickAction !== 'check') {\n\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n\n            this.toggle();\n            this._transitionCheckState(\n                this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        } else if (!this.disabled && this._clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mc-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n\n    /** Focuses the checkbox. */\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _onInteractionEvent(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n}\n","import {\n    Directive,\n    forwardRef,\n    Provider\n} from '@angular/core';\nimport {\n    CheckboxRequiredValidator,\n    NG_VALIDATORS\n} from '@angular/forms';\n\n\nexport const MC_CHECKBOX_REQUIRED_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => McCheckboxRequiredValidator),\n    multi: true\n};\n\n/**\n * Validator for Mosaic checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mc-checkbox`.\n */\n@Directive({\n    selector: `mc-checkbox[required][formControlName],\n             mc-checkbox[required][formControl], mc-checkbox[required][ngModel]`,\n    providers: [MC_CHECKBOX_REQUIRED_VALIDATOR],\n    host: { '[attr.required]': 'required ? \"\" : null' }\n})\nexport class McCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McCheckbox } from './checkbox';\nimport { McCheckboxRequiredValidator } from './checkbox-required-validator';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McCheckbox, McCheckboxRequiredValidator],\n    declarations: [McCheckbox, McCheckboxRequiredValidator]\n})\nexport class McCheckboxModule {\n}\n","import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { mixinColor, CanColor, CanColorCtor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\n@Directive({\n    selector: '[mc-icon]',\n    host: { class: 'mc mc-icon' }\n})\nexport class McIconCSSStyler {}\n\n\nexport class McIconBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McIconMixinBase: CanColorCtor & typeof McIconBase = mixinColor(McIconBase, ThemePalette.Empty);\n\n\n@Component({\n    selector: `[mc-icon]`,\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./icon.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color']\n})\nexport class McIcon extends _McIconMixinBase implements CanColor {\n    constructor(elementRef: ElementRef, @Attribute('mc-icon') iconName: string) {\n        super(elementRef);\n\n        elementRef.nativeElement.classList.add(iconName);\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McIcon,\n    McIconCSSStyler\n} from './icon.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McIcon,\n        McIconCSSStyler\n    ],\n    declarations: [\n        McIcon,\n        McIconCSSStyler\n    ]\n})\nexport class McIconModule {}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-cleaner',\n    template: '<i class=\"mc-icon_light\" mc-icon=\"mc-close-M_16\" color=\"second\"></i>'\n})\nexport class McCleaner {}\n","import { NgControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** The element ID for this control. */\n    readonly id: string;\n\n    /** The placeholder for this control. */\n    readonly placeholder: string;\n\n    /** Gets the NgControl for this control. */\n    readonly ngControl: NgControl | null;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Whether the control is empty. */\n    readonly empty: boolean;\n\n    /** Whether the control is required. */\n    readonly required: boolean;\n\n    /** Whether the control is disabled. */\n    readonly disabled: boolean;\n\n    /** Whether the control is in an error state. */\n    readonly errorState: boolean;\n\n    /**\n     * An optional name for the control type that can be used to distinguish `mc-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mc-form-field-type-{{controlType}}` to its root element.\n     */\n    readonly controlType?: string;\n\n    /** Handles a click on the control's container. */\n    abstract onContainerClick(event: MouseEvent): void;\n}\n","import { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldNumberControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** the number step */\n    step: number;\n\n    /** the number big step */\n    bigStep: number;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Handles step up and down */\n    abstract stepUp(step: number): void;\n\n    abstract stepDown(step: number): void;\n}\n","import { Directive, Input } from '@angular/core';\n\n\nlet nextUniqueId = 0;\n\n@Directive({\n    selector: 'mc-hint',\n    host: {\n        class: 'mc-hint',\n        '[attr.id]': 'id'\n    }\n})\nexport class McHint {\n    @Input() id: string = `mc-hint-${nextUniqueId++}`;\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcPrefix]'\n})\nexport class McPrefix {\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-stepper',\n    template: `\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-up mc-angle-down-L_16\"\n           (mousedown)=\"onStepUp($event)\">\n        </i>\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-down mc-angle-down-L_16\"\n           (mousedown)=\"onStepDown($event)\">\n        </i>\n    `\n})\nexport class McStepper {\n    @Output()\n    readonly stepUp: EventEmitter<void> = new EventEmitter<void>();\n    @Output()\n    readonly stepDown: EventEmitter<void> = new EventEmitter<void>();\n\n    onStepUp($event: MouseEvent) {\n        this.stepUp.emit();\n        $event.preventDefault();\n    }\n\n    onStepDown($event: MouseEvent) {\n        this.stepDown.emit();\n        $event.preventDefault();\n    }\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcSuffix]'\n})\nexport class McSuffix {\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren, Directive,\n    ElementRef,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { CanColor, CanColorCtor, mixinColor } from '@ptsecurity/mosaic/core';\nimport { EMPTY, merge } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\n\nimport { McCleaner } from './cleaner';\nimport { McFormFieldControl } from './form-field-control';\nimport { getMcFormFieldMissingControlError } from './form-field-errors';\nimport { McFormFieldNumberControl } from './form-field-number-control';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\nlet nextUniqueId = 0;\n\nexport class McFormFieldBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McFormFieldMixinBase: CanColorCtor & typeof McFormFieldBase = mixinColor(McFormFieldBase);\n\n@Component({\n    selector: 'mc-form-field',\n    exportAs: 'mcFormField',\n    templateUrl: 'form-field.html',\n    // McInput is a directive and can't have styles, so we need to include its styles here.\n    // The McInput styles are fairly minimal so it shouldn't be a big deal for people who\n    // aren't using McInput.\n    styleUrls: [\n        'form-field.css',\n        '../input/input.css',\n        '../textarea/textarea.css'\n    ],\n    host: {\n        class: 'mc-form-field',\n        '[class.mc-form-field_invalid]': '_control.errorState',\n        '[class.mc-disabled]': '_control.disabled',\n        '[class.mc-form-field_has-prefix]': 'hasPrefix',\n        '[class.mc-form-field_has-suffix]': 'hasSuffix',\n        '[class.mc-form-field_has-cleaner]': 'canShowCleaner',\n        '[class.mc-form-field_has-stepper]': 'canShowStepper',\n        '[class.mc-focused]': '_control.focused',\n        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n        '[class.ng-touched]': '_shouldForward(\"touched\")',\n        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n        '[class.ng-valid]': '_shouldForward(\"valid\")',\n        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n        '[class.ng-pending]': '_shouldForward(\"pending\")',\n        '(keydown)': 'onKeyDown($event)',\n        '(mouseenter)': 'onHoverChanged(true)',\n        '(mouseleave)': 'onHoverChanged(false)'\n    },\n    inputs: ['color'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class McFormField extends _McFormFieldMixinBase implements\n    AfterContentInit, AfterContentChecked, AfterViewInit, CanColor {\n\n    @ContentChild(McFormFieldControl) _control: McFormFieldControl<any>;\n    @ContentChild(McFormFieldNumberControl) _numberControl: McFormFieldNumberControl<any>;\n    @ContentChild(McStepper) _stepper: McStepper;\n\n    @ContentChildren(McHint) _hint: QueryList<McHint>;\n    @ContentChildren(McSuffix) _suffix: QueryList<McSuffix>;\n    @ContentChildren(McPrefix) _prefix: QueryList<McPrefix>;\n    @ContentChildren(McCleaner) _cleaner: QueryList<McCleaner>;\n\n    // Unique id for the internal form field label.\n    _labelId = `mc-form-field-label-${nextUniqueId++}`;\n\n    hovered: boolean = false;\n\n    constructor(public _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {\n        super(_elementRef);\n    }\n\n    ngAfterContentInit() {\n        this._validateControlChild();\n\n        if (this._control.controlType) {\n            this._elementRef.nativeElement.classList\n                .add(`mc-form-field-type-${this._control.controlType}`);\n\n            if (this._numberControl && this.hasStepper) {\n                this._stepper.stepUp.subscribe(this.onStepUp.bind(this));\n                this._stepper.stepDown.subscribe(this.onStepDown.bind(this));\n            }\n        }\n\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        this._control.stateChanges.pipe(startWith())\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n\n        if (this._numberControl) {\n            this._numberControl.stateChanges.pipe(startWith())\n                .subscribe(() => {\n                    this._changeDetectorRef.markForCheck();\n                });\n        }\n\n        // Run change detection if the value changes.\n        const valueChanges = this._control.ngControl && this._control.ngControl.valueChanges || EMPTY;\n\n        merge(valueChanges)\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n\n    ngAfterContentChecked() {\n        this._validateControlChild();\n    }\n\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._changeDetectorRef.detectChanges();\n    }\n\n    clearValue($event) {\n        $event.stopPropagation();\n\n        if (this._control && this._control.ngControl) {\n            this._control.ngControl.reset();\n        }\n    }\n\n    onContainerClick($event) {\n        if (this._control.onContainerClick) {\n            this._control.onContainerClick($event);\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === ESCAPE && this._control.focused && this.hasCleaner) {\n            if (this._control && this._control.ngControl) {\n                this._control.ngControl.reset();\n            }\n\n            event.preventDefault();\n        }\n    }\n\n    onHoverChanged(isHovered: boolean) {\n        if (isHovered !== this.hovered) {\n            this.hovered  = isHovered;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    onStepUp() {\n        if (this._numberControl) {\n            this._numberControl.stepUp(this._numberControl.step);\n        }\n    }\n\n    onStepDown() {\n        if (this._numberControl) {\n            this._numberControl.stepDown(this._numberControl.step);\n        }\n    }\n\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop: keyof NgControl): boolean {\n        const ngControl = this._control ? this._control.ngControl : null;\n\n        return ngControl && ngControl[prop];\n    }\n\n    /** Throws an error if the form field's control is missing. */\n    protected _validateControlChild() {\n        if (!this._control) {\n            throw getMcFormFieldMissingControlError();\n        }\n    }\n\n    get hasHint(): boolean {\n        return this._hint && this._hint.length > 0;\n    }\n\n    get hasSuffix(): boolean {\n        return this._suffix && this._suffix.length > 0;\n    }\n\n    get hasPrefix(): boolean {\n        return this._prefix && this._prefix.length > 0;\n    }\n\n    get hasCleaner(): boolean {\n        return this._cleaner && this._cleaner.length > 0;\n    }\n\n    get hasStepper(): boolean {\n        return !!this._stepper;\n    }\n\n    get canShowCleaner(): boolean {\n        return this.hasCleaner &&\n            this._control &&\n            this._control.ngControl\n                ? this._control.ngControl.value && !this._control.disabled\n                : false;\n    }\n\n\n    get disabled(): boolean {\n        return this._control && this._control.disabled;\n    }\n\n    get canShowStepper(): boolean {\n        return this._numberControl &&\n            !this.disabled &&\n            (\n                this._numberControl.focused ||\n                this.hovered\n            );\n    }\n}\n\n@Directive({\n    selector: 'mc-form-field[mcFormFieldWithoutBorders]',\n    exportAs: 'mcFormFieldWithoutBorders',\n    host: { class: 'mc-form-field_without-borders' }\n})\nexport class McFormFieldWithoutBorders {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCleaner } from './cleaner';\nimport { McFormField, McFormFieldWithoutBorders } from './form-field';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\n@NgModule({\n    declarations: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ],\n    imports: [CommonModule, McIconModule],\n    exports: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ]\n})\nexport class McFormFieldModule {\n}\n","import { InjectionToken } from '@angular/core';\n\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n","function sanitizeNumber(value: number): number | null {\n    return !isFinite(value) || isNaN(value)\n        ? null\n        : value;\n}\n\nfunction getPrecision(value: number): number {\n    const arr = value.toString().split('.');\n\n    return arr.length === 1\n        ? 1\n        // tslint:disable-next-line:no-magic-numbers\n        :  Math.pow(10, arr[1].length);\n}\n\nfunction add(value1: number, value2: number) {\n    const precision = Math.max(getPrecision(value1), getPrecision(value2));\n\n    const res = (value1 * precision + value2 * precision) / precision;\n\n    return sanitizeNumber(res);\n}\n\nexport const stepUp = (value: number | null,\n                       max: number,\n                       min: number,\n                       step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(min, step);\n\n        return res === null ? null : Math.min(res, max);\n    }\n\n    res = add(value, step);\n\n    return res === null ? null : Math.max(Math.min(res, max), min);\n};\n\nexport const stepDown = (value: number | null,\n                         max: number,\n                         min: number,\n                         step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(max, -step);\n\n        return res === null ? null : Math.max(res, min);\n    }\n\n    res = add(value, -step);\n\n    return res === null ? null : Math.min(Math.max(res, min), max);\n};\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\nexport function isBoolean(val: any): val is boolean { return typeof val === 'boolean'; }\n\nexport function toBoolean(value: any): boolean {\n    return value != null && `${value}` !== 'false';\n}\n","import { NgModule, InjectionToken, Optional, Inject, isDevMode } from '@angular/core';\nimport { BidiModule } from '@ptsecurity/cdk/bidi';\n\n\n// Injection token that configures whether the Mosaic sanity checks are enabled.\nexport const MC_SANITY_CHECKS = new InjectionToken<boolean>('mc-sanity-checks', {\n    providedIn: 'root',\n    factory: MC_SANITY_CHECKS_FACTORY\n});\n\nexport function MC_SANITY_CHECKS_FACTORY(): boolean {\n    return true;\n}\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Mosaic\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., McTabsModule).\n */\n@NgModule({\n    imports: [ BidiModule ],\n    exports: [ BidiModule ]\n})\nexport class McCommonModule {\n    // Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n    private _hasDoneGlobalChecks = false;\n\n    // Reference to the global `document` object.\n    private _document = typeof document === 'object' && document ? document : null;\n\n    // Reference to the global 'window' object.\n    private _window = typeof window === 'object' && window ? window : null;\n\n    constructor(@Optional() @Inject(MC_SANITY_CHECKS) private _sanityChecksEnabled: boolean) {\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n\n    // Whether any sanity checks are enabled\n    private _areChecksEnabled(): boolean {\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    }\n\n    // Whether the code is running in tests.\n    private _isTestEnv() {\n        // tslint:disable-next-line\n        return this._window && (this._window['__karma__'] || this._window['jasmine']);\n    }\n\n    private _checkDoctypeIsDefined(): void {\n        if (this._document && !this._document.doctype) {\n            console.warn(\n                'Current document does not have a doctype. This may cause ' +\n                'some Mosaic components not to behave as expected.'\n            );\n        }\n    }\n\n    private _checkThemeIsPresent(): void {\n        if (this._document && typeof getComputedStyle === 'function') {\n            const testElement = this._document.createElement('div');\n\n            testElement.classList.add('mc-theme-loaded-marker');\n            this._document.body.appendChild(testElement);\n\n            const computedStyle = getComputedStyle(testElement);\n\n            // In some situations, the computed style of the test element can be null. For example in\n            // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n            if (computedStyle && computedStyle.display !== 'none') {\n                console.warn(\n                    'Could not find Mosaic core theme. Most Mosaic ' +\n                    'components may not work as expected. For more info refer ' +\n                    'to the theming guide: link there'\n                );\n            }\n\n            this._document.body.removeChild(testElement);\n        }\n    }\n}\n","import { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanDisable {\n    disabled: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableCtor = Constructor<CanDisable>;\n\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): CanDisableCtor & T {\n    return class extends base {\n        get disabled() {\n            return this._disabled;\n        }\n\n        set disabled(value: any) {\n            this._disabled = coerceBooleanProperty(value);\n        }\n\n        private _disabled: boolean = false;\n\n        constructor(...args: any[]) {\n            // tslint:disable-next-line\n            super(...args);\n        }\n    };\n}\n","import { ElementRef } from '@angular/core';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanColor {\n    color: ThemePalette;\n}\n\n/** @docs-private */\nexport type CanColorCtor = Constructor<CanColor>;\n\nexport interface HasElementRef {\n    _elementRef: ElementRef;\n}\n\nexport enum ThemePalette {\n    Primary = 'primary',\n    Second = 'second',\n    Error = 'error',\n    Default = 'second',\n    Empty = ''\n}\n\n/** Mixin to augment a directive with a `color` property. */\nexport function mixinColor<T extends Constructor<HasElementRef>>(\n    base: T,\n    defaultColor: ThemePalette = ThemePalette.Default\n): CanColorCtor & T {\n    return class extends base {\n\n        private _color: ThemePalette;\n\n        get color(): ThemePalette {\n            return this._color;\n        }\n\n        set color(value: ThemePalette) {\n            const colorPalette = value || defaultColor;\n\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mc-${this._color}`);\n                }\n\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mc-${colorPalette}`);\n                }\n\n                this._color = colorPalette;\n            }\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n\n            this.color = defaultColor;\n        }\n    };\n}\n\n","import { Constructor } from './constructor';\nimport { CanDisable } from './disabled';\n\n\nexport interface HasTabIndex {\n    tabIndex: number;\n}\n\nexport type HasTabIndexCtor = Constructor<HasTabIndex>;\n\n// Mixin to augment a directive with a `tabIndex` property.\nexport function mixinTabIndex<T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0): HasTabIndexCtor & T {\n    return class extends base {\n        get tabIndex(): number {\n            return this.disabled ? -1 : this._tabIndex;\n        }\n\n        set tabIndex(value: number) {\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n\n        private _tabIndex: number = defaultTabIndex;\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n    };\n}\n","import { FormControl, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\nimport { ErrorStateMatcher } from '../error/error-options';\n\nimport { Constructor } from './constructor';\n\n\n/** @docs-private */\nexport interface CanUpdateErrorState {\n\n    readonly stateChanges: Subject<void>;\n\n    errorState: boolean;\n    errorStateMatcher: ErrorStateMatcher;\n\n    updateErrorState();\n}\n\n/** @docs-private */\nexport type CanUpdateErrorStateCtor = Constructor<CanUpdateErrorState>;\n\n/** @docs-private */\nexport interface HasErrorState {\n    parentFormGroup: FormGroupDirective;\n    parentForm: NgForm;\n    defaultErrorStateMatcher: ErrorStateMatcher;\n    ngControl: NgControl;\n}\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T): CanUpdateErrorStateCtor & T {\n    return class extends base {\n        /** Whether the component is in an error state. */\n        errorState: boolean = false;\n\n        /**\n         * Stream that emits whenever the state of the input changes such that the wrapping\n         * `MatFormField` needs to run change detection.\n         */\n        readonly stateChanges = new Subject<void>();\n\n        errorStateMatcher: ErrorStateMatcher;\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this.parentFormGroup || this.parentForm;\n            const matcher = this.errorStateMatcher || this.defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control as FormControl : null;\n            const newState = matcher.isErrorState(control, parent);\n\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n","import {\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ENTER, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Subject } from 'rxjs';\n\nimport { McOptgroup } from './optgroup';\n\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet uniqueIdCounter = 0;\n\n/** Event object emitted by McOption when selected or deselected. */\nexport class McOptionSelectionChange {\n    constructor(public source: McOption, public isUserInput = false) {}\n}\n\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * @docs-private\n */\nexport interface IMcOptionParentComponent {\n    multiple?: boolean;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_OPTION_PARENT_COMPONENT =\n    new InjectionToken<IMcOptionParentComponent>('MC_OPTION_PARENT_COMPONENT');\n\n/**\n * Single option inside of a `<mc-select>` element.\n */\n@Component({\n    selector: 'mc-option',\n    exportAs: 'mcOption',\n    host: {\n        '[attr.tabindex]': 'getTabIndex()',\n        class: 'mc-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-option-multiple]': 'multiple',\n        '[class.mc-active]': 'active',\n        '[class.mc-disabled]': 'disabled',\n        '[id]': 'id',\n\n        '(click)': 'selectViaInteraction()',\n        '(keydown)': 'handleKeydown($event)'\n    },\n    styleUrls: ['./option.css'],\n    templateUrl: './option.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McOption implements AfterViewChecked, OnDestroy {\n    /** The form value of the option. */\n    @Input() value: any;\n\n    /** Event emitted when the option is selected or deselected. */\n    // tslint:disable-next-line:no-output-on-prefix\n    @Output() readonly onSelectionChange = new EventEmitter<McOptionSelectionChange>();\n\n    /** Emits when the state of the option changes and any parents have to be notified. */\n    readonly stateChanges = new Subject<void>();\n\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue(): string {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this.getHostElement().textContent || '').trim();\n    }\n\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n        return this.parent && this.parent.multiple;\n    }\n\n    get id(): string {\n        return this._id;\n    }\n\n    private _id = `mc-option-${uniqueIdCounter++}`;\n\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    private _selected = false;\n\n    @Input()\n    get disabled() {\n        return (this.group && this.group.disabled) || this._disabled;\n    }\n\n    set disabled(value: any) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    private _disabled = false;\n\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active(): boolean {\n        return this._active;\n    }\n\n    private _active = false;\n\n    private mostRecentViewValue = '';\n\n    constructor(\n        private readonly element: ElementRef,\n        private readonly changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_OPTION_PARENT_COMPONENT) private readonly parent: IMcOptionParentComponent,\n        @Optional() readonly group: McOptgroup\n    ) {}\n\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mc-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n\n            if (viewValue !== this.mostRecentViewValue) {\n                this.mostRecentViewValue = viewValue;\n                this.stateChanges.next();\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n    }\n\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent();\n        }\n    }\n\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent();\n        }\n    }\n\n    focus(): void {\n        const element = this.getHostElement();\n\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles(): void {\n        if (!this._active) {\n            this._active = true;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles(): void {\n        if (this._active) {\n            this._active = false;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        return this.viewValue;\n    }\n\n    /** Ensures the option is selected when activated from the keyboard. */\n    handleKeydown(event: KeyboardEvent): void {\n        // tslint:disable-next-line\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\n            this.selectViaInteraction();\n\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    selectViaInteraction(): void {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent(true);\n        }\n    }\n\n    getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    getHostElement(): HTMLElement {\n        return this.element.nativeElement;\n    }\n\n    /** Emits the selection change event. */\n    private emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McOptionSelectionChange(this, isUserInput));\n    }\n}\n\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nexport function countGroupLabelsBeforeOption(\n    optionIndex: number,\n    options: QueryList<McOption>,\n    optionGroups: QueryList<McOptgroup>\n): number {\n\n    if (optionGroups.length) {\n        const optionsArray = options.toArray();\n        const groups = optionGroups.toArray();\n\n        let groupCounter = 0;\n\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n\n        return groupCounter;\n    }\n\n    return 0;\n}\n\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionIndex Index of the option to be scrolled into the view.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nexport function getOptionScrollPosition(\n    optionIndex: number,\n    optionHeight: number,\n    currentScrollPosition: number,\n    panelHeight: number\n): number {\n    const optionOffset = optionIndex * optionHeight;\n\n    if (optionOffset < currentScrollPosition) { return optionOffset; }\n\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n\n    return currentScrollPosition;\n}\n\n","import { ConnectionPositionPair } from '@ptsecurity/cdk/overlay';\n\n\nexport const POSITION_MAP: { [key: string]: ConnectionPositionPair } = {\n    top         : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom'\n    },\n    topCenter   : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topLeft     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topRight    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    right       : {\n        originX : 'end',\n        originY : 'center',\n        overlayX: 'start',\n        overlayY: 'center'\n    },\n    rightTop    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'top',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    rightBottom : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    bottom      : {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomCenter: {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomLeft  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    bottomRight : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    left        : {\n        originX : 'start',\n        originY : 'center',\n        overlayX: 'end',\n        overlayY: 'center'\n    },\n    leftTop     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    leftBottom  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    }\n};\n\nexport const DEFAULT_4_POSITIONS = _objectValues([\n    POSITION_MAP.top, POSITION_MAP.right, POSITION_MAP.bottom, POSITION_MAP.left\n]);\n\nfunction arrayMap<T, S>(array: T[], iteratee: (item: T, index: number, arr: T[]) => S): S[] {\n    let index = -1;\n    const length = array == null ? 0 : array.length;\n    const result = Array(length);\n\n    while (++index < length) {\n        result[ index ] = iteratee(array[ index ], index, array);\n    }\n\n    return result;\n}\nfunction baseValues<T>(object: { [key: string]: T } | T[], props: string[]): T[] {\n    return arrayMap(props,  (key) => {\n        return object[ key ];\n    });\n}\nfunction _objectValues<T>(object: { [key: string]: T } | T[]): T[] {\n    return object == null ? [] : baseValues(object, Object.keys(object));\n}\n","/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nexport function getMcSelectDynamicMultipleError(): Error {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nexport function getMcSelectNonArrayValueError(): Error {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nexport function getMcSelectNonFunctionValueError(): Error {\n    return Error('`compareWith` must be a function.');\n}\n","export function getMcFormFieldMissingControlError(): Error {\n  return Error('mc-form-field must contain a McFormFieldControl.');\n}\n","export function getMcInputUnsupportedTypeError(inputType: string): Error {\n    return Error(`Input type \"${inputType}\" isn't supported by mcInput.`);\n}\n","/** @docs-private */\nexport function createMissingDateImplError(provider: string) {\n    return Error(\n        `McDatepicker: No provider found for ${provider}. You must import one of the existing ` +\n        `modules at your application root or provide a custom implementation or use exists ones.`);\n}\n","export function throwMcDropdownMissingError() {\n    throw Error(`mcDropdownTriggerFor: must pass in an mc-dropdown instance.\n    Example:\n      <mc-dropdown #dropdown=\"mcDropdown\"></mc-dropdown>\n      <button [mcDropdownTriggerFor]=\"dropdown\"></button>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mc-dropdown xPosition=\"before\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mc-dropdown yPosition=\"above\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n","import { NgModule, Directive, ElementRef, QueryList } from '@angular/core';\n\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(McLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({\n    selector: '[mc-line], [mcLine]',\n    host: { class: 'mc-line' }\n})\nexport class McLine {}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nexport class McLineSetter {\n    constructor(private _lines: QueryList<McLine>, private _element: ElementRef) {\n        this._setLineClass(this._lines.length);\n\n        this._lines.changes.subscribe(() => {\n            this._setLineClass(this._lines.length);\n        });\n    }\n\n    private _setLineClass(count: number): void {\n        this._resetClasses();\n        if (count === 2 || count === 3) {\n            this._setClass(`mc-${count}-line`, true);\n        } else if (count > 3) {\n            this._setClass(`mc-multi-line`, true);\n        }\n    }\n\n    private _resetClasses(): void {\n        this._setClass('mc-2-line', false);\n        this._setClass('mc-3-line', false);\n        this._setClass('mc-multi-line', false);\n    }\n\n    private _setClass(className: string, isAdd: boolean): void {\n        if (isAdd) {\n            this._element.nativeElement.classList.add(className);\n        } else {\n            this._element.nativeElement.classList.remove(className);\n        }\n    }\n}\n\n@NgModule({\n    imports: [],\n    exports: [McLine],\n    declarations: [McLine]\n})\nexport class McLineModule {}\n","import { Injectable } from '@angular/core';\nimport { FormGroupDirective, NgForm, FormControl } from '@angular/forms';\n\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n@Injectable()\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\n\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n@Injectable({ providedIn: 'root' })\nexport class ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\n\nexport type McPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mc-primary .mc-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mc-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n@Component({\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'mc-pseudo-checkbox',\n    styleUrls: ['pseudo-checkbox.css'],\n    templateUrl: 'pseudo-checkbox.partial.html',\n    host: {\n        class: 'mc-pseudo-checkbox',\n        '[class.mc-indeterminate]': 'state === \"indeterminate\"',\n        '[class.mc-checked]': 'state === \"checked\"',\n        '[class.mc-disabled]': 'disabled'\n    }\n})\nexport class McPseudoCheckbox {\n    @Input() state: McPseudoCheckboxState = 'unchecked';\n\n    @Input() disabled: boolean = false;\n}\n","import { NgModule } from '@angular/core';\n\nimport { McPseudoCheckbox } from './pseudo-checkbox/pseudo-checkbox';\n\n\n@NgModule({\n    exports: [McPseudoCheckbox],\n    declarations: [McPseudoCheckbox]\n})\nexport class McPseudoCheckboxModule {}\n\n\nexport * from './pseudo-checkbox/pseudo-checkbox';\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class McMeasureScrollbarService {\n\n    get scrollBarWidth(): number {\n        if (this._scrollbarWidth) {\n            return this._scrollbarWidth;\n        }\n        this.initScrollBarWidth();\n\n        return this._scrollbarWidth;\n    }\n\n    private _scrollbarWidth: number;\n    private scrollbarMeasure = {\n        position: 'absolute',\n        top: '-9999px',\n        width: '50px',\n        height: '50px',\n        overflow: 'scroll'\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private document: any\n    ) {\n        this.initScrollBarWidth();\n    }\n\n    initScrollBarWidth() {\n        const scrollDiv = this.document.createElement('div');\n\n        // tslint:disable-next-line\n        for (const scrollProp in this.scrollbarMeasure) {\n            if (this.scrollbarMeasure.hasOwnProperty(scrollProp)) {\n                scrollDiv.style[scrollProp] = this.scrollbarMeasure[scrollProp];\n            }\n        }\n\n        this.document.body.appendChild(scrollDiv);\n\n        const width = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n        this.document.body.removeChild(scrollDiv);\n        this._scrollbarWidth = width;\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\nimport { mixinDisabled, CanDisable, CanDisableCtor } from '../common-behaviors/index';\n\n\n// Boilerplate for applying mixins to McOptgroup.\n/** @docs-private */\nexport class McOptgroupBase {}\n\nexport const McOptgroupMixinBase: CanDisableCtor & typeof McOptgroupBase = mixinDisabled(McOptgroupBase);\n\n// Counter for unique group ids.\nlet uniqueOptgroupIdCounter = 0;\n\n/**\n * Component that is used to group instances of `mc-option`.\n */\n@Component({\n    selector: 'mc-optgroup',\n    exportAs: 'mcOptgroup',\n    templateUrl: 'optgroup.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    styleUrls: ['optgroup.css'],\n    host: {\n        class: 'mc-optgroup',\n        role: 'group',\n        '[class.mc-optgroup-disabled]': 'disabled',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-labelledby]': 'labelId'\n    }\n})\nexport class McOptgroup extends McOptgroupMixinBase implements CanDisable {\n    /** Label for the option group. */\n    @Input() label: string;\n\n    /** Unique id for the underlying label. */\n    labelId: string = `mc-optgroup-label-${uniqueOptgroupIdCounter++}`;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McPseudoCheckboxModule } from '../selection/index';\n\nimport { McOptgroup } from './optgroup';\nimport { McOption } from './option';\n\n\n@NgModule({\n    imports: [CommonModule, McPseudoCheckboxModule],\n    exports: [McOption, McOptgroup],\n    declarations: [McOption, McOptgroup]\n})\nexport class McOptionModule {}\n\n\nexport * from './option';\nexport * from './optgroup';\n","import { InjectionToken } from '@angular/core';\n\n\n/** InjectionToken that can be used to specify the global label options. */\nexport const MC_LABEL_GLOBAL_OPTIONS =\n    new InjectionToken<LabelOptions>('mc-label-global-options');\n\n/** Type for the available floatLabel values. */\nexport type FloatLabelType = 'always' | 'never' | 'auto';\n\n/** Configurable options for floating labels. */\nexport interface LabelOptions {\n    /**\n     * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n     * Default behavior is assumed to be `auto`.\n     */\n    float?: FloatLabelType;\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\nexport const fadeAnimation: AnimationTriggerMetadata =  trigger('fadeAnimation', [\n    state('void', style({ opacity: 0 })),\n    state('true', style({ opacity: 1 })),\n    state('false', style({ opacity: 0 })),\n    transition('* => true', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n    transition('* => void', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)'))\n]);\n","export enum AnimationCurves {\n    StandardCurve = 'cubic-bezier(0.4,0.0,0.2,1)',\n    DecelerationCurve = 'cubic-bezier(0.0,0.0,0.2,1)',\n    AccelerationCurve = 'cubic-bezier(0.4,0.0,1,1)',\n    SharpCurve = 'cubic-bezier(0.4,0.0,0.6,1)'\n}\n","import {\n    animate,\n    AnimationTriggerMetadata,\n    state,\n    style,\n    transition,\n    trigger,\n    query,\n    animateChild,\n    group\n} from '@angular/animations';\n\n\n/**\n * The following are all the animations for the mc-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mc-select animation.\n */\nexport const mcSelectAnimations: {\n    readonly transformPanel: AnimationTriggerMetadata;\n    readonly fadeInContent: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        transition('void => *', group([\n            query('@fadeInContent', animateChild()),\n            animate('150ms cubic-bezier(0.25, 0.8, 0.25, 1)')\n        ])),\n        transition('* => void', [\n            animate('250ms 100ms linear', style({ opacity: 0 }))\n        ])\n    ]),\n\n    /**\n     * This animation fades in the background color and text content of the\n     * select's options. It is time delayed to occur 100ms after the overlay\n     * panel has transformed in.\n     */\n    fadeInContent: trigger('fadeInContent', [\n        state('showing', style({ opacity: 1 })),\n        transition('void => showing', [\n            style({ opacity: 0 }),\n            animate('150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const transformPanel = mcSelectAnimations.transformPanel;\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const fadeInContent = mcSelectAnimations.fadeInContent;\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation\n} from '@angular/core';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport { mixinColor, mixinDisabled, CanColor, CanDisable, CanDisableCtor, CanColorCtor } from '@ptsecurity/mosaic/core';\n\n\n@Directive({\n    selector: 'button[mc-button], a[mc-button]',\n    host: {\n        '[class.mc-button]': '!isIconButton',\n        '[class.mc-icon-button]': 'isIconButton'\n    }\n})\nexport class McButtonCssStyler {\n    nativeElement: Element;\n\n    get isIconButton(): boolean {\n        return this.icons.length > 0;\n    }\n\n    private icons: HTMLElement[] = [];\n\n    constructor(elementRef: ElementRef) {\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        /**\n         * Here we had to use native selectors due to number of angular issues about ContentChildren limitations\n         * https://github.com/angular/angular/issues/16299\n         * https://github.com/angular/angular/issues/8563\n         * https://github.com/angular/angular/issues/14769\n         */\n        this.icons = Array.from(this.nativeElement.querySelectorAll('.mc-icon'));\n        this.addClassModificatorForIcons();\n    }\n\n    private addClassModificatorForIcons() {\n        const twoIcons = 2;\n\n        if (this.icons.length === 1) {\n            const iconElement = this.icons[0];\n            const COMMENT_NODE = 8;\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling && iconElement.nextSibling.nodeType !== COMMENT_NODE) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-icon-button_left');\n                }\n\n                if (iconElement.previousSibling && iconElement.previousSibling.nodeType !== COMMENT_NODE) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-icon-button_right');\n                }\n            }\n        } else if (this.icons.length === twoIcons) {\n            const firstIconElement = this.icons[0];\n            const secondIconElement = this.icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n\nexport class McButtonBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {}\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McButtonMixinBase:\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McButtonBase =\n        mixinColor(mixinDisabled(McButtonBase));\n\n\n@Component({\n    selector: 'button[mc-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[disabled]': 'disabled || null'\n    }\n})\nexport class McButton extends McButtonMixinBase implements OnDestroy, CanDisable, CanColor {\n    constructor(elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        super(elementRef);\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this.getHostElement().focus();\n    }\n\n    getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n\n\n@Component({\n    selector: 'a[mc-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': 'haltDisabledEvents($event)'\n    }\n})\nexport class McAnchor extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McButton,\n    McAnchor,\n    McButtonCssStyler\n} from './button.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McButton,\n        McAnchor,\n        McButtonCssStyler\n    ],\n    declarations: [\n        McButton,\n        McAnchor,\n        McButtonCssStyler\n    ]\n})\nexport class McButtonModule {}\n"],"names":["SELECT_PANEL_PADDING_X","ref","McSidepanelService","prototype","closeAll","this","closeSidepanels","openedSidepanels","getSidepanelById","id","find","sidepanel","attachContainer","overlayRef","config","openedSidepanelsWithSamePosition","getOpenedSidepanelsWithSamePosition","injector","PortalInjector","WeakMap","McSidepanelConfig","MC_SIDEPANEL_WITH_INDENT","length","MC_SIDEPANEL_WITH_SHADOW","containerPortal","ComponentPortal","McSidepanelContainerComponent","undefined","attach","instance","createInjector","sidepanelRef","sidepanelContainer","injectionTokens","MC_SIDEPANEL_DATA","data","McSidepanelRef","createOverlay","overlayConfig","OverlayConfig","hasBackdrop","backdropClass","getBackdropClass","maxWidth","panelClass","overlayPanelClass","scrollStrategy","overlay","scrollStrategies","block","positionStrategy","position","global","create","sidepanels","reverse","slice","forEach","close","hasOpenedSidepanelWithBackdrop","some","requiredBackdrop","filter","removeOpenSidepanel","index","indexOf","splice","type","Injectable","Overlay","Injector","decorators","Optional","Inject","args","MC_SIDEPANEL_DEFAULT_OPTIONS","SkipSelf","McSidepanelClose","elementRef","sidepanelService","ngOnInit","_this","setTimeout","getClosestSidepanel","ngOnChanges","changes","proxiedChange","mcSidepanelClose","sidepanelResult","currentValue","Directive","selector","host","(click)","class","ElementRef","Input","McSidepanelHeader","Component","template","closeable","McSidepanelBody","McSidepanelFooter","McSidepanelActions","McSidepanelModule","NgModule","imports","CommonModule","OverlayModule","PortalModule","McCommonModule","McIconModule","providers","declarations","entryComponents","exports","McSplitterComponent","ngZone","renderer","areas","_disabled","_gutterSize","isDragging","areaPositionDivider","listeners","Object","defineProperty","_direction","direction","disabled","coerceBooleanProperty","gutterSize","size","coerceNumberProperty","addArea","area","order","getSize","setOrder","push","initialSize","setStyle","isVertical","onMouseDown","event","leftAreaIndex","rightAreaIndex","leftArea","rightArea","startPoint","x","screenX","y","screenY","item","disableFlex","setSize","runOutsideAngular","listen","onMouseUp","e","onMouseMove","removeArea","indexToRemove","endPoint","offset","newLeftAreaSize","newRightAreaSize","minLeftAreaSize","getMinSize","minRightAreaSize","rightAreaOffset","unsubscribe","pop","property","value","nativeElement","preserveWhitespaces","styles","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","NgZone","Renderer2","McGutterDirective","_order","_size","getCursor","getState","coerceCssPixelValue","setAttr","state","Error","attribute","setAttribute","McSplitterAreaDirective","splitter","removeStyle","ngOnDestroy","sz","getSizeProperty","getOffsetSizeProperty","getComputedStyle","parseFloat","getMinSizeProperty","style","McSplitterModule","nextUniqueId","McToggleBase","_elementRef","_McToggleMixinBase","mixinTabIndex","mixinColor","mixinDisabled","ThemePalette","Primary","McToggleChange","McToggleComponent","_super","_focusMonitor","_changeDetectorRef","tabIndex","call","labelPosition","ariaLabel","ariaLabelledby","_uniqueId","name","_checked","change","EventEmitter","_onTouchedCallback","_onChangeCallback","_","parseInt","monitor","tslib_1.__extends","markForCheck","stopMonitoring","focus","focusVia","_inputElement","_getAriaChecked","checked","_onInteractionEvent","stopPropagation","_onLabelTextChange","_onInputClick","_updateModelValue","_emitChangeEvent","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","source","emit","exportAs","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","inputs","[id]","[attr.id]","[class.mc-disabled]","[class.mc-toggle_off]","animations","trigger","left","transition","animate","FocusMonitor","ChangeDetectorRef","String","Attribute","ViewChild","Output","McToggleModule","A11yModule","McTooltipComponent","cdr","prefix","positions","DEFAULT_4_POSITIONS","classMap","mcVisibleChange","mcMouseEnterDelay","mcMouseLeaveDelay","_mcTrigger","_mcPlacement","_mcVisible","BehaviorSubject","onHideSubject","Subject","closeOnInteraction","availablePositions","POSITION_MAP","$visible","asObservable","_mcTitle","isTitleString","TemplateRef","unshift","mcPlacement","visible","next","show","hideTid","clearTimeout","isContentEmpty","mcTrigger","showTid","mcVisible","hide","setClassMap","mcTitle","afterHidden","handleBodyInteraction","outputs","fadeAnimation","(body:click)","MC_TOOLTIP_SCROLL_STRATEGY","InjectionToken","MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","useFactory","mcTooltipScrollStrategyFactory","McTooltip","scrollDispatcher","hostView","isTooltipOpen","isDynamicTooltip","parentDisabled","$unsubscribe","manualListeners","Map","destroyed","title","updateCompValue","_mcMouseEnterDelay","_mcMouseLeaveDelay","_mcTooltipClass","tooltip","externalValue","strategy","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withPositions","scrollableAncestors","getAncestorScrollContainers","withScrollableContainers","positionChanges","pipe","takeUntil","subscribe","onPositionChange","scrollableViewProperties","isOverlayClipped","run","updatePosition","detachments","detach","hasAttached","$event","updatedPlacement","keys","key","connectionPair","originX","originY","overlayX","overlayY","handlePositioningUpdate","pos","overlayElement","clientHeight","element","currentContainer","top","split","initElementRefListeners","dispose","listener","removeEventListener","clear","complete","handleKeydown","keyCode","ESCAPE","handleTouchend","set","addEventListener","portal","distinctUntilChanged","getConfig","origin","getOrigin","getOverlayPosition","tslib_1.__assign","main","fallback","originPosition","isLtr","getMcTooltipInvalidPositionError","_a","invertPosition","overlayPosition","newX","newY","(keydown)","(touchend)","ScrollDispatcher","ViewContainerRef","Directionality","setTitle","mcTooltipClass","isOpen","HostBinding","isParentDisabled","McToolTipModule","VERSION","Version","[attr.tabindex]","[class.mc-select-invalid]","[class.mc-select-required]","(focus)","(blur)","(window:resize)","mcSelectAnimations","transformPanel","fadeInContent","McFormFieldControl","McTreeSelect","CdkTree","ViewportRuler","ErrorStateMatcher","NgForm","FormGroupDirective","McFormField","NgControl","Self","MC_SELECT_SCROLL_STRATEGY","panel","overlayDir","CdkConnectedOverlay","tags","ViewChildren","McTag","customTrigger","ContentChild","McTreeSelectTrigger","tree","McTreeSelection","openedChange","openedStream","closedStream","selectionChange","valueChange","errorStateMatcher","sortComparator","placeholder","required","multiple","autoSelect","compareWith","McTreeSelectMixinBase","McTreeSelectModule","CdkTreeModule","McTreeModule","McTagModule","McPseudoCheckboxModule","MC_SELECT_SCROLL_STRATEGY_PROVIDER","MC_TEXTAREA_VALUE_ACCESSOR","McTextareaBase","defaultErrorStateMatcher","parentForm","parentFormGroup","ngControl","McTextareaMixinBase","mixinErrorState","McTextarea","inputValueAccessor","canGrow","focused","stateChanges","controlType","uid","_required","lineHeight","freeRowsHeight","minHeight","valueAccessor","previousNativeValue","growObserver","fromEvent","growSubscription","grow","bind","_id","paddingTop","paddingBottom","ngDoCheck","updateErrorState","dirtyCheckNativeValue","textarea","outerHeight","window","diff","height","Math","max","scrollHeight","focusChanged","isFocused","isBadInput","onContainerClick","newValue","validity","badInput","getGrowHeight","toString","[class.mc-textarea-resizable]","[attr.placeholder]","[attr.aria-invalid]","[disabled]","[required]","McTextareaModule","FormsModule","hours","minutes","seconds","HHmmss","HHmm","TIMEFORMAT_PLACEHOLDERS","TimeFormats","DEFAULT_TIME_FORMAT","HOURS_MINUTES_SECONDS_REGEXP","RegExp","HOURS_MINUTES_REGEXP","HOURS_ONLY_REGEXP","uniqueComponentIdSuffix","formValidators","formValidatorOnChangeRegistrators","validatorOnChange","c","validatorOnChangeHandler","get","McTimepickerBase","McTimepickerMixinBase","ɵ1","validate","__validatorOnChangeHandler","validator","registerOnValidatorChange","McTimepicker","_minTime","_maxTime","onChange","noop","Validators","compose","parseValidator","minTimeValidator","maxTimeValidator","applyInputChanges","_timeFormat","formatValue","map","timeFormatKey","minValue","minDateTime","getDateFromTimeString","maxValue","maxDateTime","onTouched","onBlur","onPaste","preventDefault","clipboardUserInput","clipboardData","getData","onInput","initialCursorStart","selectionStart","initialCursorEnd","selectionEnd","isAutocompleteTriggered","getParsedTimeParts","hoursOnly","hoursAndMinutes","hoursAndMinutesAndSeconds","doTimestringReformat","errors","createSelectionOfTimeComponentInInput","setProperty","getTimeStringFromDate","timeFormat","onKeyDown","getKeyCode","upDownTimeByArrowKeys","switchSelectionBetweenTimeparts","applyParams","changedTime","timeToApply","currentDateTimeInput","updateValueAndValidity","result","cursorPos","modifiedTimePart","getTimeEditMetrics","incrementTime","decrementTime","getCursorPositionOfPrevTimePartStart","getCursorPositionOfNextTimePartStart","code","newEditParams","cursorStartPosition","cursorEndPosition","dateVal","whatToIncrement","TimeParts","getTimeDigitsFromDate","getDateFromTimeDigits","whatToDecrement","timeString","timeDevider","nextDividerPos","cursorPosition","minutesIndex","hoursIndex","secondsIndex","tempVal","getNumberWithLeadingZero","getHours","getMinutes","getSeconds","match","trim","Number","resultDate","Date","isNaN","getTime","digit","mcTimepickerParse","text","isTimeLowerThenMin","mcTimepickerLowerThenMintime","isTimeGreaterThenMax","mcTimepickerHigherThenMaxtime","timeToCompare","[attr.time-format]","[attr.min-time]","[attr.max-time]","[attr.value]","(input)","(paste)","NG_VALIDATORS","useValue","MC_INPUT_VALUE_ACCESSOR","minTime","maxTime","McTimepickerModule","PlatformModule","Right","Left","Top","Bottom","McSidepanelPosition","disableClose","Void","Visible","Hidden","mcSidepanelTransformAnimation","right","in","out","bottom","mcSidepanelAnimations","sidepanelState","transform","params","transformIn","transformOut","AnimationCurves","AccelerationCurve","DecelerationCurve","changeDetectorRef","sidepanelConfig","withIndent","withShadow","animationState","McSidepanelAnimationState","animationStateChanged","attachComponentPortal","validatePortalAttached","setAnimation","setPanelClass","portalOutlet","attachTemplatePortal","enter","detectChanges","exit","onAnimation","animationTransform","classList","add","tabindex","role","aria-modal","[@state]","(@state.start)","(@state.done)","Boolean","CdkPortalOutlet","BasePortalOutlet","uniqueId","containerInstance","afterClosed$","afterOpened$","phaseName","toState","take","merge","backdropClick","keydownEvents","closed","detachBackdrop","afterClosed","afterOpened","defaultOptions","parentSidepanelService","openedSidepanelsAtThisLevel","open","componentOrTemplateRef","fullConfig","container","TemplatePortal","$implicit","contentRef","min","optimalScrollPosition","maxScroll","McSelect","onRemoveMatcherItem","option","deselect","calculateHiddenItems","empty","visibleItems","totalItemsWidth","getTotalItemsWidthInMatcher","totalVisibleItemsWidth","tag","offsetTop","offsetHeight","getBoundingClientRect","width","hiddenItems","itemsCounter","querySelector","matcherList","itemsCounterShowed","matcherListWidth","matcherWidth","triggerClone","cloneNode","remove","_renderer","appendChild","querySelectorAll","handleClosedKeydown","isArrowKey","DOWN_ARROW","UP_ARROW","LEFT_ARROW","RIGHT_ARROW","ENTER","SPACE","altKey","keyManager","onKeydown","handleOpenKeydown","manager","HOME","END","setFirstItemActive","setLastItemActive","activeItem","_multiple","A","ctrlKey","hasDeselectedOptions_1","options","selected","select","previouslyFocusedIndex","activeItemIndex","shiftKey","selectViaInteraction","initializeSelection","Promise","resolve","then","setSelectionByValue","_value","Array","isArray","getMcSelectNonArrayValueError","selectionModel","selectValue","sortValues","correspondingOption","setActiveItem","_compareWith","error","isDevMode","console","warn","initKeyManager","ActiveDescendantKeyManager","withTypeAhead","withVerticalOrientation","withHorizontalOrientation","isRtl","tabOut","destroy","_panelOpen","scrollActiveOptionIntoView","resetOptions","changedOrDestroyed","optionSelectionChanges","onSelect","isUserInput","apply","setOptionIds","wasSelected","isSelected","propagateChanges","options_1","toArray","sort","a","b","fallbackValue","valueToEmit","_onChange","McSelectChange","optionIds","join","highlightCorrectOption","activeOptionIndex","labelCount","countGroupLabelsBeforeOption","optionGroups","scrollTop","getOptionScrollPosition","getItemHeight","getOptionIndex","reduce","current","calculateOverlayPosition","itemHeight","items","getItemCount","panelHeight","scrollContainerHeight","selectedOptionOffset","scrollBuffer","calculateOverlayScroll","offsetY","calculateOverlayOffsetY","checkOverlayWithinViewport","calculateOverlayOffsetX","offsetX","overlayRect","viewportSize","_viewportRuler","getViewportSize","first","group","leftOverflow","rightOverflow","round","topSpaceAvailable","triggerRect","bottomSpaceAvailable","panelHeightTop","abs","totalPanelHeight","panelHeightBottom","adjustPanelUp","adjustPanelDown","transformOrigin","getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","optionHeightAdjustment","MC_OPTION_PARENT_COMPONENT","McSelectTrigger","ContentChildren","McOption","descendants","McOptgroup","McSelectMixinBase","McSelectModule","McOptionModule","McFormFieldModule","McTreeSelectChange","McTreeSelectBase","viewportRuler","dir","parentFormField","scrollStrategyFactory","oneMoreText","triggerFontSize","panelDoneAnimating","panelDoneAnimatingStream","o","defer","onSelectionChange","onStable","switchMap","_autoSelect","_focused","o1","o2","_placeholder","getMcSelectDynamicMultipleError","getMcSelectNonFunctionValueError","panelOpen","ngAfterContentInit","SelectionModel","changed","added","removed","ngAfterViewInit","startWith","updateSelectedOptions","toggle","fontSize","viewValue","selectedOptions","isEmpty","onFadeInDone","onFocus","onAttached","positionChange","getPanelTheme","color","selectedIndex","optionOffsetFromScrollTop","halfOptionHeight","onRemoveSelectedOption","selectedOption","originalOnKeyDown","tabLabelCount","labelWrappers","selectedIndexChanged","scrollToLabel","_selectedIndex","checkScrollingControls","scrollDistanceChanged","updateTabScrollPosition","McTabHeader","selectFocusedIndex","focusIndex","dirChange","observableOf","resize","realign","updatePagination","FocusKeyManager","getLayoutDirection","withWrap","updateActiveItem","requestAnimationFrame","newFocusIndex","indexFocused","setTabFocus","onContentChanges","textContent","currentTextContent","zoneCallback","checkPaginationEnabled","isValidIndex","tab","showPaginationControls","containerEl","tabListContainer","scrollLeft","scrollWidth","offsetWidth","scrollDistance","translateX","tabList","scrollHeader","scrollDir","viewLength","labelIndex","selectedLabel","labelBeforePos","labelAfterPos","getOffsetLeft","getOffsetWidth","beforeVisiblePos","afterVisiblePos","isEnabled","disableScrollBefore","disableScrollAfter","getMaxScrollDistance","[class.mc-tab-header__pagination-controls_enabled]","[class.mc-tab-header_rtl]","McTabLabelWrapper","McTabHeaderBase","McLightTabsCssStyler","McAlignTabsCenterCssStyler","McAlignTabsEndCssStyler","McStretchTabsCssStyler","nextId","McTabChangeEvent","MC_TABS_CONFIG","McTabGroupBase","mcTabGroupMixinBase","McTabGroup","lightTabs","defaultConfig","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","indexToSelect","tabBodyWrapperHeight","tabsSubscription","Subscription","EMPTY","tabLabelSubscription","_dynamicHeight","lightTab","groupId","animationDuration","ngAfterContentChecked","clampTabIndex","isFirstRun_1","createChangeEvent","tabs","isActive","subscribeToTabLabels","i","getTabLabelId","getTabContentId","setTabBodyWrapperHeight","tabHeight","wrapper","tabBodyWrapper","removeTabBodyWrapperHeight","handleClick","tabHeader","getTabIndex","[class.mc-tab-group_dynamic-height]","[class.mc-tab-group_inverted-header]","dynamicHeight","McTab","McTabNavBase","mcTabNavMixinBase","McTabNav","McTabLinkBase","mcTabLinkMixinBase","McTabLink","focusMonitor","[attr.aria-current]","[attr.aria-disabled]","[attr.tabIndex]","[class.mc-active]","active","McTabsModule","McTabLabel","McTabContent","McTabBody","McTabBodyPortal","McTagBase","_McTagMixinBase","_addClassModificatorForIcons","icons","contentChildren","iconElement","previousElementSibling","nextElementSibling","nextSibling","previousSibling","firstIconElement","secondIconElement","McIcon","McSelectBase","_ngZone","_dir","_parentFormField","_scrollStrategyFactory","_onTouched","McProgressSpinner","percentage","mode","_McProgressSpinnerMixinBase","McProgressSpinnerModule","McRadioChange","McRadioGroupBase","_McRadioGroupMixinBase","MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","McRadioGroup","_changeDetector","_name","_selected","_isInitialized","_labelPosition","controlValueAccessorChangeFn","updateRadioButtonNames","v","markRadiosForCheck","updateSelectedRadioFromValue","checkSelectedRadioButton","toBoolean","touch","emitChangeEvent","_radios","radio","isAlreadySelected","McRadioButton","McRadioButtonBase","_McRadioButtonMixinBase","radioGroup","_radioDispatcher","removeUniqueSelectionListener","newCheckedState","notify","newDisabledState","onInputClick","onInputChange","groupValueChanged","[class.mc-checked]","UniqueSelectionDispatcher","ariaDescribedby","McRadioModule","McTreeNodeDef","CdkTreeNodeDef","McTreeNodePadding","arguments","baseLeftPadding","_indent","iconWidth","withIcon","paddingIndent","nodeLevel","treeNode","treeControl","getLevel","level","leftPadding","isExpandable","setPadding","CdkTreeNodePadding","indent","McTreeNodeToggle","CdkTreeNodeToggle","MC_TREE_OPTION_PARENT_COMPONENT","McTreeOptionChange","uniqueIdCounter","McTreeOption","parent","_active","setSelected","setActiveStyles","setInactiveStyles","getHeight","clientRects","getClientRects","getHostElement","emitSelectionChangeEvent","setFocusedOption","[attr.disabled]","[class.mc-selected]","CdkTreeNode","McTreeNavigationChange","McTreeSelectionChange","McTreeSelectionBase","differs","McTreeSelectionBaseMixin","noUnselect","navigationChange","rawValue","log","withShift","withCtrl","collapse","expand","toggleFocusedOption","PAGE_UP","setPreviousPageItemActive","PAGE_DOWN","setNextPageItemActive","updateScrollSize","withScrollSize","floor","previousIndex_1","previousActiveItemIndex","activeIndex_1","canDeselectLast","emitNavigationEvent","focusedIndex","focusedOption","renderNodeChanges","dataDiffer","viewContainer","parentData","nodeOutlet","arrayOfInstances","_embeddedViews","view","viewDef","def","nodes","node","nodeMatchedQueries","matchedQueryIds","nodeData","nodeIndex","reset","notifyOnChanges","IterableDiffers","CdkTreeNodeOutlet","MC_TREE_DIRECTIVES","McTreeFlattener","transformFunction","getChildren","flattenNode","resultNodes","parentMap","flatNode","children","child","childParentMap","flattenNodes","structuredData","expandFlattenedNodes","results","currentExpand","isExpanded","McTreeFlatDataSource","treeFlattener","initialData","flattenedData","expandedData","_data","dataNodes","connect","collectionViewer","viewChange","expansionModel","disconnect","DataSource","McTreeNestedDataSource","CdkPortal","ctorParameters","McTabBase","mcTabMixinBase","viewContainerRef","textLabel","contentPortal","hasOwnProperty","explicitContent","implicitContent","templateLabel","read","mcTabsAnimations","translateTab","onCentering","beforeCentering","afterLeavingCenter","onCentered","dirChangeSubscription","computePositionAnimationState","positionIndex","bodyPosition","computePositionFromOrigin","onTranslateTabStarted","isCentering","isCenterPosition","onTranslateTabComplete","fromState","portalHost","PortalHostDirective","content","componentFactoryResolver","centeringSub","leavingSub","ComponentFactoryResolver","McTabLabelWrapperBase","mcTabLabelWrapperMixinBase","offsetLeft","_scrollDistance","coercedValue","_mcCancelLoading","mcOnCancel","mcGetContainer","McModalComponent","_mcClosable","_mcMask","_mcMaskClosable","_mcOkLoading","mcAfterOpen","mcAfterClose","mcOkText","mcCancelText","isComponent","mcContent","createDynamicComponent","isModalButtons","mcFooter","formatModalButtons","HTMLElement","OverlayRef","modalControl","registerModal","handleVisibleStateChange","firstChange","contentComponentRef","bodyContainer","insert","autoFocusButtonOk","changeVisibleFromInside","triggerOk","onClickOkCancel","triggerCancel","getInstance","getContentComponentRef","getContentComponent","getElement","onClickMask","mcMask","mcMaskClosable","contains","isModalType","mcModalType","onClickCloseBtn","ok","mcOnOk","cancel","loadingKey","caseClose_1","doClose","isPromise","handleThen","catch","isNonEmptyString","isTemplateRef","Type","animation","closeResult","changeBodyOverflow","animateTo","getButtonCallableProp","prop","onButtonClick","button","loading","changeAnimationState","maskAnimationClassMap","modalAnimationClassMap","_b","changeDetector","isVisible","updateTransformOrigin","buttons","autoLoading","component","factory","cfr","resolveComponentFactory","childInjector","McModalRef","parentInjector","mcComponentParams","assign","modalElement","modalContainer","lastPosition","ModalUtil","getLastClickPosition","plusNum","openModals","document","body","mcMeasureScrollbarService","scrollBarWidth","McMeasureScrollbarService","McModalControlService","DOCUMENT","mcZIndex","mcWidth","mcWrapClassName","mcClassName","mcStyle","mcCloseByESC","mcClosable","mcMaskStyle","mcBodyStyle","mcOkType","mcOkLoading","mcCancelLoading","CssUnitPipe","defaultUnit","formatted","Pipe","ModalBuilderForService","createModal","changeProps","destroyModal","modalRef","McModalService","afterAllClose","confirm","confirmType","success","simpleConfirm","delete","McModalModule","McButtonModule","MC_NAVBAR_CONTAINER","MC_NAVBAR_ITEM","MC_NAVBAR_BRAND","MC_NAVBAR_TITLE","McNavbarLogo","McNavbarBrand","McNavbarTitle","McNavbarItemBase","_McNavbarMixinBase","McNavbarItem","_platform","_cdRef","dropdownItems","isCollapsed","_subscription","encodeURI","dropdownContent","denyClickIfDisabled","_focusMonitor$","hasDropdownContent","listenClickOutside","startListenFocusDropdownItems","stopListenFocusDropdownItems","isActiveDropdownLink","link","isBrowser","location","href","handleClickByItem","toggleDropdown","isNavbarItem","handleClickByDropdownItem","forceCloseDropdown","_dropdownElements","el","events","eventListeners","hasAttribute","stopImmediatePropagation","Platform","collapsedTitle","dropdownItemTmpl","McNavbarContainer","cssClasses","CollapsibleItem","_collapsed","processCollapsed","collapsed","updateCollapsedClass","CachedItemWidth","itemsForCollapse","_collapsedItemsWidth","calculateAndCacheCollapsedItemsWidth","updateTitle","acc","getTitle","computedTitle","getAttribute","decodeURI","innerText","removeAttribute","McNavbar","forceRecalculateItemsWidth","resizeDebounceInterval","firstLevelElement","secondLevelElements","resizeObserver","debounceTime","_resizeSubscription","updateCollapsed","_itemsWidths","calculateAndCacheItemsWidth","_totalItemsWidths","calculateAndCacheTotalItemsWidth","collapseDelta","maxAllowedWidth","itemsWidths","canCollapse","collapsedItemsWidth","getOuterElementWidth","getPropertyValue","allItemsSelector","allItems","from","getItemsForCollapse","McNavbarModule","idIterator","McProgressBarBase","_McProgressBarMixinBase","McProgressBar","McProgressBarModule","McProgressSpinnerBase","mcDropdownAnimations","transformDropdown","fadeInItems","MC_DROPDOWN_PANEL","McDropdown","MC_DROPDOWN_DEFAULT_OPTIONS","xPosition","yPosition","overlapTrigger","templateRef","McDropdownItem","lazyContent","McDropdownContent","MC_DROPDOWN_SCROLL_STRATEGY","MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER","MC_DROPDOWN_SCROLL_STRATEGY_FACTORY","McDropdownTrigger","_overlay","_element","_viewContainerRef","_scrollStrategy","_openedBy","dropdownOpened","dropdownClosed","_overlayRef","_opened","_closeSubscription","_hoverSubscription","dropdown","_check","_destroy","_cleanUpSubscriptions","_createOverlay","_setPosition","_portal","_closingActions","_init","_startAnimation","opened","_resetAnimation","_animationDone","_attached","_reset","_setIsOpened","focusFirstItem","throwMcDropdownMissingError","_getOverlayConfig","_subscribeToPositions","withLockedPosition","setPositionClasses","originFallbackX","overlayFallbackY","_c","originFallbackY","_d","overlayFallbackX","backdrop","(touchstart)","McDropdownModule","McContentComponent","[class.mc-layout-content]","McFooterComponent","[class.mc-layout-footer]","McHeaderComponent","[class.mc-layout-header]","McLayoutComponent","hasSidebar","[class.mc-layout]","[class.mc-layout-has-sidebar]","McSidebarComponent","mcLayoutComponent","_mcWidth","mcCollapsedWidth","mcCollapsedChange","collapsible","mcCollapsed","[class.mc-layout-sidebar]","[class.mc-layout-sidebar-collapsed]","[style.flex]","[style.max-width.px]","[style.min-width.px]","[style.width.px]","Host","mcCollapsible","McLayoutModule","McListOption","listSelection","_hasFocus","checkboxPosition","_reportValueChange","wasSelected_1","_lineSetter","McLineSetter","_lines","_removeOptionFromList","getLabel","_text","_getHeight","_handleClick","_handleFocus","_handleBlur","_getHostElement","[class.mc-focused]","McListSelection","McLine","MC_SELECTION_LIST_VALUE_ACCESSOR","McListSelectionChange","McListSelectionBase","_McListSelectionMixinBase","horizontal","_modelChanges","_keyManager","_tempValues","_setOptionsFromValues","_i","selectAll","deselectAll","_canDeselectLast","values","getSelectedOptionValues","_isValidIndex","listOption","optionIndex","_getOptionIndex","setPreviousItemActive","setNextItemActive","_onKeyDown","_getOptionByValue","[tabIndex]","McListBase","McList","McListSubheaderCssStyler","McListItemBase","McListItem","McListModule","McLineModule","McLinkBase","_McLinkBase","McLink","McLinkModule","parentService","rootOpenModals","rootAfterAllClose","rootRegisteredMetaMap","registeredMetaMap","hasRegistered","afterOpenSubscription","afterOpen","afterCloseSubscription","afterClose","removeOpenModal","has","listenDocumentClick","clientX","clientY","ModalUtil$1","_currentView","moveFocusOnNextTick","McCalendar","calendarHeaderPortal","headerComponent","McCalendarHeader","activeDate","startAt","dateAdapter","today","startView","ngAfterViewChecked","focusActiveCell","intlChanges","minDate","maxDate","dateFilter","getCurrentViewComponent","init","updateTodaysDate","currentView","monthView","yearView","multiYearView","dateSelected","date","sameDate","selectedChange","yearSelectedInMultiYearView","normalizedYear","yearSelected","monthSelectedInYearView","normalizedMonth","monthSelected","userSelected","userSelection","goToDateInView","getValidDateOrNull","obj","isDateInstance","isValid","McDatepickerIntl","DateAdapter","MC_DATE_FORMATS","dateClass","McMonthView","McYearView","McMultiYearView","mcDatepickerAnimations","opacity","fadeInCalendar","Element","matches","msMatchesSelector","datepickerUid","MC_DATEPICKER_SCROLL_STRATEGY","MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER","MC_DATEPICKER_SCROLL_STRATEGY_FACTORY","McDatepickerContentBase","McDatepickerContentMixinBase","McDatepickerContent","calendar","[@transformPanel]","McDatepicker","disabledChange","selectedChanged","validSelected","focusedElementBeforeOpen","inputSubscription","createMissingDateImplError","_startAt","datepickerInput","deserialize","_color","getThemePalette","popupRef","popupComponentRef","oldValue","selectYear","selectMonth","registerInput","input","activeElement","openAsPopup","calendarPortal","isAttached","completeClose","createPopup","datepicker","setColor","createPopupPositionStrategy","calendarHeaderComponent","MC_DATEPICKER_VALUE_ACCESSOR","McDatepickerInput","MC_DATEPICKER_VALIDATORS","McDatepickerInputEvent","target","targetElement","dateFormats","formField","dateChange","dateInput","datepickerSubscription","localeSubscription","lastValueValid","cvaOnChange","mcDatepickerParse","minValidator","control","controlValue","compareDate","mcDatepickerMin","actual","maxValidator","mcDatepickerMax","filterValidator","mcDatepickerFilter","localeChanges","oldDate","_min","_max","blur","isAltDownArrow","readOnly","parse","format","display","[attr.aria-haspopup]","[attr.aria-owns]","[attr.min]","[attr.max]","(change)","mcDatepicker","McDatepickerToggleIcon","McDatepickerToggle","intl","defaultTabIndex","parsedTabIndex","watchStateChanges","datepickerDisabled","inputDisabled","datepickerToggled","[class.mc-datepicker-toggle_active]","[class.mc-warn]","customIcon","McDatepickerModule","McCalendarBody","McDivider","_vertical","_inset","[attr.aria-orientation]","[class.mc-divider-vertical]","[class.mc-divider-inset]","vertical","inset","McDividerModule","_template","_componentFactoryResolver","_appRef","_injector","_document","context","_outlet","DomPortalOutlet","createElement","insertBefore","outletElement","ApplicationRef","McDropdownItemBase","_McDropdownItemMixinBase","_parentDropdownPanel","addItem","removeItem","_getTabIndex","_checkDisabled","textNodeType","TEXT_NODE","output","childNodes","length_1","nodeType","query","providedIn","MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY","_defaultOptions","_classList","_panelAnimationState","_xPosition","_yPosition","_items","_itemChanges","_tabSubscription","_overlapTrigger","_hasBackdrop","throwMcDropdownInvalidPositionX","throwMcDropdownInvalidPositionY","classes","className","_handleKeydown","setFocusOrigin","resetActiveItem","posX","posY","_onAnimationDone","_isAnimating","_isNeverEmpty","_isBadInput","McInput","_dirtyCheckNativeValue","_previousNativeValue","_validateType","MC_INPUT_INVALID_TYPES","_type","getMcInputUnsupportedTypeError","_neverEmptyInputTypes","_McInputMixinBase","McInputMono","MIN_VALIDATOR","MinValidator","_createValidator","_validator","MAX_VALIDATOR","MaxValidator","McInputModule","McNumberInput","calendarLabel","openCalendarLabel","prevMonthLabel","nextMonthLabel","prevYearLabel","nextYearLabel","prevMultiYearLabel","nextMultiYearLabel","switchToMonthViewLabel","switchToMultiYearViewLabel","McCalendarCell","displayValue","enabled","numCols","activeCell","cellAspectRatio","selectedValueChange","cellClicked","cell","columnChanges","rows","firstRowOffset","cellPadding","cellWidth","isActiveCell","rowIndex","colIndex","cellNumber","aria-readonly","label","todayValue","selectedValue","labelMinRequiredCells","activeDateChange","firstDayOfWeek","getFirstDayOfWeek","narrowWeekdays","getDayOfWeekNames","longWeekdays","weekdays","long","narrow","concat","_activeDate","oldActiveDate","validDate","clampDate","hasSameMonthAndYear","selectedDate","getDateInCurrentMonth","_minDate","_maxDate","selectedYear","getYear","selectedMonth","getMonth","createDate","handleCalendarBodyKeydown","addCalendarDays","getDate","getNumDaysInMonth","addCalendarYears","addCalendarMonths","todayDate","monthLabel","getMonthNames","toLocaleUpperCase","substr","firstOfMonth","firstWeekOffset","getDayOfWeek","createWeekCells","mcCalendarBody","daysInMonth","dateNames","getDateNames","weeks","shouldEnableDate","dateA11yLabel","cellClasses","d1","d2","todayYear","activeYear","activeOffset","years","row","year","createCellForYear","onYearSelected","month","yearsPerPage","getActiveCell","yearName","getYearName","shouldEnableYear","firstOfYear","getMonthInCurrentYear","onMonthSelected","normalizedDate","todayMonth","yearLabel","monthNames","months","createCellForMonth","monthName","monthYearA11yLabel","newMonthName","shouldEnableMonth","isYearAndMonthAfterMaxDate","isYearAndMonthBeforeMinDate","maxYear","maxMonth","minYear","minMonth","monthYearLabel","multi-year","currentPeriodClicked","previousClicked","nextClicked","previousEnabled","isSameView","nextEnabled","date1","date2","clampedActiveDate","buttonToggles","McButtonToggle","McButtonToggleGroup","buttonToggleGroup","isSingleSelector","syncButtonToggle","isPrechecked","onToggleClick","newChecked","McButtonToggleChange","[class.mc-button-toggle-standalone]","[class.mc-button-toggle-checked]","mcButton","McButton","McButtonToggleModule","McCard","readonly","_tabIndex","hostElement","onClick","[class.mc-card_readonly]","[class.mc-card_selected]","McCardModule","MC_CHECKBOX_CLICK_ACTION","MC_CHECKBOX_CONTROL_VALUE_ACCESSOR","McCheckbox","Init","Checked","Unchecked","Indeterminate","McCheckboxChange","McCheckboxBase","_McCheckboxMixinBase","_clickAction","indeterminateChange","_currentAnimationClass","_currentCheckState","TransitionCheckState","_controlValueAccessorChangeFn","_indeterminate","focusOrigin","_onInputFocusChange","_transitionCheckState","indeterminate","newState","oldState","[class.mc-indeterminate]","[class.mc-checkbox-label-before]","MC_CHECKBOX_REQUIRED_VALIDATOR","McCheckboxRequiredValidator","[attr.required]","CheckboxRequiredValidator","McCheckboxModule","McIconCSSStyler","McIconBase","_McIconMixinBase","Empty","iconName","McCleaner","McFormFieldNumberControl","McHint","McPrefix","McStepper","stepUp","stepDown","onStepUp","onStepDown","McSuffix","McFormFieldBase","_McFormFieldMixinBase","_labelId","hovered","_validateControlChild","_control","_numberControl","hasStepper","_stepper","valueChanges","clearValue","hasCleaner","onHoverChanged","isHovered","step","_shouldForward","getMcFormFieldMissingControlError","_hint","_suffix","_prefix","_cleaner","[class.mc-form-field_invalid]","[class.mc-form-field_has-prefix]","[class.mc-form-field_has-suffix]","[class.mc-form-field_has-cleaner]","[class.mc-form-field_has-stepper]","[class.ng-untouched]","[class.ng-touched]","[class.ng-pristine]","[class.ng-dirty]","[class.ng-valid]","[class.ng-invalid]","[class.ng-pending]","(mouseenter)","(mouseleave)","McFormFieldWithoutBorders","res","BIG_STEP","SMALL_STEP","McInputBase","_model","bigStep","isDigit","Infinity","_host","self","getPrototypeOf","normalizeSplitter","_focusChanged","minuses","NUMPAD_MINUS","DASH","FF_MINUS","serviceKeys","DELETE","BACKSPACE","TAB","arrows","allowedKeys","isIEPeriod","isNotIEPeriod","metaKey","C","V","X","F1","F12","EDGE","TRIDENT","ZERO","NINE","NUMPAD_ZERO","NUMPAD_NINE","valueAsNumber","update","replace","isFloat","isInt","test","NgModel","_uid","t","getSupportedInputTypes","_inputValueAccessor","_onInput","__extends","d","__","constructor","extendStatics","isBoolean","val","MC_SANITY_CHECKS_FACTORY","base","class_1","defaultColor","Default","colorPalette","errorState","matcher","isErrorState","optionsArray","groups","groupCounter","optionHeight","currentScrollPosition","optionOffset","arrayMap","array","iteratee","baseValues","object","props","mcSelectScrollStrategyProviderFactory","reposition","inputType","sanitizeNumber","isFinite","getPrecision","arr","pow","value1","value2","precision","provider","openSidepanels","parentElement","scrollThrottle","setPrototypeOf","__proto__","p","__assign","s","n","MC_SANITY_CHECKS","_sanityChecksEnabled","_hasDoneGlobalChecks","_window","_areChecksEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","_isTestEnv","doctype","testElement","computedStyle","removeChild","BidiModule","Second","_setLineClass","count","_resetClasses","_setClass","isAdd","ShowOnDirtyErrorStateMatcher","form","invalid","dirty","submitted","touched","McPseudoCheckbox","scrollbarMeasure","overflow","initScrollBarWidth","_scrollbarWidth","scrollDiv","scrollProp","clientWidth","McOptgroupBase","McOptgroupMixinBase","uniqueOptgroupIdCounter","labelId","[class.mc-optgroup-disabled]","[attr.aria-labelledby]","McOptionSelectionChange","mostRecentViewValue","[class.mc-option-multiple]","MC_LABEL_GLOBAL_OPTIONS","StandardCurve","SharpCurve","topCenter","topLeft","topRight","rightTop","rightBottom","bottomCenter","bottomLeft","bottomRight","leftTop","leftBottom","minWidth","animateChild","McButtonCssStyler","addClassModificatorForIcons","[class.mc-button]","[class.mc-icon-button]","McButtonBase","McButtonMixinBase","McAnchor","haltDisabledEvents","MC_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR","clearSelection","[class.mc-button-toggle-vertical]"],"mappings":"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"}