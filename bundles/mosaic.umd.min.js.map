{"version":3,"file":"mosaic.umd.min.js","sources":["../../src/lib/tooltip/tooltip.component.ts","../../src/lib/tooltip/tooltip.module.ts","../../src/lib/version.ts","../../src/lib/timepicker/timepicker.constants.ts","../../src/lib/select/select.component.ts","../../src/lib/select/select.module.ts","../../src/lib/sidepanel/sidepanel-config.ts","../../src/lib/sidepanel/sidepanel-animations.ts","../../src/lib/sidepanel/sidepanel-container.component.ts","../../src/lib/sidepanel/sidepanel-ref.ts","../../src/lib/sidepanel/sidepanel.service.ts","../../src/lib/sidepanel/sidepanel-directives.ts","../../src/lib/sidepanel/sidepanel.module.ts","../../src/lib/splitter/splitter.component.ts","../../src/lib/splitter/splitter.module.ts","../../src/lib/toggle/toggle.component.ts","../../src/lib/toggle/toggle.module.ts","../../src/lib/textarea/textarea.component.ts","../../src/lib/textarea/textarea.module.ts","../../src/lib/timepicker/timepicker.ts","../../src/lib/timepicker/timepicker.module.ts","../../src/lib/select/select-animations.ts","../../src/lib/tabs/tab-body.ts","../../src/lib/tabs/tab-label-wrapper.ts","../../src/lib/tabs/tab-header.ts","../../src/lib/tabs/tab-group.ts","../../src/lib/tabs/tab-nav-bar/tab-nav-bar.ts","../../src/lib/tabs/tabs.module.ts","../../src/lib/tag/tag.component.ts","../../src/lib/tag/tag.module.ts","../../src/lib/navbar/navbar.component.ts","../../src/lib/navbar/navbar.module.ts","../../src/lib/progress-bar/progress-bar.component.ts","../../src/lib/progress-bar/progress-bar.module.ts","../../src/lib/progress-spinner/progress-spinner.component.ts","../../src/lib/progress-spinner/progress-spinner.module.ts","../../src/lib/radio/radio.component.ts","../../src/lib/radio/radio.module.ts","../../src/lib/tree/node.ts","../../src/lib/tree/padding.ts","../../src/lib/tree/tree-selection.ts","../../src/lib/tree/tree.module.ts","../../src/lib/tree/data-source/flat-data-source.ts","../../src/lib/tree/data-source/nested-data-source.ts","../../src/lib/tabs/tab-content.ts","../../src/lib/tabs/tab-label.ts","../../src/lib/tabs/tab.ts","../../src/lib/tabs/tabs-animations.ts","../../src/lib/modal/modal-control.service.ts","../../src/lib/modal/modal-ref.class.ts","../../src/lib/modal/modal-util.ts","../../src/lib/modal/modal.component.ts","../../src/lib/modal/css-unit.pipe.ts","../../src/lib/modal/modal.service.ts","../../src/lib/modal/modal.module.ts","../../src/lib/dropdown/dropdown.component.ts","../../src/lib/dropdown/dropdown-trigger.ts","../../src/lib/dropdown/dropdown.module.ts","../../src/lib/layout/content.component.ts","../../src/lib/layout/footer.component.ts","../../src/lib/layout/header.component.ts","../../src/lib/layout/layout.component.ts","../../src/lib/layout/sidebar.component.ts","../../src/lib/layout/layout.module.ts","../../src/lib/list/list-selection.component.ts","../../src/lib/list/list.component.ts","../../src/lib/list/list.module.ts","../../src/lib/link/link.component.ts","../../src/lib/link/link.module.ts","../../src/lib/datepicker/calendar.ts","../../src/lib/datepicker/datepicker-animations.ts","../../src/lib/datepicker/datepicker.ts","../../src/lib/datepicker/datepicker-input.ts","../../src/lib/datepicker/datepicker-toggle.ts","../../src/lib/datepicker/datepicker-module.ts","../../src/lib/divider/divider.component.ts","../../src/lib/divider/divider.module.ts","../../src/lib/dropdown/dropdown-content.ts","../../src/lib/dropdown/dropdown-panel.ts","../../src/lib/dropdown/dropdown-item.ts","../../src/lib/dropdown/dropdown-animations.ts","../../src/lib/input/input.ts","../../src/lib/input/input-number-validators.ts","../../src/lib/input/input.module.ts","../../src/lib/datepicker/datepicker-intl.ts","../../src/lib/datepicker/calendar-body.ts","../../src/lib/datepicker/month-view.ts","../../src/lib/datepicker/multi-year-view.ts","../../src/lib/datepicker/year-view.ts","../../src/lib/button/button.component.ts","../../src/lib/button/button.module.ts","../../src/lib/card/card.component.ts","../../src/lib/card/card.module.ts","../../src/lib/checkbox/checkbox-config.ts","../../src/lib/checkbox/checkbox.ts","../../src/lib/checkbox/checkbox-required-validator.ts","../../src/lib/checkbox/checkbox-module.ts","../../src/lib/form-field/cleaner.ts","../../src/lib/form-field/form-field-control.ts","../../src/lib/form-field/form-field-number-control.ts","../../src/lib/form-field/hint.ts","../../src/lib/form-field/prefix.ts","../../src/lib/form-field/stepper.ts","../../src/lib/form-field/suffix.ts","../../src/lib/form-field/form-field.ts","../../src/lib/form-field/form-field.module.ts","../../src/lib/input/input-value-accessor.ts","../../src/lib/input/stepperUtils.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/utils/utils.ts","../../src/lib/core/common-behaviors/common-module.ts","../../src/lib/core/common-behaviors/disabled.ts","../../src/lib/core/common-behaviors/color.ts","../../src/lib/core/common-behaviors/tabindex.ts","../../src/lib/core/common-behaviors/error-state.ts","../../src/lib/core/option/option.ts","../../src/lib/core/overlay/overlay-position-map.ts","../../src/lib/form-field/form-field-errors.ts","../../src/lib/input/input-errors.ts","../../src/lib/datepicker/datepicker-errors.ts","../../src/lib/dropdown/dropdown-errors.ts","../../src/lib/select/select-errors.ts","../../src/lib/core/line/line.ts","../../src/lib/core/error/error-options.ts","../../src/lib/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../src/lib/core/selection/index.ts","../../src/lib/core/services/measure-scrollbar.service.ts","../../src/lib/core/option/optgroup.ts","../../src/lib/core/option/index.ts","../../src/lib/core/label/label-options.ts","../../src/lib/core/animation/fade-animations.ts","../../src/lib/core/animation/animation.ts","../../src/lib/icon/icon.component.ts","../../src/lib/icon/icon.module.ts"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    TemplateRef,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport {\n    ConnectedOverlayPositionChange,\n    ConnectionPositionPair,\n    Overlay,\n    OverlayRef,\n    ScrollDispatcher,\n    IScrollStrategy,\n    FlexibleConnectedPositionStrategy,\n    IOverlayConnectionPosition,\n    IOriginConnectionPosition,\n    HorizontalConnectionPos,\n    VerticalConnectionPos\n} from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\nimport {\n    fadeAnimation,\n    DEFAULT_4_POSITIONS,\n    POSITION_MAP\n} from '@ptsecurity/mosaic/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\n\n@Component({\n    selector: 'mc-tooltip-component',\n    inputs: [\n        'mcMouseEnterDelay',\n        'mcMouseLeaveDelay',\n        'mcTitle',\n        'mcVisible',\n        'mcTrigger',\n        'mcPlacement'\n    ],\n    outputs: ['mcVisibleChange'],\n    animations: [ fadeAnimation ],\n    templateUrl: './tooltip.component.html',\n    preserveWhitespaces: false,\n    styleUrls: ['./tooltip.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '(body:click)': 'this.handleBodyInteraction()'\n    }\n})\nexport class McTooltipComponent {\n    prefix = 'mc-tooltip_placement';\n    positions: ConnectionPositionPair[] = [ ...DEFAULT_4_POSITIONS ];\n    classMap = {};\n    isTitleString: boolean;\n    showTid: number;\n    hideTid: number;\n    availablePositions: any;\n    $visible: Observable<boolean>;\n\n    @Output() mcVisibleChange: EventEmitter<boolean> = new EventEmitter();\n\n    @Input() mcMouseEnterDelay = 400;\n\n    @Input() mcMouseLeaveDelay = 0;\n\n    @Input()\n    get mcTitle(): string | TemplateRef<void> {\n        return this._mcTitle;\n    }\n    set mcTitle(value: string | TemplateRef<void>) {\n        this.isTitleString = !(value instanceof TemplateRef);\n\n        if (this.isTitleString) {\n            this._mcTitle = value;\n        }\n    }\n    private _mcTitle: string | TemplateRef<void>;\n\n    @Input()\n    get mcTrigger(): string {\n        return this._mcTrigger;\n    }\n    set mcTrigger(value: string) {\n        this._mcTrigger = value;\n    }\n    private _mcTrigger: string = 'hover';\n\n    @Input()\n    get mcPlacement(): string {\n        return this._mcPlacement;\n    }\n    set mcPlacement(value: string) {\n        if (value !== this._mcPlacement) {\n            this._mcPlacement = value;\n            this.positions.unshift(POSITION_MAP[ this.mcPlacement ]);\n        } else if (!value) {\n            this._mcPlacement = 'top';\n        }\n    }\n    private _mcPlacement: string = 'top';\n\n    @Input()\n    get mcVisible(): boolean {\n        return this._mcVisible.value;\n    }\n    set mcVisible(value: boolean) {\n        const visible = coerceBooleanProperty(value);\n\n        if (this._mcVisible.value !== visible) {\n            this._mcVisible.next(visible);\n            this.mcVisibleChange.emit(visible);\n        }\n    }\n    private _mcVisible: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n    /** Subject for notifying that the tooltip has been hidden from the view */\n    private readonly onHideSubject: Subject<any> = new Subject();\n    private closeOnInteraction: boolean = false;\n\n    constructor(public cdr: ChangeDetectorRef) {\n        this.availablePositions = POSITION_MAP;\n        this.$visible = this._mcVisible.asObservable();\n    }\n\n    show(): void {\n        if (this.hideTid) {\n            clearTimeout(this.hideTid);\n        }\n\n        if (!this.isContentEmpty()) {\n            if (this.mcTrigger !== 'manual') {\n                this.closeOnInteraction = true;\n            }\n            this.showTid = setTimeout(() => {\n                this.mcVisible = true;\n                this.mcVisibleChange.emit(true);\n\n                // Mark for check so if any parent component has set the\n                // ChangeDetectionStrategy to OnPush it will be checked anyways\n                this.markForCheck();\n            }, this.mcMouseEnterDelay);\n        }\n    }\n\n    hide(): void {\n        if (this.showTid) {\n            clearTimeout(this.showTid);\n        }\n\n        this.hideTid = setTimeout(() => {\n            this.mcVisible = false;\n            this.mcVisibleChange.emit(false);\n            this.onHideSubject.next();\n\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this.markForCheck();\n        }, this.mcMouseLeaveDelay);\n    }\n\n    setClassMap(): void {\n        this.classMap = `${this.prefix}-${this.mcPlacement}`;\n    }\n\n    isContentEmpty(): boolean {\n        return this.isTitleString ? (this.mcTitle === '' || !this.mcTitle) : false;\n    }\n\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden(): Observable<void> {\n        return this.onHideSubject.asObservable();\n    }\n\n    markForCheck(): void {\n        this.cdr.markForCheck();\n    }\n\n    handleBodyInteraction(): void {\n        if (this.closeOnInteraction) {\n            this.hide();\n        }\n    }\n}\n\nexport const MC_TOOLTIP_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-tooltip-scroll-strategy');\n\n/** @docs-private */\nexport function mcTooltipScrollStrategyFactory(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition({scrollThrottle: 20});\n}\n\n/** @docs-private */\nexport const MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: mcTooltipScrollStrategyFactory\n};\n\n/** Creates an error to be thrown if the user supplied an invalid tooltip position. */\nexport function getMcTooltipInvalidPositionError(position: string) {\n    return Error(`McTooltip position \"${position}\" is invalid.`);\n}\n\nconst VIEWPORT_MARGIN: number = 8;\n\n@Directive({\n    selector: '[mcTooltip], [attribute^=\"mcTooltip\"]',\n    exportAs: 'mcTooltip',\n    host: {\n        '(keydown)': 'handleKeydown($event)',\n        '(touchend)': 'handleTouchend()'\n    }\n})\nexport class McTooltip implements OnInit, OnDestroy {\n    isTooltipOpen: boolean = false;\n    isDynamicTooltip = false;\n    parentDisabled: boolean = false;\n    overlayRef: OverlayRef | null;\n    portal: ComponentPortal<McTooltipComponent>;\n    availablePositions: any;\n    tooltip: McTooltipComponent | null;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n    private $unsubscribe = new Subject<void>();\n\n    @Input('mcTooltip')\n    get mcTitle(): string {\n        return this._mcTitle;\n    }\n    set mcTitle(title: string) {\n        this._mcTitle = title;\n        this.updateCompValue('mcTitle', title);\n    }\n    private _mcTitle: string;\n\n    @Input('mcTitle')\n    set setTitle(title: string) {\n        this.mcTitle = title;\n    }\n\n    @Input('mcTooltipDisabled')\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    private _disabled: boolean = false;\n\n    @Input('mcMouseEnterDelay')\n    get mcMouseEnterDelay(): number {\n        return this._mcMouseEnterDelay;\n    }\n    set mcMouseEnterDelay(value: number) {\n        this._mcMouseEnterDelay = value;\n        this.updateCompValue('mcMouseEnterDelay', value);\n    }\n    private _mcMouseEnterDelay: number;\n\n    @Input('mcMouseLeaveDelay')\n    get mcMouseLeaveDelay(): number {\n        return this._mcMouseLeaveDelay;\n    }\n    set mcMouseLeaveDelay(value: number) {\n        this._mcMouseLeaveDelay = value;\n        this.updateCompValue('mcMouseLeaveDelay', value);\n    }\n    private _mcMouseLeaveDelay: number;\n\n    @Input('mcTrigger')\n    get mcTrigger(): string {\n        return this._mcTrigger;\n    }\n    set mcTrigger(value: string) {\n        if (value) {\n            this._mcTrigger = value;\n            this.updateCompValue('mcTrigger', value);\n        } else {\n            this._mcTrigger = 'hover';\n        }\n    }\n    private _mcTrigger: string = 'hover';\n\n    @Input('mcPlacement')\n    get mcPlacement(): string {\n        return this._mcPlacement;\n    }\n    set mcPlacement(value: string) {\n        if (value) {\n            this._mcPlacement = value;\n            this.updateCompValue('mcPlacement', value);\n        } else {\n            this._mcPlacement = 'top';\n        }\n    }\n    private _mcPlacement: string = 'top';\n\n    @Input('mcTooltipClass')\n    get mcTooltipClass() { return this._mcTooltipClass; }\n    set mсTooltipClass(value: string | string[] | Set<string> | {[key: string]: any}) {\n        this._mcTooltipClass = value;\n\n        if (this.tooltip) {\n            this.tooltip.setClassMap();\n        }\n    }\n    private _mcTooltipClass: string | string[] | Set<string> | {[key: string]: any};\n\n    @Input('mcVisible')\n    get mcVisible(): boolean {\n        return this._mcVisible;\n    }\n    set mcVisible(externalValue: boolean) {\n        const value = coerceBooleanProperty(externalValue);\n        this._mcVisible = value;\n        this.updateCompValue('mcVisible', value);\n\n        if (value) {\n            this.show();\n        }\n    }\n    private _mcVisible: boolean;\n\n    @HostBinding('class.mc-tooltip-open')\n    get isOpen(): boolean {\n        return this.isTooltipOpen;\n    }\n\n    @HostBinding('class.disabled')\n    get isParentDisabled(): boolean {\n        return this.parentDisabled;\n    }\n\n    private manualListeners = new Map<string, EventListenerOrEventListenerObject>();\n    private readonly destroyed = new Subject<void>();\n\n    constructor(\n        private overlay: Overlay,\n        private elementRef: ElementRef,\n        private ngZone: NgZone,\n        private scrollDispatcher: ScrollDispatcher,\n        private hostView: ViewContainerRef,\n        @Inject(MC_TOOLTIP_SCROLL_STRATEGY) private scrollStrategy,\n        @Optional() private direction: Directionality) {\n            this.availablePositions = POSITION_MAP;\n        }\n\n    /** Create the overlay config and position strategy */\n    createOverlay(): OverlayRef {\n        if (this.overlayRef) {\n            return this.overlayRef;\n        }\n\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this.overlay.position()\n            .flexibleConnectedTo(this.elementRef)\n            .withTransformOriginOn('.mc-tooltip')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(VIEWPORT_MARGIN)\n            .withPositions([ ...DEFAULT_4_POSITIONS ]);\n\n        const scrollableAncestors = this.scrollDispatcher\n            .getAncestorScrollContainers(this.elementRef);\n\n        strategy.withScrollableContainers(scrollableAncestors);\n\n        strategy.positionChanges.pipe(takeUntil(this.destroyed)).subscribe((change) => {\n            if (this.tooltip) {\n                this.onPositionChange(change);\n                if (change.scrollableViewProperties.isOverlayClipped && this.tooltip.mcVisible) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this.ngZone.run(() => this.hide());\n                }\n            }\n        });\n\n        this.overlayRef = this.overlay.create({\n            direction: this.direction,\n            positionStrategy: strategy,\n            panelClass: 'mc-tooltip-panel',\n            scrollStrategy: this.scrollStrategy()\n        });\n\n        this.updatePosition();\n\n        this.overlayRef.detachments()\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(() => this.detach());\n\n        return this.overlayRef;\n    }\n\n    detach() {\n        if (this.overlayRef && this.overlayRef.hasAttached()) {\n            this.overlayRef.detach();\n        }\n\n        this.tooltip = null;\n    }\n\n    onPositionChange($event: ConnectedOverlayPositionChange): void {\n        let updatedPlacement = this.mcPlacement;\n        Object.keys(this.availablePositions).some((key) => {\n            if ($event.connectionPair.originX === this.availablePositions[key].originX &&\n                $event.connectionPair.originY === this.availablePositions[key].originY &&\n                $event.connectionPair.overlayX === this.availablePositions[key].overlayX &&\n                $event.connectionPair.overlayY === this.availablePositions[key].overlayY) {\n                updatedPlacement = key;\n\n                return true;\n            }\n\n            return false;\n        });\n        this.updateCompValue('mcPlacement', updatedPlacement);\n\n        if (this.tooltip) {\n            this.tooltip.setClassMap();\n            this.tooltip.markForCheck();\n        }\n\n        this.handlePositioningUpdate();\n    }\n\n    handlePositioningUpdate() {\n        if (!this.overlayRef) {\n            this.overlayRef = this.createOverlay();\n        }\n        if (this.mcPlacement === 'right' || this.mcPlacement === 'left') {\n            const pos =\n                (this.overlayRef.overlayElement.clientHeight -\n                    this.hostView.element.nativeElement.clientHeight) / 2; // tslint:disable-line\n            const currentContainer = this.overlayRef.overlayElement.style.top || '0px';\n            this.overlayRef.overlayElement.style.top =\n                `${parseInt(currentContainer.split('px')[0], 10) + pos - 1}px`;\n            // TODO: обновлять положение стрелки\\указателя\\\"дятла\"\n        }\n    }\n\n    // tslint:disable-next-line:no-any\n    updateCompValue(key: string, value: any): void {\n        if (this.isDynamicTooltip && value) {\n            if (this.tooltip) {\n                this.tooltip[key] = value;\n            }\n        }\n    }\n\n    ngOnInit(): void {\n        this.initElementRefListeners();\n    }\n\n    ngOnDestroy(): void {\n        if (this.overlayRef) {\n            this.overlayRef.dispose();\n        }\n        this.manualListeners.forEach((listener, event) =>\n            this.elementRef.nativeElement.removeEventListener(event, listener));\n        this.manualListeners.clear();\n\n        this.$unsubscribe.next();\n        this.$unsubscribe.complete();\n    }\n\n    handleKeydown(e: KeyboardEvent) {\n        if (this.isTooltipOpen && e.keyCode === ESCAPE) { // tslint:disable-line\n            this.hide();\n        }\n    }\n\n    handleTouchend() {\n        this.hide();\n    }\n\n    initElementRefListeners() {\n        if (this.mcTrigger === 'hover') {\n\n            this.manualListeners\n                .set('mouseenter', () => this.show())\n                .set('mouseleave', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n\n        if (this.mcTrigger === 'focus') {\n\n            this.manualListeners\n                .set('focus', () => this.show())\n                .set('blur', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n    }\n\n    show(): void {\n        if (!this.disabled) {\n            if (!this.tooltip) {\n                const overlayRef = this.createOverlay();\n                this.detach();\n\n                this.portal = this.portal || new ComponentPortal(McTooltipComponent, this.hostView);\n\n                this.tooltip = overlayRef.attach(this.portal).instance;\n                this.tooltip.afterHidden()\n                    .pipe(takeUntil(this.destroyed))\n                    .subscribe(() => this.detach());\n                this.isDynamicTooltip = true;\n                const properties = [\n                    'mcTitle',\n                    'mcPlacement',\n                    'mcTrigger',\n                    'mcTooltipDisabled',\n                    'mcMouseEnterDelay',\n                    'mcMouseLeaveDelay',\n                    'mсTooltipClass',\n                    'mcVisible'\n                ];\n                properties.forEach((property) => this.updateCompValue(property, this[ property ]));\n                this.tooltip.mcVisibleChange.pipe(takeUntil(this.$unsubscribe), distinctUntilChanged())\n                    .subscribe((data) => {\n                        this.mcVisible = data;\n                        this.mcVisibleChange.emit(data);\n                        this.isTooltipOpen = data;\n                    });\n            }\n            this.updatePosition();\n            this.tooltip.show();\n        }\n    }\n\n    hide(): void {\n        if (this.tooltip) {\n            this.tooltip.hide();\n        }\n    }\n\n    /** Updates the position of the current tooltip. */\n    updatePosition() {\n        if (!this.overlayRef) {\n            this.overlayRef = this.createOverlay();\n        }\n        const position =\n            this.overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\n        const origin = this.getOrigin();\n        const overlay = this.getOverlayPosition();\n\n        position.withPositions([\n            {...origin.main, ...overlay.main},\n            {...origin.fallback, ...overlay.fallback}\n        ]);\n    }\n\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    getOrigin(): {main: IOriginConnectionPosition; fallback: IOriginConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this.direction || this.direction.value === 'ltr';\n        let originPosition: IOriginConnectionPosition;\n\n        if (position === 'top' || position === 'bottom') {\n            originPosition = {originX: 'center', originY: position === 'top' ? 'top' : 'bottom'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            originPosition = {originX: 'start', originY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            originPosition = {originX: 'end', originY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this.invertPosition(originPosition.originX, originPosition.originY);\n\n        return {\n            main: originPosition,\n            fallback: {originX: x, originY: y}\n        };\n    }\n\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    getOverlayPosition(): {main: IOverlayConnectionPosition; fallback: IOverlayConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this.direction || this.direction.value === 'ltr';\n        let overlayPosition: IOverlayConnectionPosition;\n\n        if (position === 'top') {\n            overlayPosition = {overlayX: 'center', overlayY: 'bottom'};\n        } else if (position === 'bottom') {\n            overlayPosition = {overlayX: 'center', overlayY: 'top'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            overlayPosition = {overlayX: 'end', overlayY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            overlayPosition = {overlayX: 'start', overlayY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this.invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n\n        return {\n            main: overlayPosition,\n            fallback: {overlayX: x, overlayY: y}\n        };\n    }\n\n    /** Inverts an overlay position. */\n    private invertPosition(x: HorizontalConnectionPos, y: VerticalConnectionPos) {\n        let newX: HorizontalConnectionPos = x;\n        let newY: VerticalConnectionPos = y;\n        if (this.mcPlacement === 'top' || this.mcPlacement === 'bottom') {\n            if (y === 'top') {\n                newY = 'bottom';\n            } else if (y === 'bottom') {\n                newY = 'top';\n            }\n        } else {\n            if (x === 'end') {\n                newX = 'start';\n            } else if (x === 'start') {\n                newX = 'end';\n            }\n        }\n\n        return {x: newX, y: newY};\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport {\n    McTooltipComponent,\n    McTooltip,\n    MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER\n} from './tooltip.component';\n\n\n@NgModule({\n    declarations: [McTooltipComponent, McTooltip],\n    exports: [McTooltipComponent, McTooltip],\n    imports: [CommonModule, OverlayModule],\n    providers: [MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n    entryComponents: [McTooltipComponent]\n})\nexport class McToolTipModule {\n}\n","import { Version } from '@angular/core';\n\n\nexport const VERSION = new Version('1.0.0-beta.1-0813e14');\n","export enum TimeParts {\n    hours,\n    minutes,\n    seconds\n}\n\nexport enum TimeFormats {\n    HHmmss = 'HH:mm:ss',\n    HHmm = 'HH:mm'\n}\n\nexport const TIMEFORMAT_PLACEHOLDERS: { [timeFormat: string]: string } = {\n    [TimeFormats.HHmmss]: '  :  :  ',\n    [TimeFormats.HHmm]: '  :  '\n};\n\nexport const DEFAULT_TIME_FORMAT: TimeFormats = TimeFormats.HHmm;\n\nexport const HOURS_MINUTES_SECONDS_REGEXP =\n    new RegExp(/^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9]):([0-5][0-9]|[0-9])?$/);\nexport const HOURS_MINUTES_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9])?$/;\nexport const HOURS_ONLY_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):?$/;\n\nexport const SECONDS_PER_MINUTE: number = 59;\nexport const MINUTES_PER_HOUR: number = 59;\nexport const HOURS_PER_DAY: number = 23;\n\n// TODO Move it to common CDK\nexport const ARROW_UP_KEYCODE: string = 'ArrowUp';\nexport const ARROW_DOWN_KEYCODE: string = 'ArrowDown';\nexport const ARROW_LEFT_KEYCODE: string = 'ArrowLeft';\nexport const ARROW_RIGHT_KEYCODE: string = 'ArrowRight';\n","/* tslint:disable:no-empty */\n\nimport { ActiveDescendantKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    RIGHT_ARROW,\n    SPACE,\n    UP_ARROW,\n    A\n} from '@ptsecurity/cdk/keycodes';\nimport {\n    CdkConnectedOverlay,\n    Overlay,\n    RepositionScrollStrategy,\n    IScrollStrategy,\n    ViewportRuler\n} from '@ptsecurity/cdk/overlay';\n\nimport {\n    AfterContentInit, AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren,\n    Directive,\n    DoCheck,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    isDevMode,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    QueryList, Renderer2,\n    Self,\n    SimpleChanges,\n    ViewChild, ViewChildren,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport {\n    _countGroupLabelsBeforeOption,\n    _getOptionScrollPosition,\n    CanDisable,\n    CanDisableCtor,\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    HasTabIndex, HasTabIndexCtor,\n    MC_OPTION_PARENT_COMPONENT,\n    McOptgroup,\n    McOption,\n    McOptionSelectionChange,\n    mixinDisabled,\n    mixinErrorState,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\nimport { McFormField, McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { McTag } from '@ptsecurity/mosaic/tag';\n\n\nimport { defer, merge, Observable, Subject } from 'rxjs';\nimport {\n    filter,\n    map,\n    startWith,\n    switchMap,\n    take,\n    takeUntil,\n    distinctUntilChanged\n} from 'rxjs/operators';\n\nimport {\n    getMcSelectDynamicMultipleError,\n    getMcSelectNonArrayValueError,\n    getMcSelectNonFunctionValueError\n} from './select-errors';\n\nimport { mcSelectAnimations } from './select-animations';\n\n\nlet nextUniqueId = 0;\n\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n\n/** The max height of the select's overlay panel */\nexport const SELECT_PANEL_MAX_HEIGHT = 224;\n\n/** The panel's padding on the x-axis */\nexport const SELECT_PANEL_PADDING_X = 1;\n\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\n/* tslint:disable-next-line:no-magic-numbers */\nexport const SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n\n/** The height of the select items in `em` units. */\nexport const SELECT_ITEM_HEIGHT_EM = 2;\n\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nexport const SELECT_PANEL_VIEWPORT_PADDING = 8;\n\n/** Injection token that determines the scroll handling while a select is open. */\nexport const MC_SELECT_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-select-scroll-strategy');\n\n/** @docs-private */\nexport function MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => RepositionScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MC_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n\n/** Change event object that is emitted when the select value has changed. */\nexport class McSelectChange {\n    constructor(\n        /** Reference to the select that emitted the change event. */\n        public source: McSelect,\n        /** Current value of the select that emitted the event. */\n        public value: any) {\n    }\n}\n\n// Boilerplate for applying mixins to McSelect.\n/** @docs-private */\nexport class McSelectBase {\n    constructor(\n        public _elementRef: ElementRef,\n        public _defaultErrorStateMatcher: ErrorStateMatcher,\n        public _parentForm: NgForm,\n        public _parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl\n    ) {}\n}\n\nexport const _McSelectMixinBase:\n    CanDisableCtor &\n    HasTabIndexCtor &\n    CanUpdateErrorStateCtor & typeof McSelectBase\n    = mixinTabIndex(mixinDisabled(mixinErrorState(McSelectBase)));\n\n\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\n@Directive({ selector: 'mc-select-trigger' })\nexport class McSelectTrigger {}\n\n\n@Component({\n    selector: 'mc-select',\n    exportAs: 'mcSelect',\n    templateUrl: 'select.html',\n    styleUrls: ['./select.css'],\n    inputs: ['disabled', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'tabIndex',\n        class: 'mc-select',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-select-invalid]': 'errorState',\n        '[class.mc-select-required]': 'required',\n        '(keydown)': '_handleKeydown($event)',\n        '(focus)': '_onFocus()',\n        '(blur)': '_onBlur()',\n        '(window:resize)': '_calculateHiddenItems()'\n    },\n    animations: [\n        mcSelectAnimations.transformPanel,\n        mcSelectAnimations.fadeInContent\n    ],\n    providers: [\n        { provide: McFormFieldControl, useExisting: McSelect },\n        { provide: MC_OPTION_PARENT_COMPONENT, useExisting: McSelect }\n    ]\n})\nexport class McSelect extends _McSelectMixinBase implements\n    AfterContentInit, AfterViewInit, OnChanges, OnDestroy, OnInit, DoCheck, ControlValueAccessor, CanDisable,\n    HasTabIndex, McFormFieldControl<any>, CanUpdateErrorState {\n\n    /** The last measured value for the trigger's client bounding rect. */\n    _triggerRect: ClientRect;\n\n    /** The cached font-size of the trigger element. */\n    _triggerFontSize = 0;\n\n    /** Deals with the selection logic. */\n    _selectionModel: SelectionModel<McOption>;\n\n    /** Manages keyboard events for options in the panel. */\n    _keyManager: ActiveDescendantKeyManager<McOption>;\n\n    /** The IDs of child options to be passed to the aria-owns attribute. */\n    _optionIds: string = '';\n\n    /** The value of the select panel's transform-origin property. */\n    _transformOrigin: string = 'top';\n\n    /** Whether the panel's animation is done. */\n    _panelDoneAnimating: boolean = false;\n\n    /** Emits when the panel element is finished transforming in. */\n    _panelDoneAnimatingStream = new Subject<string>();\n\n    /** Strategy that will be used to handle scrolling while the select panel is open. */\n    _scrollStrategy = this._scrollStrategyFactory();\n\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     */\n    _offsetY = 0;\n\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     */\n    _positions = [\n        {\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top'\n        },\n        {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'bottom'\n        }\n    ];\n\n    /** Whether the select is focused. */\n    get focused(): boolean {\n        return this._focused || this._panelOpen;\n    }\n\n    /**\n     * @deprecated Setter to be removed as this property is intended to be readonly.\n     * @breaking-change 8.0.0\n     */\n    set focused(value: boolean) {\n        this._focused = value;\n    }\n\n    /** A name for this control that can be used by `mc-form-field`. */\n    controlType = 'mc-select';\n\n    @ViewChild('trigger') trigger: ElementRef;\n    @ViewChildren(McTag) tags: QueryList<McTag>;\n\n    @ViewChild('panel') panel: ElementRef;\n\n    /** Overlay pane containing the options. */\n    @ViewChild(CdkConnectedOverlay) overlayDir: CdkConnectedOverlay;\n\n    /** All of the defined select options. */\n    @ContentChildren(McOption, { descendants: true }) options: QueryList<McOption>;\n\n    /** All of the defined groups of options. */\n    @ContentChildren(McOptgroup) optionGroups: QueryList<McOptgroup>;\n\n    /** Classes to be passed to the select panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[] | Set<string> | { [key: string]: any };\n\n    /** User-supplied override of the trigger element. */\n    @ContentChild(McSelectTrigger) customTrigger: McSelectTrigger;\n\n    /** Placeholder to be shown if no value has been selected. */\n    @Input()\n    get placeholder(): string {\n        return this._placeholder;\n    }\n\n    set placeholder(value: string) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n\n    /** Whether the component is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n\n    /** Whether the user should be allowed to select multiple options. */\n    @Input()\n    get multiple(): boolean {\n        return this._multiple;\n    }\n\n    set multiple(value: boolean) {\n        if (this._selectionModel) {\n            throw getMcSelectDynamicMultipleError();\n        }\n\n        this._multiple = coerceBooleanProperty(value);\n    }\n\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    @Input()\n    get compareWith() {\n        return this._compareWith;\n    }\n\n    set compareWith(fn: (o1: any, o2: any) => boolean) {\n        /* tslint:disable-next-line:strict-type-predicates */\n        if (typeof fn !== 'function') {\n            throw getMcSelectNonFunctionValueError();\n        }\n\n        this._compareWith = fn;\n\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n\n    /** Value of the select control. */\n    @Input()\n    get value(): any {\n        return this._value;\n    }\n\n    set value(newValue: any) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n\n    /** Object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     */\n    @Input() sortComparator: (a: McOption, b: McOption, options: McOption[]) => number;\n\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n\n    /** Combined stream of all of the child options' change events. */\n    readonly optionSelectionChanges: Observable<McOptionSelectionChange> = defer(() => {\n        if (this.options) {\n            return merge(...this.options.map((option) => option.onSelectionChange));\n        }\n\n        return this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n    });\n\n    /** Event emitted when the select panel has been toggled. */\n    @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the select has been opened. */\n    @Output('opened') readonly _openedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => o), map(() => {}));\n\n    /** Event emitted when the select has been closed. */\n    @Output('closed') readonly _closedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => !o), map(() => {}));\n\n    /** Event emitted when the selected value has been changed by the user. */\n    @Output() readonly selectionChange: EventEmitter<McSelectChange> = new EventEmitter<McSelectChange>();\n\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n    hiddenItems: number = 0;\n    oneMoreText: string = '...ещё';\n\n    /** Whether or not the overlay panel is open. */\n    private _panelOpen = false;\n\n    /** Whether filling out the select is required in the form. */\n    private _required: boolean = false;\n\n    /** The scroll position of the overlay panel, calculated to center the selected option. */\n    private _scrollTop = 0;\n\n    /** The placeholder displayed in the trigger of the select. */\n    private _placeholder: string;\n\n    /** Whether the component is in multiple selection mode. */\n    private _multiple: boolean = false;\n\n    /** Unique id for this input. */\n    private readonly _uid = `mc-select-${nextUniqueId++}`;\n\n    /** Emits whenever the component is destroyed. */\n    private readonly _destroy = new Subject<void>();\n\n    private _focused = false;\n\n    private _value: any;\n\n    private _id: string;\n\n    constructor(\n        private readonly _viewportRuler: ViewportRuler,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        private readonly _ngZone: NgZone,\n        private readonly _renderer: Renderer2,\n        _defaultErrorStateMatcher: ErrorStateMatcher,\n        elementRef: ElementRef,\n        @Optional() private readonly _dir: Directionality,\n        @Optional() _parentForm: NgForm,\n        @Optional() _parentFormGroup: FormGroupDirective,\n        @Optional() private readonly _parentFormField: McFormField,\n        @Self() @Optional() public ngControl: NgControl,\n        @Attribute('tabindex') tabIndex: string,\n        @Inject(MC_SELECT_SCROLL_STRATEGY) private readonly _scrollStrategyFactory\n    ) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnInit() {\n        this._selectionModel = new SelectionModel<McOption>(this.multiple);\n        this.stateChanges.next();\n\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe(() => {\n                if (this.panelOpen) {\n                    this._scrollTop = 0;\n                    this.openedChange.emit(true);\n                } else {\n                    this.openedChange.emit(false);\n                    this._panelDoneAnimating = false;\n                    this.overlayDir.offsetX = 0;\n                    this._changeDetectorRef.markForCheck();\n                }\n            });\n    }\n\n    ngAfterContentInit() {\n        this._initKeyManager();\n\n        this._selectionModel.onChange!\n            .pipe(takeUntil(this._destroy))\n            .subscribe((event) => {\n                event.added.forEach((option) => option.select());\n                event.removed.forEach((option) => option.deselect());\n            });\n\n        this.options.changes\n            .pipe(startWith(null), takeUntil(this._destroy))\n            .subscribe(() => {\n                this._resetOptions();\n                this._initializeSelection();\n            });\n    }\n\n    ngAfterViewInit(): void {\n        this.tags.changes\n            .subscribe(() => {\n                setTimeout(() => this._calculateHiddenItems(), 0);\n            });\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) { this.updateErrorState(); }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes.disabled) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n\n    /** `View -> model callback called when value changes` */\n    _onChange: (value: any) => void = () => {};\n\n    /** `View -> model callback called when select has been touched` */\n    _onTouched = () => {};\n\n    /** Toggles the overlay panel open or closed. */\n    toggle(): void {\n        if (this.panelOpen) {\n            this.close();\n        } else {\n            this.open();\n        }\n    }\n\n    /** Opens the overlay panel. */\n    open(): void {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) { return; }\n\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement)['font-size']);\n\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                    this.overlayDir.overlayRef.overlayElement) {\n                    this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n                }\n            });\n    }\n\n    /** Closes the overlay panel and focuses the host element. */\n    close(): void {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value: any): void {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn: () => {}): void {\n        this._onTouched = fn;\n    }\n\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n\n    get panelOpen(): boolean {\n        return this._panelOpen;\n    }\n\n    get selected(): McOption | McOption[] {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n\n    get triggerValue(): string {\n        if (this.empty) { return ''; }\n\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map((option) => option.viewValue);\n\n            if (this._isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions.join(', ');\n        }\n\n        return this._selectionModel.selected[0].viewValue;\n    }\n\n    get triggerValues(): McOption[] {\n        if (this.empty) { return []; }\n\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected;\n\n            if (this._isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions;\n        }\n\n        return [this._selectionModel.selected[0]];\n    }\n\n    get empty(): boolean {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n\n    _isRtl(): boolean {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n\n    _handleKeydown(event: KeyboardEvent): void {\n        if (!this.disabled) {\n            if (this.panelOpen) {\n                this._handleOpenKeydown(event);\n            } else {\n                this._handleClosedKeydown(event);\n            }\n        }\n    }\n\n    /**\n     * When the panel content is done fading in, the _panelDoneAnimating property is\n     * set so the proper class can be added to the panel.\n     */\n    _onFadeInDone(): void {\n        this._panelDoneAnimating = this.panelOpen;\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached(): void {\n        this.overlayDir.positionChange\n            .pipe(take(1))\n            .subscribe(() => {\n                this._changeDetectorRef.detectChanges();\n                this._calculateOverlayOffsetX();\n                this.panel.nativeElement.scrollTop = this._scrollTop;\n            });\n    }\n\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme(): string {\n        return this._parentFormField ? `mc-${this._parentFormField.color}` : '';\n    }\n\n    /** Focuses the select element. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    _calculateOverlayScroll(selectedIndex: number, scrollBuffer: number, maxScroll: number): number {\n        const itemHeight = this._getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n\n        /* tslint:disable-next-line:no-magic-numbers */\n        const halfOptionHeight = itemHeight / 2;\n\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n\n    /** Invoked when an option is clicked. */\n    onRemoveMatcherItem(option: McOption, $event): void {\n        $event.stopPropagation();\n\n        option.deselect();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat(): boolean {\n        return this._panelOpen || !this.empty;\n    }\n\n    _calculateHiddenItems(): void {\n        if (this.empty) { return; }\n\n        let visibleItems: number = 0;\n        const totalItemsWidth = this._getTotalItemsWidthInMatcher();\n        let totalVisibleItemsWidth: number = 0;\n        const itemMargin: number = 4;\n\n        this.tags.forEach((tag) => {\n            if (tag.nativeElement.offsetTop < tag.nativeElement.offsetHeight) {\n                totalVisibleItemsWidth += tag.nativeElement.getBoundingClientRect().width + itemMargin;\n                visibleItems++;\n            }\n        });\n\n        this.hiddenItems = (this.selected as ArrayLike<McOption>).length - visibleItems;\n\n        if (this.hiddenItems) {\n            const itemsCounter = this.trigger.nativeElement.querySelector('.mc-select__match-hidden-text');\n            const matcherList = this.trigger.nativeElement.querySelector('.mc-select__match-list');\n\n            const itemsCounterShowed = itemsCounter.offsetTop < itemsCounter.offsetHeight;\n            // const itemsCounterWidth: number = itemsCounter.getBoundingClientRect().width;\n            const itemsCounterWidth: number = 86;\n\n            const matcherListWidth: number = matcherList.getBoundingClientRect().width;\n            const matcherWidth: number = matcherListWidth + itemsCounterWidth;\n\n            if (itemsCounterShowed && (totalItemsWidth < matcherWidth)) { this.hiddenItems = 0; }\n\n            if (\n                totalVisibleItemsWidth === matcherListWidth ||\n                (totalVisibleItemsWidth + itemsCounterWidth) < matcherListWidth\n            ) {\n                this._changeDetectorRef.markForCheck();\n\n                return ;\n            } else if (!itemsCounterShowed && (totalItemsWidth + itemsCounterWidth) > matcherWidth) {\n                this.hiddenItems++;\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    private _getTotalItemsWidthInMatcher(): number {\n        const triggerClone = this.trigger.nativeElement.cloneNode(true);\n        triggerClone.querySelector('.mc-select__match-hidden-text').remove();\n\n        this._renderer.setStyle(triggerClone, 'position', 'absolute');\n        this._renderer.setStyle(triggerClone, 'visibility', 'hidden');\n        this._renderer.setStyle(triggerClone, 'top', '-100%');\n        this._renderer.setStyle(triggerClone, 'left', '0');\n\n        this._renderer.appendChild(this.trigger.nativeElement, triggerClone);\n\n        let totalItemsWidth: number = 0;\n        const itemMargin: number = 4;\n        triggerClone.querySelectorAll('mc-tag').forEach((item) => {\n            totalItemsWidth += item.getBoundingClientRect().width as number + itemMargin;\n        });\n\n        triggerClone.remove();\n\n        return totalItemsWidth;\n    }\n\n    /** Handles keyboard events while the select is closed. */\n    private _handleClosedKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n\n        // Open the select on ALT + arrow key to match the native <select>\n        if (isOpenKey || ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        } else if (!this.multiple) {\n            this._keyManager.onKeydown(event);\n        }\n    }\n\n    /** Handles keyboard events when the selected is open. */\n    private _handleOpenKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const manager = this._keyManager;\n\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n\n            if (keyCode === HOME) {\n                manager.setFirstItemActive();\n            } else {\n                manager.setLastItemActive();\n            }\n\n        } else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n        } else if ((keyCode === ENTER || keyCode === SPACE) && manager.activeItem) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        } else if (this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some((option) => !option.selected);\n            this.options.forEach((option) => {\n                if (hasDeselectedOptions && !option.disabled) {\n                    option.select();\n                } else {\n                    option.deselect();\n                }\n            });\n        } else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n\n            manager.onKeydown(event);\n\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n\n    private _initializeSelection(): void {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n        });\n    }\n\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    private _setSelectionByValue(value: any | any[]): void {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMcSelectNonArrayValueError();\n            }\n\n            this._selectionModel.clear();\n            value.forEach((currentValue: any) => this._selectValue(currentValue));\n            this._sortValues();\n        } else {\n            this._selectionModel.clear();\n            const correspondingOption = this._selectValue(value);\n\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    private _selectValue(value: any): McOption | undefined {\n        const correspondingOption = this.options.find((option: McOption) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            } catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n\n                return false;\n            }\n        });\n\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n\n        return correspondingOption;\n    }\n\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    private _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager<McOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n\n        this._keyManager.tabOut\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            });\n\n        this._keyManager.change\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n                if (this._panelOpen && this.panel) {\n                    this._scrollActiveOptionIntoView();\n                } else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n            });\n    }\n\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    private _resetOptions(): void {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n\n        this.optionSelectionChanges\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((event) => {\n                this._onSelect(event.source, event.isUserInput);\n\n                if (event.isUserInput && !this.multiple && this._panelOpen) {\n                    this.close();\n                    this.focus();\n                }\n            });\n\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((option) => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n                this.stateChanges.next();\n            });\n\n        this._setOptionIds();\n    }\n\n    /** Invoked when an option is clicked. */\n    private _onSelect(option: McOption, isUserInput: boolean): void {\n        const wasSelected = this._selectionModel.isSelected(option);\n\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        } else {\n            if (option.selected) {\n                this._selectionModel.select(option);\n            } else {\n                this._selectionModel.deselect(option);\n            }\n\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n\n            if (this.multiple) {\n                this._sortValues();\n\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mc-option`.\n                    this.focus();\n                }\n            }\n        }\n\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n\n        this.stateChanges.next();\n    }\n\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    private _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n\n    /** Emits change event to set the model value. */\n    private _propagateChanges(fallbackValue?: any): void {\n        let valueToEmit: any = null;\n\n        if (this.multiple) {\n            valueToEmit = (this.selected as McOption[]).map((option) => option.value);\n        } else {\n            valueToEmit = this.selected ? (this.selected as McOption).value : fallbackValue;\n        }\n\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new McSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /** Records option IDs to pass to the aria-owns property. */\n    private _setOptionIds() {\n        this._optionIds = this.options.map((option) => option.id).join(' ');\n    }\n\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    private _highlightCorrectOption(): void {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            } else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n\n    /** Scrolls the active option into view. */\n    private _scrollActiveOptionIntoView(): void {\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(\n            activeOptionIndex + labelCount,\n            this._getItemHeight(),\n            this.panel.nativeElement.scrollTop,\n            SELECT_PANEL_MAX_HEIGHT\n        );\n    }\n\n    /** Gets the index of the provided option in the option list. */\n    private _getOptionIndex(option: McOption): number | undefined {\n        /* tslint:disable-next-line */\n        return this.options.reduce((result: number, current: McOption, index: number) => {\n            /* tslint:disable-next-line:strict-type-predicates */\n            return result === undefined ? (option === current ? index : undefined) : result;\n        }, undefined);\n    }\n\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    private _calculateOverlayPosition(): void {\n        const itemHeight = this._getItemHeight();\n        const items = this._getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset =\n            this.empty ? 0 : this._getOptionIndex(this._selectionModel.selected[0])!;\n\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options,\n            this.optionGroups);\n\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /* tslint:disable-next-line:no-magic-numbers */\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY();\n\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    private _calculateOverlayOffsetX(): void {\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this._isRtl();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const paddingWidth = SELECT_PANEL_PADDING_X * 2;\n        let offsetX: number;\n\n        const selected = this._selectionModel.selected[0] || this.options.first;\n        offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n\n        // Invert the offset in LTR.\n        if (!isRtl) { offsetX *= -1; }\n\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        } else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    private _calculateOverlayOffsetY(): number {\n        // const itemHeight = this._getItemHeight();\n        // const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n\n        // todo I'm not sure that we will use it\n        return 0;\n        // return Math.round(-optionHeightAdjustment);\n    }\n\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    private _checkOverlayWithinViewport(maxScroll: number): void {\n        const itemHeight = this._getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable =\n            viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n\n        const panelHeightTop = Math.abs(this._offsetY);\n        const totalPanelHeight =\n            Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        } else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        } else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    private _adjustPanelUp(panelHeightBottom: number, bottomSpaceAvailable: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    private _adjustPanelDown(panelHeightTop: number, topSpaceAvailable: number, maxScroll: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n\n            return;\n        }\n    }\n\n    /** Sets the transform origin point based on the selected option. */\n    private _getOriginBasedOnOption(): string {\n        const itemHeight = this._getItemHeight();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /* tslint:disable-next-line:no-magic-numbers */\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n\n        return `50% ${originY}px 0px`;\n    }\n\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    private _getItemCount(): number {\n        return this.options.length + this.optionGroups.length;\n    }\n\n    /** Calculates the height of the select's options. */\n    private _getItemHeight(): number {\n        /* tslint:disable-next-line:no-magic-numbers */\n        return 32;\n        // return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n\n    /** Comparison function to specify which option is displayed. Defaults to object equality. */\n    private _compareWith = (o1: any, o2: any) => o1 === o2;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McOptionModule } from '@ptsecurity/mosaic/core';\nimport { McFormFieldModule } from '@ptsecurity/mosaic/form-field';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport { McTagModule } from '@ptsecurity/mosaic/tag';\n\nimport { MC_SELECT_SCROLL_STRATEGY_PROVIDER, McSelect, McSelectTrigger } from './select.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        McOptionModule,\n        McIconModule,\n        McTagModule\n    ],\n    exports: [McFormFieldModule, McSelect, McSelectTrigger, McOptionModule, CommonModule],\n    declarations: [McSelect, McSelectTrigger],\n    providers: [MC_SELECT_SCROLL_STRATEGY_PROVIDER]\n})\nexport class McSelectModule {}\n","import { InjectionToken } from '@angular/core';\n\n\n/** Injection token that can be used to access the data that was passed in to a sidepanel. */\nexport const MC_SIDEPANEL_DATA = new InjectionToken<any>('McSidepanelData');\n\nexport enum McSidepanelPosition {\n    Right = 'right',\n    Left = 'left',\n    Top = 'top',\n    Bottom = 'bottom'\n}\n\nexport class McSidepanelConfig<D = any> {\n    /** ID for the sidepanel. If omitted, a unique one will be generated. */\n    id?: string;\n\n    /** Data being injected into the child component. */\n    data?: D | null = null;\n\n    position?: McSidepanelPosition = McSidepanelPosition.Right;\n\n    /** Whether the sidepanel has a backdrop. */\n    hasBackdrop?: boolean = true;\n\n    /** When we open multiple sidepanels, backdrop appears only once, except cases then this flag is true. */\n    requiredBackdrop?: boolean = false;\n\n    /** Whether the user can use escape or clicking outside to close the sidepanel. */\n    disableClose?: boolean = false;\n\n    /** Custom class for the overlay pane. */\n    overlayPanelClass?: string | string[] = '';\n}\n","import { animate, AnimationTriggerMetadata, state, style, transition, trigger } from '@angular/animations';\nimport { AnimationCurves } from '@ptsecurity/mosaic/core';\n\nimport { McSidepanelPosition } from './sidepanel-config';\n\n\nexport enum McSidepanelAnimationState {\n    Void = 'void',\n    Visible = 'visible',\n    Hidden = 'hidden'\n}\n\n// TODO Find a way to use dynamic keys and avoid error \"Expression form not supported.\"\n// tslint:disable-next-line\nexport const mcSidepanelTransformAnimation: Record<McSidepanelPosition, { in: string; out: string }> = {\n    right: { in: 'translateX(100%)', out: 'translateX(0%)' },\n    left: { in: 'translateX(-100%)', out: 'translateX(0%)' },\n    top: { in: 'translateY(-100%)', out: 'translateY(0%)' },\n    bottom: { in: 'translateY(100%)', out: 'translateY(0%)' }\n};\n\nexport const mcSidepanelAnimations: {\n    readonly sidepanelState: AnimationTriggerMetadata;\n} = {\n    sidepanelState: trigger('state', [\n        state('hidden',\n            style({ transform: '{{transformIn}}' }),\n            { params: { transformIn: mcSidepanelTransformAnimation[McSidepanelPosition.Right].in }}\n        ),\n        state('visible',\n            style({ transform: '{{transformOut}}' }),\n            { params: { transformOut: mcSidepanelTransformAnimation[McSidepanelPosition.Right].out }}\n        ),\n        transition('visible => void, visible => hidden',\n            animate(`200ms ${AnimationCurves.AccelerationCurve}`)),\n        transition('void => visible',\n            animate(`200ms ${AnimationCurves.DecelerationCurve}`))\n    ])\n};\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ComponentRef,\n    ElementRef,\n    EmbeddedViewRef,\n    EventEmitter, Inject, InjectionToken,\n    OnDestroy,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal } from '@ptsecurity/cdk/portal';\n\nimport {\n    mcSidepanelAnimations,\n    McSidepanelAnimationState,\n    mcSidepanelTransformAnimation\n} from './sidepanel-animations';\n\nimport { McSidepanelConfig, McSidepanelPosition } from './sidepanel-config';\n\n\nexport const MC_SIDEPANEL_WITH_INDENT =\n    new InjectionToken<boolean>('mc-sidepanel-with-indent');\n\nexport const MC_SIDEPANEL_WITH_SHADOW =\n    new InjectionToken<boolean>('mc-sidepanel-with-shadow');\n\n@Component({\n    selector: 'mc-sidepanel-container',\n    templateUrl: './sidepanel-container.component.html',\n    styleUrls: ['./sidepanel.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    animations: [mcSidepanelAnimations.sidepanelState],\n    host: {\n        class: 'mc-sidepanel-container',\n        tabindex: '-1',\n        role: 'dialog',\n        'aria-modal': 'true',\n        '[attr.id]': 'id',\n        '[@state]': `{\n            value: animationState,\n            params: animationTransform\n        }`,\n        '(@state.start)': 'onAnimation($event)',\n        '(@state.done)': 'onAnimation($event)'\n    }\n})\nexport class McSidepanelContainerComponent extends BasePortalOutlet implements OnDestroy {\n    /** ID for the container DOM element. */\n    id: string;\n\n    /** The portal outlet inside of this container into which the content will be loaded. */\n    @ViewChild(CdkPortalOutlet) portalOutlet: CdkPortalOutlet;\n\n    /** The state of the sidepanel animations. */\n    animationState: McSidepanelAnimationState = McSidepanelAnimationState.Void;\n\n    animationTransform: { transformIn: string; transformOut: string };\n\n    /** Emits whenever the state of the animation changes. */\n    animationStateChanged = new EventEmitter<AnimationEvent>();\n\n    /** Whether the component has been destroyed. */\n    private destroyed: boolean;\n\n    constructor(\n        private elementRef: ElementRef<HTMLElement>,\n        private changeDetectorRef: ChangeDetectorRef,\n        public sidepanelConfig: McSidepanelConfig,\n        @Inject(MC_SIDEPANEL_WITH_INDENT) public withIndent: boolean,\n        @Inject(MC_SIDEPANEL_WITH_SHADOW) public withShadow: boolean) {\n        super();\n    }\n\n    ngOnDestroy(): void {\n        this.destroyed = true;\n    }\n\n    /** Attach a component portal as content to this sidepanel container. */\n    attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n        this.validatePortalAttached();\n        this.setAnimation();\n        this.setPanelClass();\n\n        return this.portalOutlet.attachComponentPortal(portal);\n    }\n\n    /** Attach a template portal as content to this sidepanel container. */\n    attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n        this.validatePortalAttached();\n        this.setAnimation();\n        this.setPanelClass();\n\n        return this.portalOutlet.attachTemplatePortal(portal);\n    }\n\n    /** Begin animation of the sidepanel entrance into view. */\n    enter(): void {\n        if (!this.destroyed) {\n            this.animationState = McSidepanelAnimationState.Visible;\n            this.changeDetectorRef.detectChanges();\n        }\n    }\n\n    /** Begin animation of the sidepanel exiting from view. */\n    exit(): void {\n        if (!this.destroyed) {\n            this.animationState = McSidepanelAnimationState.Hidden;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    onAnimation(event: AnimationEvent) {\n        this.animationStateChanged.emit(event);\n    }\n\n    private setAnimation() {\n        const position: McSidepanelPosition = this.sidepanelConfig.position!;\n\n        this.animationTransform = {\n            transformIn: mcSidepanelTransformAnimation[position].in,\n            transformOut: mcSidepanelTransformAnimation[position].out\n        };\n    }\n\n    private setPanelClass() {\n        const element: HTMLElement = this.elementRef.nativeElement;\n        const position: McSidepanelPosition = this.sidepanelConfig.position!;\n\n        element.classList.add(`mc-sidepanel-container_${position}`);\n\n        if (this.withShadow) {\n            element.classList.add('mc-sidepanel-container_shadowed');\n        }\n    }\n\n    private validatePortalAttached() {\n        if (this.portalOutlet.hasAttached()) {\n            throw Error('Attempting to attach sidepanel content after content is already attached');\n        }\n    }\n}\n","import { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { merge, Observable, Subject } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\n\nimport { McSidepanelAnimationState } from './sidepanel-animations';\nimport { McSidepanelConfig } from './sidepanel-config';\nimport { McSidepanelContainerComponent } from './sidepanel-container.component';\n\n\n// Counter for unique sidepanel ids.\nlet uniqueId = 0;\n\nexport class McSidepanelRef<T = any, R = any> {\n    readonly id: string;\n\n    /** Instance of the component making up the content of the sidepanel. */\n    instance: T;\n\n    /** Subject for notifying the user that the sidepanel has been closed and dismissed. */\n    private readonly afterClosed$ = new Subject<R | undefined>();\n\n    /** Subject for notifying the user that the sidepanel has opened and appeared. */\n    private readonly afterOpened$ = new Subject<void>();\n\n    /** Result to be passed down to the `afterDismissed` stream. */\n    private result: R | undefined;\n\n    constructor(\n        public containerInstance: McSidepanelContainerComponent,\n        private overlayRef: OverlayRef,\n        public config: McSidepanelConfig) {\n\n        this.id = this.config.id || `mc-sidepanel-${uniqueId++}`;\n        this.containerInstance.id = this.id;\n\n        // Emit when opening animation completes\n        containerInstance.animationStateChanged.pipe(\n            filter(\n                (event) => event.phaseName === 'done' && event.toState === McSidepanelAnimationState.Visible\n            ),\n            take(1)\n        ).subscribe(() => {\n            this.afterOpened$.next();\n            this.afterOpened$.complete();\n        });\n\n        // Dispose overlay when closing animation is complete\n        containerInstance.animationStateChanged.pipe(\n            filter(\n                (event) => event.phaseName === 'done' && event.toState === McSidepanelAnimationState.Hidden\n            ),\n            take(1)\n        ).subscribe(() => {\n            overlayRef.dispose();\n            this.afterClosed$.next(this.result);\n            this.afterClosed$.complete();\n        });\n\n        if (!containerInstance.sidepanelConfig.disableClose) {\n            merge(\n                overlayRef.backdropClick(),\n                overlayRef.keydownEvents().pipe(\n                    // tslint:disable:deprecation\n                    // keyCode is deprecated, but IE11 and Edge don't support code property, which we need use instead\n                    filter((event) => event.keyCode === ESCAPE)\n                )\n            ).subscribe(() => this.close());\n        }\n    }\n\n    close(result?: R): void {\n        if (!this.afterClosed$.closed) {\n            // Transition the backdrop in parallel to the sidepanel.\n            this.containerInstance.animationStateChanged.pipe(\n                filter((event) => event.phaseName === 'done'),\n                take(1)\n            ).subscribe(() => this.overlayRef.detachBackdrop());\n\n            this.result = result;\n            this.containerInstance.exit();\n        }\n    }\n\n    /** Gets an observable that is notified when the sidepanel is finished closing. */\n    afterClosed(): Observable<R | undefined> {\n        return this.afterClosed$.asObservable();\n    }\n\n    /** Gets an observable that is notified when the sidepanel has opened and appeared. */\n    afterOpened(): Observable<void> {\n        return this.afterOpened$.asObservable();\n    }\n}\n","import {\n    ComponentRef,\n    Inject,\n    Injectable,\n    InjectionToken,\n    Injector, OnDestroy,\n    Optional,\n    SkipSelf,\n    TemplateRef\n} from '@angular/core';\nimport { Overlay, OverlayConfig, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal, IComponentType, PortalInjector, TemplatePortal } from '@ptsecurity/cdk/portal';\n\nimport { MC_SIDEPANEL_DATA, McSidepanelConfig } from './sidepanel-config';\nimport {\n    McSidepanelContainerComponent,\n    MC_SIDEPANEL_WITH_INDENT,\n    MC_SIDEPANEL_WITH_SHADOW\n} from './sidepanel-container.component';\nimport { McSidepanelRef } from './sidepanel-ref';\n\n\n/** Injection token that can be used to specify default sidepanel options. */\nexport const MC_SIDEPANEL_DEFAULT_OPTIONS =\n    new InjectionToken<McSidepanelConfig>('mc-sidepanel-default-options');\n\n@Injectable()\nexport class McSidepanelService implements OnDestroy {\n    private openedSidepanelsAtThisLevel: McSidepanelRef[] = [];\n\n    /** Keeps track of the currently-open sidepanels. */\n    get openedSidepanels(): McSidepanelRef[] {\n        return this.parentSidepanelService ? this.parentSidepanelService.openedSidepanels :\n            this.openedSidepanelsAtThisLevel;\n    }\n\n    constructor(\n        private overlay: Overlay,\n        private injector: Injector,\n        @Optional() @Inject(MC_SIDEPANEL_DEFAULT_OPTIONS) private defaultOptions: McSidepanelConfig,\n        @Optional() @SkipSelf() private parentSidepanelService: McSidepanelService) {\n    }\n\n    ngOnDestroy() {\n        // Only close the sidepanels at this level on destroy\n        // since the parent service may still be active.\n        this.closeSidepanels(this.openedSidepanelsAtThisLevel);\n    }\n\n    open<T, D = any>(componentOrTemplateRef: IComponentType<T> | TemplateRef<T>,\n                     config?: McSidepanelConfig<D>): McSidepanelRef<T> {\n        const fullConfig = {\n            ...(this.defaultOptions || new McSidepanelConfig()),\n            ...config\n        };\n\n        if (fullConfig.id && this.getSidepanelById(fullConfig.id)) {\n            throw Error(`Sidepanel with id \"${fullConfig.id}\" exists already. The sidepanel id must be unique.`);\n        }\n\n        const overlayRef = this.createOverlay(fullConfig);\n        const container = this.attachContainer(overlayRef, fullConfig);\n        const ref = new McSidepanelRef(container, overlayRef, fullConfig);\n\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            container.attachTemplatePortal(new TemplatePortal<T>(componentOrTemplateRef, null!, {\n                $implicit: fullConfig.data,\n                sidepanelRef: ref\n            } as any));\n        } else {\n            const injector = this.createInjector(fullConfig, ref, container);\n            const portal = new ComponentPortal(componentOrTemplateRef, undefined, injector);\n            const contentRef = container.attachComponentPortal(portal);\n\n            ref.instance = contentRef.instance;\n        }\n\n        this.openedSidepanels.push(ref);\n        ref.afterClosed().subscribe(() => this.removeOpenSidepanel(ref));\n        container.enter();\n\n        return ref;\n    }\n\n    /**\n     * Closes all of the currently-open sidepanels.\n     */\n    closeAll(): void {\n        this.closeSidepanels(this.openedSidepanels);\n    }\n\n    /**\n     * Finds an open sidepanel by its id.\n     * @param id ID to use when looking up the sidepanel.\n     */\n    getSidepanelById(id: string): McSidepanelRef | undefined {\n        return this.openedSidepanels.find((sidepanel) => sidepanel.id === id);\n    }\n\n    /**\n     * Attaches the sidepanel container component to the overlay.\n     */\n    private attachContainer(overlayRef: OverlayRef, config: McSidepanelConfig): McSidepanelContainerComponent {\n        const openedSidepanelsWithSamePosition = this.getOpenedSidepanelsWithSamePosition(config);\n\n        const injector = new PortalInjector(this.injector, new WeakMap<any>([\n            [McSidepanelConfig, config],\n            [MC_SIDEPANEL_WITH_INDENT, openedSidepanelsWithSamePosition.length >= 1],\n            [MC_SIDEPANEL_WITH_SHADOW, openedSidepanelsWithSamePosition.length < 2] // tslint:disable-line\n        ]));\n\n        const containerPortal = new ComponentPortal(McSidepanelContainerComponent, undefined, injector);\n        const containerRef: ComponentRef<McSidepanelContainerComponent> = overlayRef.attach(containerPortal);\n\n        return containerRef.instance;\n    }\n\n    /**\n     * Creates a custom injector to be used inside the sidepanel. This allows a component loaded inside\n     * of a sidepanel to close itself and, optionally, to return a value.\n     * @param config Config object that is used to construct the sidepanel.\n     * @param sidepanelRef Reference to the sidepanel.\n     * @param sidepanelContainer Sidepanel container element that wraps all of the contents.\n     * @returns The custom injector that can be used inside the sidepanel.\n     */\n    private createInjector<T>(\n        config: McSidepanelConfig,\n        sidepanelRef: McSidepanelRef<T>,\n        sidepanelContainer: McSidepanelContainerComponent): PortalInjector {\n\n        // The McSidepanelContainerComponent is injected in the portal as the McSidepanelContainerComponent and\n        // the sidepanel's content are created out of the same ViewContainerRef and as such, are siblings for injector\n        // purposes. To allow the hierarchy that is expected, the McSidepanelContainerComponent is explicitly\n        // added to the injection tokens.\n        const injectionTokens = new WeakMap<any>([\n            [McSidepanelContainerComponent, sidepanelContainer],\n            [MC_SIDEPANEL_DATA, config.data],\n            [McSidepanelRef, sidepanelRef]\n        ]);\n\n        return new PortalInjector(this.injector, injectionTokens);\n    }\n\n    /**\n     * Creates a new overlay and places it in the correct location.\n     * @param config The user-specified sidepanel config.\n     */\n    private createOverlay(config: McSidepanelConfig): OverlayRef {\n        const overlayConfig = new OverlayConfig({\n            hasBackdrop: config.hasBackdrop,\n            backdropClass: this.getBackdropClass(config),\n            maxWidth: '100%',\n            panelClass: config.overlayPanelClass,\n            scrollStrategy: this.overlay.scrollStrategies.block(),\n            positionStrategy: this.overlay.position().global()\n        });\n\n        return this.overlay.create(overlayConfig);\n    }\n\n    private closeSidepanels(sidepanels: McSidepanelRef[]) {\n        const reversedOpenedSidepanels = [...sidepanels.reverse()];\n\n        reversedOpenedSidepanels.forEach((sidepanelRef: McSidepanelRef) => {\n            sidepanelRef.close();\n        });\n    }\n\n    private getBackdropClass(config: McSidepanelConfig): string {\n        const hasOpenedSidepanelWithBackdrop =\n            this.openedSidepanels.some((sidepanelRef) => sidepanelRef.config.hasBackdrop!);\n\n        return config.requiredBackdrop || !hasOpenedSidepanelWithBackdrop ? 'cdk-overlay-dark-backdrop' :\n            'cdk-overlay-transparent-backdrop';\n    }\n\n    private getOpenedSidepanelsWithSamePosition(config: McSidepanelConfig): McSidepanelRef[] {\n        return this.openedSidepanels.filter((sidepanelRef) => sidepanelRef.config.position === config.position);\n    }\n\n    /**\n     * Removes a sidepanel from the array of open sidepanels.\n     * @param sidepanelRef Sidepanel to be removed.\n     */\n    private removeOpenSidepanel(sidepanelRef: McSidepanelRef) {\n        const index = this.openedSidepanels.indexOf(sidepanelRef);\n\n        if (index > -1) {\n            this.openedSidepanels.splice(index, 1);\n        }\n    }\n}\n","import { Component, Directive, ElementRef, Input, OnChanges, OnInit, Optional, SimpleChanges } from '@angular/core';\n\nimport { McSidepanelRef } from './sidepanel-ref';\nimport { McSidepanelService } from './sidepanel.service';\n\n\n/**\n * Button that will close the current sidepanel.\n */\n@Directive({\n    selector: 'button[mc-sidepanel-close], button[mcSidepanelClose]',\n    host: {\n        '(click)': 'sidepanelRef.close(sidepanelResult)',\n        class: 'mc-sidepanel-close',\n        type: 'button'\n    }\n})\nexport class McSidepanelClose implements OnInit, OnChanges {\n    @Input('mc-sidepanel-close') sidepanelResult: any;\n\n    @Input('mcSidepanelClose') mcSidepanelClose: any;\n\n    constructor(\n        @Optional() public sidepanelRef: McSidepanelRef,\n        private elementRef: ElementRef<HTMLElement>,\n        private sidepanelService: McSidepanelService\n    ) {}\n\n    ngOnInit() {\n        if (!this.sidepanelRef) {\n            // When this directive is included in a sidepanel via TemplateRef (rather than being\n            // in a Component), the SidepanelRef isn't available via injection because embedded\n            // views cannot be given a custom injector. Instead, we look up the SidepanelRef by\n            // ID.\n            // This must occur in `onInit`, as the ID binding for the sidepanel container won't\n            // be resolved at constructor time. We use setTimeout by same reason.\n            setTimeout(() => {\n                this.sidepanelRef = getClosestSidepanel(this.elementRef, this.sidepanelService.openedSidepanels)!;\n            });\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const proxiedChange = changes.mcSidepanelClose || changes.sidepanelResult;\n\n        if (proxiedChange) {\n            this.sidepanelResult = proxiedChange.currentValue;\n        }\n    }\n}\n\n/**\n * Header of a sidepanel.\n */\n@Component({\n    selector: 'mc-sidepanel-header',\n    template: `\n        <div class=\"mc-sidepanel-title\">\n            <ng-content></ng-content>\n        </div>\n        <button *ngIf=\"closeable\" mc-sidepanel-close>\n            <span class=\"mc-sidepanel-close-x\">\n                <i mc-icon=\"mc-close-L_16\" class=\"mc-icon mc-icon_light\" color=\"second\"></i>\n            </span>\n        </button>\n    `,\n    host: {\n        class: 'mc-sidepanel-header'\n    }\n})\nexport class McSidepanelHeader {\n    @Input() closeable: boolean;\n}\n\n/**\n * Scrollable content container of a sidepanel.\n */\n@Directive({\n    selector: 'mc-sidepanel-body, [mc-sidepanel-body], mcSidepanelBody',\n    host: {\n        class: 'mc-sidepanel-body'\n    }\n})\nexport class McSidepanelBody {}\n\n/**\n * Footer of a sidepanel.\n */\n@Directive({\n    selector: 'mc-sidepanel-footer, [mc-sidepanel-footer], mcSidepanelFooter',\n    host: {\n        class: 'mc-sidepanel-footer'\n    }\n})\nexport class McSidepanelFooter {}\n\n/**\n * Actions block of a sidepanel footer.\n */\n@Directive({\n    selector: 'mc-sidepanel-actions, [mc-sidepanel-actions], mcSidepanelActions',\n    host: {\n        class: 'mc-sidepanel-actions'\n    }\n})\nexport class McSidepanelActions {}\n\n/**\n * Finds the closest McSidepanelRef to an element by looking at the DOM.\n * @param element Element relative to which to look for a sidepanel.\n * @param openSidepanels References to the currently-open sidepanels.\n */\nfunction getClosestSidepanel(element: ElementRef<HTMLElement>, openSidepanels: McSidepanelRef[]) {\n    let parent: HTMLElement | null = element.nativeElement.parentElement;\n\n    while (parent && !parent.classList.contains('mc-sidepanel-container')) {\n        parent = parent.parentElement;\n    }\n\n    return parent ? openSidepanels.find((sidepanel) => sidepanel.id === parent!.id) : null;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { PortalModule } from '@ptsecurity/cdk/portal';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McSidepanelContainerComponent } from './sidepanel-container.component';\nimport {\n    McSidepanelActions,\n    McSidepanelBody,\n    McSidepanelClose,\n    McSidepanelFooter,\n    McSidepanelHeader\n} from './sidepanel-directives';\nimport { McSidepanelService } from './sidepanel.service';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        PortalModule,\n        McCommonModule,\n        McIconModule\n    ],\n    providers: [McSidepanelService],\n    declarations: [\n        McSidepanelContainerComponent,\n        McSidepanelClose,\n        McSidepanelHeader,\n        McSidepanelBody,\n        McSidepanelFooter,\n        McSidepanelActions\n    ],\n    entryComponents: [McSidepanelContainerComponent],\n    exports: [\n        McSidepanelContainerComponent,\n        McSidepanelClose,\n        McSidepanelHeader,\n        McSidepanelBody,\n        McSidepanelFooter,\n        McSidepanelActions\n    ]\n})\nexport class McSidepanelModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    NgZone, OnDestroy,\n    OnInit,\n    Renderer2,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { coerceBooleanProperty, coerceCssPixelValue, coerceNumberProperty } from '@ptsecurity/cdk/coercion';\n\n\ninterface IArea {\n    area: McSplitterAreaDirective;\n    index: number;\n    order: number;\n    initialSize: number;\n}\n\ninterface IPoint {\n    x: number;\n    y: number;\n}\n\n\nconst enum AttributeProperty {\n    Disabled = 'disabled'\n}\n\nconst enum Cursor {\n    Default = 'default',\n    ResizeColumn = 'col-resize',\n    ResizeRow = 'row-resize'\n}\n\nconst enum StyleProperty {\n    Cursor = 'cursor',\n    Flex = 'flex',\n    FlexBasis = 'flex-basis',\n    FlexDirection = 'flex-direction',\n    Height = 'height',\n    MaxWidth = 'max-width',\n    MinHeight = 'min-height',\n    MinWidth = 'minWidth',\n    OffsetHeight = 'offsetHeight',\n    OffsetWidth = 'offsetWidth',\n    Order = 'order',\n    Width = 'width'\n}\n\nconst enum State {\n    Disabled = 'disabled',\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\nexport const enum Direction {\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\n@Component({\n    selector: 'mc-splitter',\n    preserveWhitespaces: false,\n    styleUrls: ['splitter.css'],\n    templateUrl: './splitter.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSplitterComponent implements OnInit {\n    readonly areas: IArea[] = [];\n\n    private _direction: Direction;\n    private _disabled: boolean = false;\n    private _gutterSize: number = 6;\n\n    private isDragging: boolean = false;\n\n    private readonly areaPositionDivider: number = 2;\n    private readonly listeners: (() => void)[] = [];\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set gutterSize(gutterSize: number) {\n        const size = coerceNumberProperty(gutterSize);\n        this._gutterSize = size > 0 ? size : this.gutterSize;\n    }\n\n    get gutterSize(): number {\n        return this._gutterSize;\n    }\n\n    constructor(private elementRef: ElementRef,\n                private ngZone: NgZone,\n                private renderer: Renderer2) {}\n\n    addArea(area: McSplitterAreaDirective): void {\n        const index: number = this.areas.length;\n        const order: number = index * this.areaPositionDivider;\n        const size: number = area.getSize();\n\n        area.setOrder(order);\n\n        this.areas.push({\n            area,\n            index,\n            order,\n            initialSize: size\n        });\n    }\n\n    ngOnInit(): void {\n        if (!this.direction) {\n            this.direction = Direction.Horizontal;\n        }\n\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'column' : 'row');\n    }\n\n    onMouseDown(event: MouseEvent, leftAreaIndex: number, rightAreaIndex: number) {\n        if (this.disabled) {\n            return;\n        }\n\n        const leftArea = this.areas[leftAreaIndex];\n        const rightArea = this.areas[rightAreaIndex];\n\n        const startPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        leftArea.initialSize = leftArea.area.getSize();\n        rightArea.initialSize = rightArea.area.getSize();\n\n        this.areas.forEach((item) => {\n            const size = item.area.getSize();\n            item.area.disableFlex();\n            item.area.setSize(size);\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mouseup',\n                    () => this.onMouseUp()\n                )\n            );\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mousemove',\n                    (e: MouseEvent) => this.onMouseMove(e, startPoint, leftArea, rightArea)\n                )\n            );\n        });\n\n        this.isDragging = true;\n    }\n\n    removeArea(area: McSplitterAreaDirective): void {\n        let indexToRemove: number = -1;\n\n        this.areas.some((item, index) => {\n            if (item.area === area) {\n                indexToRemove = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        if (indexToRemove === -1) {\n            return;\n        }\n\n        this.areas.splice(indexToRemove, 1);\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private onMouseMove(event: MouseEvent, startPoint: IPoint, leftArea: IArea, rightArea: IArea) {\n        if (!this.isDragging || this.disabled) {\n            return;\n        }\n\n        const endPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        const offset = this.isVertical()\n            ? startPoint.y - endPoint.y\n            : startPoint.x - endPoint.x;\n\n        const newLeftAreaSize = leftArea.initialSize - offset;\n        const newRightAreaSize = rightArea.initialSize + offset;\n\n        const minLeftAreaSize = leftArea.area.getMinSize();\n        const minRightAreaSize = rightArea.area.getMinSize();\n\n        if (newLeftAreaSize <= minLeftAreaSize || newRightAreaSize <= minRightAreaSize) {\n            const rightAreaOffset = leftArea.initialSize - minLeftAreaSize;\n\n            leftArea.area.setSize(minLeftAreaSize);\n            rightArea.area.setSize(rightArea.initialSize + rightAreaOffset);\n        } else if (newLeftAreaSize <= 0) {\n            leftArea.area.setSize(0);\n            rightArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n        } else if (newRightAreaSize <= 0) {\n            leftArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n            rightArea.area.setSize(0);\n        } else {\n            leftArea.area.setSize(newLeftAreaSize);\n            rightArea.area.setSize(newRightAreaSize);\n        }\n    }\n\n    private onMouseUp() {\n        while (this.listeners.length > 0) {\n            const unsubscribe = this.listeners.pop();\n\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        }\n\n        this.isDragging = false;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-gutter'\n})\nexport class McGutterDirective implements OnInit {\n    private _direction: Direction = Direction.Vertical;\n    private _disabled: boolean = false;\n    private _order: number = 0;\n    private _size: number = 6;\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set order(order: number) {\n        this._order = coerceNumberProperty(order);\n    }\n\n    get order(): number {\n        return this._order;\n    }\n\n    @Input()\n    set size(size: number) {\n        this._size = coerceNumberProperty(size);\n    }\n\n    get size(): number {\n        return this._size;\n    }\n\n    constructor(private renderer: Renderer2,\n                private elementRef: ElementRef) {\n    }\n\n    ngOnInit(): void {\n        this.setStyle(StyleProperty.Cursor, this.getCursor(this.getState()));\n        this.setStyle(StyleProperty.FlexBasis, coerceCssPixelValue(this.size));\n        this.setStyle(this.isVertical() ? StyleProperty.Height : StyleProperty.Width, coerceCssPixelValue(this.size));\n        this.setStyle(StyleProperty.Order, this.order);\n\n        if (!this.isVertical()) {\n            this.setStyle(StyleProperty.Height, '100%');\n        }\n\n        if (this.disabled) {\n            this.setAttr(AttributeProperty.Disabled, 'true');\n        }\n\n        // fix IE issue with gutter icon. flex-direction is requied for flex alignment options\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'row' : 'column');\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private getCursor(state: State): string {\n        switch (state) {\n            case State.Disabled:\n                return Cursor.Default;\n            case State.Vertical:\n                return  Cursor.ResizeRow;\n            case State.Horizontal:\n                return Cursor.ResizeColumn;\n            default:\n                throw Error(`Unknown gutter state for cursor: ${state}`);\n        }\n    }\n\n    private getState(): State {\n        return this.disabled\n            ? State.Disabled\n            : this.direction === Direction.Vertical\n                ? State.Vertical\n                : State.Horizontal;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n\n    private setAttr(attribute: AttributeProperty, value: string) {\n        this.renderer.setAttribute(this.elementRef.nativeElement, attribute, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-splitter-area'\n})\nexport class McSplitterAreaDirective implements OnInit, OnDestroy {\n    constructor(private elementRef: ElementRef,\n                private renderer: Renderer2,\n                private splitter: McSplitterComponent) {}\n\n    disableFlex(): void {\n        this.renderer.removeStyle(this.elementRef.nativeElement, 'flex');\n    }\n\n    ngOnInit(): void {\n        this.splitter.addArea(this);\n\n        this.removeStyle(StyleProperty.MaxWidth);\n        this.setStyle(StyleProperty.Flex, '1');\n\n        if (this.splitter.direction === Direction.Vertical) {\n            this.setStyle(StyleProperty.Width, '100%');\n            this.removeStyle(StyleProperty.Height);\n        } else {\n            this.setStyle(StyleProperty.Height, '100%');\n            this.removeStyle(StyleProperty.Width);\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.splitter.removeArea(this);\n    }\n\n    setOrder(order: number): void {\n        this.setStyle(StyleProperty.Order, order);\n    }\n\n    setSize(size: number): void {\n        const sz = coerceNumberProperty(size);\n        this.setStyle(this.getSizeProperty(), coerceCssPixelValue(sz));\n    }\n\n    getSize(): number {\n        return this.elementRef.nativeElement[this.getOffsetSizeProperty()];\n    }\n\n    getMinSize(): number {\n        const styles = getComputedStyle(this.elementRef.nativeElement);\n\n        return parseFloat(styles[this.getMinSizeProperty()]);\n    }\n\n    private isVertical(): boolean {\n        return this.splitter.direction === Direction.Vertical;\n    }\n\n    private getMinSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.MinHeight\n            : StyleProperty.MinWidth;\n    }\n\n    private getOffsetSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.OffsetHeight\n            : StyleProperty.OffsetWidth;\n    }\n\n    private getSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.Height\n            : StyleProperty.Width;\n    }\n\n    private setStyle(style: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, style, value);\n    }\n\n    private removeStyle(style: StyleProperty) {\n        this.renderer.removeStyle(this.elementRef.nativeElement, style);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McGutterDirective, McSplitterAreaDirective, McSplitterComponent } from './splitter.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McIconModule\n    ],\n    exports: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ],\n    declarations: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ]\n})\nexport class McSplitterModule {\n}\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport {\n    Attribute,\n    ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ElementRef, EventEmitter, forwardRef,\n    Input, Output, ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    ThemePalette,\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\nlet nextUniqueId = 0;\n\ntype ToggleLabelPositionType = 'left' | 'right';\n\nexport class McToggleBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McToggleMixinBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McToggleBase = mixinTabIndex(mixinColor(mixinDisabled(McToggleBase), ThemePalette.Primary));\n\nexport class McToggleChange {\n    source: McToggleComponent;\n    checked: boolean;\n}\n\n@Component({\n    selector: 'mc-toggle',\n    exportAs: 'mcToggle',\n    templateUrl: './toggle.component.html',\n    styleUrls: ['./toggle.css'],\n    providers: [\n        {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => McToggleComponent), multi: true}\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color', 'tabIndex'],\n    host: {\n        class: 'mc-toggle',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-toggle_off]': '!checked'\n    },\n    animations: [\n        trigger('switch', [\n            state('true' , style({ left: '50%' })),\n            state('false', style({ left: '1px' })),\n            transition('true <=> false', animate('150ms'))\n        ])\n    ]\n})\nexport class McToggleComponent extends _McToggleMixinBase\n    implements ControlValueAccessor, CanColor, CanDisable, HasTabIndex {\n\n    @ViewChild('input') _inputElement: ElementRef;\n\n    @Input() labelPosition: ToggleLabelPositionType = 'right';\n\n    @Input('aria-label') ariaLabel: string = '';\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-toggle-${++nextUniqueId}`;\n\n    // tslint:disable:member-ordering\n    @Input() id: string = this._uniqueId;\n\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    @Input() name: string | null = null;\n\n    @Input() value: string;\n\n    private _disabled: boolean = false;\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this._disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    get checked() {\n        return this._checked;\n    }\n\n    @Input()\n    set checked(value: boolean) {\n        if (value !== this._checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    @Output() readonly change: EventEmitter<McToggleChange> =\n        new EventEmitter<McToggleChange>();\n\n    constructor(public _elementRef: ElementRef,\n                private _focusMonitor: FocusMonitor,\n                private _changeDetectorRef: ChangeDetectorRef,\n                @Attribute('tabindex') tabIndex: string\n    ) {\n        super(_elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _getAriaChecked(): boolean {\n        return this.checked;\n    }\n\n    _onInteractionEvent(event: Event) {\n        event.stopPropagation();\n    }\n\n    _onLabelTextChange() {\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onInputClick(event: MouseEvent) {\n        event.stopPropagation();\n        this._updateModelValue();\n        this._emitChangeEvent();\n    }\n\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    registerOnChange(fn: any) {\n        this._onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this._onTouchedCallback = fn;\n    }\n\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    // tslint:disable-next-line:no-empty\n    private _onTouchedCallback = () => {};\n\n    // tslint:disable-next-line:no-empty\n    private _onChangeCallback = (_: any) => {};\n\n    private _updateModelValue() {\n        this._checked = !this.checked;\n        this._onChangeCallback(this.checked);\n        this._onTouchedCallback();\n    }\n\n    private _emitChangeEvent() {\n        const event = new McToggleChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._onChangeCallback(this.checked);\n        this.change.emit(event);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McToggleComponent } from './toggle.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule],\n    exports: [McToggleComponent],\n    declarations: [McToggleComponent]\n})\nexport class McToggleModule {\n}\n","import {\n    Directive, DoCheck, ElementRef, Inject,\n    Input, OnChanges, OnDestroy, Optional,\n    Self, InjectionToken, NgZone, OnInit\n} from '@angular/core';\nimport { FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { fromEvent, Subscription, Subject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\n\nexport const MC_TEXTAREA_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_TEXTAREA_VALUE_ACCESSOR');\n\nlet nextUniqueId = 0;\n\nconst ROW_SEPARATOR = '\\n';\n\nexport class McTextareaBase {\n    constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n                public _parentForm: NgForm,\n                public _parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McTextareaMixinBase: CanUpdateErrorStateCtor & typeof McTextareaBase = mixinErrorState(McTextareaBase);\n\n@Directive({\n    selector: 'textarea[mcTextarea]',\n    exportAs: 'mcTextarea',\n    host: {\n        class: 'mc-textarea',\n        '[class.mc-textarea-resizable]': '!canGrow',\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': 'focusChanged(false)',\n        '(focus)': 'focusChanged(true)'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McTextarea }]\n})\nexport class McTextarea extends McTextareaMixinBase implements McFormFieldControl<any>, OnInit, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    @Input() canGrow: boolean = true;\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-textarea';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this.uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this.valueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this.valueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected uid = `mc-textsrea-${nextUniqueId++}`;\n    protected previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n\n    private valueAccessor: { value: any };\n    private growSubscription: Subscription;\n\n    private lineHeight: number = 0;\n    private freeRowsHeight: number = 0;\n    private minHeight: number = 0;\n\n    constructor(protected elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_TEXTAREA_VALUE_ACCESSOR) inputValueAccessor: any,\n                private ngZone: NgZone) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the textarea value\n        // accessor.\n        this.valueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        const growObserver = fromEvent(elementRef.nativeElement, 'input')\n            /*.pipe(\n                map((event: any) => this.getGrowHeight()),\n                // map((event: any) => event.target.scrollHeight),\n                distinctUntilChanged()\n            )*/;\n        this.growSubscription = growObserver.subscribe(this.grow.bind(this));\n    }\n\n    ngOnInit() {\n        setTimeout(() => this.grow(), 0);\n        this.lineHeight = parseInt(getComputedStyle(this.elementRef.nativeElement).lineHeight!, 10);\n\n        const paddingTop = parseInt(getComputedStyle(this.elementRef.nativeElement).paddingTop!, 10);\n        const paddingBottom = parseInt(getComputedStyle(this.elementRef.nativeElement).paddingBottom!, 10);\n\n        // tslint:disable-next-line:no-magic-numbers\n        this.minHeight = this.lineHeight * 2 + paddingTop + paddingBottom;\n        this.freeRowsHeight = this.lineHeight;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        this.growSubscription.unsubscribe();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    /** Grow textarea height to avoid vertical scroll  */\n    grow() {\n        if (!this.canGrow) {\n            return;\n        }\n\n        this.ngZone.runOutsideAngular(() => {\n            const textarea = this.elementRef.nativeElement;\n\n            const outerHeight = parseInt(window.getComputedStyle(textarea).height!, 10);\n            const diff = outerHeight - textarea.clientHeight;\n\n            textarea.style.height = 0; // this line is important to height recalculation\n\n            const height = Math.max(this.minHeight, textarea.scrollHeight + diff + this.freeRowsHeight);\n            textarea.style.height = `${height}px`;\n        });\n    }\n\n    /** Focuses the textarea. */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the textarea changes. */\n    focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native textarea `value` property. */\n    protected dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the textarea is invalid based on the native validation. */\n    protected isBadInput(): boolean {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this.elementRef.nativeElement as HTMLTextAreaElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private getGrowHeight(): number {\n        const textarea = this.elementRef.nativeElement;\n        const outerHeight = parseInt(window.getComputedStyle(textarea).height!.toString(), 10);\n        const diff = outerHeight - textarea.clientHeight;\n\n        return Math.max(this.minHeight, textarea.scrollHeight + diff);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McTextarea } from './textarea.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McTextarea],\n    declarations: [McTextarea]\n})\nexport class McTextareaModule {\n}\n","import {\n    Directive,\n    DoCheck,\n    ElementRef,\n    forwardRef,\n    Inject,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Renderer2,\n    Self\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroupDirective,\n    NG_VALIDATORS,\n    NgControl,\n    NgForm,\n    ValidationErrors,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { MC_INPUT_VALUE_ACCESSOR } from '@ptsecurity/mosaic/input';\nimport {\n    noop,\n    Subject\n} from 'rxjs';\n\nimport {\n    ARROW_DOWN_KEYCODE,\n    ARROW_LEFT_KEYCODE,\n    ARROW_RIGHT_KEYCODE,\n    ARROW_UP_KEYCODE,\n    DEFAULT_TIME_FORMAT,\n    HOURS_PER_DAY,\n    HOURS_MINUTES_REGEXP,\n    HOURS_MINUTES_SECONDS_REGEXP,\n    HOURS_ONLY_REGEXP,\n    MINUTES_PER_HOUR,\n    SECONDS_PER_MINUTE,\n    TIMEFORMAT_PLACEHOLDERS,\n    TimeFormats,\n    TimeParts\n} from './timepicker.constants';\n\n\nlet uniqueComponentIdSuffix: number = 0;\nlet validatorOnChange: () => void = noop;\nlet validator: ValidatorFn | null = () => null;\n\nexport class McTimepickerBase {\n    constructor(\n        public _defaultErrorStateMatcher: ErrorStateMatcher,\n        public _parentForm: NgForm,\n        public _parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl) { }\n}\n\n// tslint:disable-next-line naming-convention\nexport const McTimepickerMixinBase:\n    CanUpdateErrorStateCtor &\n    typeof McTimepickerBase = mixinErrorState(McTimepickerBase);\n\n@Directive({\n    selector: 'input[mcTimepicker]',\n    exportAs: 'mcTimepickerInput',\n    host: {\n        class: 'mc-timepicker mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '[attr.time-format]': 'timeFormat',\n        '[attr.min-time]': 'minTime',\n        '[attr.max-time]': 'maxTime',\n        '[attr.value]': 'value',\n        '(blur)': 'onBlur()',\n        '(focus)': 'focusChanged(true)',\n        '(input)': 'onInput()',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    },\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useValue: {\n                validate(c) { return validator ? validator(c) : null; },\n                registerOnValidatorChange(fn: () => void): void { validatorOnChange = fn; }\n            },\n            multi: true\n        },\n        {\n            provide: McFormFieldControl,\n            useExisting: forwardRef(() => McTimepicker)\n        }\n    ]\n\n})\nexport class McTimepicker extends McTimepickerMixinBase\n    implements McFormFieldControl<any>,\n        OnChanges,\n        OnDestroy,\n        DoCheck,\n        CanUpdateErrorState,\n        ControlValueAccessor {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-timepicker';\n\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) { return this.ngControl.disabled; }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n        }\n\n        this.stateChanges.next();\n    }\n\n    @Input()\n    get id(): string { return this._id; }\n\n    set id(value: string) { this._id = value || this.uid; }\n\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean { return this._required; }\n\n    set required(value: boolean) { this._required = coerceBooleanProperty(value); }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string { return this.inputValueAccessor.value; }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this.inputValueAccessor.value = value;\n            this.applyInputChanges();\n        }\n    }\n\n    @Input('time-format')\n    get timeFormat(): TimeFormats { return this._timeFormat; }\n\n    set timeFormat(formatValue: TimeFormats) {\n        this._timeFormat = Object\n            .keys(TimeFormats)\n            .map((timeFormatKey) => TimeFormats[timeFormatKey])\n            .indexOf(formatValue) > -1 ? formatValue : DEFAULT_TIME_FORMAT;\n\n        validatorOnChange();\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[this._timeFormat];\n    }\n\n    @Input('min-time')\n    get minTime(): string | null { return this._minTime; }\n\n    set minTime(minValue: string | null) {\n        this._minTime = minValue;\n        this.minDateTime = minValue !== null ? this.getDateFromTimeString(minValue) : undefined;\n        validatorOnChange();\n    }\n\n    @Input('max-time')\n    get maxTime(): string | null { return this._maxTime; }\n\n    set maxTime(maxValue: string | null) {\n        this._maxTime = maxValue;\n        this.maxDateTime = maxValue !== null ? this.getDateFromTimeString(maxValue) : undefined;\n        validatorOnChange();\n    }\n\n    private _id: string;\n    private readonly uid = `mc-timepicker-${uniqueComponentIdSuffix++}`;\n    private _disabled: boolean;\n    private _required: boolean;\n    private previousNativeValue: any;\n    private readonly inputValueAccessor: { value: any };\n    private onChange: (value: any) => void;\n    private onTouched: () => void;\n    private _timeFormat: TimeFormats;\n    private _minTime: string | null = null;\n    private minDateTime: Date | undefined;\n    private _maxTime: string | null = null;\n    private maxDateTime: Date | undefined;\n    private currentDateTimeInput: Date | undefined;\n\n    constructor(private readonly elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any,\n                private readonly renderer: Renderer2) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this.inputValueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n        this.onChange = noop;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[DEFAULT_TIME_FORMAT];\n\n        // Instead of NG_VALUE_ACCESSOR (https://github.com/angular/material2/issues/8158#issuecomment-344618103)\n        if (this.ngControl) { this.ngControl.valueAccessor = this; }\n\n        // Substitute initial empty validator with validator linked to directive object instance (workaround)\n        validator = Validators.compose([\n            () => this.parseValidator(),\n            () => this.minTimeValidator(),\n            () => this.maxTimeValidator()\n        ]);\n    }\n\n    ngOnChanges(): void {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck(): void {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    focusChanged(isFocused: boolean): void {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.onTouched();\n            this.stateChanges.next();\n        }\n    }\n\n    onBlur() {\n        this.applyInputChanges();\n        this.focusChanged(false);\n    }\n\n    onPaste($event) {\n        $event.preventDefault();\n        const clipboardUserInput: string = $event.clipboardData.getData('text');\n\n        if (this.getDateFromTimeString(clipboardUserInput) === undefined) { return; }\n\n        this.elementRef.nativeElement.value = clipboardUserInput;\n        this.onInput();\n    }\n\n    onInput() {\n        const initialCursorStart: number = this.elementRef.nativeElement.selectionStart;\n        const initialCursorEnd: number = this.elementRef.nativeElement.selectionEnd;\n        let isAutocompleteTriggered: boolean = false;\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(this.elementRef.nativeElement.value);\n\n        // tslint:disable no-magic-numbers\n        if (hoursOnly &&\n            hoursOnly[1] &&\n            hoursOnly[1].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutes &&\n            hoursAndMinutes[1].length === 1 &&\n            hoursAndMinutes[2] &&\n            hoursAndMinutes[2].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutesAndSeconds &&\n            hoursAndMinutesAndSeconds[1].length === 2 &&\n            hoursAndMinutesAndSeconds[2].length === 2 &&\n            hoursAndMinutesAndSeconds[3] &&\n            hoursAndMinutesAndSeconds[3].length === 2) {\n            isAutocompleteTriggered = true;\n        }\n        // tslint:enable no-magic-numbers\n\n        this.applyInputChanges({ doTimestringReformat: isAutocompleteTriggered });\n\n        this.elementRef.nativeElement.selectionStart = initialCursorStart;\n        this.elementRef.nativeElement.selectionEnd = initialCursorEnd;\n\n        if (isAutocompleteTriggered && this.ngControl.errors === null) {\n            this.createSelectionOfTimeComponentInInput(initialCursorStart + 1);\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    writeValue(value: Date | null): void {\n        if (value !== null) {\n            this.renderer.setProperty(this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(value, this.timeFormat)\n            );\n        }\n        this.onChange(value || null);\n        this.applyInputChanges();\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        const keyCode: string = this.getKeyCode(event);\n\n        if (keyCode === ARROW_UP_KEYCODE || keyCode === ARROW_DOWN_KEYCODE) {\n            this.upDownTimeByArrowKeys(event);\n        }\n        if (keyCode === ARROW_LEFT_KEYCODE || keyCode === ARROW_RIGHT_KEYCODE) {\n            this.switchSelectionBetweenTimeparts(event);\n        }\n    }\n\n    registerOnChange(fn: (value: Date) => void): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    private dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    private isBadInput(): boolean {\n        const validity = (<HTMLInputElement> this.elementRef.nativeElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private applyInputChanges(applyParams: {\n        changedTime?: Date;\n        doTimestringReformat?: boolean;\n    } = {}): void {\n        const { changedTime, doTimestringReformat = true } = applyParams;\n\n        const timeToApply: Date | undefined = changedTime ||\n            this.getDateFromTimeString(this.elementRef.nativeElement.value);\n        this.currentDateTimeInput = timeToApply;\n\n        if (doTimestringReformat && timeToApply !== undefined) {\n            const selectionStart: number = this.elementRef.nativeElement.selectionStart;\n            const selectionEnd: number = this.elementRef.nativeElement.selectionEnd;\n            this.renderer.setProperty(\n                this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(timeToApply, this.timeFormat));\n            this.elementRef.nativeElement.selectionStart = selectionStart;\n            this.elementRef.nativeElement.selectionEnd = selectionEnd;\n        }\n\n        (<FormControl> this.ngControl.control).updateValueAndValidity();\n        const result = this.ngControl.errors === null && timeToApply !== undefined ? timeToApply : null;\n        this.onChange(result);\n        this.stateChanges.next();\n    }\n\n    private upDownTimeByArrowKeys(event: KeyboardEvent): void {\n        event.preventDefault();\n\n        let changedTime: Date | undefined = this.currentDateTimeInput;\n        if (changedTime !== undefined) {\n            const cursorPos = this.elementRef.nativeElement.selectionStart;\n\n            const modifiedTimePart = this.getTimeEditMetrics(cursorPos)\n                .modifiedTimePart;\n            const keyCode: string = this.getKeyCode(event);\n            if (keyCode === ARROW_UP_KEYCODE) { changedTime = this.incrementTime(changedTime, modifiedTimePart); }\n            if (keyCode === ARROW_DOWN_KEYCODE) { changedTime = this.decrementTime(changedTime, modifiedTimePart); }\n            this.applyInputChanges({ changedTime });\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    private switchSelectionBetweenTimeparts(event: KeyboardEvent): void {\n        const changedTime: Date | undefined = this.currentDateTimeInput;\n        const keyCode: string = this.getKeyCode(event);\n\n        if (changedTime !== undefined) {\n            let cursorPos: number = this.elementRef.nativeElement.selectionStart;\n            if (keyCode === ARROW_LEFT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfPrevTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            } else if (keyCode === ARROW_RIGHT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfNextTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            }\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    /**\n     * @description Microsoft EDGE doesn't support KeyboaedEvent.code thus we need this helper\n     */\n    private getKeyCode(event: KeyboardEvent): string {\n        return event.code || event.key;\n    }\n\n    private createSelectionOfTimeComponentInInput(cursorPos: number): void {\n        setTimeout(() => {\n            const newEditParams = this.getTimeEditMetrics(cursorPos);\n            this.elementRef.nativeElement.selectionStart = newEditParams.cursorStartPosition;\n            this.elementRef.nativeElement.selectionEnd = newEditParams.cursorEndPosition;\n        });\n    }\n\n    private incrementTime(dateVal: Date,\n                          whatToIncrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToIncrement) {\n            case TimeParts.hours:\n                hours++;\n                break;\n            case TimeParts.minutes:\n                minutes++;\n                break;\n            case TimeParts.seconds:\n                seconds++;\n                break;\n            default:\n        }\n\n        if (seconds > SECONDS_PER_MINUTE) { seconds = 0; }\n\n        if (minutes > MINUTES_PER_HOUR) { minutes = 0; }\n\n        if (hours > HOURS_PER_DAY) { hours = 0; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    /**\n     * @description Decrement part of time\n     */\n    private decrementTime(dateVal: Date,\n                          whatToDecrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToDecrement) {\n            case TimeParts.hours:\n                hours--;\n                break;\n            case TimeParts.minutes:\n                minutes--;\n                break;\n            case TimeParts.seconds:\n                seconds--;\n                break;\n            default:\n        }\n\n        if (seconds < 0) { seconds = SECONDS_PER_MINUTE; }\n\n        if (minutes < 0) { minutes = MINUTES_PER_HOUR; }\n\n        if (hours < 0) { hours = HOURS_PER_DAY; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    private getCursorPositionOfPrevTimePartStart(cursorPos: number, timeString: string): number {\n        return cursorPos === 0 ? timeString.length : cursorPos - 1;\n    }\n\n    private getCursorPositionOfNextTimePartStart(cursorPos: number,\n                                                 timeString: string,\n                                                 timeDevider: string = ':'): number {\n        const nextDividerPos: number = timeString.indexOf(timeDevider, cursorPos);\n\n        return nextDividerPos !== undefined ? nextDividerPos + 1 : 0;\n    }\n\n    /**\n     * @description Get params for arrow-keys (up/down) time valie edit.\n     * @param cursorPosition Current cursor position in timeString\n     */\n    private getTimeEditMetrics(cursorPosition: number): {\n        modifiedTimePart: TimeParts;\n        cursorStartPosition: number;\n        cursorEndPosition: number;\n    } {\n        const timeString: string = this.elementRef.nativeElement.value;\n        let modifiedTimePart: TimeParts;\n        let cursorStartPosition: number;\n        let cursorEndPosition: number;\n        const hoursIndex = 0;\n        const minutesIndex = timeString.indexOf(':', hoursIndex + 1);\n        const secondsIndex = minutesIndex !== -1 ? timeString.indexOf(':', minutesIndex + 1) : -1;\n\n        if (secondsIndex !== -1 && cursorPosition > secondsIndex) {\n            modifiedTimePart = TimeParts.seconds;\n            cursorStartPosition = secondsIndex + 1;\n            cursorEndPosition = timeString.length;\n        } else if (minutesIndex !== -1 && cursorPosition > minutesIndex) {\n            modifiedTimePart = TimeParts.minutes;\n            cursorStartPosition = minutesIndex + 1;\n            cursorEndPosition = secondsIndex > -1 ? secondsIndex : timeString.length;\n        } else {\n            modifiedTimePart = TimeParts.hours;\n            cursorStartPosition = hoursIndex;\n            cursorEndPosition = minutesIndex !== -1 ? minutesIndex : timeString.length;\n        }\n\n        return {\n            modifiedTimePart,\n            cursorStartPosition,\n            cursorEndPosition\n        };\n    }\n\n    /**\n     * @description Create time string for displaying inside input element of UI\n     */\n    private getTimeStringFromDate(tempVal: Date,\n                                  timeFormat: TimeFormats = DEFAULT_TIME_FORMAT): string {\n        const hours: string = this.getNumberWithLeadingZero(tempVal.getHours());\n        const minutes: string = this.getNumberWithLeadingZero(tempVal.getMinutes());\n        const seconds: string = this.getNumberWithLeadingZero(tempVal.getSeconds());\n\n        const formattedTimeGenerators = {\n            [TimeFormats.HHmm]: () => `${hours}:${minutes}`,\n            [TimeFormats.HHmmss]: () => `${hours}:${minutes}:${seconds}`\n        };\n\n        return formattedTimeGenerators[timeFormat]();\n    }\n\n    private getParsedTimeParts(timeString: string): {\n        hoursOnly: any;\n        hoursAndMinutes: any;\n        hoursAndMinutesAndSeconds: any;\n    } {\n        const hoursAndMinutesAndSeconds = timeString.match(HOURS_MINUTES_SECONDS_REGEXP);\n        const hoursAndMinutes = timeString.match(HOURS_MINUTES_REGEXP);\n        const hoursOnly = timeString.match(HOURS_ONLY_REGEXP);\n\n        return {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        };\n    }\n\n    /**\n     * @description Create Date object from separate parts of time\n     */\n    private getDateFromTimeDigits(hours: number, minutes: number, seconds: number = 0): Date | undefined {\n        return this.getDateFromTimeString(`${hours}:${minutes}:${seconds}`);\n    }\n\n    private getDateFromTimeString(timeString: string | undefined): Date | undefined {\n        // TODO Use moment-js\n        if (timeString === undefined) { return; }\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(timeString);\n\n        if (timeString.trim().length === 0 ||\n            hoursOnly === null && hoursAndMinutes === null && hoursAndMinutesAndSeconds === null) {\n            return;\n        }\n\n        // tslint:disable no-magic-numbers\n        let hours: number = 0;\n        let minutes: number = 0;\n        let seconds: number = 0;\n\n        if (hoursOnly) {\n            hours = Number(hoursOnly[1]);\n        } else if (hoursAndMinutes) {\n            hours = Number(hoursAndMinutes[1]);\n            minutes = Number(hoursAndMinutes[2]);\n        } else if (hoursAndMinutesAndSeconds) {\n            hours = Number(hoursAndMinutesAndSeconds[1]);\n            minutes = Number(hoursAndMinutesAndSeconds[2]);\n            seconds = Number(hoursAndMinutesAndSeconds[3]);\n        }\n        // const timestamp: number = Date.parse(fullDateString);\n        const resultDate: Date = new Date(1970, 0, 1, hours, minutes, seconds);\n        // tslint:enable no-magic-numbers\n\n        return isNaN(resultDate.getTime()) ? undefined : resultDate;\n    }\n\n    private getNumberWithLeadingZero(digit: number): string {\n        const MAX_DIGIT_WITH_LEADING_ZERO: number = 9;\n\n        return digit > MAX_DIGIT_WITH_LEADING_ZERO ? `${digit}` : `0${digit}`;\n    }\n\n    private getTimeDigitsFromDate(dateVal: Date): { hours: number; minutes: number; seconds: number } {\n        return {\n            hours: dateVal.getHours(),\n            minutes: dateVal.getMinutes(),\n            seconds: dateVal.getSeconds()\n        };\n    }\n\n    private parseValidator(): ValidationErrors | null {\n        return this.currentDateTimeInput === undefined ?\n            { mcTimepickerParse: { text: this.elementRef.nativeElement.value } } :\n            null;\n    }\n\n    private minTimeValidator(): ValidationErrors | null {\n\n        if (this.currentDateTimeInput !== undefined &&\n            this.minDateTime !== undefined &&\n            this.isTimeLowerThenMin(this.currentDateTimeInput)) {\n            return { mcTimepickerLowerThenMintime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private maxTimeValidator(): ValidationErrors | null {\n        if (this.currentDateTimeInput !== undefined &&\n            this.maxDateTime !== undefined &&\n            this.isTimeGreaterThenMax(this.currentDateTimeInput)) {\n            return { mcTimepickerHigherThenMaxtime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private isTimeLowerThenMin(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.minDateTime).getTime() < 0;\n    }\n\n    private isTimeGreaterThenMax(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.maxDateTime).getTime() >= 0;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTimepicker } from './timepicker';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        FormsModule\n    ],\n    declarations: [\n        McTimepicker\n    ],\n    exports: [\n        McTimepicker\n    ]\n})\nexport class McTimepickerModule {}\n","import {\n    animate,\n    AnimationTriggerMetadata,\n    state,\n    style,\n    transition,\n    trigger,\n    query,\n    animateChild,\n    group\n} from '@angular/animations';\n\n\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n */\nexport const mcSelectAnimations: {\n    readonly transformPanel: AnimationTriggerMetadata;\n    readonly fadeInContent: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        transition('void => *', group([\n            query('@fadeInContent', animateChild()),\n            animate('150ms cubic-bezier(0.25, 0.8, 0.25, 1)')\n        ])),\n        transition('* => void', [\n            animate('250ms 100ms linear', style({ opacity: 0 }))\n        ])\n    ]),\n\n    /**\n     * This animation fades in the background color and text content of the\n     * select's options. It is time delayed to occur 100ms after the overlay\n     * panel has transformed in.\n     */\n    fadeInContent: trigger('fadeInContent', [\n        state('showing', style({ opacity: 1 })),\n        transition('void => showing', [\n            style({ opacity: 0 }),\n            animate('150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const transformPanel = mcSelectAnimations.transformPanel;\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const fadeInContent = mcSelectAnimations.fadeInContent;\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    Component,\n    ChangeDetectorRef,\n    Input,\n    Inject,\n    Output,\n    EventEmitter,\n    OnDestroy,\n    OnInit,\n    ElementRef,\n    Directive,\n    Optional,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ComponentFactoryResolver,\n    ViewContainerRef,\n    forwardRef,\n    ViewChild\n} from '@angular/core';\nimport { Directionality, Direction } from '@ptsecurity/cdk/bidi';\nimport { TemplatePortal, CdkPortalOutlet, PortalHostDirective } from '@ptsecurity/cdk/portal';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\nimport { mcTabsAnimations } from './tabs-animations';\n\n\n/**\n * These position states are used internally as animation states for the tab body. Setting the\n * position state to left, right, or center will transition the tab body from its current\n * position to its respective state. If there is not current position (void, in the case of a new\n * tab body), then there will be no transition animation to its state.\n *\n * In the case of a new tab body that should immediately be centered with an animating transition,\n * then left-origin-center or right-origin-center can be used, which will use left or right as its\n * psuedo-prior state.\n */\nexport type McTabBodyPositionState =\n    'left' | 'center' | 'right' | 'left-origin-center' | 'right-origin-center';\n\n/**\n * The origin state is an internally used state that is set on a new tab body indicating if it\n * began to the left or right of the prior selected index. For example, if the selected index was\n * set to 1, and a new tab is created and selected at index 2, then the tab body would have an\n * origin of right because its index was greater than the prior selected index.\n */\nexport type McTabBodyOriginState = 'left' | 'right';\n\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\n@Component({\n    selector: 'mc-tab-body',\n    templateUrl: 'tab-body.html',\n    styleUrls: ['tab-body.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [mcTabsAnimations.translateTab],\n    host: {\n        class: 'mc-tab-body'\n    }\n})\nexport class McTabBody implements OnInit, OnDestroy {\n\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    @Input()\n    set position(position: number) {\n        this.positionIndex = position;\n        this.computePositionAnimationState();\n    }\n\n    /** Tab body position state. Used by the animation trigger for the current state. */\n    bodyPosition: McTabBodyPositionState;\n\n    /** Event emitted when the tab begins to animate towards the center as the active tab. */\n    @Output() readonly onCentering: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted before the centering of the tab begins. */\n    @Output() readonly beforeCentering: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted before the centering of the tab begins. */\n    @Output() readonly afterLeavingCenter: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the tab completes its animation towards the center. */\n    @Output() readonly onCentered: EventEmitter<void> = new EventEmitter<void>(true);\n\n    /** The portal host inside of this container into which the tab body content will be loaded. */\n    @ViewChild(PortalHostDirective) portalHost: PortalHostDirective;\n\n    /** The tab body content to display. */\n    @Input('content') content: TemplatePortal;\n\n    /** Position that will be used when the tab is immediately becoming visible after creation. */\n    @Input() origin: number;\n\n    // Note that the default value will always be overwritten by `McTabBody`, but we need one\n    // anyway to prevent the animations module from throwing an error if the body is used on its own.\n    /** Duration for the tab's animation. */\n    @Input() animationDuration: string = '0ms';\n\n    /** Current position of the tab-body in the tab-group. Zero means that the tab is visible. */\n    private positionIndex: number;\n\n    /** Subscription to the directionality change observable. */\n    private dirChangeSubscription = Subscription.EMPTY;\n\n    constructor(private elementRef: ElementRef<HTMLElement>,\n                @Optional() private dir: Directionality,\n                changeDetectorRef: ChangeDetectorRef) {\n\n        if (this.dir && changeDetectorRef) {\n            this.dirChangeSubscription = this.dir.change.subscribe((direction: Direction) => {\n                this.computePositionAnimationState(direction);\n                changeDetectorRef.markForCheck();\n            });\n        }\n    }\n\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n        if (this.bodyPosition === 'center' && this.origin != null) {\n            this.bodyPosition = this.computePositionFromOrigin();\n        }\n    }\n\n    ngOnDestroy() {\n        this.dirChangeSubscription.unsubscribe();\n    }\n\n    onTranslateTabStarted(e: AnimationEvent): void {\n        const isCentering = this.isCenterPosition(e.toState);\n        this.beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this.onCentering.emit(this.elementRef.nativeElement.clientHeight);\n        }\n    }\n\n    onTranslateTabComplete(e: AnimationEvent): void {\n        // If the transition to the center is complete, emit an event.\n        if (this.isCenterPosition(e.toState) && this.isCenterPosition(this.bodyPosition)) {\n            this.onCentered.emit();\n        }\n\n        if (this.isCenterPosition(e.fromState) && !this.isCenterPosition(this.bodyPosition)) {\n            this.afterLeavingCenter.emit();\n        }\n    }\n\n    /** The text direction of the containing app. */\n    getLayoutDirection(): Direction {\n        return this.dir && this.dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    /** Whether the provided position state is considered center, regardless of origin. */\n    isCenterPosition(position: McTabBodyPositionState | string): boolean {\n        return position === 'center' ||\n            position === 'left-origin-center' ||\n            position === 'right-origin-center';\n    }\n\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    private computePositionAnimationState(dir: Direction = this.getLayoutDirection()) {\n        if (this.positionIndex < 0) {\n            this.bodyPosition = dir === 'ltr' ? 'left' : 'right';\n        } else if (this.positionIndex > 0) {\n            this.bodyPosition = dir === 'ltr' ? 'right' : 'left';\n        } else {\n            this.bodyPosition = 'center';\n        }\n    }\n\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    private computePositionFromOrigin(): McTabBodyPositionState {\n        const dir = this.getLayoutDirection();\n\n        if ((dir === 'ltr' && this.origin <= 0) || (dir === 'rtl' && this.origin > 0)) {\n            return 'left-origin-center';\n        }\n\n        return 'right-origin-center';\n    }\n}\n\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\n@Directive({\n    selector: '[mcTabBodyHost]'\n})\nexport class McTabBodyPortal extends CdkPortalOutlet implements OnInit, OnDestroy {\n    /** Subscription to events for when the tab body begins centering. */\n    private centeringSub = Subscription.EMPTY;\n    /** Subscription to events for when the tab body finishes leaving from center position. */\n    private leavingSub = Subscription.EMPTY;\n\n    constructor(\n        componentFactoryResolver: ComponentFactoryResolver,\n        viewContainerRef: ViewContainerRef,\n        @Inject(forwardRef(() => McTabBody)) private host: McTabBody) {\n        super(componentFactoryResolver, viewContainerRef);\n    }\n\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit(): void {\n        super.ngOnInit();\n\n        this.centeringSub = this.host.beforeCentering\n            .pipe(startWith(this.host.isCenterPosition(this.host.bodyPosition)))\n            .subscribe((isCentering: boolean) => {\n                if (isCentering && !this.hasAttached()) {\n                    this.attach(this.host.content);\n                }\n            });\n\n        this.leavingSub = this.host.afterLeavingCenter.subscribe(() => {\n            this.detach();\n        });\n    }\n\n    /** Clean up centering subscription. */\n    ngOnDestroy(): void {\n        super.ngOnDestroy();\n        this.centeringSub.unsubscribe();\n        this.leavingSub.unsubscribe();\n    }\n}\n","import { Directive, ElementRef } from '@angular/core';\nimport {\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\n\n\n// Boilerplate for applying mixins to McTabLabelWrapper.\n/** @docs-private */\nexport class McTabLabelWrapperBase {}\nexport const mcTabLabelWrapperMixinBase: CanDisableCtor &\n    typeof McTabLabelWrapperBase = mixinDisabled(McTabLabelWrapperBase);\n\n/**\n * Used in the `mc-tab-group` view to display tab labels.\n * @docs-private\n */\n@Directive({\n    selector: '[mcTabLabelWrapper]',\n    inputs: ['disabled'],\n    host: {\n        '[class.mc-disabled]': 'disabled',\n        '[attr.aria-disabled]': '!!disabled'\n    }\n})\nexport class McTabLabelWrapper extends mcTabLabelWrapperMixinBase implements CanDisable {\n    constructor(public elementRef: ElementRef) {\n        super();\n    }\n\n    /** Sets focus on the wrapper element */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    getOffsetLeft(): number {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n\n    getOffsetWidth(): number {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Input,\n    NgZone,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Direction, Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceNumberProperty } from '@ptsecurity/cdk/coercion';\nimport { END, ENTER, HOME, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { ViewportRuler } from '@ptsecurity/cdk/scrolling';\nimport { merge, of as observableOf, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { McTabLabelWrapper } from './tab-label-wrapper';\n\n\nconst VIEWPORT_THROTTLE_TIME = 150;\nconst SCROLL_DISTANCE_DELIMITER = 3;\n\n\n/**\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n\n// Boilerplate for applying mixins to McTabHeader.\n/** @docs-private */\nexport class McTabHeaderBase {}\n\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group.\n * When the tabs list's width exceeds the width of the header container,\n * then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\n@Component({\n    selector: 'mc-tab-header',\n    templateUrl: 'tab-header.html',\n    styleUrls: ['tab-header.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        class: 'mc-tab-header',\n        '[class.mc-tab-header__pagination-controls_enabled]':\n            'showPaginationControls',\n        '[class.mc-tab-header_rtl]': 'getLayoutDirection() == \\'rtl\\''\n    }\n})\nexport class McTabHeader extends McTabHeaderBase\n    implements AfterContentChecked, AfterContentInit, OnDestroy {\n    /** The index of the active tab. */\n    @Input()\n    get selectedIndex(): number {\n        return this._selectedIndex;\n    }\n    set selectedIndex(value: number) {\n        const coercedValue = coerceNumberProperty(value);\n        this.selectedIndexChanged = this._selectedIndex !== coercedValue;\n        this._selectedIndex = coercedValue;\n\n        if (this.keyManager) {\n            this.keyManager.updateActiveItem(coercedValue);\n        }\n    }\n\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex(): number {\n        return this.keyManager ? this.keyManager.activeItemIndex! : 0;\n    }\n\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value: number) {\n        if (\n            !this.isValidIndex(value) ||\n            this.focusIndex === value ||\n            !this.keyManager\n        ) {\n            return;\n        }\n\n        this.keyManager.setActiveItem(value);\n    }\n\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance(): number {\n        return this._scrollDistance;\n    }\n    set scrollDistance(v: number) {\n        this._scrollDistance = Math.max(\n            0,\n            Math.min(this.getMaxScrollDistance(), v)\n        );\n\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this.scrollDistanceChanged = true;\n        this.checkScrollingControls();\n    }\n\n    @ContentChildren(McTabLabelWrapper)\n    labelWrappers: QueryList<McTabLabelWrapper>;\n    @ViewChild('tabListContainer')\n    tabListContainer: ElementRef;\n    @ViewChild('tabList')\n    tabList: ElementRef;\n\n    /** Whether the controls for pagination should be displayed */\n    showPaginationControls = false;\n\n    /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n    disableScrollAfter = true;\n\n    /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n    disableScrollBefore = true;\n\n    /** Event emitted when the option is selected. */\n    @Output()\n    readonly selectFocusedIndex: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted when a label is focused. */\n    @Output()\n    readonly indexFocused: EventEmitter<number> = new EventEmitter<number>();\n\n    /** The distance in pixels that the tab labels should be translated to the left. */\n    private _scrollDistance = 0;\n\n    /** Whether the header should scroll to the selected index after the view has been checked. */\n    private selectedIndexChanged = false;\n\n    /** Emits when the component is destroyed. */\n    private readonly destroyed = new Subject<void>();\n\n    /**\n     * The number of tab labels that are displayed on the header. When this changes, the header\n     * should re-evaluate the scroll position.\n     */\n    private tabLabelCount: number;\n\n    /** Whether the scroll distance has changed and should be applied after the view is checked. */\n    private scrollDistanceChanged: boolean;\n\n    /** Used to manage focus between the tabs. */\n    private keyManager: FocusKeyManager<McTabLabelWrapper>;\n\n    /** Cached text content of the header. */\n    private currentTextContent: string;\n\n    private _selectedIndex: number = 0;\n\n    constructor(\n        private elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        private viewportRuler: ViewportRuler,\n        @Optional() private dir: Directionality,\n        private ngZone: NgZone\n    ) {\n        super();\n    }\n\n    ngAfterContentChecked(): void {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this.tabLabelCount !== this.labelWrappers.length) {\n            this.updatePagination();\n            this.tabLabelCount = this.labelWrappers.length;\n            this.changeDetectorRef.markForCheck();\n        }\n\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this.selectedIndexChanged) {\n            this.scrollToLabel(this._selectedIndex);\n            this.checkScrollingControls();\n            this.selectedIndexChanged = false;\n            this.changeDetectorRef.markForCheck();\n        }\n\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this.scrollDistanceChanged) {\n            this.updateTabScrollPosition();\n            this.scrollDistanceChanged = false;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    handleKeydown(event: KeyboardEvent) {\n        switch (event.keyCode) {\n            case HOME:\n                this.keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case END:\n                this.keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case ENTER:\n            case SPACE:\n                this.selectFocusedIndex.emit(this.focusIndex);\n                event.preventDefault();\n                break;\n            default:\n                this.keyManager.onKeydown(event);\n        }\n    }\n\n    ngAfterContentInit() {\n        const dirChange = this.dir ? this.dir.change : observableOf(null);\n        const resize = this.viewportRuler.change(VIEWPORT_THROTTLE_TIME);\n        const realign = () => {\n            this.updatePagination();\n        };\n\n        this.keyManager = new FocusKeyManager(this.labelWrappers)\n            .withHorizontalOrientation(this.getLayoutDirection())\n            .withWrap();\n\n        this.keyManager.updateActiveItem(0);\n\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame === undefined\n            ? realign()\n            : requestAnimationFrame(realign);\n\n        // On dir change or window resize, update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize)\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(() => {\n                realign();\n                this.keyManager.withHorizontalOrientation(\n                    this.getLayoutDirection()\n                );\n            });\n\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this.keyManager.change\n            .pipe(takeUntil(this.destroyed))\n            .subscribe((newFocusIndex) => {\n                this.indexFocused.emit(newFocusIndex);\n                this.setTabFocus(newFocusIndex);\n            });\n    }\n\n    ngOnDestroy() {\n        this.destroyed.next();\n        this.destroyed.complete();\n    }\n\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    onContentChanges() {\n        const textContent = this.elementRef.nativeElement.textContent;\n\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in.\n\n        if (textContent !== this.currentTextContent) {\n            this.currentTextContent = textContent;\n\n            const zoneCallback = () => {\n                this.updatePagination();\n                this.changeDetectorRef.markForCheck();\n            };\n\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            // TODO: Remove null check for `_ngZone` once it's a required parameter.\n            this.ngZone ? this.ngZone.run(zoneCallback) : zoneCallback();\n        }\n    }\n\n    /**\n     * Updating the view whether pagination should be enabled or not\n     *\n     * WARNING: Calling this method can be very costly in terms of performance.  It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        this.checkPaginationEnabled();\n        this.checkScrollingControls();\n        this.updateTabScrollPosition();\n    }\n\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    isValidIndex(index: number): boolean {\n        if (!this.labelWrappers) {\n            return true;\n        }\n\n        const tab = this.labelWrappers\n            ? this.labelWrappers.toArray()[index]\n            : null;\n\n        return !!tab && !tab.disabled;\n    }\n\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    setTabFocus(tabIndex: number) {\n        if (this.showPaginationControls) {\n            this.scrollToLabel(tabIndex);\n        }\n\n        if (this.labelWrappers && this.labelWrappers.length) {\n            this.labelWrappers.toArray()[tabIndex].focus();\n\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            const containerEl = this.tabListContainer.nativeElement;\n            const dir = this.getLayoutDirection();\n\n            if (dir === 'ltr') {\n                containerEl.scrollLeft = 0;\n            } else {\n                containerEl.scrollLeft =\n                    containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n\n    /** The layout direction of the containing app. */\n    getLayoutDirection(): Direction {\n        return this.dir && this.dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    updateTabScrollPosition() {\n        const scrollDistance = this.scrollDistance;\n        const translateX =\n            this.getLayoutDirection() === 'ltr'\n                ? -scrollDistance\n                : scrollDistance;\n\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer.\n        // See: https://github.com/angular/material2/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this.tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off.\n        this.tabList.nativeElement.scrollLeft = 0;\n    }\n\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    scrollHeader(scrollDir: ScrollDirection) {\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        this.scrollDistance +=\n            ((scrollDir === 'before' ? -1 : 1) * viewLength) / SCROLL_DISTANCE_DELIMITER;\n    }\n\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    scrollToLabel(labelIndex: number) {\n        const selectedLabel = this.labelWrappers\n            ? this.labelWrappers.toArray()[labelIndex]\n            : null;\n\n        if (!selectedLabel) {\n            return;\n        }\n\n        // The view length is the visible width of the tab labels.\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        let labelBeforePos: number;\n        let labelAfterPos: number;\n\n        if (this.getLayoutDirection() === 'ltr') {\n            labelBeforePos = selectedLabel.getOffsetLeft();\n            labelAfterPos = labelBeforePos + selectedLabel.getOffsetWidth();\n        } else {\n            labelAfterPos =\n                this.tabList.nativeElement.offsetWidth -\n                selectedLabel.getOffsetLeft();\n            labelBeforePos = labelAfterPos - selectedLabel.getOffsetWidth();\n        }\n\n        const beforeVisiblePos = this.scrollDistance;\n        const afterVisiblePos = this.scrollDistance + viewLength;\n\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -=\n                beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        } else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance +=\n                labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    checkPaginationEnabled() {\n        const isEnabled =\n            this.tabList.nativeElement.scrollWidth >\n            this.elementRef.nativeElement.offsetWidth;\n\n        if (!isEnabled) {\n            this.scrollDistance = 0;\n        }\n\n        if (isEnabled !== this.showPaginationControls) {\n            this.changeDetectorRef.markForCheck();\n        }\n\n        this.showPaginationControls = isEnabled;\n    }\n\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    checkScrollingControls() {\n        // Check if the pagination arrows should be activated.\n        this.disableScrollBefore = this.scrollDistance === 0;\n        this.disableScrollAfter =\n            this.scrollDistance === this.getMaxScrollDistance();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    getMaxScrollDistance(): number {\n        const lengthOfTabList = this.tabList.nativeElement.scrollWidth;\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        return lengthOfTabList - viewLength || 0;\n    }\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    InjectionToken,\n    Inject,\n    Optional,\n    Directive, Attribute\n} from '@angular/core';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanColor,\n    CanColorCtor,\n    mixinColor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { merge, Subscription } from 'rxjs';\n\nimport { McTab } from './tab';\nimport { McTabHeader } from './tab-header';\n\n\n@Directive({\n    selector: 'mc-tab-group[mc-light-tabs], [mc-tab-nav-bar][mc-light-tabs]',\n    host: { class: 'mc-tab-group_light' }\n})\nexport class McLightTabsCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-align-tabs-center], [mc-tab-nav-bar][mc-align-tabs-center]',\n    host: { class: 'mc-tab-group_align-labels-center' }\n})\nexport class McAlignTabsCenterCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-align-tabs-end], [mc-tab-nav-bar][mc-align-tabs-end]',\n    host: { class: 'mc-tab-group_align-labels-end' }\n})\nexport class McAlignTabsEndCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-stretch-tabs], [mc-tab-nav-bar][mc-stretch-tabs]',\n    host: { class: 'mc-tab-group_stretch-labels' }\n})\nexport class McStretchTabsCssStyler { }\n\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n\n/** A simple change event emitted on focus or selection changes. */\nexport class McTabChangeEvent {\n    /** Index of the currently-selected tab. */\n    index: number;\n    /** Reference to the currently-selected tab. */\n    tab: McTab;\n}\n\n/** Possible positions for the tab header. */\nexport type McTabHeaderPosition = 'above' | 'below';\n\n/** Object that can be used to configure the default options for the tabs module. */\nexport interface IMcTabsConfig {\n    /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n    animationDuration?: string;\n}\n\n/** Injection token that can be used to provide the default options the tabs module. */\nexport const MC_TABS_CONFIG = new InjectionToken('MC_TABS_CONFIG');\n\n// Boilerplate for applying mixins to McTabGroup.\n/** @docs-private */\nexport class McTabGroupBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) { }\n}\nexport const mcTabGroupMixinBase:\n    CanColorCtor &\n    typeof McTabGroupBase =\n    mixinColor(mixinDisabled(McTabGroupBase));\n\n/**\n * Tab-group component.  Supports basic tab pairs (label + content) and includes\n * keyboard navigation.\n */\n@Component({\n    selector: 'mc-tab-group',\n    exportAs: 'mcTabGroup',\n    templateUrl: 'tab-group.html',\n    styleUrls: ['tab-group.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['color'],\n    host: {\n        class: 'mc-tab-group',\n        '[class.mc-tab-group_dynamic-height]': 'dynamicHeight',\n        '[class.mc-tab-group_inverted-header]': 'headerPosition === \"below\"'\n    }\n})\nexport class McTabGroup extends mcTabGroupMixinBase implements AfterContentInit,\n    AfterContentChecked, OnDestroy, CanColor {\n    lightTab: boolean;\n\n    /** Whether the tab group should grow to the size of the active tab. */\n    @Input()\n    get dynamicHeight(): boolean { return this._dynamicHeight; }\n    set dynamicHeight(value: boolean) { this._dynamicHeight = coerceBooleanProperty(value); }\n\n    /** The index of the active tab. */\n    @Input()\n    get selectedIndex(): number | null { return this._selectedIndex; }\n    set selectedIndex(value: number | null) {\n        this.indexToSelect = coerceNumberProperty(value, null);\n    }\n\n    @ContentChildren(McTab) tabs: QueryList<McTab>;\n\n    @ViewChild('tabBodyWrapper') tabBodyWrapper: ElementRef;\n\n    @ViewChild('tabHeader') tabHeader: McTabHeader;\n\n    /** Position of the tab header. */\n    @Input() headerPosition: McTabHeaderPosition = 'above';\n\n    /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n    @Input() animationDuration: string;\n\n    /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n    @Output() readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted when focus has changed within a tab group. */\n    @Output() readonly focusChange: EventEmitter<McTabChangeEvent> =\n        new EventEmitter<McTabChangeEvent>();\n\n    /** Event emitted when the body animation has completed */\n    @Output() readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the tab selection has changed. */\n    @Output() readonly selectedTabChange: EventEmitter<McTabChangeEvent> =\n        new EventEmitter<McTabChangeEvent>(true);\n\n    /** The tab index that should be selected after the content has been checked. */\n    private indexToSelect: number | null = 0;\n\n    /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n    private tabBodyWrapperHeight: number = 0;\n\n    /** Subscription to tabs being added/removed. */\n    private tabsSubscription = Subscription.EMPTY;\n\n    /** Subscription to changes in the tab labels. */\n    private tabLabelSubscription = Subscription.EMPTY;\n    private _dynamicHeight: boolean = false;\n    private _selectedIndex: number | null = null;\n\n    private groupId: number;\n\n    constructor(\n        elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        @Attribute('mc-light-tabs') lightTabs: string,\n        @Inject(MC_TABS_CONFIG) @Optional() defaultConfig?: IMcTabsConfig\n    ) {\n        super(elementRef);\n\n        this.lightTab = coerceBooleanProperty(lightTabs);\n\n        this.groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '0ms';\n    }\n\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = this.indexToSelect = this.clampTabIndex(this.indexToSelect);\n\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex !== indexToSelect) {\n            const isFirstRun = this._selectedIndex == null;\n\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this.createChangeEvent(indexToSelect));\n            }\n\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this.tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            });\n        }\n\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this.tabs.forEach((tab: McTab, index: number) => {\n            tab.position = index - indexToSelect;\n\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position === 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    ngAfterContentInit() {\n        this.subscribeToTabLabels();\n\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this.tabsSubscription = this.tabs.changes.subscribe(() => {\n            const indexToSelect = this.clampTabIndex(this.indexToSelect);\n\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                const tabs = this.tabs.toArray();\n\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this.indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n\n            this.subscribeToTabLabels();\n            this.changeDetectorRef.markForCheck();\n        });\n    }\n\n    ngOnDestroy() {\n        this.tabsSubscription.unsubscribe();\n        this.tabLabelSubscription.unsubscribe();\n    }\n\n    focusChanged(index: number) {\n        this.focusChange.emit(this.createChangeEvent(index));\n    }\n\n    /** Returns a unique id for each tab label element */\n    getTabLabelId(i: number): string {\n        return `mc-tab-label-${this.groupId}-${i}`;\n    }\n\n    /** Returns a unique id for each tab content element */\n    getTabContentId(i: number): string {\n        return `mc-tab-content-${this.groupId}-${i}`;\n    }\n\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    setTabBodyWrapperHeight(tabHeight: number): void {\n        if (!this._dynamicHeight || !this.tabBodyWrapperHeight) { return; }\n\n        const wrapper: HTMLElement = this.tabBodyWrapper.nativeElement;\n\n        wrapper.style.height = `${this.tabBodyWrapperHeight}px`;\n\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this.tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = `${tabHeight}px`;\n        }\n    }\n\n    /** Removes the height of the tab body wrapper. */\n    removeTabBodyWrapperHeight(): void {\n        this.tabBodyWrapperHeight = this.tabBodyWrapper.nativeElement.clientHeight;\n        this.tabBodyWrapper.nativeElement.style.height = '';\n        this.animationDone.emit();\n    }\n\n    /** Handle click events, setting new selected index if appropriate. */\n    handleClick(tab: McTab, tabHeader: McTabHeader, index: number) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n\n    /** Retrieves the tabindex for the tab. */\n    getTabIndex(tab: McTab, index: number): number | null {\n        if (tab.disabled) {\n            return null;\n        }\n\n        return this.selectedIndex === index ? 0 : -1;\n    }\n\n    private createChangeEvent(index: number): McTabChangeEvent {\n        const event = new McTabChangeEvent();\n        event.index = index;\n        if (this.tabs && this.tabs.length) {\n            event.tab = this.tabs.toArray()[index];\n        }\n\n        return event;\n    }\n\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the McTab component, whereas the data binding is inside the McTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    private subscribeToTabLabels() {\n        if (this.tabLabelSubscription) {\n            this.tabLabelSubscription.unsubscribe();\n        }\n\n        this.tabLabelSubscription = merge(...this.tabs.map((tab) => tab.stateChanges))\n            .subscribe(() => this.changeDetectorRef.markForCheck());\n    }\n\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    private clampTabIndex(index: number | null): number {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Mch.max(NaN, 0) === NaN).\n        return Math.min(this.tabs.length - 1, Math.max(index || 0, 0));\n    }\n}\n","import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    OnDestroy,\n    ViewEncapsulation\n} from '@angular/core';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    CanColor,\n    CanColorCtor,\n    CanDisable,\n    CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\n// Boilerplate for applying mixins to McTabNav.\n/** @docs-private */\nexport class McTabNavBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {}\n}\nexport const mcTabNavMixinBase: CanColorCtor &\n    typeof McTabNavBase = mixinColor(McTabNavBase);\n\n/**\n * Navigation component matching the styles of the tab group header.\n */\n@Component({\n    selector: '[mc-tab-nav-bar]',\n    exportAs: 'mcTabNavBar, mcTabNav',\n    inputs: ['color'],\n    templateUrl: 'tab-nav-bar.html',\n    styleUrls: ['tab-nav-bar.css'],\n    host: { class: 'mc-tab-nav-bar' },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McTabNav extends mcTabNavMixinBase\n    implements CanColor {\n        constructor(elementRef: ElementRef) {\n            super(elementRef);\n        }\n     }\n\n// Boilerplate for applying mixins to McTabLink.\nexport class McTabLinkBase {}\nexport const mcTabLinkMixinBase: HasTabIndexCtor & CanDisableCtor &\n    typeof McTabLinkBase = mixinTabIndex(mixinDisabled(McTabLinkBase));\n\n/**\n * Link inside of a `mc-tab-nav-bar`.\n */\n@Directive({\n    selector: '[mc-tab-link], [mcTabLink]',\n    exportAs: 'mcTabLink',\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-tab-link',\n        '[attr.aria-current]': 'active',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.tabIndex]': 'tabIndex',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-active]': 'active'\n    }\n})\nexport class McTabLink extends mcTabLinkMixinBase\n    implements OnDestroy, CanDisable, HasTabIndex {\n    /** Whether the link is active. */\n    @Input()\n    get active(): boolean {\n        return this.isActive;\n    }\n    set active(value: boolean) {\n        if (value !== this.isActive) {\n            this.isActive = value;\n        }\n    }\n\n    /** Whether the tab link is active or not. */\n    protected isActive: boolean = false;\n\n    constructor(\n        public elementRef: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        private focusMonitor: FocusMonitor\n    ) {\n        super();\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this.focusMonitor.monitor(this.elementRef.nativeElement);\n    }\n\n    ngOnDestroy() {\n        this.focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PortalModule } from '@ptsecurity/cdk/portal';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McTab } from './tab';\nimport { McTabBody, McTabBodyPortal } from './tab-body';\nimport { McTabContent } from './tab-content';\nimport {\n    McTabGroup,\n    McLightTabsCssStyler,\n    McAlignTabsCenterCssStyler,\n    McAlignTabsEndCssStyler,\n    McStretchTabsCssStyler\n} from './tab-group';\nimport { McTabHeader } from './tab-header';\nimport { McTabLabel } from './tab-label';\nimport { McTabLabelWrapper } from './tab-label-wrapper';\nimport { McTabLink, McTabNav } from './tab-nav-bar/tab-nav-bar';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McCommonModule,\n        PortalModule,\n        A11yModule\n    ],\n    // Don't export all components because some are only to be used internally.\n    exports: [\n        McCommonModule,\n        McTabGroup,\n        McTabLabel,\n        McTab,\n        McTabNav,\n        McTabLink,\n        McTabContent,\n        McLightTabsCssStyler,\n        McAlignTabsCenterCssStyler,\n        McAlignTabsEndCssStyler,\n        McStretchTabsCssStyler\n    ],\n    declarations: [\n        McTabGroup,\n        McTabLabel,\n        McTab,\n        McTabLabelWrapper,\n        McTabNav,\n        McTabLink,\n        McTabBody,\n        McTabBodyPortal,\n        McTabHeader,\n        McTabContent,\n        McLightTabsCssStyler,\n        McAlignTabsCenterCssStyler,\n        McAlignTabsEndCssStyler,\n        McStretchTabsCssStyler\n    ]\n})\nexport class McTabsModule {}\n","import {\n    ElementRef,\n    QueryList,\n    ContentChildren,\n    Component,\n    ChangeDetectionStrategy,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport {\n    mixinColor,\n    CanColor,\n    CanColorCtor,\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\nexport class McTagBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McTagMixinBase: CanColorCtor & CanDisableCtor & typeof McTagBase = mixinColor(mixinDisabled(McTagBase));\n\n\n@Component({\n    selector: 'mc-tag',\n    templateUrl: 'tag.partial.html',\n    styleUrls: ['./tag.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-tag',\n        '[class.mc-disabled]': 'disabled'\n    },\n    inputs: ['color', 'disabled']\n})\nexport class McTag extends _McTagMixinBase implements CanColor, CanDisable {\n    @ContentChildren(McIcon) contentChildren: QueryList<McIcon>;\n\n    nativeElement: HTMLElement;\n\n    private _disabled: boolean = false;\n\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this.disabled) { this._disabled = value; }\n    }\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-left-icon');\n                }\n\n                if (iconElement.previousSibling) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-right-icon');\n                }\n            }\n        } else if (icons.length > 1) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTag } from './tag.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McTag\n    ],\n    declarations: [\n        McTag\n    ]\n})\nexport class McTagModule {}\n","import { fromEvent, Observable, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport {\n    AfterViewInit,\n    Component, Directive,\n    ElementRef,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    ViewEncapsulation,\n    ContentChild,\n    TemplateRef,\n    ChangeDetectorRef,\n    ChangeDetectionStrategy,\n    ViewChild\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Platform } from '@ptsecurity/cdk/platform';\nimport { CanDisable, CanDisableCtor, mixinDisabled } from '@ptsecurity/mosaic/core';\n\n\nconst COLLAPSED_CLASS: string = 'mc-navbar-collapsed-title';\nconst MC_ICON = 'mc-icon';\nconst MC_NAVBAR = 'mc-navbar';\nconst MC_NAVBAR_CONTAINER = 'mc-navbar-container';\nconst MC_NAVBAR_ITEM = 'mc-navbar-item';\nconst MC_NAVBAR_BRAND = 'mc-navbar-brand';\nconst MC_NAVBAR_TITLE = 'mc-navbar-title';\nconst MC_NAVBAR_LOGO = 'mc-navbar-logo';\n\nexport type McNavbarContainerPositionType = 'left' | 'right';\n\nexport interface IMcNavbarDropdownItem {\n    link?: string;\n    text: string;\n}\n\n@Directive({\n    selector: MC_NAVBAR_LOGO,\n    host: {\n        class: MC_NAVBAR_LOGO\n    }\n})\nexport class McNavbarLogo {}\n\n@Directive({\n    selector: MC_NAVBAR_BRAND,\n    host: {\n        class: MC_NAVBAR_BRAND\n    }\n})\nexport class McNavbarBrand {}\n\n@Directive({\n    selector: MC_NAVBAR_TITLE,\n    host: {\n        class: MC_NAVBAR_TITLE\n    }\n})\nexport class McNavbarTitle {}\n\nexport class McNavbarItemBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McNavbarMixinBase: CanDisableCtor & typeof McNavbarItemBase = mixinDisabled(McNavbarItemBase);\n\n@Component({\n    selector: MC_NAVBAR_ITEM,\n    template: `\n        <a\n            [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\n            (click)=\"handleClickByItem()\"\n            (keydown)=\"handleKeydown($event)\"\n            class=\"mc-navbar-item\"\n        >\n            <ng-content></ng-content>\n            <i *ngIf=\"hasDropdownContent\" mc-icon=\"mc-angle-down-M_16\"></i>\n        </a>\n        <ul\n            #dropdownContent\n            *ngIf=\"hasDropdownContent\"\n            [ngClass]=\"{ 'is-collapsed': isCollapsed }\"\n            class=\"mc-navbar-dropdown\"\n        >\n            <li\n                *ngFor=\"let item of dropdownItems\"\n                (click)=\"handleClickByDropdownItem()\"\n                class=\"mc-navbar-dropdown-item\"\n            >\n                <ng-container *ngIf=\"dropdownItemTmpl\">\n                    <ng-container *ngTemplateOutlet=\"dropdownItemTmpl; context: { $implicit: item }\"></ng-container>\n                </ng-container>\n                <a\n                    *ngIf=\"!dropdownItemTmpl\"\n                    [attr.href]=\"item.link\"\n                    [ngClass]=\"{ 'is-active': isActiveDropdownLink(item.link) }\"\n                    class=\"mc-navbar-dropdown-link\"\n                >{{ item.text }}</a>\n            </li>\n        </ul>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': '-1'\n    }\n})\nexport class McNavbarItem extends _McNavbarMixinBase implements OnInit, AfterViewInit, OnDestroy, CanDisable {\n\n    @Input()\n    tabIndex: number = 0;\n\n    @Input()\n    dropdownItems: IMcNavbarDropdownItem[] = [];\n\n    @Input()\n    set collapsedTitle(value: string) {\n        this.elementRef.nativeElement.setAttribute('computedTitle', encodeURI(value));\n    }\n\n    @ContentChild('dropdownItemTmpl', { read: TemplateRef })\n    dropdownItemTmpl: TemplateRef<IMcNavbarDropdownItem>;\n\n    @ViewChild('dropdownContent', { read: ElementRef })\n    dropdownContent: ElementRef;\n\n    get hasDropdownContent() {\n        return this.dropdownItems.length > 0;\n    }\n\n    isCollapsed: boolean = true;\n\n    private _subscription: Subscription = new Subscription();\n    private _focusMonitor$: Observable<FocusOrigin>;\n\n    private get _dropdownElements(): HTMLElement[] {\n        return this.dropdownContent ? this.dropdownContent.nativeElement.querySelectorAll('li > *') : [];\n    }\n\n    constructor(\n        public  elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _platform: Platform,\n        private _cdRef: ChangeDetectorRef\n    ) {\n        super(elementRef);\n    }\n\n    ngOnInit() {\n        this.denyClickIfDisabled();\n\n        this._focusMonitor$ = this._focusMonitor.monitor(this.elementRef.nativeElement, true);\n\n        if (this.hasDropdownContent) {\n            this.listenClickOutside();\n        }\n    }\n\n    ngAfterViewInit() {\n        if (!this.hasDropdownContent) {\n            return;\n        }\n\n        this.startListenFocusDropdownItems();\n    }\n\n    ngOnDestroy() {\n        this._subscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n        this.stopListenFocusDropdownItems();\n    }\n\n    isActiveDropdownLink(link: string): boolean {\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n\n        return window.location.href.indexOf(link) >= 0;\n    }\n\n    handleClickByItem() {\n        this.toggleDropdown();\n    }\n\n    handleKeydown($event: KeyboardEvent) {\n        const isNavbarItem = ($event.target as HTMLElement).classList.contains(MC_NAVBAR_ITEM);\n\n        // tslint:disable-next-line\n        if (this.hasDropdownContent && $event.keyCode === SPACE && isNavbarItem) {\n            this.toggleDropdown();\n        }\n    }\n\n    handleClickByDropdownItem() {\n        this.forceCloseDropdown();\n    }\n\n    private listenClickOutside() {\n        this._subscription.add(\n            this._focusMonitor$.subscribe((origin) => {\n                if (origin === null) {\n                    this.forceCloseDropdown();\n                }\n            })\n        );\n    }\n\n    private toggleDropdown() {\n        this.isCollapsed = !this.isCollapsed;\n    }\n\n    private forceCloseDropdown() {\n        this.isCollapsed = true;\n        this._cdRef.detectChanges();\n    }\n\n    private startListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.monitor(el, true);\n        });\n    }\n\n    private stopListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.stopMonitoring(el);\n        });\n    }\n\n    // This method is required due to angular 2 issue https://github.com/angular/angular/issues/11200\n    private denyClickIfDisabled() {\n        const events: Event[] = this.elementRef.nativeElement.eventListeners('click');\n\n        events.forEach((event) => this.elementRef.nativeElement.removeEventListener('click', event));\n\n        this.elementRef.nativeElement.addEventListener('click', (event: MouseEvent) => {\n            if (this.elementRef.nativeElement.hasAttribute('disabled')) {\n                event.stopImmediatePropagation();\n            }\n        }, true);\n\n        events.forEach((event) => this.elementRef.nativeElement.addEventListener('click', event));\n    }\n}\n\n@Directive({\n    selector: MC_NAVBAR_CONTAINER\n})\nexport class McNavbarContainer {\n    @Input()\n    position: McNavbarContainerPositionType = 'left';\n\n    @HostBinding('class')\n    get cssClasses(): string {\n        return this.position === 'left' ? 'mc-navbar-left' : 'mc-navbar-right';\n    }\n}\n\nclass CollapsibleItem {\n    private _collapsed: boolean = false;\n\n    constructor(\n        public element: HTMLElement,\n        public width: number\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        this._collapsed = collapsed;\n\n        this.updateCollapsedClass();\n    }\n\n    private updateCollapsedClass() {\n        if (this._collapsed) {\n            this.element.classList.add(COLLAPSED_CLASS);\n        } else {\n            this.element.classList.remove(COLLAPSED_CLASS);\n        }\n\n    }\n}\n\nclass CachedItemWidth {\n\n    get canCollapse(): boolean {\n        return this.itemsForCollapse.length > 0;\n    }\n\n    private _collapsedItemsWidth: number;\n\n    get collapsedItemsWidth(): number {\n        if (this._collapsedItemsWidth !== undefined) {\n            return this._collapsedItemsWidth;\n        }\n\n        this.calculateAndCacheCollapsedItemsWidth();\n\n        return this._collapsedItemsWidth;\n    }\n\n    constructor(\n        public element: HTMLElement,\n        public width: number,\n        public itemsForCollapse: CollapsibleItem[] = []\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        if (this.itemsForCollapse.length > 0) {\n            this.updateTitle(collapsed);\n        }\n\n        this.itemsForCollapse.forEach((item) => item.processCollapsed(collapsed));\n    }\n\n    private calculateAndCacheCollapsedItemsWidth() {\n        this._collapsedItemsWidth = this.itemsForCollapse\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getTitle(): string {\n        const computedTitle = this.element.getAttribute('computedTitle');\n\n        return computedTitle\n            ? decodeURI(computedTitle)\n            : (this.itemsForCollapse.length > 0 ? this.itemsForCollapse[0].element.innerText : '');\n    }\n\n    private updateTitle(collapsed: boolean) {\n        if (collapsed) {\n            this.element.setAttribute('title', this.getTitle());\n        } else {\n            this.element.removeAttribute('title');\n        }\n    }\n}\n\n\n@Component({\n    selector: MC_NAVBAR,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <nav class=\"mc-navbar\">\n            <ng-content select=\"[${MC_NAVBAR_CONTAINER}],${MC_NAVBAR_CONTAINER}\"></ng-content>\n        </nav>\n    `,\n    styleUrls: ['./navbar.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class McNavbar implements AfterViewInit, OnDestroy {\n\n    private readonly forceRecalculateItemsWidth: boolean = false;\n    private readonly resizeDebounceInterval: number = 100;\n    private readonly firstLevelElement: string = MC_NAVBAR_CONTAINER;\n    private readonly secondLevelElements: string[] = [\n        MC_NAVBAR_ITEM,\n        MC_NAVBAR_BRAND,\n        MC_NAVBAR_TITLE\n    ];\n\n    private _totalItemsWidths: number;\n    private _itemsWidths: CachedItemWidth[];\n\n    private get maxAllowedWidth(): number {\n        return this._elementRef.nativeElement.querySelector('nav').getBoundingClientRect().width;\n    }\n\n    private get itemsWidths(): CachedItemWidth[] {\n        if (this._itemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._itemsWidths;\n        }\n\n        this.calculateAndCacheItemsWidth();\n\n        return this._itemsWidths;\n    }\n\n    private get totalItemsWidth(): number {\n        if (this._totalItemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._totalItemsWidths;\n        }\n\n        this.calculateAndCacheTotalItemsWidth();\n\n        return this._totalItemsWidths;\n    }\n\n    private _resizeSubscription: Subscription;\n\n    constructor(\n        private _elementRef: ElementRef\n    ) {\n        const resizeObserver = fromEvent(window, 'resize')\n            .pipe(debounceTime(this.resizeDebounceInterval));\n\n        this._resizeSubscription = resizeObserver.subscribe(this.updateCollapsed.bind(this));\n    }\n\n    updateCollapsed(): void {\n        let collapseDelta = this.totalItemsWidth - this.maxAllowedWidth;\n\n        for (let i = this.itemsWidths.length - 1; i >= 0; i--) {\n            const item = this.itemsWidths[i];\n\n            if (!item.canCollapse) {\n                continue;\n            }\n\n            item.processCollapsed(collapseDelta > 0);\n            collapseDelta -= item.collapsedItemsWidth;\n        }\n    }\n\n    ngAfterViewInit(): void {\n        // Note: this wait is required for loading and rendering fonts for icons;\n        // unfortunately we cannot control font rendering\n        setTimeout(() => this.updateCollapsed(), 0);\n    }\n\n    ngOnDestroy() {\n        this._resizeSubscription.unsubscribe();\n    }\n\n    private calculateAndCacheTotalItemsWidth() {\n        this._totalItemsWidths = this.itemsWidths\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getOuterElementWidth(element: HTMLElement): number {\n        const baseWidth  = element.getBoundingClientRect().width;\n        const marginRight = parseInt(getComputedStyle(element).getPropertyValue('margin-right'));\n        const marginLeft = parseInt(getComputedStyle(element).getPropertyValue('margin-left'));\n\n        return baseWidth + marginRight + marginLeft;\n    }\n\n    private calculateAndCacheItemsWidth() {\n        const allItemsSelector = this.secondLevelElements\n            .map((e: string) => `${this.firstLevelElement}>${e}`);\n        const allItems: HTMLElement[] = Array.from(this._elementRef.nativeElement.querySelectorAll(allItemsSelector));\n\n        this._itemsWidths = allItems\n            .map((el) => new CachedItemWidth(el, this.getOuterElementWidth(el), this.getItemsForCollapse(el)));\n    }\n\n    private getItemsForCollapse(element: HTMLElement): CollapsibleItem[] {\n        const icon = element.querySelector(`[${MC_ICON}],${MC_NAVBAR_LOGO},[${MC_NAVBAR_LOGO}]`);\n\n        if (!icon) {\n            return [];\n        }\n\n        return Array.from(element.querySelectorAll(MC_NAVBAR_TITLE))\n            .map((el) => new CollapsibleItem(<HTMLElement> el, el.getBoundingClientRect().width));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport {\n    McNavbar,\n    McNavbarContainer,\n    McNavbarItem,\n    McNavbarTitle,\n    McNavbarBrand,\n    McNavbarLogo\n} from './navbar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        McIconModule\n    ],\n    exports: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ],\n    declarations: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ]\n})\nexport class McNavbarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressBarMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressBarBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressBarMixinBase:\n    CanColorCtor &\n    typeof McProgressBarBase =\n        mixinColor(McProgressBarBase);\n\n@Component({\n    selector: 'mc-progress-bar',\n    templateUrl: './progress-bar.component.html',\n    styleUrls: ['./progress-bar.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-bar',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressBar extends _McProgressBarMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-bar-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressBarMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McProgressBar\n} from './progress-bar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressBar\n    ],\n    declarations: [\n        McProgressBar\n    ]\n})\nexport class McProgressBarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressSpinnerMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressSpinnerBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressSpinnerMixinBase:\n    CanColorCtor &\n    typeof McProgressSpinnerBase =\n        mixinColor(McProgressSpinnerBase);\n\nconst MAX_DASH_ARRAY = 273;\n\n@Component({\n    selector: 'mc-progress-spinner',\n    templateUrl: './progress-spinner.component.html',\n    styleUrls: ['./progress-spinner.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-spinner',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressSpinner extends _McProgressSpinnerMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-spinner-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressSpinnerMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n\n    get dashOffsetPercent(): string {\n        return `${MAX_DASH_ARRAY - this.percentage * MAX_DASH_ARRAY}%`;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McProgressSpinner } from './progress-spinner.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressSpinner\n    ],\n    declarations: [\n        McProgressSpinner\n    ]\n})\nexport class McProgressSpinnerModule {}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, Directive, ElementRef, EventEmitter, forwardRef,\n    Input, OnDestroy, OnInit, Optional, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { UniqueSelectionDispatcher } from '@ptsecurity/cdk/collections';\n\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n\n/** Change event object emitted by McRadio. */\nexport class McRadioChange {\n    constructor(\n        /** The McRadioButton that emits the change event. */\n        public source: McRadioButton,\n        /** The value of the McRadioButton. */\n        public value: any) {}\n}\n\n// Boilerplate for applying mixins to McRadioGroup.\n/** @docs-private */\nexport class McRadioGroupBase {}\nexport const _McRadioGroupMixinBase: CanDisableCtor & typeof McRadioGroupBase = mixinDisabled(McRadioGroupBase);\n\n/**\n * Provider Expression that allows mc-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nexport const MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McRadioGroup),\n    multi: true\n};\n\n@Directive({\n    selector: 'mc-radio-group',\n    exportAs: 'mcRadioGroup',\n    providers: [MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n    host: {\n        role: 'radiogroup',\n        class: 'mc-radio-group'\n    },\n    inputs: ['disabled']\n})\nexport class McRadioGroup extends _McRadioGroupMixinBase\n    implements AfterContentInit, ControlValueAccessor, CanDisable {\n\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    @Input()\n    get name(): string { return this._name; }\n    set name(value: string) {\n        this._name = value;\n        this.updateRadioButtonNames();\n    }\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this.markRadiosForCheck();\n    }\n\n    /** Value of the radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(newValue: any) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n\n            this.updateSelectedRadioFromValue();\n            this.checkSelectedRadioButton();\n        }\n    }\n\n    /** Whether the radio button is selected. */\n    @Input()\n    get selected() { return this._selected; }\n    set selected(selected: McRadioButton | null) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this.checkSelectedRadioButton();\n    }\n\n    /** Whether the radio group is disabled */\n    @Input()\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /** Whether the radio group is required */\n    @Input()\n    get required(): boolean { return this._required; }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /**\n     * Event emitted when the group value changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * a radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** Child radio buttons. */\n    @ContentChildren(forwardRef(() => McRadioButton), { descendants: true })\n    _radios: QueryList<McRadioButton>;\n\n    /**\n     * Selected value for group. Should equal the value of the selected radio button if there *is*\n     * a corresponding radio button with a matching value. If there is *not* such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    private _value: any = null;\n\n    /** The HTML name attribute applied to radio buttons in this group. */\n    private _name: string = `mc-radio-group-${nextUniqueId++}`;\n\n    /** The currently selected radio button. Should match value. */\n    private _selected: McRadioButton | null = null;\n\n    /** Whether the `value` has been set to its initial value. */\n    private _isInitialized: boolean = false;\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    private _labelPosition: 'before' | 'after' = 'after';\n\n    /** Whether the radio group is disabled. */\n    private _disabled: boolean = false;\n\n    /** Whether the radio group is required. */\n    private _required: boolean = false;\n\n    constructor(\n        private readonly _changeDetector: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    /** The method to be called in order to update ngModel */\n    // tslint:disable-next-line\n    controlValueAccessorChangeFn: (value: any) => void = () => {};\n\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * @docs-private\n     */\n    // tslint:disable-next-line\n    onTouched: () => any = () => {};\n\n    checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on McRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the McRadioGroup.\n        this._isInitialized = true;\n    }\n\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n\n    /** Dispatch change event with current selection and group value. */\n    emitChangeEvent(): void {\n        if (this._isInitialized) {\n            this.change.emit(new McRadioChange(this._selected!, this._value));\n        }\n    }\n\n    markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach((radio) => radio.markForCheck());\n        }\n    }\n\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     */\n    writeValue(value: any) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn: (value: any) => void) {\n        this.controlValueAccessorChangeFn = fn;\n    }\n\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n\n    private updateRadioButtonNames(): void {\n        if (this._radios) {\n            this._radios.forEach((radio) => {\n                radio.name = this.name;\n            });\n        }\n    }\n\n    /** Updates the `selected` radio button from the internal _value state. */\n    private updateSelectedRadioFromValue(): void {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n\n        if (this._radios != null && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach((radio) => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n}\n\n\n// Boilerplate for applying mixins to McRadioButton.\n/** @docs-private */\nexport class McRadioButtonBase {\n    // Since the disabled property is manually defined for the McRadioButton and isn't set up in\n    // the mixin base class. To be able to use the tabindex mixin, a disabled property must be\n    // defined to properly work.\n    disabled: boolean;\n\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McRadioButtonMixinBase:\n    CanColorCtor &\n    HasTabIndexCtor &\n    typeof McRadioButtonBase =\n        mixinColor(mixinTabIndex(McRadioButtonBase));\n\n\n@Component({\n    selector: 'mc-radio-button',\n    templateUrl: 'radio.component.html',\n    styleUrls: ['radio.css'],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    exportAs: 'mcRadioButton',\n    host: {\n        class: 'mc-radio-button',\n        '[attr.id]': 'id',\n        '[class.mc-checked]': 'checked',\n        '[class.mc-disabled]': 'disabled',\n        '(focus)': '_inputElement.nativeElement.focus()'\n    }\n})\nexport class McRadioButton extends _McRadioButtonMixinBase\n    implements OnInit, OnDestroy, CanColor, HasTabIndex {\n\n    private readonly _uniqueId: string = `mc-radio-${++nextUniqueId}`;\n\n    /* tslint:disable:member-ordering */\n\n    /** The unique ID for the radio button. */\n    @Input() id: string = this._uniqueId;\n\n    /** Analog to HTML 'name' attribute used to group radios for unique selection. */\n    @Input() name: string;\n\n    /** Used to set the 'aria-label' attribute on the underlying input element. */\n    @Input('aria-label') ariaLabel: string;\n\n    /** The 'aria-labelledby' attribute takes precedence as the element's text alternative. */\n    @Input('aria-labelledby') ariaLabelledby: string;\n\n    /** The 'aria-describedby' attribute is read after the element's label and field type. */\n    @Input('aria-describedby') ariaDescribedby: string;\n\n    /** Whether this radio button is checked. */\n    @Input()\n    get checked(): boolean { return this._checked; }\n    set checked(value: boolean) {\n        const newCheckedState = toBoolean(value);\n\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            } else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** The value of this radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(value: any) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup != null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n\n    /** Whether the radio button is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled || (this.radioGroup != null && this.radioGroup.disabled);\n    }\n    set disabled(value: boolean) {\n        const newDisabledState = toBoolean(value);\n\n        if (this._disabled !== newDisabledState) {\n\n            this._disabled = newDisabledState;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** Whether the radio button is required. */\n    @Input()\n    get required(): boolean {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    private _labelPosition: 'before' | 'after';\n\n    /** The native `<input type=radio>` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Event emitted when the checked state of this radio button changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * the radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** The parent radio group. May or may not be present. */\n    radioGroup: McRadioGroup;\n\n    @Input()\n    isFocused: boolean = false;\n\n    /** ID of the native input element inside `<mc-radio-button>` */\n    get inputId(): string { return `${this.id || this._uniqueId}-input`; }\n\n    /** Whether this radio is checked. */\n    private _checked: boolean = false;\n\n    /** Whether this radio is disabled. */\n    private _disabled: boolean;\n\n    /** Whether this radio is required. */\n    private _required: boolean;\n\n    /** Value assigned to this radio. */\n    private _value: any = null;\n\n    /** Unregister function for _radioDispatcher */\n    // tslint:disable-next-line\n    private readonly removeUniqueSelectionListener: () => void = () => {};\n\n    constructor(\n        @Optional() radioGroup: McRadioGroup,\n        elementRef: ElementRef,\n        private readonly _changeDetector: ChangeDetectorRef,\n        private readonly _radioDispatcher: UniqueSelectionDispatcher\n    ) {\n\n        super(elementRef);\n\n        this.radioGroup = radioGroup;\n\n        this.removeUniqueSelectionListener =\n            _radioDispatcher.listen((id: string, name: string) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            });\n    }\n\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n\n    ngOnDestroy() {\n        this.removeUniqueSelectionListener();\n    }\n\n    /** Focuses the radio button. */\n    // tslint:disable-next-line\n    focus(): void {}\n\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n\n    onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n\n    onInputChange(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this.emitChangeEvent();\n\n        if (this.radioGroup) {\n            this.radioGroup.controlValueAccessorChangeFn(this.value);\n            this.radioGroup.touch();\n            if (groupValueChanged) {\n                this.radioGroup.emitChangeEvent();\n            }\n        }\n    }\n\n    /** Dispatch change event with current value. */\n    private emitChangeEvent(): void {\n        this.change.emit(new McRadioChange(this, this._value));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McRadioButton, McRadioGroup } from './radio.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule],\n    exports: [McRadioGroup, McRadioButton],\n    declarations: [McRadioGroup, McRadioButton]\n})\nexport class McRadioModule {\n}\n","import { Directive, Input } from '@angular/core';\n\nimport { CdkTreeNodeDef } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeDef]',\n    inputs: ['when: mcTreeNodeDefWhen'],\n    providers: [{ provide: CdkTreeNodeDef, useExisting: McTreeNodeDef }]\n})\nexport class McTreeNodeDef<T> extends CdkTreeNodeDef<T> {\n    @Input('mcTreeNode') data: T;\n}\n","import { Directive, Input, OnInit } from '@angular/core';\nimport { CdkTreeNodePadding } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodePadding]',\n    providers: [{ provide: CdkTreeNodePadding, useExisting: McTreeNodePadding }]\n})\nexport class McTreeNodePadding<T> extends CdkTreeNodePadding<T> implements OnInit {\n    get leftPadding(): number {\n        return (this._withIcon ? 0 : this._iconWidth) + this._baseLeftPadding;\n    }\n\n    _baseLeftPadding: number = 6;\n    _iconWidth: number = 20;\n    _indent: number = 16;\n\n    @Input('mcTreeNodePadding') level: number;\n\n    @Input('mcTreeNodePaddingIndent') indent: number;\n\n    _withIcon: boolean;\n\n    _paddingIndent(): string | null {\n        const nodeLevel = (this._treeNode.data && this._tree.treeControl.getLevel)\n            ? this._tree.treeControl.getLevel(this._treeNode.data)\n            : null;\n\n        const level = this._level || nodeLevel;\n\n        return level ? `${(level * this._indent) + this.leftPadding}px` : `${this._baseLeftPadding}px`;\n    }\n\n    ngOnInit(): void {\n        this._withIcon = this._tree.treeControl.isExpandable(this._treeNode.data);\n        this._setPadding();\n    }\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, EventEmitter, forwardRef, Input, IterableDiffer,\n    IterableDiffers, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    Directive, ElementRef, Inject\n} from '@angular/core';\nimport { NodeDef, ViewData } from '@angular/core/src/view';\n\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { CdkTreeNode, CdkTree, CdkTreeNodeOutlet } from '@ptsecurity/cdk/tree';\n\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\n\nimport { END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n/**\n * Wrapper for the CdkTree node with Material design styles.\n */\n@Directive({\n    exportAs: 'mcTreeNodeOption',\n    selector: 'mc-tree-node-option',\n    host: {\n        tabindex: '-1',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '[attr.aria-expanded]': 'isExpanded',\n        '[attr.aria-level]': 'role === \"treeitem\" ? level : null',\n        class: 'mc-tree-node',\n\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n\n        '(click)': '_handleClick()'\n    },\n    providers: [\n        { provide: CdkTreeNode, useExisting: McTreeNodeOption }\n    ]\n})\nexport class McTreeNodeOption<T> extends CdkTreeNode<T> implements CanDisable {\n    @Input() role: 'treeitem' | 'group' = 'treeitem';\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.treeSelection.selectedOptions && this.treeSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            // this.treeSelection._reportValueChange();\n        }\n    }\n\n    private _hasFocus: boolean = false;\n\n    private _disabled: boolean = false;\n    private _selected: boolean = false;\n\n    constructor(\n        protected _elementRef: ElementRef,\n        @Inject(forwardRef(() => McTreeSelection))\n        protected treeSelection: McTreeSelection<T>\n    ) {\n        super(_elementRef, treeSelection);\n    }\n\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n\n        this.treeSelection.setFocusedOption(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.treeSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.treeSelection.selectedOptions.select(this);\n        } else {\n            this.treeSelection.selectedOptions.deselect(this);\n        }\n\n        // this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleFocus(): void {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur(): void {\n        this._hasFocus = false;\n    }\n\n    _handleClick(): void {\n        if (this.disabled) { return; }\n\n        this.treeSelection.setFocusedOption(this);\n    }\n}\n\nexport const _McTreeSelectionBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    typeof CdkTree\n    = mixinTabIndex(mixinDisabled(CdkTree));\n\nexport class McTreeNavigationChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\nexport class McTreeSelectionChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\n@Component({\n    exportAs: 'mcTreeSelection',\n    selector: 'mc-tree-selection',\n    template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n    host: {\n        '[tabIndex]': 'tabIndex',\n        class: 'mc-tree-selection',\n        role: 'tree-selection',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    styleUrls: ['./tree.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: CdkTree, useExisting: McTreeSelection }]\n})\nexport class McTreeSelection<T> extends _McTreeSelectionBase<T>\n    implements AfterContentInit, CanDisable, HasTabIndex {\n    // Outlets within the tree's template where the dataNodes will be inserted.\n    @ViewChild(CdkTreeNodeOutlet) _nodeOutlet: CdkTreeNodeOutlet;\n\n    @ContentChildren(forwardRef(() => McTreeNodeOption)) options: QueryList<McTreeNodeOption<T>>;\n\n    _keyManager: FocusKeyManager<McTreeNodeOption<T>>;\n\n    selectedOptions: SelectionModel<McTreeNodeOption<T>>;\n\n    _disabled: boolean = false;\n    tabIndex: number;\n    multiple: boolean;\n    autoSelect: boolean;\n    noUnselect: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(rawValue: boolean) {\n        const value = toBoolean(rawValue);\n\n        if (this._disabled !== value) {\n            this._disabled = value;\n\n            if (this._disabled) {\n                console.log('need disable all options');\n            } else {\n                console.log('need enable all options');\n            }\n        }\n    }\n\n    @Output() readonly navigationChange = new EventEmitter<McTreeNavigationChange>();\n\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectionChange>();\n\n    constructor(\n        private _elementRef: ElementRef,\n        _differs: IterableDiffers,\n        _changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('multiple') multiple: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string\n    ) {\n        super(_differs, _changeDetectorRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.selectedOptions = new SelectionModel<McTreeNodeOption<T>>(this.multiple);\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case LEFT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.collapse(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case RIGHT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.expand(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                this._keyManager.setPreviousPageItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                this._keyManager.setNextPageItemActive();\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    ngAfterContentInit(): void {\n        this._keyManager = new FocusKeyManager<McTreeNodeOption<T>>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(true)\n            .withHorizontalOrientation(null);\n    }\n\n    updateScrollSize(): void {\n        if (!this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    setFocusedOption(option: McTreeNodeOption<T>): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitNavigationEvent(option);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McTreeNodeOption<T> = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    renderNodeChanges(\n        data: T[],\n        dataDiffer: IterableDiffer<T> = this._dataDiffer,\n        viewContainer: any = this._nodeOutlet.viewContainer,\n        parentData?: T\n    ) {\n        super.renderNodeChanges(data, dataDiffer, viewContainer, parentData);\n\n        const arrayOfInstances = [];\n\n        viewContainer._embeddedViews.forEach((view: ViewData) => {\n            const viewDef = view.def;\n\n            viewDef.nodes.forEach((node: NodeDef) => {\n                if (viewDef.nodeMatchedQueries === node.matchedQueryIds) {\n                    const nodeData: any = view.nodes[node.nodeIndex];\n\n                    arrayOfInstances.push(nodeData.instance as never);\n                }\n            });\n        });\n\n        if (this.options) {\n            this.options.reset(arrayOfInstances);\n            this.options.notifyOnChanges();\n        }\n\n        this.updateScrollSize();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _emitNavigationEvent(option: McTreeNodeOption<T>): void {\n        this.navigationChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    _emitChangeEvent(option: McTreeNodeOption<T>): void {\n        this.selectionChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    private _canDeselectLast(option: McTreeNodeOption<T>): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && option.selected);\n    }\n}\n\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\n\nimport { McTreeNodeDef } from './node';\nimport { McTreeNodePadding } from './padding';\nimport { McTreeSelection, McTreeNodeOption } from './tree-selection';\n\n\nconst MC_TREE_DIRECTIVES = [\n    McTreeNodeDef,\n    McTreeNodePadding,\n    McTreeSelection,\n    McTreeNodeOption\n];\n\n@NgModule({\n    imports: [CommonModule, CdkTreeModule],\n    exports: MC_TREE_DIRECTIVES,\n    declarations: MC_TREE_DIRECTIVES\n})\nexport class McTreeModule {}\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { FlatTreeControl, ITreeControl } from '@ptsecurity/cdk/tree';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nexport class McTreeFlattener<T, F> {\n\n    constructor(public transformFunction: (node: T, level: number) => F,\n                public getLevel: (node: F) => number,\n                public isExpandable: (node: F) => boolean,\n                public getChildren: (node: T) => Observable<T[]>) {\n    }\n\n    _flattenNode(node: T, level: number,\n                 resultNodes: F[], parentMap: boolean[]): F[] {\n        const flatNode = this.transformFunction(node, level);\n        resultNodes.push(flatNode);\n\n        if (this.isExpandable(flatNode)) {\n            this.getChildren(node).pipe(take(1)).subscribe((children) => {\n                children.forEach((child, index) => {\n                    const childParentMap: boolean[] = parentMap.slice();\n                    childParentMap.push(index !== children.length - 1);\n                    this._flattenNode(child, level + 1, resultNodes, childParentMap);\n                });\n            });\n        }\n\n        return resultNodes;\n    }\n\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData: T[]): F[] {\n        const resultNodes: F[] = [];\n        structuredData.forEach((node) => this._flattenNode(node, 0, resultNodes, []));\n\n        return resultNodes;\n    }\n\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes: F[], treeControl: ITreeControl<F>): F[] {\n        const results: F[] = [];\n        const currentExpand: boolean[] = [];\n        currentExpand[0] = true;\n\n        nodes.forEach((node) => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n\n            if (expand) { results.push(node); }\n\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n\n        return results;\n    }\n}\n\n\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `McTree`.\n * The nested tree nodes of type `T` are flattened through `MсTreeFlattener`, and converted\n * to type `F` for `McTree` to consume.\n */\nexport class McTreeFlatDataSource<T, F> extends DataSource<F> {\n    _flattenedData = new BehaviorSubject<F[]>([]);\n\n    _expandedData = new BehaviorSubject<F[]>([]);\n\n    _data: BehaviorSubject<T[]>;\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n        this._flattenedData.next(this.treeFlattener.flattenNodes(this.data));\n        this.treeControl.dataNodes = this._flattenedData.value;\n    }\n\n    constructor(private treeControl: FlatTreeControl<F>,\n                private treeFlattener: McTreeFlattener<T, F>,\n                initialData: T[] = []) {\n        super();\n        this._data = new BehaviorSubject<T[]>(initialData);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<F[]> {\n        const changes = [\n            collectionViewer.viewChange,\n            this.treeControl.expansionModel.onChange!,\n            this._flattenedData\n        ];\n\n        return merge(...changes).pipe(map(() => {\n            this._expandedData.next(\n                this.treeFlattener.expandFlattenedNodes(this._flattenedData.value, this.treeControl));\n\n            return this._expandedData.value;\n        }));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by ITreeControl and each non-leaf node.\n */\nexport class McTreeNestedDataSource<T> extends DataSource<T> {\n    _data = new BehaviorSubject<T[]>([]);\n\n    /**\n     * Data for the nested tree\n     */\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<T[]> {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map(() => this.data));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { Directive, TemplateRef } from '@angular/core';\n\n\n/** Decorates the `ng-template` tags and reads out the template from it. */\n@Directive({ selector: '[mcTabContent]' })\nexport class McTabContent {\n    constructor(public template: TemplateRef<any>) { }\n}\n","import { Directive } from '@angular/core';\nimport { CdkPortal } from '@ptsecurity/cdk/portal';\n\n\n/** Used to flag tab labels for use with the portal directive */\n@Directive({\n    selector: '[mc-tab-label], [mcTabLabel]'\n})\nexport class McTabLabel extends CdkPortal {}\n\n// TODO: workaround for https://github.com/angular/material2/issues/12760\n(McTabLabel as any).ctorParameters = () => (CdkPortal as any).ctorParameters;\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { TemplatePortal } from '@ptsecurity/cdk/portal';\nimport {\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { Subject } from 'rxjs';\n\nimport { McTabContent } from './tab-content';\nimport { McTabLabel } from './tab-label';\n\n\nexport class McTabBase {}\nexport const mcTabMixinBase: CanDisableCtor & typeof McTabBase = mixinDisabled(\n    McTabBase\n);\n\n@Component({\n    selector: 'mc-tab',\n    // Create a template for the content of the <mc-tab> so that we can grab a reference to this\n    // TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\n    // tab-group.\n    template: '<ng-template><ng-content></ng-content></ng-template>',\n    inputs: ['disabled'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcTab'\n})\nexport class McTab extends mcTabMixinBase\n    implements OnInit, CanDisable, OnChanges, OnDestroy {\n    /** @docs-private */\n    get content(): TemplatePortal | null {\n        return this.contentPortal;\n    }\n    /** Content for the tab label given by `<ng-template mc-tab-label>`. */\n    @ContentChild(McTabLabel)\n    templateLabel: McTabLabel;\n\n    /**\n     * Template provided in the tab content that will be used if present, used to enable lazy-loading\n     */\n    @ContentChild(McTabContent, { read: TemplateRef })\n    explicitContent: TemplateRef<any>;\n\n    /** Template inside the McTab view that contains an `<ng-content>`. */\n    @ViewChild(TemplateRef)\n    implicitContent: TemplateRef<any>;\n\n    /** Plain text label for the tab, used when there is no template label. */\n    @Input('label')\n    textLabel: string = '';\n\n    /** Aria label for the tab. */\n    @Input('aria-label')\n    ariaLabel: string;\n\n    /**\n     * Reference to the element that the tab is labelled by.\n     * Will be cleared if `aria-label` is set at the same time.\n     */\n    @Input('aria-labelledby')\n    ariaLabelledby: string;\n\n    /** Emits whenever the internal state of the tab changes. */\n    readonly stateChanges = new Subject<void>();\n\n    /**\n     * The relatively indexed position where 0 represents the center, negative is left, and positive\n     * represents the right.\n     */\n    position: number | null = null;\n\n    /**\n     * The initial relatively index origin of the tab if it was created and selected after there\n     * was already a selected tab. Provides context of what position the tab should originate from.\n     */\n    origin: number | null = null;\n\n    /**\n     * Whether the tab is currently active.\n     */\n    isActive = false;\n\n    /** Portal that will be the hosted content of the tab */\n    private contentPortal: TemplatePortal | null = null;\n\n    constructor(private viewContainerRef: ViewContainerRef) {\n        super();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (\n            changes.hasOwnProperty('textLabel') ||\n            changes.hasOwnProperty('disabled')\n        ) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngOnInit(): void {\n        this.contentPortal = new TemplatePortal(\n            this.explicitContent || this.implicitContent,\n            this.viewContainerRef\n        );\n    }\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\nexport const mcTabsAnimations: {\n    readonly translateTab: AnimationTriggerMetadata;\n} = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state(\n            'center, void, left-origin-center, right-origin-center',\n            style({ transform: 'none' })\n        ),\n\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state(\n            'left',\n            style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })\n        ),\n        state(\n            'right',\n            style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })\n        ),\n\n        transition(\n            '* => left, * => right, left => center, right => center',\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n","import { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { McModalRef } from './modal-ref.class';\n\n\ninterface IRegisteredMeta {\n    modalRef: McModalRef;\n    afterOpenSubscription: Subscription;\n    afterCloseSubscription: Subscription;\n}\n\n@Injectable()\nexport class McModalControlService {\n\n    // Track singleton afterAllClose through over the injection tree\n    get afterAllClose(): Subject<void> {\n        return this.parentService ? this.parentService.afterAllClose : this.rootAfterAllClose;\n    }\n\n    // Track singleton openModals array through over the injection tree\n    get openModals(): McModalRef[] {\n        return this.parentService ? this.parentService.openModals : this.rootOpenModals;\n    }\n\n    // @ts-ignore\n    private rootOpenModals: McModalRef[] = this.parentService ? null : [];\n    // @ts-ignore\n    private rootAfterAllClose: Subject<void> = this.parentService ? null : new Subject<void>();\n    // @ts-ignore\n    private rootRegisteredMetaMap: Map<McModalRef, IRegisteredMeta> = this.parentService ? null : new Map();\n\n    // Registered modal for later usage\n    private get registeredMetaMap(): Map<McModalRef, IRegisteredMeta> {\n        return this.parentService ? this.parentService.registeredMetaMap : this.rootRegisteredMetaMap;\n    }\n\n    constructor(\n        @Optional() @SkipSelf() private parentService: McModalControlService) {\n    }\n\n    // Register a modal to listen its open/close\n    registerModal(modalRef: McModalRef): void {\n        if (!this.hasRegistered(modalRef)) {\n            const afterOpenSubscription = modalRef.afterOpen.subscribe(() => this.openModals.push(modalRef));\n            const afterCloseSubscription = modalRef.afterClose.subscribe(() => this.removeOpenModal(modalRef));\n\n            this.registeredMetaMap.set(modalRef, {modalRef, afterOpenSubscription, afterCloseSubscription});\n        }\n    }\n\n    hasRegistered(modalRef: McModalRef): boolean {\n        return this.registeredMetaMap.has(modalRef);\n    }\n\n    // Close all registered opened modals\n    closeAll(): void {\n        let i = this.openModals.length;\n\n        while (i--) {\n            this.openModals[i].close();\n        }\n    }\n\n    private removeOpenModal(modalRef: McModalRef): void {\n        const index = this.openModals.indexOf(modalRef);\n\n        if (index > -1) {\n            this.openModals.splice(index, 1);\n\n            if (!this.openModals.length) {\n                this.afterAllClose.next();\n            }\n        }\n    }\n}\n","import { Observable } from 'rxjs';\n\nimport { McModalComponent } from './modal.component';\n\n\n/**\n * API class that public to users to handle the modal instance.\n * McModalRef is aim to avoid accessing to the modal instance directly by users.\n */\nexport abstract class McModalRef<T = any, R = any> {\n    abstract afterOpen: Observable<void>;\n    abstract afterClose: Observable<R>;\n\n    abstract open(): void;\n\n    abstract close(result?: R): void;\n\n    abstract destroy(result?: R): void;\n\n    /**\n     * Trigger the nzOnOk/nzOnCancel by manual\n     */\n    abstract triggerOk(): void;\n\n    abstract triggerCancel(): void;\n\n    // /**\n    //  * Return the ComponentRef of nzContent when specify nzContent as a Component\n    //  * Note: this method may return undefined if the Component has not ready yet.\n    //    (it only available after Modal's ngOnInit)\n    //  */\n    // abstract getContentComponentRef(): ComponentRef<{}>;\n\n    /**\n     * Return the component instance of nzContent when specify nzContent as a Component\n     * Note: this method may return undefined if the Component has not ready yet.\n     * (it only available after Modal's ngOnInit)\n     */\n    abstract getContentComponent(): T;\n\n    /**\n     * Get the dom element of this Modal\n     */\n    abstract getElement(): HTMLElement;\n\n    /**\n     * Get the instance of the Modal itself\n     */\n    abstract getInstance(): McModalComponent;\n}\n","export interface IClickPosition {\n    x: number;\n    y: number;\n}\n\nexport class ModalUtil {\n    private lastPosition: IClickPosition;\n\n    constructor(private document: Document) {\n        this.lastPosition = {x: -1, y: -1};\n        this.listenDocumentClick();\n    }\n\n    getLastClickPosition(): IClickPosition {\n        return this.lastPosition;\n    }\n\n    listenDocumentClick(): void {\n        this.document.addEventListener('click', (event: MouseEvent) => {\n            this.lastPosition = {x: event.clientX, y: event.clientY};\n        });\n    }\n}\n\nexport default new ModalUtil(document);\n","import { DOCUMENT } from '@angular/common';\nimport {\n    AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    Renderer2,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewContainerRef, ViewEncapsulation\n} from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { McMeasureScrollbarService } from '@ptsecurity/mosaic/core';\nimport { Observable } from 'rxjs';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\n// tslint:disable-next-line\nimport ModalUtil from './modal-util';\nimport { IModalButtonOptions, IModalOptions, ModalType, OnClickCallback } from './modal.type';\n\n\n// Duration when perform animations (ms)\nexport const MODAL_ANIMATE_DURATION = 200;\n\ntype AnimationState = 'enter' | 'leave' | null;\n\n@Component({\n    selector: 'mc-modal',\n    templateUrl: './modal.component.html',\n    styleUrls: ['./modal.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McModalComponent<T = any, R = any> extends McModalRef<T, R>\n    implements OnInit, OnChanges, AfterViewInit, OnDestroy, IModalOptions {\n\n    // tslint:disable-next-line:no-any\n    @Input() mcModalType: ModalType = 'default';\n    // If not specified, will use <ng-content>\n    @Input() mcContent: string | TemplateRef<{}> | Type<T>;\n    // available when mcContent is a component\n    @Input() mcComponentParams: object;\n    // Default Modal ONLY\n    @Input() mcFooter: string | TemplateRef<{}> | IModalButtonOptions<T>[];\n\n    @Input()\n    get mcVisible() { return this._mcVisible; }\n    set mcVisible(value) { this._mcVisible = value; }\n    _mcVisible = false;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n\n    @Input() mcZIndex: number = 1000;\n    @Input() mcWidth: number | string = 480;\n    @Input() mcWrapClassName: string;\n    @Input() mcClassName: string;\n    @Input() mcStyle: object;\n    @Input() mcTitle: string | TemplateRef<{}>;\n    @Input() mcCloseByESC: boolean = true;\n\n    @Input()\n    get mcClosable() { return this._mcClosable; }\n    set mcClosable(value) { this._mcClosable = value; }\n    _mcClosable = true;\n\n    @Input()\n    get mcMask() { return this._mcMask; }\n    set mcMask(value) { this._mcMask = value; }\n    _mcMask = true;\n\n    @Input()\n    get mcMaskClosable() { return this._mcMaskClosable; }\n    set mcMaskClosable(value) { this._mcMaskClosable = value; }\n    _mcMaskClosable = true;\n\n    @Input() mcMaskStyle: object;\n    @Input() mcBodyStyle: object;\n\n    // Trigger when modal open(visible) after animations\n    @Output() mcAfterOpen = new EventEmitter<void>();\n    // Trigger when modal leave-animation over\n    @Output() mcAfterClose = new EventEmitter<R>();\n\n    // --- Predefined OK & Cancel buttons\n    @Input() mcOkText: string;\n    @Input() mcOkType = 'primary';\n\n    @Input()\n    get mcOkLoading() { return this._mcOkLoading; }\n    set mcOkLoading(value) { this._mcOkLoading = value; }\n    _mcOkLoading = false;\n\n    @Input() @Output() mcOnOk: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    // Only aim to focus the ok button that needs to be auto focused\n    @ViewChild('autoFocusButtonOk', {read: ElementRef}) autoFocusButtonOk: ElementRef;\n    @Input() mcCancelText: string;\n\n    @Input()\n    get mcCancelLoading() { return this._mcCancelLoading; }\n    set mcCancelLoading(value) { this._mcCancelLoading = value; }\n    _mcCancelLoading = false;\n\n    @Input() @Output() mcOnCancel: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    @ViewChild('modalContainer') modalContainer: ElementRef;\n    @ViewChild('bodyContainer', {read: ViewContainerRef}) bodyContainer: ViewContainerRef;\n    maskAnimationClassMap: object;\n    modalAnimationClassMap: object;\n    // The origin point that animation based on\n    transformOrigin = '0px 0px 0px';\n\n    // Observable alias for mcAfterOpen\n    get afterOpen(): Observable<void> {\n        return this.mcAfterOpen.asObservable();\n    }\n\n    // Observable alias for mcAfterClose\n    get afterClose(): Observable<R> {\n        return this.mcAfterClose.asObservable();\n    }\n\n    get okText(): string {\n        return this.mcOkText;\n    }\n\n    get cancelText(): string {\n        return this.mcCancelText;\n    }\n\n    // Indicate whether this dialog should hidden\n    get hidden(): boolean {\n        return !this.mcVisible && !this.animationState;\n    }\n\n    // Handle the reference when using mcContent as Component\n    private contentComponentRef: ComponentRef<T>;\n    // Current animation state\n    private animationState: AnimationState;\n    private container: HTMLElement | OverlayRef;\n\n    constructor(\n        private overlay: Overlay,\n        private renderer: Renderer2,\n        private cfr: ComponentFactoryResolver,\n        private elementRef: ElementRef,\n        private viewContainer: ViewContainerRef,\n        private mcMeasureScrollbarService: McMeasureScrollbarService,\n        private modalControl: McModalControlService,\n        private changeDetector: ChangeDetectorRef,\n        @Inject(DOCUMENT) private document: any) {\n\n        super();\n    }\n\n    @Input() mcGetContainer: HTMLElement | OverlayRef | (() => HTMLElement | OverlayRef) = () => this.overlay.create();\n\n    ngOnInit() {\n\n        // Create component along without View\n        if (this.isComponent(this.mcContent)) {\n            this.createDynamicComponent(this.mcContent as Type<T>);\n        }\n\n        // Setup default button options\n        if (this.isModalButtons(this.mcFooter)) {\n            this.mcFooter = this.formatModalButtons(this.mcFooter as IModalButtonOptions<T>[]);\n        }\n\n        // Place the modal dom to elsewhere\n        this.container = typeof this.mcGetContainer === 'function' ? this.mcGetContainer() : this.mcGetContainer;\n        if (this.container instanceof HTMLElement) {\n            this.container.appendChild(this.elementRef.nativeElement);\n        } else if (this.container instanceof OverlayRef) {\n            // NOTE: only attach the dom to overlay, the view container is not changed actually\n            this.container.overlayElement.appendChild(this.elementRef.nativeElement);\n        }\n\n        // Register modal when afterOpen/afterClose is stable\n        this.modalControl.registerModal(this);\n    }\n\n    // [NOTE] NOT available when using by service!\n    // Because ngOnChanges never be called when using by service,\n    // here we can't support \"mcContent\"(Component) etc. as inputs that initialized dynamically.\n    // BUT: User also can change \"mcContent\" dynamically to trigger UI changes\n    // (provided you don't use \bComponent that needs initializations)\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.mcVisible) {\n            // Do not trigger animation while initializing\n            this.handleVisibleStateChange(this.mcVisible, !changes.mcVisible.firstChange);\n        }\n    }\n\n    ngAfterViewInit() {\n        // If using Component, it is the time to attach View while bodyContainer is ready\n        if (this.contentComponentRef) {\n            this.bodyContainer.insert(this.contentComponentRef.hostView);\n        }\n\n        if (this.autoFocusButtonOk) {\n            (this.autoFocusButtonOk.nativeElement as HTMLButtonElement).focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.container instanceof OverlayRef) {\n            this.container.dispose();\n        }\n    }\n\n    open() {\n        this.changeVisibleFromInside(true);\n    }\n\n    close(result?: R) {\n        this.changeVisibleFromInside(false, result);\n    }\n\n    // Destroy equals Close\n    destroy(result?: R) {\n        this.close(result);\n    }\n\n    triggerOk() {\n        this.onClickOkCancel('ok');\n    }\n\n    triggerCancel() {\n        this.onClickOkCancel('cancel');\n    }\n\n    getInstance(): McModalComponent {\n        return this;\n    }\n\n    getContentComponentRef(): ComponentRef<T> {\n        return this.contentComponentRef;\n    }\n\n    getContentComponent(): T {\n        return this.contentComponentRef && this.contentComponentRef.instance;\n    }\n\n    getElement(): HTMLElement {\n        return this.elementRef && this.elementRef.nativeElement;\n    }\n\n    onClickMask($event: MouseEvent) {\n        if (\n            this.mcMask &&\n            this.mcMaskClosable &&\n            ($event.target as HTMLElement).classList.contains('mc-modal-wrap') &&\n            this.mcVisible\n        ) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // tslint:disable-next-line\n    isModalType(type: ModalType): boolean {\n        return this.mcModalType === type;\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        if (event.keyCode === ESCAPE && this.container && (this.container instanceof OverlayRef)) {\n\n            this.close();\n            event.preventDefault();\n        }\n    }\n\n    // AoT\n    onClickCloseBtn() {\n        if (this.mcVisible) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // AoT\n    // tslint:disable-next-line\n    onClickOkCancel(type: 'ok' | 'cancel') {\n        const trigger = { ok: this.mcOnOk, cancel: this.mcOnCancel }[type];\n        const loadingKey = { ok: 'mcOkLoading', cancel: 'mcCancelLoading' }[type];\n\n        if (trigger instanceof EventEmitter) {\n            trigger.emit(this.getContentComponent());\n        } else if (typeof trigger === 'function') {\n\n            const result = trigger(this.getContentComponent());\n            // Users can return \"false\" to prevent closing by default\n            const caseClose = (doClose: boolean | void | {}) => (doClose !== false) && this.close(doClose as R);\n\n            if (isPromise(result)) {\n                this[loadingKey] = true;\n                const handleThen = (doClose) => {\n                    this[loadingKey] = false;\n                    caseClose(doClose);\n                };\n                (result as Promise<void>).then(handleThen).catch(handleThen);\n            } else {\n                caseClose(result);\n            }\n        }\n    }\n\n    // AoT\n    isNonEmptyString(value: {}): boolean {\n        return typeof value === 'string' && value !== '';\n    }\n\n    // AoT\n    isTemplateRef(value: {}): boolean {\n        return value instanceof TemplateRef;\n    }\n\n    // AoT\n    isComponent(value: {}): boolean {\n        return value instanceof Type;\n    }\n\n    // AoT\n    isModalButtons(value: {}): boolean {\n        return Array.isArray(value) && value.length > 0;\n    }\n\n    // Do rest things when visible state changed\n    private handleVisibleStateChange(visible: boolean, animation: boolean = true, closeResult?: R): Promise<any> {\n        // Hide scrollbar at the first time when shown up\n        if (visible) {\n            this.changeBodyOverflow(1);\n        }\n\n        return Promise\n            .resolve(animation && this.animateTo(visible))\n            // Emit open/close event after animations over\n            .then(() => {\n                if (visible) {\n                    this.mcAfterOpen.emit();\n                } else {\n                    this.mcAfterClose.emit(closeResult);\n                    // Show/hide scrollbar when animation is over\n                    this.changeBodyOverflow();\n                }\n            });\n    }\n\n    // Lookup a button's property, if the prop is a function, call & then return the result, otherwise, return itself.\n    // AoT\n    // tslint:disable-next-line\n    getButtonCallableProp(options: IModalButtonOptions<T>, prop: string): {} {\n        const value = options[prop];\n        const args: any[] = [];\n        if (this.contentComponentRef) {\n            args.push(this.contentComponentRef.instance);\n        }\n\n        return typeof value === 'function' ? value.apply(options, args) : value;\n    }\n\n    // On mcFooter's modal button click\n    // AoT\n    // tslint:disable-next-line\n    onButtonClick(button: IModalButtonOptions<T>) {\n        // Call onClick directly\n        const result = this.getButtonCallableProp(button, 'onClick');\n        if (isPromise(result)) {\n            button.loading = true;\n            (result as Promise<{}>).then(() => button.loading = false).catch(() => button.loading = false);\n        }\n    }\n\n    // Change mcVisible from inside\n    private changeVisibleFromInside(visible: boolean, closeResult?: R): Promise<void> {\n        if (this.mcVisible !== visible) {\n            // Change mcVisible value immediately\n            this.mcVisible = visible;\n            this.mcVisibleChange.emit(visible);\n\n            return this.handleVisibleStateChange(visible, true, closeResult);\n        }\n\n        return Promise.resolve();\n    }\n\n    private changeAnimationState(state: AnimationState) {\n        this.animationState = state;\n        if (state) {\n            this.maskAnimationClassMap = {\n                [`fade-${state}`]: true,\n                [`fade-${state}-active`]: true\n            };\n            this.modalAnimationClassMap = {\n                [`zoom-${state}`]: true,\n                [`zoom-${state}-active`]: true\n            };\n        } else {\n            // @ts-ignore\n            this.maskAnimationClassMap = this.modalAnimationClassMap = null;\n        }\n\n        if (this.contentComponentRef) {\n            this.contentComponentRef.changeDetectorRef.markForCheck();\n        } else {\n            this.changeDetector.markForCheck();\n        }\n    }\n\n    private animateTo(isVisible: boolean): Promise<any> {\n        // Figure out the lastest click position when shows up\n        if (isVisible) {\n            // [NOTE] Using timeout due to the document.click event is fired later than visible change,\n            // so if not postponed to next event-loop, we can't get the lastest click position\n            window.setTimeout(() => this.updateTransformOrigin());\n        }\n\n        this.changeAnimationState(isVisible ? 'enter' : 'leave');\n\n        // Return when animation is over\n        return new Promise((resolve) => window.setTimeout(() => {\n            this.changeAnimationState(null);\n            resolve();\n        }, MODAL_ANIMATE_DURATION));\n    }\n\n    private formatModalButtons(buttons: IModalButtonOptions<T>[]): IModalButtonOptions<T>[] {\n        return buttons.map((button) => {\n\n            return {\n                ...{\n                    type: 'default',\n                    size: 'default',\n                    autoLoading: true,\n                    show: true,\n                    loading: false,\n                    disabled: false\n                },\n                ...button\n            };\n        });\n    }\n\n    /**\n     * Create a component dynamically but not attach to any View\n     * (this action will be executed when bodyContainer is ready)\n     * @param component Component class\n     */\n    private createDynamicComponent(component: Type<T>) {\n        const factory = this.cfr.resolveComponentFactory(component);\n        const childInjector = Injector.create({\n            providers: [{provide: McModalRef, useValue: this}],\n            parent: this.viewContainer.parentInjector\n        });\n\n        this.contentComponentRef = factory.create(childInjector);\n\n        if (this.mcComponentParams) {\n            Object.assign(this.contentComponentRef.instance, this.mcComponentParams);\n        }\n\n        // Do the first change detection immediately\n        // (or we do detection at ngAfterViewInit, multi-changes error will be thrown)\n        this.contentComponentRef.changeDetectorRef.detectChanges();\n\n\n    }\n\n    // Update transform-origin to the last click position on document\n    private updateTransformOrigin() {\n        const modalElement = this.modalContainer.nativeElement as HTMLElement;\n        const lastPosition = ModalUtil.getLastClickPosition();\n\n        if (lastPosition) {\n            // tslint:disable-next-line\n            this.transformOrigin = `${lastPosition.x - modalElement.offsetLeft}px ${lastPosition.y - modalElement.offsetTop}px 0px`;\n        }\n    }\n\n    /**\n     * Take care of the body's overflow to decide the existense of scrollbar\n     * @param plusNum The number that the openModals.length will increase soon\n     */\n    private changeBodyOverflow(plusNum: number = 0) {\n        const openModals = this.modalControl.openModals;\n\n        if (openModals.length + plusNum > 0) {\n            // tslint:disable-next-line\n            this.renderer.setStyle(this.document.body, 'padding-right', `${this.mcMeasureScrollbarService.scrollBarWidth}px`);\n            this.renderer.setStyle(this.document.body, 'overflow', 'hidden');\n        } else {\n            this.renderer.removeStyle(this.document.body, 'padding-right');\n            this.renderer.removeStyle(this.document.body, 'overflow');\n        }\n    }\n}\n\n////////////\n\nfunction isPromise(obj: {} | void): boolean {\n    // tslint:disable-next-line\n    return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof (obj as Promise<{}>).then === 'function' && typeof (obj as Promise<{}>).catch === 'function';\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({\n    name: 'toCssUnit'\n})\nexport class CssUnitPipe implements PipeTransform {\n    transform(value: number | string, defaultUnit: string = 'px'): string {\n        const formatted = +value;\n\n        return isNaN(formatted) ? `${value}` : `${formatted}${defaultUnit}`;\n    }\n}\n","import { ComponentRef, Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\nimport { McModalComponent } from './modal.component';\nimport { ConfirmType, IModalOptions, IModalOptionsForService } from './modal.type';\n\n\n// A builder used for managing service creating modals\nexport class ModalBuilderForService {\n\n    // Modal ComponentRef, \"null\" means it has been destroyed\n    private modalRef: ComponentRef<McModalComponent>;\n    private overlayRef: OverlayRef;\n\n    constructor(private overlay: Overlay, options: IModalOptionsForService = {}) {\n        this.createModal();\n\n        if (!('mcGetContainer' in options)) {\n            options.mcGetContainer = null;\n        }\n\n        this.changeProps(options);\n        this.modalRef.instance.open();\n        this.modalRef.instance.mcAfterClose.subscribe(() => this.destroyModal());\n\n        this.overlayRef.keydownEvents()\n            // @ts-ignore\n            .pipe(filter((event: KeyboardEvent) => {\n                return event.keyCode === ESCAPE && options.mcCloseByESC;\n            }))\n            .subscribe(() => this.modalRef.instance.close());\n    }\n\n    getInstance(): McModalComponent {\n        return this.modalRef && this.modalRef.instance;\n    }\n\n    destroyModal(): void {\n        if (this.modalRef) {\n            this.overlayRef.dispose();\n            // @ts-ignore\n            this.modalRef = null;\n        }\n    }\n\n    private changeProps(options: IModalOptions): void {\n        if (this.modalRef) {\n            // here not limit user's inputs at runtime\n            Object.assign(this.modalRef.instance, options);\n        }\n    }\n\n    // Create component to ApplicationRef\n    private createModal(): void {\n        this.overlayRef = this.overlay.create();\n        this.modalRef = this.overlayRef.attach(new ComponentPortal(McModalComponent));\n    }\n}\n\n@Injectable()\nexport class McModalService {\n    // Track of the current close modals (we assume invisible is close this time)\n    get openModals(): McModalRef[] {\n        return this.modalControl.openModals;\n    }\n\n    get afterAllClose(): Observable<void> {\n        return this.modalControl.afterAllClose.asObservable();\n    }\n\n    constructor(\n        private overlay: Overlay,\n        private modalControl: McModalControlService) {\n    }\n\n    // Closes all of the currently-open dialogs\n    closeAll(): void {\n        this.modalControl.closeAll();\n    }\n\n    create<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n\n        if (typeof options.mcOnCancel !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnCancel = () => {};\n        }\n\n        if (!('mcCloseByESC' in options)) {\n            options.mcCloseByESC = true;\n        }\n\n\n        if (!('mcWidth' in options)) {\n            // tslint:disable-next-line\n            options.mcWidth = 480;\n        }\n\n        return new ModalBuilderForService(this.overlay, options).getInstance();\n    }\n\n    confirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType = 'confirm'): McModalRef<T> {\n        if ('mcFooter' in options) {\n            console.warn(`The Confirm-Modal doesn't support \"mcFooter\", this property will be ignored.`);\n        }\n\n        // NOTE: only support function currently by calling confirm()\n        if (typeof options.mcOnOk !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnOk = () => {};\n        }\n\n        options.mcModalType = 'confirm';\n        options.mcClassName = `mc-confirm mc-confirm-${confirmType} ${options.mcClassName || ''}`;\n        options.mcMaskClosable = false;\n\n        return this.create(options);\n    }\n\n    success<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'success');\n    }\n\n    delete<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'warn');\n    }\n\n    private simpleConfirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType): McModalRef<T> {\n        // Remove the Cancel button if the user not specify a Cancel button\n        if (!('mcCancelText' in options)) {\n            // @ts-ignore\n            options.mcCancelText = null;\n        }\n\n        return this.confirm(options, confirmType);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { CssUnitPipe } from './css-unit.pipe';\nimport { McModalControlService } from './modal-control.service';\nimport { McModalComponent } from './modal.component';\nimport { McModalService } from './modal.service';\n\n\n@NgModule({\n    imports: [ CommonModule, OverlayModule, McButtonModule, McIconModule ],\n    exports: [ McModalComponent ],\n    declarations: [ McModalComponent, CssUnitPipe ],\n    entryComponents: [ McModalComponent ],\n    providers: [ McModalControlService, McModalService ]\n})\nexport class McModalModule { }\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    Output,\n    TemplateRef,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    OnInit\n} from '@angular/core';\nimport { FocusKeyManager, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE, DOWN_ARROW, UP_ARROW } from '@ptsecurity/cdk/keycodes';\nimport { Subject, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { mcDropdownAnimations } from './dropdown-animations';\nimport { McDropdownContent } from './dropdown-content';\nimport { throwMcDropdownInvalidPositionX, throwMcDropdownInvalidPositionY } from './dropdown-errors';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/** Default `mc-dropdown` options that can be overridden. */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownDefaultOptions {\n    /** The x-axis position of the dropdown. */\n    xPosition: DropdownPositionX;\n\n    /** The y-axis position of the dropdown. */\n    yPosition: DropdownPositionY;\n\n    /** Whether the dropdown should overlap the dropdown trigger. */\n    overlapTrigger: boolean;\n\n    /** Class to be applied to the dropdown's backdrop. */\n    backdropClass: string;\n\n    /** Whether the dropdown has a backdrop. */\n    hasBackdrop?: boolean;\n}\n\n/** Injection token to be used to override the default options for `mc-dropdown`. */\nexport const MC_DROPDOWN_DEFAULT_OPTIONS =\n    new InjectionToken<McDropdownDefaultOptions>('mc-dropdown-default-options', {\n        providedIn: 'root',\n        factory: MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY\n    });\n\n/** @docs-private */\nexport function MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY(): McDropdownDefaultOptions {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop'\n    };\n}\n\n@Component({\n    selector: 'mc-dropdown',\n    templateUrl: 'dropdown.html',\n    styleUrls: ['dropdown.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcDropdown',\n    animations: [\n        mcDropdownAnimations.transformDropdown,\n        mcDropdownAnimations.fadeInItems\n    ],\n    providers: [\n        { provide: MC_DROPDOWN_PANEL, useExisting: McDropdown }\n    ]\n})\nexport class McDropdown implements AfterContentInit, McDropdownPanel<McDropdownItem>, OnInit, OnDestroy {\n\n    /** Position of the dropdown in the X axis. */\n    @Input()\n    get xPosition(): DropdownPositionX { return this._xPosition; }\n    set xPosition(value: DropdownPositionX) {\n        if (value !== 'before' && value !== 'after') {\n            throwMcDropdownInvalidPositionX();\n        }\n\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Position of the dropdown in the Y axis. */\n    @Input()\n    get yPosition(): DropdownPositionY { return this._yPosition; }\n    set yPosition(value: DropdownPositionY) {\n        if (value !== 'above' && value !== 'below') {\n            throwMcDropdownInvalidPositionY();\n        }\n\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Whether the dropdown should overlap its trigger. */\n    @Input()\n    get overlapTrigger(): boolean { return this._overlapTrigger; }\n    set overlapTrigger(value: boolean) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n\n    /** Whether the dropdown has a backdrop. */\n    @Input()\n    get hasBackdrop(): boolean | undefined { return this._hasBackdrop; }\n    set hasBackdrop(value: boolean | undefined) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n\n    /**\n     * This method takes classes set on the host mc-dropdown element and applies them on the\n     * dropdown template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing dropdown from outside the component.\n     * @param classes list of class names\n     */\n    @Input('class')\n    set panelClass(classes: string) {\n        if (classes && classes.length) {\n            this._classList = classes.split(' ').reduce((obj: any, className: string) => {\n                obj[className] = true;\n\n                return obj;\n            }, {});\n\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n\n    /** Config object to be passed into the dropdown's ngClass */\n    _classList: {[key: string]: boolean} = {};\n\n    /** Current state of the panel animation. */\n    _panelAnimationState: 'void' | 'enter' = 'void';\n\n    /** Emits whenever an animation on the dropdown completes. */\n    _animationDone = new Subject<AnimationEvent>();\n\n    /** Whether the dropdown is animating. */\n    _isAnimating: boolean;\n\n    /** Layout direction of the dropdown. */\n    direction: Direction;\n\n    /** Class to be added to the backdrop element. */\n    @Input() backdropClass: string = this._defaultOptions.backdropClass;\n\n    /** @docs-private */\n    @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n\n    /**\n     * List of the items inside of a dropdown.\n     */\n    @ContentChildren(McDropdownItem) items: QueryList<McDropdownItem>;\n\n    /**\n     * Dropdown content that will be rendered lazily.\n     * @docs-private\n     */\n    @ContentChild(McDropdownContent) lazyContent: McDropdownContent;\n\n    /** Event emitted when the dropdown is closed. */\n    @Output() readonly closed: EventEmitter<void | 'click' | 'keydown' | 'tab'> =\n        new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n\n    private _keyManager: FocusKeyManager<McDropdownItem>;\n    private _xPosition: DropdownPositionX = this._defaultOptions.xPosition;\n    private _yPosition: DropdownPositionY = this._defaultOptions.yPosition;\n\n    /** Dropdown items inside the current dropdown. */\n    private _items: McDropdownItem[] = [];\n\n    /** Emits whenever the amount of dropdown items changes. */\n    private _itemChanges = new Subject<McDropdownItem[]>();\n\n    /** Subscription to tab events on the dropdown panel */\n    private _tabSubscription = Subscription.EMPTY;\n    private _overlapTrigger: boolean = this._defaultOptions.overlapTrigger;\n    private _hasBackdrop: boolean | undefined = this._defaultOptions.hasBackdrop;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        private _ngZone: NgZone,\n        @Inject(MC_DROPDOWN_DEFAULT_OPTIONS) private _defaultOptions: McDropdownDefaultOptions) { }\n\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager<McDropdownItem>(this.items).withWrap().withTypeAhead();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n    }\n\n    ngOnDestroy() {\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n\n    /** Handle a keyboard event from the dropdown, delegating to the appropriate action. */\n    _handleKeydown(event: KeyboardEvent) {\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case ESCAPE:\n                this.closed.emit('keydown');\n                break;\n            case UP_ARROW:\n            case DOWN_ARROW:\n                this._keyManager.setFocusOrigin('keyboard');\n                this._keyManager.onKeydown(event);\n                break;\n            default:\n                // todo зачем обрабатывать лишние события ?\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    /**\n     * Focus the first item in the dropdown.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin: FocusOrigin = 'program'): void {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable.asObservable()\n                .pipe(take(1))\n                .subscribe(() => this._keyManager.setFocusOrigin(origin).setFirstItemActive());\n        } else {\n            this._keyManager.setFocusOrigin(origin).setFirstItemActive();\n        }\n    }\n\n    /**\n     * Resets the active item in the dropdown. This is used when the dropdown is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n\n    /**\n     * Registers a dropdown item with the dropdown.\n     * @docs-private\n     */\n    addItem(item: McDropdownItem) {\n        // We register the items through this method, rather than picking them up through\n        // `ContentChildren`, because we need the items to be picked up by their closest\n        // `mc-dropdown` ancestor. If we used `@ContentChildren(McDropdownItem, {descendants: true})`,\n        // all descendant items will bleed into the top-level dropdown in the case where the consumer\n        // has `mc-dropdown` instances nested inside each other.\n        if (this._items.indexOf(item) === -1) {\n            this._items.push(item);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Removes an item from the dropdown.\n     * @docs-private\n     */\n    removeItem(item: McDropdownItem) {\n        const index = this._items.indexOf(item);\n\n        if (this._items.indexOf(item) > -1) {\n            this._items.splice(index, 1);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Adds classes to the dropdown panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the dropdown along the x axis.\n     * @param posY Position of the dropdown along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX: DropdownPositionX = this.xPosition, posY: DropdownPositionY = this.yPosition) {\n        const classes = this._classList;\n        classes['mc-dropdown-before'] = posX === 'before';\n        classes['mc-dropdown-after'] = posX === 'after';\n        classes['mc-dropdown-above'] = posY === 'above';\n        classes['mc-dropdown-below'] = posY === 'below';\n    }\n\n    /** Starts the enter animation. */\n    _startAnimation() {\n        this._panelAnimationState = 'enter';\n    }\n\n    /** Resets the panel animation to its initial state. */\n    _resetAnimation() {\n        this._panelAnimationState = 'void';\n    }\n\n    /** Callback that is invoked when the panel animation completes. */\n    _onAnimationDone(event: AnimationEvent) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n\n        // Scroll the content element to the top once the animation is done. This is necessary, because\n        // we move focus to the first item while it's still being animated, which can throw the browser\n        // off when it determines the scroll position. Alternatively we can move focus when the\n        // animation is done, however moving focus asynchronously will interrupt screen readers\n        // which are in the process of reading out the dropdown already. We take the `element` from\n        // the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n}\n","import {\n    AfterContentInit,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy, OnInit,\n    Optional,\n    Output,\n    ViewContainerRef\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction, Directionality } from '@ptsecurity/cdk/bidi';\nimport {\n    FlexibleConnectedPositionStrategy,\n    HorizontalConnectionPos,\n    Overlay,\n    OverlayConfig,\n    OverlayRef,\n    VerticalConnectionPos,\n    IScrollStrategy\n} from '@ptsecurity/cdk/overlay';\nimport { TemplatePortal } from '@ptsecurity/cdk/portal';\nimport { merge, Subscription } from 'rxjs';\nimport { filter, take, takeUntil } from 'rxjs/operators';\n\nimport { throwMcDropdownMissingError } from './dropdown-errors';\nimport { McDropdownPanel } from './dropdown-panel';\nimport { McDropdown } from './dropdown.component';\n\n\n/** Injection token that determines the scroll handling while the dropdown is open. */\nexport const MC_DROPDOWN_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-dropdown-scroll-strategy');\n\n/** @docs-private */\nexport function MC_DROPDOWN_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_DROPDOWN_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_DROPDOWN_SCROLL_STRATEGY_FACTORY\n};\n\n/**\n * This directive is intended to be used in conjunction with an mc-dropdown tag.  It is\n * responsible for toggling the display of the provided dropdown instance.\n */\n@Directive({\n    selector: `[mcDropdownTriggerFor]`,\n    host: {\n        '(touchstart)': '_openedBy = \"touch\"',\n        '(click)': 'toggle()'\n    },\n    exportAs: 'mcDropdownTrigger'\n})\nexport class McDropdownTrigger implements OnInit, AfterContentInit, OnDestroy {\n\n    /** Whether the dropdown is open. */\n    get opened(): boolean {\n        return this._opened;\n    }\n\n    /** The text direction of the containing app. */\n    get dir(): Direction {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    // Tracking input type is necessary so it's possible to only auto-focus\n    // the first item of the list when the dropdown is opened via the keyboard\n    _openedBy: 'mouse' | 'touch' | null = null;\n\n    /** References the dropdown instance that the trigger is associated with. */\n    @Input('mcDropdownTriggerFor') dropdown: McDropdownPanel;\n\n    /** Data to be passed along to any lazily-rendered content. */\n    @Input('mcDropdownTriggerData') data: any;\n\n    /** Event emitted when the associated dropdown is opened. */\n    @Output() readonly dropdownOpened: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the associated dropdown is closed. */\n    @Output() readonly dropdownClosed: EventEmitter<void> = new EventEmitter<void>();\n\n    private _portal: TemplatePortal;\n    private _overlayRef: OverlayRef | null = null;\n    private _opened: boolean = false;\n    private _closeSubscription = Subscription.EMPTY;\n    private _hoverSubscription = Subscription.EMPTY;\n\n    constructor(private _overlay: Overlay,\n                private _element: ElementRef<HTMLElement>,\n                private _viewContainerRef: ViewContainerRef,\n                @Inject(MC_DROPDOWN_SCROLL_STRATEGY) private _scrollStrategy: any,\n                @Optional() private _dir: Directionality,\n                private _focusMonitor?: FocusMonitor) {}\n\n    ngOnInit(): void {\n        this.dropdown.closed = this.dropdown.closed || new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n    }\n\n    ngAfterContentInit() {\n        this._check();\n\n        this.dropdown.closed.asObservable().subscribe(() => {\n            this._destroy();\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n\n        this._cleanUpSubscriptions();\n    }\n\n    /** Toggles the dropdown between the open and closed states. */\n    toggle(): void {\n        // tslint:disable-next-line:no-void-expression\n        return this._opened ? this.close() : this.open();\n    }\n\n    /** Opens the dropdown. */\n    open(): void {\n        if (this._opened) {\n            return;\n        }\n\n        this._check();\n\n        const overlayRef = this._createOverlay();\n        this._setPosition(overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy);\n        overlayRef.attach(this._portal);\n\n        if (this.dropdown.lazyContent) {\n            this.dropdown.lazyContent.attach(this.data);\n        }\n\n        this._closeSubscription = this._closingActions().subscribe(() => this.close());\n        this._init();\n\n        if (this.dropdown instanceof McDropdown) {\n            this.dropdown._startAnimation();\n        }\n    }\n\n    /** Closes the dropdown. */\n    close(): void {\n        this.dropdown.closed.emit();\n    }\n\n    /**\n     * Focuses the dropdown trigger.\n     * @param origin Source of the dropdown trigger's focus.\n     */\n    focus(origin: FocusOrigin = 'program') {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._element.nativeElement, origin);\n        } else {\n            this._element.nativeElement.focus();\n        }\n    }\n\n    /** Closes the dropdown and does the necessary cleanup. */\n    private _destroy() {\n        if (!this._overlayRef || !this.opened) {\n            return;\n        }\n\n        const dropdown = this.dropdown;\n\n        this._closeSubscription.unsubscribe();\n        this._overlayRef.detach();\n\n        if (dropdown instanceof McDropdown) {\n            dropdown._resetAnimation();\n\n            if (dropdown.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                dropdown._animationDone\n                    .pipe(\n                        filter((event) => event.toState === 'void'),\n                        take(1),\n                        // Interrupt if the content got re-attached.\n                        takeUntil(dropdown.lazyContent._attached)\n                    )\n                    .subscribe(() => dropdown.lazyContent.detach(), undefined, () => {\n                        // No matter whether the content got re-attached, reset the dropdown.\n                        this._reset();\n                    });\n            } else {\n                this._reset();\n            }\n        } else {\n            this._reset();\n\n            if (dropdown.lazyContent) {\n                dropdown.lazyContent.detach();\n            }\n        }\n    }\n\n    /**\n     * This method sets the dropdown state to open and focuses the first item if\n     * the dropdown was opened via the keyboard.\n     */\n    private _init(): void {\n        this.dropdown.direction = this.dir;\n        this._setIsOpened(true);\n        this.dropdown.focusFirstItem(this._openedBy || 'program');\n    }\n\n    /**\n     * This method resets the dropdown when it's closed, most importantly restoring\n     * focus to the dropdown trigger if the dropdown was opened via the keyboard.\n     */\n    private _reset(): void {\n        this._setIsOpened(false);\n\n        // We should reset focus if the user is navigating using a keyboard or\n        // if we have a top-level trigger which might cause focus to be lost\n        // when clicking on the backdrop.\n        if (!this._openedBy) {\n            // Note that the focus style will show up both for `program` and\n            // `keyboard` so we don't have to specify which one it is.\n            this.focus();\n        } else {\n            this.focus(this._openedBy);\n        }\n\n        this._openedBy = null;\n    }\n\n    // set state rather than toggle to support triggers sharing a dropdown\n    private _setIsOpened(isOpen: boolean): void {\n        this._opened = isOpen;\n        // tslint:disable-next-line:no-void-expression\n        this._opened ? this.dropdownOpened.emit() : this.dropdownClosed.emit();\n    }\n\n    /**\n     * This method checks that a valid instance of Dropdown has been passed into\n     * mcDropdownTriggerFor. If not, an exception is thrown.\n     */\n    private _check() {\n        if (!this.dropdown) {\n            throwMcDropdownMissingError();\n        }\n    }\n\n    /**\n     * This method creates the overlay from the provided dropdown's template and saves its\n     * OverlayRef so that it can be attached to the DOM when open is called.\n     */\n    private _createOverlay(): OverlayRef {\n        if (!this._overlayRef) {\n            this._portal = new TemplatePortal(this.dropdown.templateRef, this._viewContainerRef);\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions(config.positionStrategy as FlexibleConnectedPositionStrategy);\n            this._overlayRef = this._overlay.create(config);\n\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `McDropdownPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n\n        return this._overlayRef;\n    }\n\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    private _getOverlayConfig(): OverlayConfig {\n        return new OverlayConfig({\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withTransformOriginOn('.mc-dropdown__panel'),\n            hasBackdrop: this.dropdown.hasBackdrop === null || this.dropdown.hasBackdrop === undefined\n                ? true\n                : this.dropdown.hasBackdrop,\n            backdropClass: this.dropdown.backdropClass || 'cdk-overlay-transparent-backdrop',\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir\n        });\n    }\n\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the dropdown based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    private _subscribeToPositions(position: FlexibleConnectedPositionStrategy): void {\n        if (this.dropdown.setPositionClasses) {\n            // todo possibly we should not recompute positions there\n            /*position.positionChanges.subscribe((change) => {\n                const posX: DropdownPositionX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                const posY: DropdownPositionY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n\n                this.dropdown.setPositionClasses!(posX, posY);\n            });*/\n            position.positionChanges.subscribe(() => {\n                this.dropdown.setPositionClasses!(this.dropdown.xPosition, this.dropdown.yPosition);\n            });\n        }\n    }\n\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    private _setPosition(positionStrategy: FlexibleConnectedPositionStrategy) {\n        const [originX, originFallbackX]: HorizontalConnectionPos[] =\n            this.dropdown.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n\n        const [overlayY, overlayFallbackY]: VerticalConnectionPos[] =\n            this.dropdown.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        const [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        const offsetY = 0;\n\n        if (!this.dropdown.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n\n        positionStrategy.withPositions([\n            {originX, originY, overlayX, overlayY, offsetY},\n            {originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY},\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            }\n        ]);\n    }\n\n    /** Cleans up the active subscriptions. */\n    private _cleanUpSubscriptions(): void {\n        this._closeSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n\n    /** Returns a stream that emits whenever an action that should close the dropdown occurs. */\n    private _closingActions() {\n        const backdrop = this._overlayRef!.backdropClick();\n        const detachments = this._overlayRef!.detachments();\n\n        return merge(backdrop, detachments);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER, McDropdownTrigger } from './dropdown-trigger';\nimport { McDropdown } from './dropdown.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule\n    ],\n    exports: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    declarations: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    providers: [MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER]\n})\nexport class McDropdownModule {}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-content',\n    preserveWhitespaces: false,\n    templateUrl: './content.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-content]': 'true'\n    }\n})\nexport class McContentComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-footer',\n    preserveWhitespaces: false,\n    templateUrl: './footer.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-footer]': 'true'\n    }\n})\nexport class McFooterComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector : 'mc-header',\n    preserveWhitespaces: false,\n    templateUrl: './header.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-header]': 'true'\n    }\n})\nexport class McHeaderComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-layout',\n    preserveWhitespaces: false,\n    styleUrls: ['layout.css'],\n    templateUrl: './layout.component.html',\n    host: {\n        '[class.mc-layout]': 'true',\n        '[class.mc-layout-has-sidebar]': 'hasSidebar'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McLayoutComponent {\n    hasSidebar = false;\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Host,\n    Input,\n    OnInit,\n    Optional,\n    Output\n} from '@angular/core';\nimport { toBoolean } from '@ptsecurity/mosaic/core';\n\nimport { McLayoutComponent } from './layout.component';\n\n\n@Component({\n    selector: 'mc-sidebar',\n    preserveWhitespaces: false,\n    templateUrl: './sidebar.component.html',\n    host: {\n        '[class.mc-layout-sidebar]': 'true',\n        '[class.mc-layout-sidebar-collapsed]': 'mcCollapsed',\n        '[style.flex]': 'mcFlex',\n        '[style.max-width.px]': 'mcWidth',\n        '[style.min-width.px]': 'mcWidth',\n        '[style.width.px]': 'mcWidth'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSidebarComponent implements OnInit {\n\n    @Input() _mcWidth = 200;\n    @Input() mcCollapsedWidth = 80;\n\n    @Input()\n    set mcCollapsible(value: boolean) {\n        this.collapsible = toBoolean(value);\n    }\n\n    get mcCollapsible(): boolean {\n        return this.collapsible;\n    }\n\n    @Input()\n    set mcCollapsed(value: boolean) {\n        this.collapsed = toBoolean(value);\n    }\n\n    get mcCollapsed(): boolean {\n        return this.collapsed;\n    }\n\n    // tslint:disable-next-line\n    @Output() mcCollapsedChange = new EventEmitter();\n\n    private collapsed = false;\n    private collapsible = false;\n\n    get mcFlex(): string {\n        if (this.mcCollapsed) {\n            return `0 0 ${this.mcCollapsedWidth}px`;\n        } else {\n            return `0 0 ${this.mcWidth}px`;\n        }\n    }\n\n    get mcWidth(): number {\n        if (this.mcCollapsed) {\n            return this.mcCollapsedWidth;\n        } else {\n            return this._mcWidth;\n        }\n    }\n\n    constructor(\n        @Optional() @Host() private mcLayoutComponent: McLayoutComponent) {\n    }\n\n    ngOnInit() {\n        if (this.mcLayoutComponent) {\n            this.mcLayoutComponent.hasSidebar = true;\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McContentComponent } from './content.component';\nimport { McFooterComponent } from './footer.component';\nimport { McHeaderComponent } from './header.component';\nimport { McLayoutComponent } from './layout.component';\nimport { McSidebarComponent } from './sidebar.component';\n\n\n@NgModule({\n    imports: [ CommonModule ],\n    exports: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ],\n    declarations: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ]\n})\nexport class McLayoutModule {\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n    QueryList,\n    ViewEncapsulation,\n    ChangeDetectorRef,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\n\nimport { FocusKeyManager, IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { END, ENTER, HOME, PAGE_DOWN, PAGE_UP, SPACE } from '@ptsecurity/cdk/keycodes';\n\nimport {\n    McLine,\n    McLineSetter,\n    CanDisable,\n    mixinDisabled,\n    toBoolean, CanDisableCtor\n} from '@ptsecurity/mosaic/core';\n\n\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\n@Component({\n    exportAs: 'mcListOption',\n    selector: 'mc-list-option',\n    host: {\n        tabindex: '-1',\n\n        class: 'mc-list-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n        '(click)': '_handleClick()'\n    },\n    templateUrl: 'list-option.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListOption implements AfterContentInit, OnDestroy, OnInit, IFocusableOption {\n    _hasFocus: boolean = false;\n\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    @ViewChild('text') _text: ElementRef;\n\n    // Whether the label should appear before or after the checkbox. Defaults to 'after'\n    @Input() checkboxPosition: 'before' | 'after' = 'after';\n\n    @Input() value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled || (this.listSelection && this.listSelection.disabled);\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.listSelection.selectedOptions && this.listSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            this.listSelection._reportValueChange();\n        }\n    }\n\n    private _lineSetter: McLineSetter;\n    private _selected = false;\n    private _disabled = false;\n\n    constructor(\n        private _element: ElementRef,\n        private _changeDetector: ChangeDetectorRef,\n        @Inject(forwardRef(() => McListSelection))\n        public listSelection: McListSelection\n    ) {}\n\n    ngOnInit() {\n        if (this._selected) {\n            // List options that are selected at initialization can't be reported properly to the form\n            // control. This is because it takes some time until the selection-list knows about all\n            // available options. Also it can happen that the ControlValueAccessor has an initial value\n            // that should be used instead. Deferring the value change report to the next tick ensures\n            // that the form control value is not being overwritten.\n            const wasSelected = this._selected;\n\n            Promise.resolve().then(() => {\n                if (this._selected || wasSelected) {\n                    this.selected = true;\n                    this._changeDetector.markForCheck();\n                }\n            });\n        }\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    ngOnDestroy(): void {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => this.selected = false);\n        }\n\n        this.listSelection._removeOptionFromList(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    focus(): void {\n        this._element.nativeElement.focus();\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    getLabel() {\n        return this._text ? this._text.nativeElement.textContent : '';\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.listSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.listSelection.selectedOptions.select(this);\n        } else {\n            this.listSelection.selectedOptions.deselect(this);\n        }\n\n        this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleClick() {\n        if (this.disabled) { return; }\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    _handleFocus() {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur() {\n        this._hasFocus = false;\n\n        this.listSelection._onTouched();\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n\n\nexport const MC_SELECTION_LIST_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McListSelection),\n    multi: true\n};\n\n// Change event that is being fired whenever the selected state of an option changes. */\nexport class McListSelectionChange {\n    constructor(\n        // Reference to the selection list that emitted the event.\n        public source: McListSelection,\n        // Reference to the option that has been changed.\n        public option: McListOption\n    ) {}\n}\n\n\nexport class McListSelectionBase {}\n\nexport const _McListSelectionMixinBase: CanDisableCtor & typeof McListSelectionBase\n    = mixinDisabled(McListSelectionBase);\n\n@Component({\n    exportAs: 'mcListSelection',\n    selector: 'mc-list-selection',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-list-selection',\n        '[tabIndex]': 'tabIndex',\n        '(focus)': 'focus()',\n        '(blur)': '_onTouched()',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    providers: [MC_SELECTION_LIST_VALUE_ACCESSOR],\n    preserveWhitespaces: false\n})\nexport class McListSelection extends _McListSelectionMixinBase implements\n    IFocusableOption, CanDisable, AfterContentInit, ControlValueAccessor {\n\n    _keyManager: FocusKeyManager<McListOption>;\n\n    // The option components contained within this selection-list.\n    @ContentChildren(McListOption) options: QueryList<McListOption>;\n\n    tabIndex: number;\n\n    autoSelect: boolean;\n    noUnselect: boolean;\n    multiple: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input() horizontal: boolean = false;\n\n    // Emits a change event whenever the selected state of an option changes.\n    @Output() readonly selectionChange: EventEmitter<McListSelectionChange> = new EventEmitter<McListSelectionChange>();\n\n    selectedOptions: SelectionModel<McListOption>;\n\n    // Used for storing the values that were assigned before the options were initialized.\n    private _tempValues: string[] | null;\n\n    private _modelChanges = Subscription.EMPTY;\n\n    constructor(\n        private _element: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string,\n        @Attribute('multiple') multiple: string\n    ) {\n        super();\n\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.selectedOptions = new SelectionModel<McListOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.horizontal = toBoolean(this.horizontal);\n\n        this._keyManager = new FocusKeyManager<McListOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(!this.horizontal)\n            .withHorizontalOrientation(this.horizontal ? 'ltr' : null);\n\n        if (this._tempValues) {\n            this._setOptionsFromValues(this._tempValues);\n            this._tempValues = null;\n        }\n\n        // Sync external changes to the model back to the options.\n        this._modelChanges = this.selectedOptions.onChange!.subscribe((event) => {\n            for (const item of event.added) {\n                item.selected = true;\n            }\n\n            for (const item of event.removed) {\n                item.selected = false;\n            }\n        });\n\n        this.updateScrollSize();\n    }\n\n    ngOnDestroy() {\n        this._modelChanges.unsubscribe();\n    }\n\n    focus() {\n        this._element.nativeElement.focus();\n    }\n\n    selectAll() {\n        this.options.forEach((option) => option.setSelected(true));\n\n        this._reportValueChange();\n    }\n\n    deselectAll() {\n        this.options.forEach((option) => option.setSelected(false));\n\n        this._reportValueChange();\n    }\n\n    updateScrollSize(): void {\n        if (this.horizontal || !this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    // Sets the focused option of the selection-list.\n    setFocusedOption(option: McListOption): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitChangeEvent(option);\n        this._reportValueChange();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(values: string[]): void {\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        } else {\n            this._tempValues = values;\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this._onTouched = fn;\n    }\n\n    // Implemented as a part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        if (this.options) {\n            this.options.forEach((option) => option.disabled = isDisabled);\n        }\n    }\n\n    getSelectedOptionValues(): string[] {\n        return this.options.filter((option) => option.selected).map((option) => option.value);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McListOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    _canDeselectLast(listOption: McListOption): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && listOption.selected);\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    // View to model callback that should be called if the list or its options lost focus.\n    _onTouched: () => void = () => {};\n\n    // Removes an option from the selection list and updates the active item.\n    _removeOptionFromList(option: McListOption) {\n        if (option._hasFocus) {\n            const optionIndex = this._getOptionIndex(option);\n\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.setPreviousItemActive();\n            } else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.setNextItemActive();\n            }\n        }\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                if (!this.horizontal) { this._keyManager.setPreviousPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                if (!this.horizontal) { this._keyManager.setNextPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    // Reports a value change to the ControlValueAccessor\n    _reportValueChange() {\n        if (this.options) {\n            this._onChange(this.getSelectedOptionValues());\n        }\n    }\n\n    // Emits a change event if the selected state of an option changed.\n    _emitChangeEvent(option: McListOption) {\n        this.selectionChange.emit(new McListSelectionChange(this, option));\n    }\n\n    // Returns the option with the specified value.\n    private _getOptionByValue(value: string): McListOption | undefined {\n        return this.options.find((option) => option.value === value);\n    }\n\n    // Sets the selected options based on the specified values.\n    private _setOptionsFromValues(values: string[]) {\n        this.options.forEach((option) => option.setSelected(false));\n\n        values\n            .map((value) => this._getOptionByValue(value))\n            .filter(Boolean)\n            .forEach((option) => option!.setSelected(true));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    // Returns the index of the specified list option.\n    private _getOptionIndex(option: McListOption): number {\n        return this.options.toArray().indexOf(option);\n    }\n\n    // View to model callback that should be called whenever the selected options change.\n    private _onChange: (value: any) => void = (_: any) => {};\n}\n","// todo пока не делаем, перенесено из материала, но у нас в доках таких простых списков нет.\nimport {\n    AfterContentInit, ChangeDetectionStrategy, Component, ContentChildren, Directive, ElementRef, QueryList,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { McLine, McLineSetter } from '@ptsecurity/mosaic/core';\n\n\nexport class McListBase {}\n\n@Component({\n    selector: 'mc-list',\n    host: { class: 'mc-list' },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McList extends McListBase {}\n\n\n/**\n * Directive whose purpose is to add the mc- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n    selector: '[mc-subheader], [mcSubheader]',\n    host: { class: 'mc-subheader' }\n})\nexport class McListSubheaderCssStyler {}\n\n\n// Boilerplate for applying mixins to McListItem.\nexport class McListItemBase {}\n\n@Component({\n    selector: 'mc-list-item, a[mc-list-item]',\n    host: {\n        class: 'mc-list-item',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()'\n    },\n    templateUrl: './list-item.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListItem extends McListItemBase implements AfterContentInit {\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    private _lineSetter: McLineSetter;\n\n    constructor(private _element: ElementRef) {\n        super();\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    _handleFocus() {\n        this._element.nativeElement.classList.add('mc-focused');\n    }\n\n    _handleBlur() {\n        this._element.nativeElement.classList.remove('mc-focused');\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLineModule } from '@ptsecurity/mosaic/core';\n\nimport { McListSelection, McListOption } from './list-selection.component';\nimport { McList, McListItem, McListSubheaderCssStyler } from './list.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        McLineModule\n    ],\n    exports: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ],\n    declarations: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ]\n})\nexport class McListModule {}\n","import {\n    Input,\n    Attribute,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\nexport class McLinkBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McLinkBase: HasTabIndexCtor & CanDisableCtor & typeof McLinkBase\n    = mixinTabIndex(mixinDisabled(McLinkBase));\n\n@Component({\n    selector: 'a.mc-link',\n    template: `<ng-content></ng-content>`,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcLink',\n    styleUrls: ['./link.css'],\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': 'tabIndex'\n    }\n})\n\nexport class McLink extends _McLinkBase implements OnDestroy, HasTabIndex, CanDisable {\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    private _disabled = false;\n\n    constructor(\n        @Attribute('tabindex') tabIndex: string,\n        public elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _changeDetector: ChangeDetectorRef) {\n\n        super(elementRef);\n        this._focusMonitor.monitor(elementRef.nativeElement, true);\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this.elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLink } from './link.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule\n    ],\n    declarations: [McLink],\n    exports: [McLink]\n})\nexport class McLinkModule {}\n","import {\n    AfterContentInit,\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Output,\n    SimpleChanges,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport { ComponentPortal, IComponentType, Portal } from '@ptsecurity/cdk/portal';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { McCalendarCellCssClasses } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\nimport { McDatepickerIntl } from './datepicker-intl';\nimport { McMonthView } from './month-view';\nimport { McMultiYearView, yearsPerPage } from './multi-year-view';\nimport { McYearView } from './year-view';\n\n\n/**\n * Possible views for the calendar.\n * @docs-private\n */\nexport type McCalendarView = 'month' | 'year' | 'multi-year';\n\n/** Default header for McCalendar */\n@Component({\n    selector: 'mc-calendar-header',\n    templateUrl: 'calendar-header.html',\n    exportAs: 'mcCalendarHeader',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCalendarHeader<D> {\n    constructor(private intl: McDatepickerIntl,\n                @Inject(forwardRef(() => McCalendar)) public calendar: McCalendar<D>,\n                @Optional() private dateAdapter: DateAdapter<D>,\n                @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n                changeDetectorRef: ChangeDetectorRef) {\n\n        this.calendar.stateChanges.subscribe(() => changeDetectorRef.markForCheck());\n    }\n\n    /** The label for the current calendar view. */\n    get periodButtonText(): string {\n        if (this.calendar.currentView === 'month') {\n            const label = this.dateAdapter\n                .format(this.calendar.activeDate, this.dateFormats.display.monthYearLabel);\n\n            return label[0].toLocaleUpperCase() + label.substr(1);\n        }\n\n        if (this.calendar.currentView === 'year') {\n            return this.dateAdapter.getYearName(this.calendar.activeDate);\n        }\n\n        const activeYear = this.dateAdapter.getYear(this.calendar.activeDate);\n        const firstYearInView = this.dateAdapter.getYearName(\n            // tslint:disable-next-line:no-magic-numbers\n            this.dateAdapter.createDate(activeYear - activeYear % 24, 0, 1));\n        const lastYearInView = this.dateAdapter.getYearName(\n            // tslint:disable-next-line:no-magic-numbers\n            this.dateAdapter.createDate(activeYear + yearsPerPage - 1 - activeYear % 24, 0, 1));\n\n        return `${firstYearInView} \\u2013 ${lastYearInView}`;\n    }\n\n    get periodButtonLabel(): string {\n        return this.calendar.currentView === 'month' ?\n            this.intl.switchToMultiYearViewLabel : this.intl.switchToMonthViewLabel;\n    }\n\n    /** The label for the previous button. */\n    get prevButtonLabel(): string {\n        return {\n            month: this.intl.prevMonthLabel,\n            year: this.intl.prevYearLabel,\n            'multi-year': this.intl.prevMultiYearLabel\n        }[this.calendar.currentView];\n    }\n\n    /** The label for the next button. */\n    get nextButtonLabel(): string {\n        return {\n            month: this.intl.nextMonthLabel,\n            year: this.intl.nextYearLabel,\n            'multi-year': this.intl.nextMultiYearLabel\n        }[this.calendar.currentView];\n    }\n\n    /** Handles user clicks on the period label. */\n    currentPeriodClicked(): void {\n        this.calendar.currentView = this.calendar.currentView === 'month' ? 'multi-year' : 'month';\n    }\n\n    /** Handles user clicks on the previous button. */\n    previousClicked(): void {\n        this.calendar.activeDate = this.calendar.currentView === 'month' ?\n            this.dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) :\n            this.dateAdapter.addCalendarYears(\n                this.calendar.activeDate, this.calendar.currentView === 'year' ? -1 : -yearsPerPage\n            );\n    }\n\n    /** Handles user clicks on the next button. */\n    nextClicked(): void {\n        this.calendar.activeDate = this.calendar.currentView === 'month' ?\n            this.dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) :\n            this.dateAdapter.addCalendarYears(\n                this.calendar.activeDate,\n                this.calendar.currentView === 'year' ? 1 : yearsPerPage\n            );\n    }\n\n    /** Whether the previous period button is enabled. */\n    previousEnabled(): boolean {\n        if (!this.calendar.minDate) {\n            return true;\n        }\n\n        return !this.calendar.minDate ||\n            !this.isSameView(this.calendar.activeDate, this.calendar.minDate);\n    }\n\n    /** Whether the next period button is enabled. */\n    nextEnabled(): boolean {\n        return !this.calendar.maxDate ||\n            !this.isSameView(this.calendar.activeDate, this.calendar.maxDate);\n    }\n\n    /** Whether the two dates represent the same view in the current view mode (month or year). */\n    private isSameView(date1: D, date2: D): boolean {\n        if (this.calendar.currentView === 'month') {\n            return this.dateAdapter.getYear(date1) === this.dateAdapter.getYear(date2) &&\n                this.dateAdapter.getMonth(date1) === this.dateAdapter.getMonth(date2);\n        }\n        if (this.calendar.currentView === 'year') {\n            return this.dateAdapter.getYear(date1) === this.dateAdapter.getYear(date2);\n        }\n\n        // Otherwise we are in 'multi-year' view.\n        return Math.floor(this.dateAdapter.getYear(date1) / yearsPerPage) ===\n            Math.floor(this.dateAdapter.getYear(date2) / yearsPerPage);\n    }\n}\n\n/**\n * A calendar that is used as part of the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-calendar',\n    templateUrl: 'calendar.html',\n    styleUrls: ['calendar.css'],\n    host: {\n        class: 'mc-calendar'\n    },\n    exportAs: 'mcCalendar',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCalendar<D> implements AfterContentInit, AfterViewChecked, OnDestroy, OnChanges {\n\n    /** A date representing the period (month or year) to start the calendar in. */\n    @Input()\n    get startAt(): D | null {\n        return this._startAt;\n    }\n\n    set startAt(value: D | null) {\n        this._startAt = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /**\n     * The current active date. This determines which time period is shown and which date is\n     * highlighted when using keyboard navigation.\n     */\n    get activeDate(): D {\n        return this.clampedActiveDate;\n    }\n\n    set activeDate(value: D) {\n        this.clampedActiveDate = this.dateAdapter.clampDate(value, this.minDate, this.maxDate);\n        this.stateChanges.next();\n    }\n\n    /** Whether the calendar is in month view. */\n    get currentView(): McCalendarView {\n        return this._currentView;\n    }\n\n    set currentView(value: McCalendarView) {\n        this._currentView = value;\n        this.moveFocusOnNextTick = true;\n    }\n\n    /** An input indicating the type of the header component, if set. */\n    @Input() headerComponent: IComponentType<any>;\n\n    /** A portal containing the header component type for this calendar. */\n    calendarHeaderPortal: Portal<any>;\n\n    /** Whether the calendar should be started in month or year view. */\n    @Input() startView: McCalendarView = 'month';\n\n    /** Function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Function that can be used to add custom CSS classes to dates. */\n    @Input() dateClass: (date: D) => McCalendarCellCssClasses;\n\n    /** Emits when the currently selected date changes. */\n    @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /**\n     * Emits the year chosen in multiyear view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /**\n     * Emits the month chosen in year view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits when any date is selected. */\n    @Output() readonly userSelection: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Reference to the current month view component. */\n    @ViewChild(McMonthView) monthView: McMonthView<D>;\n\n    /** Reference to the current year view component. */\n    @ViewChild(McYearView) yearView: McYearView<D>;\n\n    /** Reference to the current multi-year view component. */\n    @ViewChild(McMultiYearView) multiYearView: McMultiYearView<D>;\n\n    /**\n     * Emits whenever there is a state change that the header may need to respond to.\n     */\n    stateChanges = new Subject<void>();\n\n    private intlChanges: Subscription;\n\n    /**\n     * Used for scheduling that focus should be moved to the active cell on the next tick.\n     * We need to schedule it, rather than do it immediately, because we have to wait\n     * for Angular to re-evaluate the view children.\n     */\n    private moveFocusOnNextTick = false;\n    private _startAt: D | null;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n    private clampedActiveDate: D;\n    private _currentView: McCalendarView;\n\n    constructor(\n        intl: McDatepickerIntl,\n        @Optional() private dateAdapter: DateAdapter<D>,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        this.intlChanges = intl.changes.subscribe(() => {\n            changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        });\n    }\n\n    ngAfterContentInit() {\n        this.calendarHeaderPortal = new ComponentPortal(this.headerComponent || McCalendarHeader);\n        this.activeDate = this.startAt || this.dateAdapter.today();\n\n        // Assign to the private property since we don't want to move focus on init.\n        this._currentView = this.startView;\n    }\n\n    ngAfterViewChecked() {\n        if (this.moveFocusOnNextTick) {\n            this.moveFocusOnNextTick = false;\n            this.focusActiveCell();\n        }\n    }\n\n    ngOnDestroy() {\n        this.intlChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const change = changes.minDate || changes.maxDate || changes.dateFilter;\n\n        if (change && !change.firstChange) {\n            const view = this.getCurrentViewComponent();\n\n            if (view) {\n                // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n                // passed down to the view via data bindings which won't be up-to-date when we call `init`.\n                this.changeDetectorRef.detectChanges();\n                view.init();\n            }\n        }\n\n        this.stateChanges.next();\n    }\n\n    focusActiveCell() {\n        this.getCurrentViewComponent().focusActiveCell();\n    }\n\n    /** Updates today's date after an update of the active date */\n    updateTodaysDate() {\n        const view = this.currentView === 'month' ? this.monthView :\n            (this.currentView === 'year' ? this.yearView : this.multiYearView);\n\n        view.ngAfterContentInit();\n    }\n\n    /** Handles date selection in the month view. */\n    dateSelected(date: D): void {\n        if (!this.dateAdapter.sameDate(date, this.selected)) {\n            this.selectedChange.emit(date);\n        }\n    }\n\n    /** Handles year selection in the multiyear view. */\n    yearSelectedInMultiYearView(normalizedYear: D) {\n        this.yearSelected.emit(normalizedYear);\n    }\n\n    /** Handles month selection in the year view. */\n    monthSelectedInYearView(normalizedMonth: D) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n\n    userSelected(): void {\n        this.userSelection.emit();\n    }\n\n    /** Handles year/month selection in the multi-year/year views. */\n    goToDateInView(date: D, view: 'month' | 'year' | 'multi-year'): void {\n        this.activeDate = date;\n        this.currentView = view;\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Returns the component instance that corresponds to the current calendar view. */\n    private getCurrentViewComponent() {\n        return this.monthView || this.yearView || this.multiYearView;\n    }\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\n/**\n * Animations used by the mosaic datepicker.\n * @docs-private\n */\nexport const mcDatepickerAnimations: {\n    readonly transformPanel: AnimationTriggerMetadata;\n    readonly fadeInCalendar: AnimationTriggerMetadata;\n} = {\n    /** Transforms the height of the datepicker's calendar. */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(1, 0.8)'\n        })),\n        transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1, 1)'\n        }))),\n        transition('* => void', animate('100ms linear', style({ opacity: 0 })))\n    ]),\n\n    /** Fades in the content of the calendar. */\n    fadeInCalendar: trigger('fadeInCalendar', [\n        state('void', style({ opacity: 0 })),\n        state('enter', style({ opacity: 1 })),\n\n        // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n        transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n    ])\n};\n\n// todo should be put into polyfils\n// https://github.com/angular/angular/issues/24769\nif (!Element.prototype.matches) {\n    Element.prototype.matches = (Element.prototype as any).msMatchesSelector;\n}\n","// tslint:disable:no-unbound-method\n// tslint:disable:no-magic-numbers\nimport { DOCUMENT } from '@angular/common';\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    Component,\n    ComponentRef,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    Optional,\n    Output,\n    ViewChild,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { DateAdapter } from '@ptsecurity/cdk/datetime';\nimport { ESCAPE, UP_ARROW } from '@ptsecurity/cdk/keycodes';\nimport {\n    Overlay,\n    OverlayConfig,\n    OverlayRef,\n    IPositionStrategy,\n    IScrollStrategy\n} from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal, IComponentType } from '@ptsecurity/cdk/portal';\nimport {\n    CanColor,\n    CanColorCtor,\n    mixinColor,\n    ThemePalette\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { merge, Observable, Subject, Subscription } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\n\nimport { McCalendar } from './calendar';\nimport { McCalendarCellCssClasses } from './calendar-body';\nimport { mcDatepickerAnimations } from './datepicker-animations';\nimport { createMissingDateImplError } from './datepicker-errors';\nimport { McDatepickerInput } from './datepicker-input';\n\n\n/** Used to generate a unique ID for each datepicker instance. */\nlet datepickerUid = 0;\n\n/** Injection token that determines the scroll handling while the calendar is open. */\nexport const MC_DATEPICKER_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-datepicker-scroll-strategy');\n\n/** @docs-private */\n// tslint:disable-next-line:naming-convention\nexport function MC_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_DATEPICKER_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_DATEPICKER_SCROLL_STRATEGY_FACTORY\n};\n\n// Boilerplate for applying mixins to McDatepickerContent.\n/** @docs-private */\nexport class McDatepickerContentBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McDatepickerContentMixinBase: CanColorCtor & typeof McDatepickerContentBase =\n    mixinColor(McDatepickerContentBase);\n\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * McCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * @docs-private\n */\n@Component({\n    selector: 'mc-datepicker__content',\n    templateUrl: 'datepicker-content.html',\n    styleUrls: ['datepicker-content.css'],\n    host: {\n        class: 'mc-datepicker__content',\n        '[@transformPanel]': '\"enter\"'\n    },\n    animations: [\n        mcDatepickerAnimations.transformPanel,\n        mcDatepickerAnimations.fadeInCalendar\n    ],\n    exportAs: 'mcDatepickerContent',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['color']\n})\nexport class McDatepickerContent<D> extends McDatepickerContentMixinBase\n    implements AfterViewInit, CanColor {\n\n    /** Reference to the internal calendar component. */\n    @ViewChild(McCalendar) calendar: McCalendar<D>;\n\n    /** Reference to the datepicker that created the overlay. */\n    datepicker: McDatepicker<D>;\n\n    /** Whether the datepicker is above or below the input. */\n    isAbove: boolean;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    ngAfterViewInit() {\n        this.calendar.focusActiveCell();\n    }\n}\n\n\n// TODO: We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"mcDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the datepicker popup/dialog. */\n@Component({\n    selector: 'mc-datepicker',\n    template: '',\n    exportAs: 'mcDatepicker',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    providers: [{ provide: McFormFieldControl, useExisting: McDatepicker }]\n})\nexport class McDatepicker<D> implements OnDestroy, CanColor {\n\n    /** The date to open the calendar to initially. */\n    @Input()\n    get startAt(): D | null {\n        // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n        // selected value is.\n        return this._startAt || (this.datepickerInput ? this.datepickerInput.value : null);\n    }\n\n    set startAt(value: D | null) {\n        this._startAt = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** Color palette to use on the datepicker's calendar. */\n    @Input()\n    get color(): ThemePalette {\n        // @ts-ignore:next-line\n        return this._color ||\n            (this.datepickerInput ? this.datepickerInput.getThemePalette() : undefined);\n    }\n\n    set color(value: ThemePalette) {\n        this._color = value;\n    }\n\n    /** Whether the datepicker pop-up should be disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled === undefined && this.datepickerInput ?\n            this.datepickerInput.disabled : !!this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        const newValue = coerceBooleanProperty(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this.disabledChange.next(newValue);\n        }\n    }\n\n    /** Whether the calendar is open. */\n    @Input()\n    get opened(): boolean {\n        return this._opened;\n    }\n\n    set opened(value: boolean) {\n        if (value) {\n            this.open();\n        } else {\n            this.close();\n        }\n    }\n\n    /** The currently selected date. */\n    get selected(): D | null {\n        return this.validSelected;\n    }\n\n    set selected(value: D | null) {\n        this.validSelected = value;\n    }\n\n    /** The minimum selectable date. */\n    get minDate(): D | null {\n        return this.datepickerInput && this.datepickerInput.min;\n    }\n\n    /** The maximum selectable date. */\n    get maxDate(): D | null {\n        return this.datepickerInput && this.datepickerInput.max;\n    }\n\n    get dateFilter(): (date: D | null) => boolean {\n        return this.datepickerInput && this.datepickerInput.dateFilter;\n    }\n\n\n    get value(): D | null {\n        return this.selected;\n    }\n\n    /** An input indicating the type of the custom header component for the calendar, if set. */\n    @Input() calendarHeaderComponent: IComponentType<any>;\n\n    /** The view that the calendar should start in. */\n    @Input() startView: 'month' | 'year' | 'multi-year' = 'month';\n\n    /**\n     * Emits selected year in multiyear view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /**\n     * Emits selected month in year view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Classes to be passed to the date picker panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[];\n\n    /** Function that can be used to add custom CSS classes to dates. */\n    @Input() dateClass: (date: D) => McCalendarCellCssClasses;\n\n    /** Emits when the datepicker has been opened. */\n    @Output('opened') openedStream: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emits when the datepicker has been closed. */\n    @Output('closed') closedStream: EventEmitter<void> = new EventEmitter<void>();\n\n    /** The id for the datepicker calendar. */\n    id: string = `mc-datepicker-${datepickerUid++}`;\n\n    /** A reference to the overlay when the calendar is opened as a popup. */\n    popupRef: OverlayRef;\n\n    /** The input element this datepicker is associated with. */\n    datepickerInput: McDatepickerInput<D>;\n\n    readonly stateChanges: Observable<void> = new Subject<void>();\n\n    /** Emits when the datepicker is disabled. */\n    readonly disabledChange = new Subject<boolean>();\n\n    /** Emits new selected date when selected date changes. */\n    readonly selectedChanged = new Subject<D>();\n    private scrollStrategy: () => IScrollStrategy;\n    private _startAt: D | null;\n    private _disabled: boolean;\n    private _opened = false;\n    private validSelected: D | null = null;\n    private _color: ThemePalette;\n\n    /** A portal containing the calendar for this datepicker. */\n    private calendarPortal: ComponentPortal<McDatepickerContent<D>>;\n\n    /** Reference to the component instantiated in popup mode. */\n    private popupComponentRef: ComponentRef<McDatepickerContent<D>> | null;\n\n    /** The element that was focused before the datepicker was opened. */\n    private focusedElementBeforeOpen: HTMLElement | null = null;\n\n    /** Subscription to value changes in the associated input element. */\n    private inputSubscription = Subscription.EMPTY;\n\n    constructor(private overlay: Overlay,\n                private ngZone: NgZone,\n                private viewContainerRef: ViewContainerRef,\n                @Inject(MC_DATEPICKER_SCROLL_STRATEGY) scrollStrategy: any,\n                @Optional() private dateAdapter: DateAdapter<D>,\n                @Optional() private dir: Directionality,\n                @Optional() @Inject(DOCUMENT) private document: any) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        this.scrollStrategy = scrollStrategy;\n    }\n\n    ngOnDestroy() {\n        this.close();\n        this.inputSubscription.unsubscribe();\n        this.disabledChange.complete();\n\n        if (this.popupRef) {\n            this.popupRef.dispose();\n            this.popupComponentRef = null;\n        }\n    }\n\n    /** Selects the given date */\n    select(date: D): void {\n        const oldValue = this.selected;\n        this.selected = date;\n        if (!this.dateAdapter.sameDate(oldValue, this.selected)) {\n            this.selectedChanged.next(date);\n        }\n    }\n\n    /** Emits the selected year in multiyear view */\n    selectYear(normalizedYear: D): void {\n        this.yearSelected.emit(normalizedYear);\n    }\n\n    /** Emits selected month in year view */\n    selectMonth(normalizedMonth: D): void {\n        this.monthSelected.emit(normalizedMonth);\n    }\n\n    /**\n     * Register an input with this datepicker.\n     * @param input The datepicker input to register with this datepicker.\n     */\n    registerInput(input: McDatepickerInput<D>): void {\n        if (this.datepickerInput) {\n            throw Error('A McDatepicker can only be associated with a single input.');\n        }\n        this.datepickerInput = input;\n        this.inputSubscription =\n            this.datepickerInput.valueChange.subscribe((value: D | null) => this.selected = value);\n    }\n\n    /** Open the calendar. */\n    open(): void {\n        if (this._opened || this.disabled) {\n            return;\n        }\n        if (!this.datepickerInput) {\n            throw Error('Attempted to open an McDatepicker with no associated input.');\n        }\n        if (this.document) {\n            this.focusedElementBeforeOpen = this.document.activeElement;\n        }\n\n        this.openAsPopup();\n\n        this._opened = true;\n        this.openedStream.emit();\n    }\n\n    /** Close the calendar. */\n    close(): void {\n        if (!this._opened) {\n            return;\n        }\n\n        if (this.popupRef && this.popupRef.hasAttached()) {\n            this.popupRef.detach();\n        }\n\n        if (this.calendarPortal && this.calendarPortal.isAttached) {\n            this.calendarPortal.detach();\n        }\n\n        const completeClose = () => {\n            // The `_opened` could've been reset already if\n            // we got two events in quick succession.\n            if (this._opened) {\n                this._opened = false;\n                this.closedStream.emit();\n                this.focusedElementBeforeOpen = null;\n            }\n        };\n\n        if (this.focusedElementBeforeOpen &&\n            typeof this.focusedElementBeforeOpen.focus === 'function') {\n            // Because IE moves focus asynchronously, we can't count on it being restored before we've\n            // marked the datepicker as closed. If the event fires out of sequence and the element that\n            // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n            // able to close the calendar at all. We work around it by making the logic, that marks\n            // the datepicker as closed, async as well.\n            this.focusedElementBeforeOpen.focus();\n            setTimeout(completeClose);\n        } else {\n            completeClose();\n        }\n    }\n\n    /** Open the calendar as a popup. */\n    private openAsPopup(): void {\n        if (!this.calendarPortal) {\n            this.calendarPortal = new ComponentPortal<McDatepickerContent<D>>(McDatepickerContent,\n                this.viewContainerRef);\n        }\n\n        if (!this.popupRef) {\n            this.createPopup();\n        }\n\n        if (!this.popupRef.hasAttached()) {\n            this.popupComponentRef = this.popupRef.attach(this.calendarPortal);\n            this.popupComponentRef.instance.datepicker = this;\n            this.setColor();\n\n            // Update the position once the calendar has rendered.\n            this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n                this.popupRef.updatePosition();\n            });\n        }\n    }\n\n    /** Create the popup. */\n    private createPopup(): void {\n        const overlayConfig = new OverlayConfig({\n            positionStrategy: this.createPopupPositionStrategy(),\n            hasBackdrop: true,\n            backdropClass: 'mc-overlay-transparent-backdrop',\n            direction: this.dir,\n            scrollStrategy: this.scrollStrategy(),\n            panelClass: 'mc-datepicker__popup'\n        });\n\n        this.popupRef = this.overlay.create(overlayConfig);\n        this.popupRef.overlayElement.setAttribute('role', 'dialog');\n\n        merge(\n            this.popupRef.backdropClick(),\n            this.popupRef.detachments(),\n            this.popupRef.keydownEvents().pipe(filter((event) => {\n                // Closing on alt + up is only valid when there's an input associated with the datepicker.\n                // tslint:disable-next-line:deprecation\n                return event.keyCode === ESCAPE || (this.datepickerInput && event.altKey && event.keyCode === UP_ARROW);\n            }))\n        ).subscribe(() => this.close());\n    }\n\n    /** Create the popup PositionStrategy. */\n    private createPopupPositionStrategy(): IPositionStrategy {\n        return this.overlay.position()\n            .flexibleConnectedTo(this.datepickerInput.elementRef)\n            .withTransformOriginOn('.mc-datepicker__content')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withLockedPosition()\n            .withPositions([\n                {\n                    originX: 'start',\n                    originY: 'bottom',\n                    overlayX: 'start',\n                    overlayY: 'top'\n                },\n                {\n                    originX: 'start',\n                    originY: 'top',\n                    overlayX: 'start',\n                    overlayY: 'bottom'\n                },\n                {\n                    originX: 'end',\n                    originY: 'bottom',\n                    overlayX: 'end',\n                    overlayY: 'top'\n                },\n                {\n                    originX: 'end',\n                    originY: 'top',\n                    overlayX: 'end',\n                    overlayY: 'bottom'\n                }\n            ]);\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Passes the current theme color along to the calendar overlay. */\n    private setColor(): void {\n        const color = this.color;\n        if (this.popupComponentRef) {\n            this.popupComponentRef.instance.color = color;\n        }\n    }\n}\n","// tslint:disable:no-empty\nimport {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Output\n} from '@angular/core';\nimport {\n    AbstractControl,\n    ControlValueAccessor,\n    NG_VALIDATORS,\n    NG_VALUE_ACCESSOR,\n    ValidationErrors,\n    Validator,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport { DOWN_ARROW } from '@ptsecurity/cdk/keycodes';\nimport { ThemePalette } from '@ptsecurity/mosaic/core';\nimport { McFormField } from '@ptsecurity/mosaic/form-field';\nimport { MC_INPUT_VALUE_ACCESSOR } from '@ptsecurity/mosaic/input';\nimport { Subscription } from 'rxjs';\n\nimport { McDatepicker } from './datepicker';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\n/** @docs-private */\nexport const MC_DATEPICKER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McDatepickerInput),\n    multi: true\n};\n\n/** @docs-private */\nexport const MC_DATEPICKER_VALIDATORS: any = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => McDatepickerInput),\n    multi: true\n};\n\n\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use McDatepickerInputEvent instead.\n */\nexport class McDatepickerInputEvent<D> {\n    /** The new value for the target datepicker input. */\n    value: D | null;\n\n    constructor(\n        /** Reference to the datepicker input component that emitted the event. */\n        public target: McDatepickerInput<D>,\n        /** Reference to the native input element associated with the datepicker input. */\n        public targetElement: HTMLElement) {\n        this.value = this.target.value;\n    }\n}\n\n\n/** Directive used to connect an input to a McDatepicker. */\n@Directive({\n    selector: 'input[mcDatepicker]',\n    providers: [\n        MC_DATEPICKER_VALUE_ACCESSOR,\n        MC_DATEPICKER_VALIDATORS,\n        { provide: MC_INPUT_VALUE_ACCESSOR, useExisting: McDatepickerInput }\n    ],\n    host: {\n        '[attr.aria-haspopup]': 'true',\n        '[attr.aria-owns]': '(datepicker?.opened && datepicker.id) || null',\n        '[attr.min]': 'min ? dateAdapter.toIso8601(min) : null',\n        '[attr.max]': 'max ? dateAdapter.toIso8601(max) : null',\n        '[disabled]': 'disabled',\n        '(input)': 'onInput($event.target.value)',\n        '(change)': 'onChange()',\n        '(blur)': 'onBlur()',\n        '(keydown)': 'onKeydown($event)'\n    },\n    exportAs: 'mcDatepickerInput'\n})\nexport class McDatepickerInput<D> implements ControlValueAccessor, OnDestroy, Validator {\n    /** The datepicker that this input is associated with. */\n    @Input()\n    set mcDatepicker(value: McDatepicker<D>) {\n        if (!value) {\n            return;\n        }\n\n        this.datepicker = value;\n        this.datepicker.registerInput(this);\n        this.datepickerSubscription.unsubscribe();\n\n        this.datepickerSubscription = this.datepicker.selectedChanged.subscribe((selected: D) => {\n            this.value = selected;\n            this.cvaOnChange(selected);\n            this.onTouched();\n            this.dateInput.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n            this.dateChange.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n        });\n    }\n\n    /** Function that can be used to filter out dates within the datepicker. */\n    @Input()\n    set mcDatepickerFilter(value: (date: D | null) => boolean) {\n        this.dateFilter = value;\n        this.validatorOnChange();\n    }\n\n    /** The value of the input. */\n    @Input()\n    get value(): D | null {\n        return this._value;\n    }\n\n    set value(value: D | null) {\n        // tslint:disable-next-line:no-parameter-reassignment\n        value = this.dateAdapter.deserialize(value);\n        this.lastValueValid = !value || this.dateAdapter.isValid(value);\n        // tslint:disable-next-line:no-parameter-reassignment\n        value = this.getValidDateOrNull(value);\n        const oldDate = this.value;\n        this._value = value;\n        this.formatValue(value);\n\n        if (!this.dateAdapter.sameDate(oldDate, value)) {\n            this.valueChange.emit(value);\n        }\n    }\n\n    /** The minimum valid date. */\n    @Input()\n    get min(): D | null {\n        return this._min;\n    }\n\n    set min(value: D | null) {\n        this._min = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.validatorOnChange();\n    }\n\n    /** The maximum valid date. */\n    @Input()\n    get max(): D | null {\n        return this._max;\n    }\n\n    set max(value: D | null) {\n        this._max = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.validatorOnChange();\n    }\n\n    /** Whether the datepicker-input is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return !!this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        const newValue = coerceBooleanProperty(value);\n        const element = this.elementRef.nativeElement;\n\n        if (this._disabled !== newValue) {\n            this._disabled = newValue;\n            this.disabledChange.emit(newValue);\n        }\n\n        // We need to null check the `blur` method, because it's undefined during SSR.\n        if (newValue && element.blur) {\n            // Normally, native input elements automatically blur if they turn disabled. This behavior\n            // is problematic, because it would mean that it triggers another change detection cycle,\n            // which then causes a changed after checked error if the input element was focused before.\n            element.blur();\n        }\n    }\n\n    datepicker: McDatepicker<D>;\n    dateFilter: (date: D | null) => boolean;\n\n    /** Emits when a `change` event is fired on this `<input>`. */\n    @Output() readonly dateChange: EventEmitter<McDatepickerInputEvent<D>> =\n        new EventEmitter<McDatepickerInputEvent<D>>();\n\n    /** Emits when an `input` event is fired on this `<input>`. */\n    @Output() readonly dateInput: EventEmitter<McDatepickerInputEvent<D>> =\n        new EventEmitter<McDatepickerInputEvent<D>>();\n\n    /** Emits when the value changes (either due to user input or programmatic change). */\n    valueChange = new EventEmitter<D | null>();\n\n    /** Emits when the disabled state has changed */\n    disabledChange = new EventEmitter<boolean>();\n    private _value: D | null;\n    private _min: D | null;\n    private _max: D | null;\n    private _disabled: boolean;\n\n    private datepickerSubscription = Subscription.EMPTY;\n\n    private localeSubscription = Subscription.EMPTY;\n\n    /** Whether the last value set on the input was valid. */\n    private lastValueValid = false;\n\n    constructor(\n        public elementRef: ElementRef<HTMLInputElement>,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        @Optional() private formField: McFormField\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        // Update the displayed date when the locale changes.\n        this.localeSubscription = dateAdapter.localeChanges.subscribe(() => {\n            this.value = this.value;\n        });\n    }\n\n    onTouched = () => {\n    }\n\n    ngOnDestroy() {\n        this.datepickerSubscription.unsubscribe();\n        this.localeSubscription.unsubscribe();\n        this.valueChange.complete();\n        this.disabledChange.complete();\n    }\n\n    /** @docs-private */\n    registerOnValidatorChange(fn: () => void): void {\n        this.validatorOnChange = fn;\n    }\n\n    /** @docs-private */\n    validate(c: AbstractControl): ValidationErrors | null {\n        return this.validator ? this.validator(c) : null;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value: D): void {\n        this.value = value;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this.cvaOnChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    onKeydown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n\n        if (this.datepicker && isAltDownArrow && !this.elementRef.nativeElement.readOnly) {\n            this.datepicker.open();\n            event.preventDefault();\n        }\n    }\n\n    onInput(value: string) {\n        let date = this.dateAdapter.parse(value, this.dateFormats.parse.dateInput);\n        this.lastValueValid = !date || this.dateAdapter.isValid(date);\n        date = this.getValidDateOrNull(date);\n\n        if (!this.dateAdapter.sameDate(date, this._value)) {\n            this._value = date;\n            this.cvaOnChange(date);\n            this.valueChange.emit(date);\n            this.dateInput.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n        }\n    }\n\n    onChange() {\n        this.dateChange.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n    }\n\n    /** Returns the palette used by the input's form field, if any. */\n    getThemePalette(): ThemePalette | undefined {\n        return this.formField ? this.formField.color : undefined;\n    }\n\n    /** Handles blur events on the input. */\n    onBlur() {\n        // Reformat the input only if we have a valid value.\n        if (this.value) {\n            this.formatValue(this.value);\n        }\n\n        this.onTouched();\n    }\n\n    private cvaOnChange: (value: any) => void = () => {\n    }\n\n    private validatorOnChange = () => {\n    }\n\n    /** The form control validator for whether the input parses. */\n    private parseValidator: ValidatorFn = (): ValidationErrors | null => {\n        return this.lastValueValid ?\n            null : { mcDatepickerParse: { text: this.elementRef.nativeElement.value } };\n    }\n\n    /** The form control validator for the min date. */\n    private minValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n        const controlValue = this.getValidDateOrNull(this.dateAdapter.deserialize(control.value));\n\n        return (!this.min || !controlValue ||\n            this.dateAdapter.compareDate(this.min, controlValue) <= 0) ?\n            null : { mcDatepickerMin: { min: this.min, actual: controlValue } };\n    }\n\n    /** The form control validator for the max date. */\n    private maxValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n        const controlValue = this.getValidDateOrNull(this.dateAdapter.deserialize(control.value));\n\n        return (!this.max || !controlValue ||\n            this.dateAdapter.compareDate(this.max, controlValue) >= 0) ?\n            null : { mcDatepickerMax: { max: this.max, actual: controlValue } };\n    }\n\n    /** The form control validator for the date filter. */\n    private filterValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n        const controlValue = this.getValidDateOrNull(this.dateAdapter.deserialize(control.value));\n\n        return !this.dateFilter || !controlValue || this.dateFilter(controlValue) ?\n            null : { mcDatepickerFilter: true };\n    }\n\n    /** Formats a value and sets it on the input element. */\n    private formatValue(value: D | null) {\n        this.elementRef.nativeElement.value =\n            value ? this.dateAdapter.format(value, this.dateFormats.display.dateInput) : '';\n    }\n\n    /** The combined form control validator for this input. */\n        // tslint:disable:member-ordering\n    private validator: ValidatorFn | null =\n        Validators.compose([\n            this.parseValidator,\n            this.minValidator,\n            this.maxValidator,\n            this.filterValidator\n        ]);\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    Directive,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    ViewEncapsulation,\n    ViewChild\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { McButton } from '@ptsecurity/mosaic/button';\nimport { merge, of as observableOf, Subscription } from 'rxjs';\n\nimport { McDatepicker } from './datepicker';\nimport { McDatepickerIntl } from './datepicker-intl';\n\n\n/** Can be used to override the icon of a `mcDatepickerToggle`. */\n@Directive({\n    selector: '[mcDatepickerToggleIcon]'\n})\nexport class McDatepickerToggleIcon {\n}\n\n\n@Component({\n    selector: 'mc-datepicker-toggle',\n    templateUrl: 'datepicker-toggle.html',\n    styleUrls: ['datepicker-toggle.css'],\n    host: {\n        class: 'mc-datepicker-toggle',\n        // Always set the tabindex to -1 so that it doesn't overlap with any custom tabindex the\n        // consumer may have provided, while still being able to receive focus.\n        '[attr.tabindex]': '-1',\n        '[class.mc-datepicker-toggle_active]': 'datepicker && datepicker.opened',\n        '[class.mc-warn]': 'datepicker && datepicker.color === \"error\"',\n        '(focus)': 'button.focus()'\n    },\n    exportAs: 'mcDatepickerToggle',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McDatepickerToggle<D> implements AfterContentInit, OnChanges, OnDestroy {\n\n    /** Whether the toggle button is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled === undefined ? this.datepicker.disabled : !!this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    /** Datepicker instance that the button will toggle. */\n    @Input('for') datepicker: McDatepicker<D>;\n\n    /** Tabindex for the toggle. */\n    @Input() tabIndex: number | null;\n\n    /** Custom icon set by the consumer. */\n    @ContentChild(McDatepickerToggleIcon) customIcon: McDatepickerToggleIcon;\n\n    /** Underlying button element. */\n    @ViewChild('button') button: McButton;\n    private stateChanges = Subscription.EMPTY;\n\n    private _disabled: boolean;\n\n    constructor(\n        public intl: McDatepickerIntl,\n        private changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') defaultTabIndex: string\n    ) {\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.datepicker) {\n            this.watchStateChanges();\n        }\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.unsubscribe();\n    }\n\n    ngAfterContentInit() {\n        this.watchStateChanges();\n    }\n\n    open(event: Event): void {\n        if (this.datepicker && !this.disabled) {\n            this.datepicker.open();\n            event.stopPropagation();\n        }\n    }\n\n    private watchStateChanges() {\n        const datepickerDisabled = this.datepicker ? this.datepicker.disabledChange : observableOf();\n        const inputDisabled = this.datepicker && this.datepicker.datepickerInput ?\n            this.datepicker.datepickerInput.disabledChange : observableOf();\n        const datepickerToggled = this.datepicker ?\n            merge(this.datepicker.openedStream, this.datepicker.closedStream) :\n            observableOf();\n\n        this.stateChanges.unsubscribe();\n        this.stateChanges = merge(\n            this.intl.changes,\n            datepickerDisabled,\n            inputDisabled,\n            datepickerToggled\n        ).subscribe(() => this.changeDetectorRef.markForCheck());\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { PortalModule } from '@ptsecurity/cdk/portal';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCalendar, McCalendarHeader } from './calendar';\nimport { McCalendarBody } from './calendar-body';\nimport {\n    McDatepicker,\n    McDatepickerContent,\n    MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER\n} from './datepicker';\nimport { McDatepickerInput } from './datepicker-input';\nimport { McDatepickerIntl } from './datepicker-intl';\nimport { McDatepickerToggle, McDatepickerToggleIcon } from './datepicker-toggle';\nimport { McMonthView } from './month-view';\nimport { McMultiYearView } from './multi-year-view';\nimport { McYearView } from './year-view';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McButtonModule,\n        OverlayModule,\n        A11yModule,\n        PortalModule,\n        McButtonModule,\n        McIconModule\n    ],\n    exports: [\n        McCalendar,\n        McCalendarBody,\n        McDatepicker,\n        McDatepickerContent,\n        McDatepickerInput,\n        McDatepickerToggle,\n        McDatepickerToggleIcon,\n        McMonthView,\n        McYearView,\n        McMultiYearView,\n        McCalendarHeader\n    ],\n    declarations: [\n        McCalendar,\n        McCalendarBody,\n        McDatepicker,\n        McDatepickerContent,\n        McDatepickerInput,\n        McDatepickerToggle,\n        McDatepickerToggleIcon,\n        McMonthView,\n        McYearView,\n        McMultiYearView,\n        McCalendarHeader\n    ],\n    providers: [\n        McDatepickerIntl,\n        MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER\n    ],\n    entryComponents: [\n        McDatepickerContent,\n        McCalendarHeader\n    ]\n})\nexport class McDatepickerModule {\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\n\n@Component({\n    selector: 'mc-divider',\n    host: {\n        class: 'mc-divider',\n        role: 'separator',\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n        '[class.mc-divider-vertical]': 'vertical',\n        '[class.mc-divider-inset]': 'inset'\n    },\n    template: '',\n    styleUrls: ['divider.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false\n})\nexport class McDivider {\n    // Whether the divider is vertically aligned.\n    @Input()\n    get vertical(): boolean {\n        return this._vertical;\n    }\n\n    set vertical(value: boolean) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n\n    private _vertical: boolean = false;\n\n    // Whether the divider is an inset divider.\n    @Input()\n    get inset(): boolean {\n        return this._inset;\n    }\n\n    set inset(value: boolean) {\n        this._inset = coerceBooleanProperty(value);\n    }\n\n    private _inset: boolean = false;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McDivider } from './divider.component';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McDivider],\n    declarations: [McDivider]\n})\nexport class McDividerModule {\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    Directive,\n    TemplateRef,\n    ComponentFactoryResolver,\n    ApplicationRef,\n    Injector,\n    ViewContainerRef,\n    Inject,\n    OnDestroy\n} from '@angular/core';\nimport { TemplatePortal, DomPortalOutlet } from '@ptsecurity/cdk/portal';\nimport { Subject } from 'rxjs';\n\n\n/**\n * Dropdown content that will be rendered lazily once the dropdown is opened.\n */\n@Directive({\n    selector: 'ng-template[mcDropdownContent]'\n})\nexport class McDropdownContent implements OnDestroy {\n\n    /** Emits when the dropdown content has been attached. */\n    _attached = new Subject<void>();\n    private _portal: TemplatePortal;\n    private _outlet: DomPortalOutlet;\n\n    constructor(\n        private _template: TemplateRef<any>,\n        private _componentFactoryResolver: ComponentFactoryResolver,\n        private _appRef: ApplicationRef,\n        private _injector: Injector,\n        private _viewContainerRef: ViewContainerRef,\n        @Inject(DOCUMENT) private _document: any) {}\n\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context: any = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n\n        this.detach();\n\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'),\n                this._componentFactoryResolver, this._appRef, this._injector);\n        }\n\n        const element: HTMLElement = this._template.elementRef.nativeElement;\n\n        // Because we support opening the same dropdown from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode!.insertBefore(this._outlet.outletElement, element);\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\n","import { EventEmitter, TemplateRef, InjectionToken } from '@angular/core';\nimport { FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/**\n * Injection token used to provide the parent dropdown to dropdown-specific components.\n * @docs-private\n */\nexport const MC_DROPDOWN_PANEL = new InjectionToken<McDropdownPanel>('MC_DROPDOWN_PANEL');\n\n/**\n * Interface for a custom dropdown panel that can be used with `mcDropdownTriggerFor`.\n * @docs-private\n */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownPanel<T = any> {\n    xPosition: DropdownPositionX;\n    yPosition: DropdownPositionY;\n    overlapTrigger: boolean;\n    templateRef: TemplateRef<any>;\n    closed: EventEmitter<void | 'click' | 'keydown' | 'tab'>;\n    direction?: Direction;\n    lazyContent?: McDropdownContent;\n    backdropClass?: string;\n    hasBackdrop?: boolean;\n    focusFirstItem(origin?: FocusOrigin): void;\n    resetActiveItem(): void;\n    setPositionClasses?(x: DropdownPositionX, y: DropdownPositionY): void;\n    addItem?(item: T): void;\n    removeItem?(item: T): void;\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    Inject,\n    Optional\n} from '@angular/core';\nimport { IFocusableOption, FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\n\n\n// Boilerplate for applying mixins to McDropdownItem.\n/** @docs-private */\nexport class McDropdownItemBase {}\nexport const _McDropdownItemMixinBase: CanDisableCtor & typeof McDropdownItemBase =\n    mixinDisabled(McDropdownItemBase);\n\n/**\n * This directive is intended to be used inside an mc-dropdown tag.\n * It exists mostly to set the role attribute.\n */\n@Component({\n    selector: 'mc-dropdown-item, [mc-dropdown-item]',\n    exportAs: 'mcDropdownItem',\n    inputs: ['disabled'],\n    host: {\n        role: 'dropdown-item',\n        class: 'mc-dropdown__item',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_checkDisabled($event)'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    template: `<ng-content></ng-content>`\n})\nexport class McDropdownItem extends _McDropdownItemMixinBase\n    implements IFocusableOption, CanDisable, OnDestroy {\n\n    private _document: Document;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        @Inject(DOCUMENT) document: any,\n        private _focusMonitor: FocusMonitor,\n        @Inject(MC_DROPDOWN_PANEL) @Optional() private _parentDropdownPanel?: McDropdownPanel<McDropdownItem>) {\n        super();\n\n        if (_focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for dropdown items only when the focus was not caused by a\n            // mouse or touch interaction.\n            _focusMonitor.monitor(this._elementRef.nativeElement, false);\n        }\n\n        if (_parentDropdownPanel && _parentDropdownPanel.addItem) {\n            _parentDropdownPanel.addItem(this);\n        }\n\n        this._document = document;\n    }\n\n    /** Focuses the dropdown item. */\n    focus(origin: FocusOrigin = 'program'): void {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin);\n        } else {\n            this._getHostElement().focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n\n        if (this._parentDropdownPanel && this._parentDropdownPanel.removeItem) {\n            this._parentDropdownPanel.removeItem(this);\n        }\n    }\n\n    /** Used to set the `tabindex`. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Returns the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._elementRef.nativeElement;\n    }\n\n    /** Prevents the default element actions if it is disabled. */\n    _checkDisabled(event: Event): void {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        const element: HTMLElement = this._elementRef.nativeElement;\n        // tslint:disable-next-line:no-magic-numbers\n        const textNodeType = this._document ? this._document.TEXT_NODE : 3;\n        let output = '';\n\n        if (element.childNodes) {\n            const length = element.childNodes.length;\n\n            // Go through all the top-level text nodes and extract their text.\n            // We skip anything that's not a text node to prevent the text from\n            // being thrown off by something like an icon.\n            for (let i = 0; i < length; i++) {\n                if (element.childNodes[i].nodeType === textNodeType) {\n                    output += element.childNodes[i].textContent;\n                }\n            }\n        }\n\n        return output.trim();\n    }\n}\n","import {\n    trigger,\n    state,\n    style,\n    animate,\n    transition,\n    query,\n    group,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\n/**\n * Animations used by the mc-dropdown component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nexport const mcDropdownAnimations: {\n    readonly transformDropdown: AnimationTriggerMetadata;\n    readonly fadeInItems: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation controls the dropdown panel's entry and exit from the page.\n     *\n     * When the dropdown panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the dropdown panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformDropdown: trigger('transformDropdown', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        })),\n        transition('void => enter', group([\n            query('.mc-dropdown__content', animate('50ms linear', style({opacity: 1}))),\n            animate('50ms cubic-bezier(0, 0, 0.2, 1)', style({transform: 'scale(1)'}))\n        ])),\n        transition('* => void', animate('50ms 25ms linear', style({opacity: 0})))\n    ]),\n\n\n    /**\n     * This animation fades in the background color and content of the dropdown panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // now. Remove next time we do breaking changes.\n        state('showing', style({opacity: 1})),\n        transition('void => *', [\n            style({opacity: 0}),\n            animate('200ms 60ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\nexport const fadeInItems = mcDropdownAnimations.fadeInItems;\n\nexport const transformDropdown = mcDropdownAnimations.transformDropdown;\n","import {\n    Attribute,\n    Directive, DoCheck, ElementRef, Inject, Input, OnChanges,\n    OnDestroy, Optional, Self\n} from '@angular/core';\nimport {\n    FormGroupDirective,\n    NgControl,\n    NgForm, NgModel\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    END, C, V, X, A, DELETE, BACKSPACE, TAB, ENTER,\n    ESCAPE, ZERO, NINE, NUMPAD_ZERO, NUMPAD_NINE, NUMPAD_MINUS, DASH,\n    FF_MINUS, LEFT_ARROW, RIGHT_ARROW, HOME, UP_ARROW, DOWN_ARROW, F1, F12\n} from '@ptsecurity/cdk/keycodes';\nimport { getSupportedInputTypes, Platform } from '@ptsecurity/cdk/platform';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl, McFormFieldNumberControl } from '@ptsecurity/mosaic/form-field';\nimport { Subject } from 'rxjs';\n\nimport { getMcInputUnsupportedTypeError } from './input-errors';\nimport { MC_INPUT_VALUE_ACCESSOR } from './input-value-accessor';\nimport { stepDown, stepUp } from './stepperUtils';\n\n\nconst MC_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n\nexport const BIG_STEP = 10;\nexport const SMALL_STEP = 1;\n\nlet nextUniqueId = 0;\n\nexport class McInputBase {\n    constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n                public _parentForm: NgForm,\n                public _parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\nexport const _McInputMixinBase: CanUpdateErrorStateCtor & typeof McInputBase = mixinErrorState(McInputBase);\n\n\n@Directive({\n    selector: `input[mcInput][type=\"number\"]`,\n    exportAs: 'mcNumericalInput',\n    providers: [NgModel, { provide: McFormFieldNumberControl, useExisting: McNumberInput }],\n    host: {\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McNumberInput implements McFormFieldNumberControl<any> {\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    bigStep: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    step: number;\n\n    @Input()\n    min: number;\n\n    @Input()\n    max: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    value: any;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    private readonly _host: HTMLInputElement;\n\n    constructor(\n        private _platform: Platform ,\n        private _elementRef: ElementRef,\n        private _model: NgModel,\n        @Attribute('step') step: string,\n        @Attribute('big-step') bigStep: string,\n        @Attribute('min') min: string,\n        @Attribute('max') max: string\n    ) {\n        this.step = this.isDigit(step) ? parseFloat(step) : SMALL_STEP;\n        this.bigStep = this.isDigit(bigStep) ? parseFloat(bigStep) : BIG_STEP;\n        this.min = this.isDigit(min) ? parseFloat(min) : -Infinity;\n        this.max = this.isDigit(max) ? parseFloat(max) : Infinity;\n\n        this._host = this._elementRef.nativeElement;\n\n        const self = this;\n\n        if ('valueAsNumber' in this._host) {\n            Object.defineProperty(Object.getPrototypeOf(this._host), 'valueAsNumber', {\n                // tslint:disable-next-line:no-reserved-keywords\n                get() {\n                    const res = parseFloat(self.normalizeSplitter(this.value));\n\n                    return isNaN(res) ? null : res;\n                }\n            });\n        }\n    }\n\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const keyCode = event.keyCode;\n\n        const isCtrlA = (e) => e.keyCode === A && (e.ctrlKey || e.metaKey);\n        const isCtrlC = (e) => e.keyCode === C && (e.ctrlKey || e.metaKey);\n        const isCtrlV = (e) => e.keyCode === V && (e.ctrlKey || e.metaKey);\n        const isCtrlX = (e) => e.keyCode === X && (e.ctrlKey || e.metaKey);\n\n        const isFKey = (e) => e.keyCode >= F1 && e.keyCode <= F12;\n\n        const isNumber = (e) => (e.keyCode >= ZERO && e.keyCode <= NINE) ||\n            (e.keyCode >= NUMPAD_ZERO && e.keyCode <= NUMPAD_NINE);\n\n        const minuses = [NUMPAD_MINUS, DASH, FF_MINUS];\n        const serviceKeys = [DELETE, BACKSPACE, TAB, ESCAPE, ENTER];\n        const arrows = [LEFT_ARROW, RIGHT_ARROW];\n        const allowedKeys =  [HOME, END].concat(arrows).concat(serviceKeys).concat(minuses);\n\n        const isIEPeriod = (e) => e.key === '.' || e.key === 'Decimal';\n        const isNotIEPeriod = (e) => e.key === '.' || e.key === ',';\n\n        // Decimal is for IE\n        const isPeriod = (e) => this._platform.EDGE || this._platform.TRIDENT\n            ? isIEPeriod(e)\n            : isNotIEPeriod(e);\n\n        if (allowedKeys.indexOf(keyCode) !== -1 ||\n            isCtrlA(event) ||\n            isCtrlC(event) ||\n            isCtrlV(event) ||\n            isCtrlX(event) ||\n            isFKey(event) ||\n            isPeriod(event)\n        ) {\n            // let it happen, don't do anything\n            return;\n        }\n        // Ensure that it is not a number and stop the keypress\n        if (event.shiftKey || !isNumber(event)) {\n            event.preventDefault();\n\n            // process steps\n            const step = event.shiftKey ? this.bigStep : this.step;\n\n            if (keyCode === UP_ARROW) {\n                this.stepUp(step);\n            }\n\n            if (keyCode === DOWN_ARROW) {\n                this.stepDown(step);\n            }\n        }\n    }\n\n    onPaste(event) {\n        let value = event.clipboardData.getData('text');\n        value = this.normalizeSplitter(value);\n\n        if (!this.isDigit(value)) {\n            event.preventDefault();\n        }\n    }\n\n    stepUp(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepUp(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    stepDown(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepDown(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    private normalizeSplitter(value: string): string {\n        return value ? value.replace(/,/g, '.') : value;\n    }\n\n    private isDigit(value: string): boolean {\n        return this.isFloat(value) || this.isInt(value);\n    }\n\n    private isFloat(value: string): boolean {\n        return /^-?\\d+\\.\\d+$/.test(value);\n    }\n\n    private isInt(value: string): boolean {\n        return /^-?\\d+$/.test(value);\n    }\n}\n\n@Directive({\n    selector: `input[mcInput]`,\n    exportAs: 'mcInput',\n    host: {\n        class: 'mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(input)': '_onInput()'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McInput }]\n})\nexport class McInput extends _McInputMixinBase implements McFormFieldControl<any>, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-input';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    // tslint:disable no-reserved-keywords\n    /** Input type of the element. */\n    @Input()\n    get type(): string {\n        return this._type;\n    }\n\n    set type(value: string) {\n        this._type = value || 'text';\n        this._validateType();\n\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    // tslint:enable no-reserved-keywords\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this._inputValueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected _uid = `mc-input-${nextUniqueId++}`;\n    protected _previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n    protected _type = 'text';\n    protected _neverEmptyInputTypes = [\n        'date',\n        'datetime',\n        'datetime-local',\n        'month',\n        'time',\n        'week'\n    ].filter((t) => getSupportedInputTypes().has(t));\n\n    private _inputValueAccessor: { value: any };\n\n    constructor(protected _elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || this._elementRef.nativeElement;\n\n        this._previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n\n    /** Focuses the input. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the input changes. */\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    protected _dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Make sure the input is a supported type. */\n    protected _validateType() {\n        if (MC_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMcInputUnsupportedTypeError(this._type);\n        }\n    }\n\n    /** Checks whether the input type is one of the types that are never empty. */\n    protected _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    protected _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this._elementRef.nativeElement as HTMLInputElement).validity;\n\n        return validity && validity.badInput;\n    }\n}\n\n@Directive({\n    selector: 'input[mcInputMonospace]',\n    exportAs: 'McInputMonospace',\n    host: { class: 'mc-input_monospace' }\n})\nexport class McInputMono {\n}\n","import { Directive, forwardRef, Input, OnChanges, Provider, SimpleChanges } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, ValidatorFn, Validators } from '@angular/forms';\n\n\nexport const MIN_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MinValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[min][formControlName],[min][formControl],[min][ngModel]',\n    providers: [MIN_VALIDATOR],\n    host: {'[attr.min]': 'min ? min : null'}\n})\nexport class MinValidator implements Validator, OnChanges {\n\n    @Input() min: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('min' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.min(parseInt(this.min, 10)); }\n}\n\n\nexport const MAX_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MaxValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[max][formControlName],[max][formControl],[max][ngModel]',\n    providers: [MAX_VALIDATOR],\n    host: {\n        '[attr.max]': 'max ? max : null'\n    }\n})\nexport class MaxValidator implements Validator,\n    OnChanges {\n\n    @Input() max: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('max' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.max(parseInt(this.max, 10)); }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McInput, McInputMono, McNumberInput } from './input';\nimport { MaxValidator, MinValidator } from './input-number-validators';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator],\n    declarations: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator ]\n})\nexport class McInputModule {\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n\n/** Datepicker data that requires internationalization. */\n@Injectable({ providedIn: 'root' })\nexport class McDatepickerIntl {\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     */\n    readonly changes: Subject<void> = new Subject<void>();\n\n    /** A label for the calendar popup (used by screen readers). */\n    calendarLabel: string = 'Calendar';\n\n    /** A label for the button used to open the calendar popup (used by screen readers). */\n    openCalendarLabel: string = 'Open calendar';\n\n    /** A label for the previous month button (used by screen readers). */\n    prevMonthLabel: string = 'Previous month';\n\n    /** A label for the next month button (used by screen readers). */\n    nextMonthLabel: string = 'Next month';\n\n    /** A label for the previous year button (used by screen readers). */\n    prevYearLabel: string = 'Previous year';\n\n    /** A label for the next year button (used by screen readers). */\n    nextYearLabel: string = 'Next year';\n\n    /** A label for the previous multi-year button (used by screen readers). */\n    prevMultiYearLabel: string = 'Previous 20 years';\n\n    /** A label for the next multi-year button (used by screen readers). */\n    nextMultiYearLabel: string = 'Next 20 years';\n\n    /** A label for the 'switch to month view' button (used by screen readers). */\n    switchToMonthViewLabel: string = 'Choose date';\n\n    /** A label for the 'switch to year view' button (used by screen readers). */\n    switchToMultiYearViewLabel: string = 'Choose month and year';\n}\n","// tslint:disable:no-magic-numbers\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    Output,\n    ViewEncapsulation,\n    NgZone,\n    OnChanges,\n    SimpleChanges\n} from '@angular/core';\nimport { take } from 'rxjs/operators';\n\n\n/**\n * Extra CSS classes that can be associated with a calendar cell.\n */\nexport type McCalendarCellCssClasses = string | string[] | Set<string> | { [key: string]: any };\n\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * @docs-private\n */\nexport class McCalendarCell {\n    constructor(\n        public value: number,\n        public displayValue: string,\n        public ariaLabel: string,\n        public enabled: boolean,\n        public cssClasses?: McCalendarCellCssClasses\n    ) {\n    }\n}\n\n\n/**\n * An internal component used to display calendar data in a table.\n * @docs-private\n */\n@Component({\n    selector: '[mc-calendar-body]',\n    templateUrl: 'calendar-body.html',\n    styleUrls: ['calendar-body.css'],\n    host: {\n        class: 'mc-calendar__body',\n        role: 'grid',\n        'aria-readonly': 'true'\n    },\n    exportAs: 'mcCalendarBody',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCalendarBody implements OnChanges {\n    /** The label for the table. (e.g. \"Jan 2017\"). */\n    @Input() label: string;\n\n    /** The cells to display in the table. */\n    @Input() rows: McCalendarCell[][];\n\n    /** The value in the table that corresponds to today. */\n    @Input() todayValue: number;\n\n    /** The value in the table that is currently selected. */\n    @Input() selectedValue: number;\n\n    /** The minimum number of free cells needed to fit the label in the first row. */\n    @Input() labelMinRequiredCells: number;\n\n    /** The number of columns in the table. */\n    @Input() numCols = 7;\n\n    /** The cell number of the active cell in the table. */\n    @Input() activeCell = 0;\n\n    /**\n     * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n     * maintained even as the table resizes.\n     */\n    @Input() cellAspectRatio = 1;\n\n    /** Emits when a new value is selected. */\n    @Output() readonly selectedValueChange: EventEmitter<number> = new EventEmitter<number>();\n\n    /** The number of blank cells to put at the beginning for the first row. */\n    firstRowOffset: number;\n\n    /** Padding for the individual date cells. */\n    cellPadding: string;\n\n    /** Width of an individual cell. */\n    cellWidth: string;\n\n    constructor(private elementRef: ElementRef<HTMLElement>, private ngZone: NgZone) {\n    }\n\n    cellClicked(cell: McCalendarCell): void {\n        if (cell.enabled) {\n            this.selectedValueChange.emit(cell.value);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const columnChanges = changes.numCols;\n        // tslint:disable-next-line:no-this-assignment\n        const { rows, numCols } = this;\n\n        if (changes.rows || columnChanges) {\n            this.firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n        }\n\n        if (changes.cellAspectRatio || columnChanges || !this.cellPadding) {\n            this.cellPadding = `${this.cellAspectRatio * 50 / numCols}%`;\n        }\n\n        if (columnChanges || !this.cellWidth) {\n            this.cellWidth = `${100 / numCols}%`;\n        }\n    }\n\n    isActiveCell(rowIndex: number, colIndex: number): boolean {\n        let cellNumber = rowIndex * this.numCols + colIndex;\n\n        // Account for the fact that the first row may not have as many cells.\n        if (rowIndex) {\n            cellNumber -= this.firstRowOffset;\n        }\n\n        return cellNumber === this.activeCell;\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.ngZone.runOutsideAngular(() => {\n            this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n                const activeCell: HTMLElement | null =\n                    this.elementRef.nativeElement.querySelector('.mc-calendar__body_active');\n\n                if (activeCell) {\n                    activeCell.focus();\n                }\n            });\n        });\n    }\n}\n","// tslint:disable:no-magic-numbers\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Optional,\n    Output,\n    ViewEncapsulation,\n    ViewChild\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    UP_ARROW,\n    SPACE\n} from '@ptsecurity/cdk/keycodes';\n\nimport { McCalendarBody, McCalendarCell, McCalendarCellCssClasses } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\nconst DAYS_PER_WEEK = 7;\n\n\n/**\n * An internal component used to display a single month in the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-month-view',\n    templateUrl: 'month-view.html',\n    exportAs: 'mcMonthView',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McMonthView<D> implements AfterContentInit {\n    /**\n     * The date to display in this month view (everything other than the month and year is ignored).\n     */\n    @Input()\n    get activeDate(): D {\n        return this._activeDate;\n    }\n\n    set activeDate(value: D) {\n        const oldActiveDate = this._activeDate;\n        const validDate =\n            this.getValidDateOrNull(this.dateAdapter.deserialize(value)) || this.dateAdapter.today();\n        this._activeDate = this.dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n        if (!this.hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n            this.init();\n        }\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.selectedDate = this.getDateInCurrentMonth(this._selected);\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** Function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Function that can be used to add custom CSS classes to dates. */\n    @Input() dateClass: (date: D) => McCalendarCellCssClasses;\n\n    /** Emits when a new date is selected. */\n    @Output() readonly selectedChange: EventEmitter<D | null> = new EventEmitter<D | null>();\n\n    /** Emits when any date is selected. */\n    @Output() readonly userSelection: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emits when any date is activated. */\n    @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** The body of calendar table */\n    @ViewChild(McCalendarBody) mcCalendarBody: McCalendarBody;\n\n    /** The label for this month (e.g. \"January 2017\"). */\n    monthLabel: string;\n\n    /** Grid of calendar cells representing the dates of the month. */\n    weeks: McCalendarCell[][];\n\n    /** The number of blank cells in the first row before the 1st of the month. */\n    firstWeekOffset: number;\n\n    /**\n     * The date of the month that the currently selected Date falls on.\n     * Null if the currently selected Date is in another month.\n     */\n    selectedDate: number | null;\n\n    /** The date of the month that today falls on. Null if today is in another month. */\n    todayDate: number | null;\n\n    /** The names of the weekdays. */\n    weekdays: { long: string; narrow: string }[];\n    private _activeDate: D;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() private dir?: Directionality\n    ) {\n\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        const firstDayOfWeek = this.dateAdapter.getFirstDayOfWeek();\n        const narrowWeekdays = this.dateAdapter.getDayOfWeekNames('narrow');\n        const longWeekdays = this.dateAdapter.getDayOfWeekNames('long');\n\n        // Rotate the labels for days of the week based on the configured first day of the week.\n        const weekdays = longWeekdays.map((long, i) => {\n            return { long, narrow: narrowWeekdays[i] };\n        });\n        this.weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n\n        this._activeDate = this.dateAdapter.today();\n    }\n\n    ngAfterContentInit() {\n        this.init();\n    }\n\n    /** Handles when a new date is selected. */\n    dateSelected(date: number) {\n        if (this.selectedDate !== date) {\n            const selectedYear = this.dateAdapter.getYear(this.activeDate);\n            const selectedMonth = this.dateAdapter.getMonth(this.activeDate);\n            const selectedDate = this.dateAdapter.createDate(selectedYear, selectedMonth, date);\n\n            this.selectedChange.emit(selectedDate);\n        }\n\n        this.userSelection.emit();\n    }\n\n    /** Handles keydown events on the calendar body when calendar is in month view. */\n    handleCalendarBodyKeydown(event: KeyboardEvent): void {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n        const oldActiveDate = this._activeDate;\n        const isRtl = this.isRtl();\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, -7);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, 7);\n                break;\n            case HOME:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate,\n                    1 - this.dateAdapter.getDate(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate,\n                    (this.dateAdapter.getNumDaysInMonth(this._activeDate) -\n                        this.dateAdapter.getDate(this._activeDate)));\n                break;\n            case PAGE_UP:\n                this.activeDate = event.altKey ?\n                    this.dateAdapter.addCalendarYears(this._activeDate, -1) :\n                    this.dateAdapter.addCalendarMonths(this._activeDate, -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = event.altKey ?\n                    this.dateAdapter.addCalendarYears(this._activeDate, 1) :\n                    this.dateAdapter.addCalendarMonths(this._activeDate, 1);\n                break;\n            case ENTER:\n            case SPACE:\n                if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n                    this.dateSelected(this.dateAdapter.getDate(this._activeDate));\n                    this.userSelection.emit();\n                    // Prevent unexpected default actions such as form submission.\n                    event.preventDefault();\n                }\n\n                return;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n\n        if (this.dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n\n        this.focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n\n    /** Initializes this month view. */\n    init() {\n        this.selectedDate = this.getDateInCurrentMonth(this.selected);\n        this.todayDate = this.getDateInCurrentMonth(this.dateAdapter.today());\n        this.monthLabel =\n            this.dateAdapter.getMonthNames('short')[this.dateAdapter.getMonth(this.activeDate)];\n\n        this.monthLabel = this.monthLabel[0].toLocaleUpperCase() + this.monthLabel.substr(1);\n\n        const firstOfMonth = this.dateAdapter.createDate(this.dateAdapter.getYear(this.activeDate),\n            this.dateAdapter.getMonth(this.activeDate), 1);\n        this.firstWeekOffset =\n            (DAYS_PER_WEEK + this.dateAdapter.getDayOfWeek(firstOfMonth) -\n                this.dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n\n        this.createWeekCells();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.mcCalendarBody.focusActiveCell();\n    }\n\n    /** Creates McCalendarCells for the dates in this month. */\n    private createWeekCells() {\n        const daysInMonth = this.dateAdapter.getNumDaysInMonth(this.activeDate);\n        const dateNames = this.dateAdapter.getDateNames();\n\n        this.weeks = [[]];\n\n        for (let i = 0, cell = this.firstWeekOffset; i < daysInMonth; i++, cell++) {\n            if (cell === DAYS_PER_WEEK) {\n                this.weeks.push([]);\n                cell = 0;\n            }\n            const date = this.dateAdapter.createDate(\n                this.dateAdapter.getYear(this.activeDate),\n                this.dateAdapter.getMonth(this.activeDate), i + 1);\n            const enabled = this.shouldEnableDate(date);\n            const ariaLabel = this.dateAdapter.format(date, this.dateFormats.display.dateA11yLabel);\n            const cellClasses = this.dateClass ? this.dateClass(date) : undefined;\n\n            this.weeks[this.weeks.length - 1]\n                .push(new McCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses));\n        }\n    }\n\n    /** Date filter for the month */\n    private shouldEnableDate(date: D): boolean {\n        return !!date &&\n            (!this.dateFilter || this.dateFilter(date)) &&\n            (!this.minDate || this.dateAdapter.compareDate(date, this.minDate) >= 0) &&\n            (!this.maxDate || this.dateAdapter.compareDate(date, this.maxDate) <= 0);\n    }\n\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     */\n    private getDateInCurrentMonth(date: D | null): number | null {\n        return date && this.hasSameMonthAndYear(date, this.activeDate) ?\n            this.dateAdapter.getDate(date) : null;\n    }\n\n    /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\n    private hasSameMonthAndYear(d1: D | null, d2: D | null): boolean {\n        return !!(d1 && d2 && this.dateAdapter.getMonth(d1) === this.dateAdapter.getMonth(d2) &&\n            this.dateAdapter.getYear(d1) === this.dateAdapter.getYear(d2));\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Determines whether the user has the RTL layout direction. */\n    private isRtl() {\n        return this.dir && this.dir.value === 'rtl';\n    }\n}\n","// tslint:disable:no-magic-numbers\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { DateAdapter } from '@ptsecurity/cdk/datetime';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    UP_ARROW,\n    SPACE\n} from '@ptsecurity/cdk/keycodes';\n\nimport { McCalendarBody, McCalendarCell } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\nexport const yearsPerPage = 24;\n\nexport const yearsPerRow = 4;\n\n\n/**\n * An internal component used to display a year selector in the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-multi-year-view',\n    templateUrl: 'multi-year-view.html',\n    exportAs: 'mcMultiYearView',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McMultiYearView<D> implements AfterContentInit {\n    /** The date to display in this multi-year view (everything other than the year is ignored). */\n    @Input()\n    get activeDate(): D {\n        return this._activeDate;\n    }\n\n    set activeDate(value: D) {\n        const oldActiveDate = this._activeDate;\n        const validDate =\n            this.getValidDateOrNull(this.dateAdapter.deserialize(value)) || this.dateAdapter.today();\n        this._activeDate = this.dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n        if (Math.floor(this.dateAdapter.getYear(oldActiveDate) / yearsPerPage) !==\n            Math.floor(this.dateAdapter.getYear(this._activeDate) / yearsPerPage)) {\n            this.init();\n        }\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.selectedYear = this._selected && this.dateAdapter.getYear(this._selected);\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** A function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Emits when a new year is selected. */\n    @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits the selected year. This doesn't imply a change on the selected date */\n    @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits when any date is activated. */\n    @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** The body of calendar table */\n    @ViewChild(McCalendarBody) mcCalendarBody: McCalendarBody;\n\n    /** Grid of calendar cells representing the currently displayed years. */\n    years: McCalendarCell[][];\n\n    /** The year that today falls on. */\n    todayYear: number;\n\n    /** The year of the selected date. Null if the selected date is null. */\n    selectedYear: number | null;\n    private _activeDate: D;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() private dir?: Directionality\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        this._activeDate = this.dateAdapter.today();\n    }\n\n    ngAfterContentInit() {\n        this.init();\n    }\n\n    /** Initializes this multi-year view. */\n    init() {\n        this.todayYear = this.dateAdapter.getYear(this.dateAdapter.today());\n        const activeYear = this.dateAdapter.getYear(this._activeDate);\n        const activeOffset = activeYear % yearsPerPage;\n        this.years = [];\n        for (let i = 0, row: number[] = []; i < yearsPerPage; i++) {\n            row.push(activeYear - activeOffset + i);\n            if (row.length === yearsPerRow) {\n                this.years.push(row.map((year) => this.createCellForYear(year)));\n                row = [];\n            }\n        }\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** Handles when a new year is selected. */\n    onYearSelected(year: number) {\n        this.yearSelected.emit(this.dateAdapter.createDate(year, 0, 1));\n        const month = this.dateAdapter.getMonth(this.activeDate);\n        const daysInMonth =\n            this.dateAdapter.getNumDaysInMonth(this.dateAdapter.createDate(year, month, 1));\n        this.selectedChange.emit(this.dateAdapter.createDate(year, month,\n            Math.min(this.dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n\n    /** Handles keydown events on the calendar body when calendar is in multi-year view. */\n    handleCalendarBodyKeydown(event: KeyboardEvent): void {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n        const oldActiveDate = this._activeDate;\n        const isRtl = this.isRtl();\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n                break;\n            case HOME:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate,\n                    -this.dateAdapter.getYear(this._activeDate) % yearsPerPage);\n                break;\n            case END:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate,\n                    yearsPerPage - this.dateAdapter.getYear(this._activeDate) % yearsPerPage - 1);\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(\n                        this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(\n                        this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n                break;\n            case ENTER:\n            case SPACE:\n                this.onYearSelected(this.dateAdapter.getYear(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n\n        if (this.dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n\n        this.focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n\n    getActiveCell(): number {\n        return this.dateAdapter.getYear(this.activeDate) % yearsPerPage;\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.mcCalendarBody.focusActiveCell();\n    }\n\n    /** Creates an McCalendarCell for the given year. */\n    private createCellForYear(year: number) {\n        const yearName = this.dateAdapter.getYearName(this.dateAdapter.createDate(year, 0, 1));\n\n        return new McCalendarCell(year, yearName, yearName, this.shouldEnableYear(year));\n    }\n\n    /** Whether the given year is enabled. */\n    private shouldEnableYear(year: number) {\n        // disable if the year is greater than maxDate lower than minDate\n        if (year === undefined || year === null ||\n            (this.maxDate && year > this.dateAdapter.getYear(this.maxDate)) ||\n            (this.minDate && year < this.dateAdapter.getYear(this.minDate))) {\n            return false;\n        }\n\n        // enable if it reaches here and there's no filter defined\n        if (!this.dateFilter) {\n            return true;\n        }\n\n        const firstOfYear = this.dateAdapter.createDate(year, 0, 1);\n\n        // If any date in the year is enabled count the year as enabled.\n        for (let date = firstOfYear; this.dateAdapter.getYear(date) === year;\n             date = this.dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Determines whether the user has the RTL layout direction. */\n    private isRtl() {\n        return this.dir && this.dir.value === 'rtl';\n    }\n}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    UP_ARROW,\n    SPACE\n} from '@ptsecurity/cdk/keycodes';\n\nimport { McCalendarBody, McCalendarCell } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\n/**\n * An internal component used to display a single year in the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-year-view',\n    templateUrl: 'year-view.html',\n    exportAs: 'mcYearView',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McYearView<D> implements AfterContentInit {\n    /** The date to display in this year view (everything other than the year is ignored). */\n    @Input()\n    get activeDate(): D {\n        return this._activeDate;\n    }\n\n    set activeDate(value: D) {\n        const oldActiveDate = this._activeDate;\n        const validDate =\n            this.getValidDateOrNull(this.dateAdapter.deserialize(value)) || this.dateAdapter.today();\n        this._activeDate = this.dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n        if (this.dateAdapter.getYear(oldActiveDate) !== this.dateAdapter.getYear(this._activeDate)) {\n            this.init();\n        }\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.selectedMonth = this.getMonthInCurrentYear(this._selected);\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** A function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Emits when a new month is selected. */\n    @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits the selected month. This doesn't imply a change on the selected date */\n    @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits when any date is activated. */\n    @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** The body of calendar table */\n    @ViewChild(McCalendarBody) mcCalendarBody: McCalendarBody;\n\n    /** Grid of calendar cells representing the months of the year. */\n    months: McCalendarCell[][];\n\n    /** The label for this year (e.g. \"2017\"). */\n    yearLabel: string;\n\n    /** The month in this year that today falls on. Null if today is in a different year. */\n    todayMonth: number | null;\n\n    /**\n     * The month in this year that the selected Date falls on.\n     * Null if the selected Date is in a different year.\n     */\n    selectedMonth: number | null;\n    private _activeDate: D;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() private dir?: Directionality\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        this._activeDate = this.dateAdapter.today();\n    }\n\n    ngAfterContentInit() {\n        this.init();\n    }\n\n    /** Handles when a new month is selected. */\n    onMonthSelected(month: number) {\n        const normalizedDate =\n            this.dateAdapter.createDate(this.dateAdapter.getYear(this.activeDate), month, 1);\n\n        this.monthSelected.emit(normalizedDate);\n\n        const daysInMonth = this.dateAdapter.getNumDaysInMonth(normalizedDate);\n\n        this.selectedChange.emit(this.dateAdapter.createDate(\n            this.dateAdapter.getYear(this.activeDate), month,\n            Math.min(this.dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n\n    /** Handles keydown events on the calendar body when calendar is in year view. */\n    handleCalendarBodyKeydown(event: KeyboardEvent): void {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n        const oldActiveDate = this._activeDate;\n        const isRtl = this.isRtl();\n\n        const VERTICAL_SHIFT = 4;\n        const PAGE_SHIFT = 10;\n        const MAX_MONTH_INDEX = 11;\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, -VERTICAL_SHIFT);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, VERTICAL_SHIFT);\n                break;\n            case HOME:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate,\n                    -this.dateAdapter.getMonth(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate,\n                    MAX_MONTH_INDEX - this.dateAdapter.getMonth(this._activeDate));\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -PAGE_SHIFT : -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(this._activeDate, event.altKey ? PAGE_SHIFT : 1);\n                break;\n            case ENTER:\n            case SPACE:\n                this.onMonthSelected(this.dateAdapter.getMonth(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n\n        if (this.dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n\n        this.focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n\n    /** Initializes this year view. */\n    init() {\n        this.selectedMonth = this.getMonthInCurrentYear(this.selected);\n        this.todayMonth = this.getMonthInCurrentYear(this.dateAdapter.today());\n        this.yearLabel = this.dateAdapter.getYearName(this.activeDate);\n\n        const monthNames = this.dateAdapter.getMonthNames('short');\n\n        // First row of months only contains 5 elements so we can fit the year label on the same row.\n        // tslint:disable-next-line:no-magic-numbers\n        this.months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map((row) => row.map(\n            (month) => this.createCellForMonth(month, monthNames[month])));\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.mcCalendarBody.focusActiveCell();\n    }\n\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     */\n    private getMonthInCurrentYear(date: D | null) {\n        return date && this.dateAdapter.getYear(date) === this.dateAdapter.getYear(this.activeDate) ?\n            this.dateAdapter.getMonth(date) : null;\n    }\n\n    /** Creates an McCalendarCell for the given month. */\n    private createCellForMonth(month: number, monthName: string) {\n        const ariaLabel = this.dateAdapter.format(\n            this.dateAdapter.createDate(this.dateAdapter.getYear(this.activeDate), month, 1),\n            this.dateFormats.display.monthYearA11yLabel);\n\n        const newMonthName = monthName[0].toLocaleUpperCase() + monthName.substr(1);\n\n        return new McCalendarCell(\n            month, newMonthName, ariaLabel, this.shouldEnableMonth(month));\n    }\n\n    /** Whether the given month is enabled. */\n    private shouldEnableMonth(month: number) {\n\n        const activeYear = this.dateAdapter.getYear(this.activeDate);\n\n        if (month === undefined || month === null ||\n            this.isYearAndMonthAfterMaxDate(activeYear, month) ||\n            this.isYearAndMonthBeforeMinDate(activeYear, month)) {\n            return false;\n        }\n\n        if (!this.dateFilter) {\n            return true;\n        }\n\n        const firstOfMonth = this.dateAdapter.createDate(activeYear, month, 1);\n\n        // If any date in the month is enabled count the month as enabled.\n        for (let date = firstOfMonth; this.dateAdapter.getMonth(date) === month;\n             date = this.dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Tests whether the combination month/year is after this.maxDate, considering\n     * just the month and year of this.maxDate\n     */\n    private isYearAndMonthAfterMaxDate(year: number, month: number) {\n        if (this.maxDate) {\n            const maxYear = this.dateAdapter.getYear(this.maxDate);\n            const maxMonth = this.dateAdapter.getMonth(this.maxDate);\n\n            return year > maxYear || (year === maxYear && month > maxMonth);\n        }\n\n        return false;\n    }\n\n    /**\n     * Tests whether the combination month/year is before this.minDate, considering\n     * just the month and year of this.minDate\n     */\n    private isYearAndMonthBeforeMinDate(year: number, month: number) {\n        if (this.minDate) {\n            const minYear = this.dateAdapter.getYear(this.minDate);\n            const minMonth = this.dateAdapter.getMonth(this.minDate);\n\n            return year < minYear || (year === minYear && month < minMonth);\n        }\n\n        return false;\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Determines whether the user has the RTL layout direction. */\n    private isRtl() {\n        return this.dir && this.dir.value === 'rtl';\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    OnDestroy,\n    QueryList,\n    ViewEncapsulation,\n    ContentChildren\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\n\nimport { mixinColor, mixinDisabled, CanColor, CanDisable, CanDisableCtor, CanColorCtor } from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\n@Directive({\n    selector: 'button[mc-button], a[mc-button]',\n    host: { class: 'mc-button' }\n})\nexport class McButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-icon-button], a[mc-icon-button]',\n    queries: {\n        contentChildren: new ContentChildren(McIcon)\n    },\n    host: { class: 'mc-icon-button' }\n})\nexport class McIconButtonCSSStyler {\n    nativeElement: Element;\n\n    contentChildren: QueryList<McIcon>;\n\n    constructor(elementRef: ElementRef) {\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const twoIcons = 2;\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n            const COMMENT_NODE = 8;\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling && iconElement.nextSibling.nodeType !== COMMENT_NODE) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-icon-button_left');\n                }\n\n                if (iconElement.previousSibling && iconElement.previousSibling.nodeType !== COMMENT_NODE) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-icon-button_right');\n                }\n            }\n        } else if (icons.length === twoIcons) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n\n\nexport class McButtonBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McButtonMixinBase:\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McButtonBase =\n        mixinColor(mixinDisabled(McButtonBase));\n\n\n@Component({\n    selector: `\n        button[mc-button],\n        button[mc-xs-button],\n        button[mc-sm-button],\n        button[mc-lg-button],\n        button[mc-xl-button]\n    `,\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[disabled]': 'disabled || null'\n    }\n})\nexport class McButton extends _McButtonMixinBase implements OnDestroy, CanDisable, CanColor {\n    constructor(elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        super(elementRef);\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n\n\n@Component({\n    selector: 'a[mc-button], a[mc-xs-button], a[mc-sm-button], a[mc-lg-button], a[mc-xl-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_haltDisabledEvents($event)'\n    }\n})\nexport class McAnchor extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n\n\n@Component({\n    selector: 'button[mc-icon-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null'\n    }\n})\nexport class McIconButton extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McButton,\n    McAnchor,\n    McIconButton,\n    McButtonCSSStyler,\n    McIconButtonCSSStyler\n} from './button.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McIconButtonCSSStyler\n    ],\n    declarations: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McIconButtonCSSStyler\n    ]\n})\nexport class McButtonModule {}\n","import {\n    Output,\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef, Input,\n    OnDestroy, EventEmitter,\n    ViewEncapsulation, HostBinding\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n@Component({\n    selector: 'mc-card',\n    templateUrl: './card.component.html',\n    styleUrls: ['./card.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color'],\n    host: {\n        class: 'mc-card',\n        '[class.mc-card_readonly]': 'readonly',\n        '[class.mc-card_selected]': 'selected',\n        '(keydown)': 'onKeyDown($event)',\n        '(click)': 'onClick($event)'\n    }\n})\nexport class McCard implements OnDestroy {\n    get tabIndex(): number | null {\n        return this.readonly ? null : this._tabIndex;\n    }\n\n    @HostBinding('attr.tabIndex')\n    @Input()\n    set tabIndex(value: number | null) {\n        this._tabIndex = value;\n    }\n\n    @Input()\n    readonly = false;\n\n    @Input()\n    selected = false;\n\n    @Output()\n    selectedChange = new EventEmitter<boolean>();\n\n    private _tabIndex: number | null = 0;\n\n    constructor(private _elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        this._focusMonitor.monitor(this._elementRef.nativeElement, false);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this.hostElement.focus();\n    }\n\n    onClick($event: MouseEvent) {\n        if (!this.readonly) {\n            $event.stopPropagation();\n\n            this.selectedChange.emit(!this.selected);\n        }\n    }\n\n    private get hostElement() {\n        return this._elementRef.nativeElement;\n    }\n\n    onKeyDown($event: KeyboardEvent) {\n        switch ($event.keyCode) {\n            case SPACE:\n                if (!this.readonly) {\n                    $event.preventDefault();\n                    this.selectedChange.emit(!this.selected);\n                }\n                break;\n            default:\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McCard\n} from './card.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [McCard],\n    declarations: [McCard]\n})\nexport class McCardModule {}\n","import { InjectionToken } from '@angular/core';\n\n\n/**\n * Checkbox click action when user click on input element.\n * noop: Do not toggle checked or indeterminate.\n * check: Only toggle checked status, ignore indeterminate.\n * check-indeterminate: Toggle checked status, set indeterminate to false. Default behavior.\n * undefined: Same as `check-indeterminate`.\n */\nexport type McCheckboxClickAction = 'noop' | 'check' | 'check-indeterminate' | undefined;\n\n/**\n * Injection token that can be used to specify the checkbox click behavior.\n */\nexport const MC_CHECKBOX_CLICK_ACTION =\n    new InjectionToken<McCheckboxClickAction>('mc-checkbox-click-action');\n","import {\n    AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_CHECKBOX_CLICK_ACTION, McCheckboxClickAction } from './checkbox-config';\n\n\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n\n/**\n * Provider Expression that allows mc-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nexport const MC_CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McCheckbox),\n    multi: true\n};\n\n/**\n * Represents the different states that require custom transitions between them.\n * @docs-private\n */\nexport enum TransitionCheckState {\n    /** The initial state of the component before any user interaction. */\n    Init,\n    /** The state representing the component when it's becoming checked. */\n    Checked,\n    /** The state representing the component when it's becoming unchecked. */\n    Unchecked,\n    /** The state representing the component when it's becoming indeterminate. */\n    Indeterminate\n}\n\n/** Change event object emitted by McCheckbox. */\nexport class McCheckboxChange {\n    /** The source McCheckbox of the event. */\n    source: McCheckbox;\n    /** The new `checked` value of the checkbox. */\n    checked: boolean;\n}\n\n// Boilerplate for applying mixins to McCheckbox.\n/** @docs-private */\nexport class McCheckboxBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McCheckboxMixinBase:\n    HasTabIndexCtor &\n    CanColorCtor &\n    CanDisableCtor &\n    typeof McCheckboxBase =\n        mixinTabIndex(mixinColor(mixinDisabled(McCheckboxBase)));\n\n\n/**\n * A mosaic checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A McCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n */\n@Component({\n    selector: 'mc-checkbox',\n    templateUrl: 'checkbox.html',\n    styleUrls: ['checkbox.css'],\n    exportAs: 'mcCheckbox',\n    host: {\n        class: 'mc-checkbox',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-indeterminate]': 'indeterminate',\n        '[class.mc-checked]': 'checked',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-checkbox-label-before]': 'labelPosition == \"before\"'\n    },\n    providers: [MC_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCheckbox extends _McCheckboxMixinBase implements ControlValueAccessor,\n    AfterViewInit, OnDestroy, CanColor, CanDisable, HasTabIndex {\n\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\n     * take precedence so this may be omitted.\n     */\n    @Input('aria-label') ariaLabel: string = '';\n\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     */\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-checkbox-${++nextUniqueId}`;\n\n    /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n    @Input() id: string = this._uniqueId;\n\n    /** Returns the unique id for the visual hidden input. */\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    /** Whether the checkbox is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    private _required: boolean;\n\n    /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n    @Input() labelPosition: 'before' | 'after' = 'after';\n\n    /** Name value will be applied to the input element if present */\n    @Input() name: string | null = null;\n\n    /** Event emitted when the checkbox's `checked` value changes. */\n    @Output() readonly change: EventEmitter<McCheckboxChange> =\n        new EventEmitter<McCheckboxChange>();\n\n    /** Event emitted when the checkbox's `indeterminate` value changes. */\n    @Output() readonly indeterminateChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** The value attribute of the native input element */\n    @Input() value: string;\n\n    /** The native `<input type=\"checkbox\">` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n     * @docs-private\n     */\n    _onTouched: () => any = () => {\n    }\n\n    private _currentAnimationClass: string = '';\n\n    private _currentCheckState: TransitionCheckState = TransitionCheckState.Init;\n\n    private _controlValueAccessorChangeFn: (value: any) => void = () => {\n    }\n\n    constructor(elementRef: ElementRef,\n                private _changeDetectorRef: ChangeDetectorRef,\n                private _focusMonitor: FocusMonitor,\n                @Attribute('tabindex') tabIndex: string,\n                @Optional() @Inject(MC_CHECKBOX_CLICK_ACTION)\n                private _clickAction: McCheckboxClickAction) {\n        super(elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._inputElement.nativeElement)\n            .subscribe((focusOrigin) => this._onInputFocusChange(focusOrigin));\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._inputElement.nativeElement);\n    }\n\n    /**\n     * Whether the checkbox is checked.\n     */\n    @Input()\n    get checked(): boolean {\n        return this._checked;\n    }\n\n    set checked(value: boolean) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     */\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value != this.disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    @Input()\n    get indeterminate(): boolean {\n        return this._indeterminate;\n    }\n\n    set indeterminate(value: boolean) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = value;\n\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(TransitionCheckState.Indeterminate);\n            } else {\n                this._transitionCheckState(\n                    this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n    }\n\n    private _indeterminate: boolean = false;\n\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // This method is getting called whenever the label of the checkbox changes.\n        // Since the checkbox uses the OnPush strategy we need to notify it about the change\n        // that has been recognized by the cdkObserveContent directive.\n        this._changeDetectorRef.markForCheck();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: any) {\n        this._onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    _getAriaChecked(): 'true' | 'false' | 'mixed' {\n        return this.checked ? 'true' : (this.indeterminate ? 'mixed' : 'false');\n    }\n\n    private _transitionCheckState(newState: TransitionCheckState) {\n        const oldState = this._currentCheckState;\n        const element: HTMLElement = this._elementRef.nativeElement;\n\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n\n        this._currentCheckState = newState;\n\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n        }\n    }\n\n    private _emitChangeEvent() {\n        const event = new McCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    }\n\n    /** Function is called whenever the focus changes for the input element. */\n    private _onInputFocusChange(focusOrigin: FocusOrigin) {\n        if (focusOrigin) {\n            this._onTouched();\n        }\n    }\n\n    /** Toggles the `checked` state of the checkbox. */\n    toggle(): void {\n        this.checked = !this.checked;\n    }\n\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param event\n     */\n    _onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && this._clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && this._clickAction !== 'check') {\n\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n\n            this.toggle();\n            this._transitionCheckState(\n                this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        } else if (!this.disabled && this._clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mc-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n\n    /** Focuses the checkbox. */\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _onInteractionEvent(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n}\n","import {\n    Directive,\n    forwardRef,\n    Provider\n} from '@angular/core';\nimport {\n    CheckboxRequiredValidator,\n    NG_VALIDATORS\n} from '@angular/forms';\n\n\nexport const MC_CHECKBOX_REQUIRED_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => McCheckboxRequiredValidator),\n    multi: true\n};\n\n/**\n * Validator for Mosaic checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mc-checkbox`.\n */\n@Directive({\n    selector: `mc-checkbox[required][formControlName],\n             mc-checkbox[required][formControl], mc-checkbox[required][ngModel]`,\n    providers: [MC_CHECKBOX_REQUIRED_VALIDATOR],\n    host: { '[attr.required]': 'required ? \"\" : null' }\n})\nexport class McCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McCheckbox } from './checkbox';\nimport { McCheckboxRequiredValidator } from './checkbox-required-validator';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McCheckbox, McCheckboxRequiredValidator],\n    declarations: [McCheckbox, McCheckboxRequiredValidator]\n})\nexport class McCheckboxModule {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-cleaner',\n    template: '<i class=\"mc-icon_light\" mc-icon=\"mc-close-M_16\" color=\"second\"></i>'\n})\nexport class McCleaner {}\n","import { NgControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** The element ID for this control. */\n    readonly id: string;\n\n    /** The placeholder for this control. */\n    readonly placeholder: string;\n\n    /** Gets the NgControl for this control. */\n    readonly ngControl: NgControl | null;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Whether the control is empty. */\n    readonly empty: boolean;\n\n    /** Whether the control is required. */\n    readonly required: boolean;\n\n    /** Whether the control is disabled. */\n    readonly disabled: boolean;\n\n    /** Whether the control is in an error state. */\n    readonly errorState: boolean;\n\n    /**\n     * An optional name for the control type that can be used to distinguish `mc-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mc-form-field-type-{{controlType}}` to its root element.\n     */\n    readonly controlType?: string;\n\n    /** Handles a click on the control's container. */\n    abstract onContainerClick(event: MouseEvent): void;\n}\n","import { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldNumberControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** the number step */\n    step: number;\n\n    /** the number big step */\n    bigStep: number;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Handles step up and down */\n    abstract stepUp(step: number): void;\n\n    abstract stepDown(step: number): void;\n}\n","import { Directive, Input } from '@angular/core';\n\n\nlet nextUniqueId = 0;\n\n@Directive({\n    selector: 'mc-hint',\n    host: {\n        class: 'mc-hint',\n        '[attr.id]': 'id'\n    }\n})\nexport class McHint {\n    @Input() id: string = `mc-hint-${nextUniqueId++}`;\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcPrefix]'\n})\nexport class McPrefix {\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-stepper',\n    template: `\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-up mc-angle-down-L_16\"\n           (mousedown)=\"onStepUp($event)\">\n        </i>\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-down mc-angle-down-L_16\"\n           (mousedown)=\"onStepDown($event)\">\n        </i>\n    `\n})\nexport class McStepper {\n    @Output()\n    readonly stepUp: EventEmitter<void> = new EventEmitter<void>();\n    @Output()\n    readonly stepDown: EventEmitter<void> = new EventEmitter<void>();\n\n    onStepUp($event: MouseEvent) {\n        this.stepUp.emit();\n        $event.preventDefault();\n    }\n\n    onStepDown($event: MouseEvent) {\n        this.stepDown.emit();\n        $event.preventDefault();\n    }\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcSuffix]'\n})\nexport class McSuffix {\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren, Directive,\n    ElementRef,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { CanColor, CanColorCtor, mixinColor } from '@ptsecurity/mosaic/core';\nimport { EMPTY, merge } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\n\nimport { McCleaner } from './cleaner';\nimport { McFormFieldControl } from './form-field-control';\nimport { getMcFormFieldMissingControlError } from './form-field-errors';\nimport { McFormFieldNumberControl } from './form-field-number-control';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\nlet nextUniqueId = 0;\n\nexport class McFormFieldBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McFormFieldMixinBase: CanColorCtor & typeof McFormFieldBase = mixinColor(McFormFieldBase);\n\n@Component({\n    selector: 'mc-form-field',\n    exportAs: 'mcFormField',\n    templateUrl: 'form-field.html',\n    // McInput is a directive and can't have styles, so we need to include its styles here.\n    // The McInput styles are fairly minimal so it shouldn't be a big deal for people who\n    // aren't using McInput.\n    styleUrls: [\n        'form-field.css',\n        '../input/input.css',\n        '../textarea/textarea.css'\n    ],\n    host: {\n        class: 'mc-form-field',\n        '[class.mc-form-field_invalid]': '_control.errorState',\n        '[class.mc-disabled]': '_control.disabled',\n        '[class.mc-form-field_has-prefix]': 'hasPrefix',\n        '[class.mc-form-field_has-suffix]': 'hasSuffix',\n        '[class.mc-form-field_has-cleaner]': 'canShowCleaner',\n        '[class.mc-form-field_has-stepper]': 'canShowStepper',\n        '[class.mc-focused]': '_control.focused',\n        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n        '[class.ng-touched]': '_shouldForward(\"touched\")',\n        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n        '[class.ng-valid]': '_shouldForward(\"valid\")',\n        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n        '[class.ng-pending]': '_shouldForward(\"pending\")',\n        '(keydown)': 'onKeyDown($event)',\n        '(mouseenter)': 'onHoverChanged(true)',\n        '(mouseleave)': 'onHoverChanged(false)'\n    },\n    inputs: ['color'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class McFormField extends _McFormFieldMixinBase implements\n    AfterContentInit, AfterContentChecked, AfterViewInit, CanColor {\n\n    @ContentChild(McFormFieldControl) _control: McFormFieldControl<any>;\n    @ContentChild(McFormFieldNumberControl) _numberControl: McFormFieldNumberControl<any>;\n    @ContentChild(McStepper) _stepper: McStepper;\n\n    @ContentChildren(McHint) _hint: QueryList<McHint>;\n    @ContentChildren(McSuffix) _suffix: QueryList<McSuffix>;\n    @ContentChildren(McPrefix) _prefix: QueryList<McPrefix>;\n    @ContentChildren(McCleaner) _cleaner: QueryList<McCleaner>;\n\n    // Unique id for the internal form field label.\n    _labelId = `mc-form-field-label-${nextUniqueId++}`;\n\n    hovered: boolean = false;\n\n    constructor(public _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {\n        super(_elementRef);\n    }\n\n    ngAfterContentInit() {\n        this._validateControlChild();\n\n        if (this._control.controlType) {\n            this._elementRef.nativeElement.classList\n                .add(`mc-form-field-type-${this._control.controlType}`);\n\n            if (this._numberControl && this.hasStepper) {\n                this._stepper.stepUp.subscribe(this.onStepUp.bind(this));\n                this._stepper.stepDown.subscribe(this.onStepDown.bind(this));\n            }\n        }\n\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        this._control.stateChanges.pipe(startWith())\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n\n        if (this._numberControl) {\n            this._numberControl.stateChanges.pipe(startWith())\n                .subscribe(() => {\n                    this._changeDetectorRef.markForCheck();\n                });\n        }\n\n        // Run change detection if the value changes.\n        const valueChanges = this._control.ngControl && this._control.ngControl.valueChanges || EMPTY;\n\n        merge(valueChanges)\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n\n    ngAfterContentChecked() {\n        this._validateControlChild();\n    }\n\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._changeDetectorRef.detectChanges();\n    }\n\n    clearValue($event) {\n        $event.stopPropagation();\n\n        if (this._control && this._control.ngControl) {\n            this._control.ngControl.reset();\n        }\n    }\n\n    onContainerClick($event) {\n        if (this._control.onContainerClick) {\n            this._control.onContainerClick($event);\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === ESCAPE && this._control.focused && this.hasCleaner) {\n            if (this._control && this._control.ngControl) {\n                this._control.ngControl.reset();\n            }\n\n            event.preventDefault();\n        }\n    }\n\n    onHoverChanged(isHovered: boolean) {\n        if (isHovered !== this.hovered) {\n            this.hovered  = isHovered;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    onStepUp() {\n        if (this._numberControl) {\n            this._numberControl.stepUp(this._numberControl.step);\n        }\n    }\n\n    onStepDown() {\n        if (this._numberControl) {\n            this._numberControl.stepDown(this._numberControl.step);\n        }\n    }\n\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop: keyof NgControl): boolean {\n        const ngControl = this._control ? this._control.ngControl : null;\n\n        return ngControl && ngControl[prop];\n    }\n\n    /** Throws an error if the form field's control is missing. */\n    protected _validateControlChild() {\n        if (!this._control) {\n            throw getMcFormFieldMissingControlError();\n        }\n    }\n\n    get hasHint(): boolean {\n        return this._hint && this._hint.length > 0;\n    }\n\n    get hasSuffix(): boolean {\n        return this._suffix && this._suffix.length > 0;\n    }\n\n    get hasPrefix(): boolean {\n        return this._prefix && this._prefix.length > 0;\n    }\n\n    get hasCleaner(): boolean {\n        return this._cleaner && this._cleaner.length > 0;\n    }\n\n    get hasStepper(): boolean {\n        return !!this._stepper;\n    }\n\n    get canShowCleaner(): boolean {\n        return this.hasCleaner &&\n            this._control &&\n            this._control.ngControl\n                ? this._control.ngControl.value && !this._control.disabled\n                : false;\n    }\n\n\n    get disabled(): boolean {\n        return this._control && this._control.disabled;\n    }\n\n    get canShowStepper(): boolean {\n        return this._numberControl &&\n            !this.disabled &&\n            (\n                this._numberControl.focused ||\n                this.hovered\n            );\n    }\n}\n\n@Directive({\n    selector: 'mc-form-field[mcFormFieldWithoutBorders]',\n    exportAs: 'mcFormFieldWithoutBorders',\n    host: { class: 'mc-form-field_without-borders' }\n})\nexport class McFormFieldWithoutBorders {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCleaner } from './cleaner';\nimport { McFormField, McFormFieldWithoutBorders } from './form-field';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\n@NgModule({\n    declarations: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ],\n    imports: [CommonModule, McIconModule],\n    exports: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ]\n})\nexport class McFormFieldModule {\n}\n","import { InjectionToken } from '@angular/core';\n\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n","function sanitizeNumber(value: number): number | null {\n    return !isFinite(value) || isNaN(value)\n        ? null\n        : value;\n}\n\nfunction getPrecision(value: number): number {\n    const arr = value.toString().split('.');\n\n    return arr.length === 1\n        ? 1\n        // tslint:disable-next-line:no-magic-numbers\n        :  Math.pow(10, arr[1].length);\n}\n\nfunction add(value1: number, value2: number) {\n    const precision = Math.max(getPrecision(value1), getPrecision(value2));\n\n    const res = (value1 * precision + value2 * precision) / precision;\n\n    return sanitizeNumber(res);\n}\n\nexport const stepUp = (value: number | null,\n                       max: number,\n                       min: number,\n                       step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(min, step);\n\n        return res === null ? null : Math.min(res, max);\n    }\n\n    res = add(value, step);\n\n    return res === null ? null : Math.max(Math.min(res, max), min);\n};\n\nexport const stepDown = (value: number | null,\n                         max: number,\n                         min: number,\n                         step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(max, -step);\n\n        return res === null ? null : Math.max(res, min);\n    }\n\n    res = add(value, -step);\n\n    return res === null ? null : Math.min(Math.max(res, min), max);\n};\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\nexport function isBoolean(val: any): val is boolean { return typeof val === 'boolean'; }\n\nexport function toBoolean(value: any): boolean {\n    return value != null && `${value}` !== 'false';\n}\n","import { NgModule, InjectionToken, Optional, Inject, isDevMode } from '@angular/core';\nimport { BidiModule } from '@ptsecurity/cdk/bidi';\n\n\n// Injection token that configures whether the Mosaic sanity checks are enabled.\nexport const MC_SANITY_CHECKS = new InjectionToken<boolean>('mc-sanity-checks', {\n    providedIn: 'root',\n    factory: MC_SANITY_CHECKS_FACTORY\n});\n\nexport function MC_SANITY_CHECKS_FACTORY(): boolean {\n    return true;\n}\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Mosaic\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., McTabsModule).\n */\n@NgModule({\n    imports: [ BidiModule ],\n    exports: [ BidiModule ]\n})\nexport class McCommonModule {\n    // Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n    private _hasDoneGlobalChecks = false;\n\n    // Reference to the global `document` object.\n    private _document = typeof document === 'object' && document ? document : null;\n\n    // Reference to the global 'window' object.\n    private _window = typeof window === 'object' && window ? window : null;\n\n    constructor(@Optional() @Inject(MC_SANITY_CHECKS) private _sanityChecksEnabled: boolean) {\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n\n    // Whether any sanity checks are enabled\n    private _areChecksEnabled(): boolean {\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    }\n\n    // Whether the code is running in tests.\n    private _isTestEnv() {\n        // tslint:disable-next-line\n        return this._window && (this._window['__karma__'] || this._window['jasmine']);\n    }\n\n    private _checkDoctypeIsDefined(): void {\n        if (this._document && !this._document.doctype) {\n            console.warn(\n                'Current document does not have a doctype. This may cause ' +\n                'some Mosaic components not to behave as expected.'\n            );\n        }\n    }\n\n    private _checkThemeIsPresent(): void {\n        if (this._document && typeof getComputedStyle === 'function') {\n            const testElement = this._document.createElement('div');\n\n            testElement.classList.add('mc-theme-loaded-marker');\n            this._document.body.appendChild(testElement);\n\n            const computedStyle = getComputedStyle(testElement);\n\n            // In some situations, the computed style of the test element can be null. For example in\n            // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n            if (computedStyle && computedStyle.display !== 'none') {\n                console.warn(\n                    'Could not find Mosaic core theme. Most Mosaic ' +\n                    'components may not work as expected. For more info refer ' +\n                    'to the theming guide: link there'\n                );\n            }\n\n            this._document.body.removeChild(testElement);\n        }\n    }\n}\n","import { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanDisable {\n    disabled: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableCtor = Constructor<CanDisable>;\n\n// Mixin to augment a directive with a `disabled` property.\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): CanDisableCtor & T {\n    return class extends base {\n        private _disabled: boolean = false;\n\n        get disabled() {\n            return this._disabled;\n        }\n\n        set disabled(value: any) {\n            this._disabled = coerceBooleanProperty(value);\n        }\n\n        constructor(...args: any[]) {\n            // tslint:disable-next-line\n            super(...args);\n        }\n    };\n}\n","import { ElementRef } from '@angular/core';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanColor {\n    color: ThemePalette;\n}\n\n/** @docs-private */\nexport type CanColorCtor = Constructor<CanColor>;\n\nexport interface HasElementRef {\n    _elementRef: ElementRef;\n}\n\nexport enum ThemePalette {\n    Primary = 'primary',\n    Second = 'second',\n    Error = 'error',\n    Default = 'second',\n    Empty = ''\n}\n\n/** Mixin to augment a directive with a `color` property. */\nexport function mixinColor<T extends Constructor<HasElementRef>>(\n    base: T,\n    defaultColor: ThemePalette = ThemePalette.Default\n): CanColorCtor & T {\n    return class extends base {\n\n        private _color: ThemePalette;\n\n        get color(): ThemePalette {\n            return this._color;\n        }\n\n        set color(value: ThemePalette) {\n            const colorPalette = value || defaultColor;\n\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mc-${this._color}`);\n                }\n\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mc-${colorPalette}`);\n                }\n\n                this._color = colorPalette;\n            }\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n\n            this.color = defaultColor;\n        }\n    };\n}\n\n","import { Constructor } from './constructor';\nimport { CanDisable } from './disabled';\n\n\nexport interface HasTabIndex {\n    tabIndex: number;\n}\n\nexport type HasTabIndexCtor = Constructor<HasTabIndex>;\n\n// Mixin to augment a directive with a `tabIndex` property.\nexport function mixinTabIndex<T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0)\n    : HasTabIndexCtor & T {\n    return class extends base {\n        private _tabIndex: number = defaultTabIndex;\n\n        get tabIndex(): number {\n            return this.disabled ? -1 : this._tabIndex;\n        }\n\n        set tabIndex(value: number) {\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n    };\n}\n","import { FormControl, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\nimport { ErrorStateMatcher } from '../error/error-options';\n\nimport { Constructor } from './constructor';\n\n\n/** @docs-private */\nexport interface CanUpdateErrorState {\n\n    readonly stateChanges: Subject<void>;\n\n    errorState: boolean;\n    errorStateMatcher: ErrorStateMatcher;\n\n    updateErrorState();\n}\n\n/** @docs-private */\nexport type CanUpdateErrorStateCtor = Constructor<CanUpdateErrorState>;\n\n/** @docs-private */\nexport interface HasErrorState {\n    _parentFormGroup: FormGroupDirective;\n    _parentForm: NgForm;\n    _defaultErrorStateMatcher: ErrorStateMatcher;\n    ngControl: NgControl;\n}\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T): CanUpdateErrorStateCtor & T {\n    return class extends base {\n        /** Whether the component is in an error state. */\n        errorState: boolean = false;\n\n        /**\n         * Stream that emits whenever the state of the input changes such that the wrapping\n         * `MatFormField` needs to run change detection.\n         */\n        readonly stateChanges = new Subject<void>();\n\n        errorStateMatcher: ErrorStateMatcher;\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this._parentFormGroup || this._parentForm;\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control as FormControl : null;\n            const newState = matcher.isErrorState(control, parent);\n\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n","import {\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ENTER, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Subject } from 'rxjs';\n\nimport { McOptgroup } from './optgroup';\n\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n\n/** Event object emitted by McOption when selected or deselected. */\nexport class McOptionSelectionChange {\n    constructor(\n        /** Reference to the option that emitted the event. */\n        public source: McOption,\n        /** Whether the change in the option's value was a result of a user action. */\n        public isUserInput = false) {\n    }\n}\n\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * @docs-private\n */\nexport interface IMcOptionParentComponent {\n    disableRipple?: boolean;\n    multiple?: boolean;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_OPTION_PARENT_COMPONENT =\n    new InjectionToken<IMcOptionParentComponent>('MC_OPTION_PARENT_COMPONENT');\n\n/**\n * Single option inside of a `<mat-select>` element.\n */\n@Component({\n    selector: 'mc-option',\n    exportAs: 'mcOption',\n    host: {\n        '[attr.tabindex]': '_getTabIndex()',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-option-multiple]': 'multiple',\n        '[class.mc-active]': 'active',\n        '[id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '(click)': '_selectViaInteraction()',\n        '(keydown)': '_handleKeydown($event)',\n        class: 'mc-option'\n    },\n    styleUrls: ['option.css'],\n    templateUrl: 'option.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McOption implements AfterViewChecked, OnDestroy {\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n        return this._parent && this._parent.multiple;\n    }\n\n    /** The unique ID of the option. */\n    get id(): string {\n        return this._id;\n    }\n\n    /** Whether or not the option is currently selected. */\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    /** The form value of the option. */\n    @Input() value: any;\n\n    /** Whether the option is disabled. */\n    @Input()\n    get disabled() {\n        return (this.group && this.group.disabled) || this._disabled;\n    }\n\n    set disabled(value: any) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() {\n        return this._parent && this._parent.disableRipple;\n    }\n\n    /** Event emitted when the option is selected or deselected. */\n        // tslint:disable-next-line:no-output-on-prefix\n    @Output() readonly onSelectionChange = new EventEmitter<McOptionSelectionChange>();\n\n    /** Emits when the state of the option changes and any parents have to be notified. */\n    readonly _stateChanges = new Subject<void>();\n\n    private _selected = false;\n    private _active = false;\n    private _disabled = false;\n    private readonly _id = `mc-option-${_uniqueIdCounter++}`;\n    private _mostRecentViewValue = '';\n\n    constructor(\n        private readonly _element: ElementRef,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_OPTION_PARENT_COMPONENT) private readonly _parent: IMcOptionParentComponent,\n        @Optional() readonly group: McOptgroup) {\n    }\n\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active(): boolean {\n        return this._active;\n    }\n\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue(): string {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n\n    /** Selects the option. */\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Deselects the option. */\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Sets focus onto this option. */\n    focus(): void {\n        const element = this._getHostElement();\n\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles(): void {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles(): void {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        return this.viewValue;\n    }\n\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event: KeyboardEvent): void {\n        // tslint:disable-next-line\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\n            this._selectViaInteraction();\n\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction(): void {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Gets the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n\n    /** Emits the selection change event. */\n    private _emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McOptionSelectionChange(this, isUserInput));\n    }\n}\n\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nexport function _countGroupLabelsBeforeOption(\n    optionIndex: number, options: QueryList<McOption>,\n    optionGroups: QueryList<McOptgroup>\n): number {\n\n    if (optionGroups.length) {\n        const optionsArray = options.toArray();\n        const groups = optionGroups.toArray();\n\n        let groupCounter = 0;\n\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n\n        return groupCounter;\n    }\n\n    return 0;\n}\n\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionIndex Index of the option to be scrolled into the view.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nexport function _getOptionScrollPosition(\n    optionIndex: number,\n    optionHeight: number,\n    currentScrollPosition: number,\n    panelHeight: number\n): number {\n    const optionOffset = optionIndex * optionHeight;\n\n    if (optionOffset < currentScrollPosition) { return optionOffset; }\n\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n\n    return currentScrollPosition;\n}\n\n","import { ConnectionPositionPair } from '@ptsecurity/cdk/overlay';\n\n\nexport const POSITION_MAP: { [key: string]: ConnectionPositionPair } = {\n    top         : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom'\n    },\n    topCenter   : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topLeft     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topRight    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    right       : {\n        originX : 'end',\n        originY : 'center',\n        overlayX: 'start',\n        overlayY: 'center'\n    },\n    rightTop    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'top',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    rightBottom : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    bottom      : {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomCenter: {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomLeft  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    bottomRight : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    left        : {\n        originX : 'start',\n        originY : 'center',\n        overlayX: 'end',\n        overlayY: 'center'\n    },\n    leftTop     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    leftBottom  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    }\n};\n\nexport const DEFAULT_4_POSITIONS = _objectValues([\n    POSITION_MAP.top, POSITION_MAP.right, POSITION_MAP.bottom, POSITION_MAP.left\n]);\n\nfunction arrayMap<T, S>(array: T[], iteratee: (item: T, index: number, arr: T[]) => S): S[] {\n    let index = -1;\n    const length = array == null ? 0 : array.length;\n    const result = Array(length);\n\n    while (++index < length) {\n        result[ index ] = iteratee(array[ index ], index, array);\n    }\n\n    return result;\n}\nfunction baseValues<T>(object: { [key: string]: T } | T[], props: string[]): T[] {\n    return arrayMap(props,  (key) => {\n        return object[ key ];\n    });\n}\nfunction _objectValues<T>(object: { [key: string]: T } | T[]): T[] {\n    return object == null ? [] : baseValues(object, Object.keys(object));\n}\n","export function getMcFormFieldMissingControlError(): Error {\n  return Error('mc-form-field must contain a McFormFieldControl.');\n}\n","export function getMcInputUnsupportedTypeError(inputType: string): Error {\n    return Error(`Input type \"${inputType}\" isn't supported by mcInput.`);\n}\n","/** @docs-private */\nexport function createMissingDateImplError(provider: string) {\n    return Error(\n        `McDatepicker: No provider found for ${provider}. You must import one of the existing ` +\n        `modules at your application root or provide a custom implementation or use exists ones.`);\n}\n","export function throwMcDropdownMissingError() {\n    throw Error(`mcDropdownTriggerFor: must pass in an mc-dropdown instance.\n    Example:\n      <mc-dropdown #dropdown=\"mcDropdown\"></mc-dropdown>\n      <button [mcDropdownTriggerFor]=\"dropdown\"></button>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mc-dropdown xPosition=\"before\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mc-dropdown yPosition=\"above\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n","/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nexport function getMcSelectDynamicMultipleError(): Error {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nexport function getMcSelectNonArrayValueError(): Error {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nexport function getMcSelectNonFunctionValueError(): Error {\n    return Error('`compareWith` must be a function.');\n}\n","import { NgModule, Directive, ElementRef, QueryList } from '@angular/core';\n\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(McLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({\n    selector: '[mc-line], [mcLine]',\n    host: { class: 'mc-line' }\n})\nexport class McLine {}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nexport class McLineSetter {\n    constructor(private _lines: QueryList<McLine>, private _element: ElementRef) {\n        this._setLineClass(this._lines.length);\n\n        this._lines.changes.subscribe(() => {\n            this._setLineClass(this._lines.length);\n        });\n    }\n\n    private _setLineClass(count: number): void {\n        this._resetClasses();\n        if (count === 2 || count === 3) {\n            this._setClass(`mc-${count}-line`, true);\n        } else if (count > 3) {\n            this._setClass(`mc-multi-line`, true);\n        }\n    }\n\n    private _resetClasses(): void {\n        this._setClass('mc-2-line', false);\n        this._setClass('mc-3-line', false);\n        this._setClass('mc-multi-line', false);\n    }\n\n    private _setClass(className: string, isAdd: boolean): void {\n        if (isAdd) {\n            this._element.nativeElement.classList.add(className);\n        } else {\n            this._element.nativeElement.classList.remove(className);\n        }\n    }\n}\n\n@NgModule({\n    imports: [],\n    exports: [McLine],\n    declarations: [McLine]\n})\nexport class McLineModule {}\n","import { Injectable } from '@angular/core';\nimport { FormGroupDirective, NgForm, FormControl } from '@angular/forms';\n\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n@Injectable()\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\n\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n@Injectable({ providedIn: 'root' })\nexport class ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\n\nexport type McPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mc-primary .mc-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mc-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n@Component({\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'mc-pseudo-checkbox',\n    styleUrls: ['pseudo-checkbox.css'],\n    templateUrl: 'pseudo-checkbox.partial.html',\n    host: {\n        class: 'mc-pseudo-checkbox',\n        '[class.mc-indeterminate]': 'state === \"indeterminate\"',\n        '[class.mc-checked]': 'state === \"checked\"',\n        '[class.mc-disabled]': 'disabled'\n    }\n})\nexport class McPseudoCheckbox {\n    @Input() state: McPseudoCheckboxState = 'unchecked';\n\n    @Input() disabled: boolean = false;\n}\n","import { NgModule } from '@angular/core';\n\nimport { McPseudoCheckbox } from './pseudo-checkbox/pseudo-checkbox';\n\n\n@NgModule({\n    exports: [McPseudoCheckbox],\n    declarations: [McPseudoCheckbox]\n})\nexport class McPseudoCheckboxModule {}\n\n\nexport * from './pseudo-checkbox/pseudo-checkbox';\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class McMeasureScrollbarService {\n\n    get scrollBarWidth(): number {\n        if (this._scrollbarWidth) {\n            return this._scrollbarWidth;\n        }\n        this.initScrollBarWidth();\n\n        return this._scrollbarWidth;\n    }\n\n    private _scrollbarWidth: number;\n    private scrollbarMeasure = {\n        position: 'absolute',\n        top: '-9999px',\n        width: '50px',\n        height: '50px',\n        overflow: 'scroll'\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private document: any\n    ) {\n        this.initScrollBarWidth();\n    }\n\n    initScrollBarWidth() {\n        const scrollDiv = this.document.createElement('div');\n\n        // tslint:disable-next-line\n        for (const scrollProp in this.scrollbarMeasure) {\n            if (this.scrollbarMeasure.hasOwnProperty(scrollProp)) {\n                scrollDiv.style[scrollProp] = this.scrollbarMeasure[scrollProp];\n            }\n        }\n\n        this.document.body.appendChild(scrollDiv);\n\n        const width = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n        this.document.body.removeChild(scrollDiv);\n        this._scrollbarWidth = width;\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\nimport { mixinDisabled, CanDisable, CanDisableCtor } from '../common-behaviors/index';\n\n\n// Boilerplate for applying mixins to McOptgroup.\n/** @docs-private */\nexport class McOptgroupBase {}\n\nexport const _McOptgroupMixinBase: CanDisableCtor & typeof McOptgroupBase = mixinDisabled(McOptgroupBase);\n\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\n\n/**\n * Component that is used to group instances of `mc-option`.\n */\n@Component({\n    selector: 'mc-optgroup',\n    exportAs: 'mcOptgroup',\n    templateUrl: 'optgroup.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    styleUrls: ['optgroup.css'],\n    host: {\n        class: 'mc-optgroup',\n        role: 'group',\n        '[class.mc-optgroup-disabled]': 'disabled',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-labelledby]': '_labelId'\n    }\n})\nexport class McOptgroup extends _McOptgroupMixinBase implements CanDisable {\n    /** Label for the option group. */\n    @Input() label: string;\n\n    /** Unique id for the underlying label. */\n    _labelId: string = `mc-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McPseudoCheckboxModule } from '../selection/index';\n\nimport { McOptgroup } from './optgroup';\nimport { McOption } from './option';\n\n\n@NgModule({\n    imports: [CommonModule, McPseudoCheckboxModule],\n    exports: [McOption, McOptgroup],\n    declarations: [McOption, McOptgroup]\n})\nexport class McOptionModule {}\n\n\nexport * from './option';\nexport * from './optgroup';\n","import { InjectionToken } from '@angular/core';\n\n\n/** InjectionToken that can be used to specify the global label options. */\nexport const MC_LABEL_GLOBAL_OPTIONS =\n    new InjectionToken<LabelOptions>('mc-label-global-options');\n\n/** Type for the available floatLabel values. */\nexport type FloatLabelType = 'always' | 'never' | 'auto';\n\n/** Configurable options for floating labels. */\nexport interface LabelOptions {\n    /**\n     * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n     * Default behavior is assumed to be `auto`.\n     */\n    float?: FloatLabelType;\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\nexport const fadeAnimation: AnimationTriggerMetadata =  trigger('fadeAnimation', [\n    state('void', style({ opacity: 0 })),\n    state('true', style({ opacity: 1 })),\n    state('false', style({ opacity: 0 })),\n    transition('* => true', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n    transition('* => void', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)'))\n]);\n","export enum AnimationCurves {\n    StandardCurve = 'cubic-bezier(0.4,0.0,0.2,1)',\n    DecelerationCurve = 'cubic-bezier(0.0,0.0,0.2,1)',\n    AccelerationCurve = 'cubic-bezier(0.4,0.0,1,1)',\n    SharpCurve = 'cubic-bezier(0.4,0.0,0.6,1)'\n}\n","import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { mixinColor, CanColor, CanColorCtor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\n@Directive({\n    selector: '[mc-icon]',\n    host: { class: 'mc mc-icon' }\n})\nexport class McIconCSSStyler {}\n\n\nexport class McIconBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McIconMixinBase: CanColorCtor & typeof McIconBase = mixinColor(McIconBase, ThemePalette.Empty);\n\n\n@Component({\n    selector: `[mc-icon]`,\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./icon.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color']\n})\nexport class McIcon extends _McIconMixinBase implements CanColor {\n    constructor(elementRef: ElementRef, @Attribute('mc-icon') iconName: string) {\n        super(elementRef);\n\n        elementRef.nativeElement.classList.add(iconName);\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McIcon,\n    McIconCSSStyler\n} from './icon.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McIcon,\n        McIconCSSStyler\n    ],\n    declarations: [\n        McIcon,\n        McIconCSSStyler\n    ]\n})\nexport class McIconModule {}\n"],"names":["this","_mcVisible","BehaviorSubject","onHideSubject","Subject","closeOnInteraction","availablePositions","POSITION_MAP","$visible","asObservable","Object","defineProperty","McTooltipComponent","prototype","get","_mcTitle","set","value","isTitleString","TemplateRef","_mcTrigger","_mcPlacement","positions","unshift","mcPlacement","visible","coerceBooleanProperty","next","mcVisibleChange","emit","show","_this","hideTid","clearTimeout","isContentEmpty","mcTrigger","showTid","setTimeout","mcVisible","markForCheck","mcMouseEnterDelay","hide","mcMouseLeaveDelay","setClassMap","classMap","prefix","mcTitle","afterHidden","cdr","handleBodyInteraction","tslib_1.__decorate","Output","tslib_1.__metadata","EventEmitter","Input","Component","selector","inputs","outputs","animations","fadeAnimation","template","preserveWhitespaces","styles","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","host","(body:click)","ChangeDetectorRef","MC_TOOLTIP_SCROLL_STRATEGY","InjectionToken","MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","provide","deps","Overlay","useFactory","mcTooltipScrollStrategyFactory","McTooltip","overlay","elementRef","ngZone","scrollDispatcher","hostView","scrollStrategy","direction","isTooltipOpen","isDynamicTooltip","parentDisabled","$unsubscribe","_disabled","manualListeners","Map","destroyed","title","updateCompValue","_mcMouseEnterDelay","_mcMouseLeaveDelay","_mcTooltipClass","tooltip","externalValue","createOverlay","overlayRef","strategy","position","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withPositions","DEFAULT_4_POSITIONS","slice","scrollableAncestors","getAncestorScrollContainers","withScrollableContainers","positionChanges","pipe","takeUntil","subscribe","change","onPositionChange","scrollableViewProperties","isOverlayClipped","run","create","positionStrategy","panelClass","updatePosition","detachments","detach","hasAttached","$event","updatedPlacement","keys","some","key","connectionPair","originX","originY","overlayX","overlayY","handlePositioningUpdate","pos","overlayElement","clientHeight","element","nativeElement","currentContainer","style","top","parseInt","split","ngOnInit","initElementRefListeners","ngOnDestroy","dispose","forEach","listener","event","removeEventListener","clear","complete","handleKeydown","e","keyCode","ESCAPE","handleTouchend","addEventListener","disabled","portal","ComponentPortal","attach","instance","property","distinctUntilChanged","data","getConfig","origin","getOrigin","getOverlayPosition","tslib_1.__assign","main","fallback","originPosition","isLtr","getMcTooltipInvalidPositionError","_a","invertPosition","x","y","overlayPosition","newX","newY","HostBinding","Directive","exportAs","(keydown)","(touchend)","tslib_1.__param","Inject","Optional","ElementRef","NgZone","ScrollDispatcher","ViewContainerRef","Directionality","McToolTipModule","NgModule","declarations","exports","imports","CommonModule","OverlayModule","providers","entryComponents","VERSION","Version","SELECT_PANEL_PADDING_X","[attr.id]","[attr.tabindex]","class","[class.mc-disabled]","[class.mc-select-invalid]","[class.mc-select-required]","(focus)","(blur)","(window:resize)","mcSelectAnimations","transformPanel","fadeInContent","McFormFieldControl","useExisting","McSelect_1","MC_OPTION_PARENT_COMPONENT","Self","Attribute","MC_SELECT_SCROLL_STRATEGY","ViewportRuler","Renderer2","ErrorStateMatcher","NgForm","FormGroupDirective","McFormField","NgControl","String","McSelect","_McSelectMixinBase","McSelectModule","McOptionModule","McIconModule","McTagModule","McFormFieldModule","McSelectTrigger","MC_SELECT_SCROLL_STRATEGY_PROVIDER","MC_SIDEPANEL_DATA","McSidepanelPosition","McSidepanelAnimationState","McSidepanelConfig","Right","hasBackdrop","requiredBackdrop","disableClose","overlayPanelClass","mcSidepanelTransformAnimation","right","in","out","left","bottom","mcSidepanelAnimations","sidepanelState","trigger","state","transform","params","transformIn","transformOut","transition","animate","AnimationCurves","AccelerationCurve","DecelerationCurve","MC_SIDEPANEL_WITH_INDENT","MC_SIDEPANEL_WITH_SHADOW","McSidepanelContainerComponent","_super","changeDetectorRef","sidepanelConfig","withIndent","withShadow","call","animationState","Void","animationStateChanged","tslib_1.__extends","attachComponentPortal","validatePortalAttached","setAnimation","setPanelClass","portalOutlet","attachTemplatePortal","enter","Visible","detectChanges","exit","Hidden","onAnimation","animationTransform","classList","add","Error","ViewChild","CdkPortalOutlet","tabindex","role","aria-modal","[@state]","(@state.start)","(@state.done)","Boolean","BasePortalOutlet","uniqueId","McSidepanelRef","containerInstance","config","afterClosed$","afterOpened$","id","filter","phaseName","toState","take","result","merge","backdropClick","keydownEvents","close","closed","detachBackdrop","afterClosed","afterOpened","MC_SIDEPANEL_DEFAULT_OPTIONS","McSidepanelService","injector","defaultOptions","parentSidepanelService","openedSidepanelsAtThisLevel","openedSidepanels","closeSidepanels","open","componentOrTemplateRef","fullConfig","getSidepanelById","container","attachContainer","ref","TemplatePortal","$implicit","sidepanelRef","createInjector","undefined","contentRef","push","removeOpenSidepanel","closeAll","find","sidepanel","openedSidepanelsWithSamePosition","getOpenedSidepanelsWithSamePosition","PortalInjector","WeakMap","length","containerPortal","sidepanelContainer","injectionTokens","overlayConfig","OverlayConfig","backdropClass","getBackdropClass","maxWidth","scrollStrategies","block","global","sidepanels","reverse","hasOpenedSidepanelWithBackdrop","index","indexOf","splice","Injectable","SkipSelf","Injector","McSidepanelClose","sidepanelService","getClosestSidepanel","ngOnChanges","changes","proxiedChange","mcSidepanelClose","sidepanelResult","currentValue","(click)","type","McSidepanelHeader","McSidepanelBody","McSidepanelFooter","McSidepanelActions","McSidepanelModule","PortalModule","McCommonModule","McSplitterComponent","renderer","areas","_gutterSize","isDragging","areaPositionDivider","listeners","_direction","gutterSize","size","coerceNumberProperty","addArea","area","order","getSize","setOrder","initialSize","setStyle","isVertical","onMouseDown","leftAreaIndex","rightAreaIndex","leftArea","rightArea","startPoint","screenX","screenY","item","disableFlex","setSize","runOutsideAngular","listen","onMouseUp","onMouseMove","removeArea","indexToRemove","endPoint","offset","newLeftAreaSize","newRightAreaSize","minLeftAreaSize","getMinSize","minRightAreaSize","rightAreaOffset","unsubscribe","pop","McGutterDirective","_order","_size","getCursor","getState","coerceCssPixelValue","setAttr","attribute","setAttribute","McSplitterAreaDirective","splitter","removeStyle","sz","getSizeProperty","getOffsetSizeProperty","getComputedStyle","parseFloat","getMinSizeProperty","McSplitterModule","nextUniqueId","McToggleBase","_elementRef","_McToggleMixinBase","mixinTabIndex","mixinColor","mixinDisabled","ThemePalette","Primary","McToggleChange","McToggleComponent","_focusMonitor","_changeDetectorRef","tabIndex","labelPosition","ariaLabel","ariaLabelledby","_uniqueId","name","_checked","_onTouchedCallback","_onChangeCallback","_","monitor","McToggleComponent_1","stopMonitoring","focus","focusVia","_inputElement","_getAriaChecked","checked","_onInteractionEvent","stopPropagation","_onLabelTextChange","_onInputClick","_updateModelValue","_emitChangeEvent","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","source","NG_VALUE_ACCESSOR","forwardRef","multi","[id]","[class.mc-toggle_off]","FocusMonitor","McToggleModule","A11yModule","Math","max","minHeight","textarea","scrollHeight","diff","McTextarea","McTextarea_1","[class.mc-textarea-resizable]","[attr.placeholder]","[disabled]","[required]","MC_TEXTAREA_VALUE_ACCESSOR","McTextareaMixinBase","McTextareaModule","FormsModule","TimeParts","TimeFormats","TIMEFORMAT_PLACEHOLDERS","HHmmss","HHmm","DEFAULT_TIME_FORMAT","HOURS_MINUTES_SECONDS_REGEXP","RegExp","HOURS_MINUTES_REGEXP","HOURS_ONLY_REGEXP","uniqueComponentIdSuffix","validatorOnChange","noop","validator","McTimepickerBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","McTimepickerMixinBase","mixinErrorState","ɵ1","validate","c","registerOnValidatorChange","McTimepicker","inputValueAccessor","focused","stateChanges","controlType","uid","_minTime","_maxTime","previousNativeValue","onChange","placeholder","valueAccessor","Validators","compose","parseValidator","minTimeValidator","maxTimeValidator","McTimepicker_1","_id","_required","applyInputChanges","_timeFormat","formatValue","map","timeFormatKey","minValue","minDateTime","getDateFromTimeString","maxValue","maxDateTime","ngDoCheck","updateErrorState","dirtyCheckNativeValue","focusChanged","isFocused","onTouched","onBlur","onPaste","preventDefault","clipboardUserInput","clipboardData","getData","onInput","initialCursorStart","selectionStart","initialCursorEnd","selectionEnd","isAutocompleteTriggered","getParsedTimeParts","hoursOnly","hoursAndMinutes","hoursAndMinutesAndSeconds","doTimestringReformat","errors","createSelectionOfTimeComponentInInput","isBadInput","onContainerClick","setProperty","getTimeStringFromDate","timeFormat","onKeyDown","getKeyCode","upDownTimeByArrowKeys","switchSelectionBetweenTimeparts","newValue","validity","badInput","applyParams","changedTime","timeToApply","currentDateTimeInput","control","updateValueAndValidity","cursorPos","modifiedTimePart","getTimeEditMetrics","incrementTime","decrementTime","getCursorPositionOfPrevTimePartStart","getCursorPositionOfNextTimePartStart","code","newEditParams","cursorStartPosition","cursorEndPosition","dateVal","whatToIncrement","seconds","getTimeDigitsFromDate","hours","minutes","getDateFromTimeDigits","whatToDecrement","timeString","timeDevider","nextDividerPos","cursorPosition","minutesIndex","hoursIndex","secondsIndex","tempVal","getNumberWithLeadingZero","getHours","getMinutes","getSeconds","match","trim","Number","resultDate","Date","isNaN","getTime","digit","mcTimepickerParse","text","isTimeLowerThenMin","mcTimepickerLowerThenMintime","isTimeGreaterThenMax","mcTimepickerHigherThenMaxtime","timeToCompare","[attr.time-format]","[attr.min-time]","[attr.max-time]","[attr.value]","(input)","(paste)","NG_VALIDATORS","useValue","MC_INPUT_VALUE_ACCESSOR","McTimepickerModule","PlatformModule","minWidth","opacity","group","query","animateChild","MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","McSelectChange","McSelectBase","_viewportRuler","_ngZone","_renderer","_dir","_parentFormField","_scrollStrategyFactory","_triggerFontSize","_optionIds","_transformOrigin","_panelDoneAnimating","_panelDoneAnimatingStream","_scrollStrategy","_offsetY","_positions","optionSelectionChanges","defer","options","apply","option","onSelectionChange","onStable","switchMap","openedChange","_openedStream","o","_closedStream","selectionChange","valueChange","hiddenItems","oneMoreText","_panelOpen","_scrollTop","_multiple","_uid","_destroy","_focused","_onChange","_onTouched","_compareWith","o1","o2","_placeholder","_selectionModel","getMcSelectDynamicMultipleError","getMcSelectNonFunctionValueError","_initializeSelection","_value","SelectionModel","multiple","panelOpen","overlayDir","offsetX","ngAfterContentInit","_initKeyManager","added","select","removed","deselect","startWith","_resetOptions","ngAfterViewInit","tags","_calculateHiddenItems","toggle","_triggerRect","getBoundingClientRect","_keyManager","withHorizontalOrientation","_calculateOverlayPosition","_highlightCorrectOption","fontSize","_isRtl","_setSelectionByValue","selected","empty","selectedOptions","viewValue","join","isEmpty","_handleKeydown","_handleOpenKeydown","_handleClosedKeydown","_onFadeInDone","_onFocus","_onBlur","_onAttached","positionChange","_calculateOverlayOffsetX","panel","scrollTop","_getPanelTheme","color","_calculateOverlayScroll","selectedIndex","scrollBuffer","maxScroll","itemHeight","_getItemHeight","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","min","onRemoveMatcherItem","visibleItems","totalItemsWidth","_getTotalItemsWidthInMatcher","totalVisibleItemsWidth","tag","offsetTop","offsetHeight","width","itemsCounter","querySelector","matcherList","itemsCounterShowed","matcherListWidth","matcherWidth","triggerClone","cloneNode","remove","appendChild","querySelectorAll","isArrowKey","DOWN_ARROW","UP_ARROW","LEFT_ARROW","RIGHT_ARROW","ENTER","SPACE","altKey","onKeydown","manager","HOME","END","setFirstItemActive","setLastItemActive","activeItem","A","ctrlKey","hasDeselectedOptions_1","previouslyFocusedIndex","activeItemIndex","shiftKey","_selectViaInteraction","Promise","resolve","then","Array","isArray","getMcSelectNonArrayValueError","_selectValue","_sortValues","correspondingOption","setActiveItem","error","isDevMode","console","warn","ActiveDescendantKeyManager","withTypeAhead","withVerticalOrientation","tabOut","_scrollActiveOptionIntoView","changedOrDestroyed","_onSelect","isUserInput","_stateChanges","_setOptionIds","wasSelected","isSelected","_propagateChanges","options_1","toArray","sort","a","b","sortComparator","fallbackValue","valueToEmit","activeOptionIndex","labelCount","_countGroupLabelsBeforeOption","optionGroups","_getOptionScrollPosition","_getOptionIndex","reduce","current","items","_getItemCount","panelHeight","scrollContainerHeight","selectedOptionOffset","_calculateOverlayOffsetY","_checkOverlayWithinViewport","overlayRect","viewportSize","getViewportSize","isRtl","first","leftOverflow","rightOverflow","round","topSpaceAvailable","bottomSpaceAvailable","height","panelHeightTop","abs","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","optionHeightAdjustment","ViewChildren","McTag","QueryList","CdkConnectedOverlay","ContentChildren","McOption","descendants","McOptgroup","ContentChild","Observable","McTabBody","PortalHostDirective","mcTabsAnimations","translateTab","McTabBodyPortal","componentFactoryResolver","viewContainerRef","centeringSub","Subscription","EMPTY","leavingSub","beforeCentering","isCenterPosition","bodyPosition","isCentering","content","afterLeavingCenter","ComponentFactoryResolver","McTabLabelWrapperBase","mcTabLabelWrapperMixinBase","McTabLabelWrapper","getOffsetLeft","offsetLeft","getOffsetWidth","offsetWidth","[attr.aria-disabled]","McTabHeaderBase","McTabHeader","viewportRuler","dir","showPaginationControls","disableScrollAfter","disableScrollBefore","selectFocusedIndex","indexFocused","_scrollDistance","selectedIndexChanged","_selectedIndex","coercedValue","keyManager","updateActiveItem","isValidIndex","focusIndex","v","getMaxScrollDistance","scrollDistanceChanged","checkScrollingControls","ngAfterContentChecked","tabLabelCount","labelWrappers","updatePagination","scrollToLabel","updateTabScrollPosition","dirChange","observableOf","resize","realign","FocusKeyManager","getLayoutDirection","withWrap","requestAnimationFrame","newFocusIndex","setTabFocus","onContentChanges","textContent","currentTextContent","zoneCallback","checkPaginationEnabled","tab","containerEl","tabListContainer","scrollLeft","scrollWidth","scrollDistance","translateX","tabList","scrollHeader","scrollDir","viewLength","labelIndex","selectedLabel","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","isEnabled","[class.mc-tab-header__pagination-controls_enabled]","[class.mc-tab-header_rtl]","McLightTabsCssStyler","McAlignTabsCenterCssStyler","McAlignTabsEndCssStyler","McStretchTabsCssStyler","nextId","McTabChangeEvent","MC_TABS_CONFIG","McTabGroupBase","mcTabGroupMixinBase","McTabGroup","lightTabs","defaultConfig","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","indexToSelect","tabBodyWrapperHeight","tabsSubscription","tabLabelSubscription","_dynamicHeight","lightTab","groupId","animationDuration","clampTabIndex","isFirstRun_1","createChangeEvent","tabs","isActive","subscribeToTabLabels","i","getTabLabelId","getTabContentId","setTabBodyWrapperHeight","tabHeight","wrapper","tabBodyWrapper","removeTabBodyWrapperHeight","handleClick","tabHeader","getTabIndex","McTab","[class.mc-tab-group_dynamic-height]","[class.mc-tab-group_inverted-header]","McTabNavBase","mcTabNavMixinBase","McTabNav","McTabLinkBase","mcTabLinkMixinBase","McTabLink","focusMonitor","[attr.aria-current]","[attr.tabIndex]","[class.mc-active]","McTabsModule","McTabLabel","McTabContent","McTagBase","_McTagMixinBase","_addClassModificatorForIcons","icons","contentChildren","iconElement","previousElementSibling","nextElementSibling","nextSibling","previousSibling","firstIconElement","secondIconElement","McIcon","McTextareaBase","canGrow","lineHeight","freeRowsHeight","growObserver","fromEvent","growSubscription","grow","bind","paddingTop","paddingBottom","outerHeight","window","getGrowHeight","toString","McNavbar","McNavbarModule","McNavbarContainer","McNavbarTitle","McNavbarItem","McNavbarBrand","McNavbarLogo","idIterator","McProgressBarBase","_McProgressBarMixinBase","McProgressBar","mode","McProgressBarModule","McProgressSpinnerBase","_McProgressSpinnerMixinBase","McProgressSpinner","percentage","McProgressSpinnerModule","McRadioChange","McRadioGroupBase","_McRadioGroupMixinBase","MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","McRadioGroup","_changeDetector","_name","_selected","_isInitialized","_labelPosition","controlValueAccessorChangeFn","updateRadioButtonNames","markRadiosForCheck","updateSelectedRadioFromValue","checkSelectedRadioButton","toBoolean","touch","emitChangeEvent","_radios","radio","isAlreadySelected","McRadioButton","McRadioButtonBase","_McRadioButtonMixinBase","radioGroup","_radioDispatcher","removeUniqueSelectionListener","newCheckedState","notify","newDisabledState","required","onInputClick","onInputChange","groupValueChanged","[class.mc-checked]","UniqueSelectionDispatcher","McRadioModule","McTreeNodeDef","McTreeNodeDef_1","CdkTreeNodeDef","McTreeNodePadding","arguments","_baseLeftPadding","_iconWidth","_indent","McTreeNodePadding_1","_withIcon","_paddingIndent","nodeLevel","_treeNode","_tree","treeControl","getLevel","level","_level","leftPadding","isExpandable","_setPadding","CdkTreeNodePadding","McTreeNodeOption","treeSelection","_hasFocus","McTreeNodeOption_1","setSelected","setFocusedOption","_getHeight","getClientRects","_handleFocus","_handleBlur","_handleClick","[class.mc-selected]","[class.mc-focused]","[attr.aria-expanded]","[attr.aria-level]","CdkTreeNode","McTreeSelection","_McTreeSelectionBase","CdkTree","McTreeNavigationChange","McTreeSelectionChange","_differs","autoSelect","noUnselect","navigationChange","McTreeSelection_1","rawValue","log","_onKeyDown","withShift","withCtrl","collapse","expand","toggleFocusedOption","PAGE_UP","setPreviousPageItemActive","PAGE_DOWN","setNextPageItemActive","updateScrollSize","withScrollSize","floor","previousIndex_1","previousActiveItemIndex","activeIndex_1","_canDeselectLast","_emitNavigationEvent","focusedIndex","_isValidIndex","focusedOption","renderNodeChanges","dataDiffer","viewContainer","parentData","_dataDiffer","_nodeOutlet","arrayOfInstances","_embeddedViews","view","viewDef","def","nodes","node","nodeMatchedQueries","matchedQueryIds","nodeData","nodeIndex","reset","notifyOnChanges","CdkTreeNodeOutlet","[tabIndex]","IterableDiffers","MC_TREE_DIRECTIVES","McTreeModule","CdkTreeModule","McTreeFlattener","transformFunction","getChildren","_flattenNode","resultNodes","parentMap","flatNode","children","child","childParentMap","flattenNodes","structuredData","expandFlattenedNodes","results","currentExpand","isExpanded","McTreeFlatDataSource","treeFlattener","initialData","_flattenedData","_expandedData","_data","dataNodes","connect","collectionViewer","viewChange","expansionModel","disconnect","DataSource","McTreeNestedDataSource","CdkPortal","ctorParameters","McTabBase","mcTabMixinBase","textLabel","contentPortal","hasOwnProperty","explicitContent","implicitContent","read","onCentering","onCentered","dirChangeSubscription","computePositionAnimationState","positionIndex","computePositionFromOrigin","onTranslateTabStarted","onTranslateTabComplete","fromState","McModalControlService","parentService","openModals","rootOpenModals","registeredMetaMap","rootRegisteredMetaMap","registerModal","modalRef","hasRegistered","afterOpenSubscription","afterOpen","afterCloseSubscription","afterClose","removeOpenModal","has","afterAllClose","McModalRef","ModalUtil","document","lastPosition","listenDocumentClick","getLastClickPosition","clientX","clientY","ModalUtil$1","McModalComponent","cfr","mcMeasureScrollbarService","modalControl","changeDetector","mcModalType","mcZIndex","mcWidth","mcCloseByESC","_mcClosable","_mcMask","_mcMaskClosable","mcAfterOpen","mcAfterClose","mcOkType","_mcOkLoading","mcOnOk","_mcCancelLoading","mcOnCancel","transformOrigin","mcGetContainer","mcOkText","mcCancelText","isComponent","mcContent","createDynamicComponent","isModalButtons","mcFooter","formatModalButtons","HTMLElement","OverlayRef","handleVisibleStateChange","firstChange","contentComponentRef","bodyContainer","insert","autoFocusButtonOk","changeVisibleFromInside","destroy","triggerOk","onClickOkCancel","triggerCancel","getInstance","getContentComponentRef","getContentComponent","getElement","onClickMask","mcMask","mcMaskClosable","target","contains","isModalType","onClickCloseBtn","ok","cancel","loadingKey","caseClose_1","doClose","isPromise","handleThen","catch","isNonEmptyString","isTemplateRef","Type","animation","closeResult","changeBodyOverflow","animateTo","getButtonCallableProp","prop","args","onButtonClick","button","loading","changeAnimationState","maskAnimationClassMap","modalAnimationClassMap","_b","isVisible","updateTransformOrigin","buttons","autoLoading","component","factory","resolveComponentFactory","childInjector","parent","parentInjector","mcComponentParams","assign","modalElement","modalContainer","plusNum","body","scrollBarWidth","DOCUMENT","McMeasureScrollbarService","CssUnitPipe","defaultUnit","formatted","Pipe","ModalBuilderForService","createModal","changeProps","destroyModal","McModalService","confirm","confirmType","mcClassName","success","simpleConfirm","delete","McModalModule","McButtonModule","MC_NAVBAR_CONTAINER","MC_NAVBAR_ITEM","MC_NAVBAR_BRAND","MC_NAVBAR_TITLE","McNavbarItemBase","_McNavbarMixinBase","_platform","_cdRef","dropdownItems","isCollapsed","_subscription","encodeURI","dropdownContent","denyClickIfDisabled","_focusMonitor$","hasDropdownContent","listenClickOutside","startListenFocusDropdownItems","stopListenFocusDropdownItems","isActiveDropdownLink","link","isBrowser","location","href","handleClickByItem","toggleDropdown","isNavbarItem","handleClickByDropdownItem","forceCloseDropdown","_dropdownElements","el","events","eventListeners","hasAttribute","stopImmediatePropagation","[attr.disabled]","Platform","CollapsibleItem","_collapsed","processCollapsed","collapsed","updateCollapsedClass","CachedItemWidth","itemsForCollapse","_collapsedItemsWidth","calculateAndCacheCollapsedItemsWidth","updateTitle","acc","getTitle","computedTitle","getAttribute","decodeURI","innerText","removeAttribute","forceRecalculateItemsWidth","resizeDebounceInterval","firstLevelElement","secondLevelElements","resizeObserver","debounceTime","_resizeSubscription","updateCollapsed","_itemsWidths","calculateAndCacheItemsWidth","_totalItemsWidths","calculateAndCacheTotalItemsWidth","collapseDelta","maxAllowedWidth","itemsWidths","canCollapse","collapsedItemsWidth","getOuterElementWidth","getPropertyValue","allItemsSelector","allItems","from","getItemsForCollapse","McDropdown","resetActiveItem","addItem","_items","_itemChanges","removeItem","setPositionClasses","posX","posY","xPosition","yPosition","classes","_classList","_startAnimation","_panelAnimationState","_resetAnimation","_onAnimationDone","_animationDone","_isAnimating","McDropdownItem","McDropdownContent","McDropdown_1","mcDropdownAnimations","transformDropdown","fadeInItems","MC_DROPDOWN_PANEL","MC_DROPDOWN_DEFAULT_OPTIONS","MC_DROPDOWN_SCROLL_STRATEGY","MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER","MC_DROPDOWN_SCROLL_STRATEGY_FACTORY","McDropdownTrigger","_overlay","_element","_viewContainerRef","_openedBy","dropdownOpened","dropdownClosed","_overlayRef","_opened","_closeSubscription","_hoverSubscription","dropdown","_check","_cleanUpSubscriptions","_createOverlay","_setPosition","_portal","lazyContent","_closingActions","_init","opened","_attached","_reset","_setIsOpened","focusFirstItem","isOpen","throwMcDropdownMissingError","templateRef","_getOverlayConfig","_subscribeToPositions","withLockedPosition","originFallbackX","overlayFallbackY","_c","originFallbackY","_d","overlayFallbackX","overlapTrigger","offsetY","backdrop","(touchstart)","McDropdownModule","McContentComponent","[class.mc-layout-content]","McFooterComponent","[class.mc-layout-footer]","McHeaderComponent","[class.mc-layout-header]","McLayoutComponent","hasSidebar","[class.mc-layout]","[class.mc-layout-has-sidebar]","McSidebarComponent","mcLayoutComponent","_mcWidth","mcCollapsedWidth","mcCollapsedChange","collapsible","mcCollapsed","[class.mc-layout-sidebar]","[class.mc-layout-sidebar-collapsed]","[style.flex]","[style.max-width.px]","[style.min-width.px]","[style.width.px]","Host","McLayoutModule","McListOption","listSelection","checkboxPosition","_reportValueChange","wasSelected_1","_lineSetter","McLineSetter","_lines","_removeOptionFromList","getLabel","_text","_getHostElement","McLine","McListSelection","MC_SELECTION_LIST_VALUE_ACCESSOR","McListSelectionChange","McListSelectionBase","_McListSelectionMixinBase","horizontal","_modelChanges","_tempValues","_setOptionsFromValues","_i","selectAll","deselectAll","values","getSelectedOptionValues","listOption","optionIndex","setPreviousItemActive","setNextItemActive","_getOptionByValue","McListBase","McList","McListSubheaderCssStyler","McListItemBase","McListItem","McListModule","McLineModule","McLinkBase","_McLinkBase","McLink","McLinkModule","rootAfterAllClose","activeDate","startAt","dateAdapter","today","_currentView","startView","McCalendar","ngAfterViewChecked","moveFocusOnNextTick","focusActiveCell","intlChanges","minDate","maxDate","dateFilter","getCurrentViewComponent","init","updateTodaysDate","currentView","monthView","yearView","multiYearView","dateSelected","date","sameDate","selectedChange","yearSelectedInMultiYearView","normalizedYear","yearSelected","monthSelectedInYearView","normalizedMonth","monthSelected","userSelected","userSelection","goToDateInView","getValidDateOrNull","obj","isDateInstance","isValid","McMonthView","McYearView","McMultiYearView","MC_DATE_FORMATS","McDatepickerIntl","DateAdapter","mcDatepickerAnimations","fadeInCalendar","Element","matches","msMatchesSelector","datepickerUid","MC_DATEPICKER_SCROLL_STRATEGY","MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER","MC_DATEPICKER_SCROLL_STRATEGY_FACTORY","McDatepickerContentBase","McDatepickerContentMixinBase","McDatepickerContent","calendar","[@transformPanel]","McDatepicker","openedStream","closedStream","disabledChange","selectedChanged","validSelected","focusedElementBeforeOpen","inputSubscription","createMissingDateImplError","McDatepicker_1","_startAt","datepickerInput","deserialize","_color","getThemePalette","popupRef","popupComponentRef","oldValue","selectYear","selectMonth","registerInput","input","activeElement","openAsPopup","calendarPortal","isAttached","completeClose","createPopup","datepicker","setColor","createPopupPositionStrategy","MC_DATEPICKER_VALUE_ACCESSOR","McDatepickerInput","MC_DATEPICKER_VALIDATORS","McDatepickerInputEvent","targetElement","dateFormats","formField","dateChange","dateInput","datepickerSubscription","localeSubscription","lastValueValid","cvaOnChange","mcDatepickerParse","minValidator","controlValue","compareDate","mcDatepickerMin","actual","maxValidator","mcDatepickerMax","filterValidator","mcDatepickerFilter","localeChanges","McDatepickerInput_1","oldDate","_min","_max","blur","isAltDownArrow","readOnly","parse","format","display","[attr.aria-haspopup]","[attr.aria-owns]","[attr.min]","[attr.max]","(change)","McDatepickerToggleIcon","McDatepickerToggle","intl","defaultTabIndex","parsedTabIndex","watchStateChanges","datepickerDisabled","inputDisabled","datepickerToggled","McButton","[class.mc-datepicker-toggle_active]","[class.mc-warn]","McDatepickerModule","McCalendarBody","McCalendarHeader","McDivider","_vertical","_inset","[attr.aria-orientation]","[class.mc-divider-vertical]","[class.mc-divider-inset]","McDividerModule","_template","_componentFactoryResolver","_appRef","_injector","_document","context","_outlet","DomPortalOutlet","createElement","parentNode","insertBefore","outletElement","ApplicationRef","McDropdownItemBase","_McDropdownItemMixinBase","_parentDropdownPanel","_getTabIndex","_checkDisabled","textNodeType","TEXT_NODE","output","childNodes","length_1","nodeType","providedIn","MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY","_defaultOptions","_xPosition","_yPosition","_tabSubscription","_overlapTrigger","_hasBackdrop","throwMcDropdownInvalidPositionX","throwMcDropdownInvalidPositionY","className","setFocusOrigin","McInputMono","MIN_VALIDATOR","MinValidator","_createValidator","_validator","MAX_VALIDATOR","MaxValidator","McInputModule","McInput","McNumberInput","calendarLabel","openCalendarLabel","prevMonthLabel","nextMonthLabel","prevYearLabel","nextYearLabel","prevMultiYearLabel","nextMultiYearLabel","switchToMonthViewLabel","switchToMultiYearViewLabel","McCalendarCell","displayValue","enabled","cssClasses","numCols","activeCell","cellAspectRatio","selectedValueChange","cellClicked","cell","columnChanges","rows","firstRowOffset","cellPadding","cellWidth","isActiveCell","rowIndex","colIndex","cellNumber","aria-readonly","activeDateChange","firstDayOfWeek","getFirstDayOfWeek","narrowWeekdays","getDayOfWeekNames","longWeekdays","weekdays","long","narrow","concat","_activeDate","oldActiveDate","validDate","clampDate","hasSameMonthAndYear","selectedDate","getDateInCurrentMonth","_minDate","_maxDate","selectedYear","getYear","selectedMonth","getMonth","createDate","handleCalendarBodyKeydown","addCalendarDays","getDate","getNumDaysInMonth","addCalendarYears","addCalendarMonths","todayDate","monthLabel","getMonthNames","toLocaleUpperCase","substr","firstOfMonth","firstWeekOffset","getDayOfWeek","createWeekCells","mcCalendarBody","daysInMonth","dateNames","getDateNames","weeks","shouldEnableDate","dateA11yLabel","cellClasses","dateClass","d1","d2","todayYear","activeYear","activeOffset","years","row","year","createCellForYear","onYearSelected","month","yearsPerPage","getActiveCell","yearName","getYearName","shouldEnableYear","firstOfYear","getMonthInCurrentYear","onMonthSelected","normalizedDate","todayMonth","yearLabel","monthNames","months","createCellForMonth","monthName","monthYearA11yLabel","newMonthName","shouldEnableMonth","isYearAndMonthAfterMaxDate","isYearAndMonthBeforeMinDate","maxYear","maxMonth","minYear","minMonth","label","monthYearLabel","multi-year","currentPeriodClicked","previousClicked","nextClicked","previousEnabled","isSameView","nextEnabled","date1","date2","clampedActiveDate","calendarHeaderPortal","headerComponent","McIconButton","McAnchor","McButtonCSSStyler","McIconButtonCSSStyler","McCard","readonly","_tabIndex","hostElement","onClick","[class.mc-card_readonly]","[class.mc-card_selected]","McCardModule","MC_CHECKBOX_CLICK_ACTION","MC_CHECKBOX_CONTROL_VALUE_ACCESSOR","McCheckbox","TransitionCheckState","McCheckboxChange","McCheckboxBase","_McCheckboxMixinBase","_clickAction","indeterminateChange","_currentAnimationClass","_currentCheckState","Init","_controlValueAccessorChangeFn","_indeterminate","focusOrigin","_onInputFocusChange","changed","_transitionCheckState","Indeterminate","Checked","Unchecked","indeterminate","newState","oldState","[class.mc-indeterminate]","[class.mc-checkbox-label-before]","MC_CHECKBOX_REQUIRED_VALIDATOR","McCheckboxRequiredValidator","[attr.required]","CheckboxRequiredValidator","McCheckboxModule","McCleaner","McFormFieldNumberControl","McHint","McPrefix","McStepper","stepUp","stepDown","onStepUp","onStepDown","McSuffix","McFormFieldBase","_McFormFieldMixinBase","_labelId","hovered","_validateControlChild","_control","_numberControl","hasStepper","_stepper","valueChanges","clearValue","hasCleaner","onHoverChanged","isHovered","step","_shouldForward","getMcFormFieldMissingControlError","_hint","_suffix","_prefix","_cleaner","[class.mc-form-field_invalid]","[class.mc-form-field_has-prefix]","[class.mc-form-field_has-suffix]","[class.mc-form-field_has-cleaner]","[class.mc-form-field_has-stepper]","[class.ng-untouched]","[class.ng-touched]","[class.ng-pristine]","[class.ng-dirty]","[class.ng-valid]","[class.ng-invalid]","[class.ng-pending]","(mouseenter)","(mouseleave)","McFormFieldWithoutBorders","res","MC_INPUT_INVALID_TYPES","BIG_STEP","SMALL_STEP","McInputBase","_McInputMixinBase","_model","bigStep","isDigit","Infinity","_host","self","getPrototypeOf","normalizeSplitter","McNumberInput_1","_focusChanged","minuses","NUMPAD_MINUS","DASH","FF_MINUS","serviceKeys","DELETE","BACKSPACE","TAB","arrows","allowedKeys","isIEPeriod","isNotIEPeriod","metaKey","C","V","X","F1","F12","EDGE","TRIDENT","ZERO","NINE","NUMPAD_ZERO","NUMPAD_NINE","valueAsNumber","update","replace","isFloat","isInt","test","NgModel","_type","_neverEmptyInputTypes","t","getSupportedInputTypes","_inputValueAccessor","_previousNativeValue","McInput_1","_validateType","_dirtyCheckNativeValue","_onInput","_isNeverEmpty","_isBadInput","getMcInputUnsupportedTypeError","__extends","d","__","constructor","extendStatics","__decorate","decorators","desc","r","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","isBoolean","val","MC_SANITY_CHECKS_FACTORY","base","class_1","defaultColor","Default","colorPalette","errorState","matcher","errorStateMatcher","isErrorState","optionsArray","groups","groupCounter","optionHeight","currentScrollPosition","optionOffset","arrayMap","array","iteratee","baseValues","object","props","inputType","sanitizeNumber","isFinite","getPrecision","arr","pow","value1","value2","precision","provider","reposition","openSidepanels","parentElement","scrollThrottle","setPrototypeOf","__proto__","p","__assign","s","n","MC_SANITY_CHECKS","_sanityChecksEnabled","_hasDoneGlobalChecks","_window","_areChecksEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","_isTestEnv","doctype","testElement","computedStyle","removeChild","BidiModule","_setLineClass","count","_resetClasses","_setClass","isAdd","ShowOnDirtyErrorStateMatcher","form","invalid","dirty","submitted","touched","McPseudoCheckbox","McPseudoCheckboxModule","scrollbarMeasure","overflow","initScrollBarWidth","_scrollbarWidth","scrollDiv","scrollProp","clientWidth","McOptgroupBase","_McOptgroupMixinBase","_uniqueOptgroupIdCounter","[class.mc-optgroup-disabled]","[attr.aria-labelledby]","_uniqueIdCounter","McOptionSelectionChange","_parent","_active","_mostRecentViewValue","disableRipple","_emitSelectionChangeEvent","setActiveStyles","setInactiveStyles","[class.mc-option-multiple]","MC_LABEL_GLOBAL_OPTIONS","topCenter","topLeft","topRight","rightTop","rightBottom","bottomCenter","bottomLeft","bottomRight","leftTop","leftBottom","McIconCSSStyler","McIconBase","_McIconMixinBase","Empty","iconName","queries","McButtonBase","_McButtonMixinBase","_haltDisabledEvents"],"mappings":"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"}