{"version":3,"file":"mosaic.umd.min.js","sources":["../../src/lib/tooltip/tooltip.component.ts","../../src/lib/tooltip/tooltip.module.ts","../../src/lib/version.ts","../../src/lib/timepicker/timepicker.constants.ts","../../src/lib/select/select.component.ts","../../src/lib/select/select.module.ts","../../src/lib/splitter/splitter.component.ts","../../src/lib/splitter/splitter.module.ts","../../src/lib/toggle/toggle.component.ts","../../src/lib/toggle/toggle.module.ts","../../src/lib/tree/tree-selection.ts","../../src/lib/tree/tree.module.ts","../../src/lib/tree/data-source/flat-data-source.ts","../../src/lib/tree/data-source/nested-data-source.ts","../../src/lib/tag/tag.component.ts","../../src/lib/tag/tag.module.ts","../../src/lib/textarea/textarea.component.ts","../../src/lib/textarea/textarea.module.ts","../../src/lib/timepicker/timepicker.ts","../../src/lib/timepicker/timepicker.module.ts","../../src/lib/select/select-animations.ts","../../src/lib/navbar/navbar.component.ts","../../src/lib/navbar/navbar.module.ts","../../src/lib/progress-bar/progress-bar.component.ts","../../src/lib/progress-bar/progress-bar.module.ts","../../src/lib/progress-spinner/progress-spinner.component.ts","../../src/lib/progress-spinner/progress-spinner.module.ts","../../src/lib/radio/radio.component.ts","../../src/lib/radio/radio.module.ts","../../src/lib/tree/node.ts","../../src/lib/tree/padding.ts","../../src/lib/list/list-selection.component.ts","../../src/lib/list/list.component.ts","../../src/lib/list/list.module.ts","../../src/lib/link/link.component.ts","../../src/lib/link/link.module.ts","../../src/lib/modal/modal-control.service.ts","../../src/lib/modal/modal-ref.class.ts","../../src/lib/modal/modal-util.ts","../../src/lib/modal/modal.component.ts","../../src/lib/modal/css-unit.pipe.ts","../../src/lib/modal/modal.service.ts","../../src/lib/modal/modal.module.ts","../../src/lib/form-field/form-field.ts","../../src/lib/form-field/form-field.module.ts","../../src/lib/input/input-value-accessor.ts","../../src/lib/input/stepperUtils.ts","../../src/lib/input/input.ts","../../src/lib/input/input-number-validators.ts","../../src/lib/input/input.module.ts","../../src/lib/layout/content.component.ts","../../src/lib/layout/footer.component.ts","../../src/lib/layout/header.component.ts","../../src/lib/layout/layout.component.ts","../../src/lib/layout/sidebar.component.ts","../../src/lib/layout/layout.module.ts","../../src/lib/button/button.component.ts","../../src/lib/button/button.module.ts","../../src/lib/card/card.component.ts","../../src/lib/card/card.module.ts","../../src/lib/checkbox/checkbox-config.ts","../../src/lib/checkbox/checkbox.ts","../../src/lib/checkbox/checkbox-required-validator.ts","../../src/lib/checkbox/checkbox-module.ts","../../src/lib/divider/divider.component.ts","../../src/lib/divider/divider.module.ts","../../src/lib/dropdown/dropdown-content.ts","../../src/lib/dropdown/dropdown-panel.ts","../../src/lib/dropdown/dropdown-item.ts","../../src/lib/dropdown/dropdown-animations.ts","../../src/lib/dropdown/dropdown.component.ts","../../src/lib/dropdown/dropdown-trigger.ts","../../src/lib/dropdown/dropdown.module.ts","../../src/lib/form-field/cleaner.ts","../../src/lib/form-field/form-field-control.ts","../../src/lib/form-field/form-field-number-control.ts","../../src/lib/form-field/hint.ts","../../src/lib/form-field/prefix.ts","../../src/lib/form-field/stepper.ts","../../src/lib/form-field/suffix.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/utils/utils.ts","../../src/lib/core/common-behaviors/common-module.ts","../../src/lib/core/common-behaviors/disabled.ts","../../src/lib/core/common-behaviors/color.ts","../../src/lib/core/common-behaviors/tabindex.ts","../../src/lib/core/common-behaviors/error-state.ts","../../src/lib/core/option/option.ts","../../src/lib/core/overlay/overlay-position-map.ts","../../src/lib/dropdown/dropdown-errors.ts","../../src/lib/form-field/form-field-errors.ts","../../src/lib/input/input-errors.ts","../../src/lib/select/select-errors.ts","../../src/lib/core/line/line.ts","../../src/lib/core/error/error-options.ts","../../src/lib/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../src/lib/core/selection/index.ts","../../src/lib/core/services/measure-scrollbar.service.ts","../../src/lib/core/option/optgroup.ts","../../src/lib/core/option/index.ts","../../src/lib/core/label/label-options.ts","../../src/lib/core/animation/fade-animations.ts","../../src/lib/icon/icon.component.ts","../../src/lib/icon/icon.module.ts"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    TemplateRef,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport {\n    ConnectedOverlayPositionChange,\n    ConnectionPositionPair,\n    Overlay,\n    OverlayRef,\n    ScrollDispatcher,\n    IScrollStrategy,\n    FlexibleConnectedPositionStrategy,\n    IOverlayConnectionPosition,\n    IOriginConnectionPosition,\n    HorizontalConnectionPos,\n    VerticalConnectionPos\n} from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\nimport {\n    fadeAnimation,\n    DEFAULT_4_POSITIONS,\n    POSITION_MAP\n} from '@ptsecurity/mosaic/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\n\n@Component({\n    selector: 'mc-tooltip',\n    animations: [ fadeAnimation ],\n    templateUrl: './tooltip.component.html',\n    preserveWhitespaces: false,\n    styleUrls: ['./tooltip.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '(body:click)': 'this._handleBodyInteraction()'\n    }\n})\n\nexport class McToolTipComponent {\n    _prefix = 'mc-tooltip_placement';\n    _positions: ConnectionPositionPair[] = [ ...DEFAULT_4_POSITIONS ];\n    _classMap = {};\n    _placement = 'top';\n    _trigger = 'hover';\n    isTitleString: boolean;\n    visibleSource = new BehaviorSubject<boolean>(false);\n    $visible: Observable<boolean> = this.visibleSource.asObservable();\n    _title: string | TemplateRef<void>;\n    showTId: number;\n    hideTId: number;\n    availablePositions: any;\n\n    @Output() mcVisibleChange: EventEmitter<boolean> = new EventEmitter();\n\n    @Input() mcMouseEnterDelay = 400;\n\n    @Input() mcMouseLeaveDelay = 0;\n\n    @Input()\n    set mcTitle(value: string | TemplateRef<void>) {\n        this.isTitleString = !(value instanceof TemplateRef);\n\n        if (this.isTitleString) {\n            this._title = value;\n        }\n    }\n\n    get mcTitle(): string | TemplateRef<void> {\n        return this._title;\n    }\n\n    @Input()\n    set mcVisible(value: boolean) {\n        const visible = coerceBooleanProperty(value);\n\n        if (this.visibleSource.value !== visible) {\n            this.visibleSource.next(visible);\n            this.mcVisibleChange.emit(visible);\n        }\n    }\n\n    get mcVisible(): boolean {\n        return this.visibleSource.value;\n    }\n\n    @Input()\n    set mcTrigger(value: string) {\n        this._trigger = value;\n    }\n\n    get mcTrigger(): string {\n        return this._trigger;\n    }\n\n    @Input()\n    set mcPlacement(value: string) {\n        if (value !== this._placement) {\n            this._placement = value;\n            this._positions.unshift(POSITION_MAP[ this.mcPlacement ]);\n        } else if (!value) {\n            this._placement = 'top';\n        }\n    }\n    get mcPlacement(): string {\n        return this._placement;\n    }\n\n    /** Subject for notifying that the tooltip has been hidden from the view */\n    private readonly _onHide: Subject<any> = new Subject();\n    private _closeOnInteraction: boolean = false;\n\n    constructor(public cdr: ChangeDetectorRef) {\n        this.availablePositions = POSITION_MAP;\n    }\n\n    show(): void {\n        if (this.hideTId) {\n            clearTimeout(this.hideTId);\n        }\n\n        if (!this.isContentEmpty()) {\n            this._closeOnInteraction = true;\n            this.showTId = setTimeout(() => {\n                this.mcVisible = true;\n                this.mcVisibleChange.emit(true);\n\n                // Mark for check so if any parent component has set the\n                // ChangeDetectionStrategy to OnPush it will be checked anyways\n                this._markForCheck();\n            }, this.mcMouseEnterDelay);\n        }\n    }\n\n    hide(): void {\n        if (this.showTId) {\n            clearTimeout(this.showTId);\n        }\n\n        this.hideTId = setTimeout(() => {\n            this.mcVisible = false;\n            this.mcVisibleChange.emit(false);\n            this._onHide.next();\n\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }, this.mcMouseLeaveDelay);\n    }\n\n    setClassMap(): void {\n        this._classMap = {\n            [ `${this._prefix}-${this._placement}` ]: true\n        };\n    }\n\n    isContentEmpty(): boolean {\n        return this.isTitleString ? (this.mcTitle === '' || !this.mcTitle) : false;\n    }\n\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden(): Observable<void> {\n        return this._onHide.asObservable();\n    }\n\n    _markForCheck(): void {\n        this.cdr.markForCheck();\n    }\n\n    _handleBodyInteraction(): void {\n        if (this._closeOnInteraction) {\n            this.hide();\n        }\n    }\n}\n\nexport const MC_TOOLTIP_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-tooltip-scroll-strategy');\n\n/** @docs-private */\nexport function MC_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition({scrollThrottle: 20});\n}\n\n/** @docs-private */\nexport const MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_TOOLTIP_SCROLL_STRATEGY_FACTORY\n};\n\n/** Creates an error to be thrown if the user supplied an invalid tooltip position. */\nexport function getMcTooltipInvalidPositionError(position: string) {\n    return Error(`McTooltip position \"${position}\" is invalid.`);\n}\n\nconst VIEWPORT_MARGIN: number = 8;\n\n@Directive({\n    selector: '[mc-tooltip]',\n    host: {\n        '(keydown)': 'handleKeydown($event)',\n        '(touchend)': 'handleTouchend()'\n    }\n})\n\nexport class McTooltipDirective implements OnInit, OnDestroy {\n    isTooltipOpen: boolean = false;\n    isDynamicTooltip = false;\n    parentDisabled: boolean = false;\n    _title: string;\n    _disabled: boolean = false;\n    _mouseEnterDelay: number;\n    _mouseLeaveDelay: number;\n    _visible: boolean;\n    _trigger: string = 'hover';\n    _placement: string = 'top';\n    _overlayRef: OverlayRef | null;\n    _portal: ComponentPortal<McToolTipComponent>;\n    availablePositions: any;\n    tooltip: McToolTipComponent | null;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n    private $unsubscribe = new Subject<void>();\n\n    @Input('mc-tooltip')\n    set mcTitle(title: string) {\n        this._title = title;\n        this.updateCompValue('mcTitle', title);\n    }\n\n    get mcTitle(): string {\n        return this._title;\n    }\n\n    @Input('mcTitle')\n    set setTitle(title: string) {\n        this.mcTitle = title;\n    }\n\n    @Input('mcTooltipDisabled')\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    @Input('mcMouseEnterDelay')\n    set mcMouseEnterDelay(value: number) {\n        this._mouseEnterDelay = value;\n        this.updateCompValue('mcMouseEnterDelay', value);\n    }\n\n    get mcMouseEnterDelay(): number {\n        return this._mouseEnterDelay;\n    }\n\n    @Input('mcMouseLeaveDelay')\n    set mcMouseLeaveDelay(value: number) {\n        this._mouseLeaveDelay = value;\n        this.updateCompValue('mcMouseLeaveDelay', value);\n    }\n\n    get mcMouseLeaveDelay(): number {\n        return this._mouseEnterDelay;\n    }\n\n    @Input('mcVisible')\n    set mcVisible(value: boolean) {\n        this._visible = value;\n        this.updateCompValue('mcVisible', value);\n    }\n\n    get mcVisible(): boolean {\n        return this._visible;\n    }\n\n    @Input('mcTrigger')\n    set mcTrigger(value: string) {\n        this._trigger = value;\n        this.updateCompValue('mcTrigger', value);\n    }\n\n    get mcTrigger(): string {\n        return this._trigger;\n    }\n\n    @Input('mcPlacement')\n    set mcPlacement(value: string) {\n        if (value) {\n            this._placement = value;\n            this.updateCompValue('mcPlacement', value);\n        } else {\n            this._placement = 'top';\n        }\n    }\n\n    get mcPlacement(): string {\n        return this._placement;\n    }\n\n    @HostBinding('class.mc-tooltip-open')\n    get isOpen(): boolean {\n        return this.isTooltipOpen;\n    }\n\n    @HostBinding('class.disabled')\n    get isParentDisabled(): boolean {\n        return this.parentDisabled;\n    }\n\n    private manualListeners = new Map<string, EventListenerOrEventListenerObject>();\n    private readonly _destroyed = new Subject<void>();\n\n    constructor(\n        private _overlay: Overlay,\n        private elementRef: ElementRef,\n        private _ngZone: NgZone,\n        private _scrollDispatcher: ScrollDispatcher,\n        private hostView: ViewContainerRef,\n        @Inject(MC_TOOLTIP_SCROLL_STRATEGY) private _scrollStrategy,\n        @Optional() private _dir: Directionality) {\n            this.availablePositions = POSITION_MAP;\n        }\n\n    /** Create the overlay config and position strategy */\n    _createOverlay(): OverlayRef {\n        if (this._overlayRef) {\n            return this._overlayRef;\n        }\n\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this.elementRef)\n            .withTransformOriginOn('.mc-tooltip')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(VIEWPORT_MARGIN)\n            .withPositions([ ...DEFAULT_4_POSITIONS ]);\n\n        const scrollableAncestors = this._scrollDispatcher\n            .getAncestorScrollContainers(this.elementRef);\n\n        strategy.withScrollableContainers(scrollableAncestors);\n\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe((change) => {\n            if (this.tooltip) {\n                this.onPositionChange(change);\n                if (change.scrollableViewProperties.isOverlayClipped && this.tooltip.mcVisible) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run(() => this.hide());\n                }\n            }\n        });\n\n        this._overlayRef = this._overlay.create({\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: 'mc-tooltip-panel',\n            scrollStrategy: this._scrollStrategy()\n        });\n\n        this._updatePosition();\n\n        this._overlayRef.detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n\n        return this._overlayRef;\n    }\n\n    _detach() {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n\n        this.tooltip = null;\n    }\n\n    onPositionChange($event: ConnectedOverlayPositionChange): void {\n        let updatedPlacement = this.mcPlacement;\n        Object.keys(this.availablePositions).some((key) => {\n            if ($event.connectionPair.originX === this.availablePositions[key].originX &&\n                $event.connectionPair.originY === this.availablePositions[key].originY &&\n                $event.connectionPair.overlayX === this.availablePositions[key].overlayX &&\n                $event.connectionPair.overlayY === this.availablePositions[key].overlayY) {\n                updatedPlacement = key;\n\n                return true;\n            }\n\n            return false;\n        });\n        this.updateCompValue('mcPlacement', updatedPlacement);\n\n        if (this.tooltip) {\n            this.tooltip.setClassMap();\n        }\n\n        this.handlePositioningUpdate();\n    }\n\n    handlePositioningUpdate() {\n        if (!this._overlayRef) {\n            this._overlayRef = this._createOverlay();\n        }\n        if (this.mcPlacement === 'right' || this.mcPlacement === 'left') {\n            const pos =\n                (this._overlayRef.overlayElement.clientHeight -\n                    this.hostView.element.nativeElement.clientHeight) / 2; // tslint:disable-line\n            const currentContainer = this._overlayRef.overlayElement.style.top || '0px';\n            this._overlayRef.overlayElement.style.top =\n                `${parseInt(currentContainer.split('px')[0], 10) + pos - 1}px`;\n            // TODO: обновлять положение стрелки\\указателя\\\"дятла\"\n        }\n    }\n\n    // tslint:disable-next-line:no-any\n    updateCompValue(key: string, value: any): void {\n        if (this.isDynamicTooltip && value) {\n            if (this.tooltip) {\n                this.tooltip[key] = value;\n            }\n        }\n    }\n\n    ngOnInit(): void {\n        if (this.mcTrigger === 'hover') {\n\n            this.manualListeners\n                .set('mouseenter', () => this.show())\n                .set('mouseleave', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n\n        if (this.mcTrigger === 'focus') {\n\n            this.manualListeners\n                .set('focus', () => this.show())\n                .set('blur', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n    }\n\n    ngOnDestroy(): void {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n        this.manualListeners.forEach((listener, event) =>\n            this.elementRef.nativeElement.removeEventListener(event, listener));\n        this.manualListeners.clear();\n\n        this.$unsubscribe.next();\n        this.$unsubscribe.complete();\n    }\n\n    handleKeydown(e: KeyboardEvent) {\n        if (this.isTooltipOpen && e.keyCode === ESCAPE) { // tslint:disable-line\n            this.hide();\n        }\n    }\n\n    handleTouchend() {\n        this.hide();\n    }\n\n    /** Updates the position of the current tooltip. */\n    _updatePosition() {\n        if (!this._overlayRef) {\n            this._overlayRef = this._createOverlay();\n        }\n        const position =\n            this._overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\n        const origin = this._getOrigin();\n        const overlay = this._getOverlayPosition();\n\n        position.withPositions([\n            {...origin.main, ...overlay.main},\n            {...origin.fallback, ...overlay.fallback}\n        ]);\n    }\n\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    _getOrigin(): {main: IOriginConnectionPosition; fallback: IOriginConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this._dir || this._dir.value === 'ltr';\n        let originPosition: IOriginConnectionPosition;\n\n        if (position === 'top' || position === 'bottom') {\n            originPosition = {originX: 'center', originY: position === 'top' ? 'top' : 'bottom'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            originPosition = {originX: 'start', originY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            originPosition = {originX: 'end', originY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this._invertPosition(originPosition.originX, originPosition.originY);\n\n        return {\n            main: originPosition,\n            fallback: {originX: x, originY: y}\n        };\n    }\n\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    _getOverlayPosition(): {main: IOverlayConnectionPosition; fallback: IOverlayConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this._dir || this._dir.value === 'ltr';\n        let overlayPosition: IOverlayConnectionPosition;\n\n        if (position === 'top') {\n            overlayPosition = {overlayX: 'center', overlayY: 'bottom'};\n        } else if (position === 'bottom') {\n            overlayPosition = {overlayX: 'center', overlayY: 'top'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            overlayPosition = {overlayX: 'end', overlayY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            overlayPosition = {overlayX: 'start', overlayY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n\n        return {\n            main: overlayPosition,\n            fallback: {overlayX: x, overlayY: y}\n        };\n    }\n\n    /** Inverts an overlay position. */\n    private _invertPosition(x: HorizontalConnectionPos, y: VerticalConnectionPos) {\n        let newX: HorizontalConnectionPos = x;\n        let newY: VerticalConnectionPos = y;\n        if (this.mcPlacement === 'top' || this.mcPlacement === 'bottom') {\n            if (y === 'top') {\n                newY = 'bottom';\n            } else if (y === 'bottom') {\n                newY = 'top';\n            }\n        } else {\n            if (x === 'end') {\n                newX = 'start';\n            } else if (x === 'start') {\n                newX = 'end';\n            }\n        }\n\n        return {x: newX, y: newY};\n    }\n\n    private show(): void {\n        if (!this.disabled) {\n            if (!this.tooltip) {\n                const overlayRef = this._createOverlay();\n                this._detach();\n                this._portal = this._portal || new ComponentPortal(McToolTipComponent, this.hostView);\n                this.tooltip = overlayRef.attach(this._portal).instance;\n                this.tooltip.afterHidden()\n                    .pipe(takeUntil(this._destroyed))\n                    .subscribe(() => this._detach());\n                this.isDynamicTooltip = true;\n                const properties = [\n                    'mcTitle',\n                    'mcMouseEnterDelay',\n                    'mcMouseLeaveDelay',\n                    'mcVisible',\n                    'mcTrigger',\n                    'mcPlacement' ];\n                properties.forEach((property) => this.updateCompValue(property, this[ property ]));\n                this.tooltip.mcVisibleChange.pipe(takeUntil(this.$unsubscribe), distinctUntilChanged())\n                    .subscribe((data) => {\n                        this._visible = data;\n                        this.mcVisibleChange.emit(data);\n                    });\n            }\n            this._updatePosition();\n            this.tooltip.show();\n            this.isTooltipOpen = true;\n        }\n    }\n\n    private hide(): void {\n        if (this.tooltip) {\n            this.tooltip.hide();\n            this.isTooltipOpen = false;\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport {\n    McToolTipComponent,\n    McTooltipDirective,\n    MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER\n} from './tooltip.component';\n\n\n@NgModule({\n    declarations: [ McToolTipComponent, McTooltipDirective ],\n    exports: [ McToolTipComponent, McTooltipDirective ],\n    imports: [ BrowserAnimationsModule, CommonModule, OverlayModule ],\n    providers: [MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n    entryComponents: [ McToolTipComponent ]\n})\nexport class McToolTipModule {\n}\n","import { Version } from '@angular/core';\n\n\nexport const VERSION = new Version('0.0.1-b4b3c22');\n","export enum TimeParts {\n    hours,\n    minutes,\n    seconds\n}\n\nexport enum TimeFormats {\n    HHmmss = 'HH:mm:ss',\n    HHmm = 'HH:mm'\n}\n\nexport const TIMEFORMAT_PLACEHOLDERS: { [timeFormat: string]: string } = {\n    [TimeFormats.HHmmss]: '  :  :  ',\n    [TimeFormats.HHmm]: '  :  '\n};\n\nexport const DEFAULT_TIME_FORMAT: TimeFormats = TimeFormats.HHmm;\n\nexport const HOURS_MINUTES_SECONDS_REGEXP =\n    new RegExp(/^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9]):([0-5][0-9]|[0-9])?$/);\nexport const HOURS_MINUTES_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9])?$/;\nexport const HOURS_ONLY_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):?$/;\n\nexport const SECONDS_PER_MINUTE: number = 59;\nexport const MINUTES_PER_HOUR: number = 59;\nexport const HOURS_PER_DAY: number = 23;\n\n// TODO Move it to common CDK\nexport const ARROW_UP_KEYCODE: string = 'ArrowUp';\nexport const ARROW_DOWN_KEYCODE: string = 'ArrowDown';\nexport const ARROW_LEFT_KEYCODE: string = 'ArrowLeft';\nexport const ARROW_RIGHT_KEYCODE: string = 'ArrowRight';\n","/* tslint:disable:no-empty */\n\nimport { ActiveDescendantKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    RIGHT_ARROW,\n    SPACE,\n    UP_ARROW,\n    A\n} from '@ptsecurity/cdk/keycodes';\nimport {\n    CdkConnectedOverlay,\n    Overlay,\n    RepositionScrollStrategy,\n    IScrollStrategy,\n    ViewportRuler\n} from '@ptsecurity/cdk/overlay';\n\nimport {\n    AfterContentInit, AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren,\n    Directive,\n    DoCheck,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    isDevMode,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    QueryList, Renderer2,\n    Self,\n    SimpleChanges,\n    ViewChild, ViewChildren,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport {\n    _countGroupLabelsBeforeOption,\n    _getOptionScrollPosition,\n    CanDisable,\n    CanDisableCtor,\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    HasTabIndex, HasTabIndexCtor,\n    MC_OPTION_PARENT_COMPONENT,\n    McOptgroup,\n    McOption,\n    McOptionSelectionChange,\n    mixinDisabled,\n    mixinErrorState,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\nimport { McFormField, McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { McTag } from '@ptsecurity/mosaic/tag';\n\n\nimport { defer, merge, Observable, Subject } from 'rxjs';\nimport {\n    filter,\n    map,\n    startWith,\n    switchMap,\n    take,\n    takeUntil,\n    distinctUntilChanged\n} from 'rxjs/operators';\n\nimport {\n    getMcSelectDynamicMultipleError,\n    getMcSelectNonArrayValueError,\n    getMcSelectNonFunctionValueError\n} from './select-errors';\n\nimport { mcSelectAnimations } from './select-animations';\n\n\nlet nextUniqueId = 0;\n\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n\n/** The max height of the select's overlay panel */\nexport const SELECT_PANEL_MAX_HEIGHT = 224;\n\n/** The panel's padding on the x-axis */\nexport const SELECT_PANEL_PADDING_X = 1;\n\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\n/* tslint:disable-next-line:no-magic-numbers */\nexport const SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n\n/** The height of the select items in `em` units. */\nexport const SELECT_ITEM_HEIGHT_EM = 2;\n\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nexport const SELECT_PANEL_VIEWPORT_PADDING = 8;\n\n/** Injection token that determines the scroll handling while a select is open. */\nexport const MC_SELECT_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-select-scroll-strategy');\n\n/** @docs-private */\nexport function MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => RepositionScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MC_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n\n/** Change event object that is emitted when the select value has changed. */\nexport class McSelectChange {\n    constructor(\n        /** Reference to the select that emitted the change event. */\n        public source: McSelect,\n        /** Current value of the select that emitted the event. */\n        public value: any) {\n    }\n}\n\n// Boilerplate for applying mixins to McSelect.\n/** @docs-private */\nexport class McSelectBase {\n    constructor(\n        public _elementRef: ElementRef,\n        public _defaultErrorStateMatcher: ErrorStateMatcher,\n        public _parentForm: NgForm,\n        public _parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl\n    ) {}\n}\n\nexport const _McSelectMixinBase:\n    CanDisableCtor &\n    HasTabIndexCtor &\n    CanUpdateErrorStateCtor & typeof McSelectBase\n    = mixinTabIndex(mixinDisabled(mixinErrorState(McSelectBase)));\n\n\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\n@Directive({ selector: 'mc-select-trigger' })\nexport class McSelectTrigger {}\n\n\n@Component({\n    selector: 'mc-select',\n    exportAs: 'mcSelect',\n    templateUrl: 'select.html',\n    styleUrls: ['./select.css'],\n    inputs: ['disabled', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'tabIndex',\n        class: 'mc-select',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-select-invalid]': 'errorState',\n        '[class.mc-select-required]': 'required',\n        '(keydown)': '_handleKeydown($event)',\n        '(focus)': '_onFocus()',\n        '(blur)': '_onBlur()',\n        '(window:resize)': '_calculateHiddenItems()'\n    },\n    animations: [\n        mcSelectAnimations.transformPanel,\n        mcSelectAnimations.fadeInContent\n    ],\n    providers: [\n        { provide: McFormFieldControl, useExisting: McSelect },\n        { provide: MC_OPTION_PARENT_COMPONENT, useExisting: McSelect }\n    ]\n})\nexport class McSelect extends _McSelectMixinBase implements\n    AfterContentInit, AfterViewInit, OnChanges, OnDestroy, OnInit, DoCheck, ControlValueAccessor, CanDisable,\n    HasTabIndex, McFormFieldControl<any>, CanUpdateErrorState {\n\n    /** The last measured value for the trigger's client bounding rect. */\n    _triggerRect: ClientRect;\n\n    /** The cached font-size of the trigger element. */\n    _triggerFontSize = 0;\n\n    /** Deals with the selection logic. */\n    _selectionModel: SelectionModel<McOption>;\n\n    /** Manages keyboard events for options in the panel. */\n    _keyManager: ActiveDescendantKeyManager<McOption>;\n\n    /** The IDs of child options to be passed to the aria-owns attribute. */\n    _optionIds: string = '';\n\n    /** The value of the select panel's transform-origin property. */\n    _transformOrigin: string = 'top';\n\n    /** Whether the panel's animation is done. */\n    _panelDoneAnimating: boolean = false;\n\n    /** Emits when the panel element is finished transforming in. */\n    _panelDoneAnimatingStream = new Subject<string>();\n\n    /** Strategy that will be used to handle scrolling while the select panel is open. */\n    _scrollStrategy = this._scrollStrategyFactory();\n\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     */\n    _offsetY = 0;\n\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     */\n    _positions = [\n        {\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top'\n        },\n        {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'bottom'\n        }\n    ];\n\n    /** Whether the select is focused. */\n    get focused(): boolean {\n        return this._focused || this._panelOpen;\n    }\n\n    /**\n     * @deprecated Setter to be removed as this property is intended to be readonly.\n     * @breaking-change 8.0.0\n     */\n    set focused(value: boolean) {\n        this._focused = value;\n    }\n\n    /** A name for this control that can be used by `mc-form-field`. */\n    controlType = 'mc-select';\n\n    @ViewChild('trigger') trigger: ElementRef;\n    @ViewChildren(McTag) tags: QueryList<McTag>;\n\n    @ViewChild('panel') panel: ElementRef;\n\n    /** Overlay pane containing the options. */\n    @ViewChild(CdkConnectedOverlay) overlayDir: CdkConnectedOverlay;\n\n    /** All of the defined select options. */\n    @ContentChildren(McOption, { descendants: true }) options: QueryList<McOption>;\n\n    /** All of the defined groups of options. */\n    @ContentChildren(McOptgroup) optionGroups: QueryList<McOptgroup>;\n\n    /** Classes to be passed to the select panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[] | Set<string> | { [key: string]: any };\n\n    /** User-supplied override of the trigger element. */\n    @ContentChild(McSelectTrigger) customTrigger: McSelectTrigger;\n\n    /** Placeholder to be shown if no value has been selected. */\n    @Input()\n    get placeholder(): string {\n        return this._placeholder;\n    }\n\n    set placeholder(value: string) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n\n    /** Whether the component is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n\n    /** Whether the user should be allowed to select multiple options. */\n    @Input()\n    get multiple(): boolean {\n        return this._multiple;\n    }\n\n    set multiple(value: boolean) {\n        if (this._selectionModel) {\n            throw getMcSelectDynamicMultipleError();\n        }\n\n        this._multiple = coerceBooleanProperty(value);\n    }\n\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    @Input()\n    get compareWith() {\n        return this._compareWith;\n    }\n\n    set compareWith(fn: (o1: any, o2: any) => boolean) {\n        /* tslint:disable-next-line:strict-type-predicates */\n        if (typeof fn !== 'function') {\n            throw getMcSelectNonFunctionValueError();\n        }\n\n        this._compareWith = fn;\n\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n\n    /** Value of the select control. */\n    @Input()\n    get value(): any {\n        return this._value;\n    }\n\n    set value(newValue: any) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n\n    /** Object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     */\n    @Input() sortComparator: (a: McOption, b: McOption, options: McOption[]) => number;\n\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n\n    /** Combined stream of all of the child options' change events. */\n    readonly optionSelectionChanges: Observable<McOptionSelectionChange> = defer(() => {\n        if (this.options) {\n            return merge(...this.options.map((option) => option.onSelectionChange));\n        }\n\n        return this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n    });\n\n    /** Event emitted when the select panel has been toggled. */\n    @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the select has been opened. */\n    @Output('opened') readonly _openedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => o), map(() => {}));\n\n    /** Event emitted when the select has been closed. */\n    @Output('closed') readonly _closedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => !o), map(() => {}));\n\n    /** Event emitted when the selected value has been changed by the user. */\n    @Output() readonly selectionChange: EventEmitter<McSelectChange> = new EventEmitter<McSelectChange>();\n\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n    hiddenItems: number = 0;\n\n    /** Whether or not the overlay panel is open. */\n    private _panelOpen = false;\n\n    /** Whether filling out the select is required in the form. */\n    private _required: boolean = false;\n\n    /** The scroll position of the overlay panel, calculated to center the selected option. */\n    private _scrollTop = 0;\n\n    /** The placeholder displayed in the trigger of the select. */\n    private _placeholder: string;\n\n    /** Whether the component is in multiple selection mode. */\n    private _multiple: boolean = false;\n\n    /** Unique id for this input. */\n    private readonly _uid = `mc-select-${nextUniqueId++}`;\n\n    /** Emits whenever the component is destroyed. */\n    private readonly _destroy = new Subject<void>();\n\n    private _focused = false;\n\n    private _value: any;\n\n    private _id: string;\n\n    constructor(\n        private readonly _viewportRuler: ViewportRuler,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        private readonly _ngZone: NgZone,\n        private readonly _renderer: Renderer2,\n        _defaultErrorStateMatcher: ErrorStateMatcher,\n        elementRef: ElementRef,\n        @Optional() private readonly _dir: Directionality,\n        @Optional() _parentForm: NgForm,\n        @Optional() _parentFormGroup: FormGroupDirective,\n        @Optional() private readonly _parentFormField: McFormField,\n        @Self() @Optional() public ngControl: NgControl,\n        @Attribute('tabindex') tabIndex: string,\n        @Inject(MC_SELECT_SCROLL_STRATEGY) private readonly _scrollStrategyFactory\n    ) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnInit() {\n        this._selectionModel = new SelectionModel<McOption>(this.multiple);\n        this.stateChanges.next();\n\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe(() => {\n                if (this.panelOpen) {\n                    this._scrollTop = 0;\n                    this.openedChange.emit(true);\n                } else {\n                    this.openedChange.emit(false);\n                    this._panelDoneAnimating = false;\n                    this.overlayDir.offsetX = 0;\n                    this._changeDetectorRef.markForCheck();\n                }\n            });\n    }\n\n    ngAfterContentInit() {\n        this._initKeyManager();\n\n        this._selectionModel.onChange!\n            .pipe(takeUntil(this._destroy))\n            .subscribe((event) => {\n                event.added.forEach((option) => option.select());\n                event.removed.forEach((option) => option.deselect());\n            });\n\n        this.options.changes\n            .pipe(startWith(null), takeUntil(this._destroy))\n            .subscribe(() => {\n                this._resetOptions();\n                this._initializeSelection();\n            });\n    }\n\n    ngAfterViewInit(): void {\n        this.tags.changes\n            .subscribe(() => {\n                setTimeout(() => this._calculateHiddenItems(), 0);\n            });\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) { this.updateErrorState(); }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes.disabled) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n\n    /** `View -> model callback called when value changes` */\n    _onChange: (value: any) => void = () => {};\n\n    /** `View -> model callback called when select has been touched` */\n    _onTouched = () => {};\n\n    /** Toggles the overlay panel open or closed. */\n    toggle(): void {\n        if (this.panelOpen) {\n            this.close();\n        } else {\n            this.open();\n        }\n    }\n\n    /** Opens the overlay panel. */\n    open(): void {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) { return; }\n\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement)['font-size']);\n\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                    this.overlayDir.overlayRef.overlayElement) {\n                    this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n                }\n            });\n    }\n\n    /** Closes the overlay panel and focuses the host element. */\n    close(): void {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value: any): void {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn: () => {}): void {\n        this._onTouched = fn;\n    }\n\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n\n    get panelOpen(): boolean {\n        return this._panelOpen;\n    }\n\n    get selected(): McOption | McOption[] {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n\n    get triggerValue(): string {\n        if (this.empty) { return ''; }\n\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map((option) => option.viewValue);\n\n            if (this._isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions.join(', ');\n        }\n\n        return this._selectionModel.selected[0].viewValue;\n    }\n\n    get triggerValues(): McOption[] {\n        if (this.empty) { return []; }\n\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected;\n\n            if (this._isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions;\n        }\n\n        return [this._selectionModel.selected[0]];\n    }\n\n    get empty(): boolean {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n\n    _isRtl(): boolean {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n\n    _handleKeydown(event: KeyboardEvent): void {\n        if (!this.disabled) {\n            if (this.panelOpen) {\n                this._handleOpenKeydown(event);\n            } else {\n                this._handleClosedKeydown(event);\n            }\n        }\n    }\n\n    /**\n     * When the panel content is done fading in, the _panelDoneAnimating property is\n     * set so the proper class can be added to the panel.\n     */\n    _onFadeInDone(): void {\n        this._panelDoneAnimating = this.panelOpen;\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached(): void {\n        this.overlayDir.positionChange\n            .pipe(take(1))\n            .subscribe(() => {\n                this._changeDetectorRef.detectChanges();\n                this._calculateOverlayOffsetX();\n                this.panel.nativeElement.scrollTop = this._scrollTop;\n            });\n    }\n\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme(): string {\n        return this._parentFormField ? `mc-${this._parentFormField.color}` : '';\n    }\n\n    /** Focuses the select element. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    _calculateOverlayScroll(selectedIndex: number, scrollBuffer: number, maxScroll: number): number {\n        const itemHeight = this._getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n\n        /* tslint:disable-next-line:no-magic-numbers */\n        const halfOptionHeight = itemHeight / 2;\n\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n\n    /** Invoked when an option is clicked. */\n    onRemoveMatcherItem(option: McOption, $event): void {\n        $event.stopPropagation();\n\n        option.deselect();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat(): boolean {\n        return this._panelOpen || !this.empty;\n    }\n\n    _calculateHiddenItems(): void {\n        if (this.empty) { return; }\n\n        let visibleItems: number = 0;\n        const totalItemsWidth = this._getTotalItemsWidthInMatcher();\n        let totalVisibleItemsWidth: number = 0;\n        const itemMargin: number = 4;\n\n        this.tags.forEach((tag) => {\n            if (tag.nativeElement.offsetTop < tag.nativeElement.offsetHeight) {\n                totalVisibleItemsWidth += tag.nativeElement.getBoundingClientRect().width + itemMargin;\n                visibleItems++;\n            }\n        });\n\n        this.hiddenItems = (this.selected as ArrayLike<McOption>).length - visibleItems;\n\n        if (this.hiddenItems) {\n            const itemsCounter = this.trigger.nativeElement.querySelector('.mc-select__match-hidden-text');\n            const matcherList = this.trigger.nativeElement.querySelector('.mc-select__match-list');\n\n            const itemsCounterShowed = itemsCounter.offsetTop < itemsCounter.offsetHeight;\n            // const itemsCounterWidth: number = itemsCounter.getBoundingClientRect().width;\n            const itemsCounterWidth: number = 86;\n\n            const matcherListWidth: number = matcherList.getBoundingClientRect().width;\n            const matcherWidth: number = matcherListWidth + itemsCounterWidth;\n\n            if (itemsCounterShowed && (totalItemsWidth < matcherWidth)) { this.hiddenItems = 0; }\n\n            if (\n                totalVisibleItemsWidth === matcherListWidth ||\n                (totalVisibleItemsWidth + itemsCounterWidth) < matcherListWidth\n            ) {\n                this._changeDetectorRef.markForCheck();\n\n                return ;\n            } else if (!itemsCounterShowed && (totalItemsWidth + itemsCounterWidth) > matcherWidth) {\n                this.hiddenItems++;\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    private _getTotalItemsWidthInMatcher(): number {\n        const triggerClone = this.trigger.nativeElement.cloneNode(true);\n        triggerClone.querySelector('.mc-select__match-hidden-text').remove();\n\n        this._renderer.setStyle(triggerClone, 'position', 'absolute');\n        this._renderer.setStyle(triggerClone, 'visibility', 'hidden');\n        this._renderer.setStyle(triggerClone, 'top', '-100%');\n        this._renderer.setStyle(triggerClone, 'left', '0');\n\n        this._renderer.appendChild(this.trigger.nativeElement, triggerClone);\n\n        let totalItemsWidth: number = 0;\n        const itemMargin: number = 4;\n        triggerClone.querySelectorAll('mc-tag').forEach((item) => {\n            totalItemsWidth += item.getBoundingClientRect().width as number + itemMargin;\n        });\n\n        triggerClone.remove();\n\n        return totalItemsWidth;\n    }\n\n    /** Handles keyboard events while the select is closed. */\n    private _handleClosedKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n\n        // Open the select on ALT + arrow key to match the native <select>\n        if (isOpenKey || ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        } else if (!this.multiple) {\n            this._keyManager.onKeydown(event);\n        }\n    }\n\n    /** Handles keyboard events when the selected is open. */\n    private _handleOpenKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const manager = this._keyManager;\n\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n\n            if (keyCode === HOME) {\n                manager.setFirstItemActive();\n            } else {\n                manager.setLastItemActive();\n            }\n\n        } else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n        } else if ((keyCode === ENTER || keyCode === SPACE) && manager.activeItem) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        } else if (this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some((option) => !option.selected);\n            this.options.forEach((option) => {\n                if (hasDeselectedOptions && !option.disabled) {\n                    option.select();\n                } else {\n                    option.deselect();\n                }\n            });\n        } else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n\n            manager.onKeydown(event);\n\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n\n    private _initializeSelection(): void {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n        });\n    }\n\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    private _setSelectionByValue(value: any | any[]): void {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMcSelectNonArrayValueError();\n            }\n\n            this._selectionModel.clear();\n            value.forEach((currentValue: any) => this._selectValue(currentValue));\n            this._sortValues();\n        } else {\n            this._selectionModel.clear();\n            const correspondingOption = this._selectValue(value);\n\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    private _selectValue(value: any): McOption | undefined {\n        const correspondingOption = this.options.find((option: McOption) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            } catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n\n                return false;\n            }\n        });\n\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n\n        return correspondingOption;\n    }\n\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    private _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager<McOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n\n        this._keyManager.tabOut\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            });\n\n        this._keyManager.change\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n                if (this._panelOpen && this.panel) {\n                    this._scrollActiveOptionIntoView();\n                } else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n            });\n    }\n\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    private _resetOptions(): void {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n\n        this.optionSelectionChanges\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((event) => {\n                this._onSelect(event.source, event.isUserInput);\n\n                if (event.isUserInput && !this.multiple && this._panelOpen) {\n                    this.close();\n                    this.focus();\n                }\n            });\n\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((option) => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n                this.stateChanges.next();\n            });\n\n        this._setOptionIds();\n    }\n\n    /** Invoked when an option is clicked. */\n    private _onSelect(option: McOption, isUserInput: boolean): void {\n        const wasSelected = this._selectionModel.isSelected(option);\n\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        } else {\n            if (option.selected) {\n                this._selectionModel.select(option);\n            } else {\n                this._selectionModel.deselect(option);\n            }\n\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n\n            if (this.multiple) {\n                this._sortValues();\n\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mc-option`.\n                    this.focus();\n                }\n            }\n        }\n\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n\n        this.stateChanges.next();\n    }\n\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    private _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n\n    /** Emits change event to set the model value. */\n    private _propagateChanges(fallbackValue?: any): void {\n        let valueToEmit: any = null;\n\n        if (this.multiple) {\n            valueToEmit = (this.selected as McOption[]).map((option) => option.value);\n        } else {\n            valueToEmit = this.selected ? (this.selected as McOption).value : fallbackValue;\n        }\n\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new McSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /** Records option IDs to pass to the aria-owns property. */\n    private _setOptionIds() {\n        this._optionIds = this.options.map((option) => option.id).join(' ');\n    }\n\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    private _highlightCorrectOption(): void {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            } else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n\n    /** Scrolls the active option into view. */\n    private _scrollActiveOptionIntoView(): void {\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(\n            activeOptionIndex + labelCount,\n            this._getItemHeight(),\n            this.panel.nativeElement.scrollTop,\n            SELECT_PANEL_MAX_HEIGHT\n        );\n    }\n\n    /** Gets the index of the provided option in the option list. */\n    private _getOptionIndex(option: McOption): number | undefined {\n        /* tslint:disable-next-line */\n        return this.options.reduce((result: number, current: McOption, index: number) => {\n            /* tslint:disable-next-line:strict-type-predicates */\n            return result === undefined ? (option === current ? index : undefined) : result;\n        }, undefined);\n    }\n\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    private _calculateOverlayPosition(): void {\n        const itemHeight = this._getItemHeight();\n        const items = this._getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset =\n            this.empty ? 0 : this._getOptionIndex(this._selectionModel.selected[0])!;\n\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options,\n            this.optionGroups);\n\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /* tslint:disable-next-line:no-magic-numbers */\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY();\n\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    private _calculateOverlayOffsetX(): void {\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this._isRtl();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const paddingWidth = SELECT_PANEL_PADDING_X * 2;\n        let offsetX: number;\n\n        const selected = this._selectionModel.selected[0] || this.options.first;\n        offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n\n        // Invert the offset in LTR.\n        if (!isRtl) { offsetX *= -1; }\n\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        } else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    private _calculateOverlayOffsetY(): number {\n        // const itemHeight = this._getItemHeight();\n        // const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n\n        // todo I'm not sure that we will use it\n        return 0;\n        // return Math.round(-optionHeightAdjustment);\n    }\n\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    private _checkOverlayWithinViewport(maxScroll: number): void {\n        const itemHeight = this._getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable =\n            viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n\n        const panelHeightTop = Math.abs(this._offsetY);\n        const totalPanelHeight =\n            Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        } else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        } else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    private _adjustPanelUp(panelHeightBottom: number, bottomSpaceAvailable: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    private _adjustPanelDown(panelHeightTop: number, topSpaceAvailable: number, maxScroll: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n\n            return;\n        }\n    }\n\n    /** Sets the transform origin point based on the selected option. */\n    private _getOriginBasedOnOption(): string {\n        const itemHeight = this._getItemHeight();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /* tslint:disable-next-line:no-magic-numbers */\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n\n        return `50% ${originY}px 0px`;\n    }\n\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    private _getItemCount(): number {\n        return this.options.length + this.optionGroups.length;\n    }\n\n    /** Calculates the height of the select's options. */\n    private _getItemHeight(): number {\n        /* tslint:disable-next-line:no-magic-numbers */\n        return 32;\n        // return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n\n    /** Comparison function to specify which option is displayed. Defaults to object equality. */\n    private _compareWith = (o1: any, o2: any) => o1 === o2;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McOptionModule } from '@ptsecurity/mosaic/core';\nimport { McFormFieldModule } from '@ptsecurity/mosaic/form-field';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport { McTagModule } from '@ptsecurity/mosaic/tag';\n\nimport { MC_SELECT_SCROLL_STRATEGY_PROVIDER, McSelect, McSelectTrigger } from './select.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        McOptionModule,\n        McIconModule,\n        McTagModule\n    ],\n    exports: [McFormFieldModule, McSelect, McSelectTrigger, McOptionModule, CommonModule],\n    declarations: [McSelect, McSelectTrigger],\n    providers: [MC_SELECT_SCROLL_STRATEGY_PROVIDER]\n})\nexport class McSelectModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    NgZone, OnDestroy,\n    OnInit,\n    Renderer2,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { coerceBooleanProperty, coerceCssPixelValue, coerceNumberProperty } from '@ptsecurity/cdk/coercion';\n\n\ninterface IArea {\n    area: McSplitterAreaDirective;\n    index: number;\n    order: number;\n    initialSize: number;\n}\n\ninterface IPoint {\n    x: number;\n    y: number;\n}\n\n\nconst enum AttributeProperty {\n    Disabled = 'disabled'\n}\n\nconst enum Cursor {\n    Default = 'default',\n    ResizeColumn = 'col-resize',\n    ResizeRow = 'row-resize'\n}\n\nconst enum StyleProperty {\n    Cursor = 'cursor',\n    Flex = 'flex',\n    FlexBasis = 'flex-basis',\n    FlexDirection = 'flex-direction',\n    Height = 'height',\n    MaxWidth = 'max-width',\n    MinHeight = 'min-height',\n    MinWidth = 'minWidth',\n    OffsetHeight = 'offsetHeight',\n    OffsetWidth = 'offsetWidth',\n    Order = 'order',\n    Width = 'width'\n}\n\nconst enum State {\n    Disabled = 'disabled',\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\nexport const enum Direction {\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\n@Component({\n    selector: 'mc-splitter',\n    preserveWhitespaces: false,\n    styleUrls: ['splitter.css'],\n    templateUrl: './splitter.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSplitterComponent implements OnInit {\n    readonly areas: IArea[] = [];\n\n    private _direction: Direction;\n    private _disabled: boolean = false;\n    private _gutterSize: number = 6;\n\n    private isDragging: boolean = false;\n\n    private readonly areaPositionDivider: number = 2;\n    private readonly listeners: (() => void)[] = [];\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set gutterSize(gutterSize: number) {\n        const size = coerceNumberProperty(gutterSize);\n        this._gutterSize = size > 0 ? size : this.gutterSize;\n    }\n\n    get gutterSize(): number {\n        return this._gutterSize;\n    }\n\n    constructor(private elementRef: ElementRef,\n                private ngZone: NgZone,\n                private renderer: Renderer2) {}\n\n    addArea(area: McSplitterAreaDirective): void {\n        const index: number = this.areas.length;\n        const order: number = index * this.areaPositionDivider;\n        const size: number = area.getSize();\n\n        area.setOrder(order);\n\n        this.areas.push({\n            area,\n            index,\n            order,\n            initialSize: size\n        });\n    }\n\n    ngOnInit(): void {\n        if (!this.direction) {\n            this.direction = Direction.Horizontal;\n        }\n\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'column' : 'row');\n    }\n\n    onMouseDown(event: MouseEvent, leftAreaIndex: number, rightAreaIndex: number) {\n        if (this.disabled) {\n            return;\n        }\n\n        const leftArea = this.areas[leftAreaIndex];\n        const rightArea = this.areas[rightAreaIndex];\n\n        const startPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        leftArea.initialSize = leftArea.area.getSize();\n        rightArea.initialSize = rightArea.area.getSize();\n\n        this.areas.forEach((item) => {\n            const size = item.area.getSize();\n            item.area.disableFlex();\n            item.area.setSize(size);\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mouseup',\n                    () => this.onMouseUp()\n                )\n            );\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mousemove',\n                    (e: MouseEvent) => this.onMouseMove(e, startPoint, leftArea, rightArea)\n                )\n            );\n        });\n\n        this.isDragging = true;\n    }\n\n    removeArea(area: McSplitterAreaDirective): void {\n        let indexToRemove: number = -1;\n\n        this.areas.some((item, index) => {\n            if (item.area === area) {\n                indexToRemove = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        if (indexToRemove === -1) {\n            return;\n        }\n\n        this.areas.splice(indexToRemove, 1);\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private onMouseMove(event: MouseEvent, startPoint: IPoint, leftArea: IArea, rightArea: IArea) {\n        if (!this.isDragging || this.disabled) {\n            return;\n        }\n\n        const endPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        const offset = this.isVertical()\n            ? startPoint.y - endPoint.y\n            : startPoint.x - endPoint.x;\n\n        const newLeftAreaSize = leftArea.initialSize - offset;\n        const newRightAreaSize = rightArea.initialSize + offset;\n\n        const minLeftAreaSize = leftArea.area.getMinSize();\n        const minRightAreaSize = rightArea.area.getMinSize();\n\n        if (newLeftAreaSize <= minLeftAreaSize || newRightAreaSize <= minRightAreaSize) {\n            const rightAreaOffset = leftArea.initialSize - minLeftAreaSize;\n\n            leftArea.area.setSize(minLeftAreaSize);\n            rightArea.area.setSize(rightArea.initialSize + rightAreaOffset);\n        } else if (newLeftAreaSize <= 0) {\n            leftArea.area.setSize(0);\n            rightArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n        } else if (newRightAreaSize <= 0) {\n            leftArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n            rightArea.area.setSize(0);\n        } else {\n            leftArea.area.setSize(newLeftAreaSize);\n            rightArea.area.setSize(newRightAreaSize);\n        }\n    }\n\n    private onMouseUp() {\n        while (this.listeners.length > 0) {\n            const unsubscribe = this.listeners.pop();\n\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        }\n\n        this.isDragging = false;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-gutter'\n})\nexport class McGutterDirective implements OnInit {\n    private _direction: Direction = Direction.Vertical;\n    private _disabled: boolean = false;\n    private _order: number = 0;\n    private _size: number = 6;\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set order(order: number) {\n        this._order = coerceNumberProperty(order);\n    }\n\n    get order(): number {\n        return this._order;\n    }\n\n    @Input()\n    set size(size: number) {\n        this._size = coerceNumberProperty(size);\n    }\n\n    get size(): number {\n        return this._size;\n    }\n\n    constructor(private renderer: Renderer2,\n                private elementRef: ElementRef) {\n    }\n\n    ngOnInit(): void {\n        this.setStyle(StyleProperty.Cursor, this.getCursor(this.getState()));\n        this.setStyle(StyleProperty.FlexBasis, coerceCssPixelValue(this.size));\n        this.setStyle(this.isVertical() ? StyleProperty.Height : StyleProperty.Width, coerceCssPixelValue(this.size));\n        this.setStyle(StyleProperty.Order, this.order);\n\n        if (!this.isVertical()) {\n            this.setStyle(StyleProperty.Height, '100%');\n        }\n\n        if (this.disabled) {\n            this.setAttr(AttributeProperty.Disabled, 'true');\n        }\n\n        // fix IE issue with gutter icon. flex-direction is requied for flex alignment options\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'row' : 'column');\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private getCursor(state: State): string {\n        switch (state) {\n            case State.Disabled:\n                return Cursor.Default;\n            case State.Vertical:\n                return  Cursor.ResizeRow;\n            case State.Horizontal:\n                return Cursor.ResizeColumn;\n            default:\n                throw Error(`Unknown gutter state for cursor: ${state}`);\n        }\n    }\n\n    private getState(): State {\n        return this.disabled\n            ? State.Disabled\n            : this.direction === Direction.Vertical\n                ? State.Vertical\n                : State.Horizontal;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n\n    private setAttr(attribute: AttributeProperty, value: string) {\n        this.renderer.setAttribute(this.elementRef.nativeElement, attribute, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-splitter-area'\n})\nexport class McSplitterAreaDirective implements OnInit, OnDestroy {\n    constructor(private elementRef: ElementRef,\n                private renderer: Renderer2,\n                private splitter: McSplitterComponent) {}\n\n    disableFlex(): void {\n        this.renderer.removeStyle(this.elementRef.nativeElement, 'flex');\n    }\n\n    ngOnInit(): void {\n        this.splitter.addArea(this);\n\n        this.removeStyle(StyleProperty.MaxWidth);\n        this.setStyle(StyleProperty.Flex, '1');\n\n        if (this.splitter.direction === Direction.Vertical) {\n            this.setStyle(StyleProperty.Width, '100%');\n            this.removeStyle(StyleProperty.Height);\n        } else {\n            this.setStyle(StyleProperty.Height, '100%');\n            this.removeStyle(StyleProperty.Width);\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.splitter.removeArea(this);\n    }\n\n    setOrder(order: number): void {\n        this.setStyle(StyleProperty.Order, order);\n    }\n\n    setSize(size: number): void {\n        const sz = coerceNumberProperty(size);\n        this.setStyle(this.getSizeProperty(), coerceCssPixelValue(sz));\n    }\n\n    getSize(): number {\n        return this.elementRef.nativeElement[this.getOffsetSizeProperty()];\n    }\n\n    getMinSize(): number {\n        const styles = getComputedStyle(this.elementRef.nativeElement);\n\n        return parseFloat(styles[this.getMinSizeProperty()]);\n    }\n\n    private isVertical(): boolean {\n        return this.splitter.direction === Direction.Vertical;\n    }\n\n    private getMinSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.MinHeight\n            : StyleProperty.MinWidth;\n    }\n\n    private getOffsetSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.OffsetHeight\n            : StyleProperty.OffsetWidth;\n    }\n\n    private getSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.Height\n            : StyleProperty.Width;\n    }\n\n    private setStyle(style: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, style, value);\n    }\n\n    private removeStyle(style: StyleProperty) {\n        this.renderer.removeStyle(this.elementRef.nativeElement, style);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McGutterDirective, McSplitterAreaDirective, McSplitterComponent } from './splitter.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McIconModule\n    ],\n    exports: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ],\n    declarations: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ]\n})\nexport class McSplitterModule {\n}\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport {\n    Attribute,\n    ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ElementRef, EventEmitter, forwardRef,\n    Input, Output, ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    ThemePalette,\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\nlet nextUniqueId = 0;\n\ntype ToggleLabelPositionType = 'left' | 'right';\n\nexport class McToggleBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McToggleMixinBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McToggleBase = mixinTabIndex(mixinColor(mixinDisabled(McToggleBase), ThemePalette.Primary));\n\nexport class McToggleChange {\n    source: McToggleComponent;\n    checked: boolean;\n}\n\n@Component({\n    selector: 'mc-toggle',\n    exportAs: 'mcToggle',\n    templateUrl: './toggle.component.html',\n    styleUrls: ['./toggle.css'],\n    providers: [\n        {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => McToggleComponent), multi: true}\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color', 'tabIndex'],\n    host: {\n        class: 'mc-toggle',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-toggle_off]': '!checked'\n    },\n    animations: [\n        trigger('switch', [\n            state('true' , style({ left: '50%' })),\n            state('false', style({ left: '1px' })),\n            transition('true <=> false', animate('150ms'))\n        ])\n    ]\n})\nexport class McToggleComponent extends _McToggleMixinBase\n    implements ControlValueAccessor, CanColor, CanDisable, HasTabIndex {\n\n    @ViewChild('input') _inputElement: ElementRef;\n\n    @Input() labelPosition: ToggleLabelPositionType = 'right';\n\n    @Input('aria-label') ariaLabel: string = '';\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-toggle-${++nextUniqueId}`;\n\n    // tslint:disable:member-ordering\n    @Input() id: string = this._uniqueId;\n\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    @Input() name: string | null = null;\n\n    @Input() value: string;\n\n    private _disabled: boolean = false;\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this._disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    get checked() {\n        return this._checked;\n    }\n\n    @Input()\n    set checked(value: boolean) {\n        if (value !== this._checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    @Output() readonly change: EventEmitter<McToggleChange> =\n        new EventEmitter<McToggleChange>();\n\n    constructor(public _elementRef: ElementRef,\n                private _focusMonitor: FocusMonitor,\n                private _changeDetectorRef: ChangeDetectorRef,\n                @Attribute('tabindex') tabIndex: string\n    ) {\n        super(_elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _getAriaChecked(): boolean {\n        return this.checked;\n    }\n\n    _onInteractionEvent(event: Event) {\n        event.stopPropagation();\n    }\n\n    _onLabelTextChange() {\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onInputClick(event: MouseEvent) {\n        event.stopPropagation();\n        this._updateModelValue();\n        this._emitChangeEvent();\n    }\n\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    registerOnChange(fn: any) {\n        this._onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this._onTouchedCallback = fn;\n    }\n\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    // tslint:disable-next-line:no-empty\n    private _onTouchedCallback = () => {};\n\n    // tslint:disable-next-line:no-empty\n    private _onChangeCallback = (_: any) => {};\n\n    private _updateModelValue() {\n        this._checked = !this.checked;\n        this._onChangeCallback(this.checked);\n        this._onTouchedCallback();\n    }\n\n    private _emitChangeEvent() {\n        const event = new McToggleChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._onChangeCallback(this.checked);\n        this.change.emit(event);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McToggleComponent } from './toggle.component';\n\n\n@NgModule({\n    imports: [CommonModule, BrowserAnimationsModule, A11yModule, McCommonModule],\n    exports: [McToggleComponent],\n    declarations: [McToggleComponent]\n})\nexport class McToggleModule {\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, EventEmitter, forwardRef, Input, IterableDiffer,\n    IterableDiffers, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    Directive, ElementRef, Inject\n} from '@angular/core';\nimport { NodeDef, ViewData } from '@angular/core/src/view';\n\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { CdkTreeNode, CdkTree, CdkTreeNodeOutlet } from '@ptsecurity/cdk/tree';\n\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\n\nimport { END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n/**\n * Wrapper for the CdkTree node with Material design styles.\n */\n@Directive({\n    exportAs: 'mcTreeNodeOption',\n    selector: 'mc-tree-node-option',\n    host: {\n        tabindex: '-1',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '[attr.aria-expanded]': 'isExpanded',\n        '[attr.aria-level]': 'role === \"treeitem\" ? level : null',\n        class: 'mc-tree-node',\n\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n\n        '(click)': '_handleClick()'\n    },\n    providers: [\n        { provide: CdkTreeNode, useExisting: McTreeNodeOption }\n    ]\n})\nexport class McTreeNodeOption<T> extends CdkTreeNode<T> implements CanDisable {\n    @Input() role: 'treeitem' | 'group' = 'treeitem';\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.treeSelection.selectedOptions && this.treeSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            // this.treeSelection._reportValueChange();\n        }\n    }\n\n    private _hasFocus: boolean = false;\n\n    private _disabled: boolean = false;\n    private _selected: boolean = false;\n\n    constructor(\n        protected _elementRef: ElementRef,\n        @Inject(forwardRef(() => McTreeSelection))\n        protected treeSelection: McTreeSelection<T>\n    ) {\n        super(_elementRef, treeSelection);\n    }\n\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n\n        this.treeSelection.setFocusedOption(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.treeSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.treeSelection.selectedOptions.select(this);\n        } else {\n            this.treeSelection.selectedOptions.deselect(this);\n        }\n\n        // this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleFocus(): void {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur(): void {\n        this._hasFocus = false;\n    }\n\n    _handleClick(): void {\n        if (this.disabled) { return; }\n\n        this.treeSelection.setFocusedOption(this);\n    }\n}\n\nexport const _McTreeSelectionBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    typeof CdkTree\n    = mixinTabIndex(mixinDisabled(CdkTree));\n\nexport class McTreeNavigationChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\nexport class McTreeSelectionChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\n@Component({\n    exportAs: 'mcTreeSelection',\n    selector: 'mc-tree-selection',\n    template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n    host: {\n        '[tabIndex]': 'tabIndex',\n        class: 'mc-tree-selection',\n        role: 'tree-selection',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    styleUrls: ['./tree.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: CdkTree, useExisting: McTreeSelection }]\n})\nexport class McTreeSelection<T> extends _McTreeSelectionBase<T>\n    implements AfterContentInit, CanDisable, HasTabIndex {\n    // Outlets within the tree's template where the dataNodes will be inserted.\n    @ViewChild(CdkTreeNodeOutlet) _nodeOutlet: CdkTreeNodeOutlet;\n\n    @ContentChildren(forwardRef(() => McTreeNodeOption)) options: QueryList<McTreeNodeOption<T>>;\n\n    _keyManager: FocusKeyManager<McTreeNodeOption<T>>;\n\n    selectedOptions: SelectionModel<McTreeNodeOption<T>>;\n\n    _disabled: boolean = false;\n    tabIndex: number;\n    multiple: boolean;\n    autoSelect: boolean;\n    noUnselect: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(rawValue: boolean) {\n        const value = toBoolean(rawValue);\n\n        if (this._disabled !== value) {\n            this._disabled = value;\n\n            if (this._disabled) {\n                console.log('need disable all options');\n            } else {\n                console.log('need enable all options');\n            }\n        }\n    }\n\n    @Output() readonly navigationChange = new EventEmitter<McTreeNavigationChange>();\n\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectionChange>();\n\n    constructor(\n        private _elementRef: ElementRef,\n        _differs: IterableDiffers,\n        _changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('multiple') multiple: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string\n    ) {\n        super(_differs, _changeDetectorRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.selectedOptions = new SelectionModel<McTreeNodeOption<T>>(this.multiple);\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case LEFT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.collapse(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case RIGHT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.expand(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                this._keyManager.setPreviousPageItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                this._keyManager.setNextPageItemActive();\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    ngAfterContentInit(): void {\n        this._keyManager = new FocusKeyManager<McTreeNodeOption<T>>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(true)\n            .withHorizontalOrientation(null);\n    }\n\n    updateScrollSize(): void {\n        if (!this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    setFocusedOption(option: McTreeNodeOption<T>): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitNavigationEvent(option);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McTreeNodeOption<T> = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    renderNodeChanges(\n        data: T[],\n        dataDiffer: IterableDiffer<T> = this._dataDiffer,\n        viewContainer: any = this._nodeOutlet.viewContainer,\n        parentData?: T\n    ) {\n        super.renderNodeChanges(data, dataDiffer, viewContainer, parentData);\n\n        const arrayOfInstances = [];\n\n        viewContainer._embeddedViews.forEach((view: ViewData) => {\n            const viewDef = view.def;\n\n            viewDef.nodes.forEach((node: NodeDef) => {\n                if (viewDef.nodeMatchedQueries === node.matchedQueryIds) {\n                    const nodeData: any = view.nodes[node.nodeIndex];\n\n                    arrayOfInstances.push(nodeData.instance as never);\n                }\n            });\n        });\n\n        if (this.options) {\n            this.options.reset(arrayOfInstances);\n            this.options.notifyOnChanges();\n        }\n\n        this.updateScrollSize();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _emitNavigationEvent(option: McTreeNodeOption<T>): void {\n        this.navigationChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    _emitChangeEvent(option: McTreeNodeOption<T>): void {\n        this.selectionChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    private _canDeselectLast(option: McTreeNodeOption<T>): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && option.selected);\n    }\n}\n\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\n\nimport { McTreeNodeDef } from './node';\nimport { McTreeNodePadding } from './padding';\nimport { McTreeSelection, McTreeNodeOption } from './tree-selection';\n\n\nconst MC_TREE_DIRECTIVES = [\n    McTreeNodeDef,\n    McTreeNodePadding,\n    McTreeSelection,\n    McTreeNodeOption\n];\n\n@NgModule({\n    imports: [CommonModule, CdkTreeModule],\n    exports: MC_TREE_DIRECTIVES,\n    declarations: MC_TREE_DIRECTIVES\n})\nexport class McTreeModule {}\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { FlatTreeControl, ITreeControl } from '@ptsecurity/cdk/tree';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nexport class McTreeFlattener<T, F> {\n\n    constructor(public transformFunction: (node: T, level: number) => F,\n                public getLevel: (node: F) => number,\n                public isExpandable: (node: F) => boolean,\n                public getChildren: (node: T) => Observable<T[]>) {\n    }\n\n    _flattenNode(node: T, level: number,\n                 resultNodes: F[], parentMap: boolean[]): F[] {\n        const flatNode = this.transformFunction(node, level);\n        resultNodes.push(flatNode);\n\n        if (this.isExpandable(flatNode)) {\n            this.getChildren(node).pipe(take(1)).subscribe((children) => {\n                children.forEach((child, index) => {\n                    const childParentMap: boolean[] = parentMap.slice();\n                    childParentMap.push(index !== children.length - 1);\n                    this._flattenNode(child, level + 1, resultNodes, childParentMap);\n                });\n            });\n        }\n\n        return resultNodes;\n    }\n\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData: T[]): F[] {\n        const resultNodes: F[] = [];\n        structuredData.forEach((node) => this._flattenNode(node, 0, resultNodes, []));\n\n        return resultNodes;\n    }\n\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes: F[], treeControl: ITreeControl<F>): F[] {\n        const results: F[] = [];\n        const currentExpand: boolean[] = [];\n        currentExpand[0] = true;\n\n        nodes.forEach((node) => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n\n            if (expand) { results.push(node); }\n\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n\n        return results;\n    }\n}\n\n\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `McTree`.\n * The nested tree nodes of type `T` are flattened through `MсTreeFlattener`, and converted\n * to type `F` for `McTree` to consume.\n */\nexport class McTreeFlatDataSource<T, F> extends DataSource<F> {\n    _flattenedData = new BehaviorSubject<F[]>([]);\n\n    _expandedData = new BehaviorSubject<F[]>([]);\n\n    _data: BehaviorSubject<T[]>;\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n        this._flattenedData.next(this.treeFlattener.flattenNodes(this.data));\n        this.treeControl.dataNodes = this._flattenedData.value;\n    }\n\n    constructor(private treeControl: FlatTreeControl<F>,\n                private treeFlattener: McTreeFlattener<T, F>,\n                initialData: T[] = []) {\n        super();\n        this._data = new BehaviorSubject<T[]>(initialData);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<F[]> {\n        const changes = [\n            collectionViewer.viewChange,\n            this.treeControl.expansionModel.onChange!,\n            this._flattenedData\n        ];\n\n        return merge(...changes).pipe(map(() => {\n            this._expandedData.next(\n                this.treeFlattener.expandFlattenedNodes(this._flattenedData.value, this.treeControl));\n\n            return this._expandedData.value;\n        }));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by ITreeControl and each non-leaf node.\n */\nexport class McTreeNestedDataSource<T> extends DataSource<T> {\n    _data = new BehaviorSubject<T[]>([]);\n\n    /**\n     * Data for the nested tree\n     */\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<T[]> {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map(() => this.data));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import {\n    ElementRef,\n    QueryList,\n    ContentChildren,\n    Component,\n    ChangeDetectionStrategy,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { mixinColor, CanColor, CanColorCtor } from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\nexport class McTagBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McTagMixinBase: CanColorCtor & typeof McTagBase\n    = mixinColor(McTagBase);\n\n\n@Component({\n    selector: 'mc-tag',\n    templateUrl: 'tag.partial.html',\n    styleUrls: ['./tag.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'mc-tag' },\n    inputs: ['color']\n})\nexport class McTag extends _McTagMixinBase implements CanColor {\n    @ContentChildren(McIcon) contentChildren: QueryList<McIcon>;\n\n    nativeElement: HTMLElement;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-left-icon');\n                }\n\n                if (iconElement.previousSibling) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-right-icon');\n                }\n            }\n        } else if (icons.length > 1) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTag } from './tag.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McTag\n    ],\n    declarations: [\n        McTag\n    ]\n})\nexport class McTagModule {}\n","import {\n    Directive, DoCheck, ElementRef, Inject,\n    Input, OnChanges, OnDestroy, Optional,\n    Self, InjectionToken, NgZone, OnInit\n} from '@angular/core';\nimport { FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { fromEvent, Subscription, Subject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\n\nexport const MC_TEXTAREA_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_TEXTAREA_VALUE_ACCESSOR');\n\nlet nextUniqueId = 0;\n\nconst ROW_SEPARATOR = '\\n';\n\nexport class McTextareaBase {\n    constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n                public _parentForm: NgForm,\n                public _parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McTextareaMixinBase: CanUpdateErrorStateCtor & typeof McTextareaBase = mixinErrorState(McTextareaBase);\n\n@Directive({\n    selector: 'textarea[mcTextarea]',\n    exportAs: 'mcTextarea',\n    host: {\n        class: 'mc-textarea',\n        '[class.mc-textarea-resizable]': '!canGrow',\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': 'focusChanged(false)',\n        '(focus)': 'focusChanged(true)'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McTextarea }]\n})\nexport class McTextarea extends McTextareaMixinBase implements McFormFieldControl<any>, OnInit, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    @Input() canGrow: boolean = true;\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-textarea';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this.uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this.valueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this.valueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected uid = `mc-textsrea-${nextUniqueId++}`;\n    protected previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n\n    private valueAccessor: { value: any };\n    private growSubscription: Subscription;\n\n    private lineHeight: number = 0;\n    private freeRowsHeight: number = 0;\n    private minHeight: number = 0;\n\n    constructor(protected elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_TEXTAREA_VALUE_ACCESSOR) inputValueAccessor: any,\n                private ngZone: NgZone) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the textarea value\n        // accessor.\n        this.valueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        const growObserver = fromEvent(elementRef.nativeElement, 'input')\n            /*.pipe(\n                map((event: any) => this.getGrowHeight()),\n                // map((event: any) => event.target.scrollHeight),\n                distinctUntilChanged()\n            )*/;\n        this.growSubscription = growObserver.subscribe(this.grow.bind(this));\n    }\n\n    ngOnInit() {\n        setTimeout(() => this.grow(), 0);\n        this.lineHeight = parseInt(getComputedStyle(this.elementRef.nativeElement).lineHeight!, 10);\n\n        const paddingTop = parseInt(getComputedStyle(this.elementRef.nativeElement).paddingTop!, 10);\n        const paddingBottom = parseInt(getComputedStyle(this.elementRef.nativeElement).paddingBottom!, 10);\n\n        // tslint:disable-next-line:no-magic-numbers\n        this.minHeight = this.lineHeight * 2 + paddingTop + paddingBottom;\n        this.freeRowsHeight = this.lineHeight;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        this.growSubscription.unsubscribe();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    /** Grow textarea height to avoid vertical scroll  */\n    grow() {\n        if (!this.canGrow) {\n            return;\n        }\n\n        this.ngZone.runOutsideAngular(() => {\n            const textarea = this.elementRef.nativeElement;\n\n            const outerHeight = parseInt(window.getComputedStyle(textarea).height!, 10);\n            const diff = outerHeight - textarea.clientHeight;\n\n            textarea.style.height = 0; // this line is important to height recalculation\n\n            const height = Math.max(this.minHeight, textarea.scrollHeight + diff + this.freeRowsHeight);\n            textarea.style.height = `${height}px`;\n        });\n    }\n\n    /** Focuses the textarea. */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the textarea changes. */\n    focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native textarea `value` property. */\n    protected dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the textarea is invalid based on the native validation. */\n    protected isBadInput(): boolean {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this.elementRef.nativeElement as HTMLTextAreaElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private getGrowHeight(): number {\n        const textarea = this.elementRef.nativeElement;\n        const outerHeight = parseInt(window.getComputedStyle(textarea).height!.toString(), 10);\n        const diff = outerHeight - textarea.clientHeight;\n\n        return Math.max(this.minHeight, textarea.scrollHeight + diff);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McTextarea } from './textarea.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McTextarea],\n    declarations: [McTextarea]\n})\nexport class McTextareaModule {\n}\n","import {\n    Directive,\n    DoCheck,\n    ElementRef,\n    forwardRef,\n    Inject,\n    InjectionToken,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Renderer2,\n    Self\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroupDirective,\n    NG_VALIDATORS,\n    NgControl,\n    NgForm,\n    ValidationErrors,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport {\n    noop,\n    Subject\n} from 'rxjs';\n\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\n\nimport {\n    ARROW_DOWN_KEYCODE,\n    ARROW_LEFT_KEYCODE,\n    ARROW_RIGHT_KEYCODE,\n    ARROW_UP_KEYCODE,\n    DEFAULT_TIME_FORMAT,\n    HOURS_PER_DAY,\n    HOURS_MINUTES_REGEXP,\n    HOURS_MINUTES_SECONDS_REGEXP,\n    HOURS_ONLY_REGEXP,\n    MINUTES_PER_HOUR,\n    SECONDS_PER_MINUTE,\n    TIMEFORMAT_PLACEHOLDERS,\n    TimeFormats,\n    TimeParts\n} from './timepicker.constants';\n\n\nlet uniqueComponentIdSuffix: number = 0;\nlet validatorOnChange: () => void = noop;\nlet validator: ValidatorFn | null = () => null;\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n\nexport class McTimepickerBase {\n    constructor(\n        public _defaultErrorStateMatcher: ErrorStateMatcher,\n        public _parentForm: NgForm,\n        public _parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl) { }\n}\n\n// tslint:disable-next-line naming-convention\nexport const McTimepickerMixinBase:\n    CanUpdateErrorStateCtor &\n    typeof McTimepickerBase = mixinErrorState(McTimepickerBase);\n\n@Directive({\n    selector: 'input[mcTimepicker]',\n    exportAs: 'mcTimepickerInput',\n    host: {\n        class: 'mc-timepicker mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '[attr.time-format]': 'timeFormat',\n        '[attr.min-time]': 'minTime',\n        '[attr.max-time]': 'maxTime',\n        '[attr.value]': 'value',\n        '(blur)': 'onBlur()',\n        '(focus)': 'focusChanged(true)',\n        '(input)': 'onInput()',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    },\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useValue: {\n                validate(c) { return validator ? validator(c) : null; },\n                registerOnValidatorChange(fn: () => void): void { validatorOnChange = fn; }\n            },\n            multi: true\n        },\n        {\n            provide: McFormFieldControl,\n            useExisting: forwardRef(() => McTimepicker)\n        }\n    ]\n\n})\nexport class McTimepicker extends McTimepickerMixinBase\n    implements McFormFieldControl<any>,\n        OnChanges,\n        OnDestroy,\n        DoCheck,\n        CanUpdateErrorState,\n        ControlValueAccessor {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-timepicker';\n\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) { return this.ngControl.disabled; }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n        }\n\n        this.stateChanges.next();\n    }\n\n    @Input()\n    get id(): string { return this._id; }\n\n    set id(value: string) { this._id = value || this.uid; }\n\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean { return this._required; }\n\n    set required(value: boolean) { this._required = coerceBooleanProperty(value); }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string { return this.inputValueAccessor.value; }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this.inputValueAccessor.value = value;\n            this.applyInputChanges();\n        }\n    }\n\n    @Input('time-format')\n    get timeFormat(): TimeFormats { return this._timeFormat; }\n\n    set timeFormat(formatValue: TimeFormats) {\n        this._timeFormat = Object\n            .keys(TimeFormats)\n            .map((timeFormatKey) => TimeFormats[timeFormatKey])\n            .indexOf(formatValue) > -1 ? formatValue : DEFAULT_TIME_FORMAT;\n\n        validatorOnChange();\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[this._timeFormat];\n    }\n\n    @Input('min-time')\n    get minTime(): string | null { return this._minTime; }\n\n    set minTime(minValue: string | null) {\n        this._minTime = minValue;\n        this.minDateTime = minValue !== null ? this.getDateFromTimeString(minValue) : undefined;\n        validatorOnChange();\n    }\n\n    @Input('max-time')\n    get maxTime(): string | null { return this._maxTime; }\n\n    set maxTime(maxValue: string | null) {\n        this._maxTime = maxValue;\n        this.maxDateTime = maxValue !== null ? this.getDateFromTimeString(maxValue) : undefined;\n        validatorOnChange();\n    }\n\n    private _id: string;\n    private readonly uid = `mc-timepicker-${uniqueComponentIdSuffix++}`;\n    private _disabled: boolean;\n    private _required: boolean;\n    private previousNativeValue: any;\n    private readonly inputValueAccessor: { value: any };\n    private onChange: (value: any) => void;\n    private onTouched: () => void;\n    private _timeFormat: TimeFormats;\n    private _minTime: string | null = null;\n    private minDateTime: Date | undefined;\n    private _maxTime: string | null = null;\n    private maxDateTime: Date | undefined;\n    private currentDateTimeInput: Date | undefined;\n\n    constructor(private readonly elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any,\n                private readonly renderer: Renderer2) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this.inputValueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n        this.onChange = noop;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[DEFAULT_TIME_FORMAT];\n\n        // Instead of NG_VALUE_ACCESSOR (https://github.com/angular/material2/issues/8158#issuecomment-344618103)\n        if (this.ngControl) { this.ngControl.valueAccessor = this; }\n\n        // Substitute initial empty validator with validator linked to directive object instance (workaround)\n        validator = Validators.compose([\n            () => this.parseValidator(),\n            () => this.minTimeValidator(),\n            () => this.maxTimeValidator()\n        ]);\n    }\n\n    ngOnChanges(): void {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck(): void {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    focusChanged(isFocused: boolean): void {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.onTouched();\n            this.stateChanges.next();\n        }\n    }\n\n    onBlur() {\n        this.applyInputChanges();\n        this.focusChanged(false);\n    }\n\n    onPaste($event) {\n        $event.preventDefault();\n        const clipboardUserInput: string = $event.clipboardData.getData('text');\n\n        if (this.getDateFromTimeString(clipboardUserInput) === undefined) { return; }\n\n        this.elementRef.nativeElement.value = clipboardUserInput;\n        this.onInput();\n    }\n\n    onInput() {\n        const initialCursorStart: number = this.elementRef.nativeElement.selectionStart;\n        const initialCursorEnd: number = this.elementRef.nativeElement.selectionEnd;\n        let isAutocompleteTriggered: boolean = false;\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(this.elementRef.nativeElement.value);\n\n        // tslint:disable no-magic-numbers\n        if (hoursOnly &&\n            hoursOnly[1] &&\n            hoursOnly[1].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutes &&\n            hoursAndMinutes[1].length === 1 &&\n            hoursAndMinutes[2] &&\n            hoursAndMinutes[2].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutesAndSeconds &&\n            hoursAndMinutesAndSeconds[1].length === 2 &&\n            hoursAndMinutesAndSeconds[2].length === 2 &&\n            hoursAndMinutesAndSeconds[3] &&\n            hoursAndMinutesAndSeconds[3].length === 2) {\n            isAutocompleteTriggered = true;\n        }\n        // tslint:enable no-magic-numbers\n\n        this.applyInputChanges({ doTimestringReformat: isAutocompleteTriggered });\n\n        this.elementRef.nativeElement.selectionStart = initialCursorStart;\n        this.elementRef.nativeElement.selectionEnd = initialCursorEnd;\n\n        if (isAutocompleteTriggered && this.ngControl.errors === null) {\n            this.createSelectionOfTimeComponentInInput(initialCursorStart + 1);\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    writeValue(value: Date | null): void {\n        if (value !== null) {\n            this.renderer.setProperty(this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(value, this.timeFormat)\n            );\n        }\n        this.onChange(value || null);\n        this.applyInputChanges();\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        const keyCode: string = this.getKeyCode(event);\n\n        if (keyCode === ARROW_UP_KEYCODE || keyCode === ARROW_DOWN_KEYCODE) {\n            this.upDownTimeByArrowKeys(event);\n        }\n        if (keyCode === ARROW_LEFT_KEYCODE || keyCode === ARROW_RIGHT_KEYCODE) {\n            this.switchSelectionBetweenTimeparts(event);\n        }\n    }\n\n    registerOnChange(fn: (value: Date) => void): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    private dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    private isBadInput(): boolean {\n        const validity = (<HTMLInputElement> this.elementRef.nativeElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private applyInputChanges(applyParams: {\n        changedTime?: Date;\n        doTimestringReformat?: boolean;\n    } = {}): void {\n        const { changedTime, doTimestringReformat = true } = applyParams;\n\n        const timeToApply: Date | undefined = changedTime ||\n            this.getDateFromTimeString(this.elementRef.nativeElement.value);\n        this.currentDateTimeInput = timeToApply;\n\n        if (doTimestringReformat && timeToApply !== undefined) {\n            const selectionStart: number = this.elementRef.nativeElement.selectionStart;\n            const selectionEnd: number = this.elementRef.nativeElement.selectionEnd;\n            this.renderer.setProperty(\n                this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(timeToApply, this.timeFormat));\n            this.elementRef.nativeElement.selectionStart = selectionStart;\n            this.elementRef.nativeElement.selectionEnd = selectionEnd;\n        }\n\n        (<FormControl> this.ngControl.control).updateValueAndValidity();\n        const result = this.ngControl.errors === null && timeToApply !== undefined ? timeToApply : null;\n        this.onChange(result);\n        this.stateChanges.next();\n    }\n\n    private upDownTimeByArrowKeys(event: KeyboardEvent): void {\n        event.preventDefault();\n\n        let changedTime: Date | undefined = this.currentDateTimeInput;\n        if (changedTime !== undefined) {\n            const cursorPos = this.elementRef.nativeElement.selectionStart;\n\n            const modifiedTimePart = this.getTimeEditMetrics(cursorPos)\n                .modifiedTimePart;\n            const keyCode: string = this.getKeyCode(event);\n            if (keyCode === ARROW_UP_KEYCODE) { changedTime = this.incrementTime(changedTime, modifiedTimePart); }\n            if (keyCode === ARROW_DOWN_KEYCODE) { changedTime = this.decrementTime(changedTime, modifiedTimePart); }\n            this.applyInputChanges({ changedTime });\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    private switchSelectionBetweenTimeparts(event: KeyboardEvent): void {\n        const changedTime: Date | undefined = this.currentDateTimeInput;\n        const keyCode: string = this.getKeyCode(event);\n\n        if (changedTime !== undefined) {\n            let cursorPos: number = this.elementRef.nativeElement.selectionStart;\n            if (keyCode === ARROW_LEFT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfPrevTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            } else if (keyCode === ARROW_RIGHT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfNextTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            }\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    /**\n     * @description Microsoft EDGE doesn't support KeyboaedEvent.code thus we need this helper\n     */\n    private getKeyCode(event: KeyboardEvent): string {\n        return event.code || event.key;\n    }\n\n    private createSelectionOfTimeComponentInInput(cursorPos: number): void {\n        setTimeout(() => {\n            const newEditParams = this.getTimeEditMetrics(cursorPos);\n            this.elementRef.nativeElement.selectionStart = newEditParams.cursorStartPosition;\n            this.elementRef.nativeElement.selectionEnd = newEditParams.cursorEndPosition;\n        });\n    }\n\n    private incrementTime(dateVal: Date,\n                          whatToIncrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToIncrement) {\n            case TimeParts.hours:\n                hours++;\n                break;\n            case TimeParts.minutes:\n                minutes++;\n                break;\n            case TimeParts.seconds:\n                seconds++;\n                break;\n            default:\n        }\n\n        if (seconds > SECONDS_PER_MINUTE) { seconds = 0; }\n\n        if (minutes > MINUTES_PER_HOUR) { minutes = 0; }\n\n        if (hours > HOURS_PER_DAY) { hours = 0; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    /**\n     * @description Decrement part of time\n     */\n    private decrementTime(dateVal: Date,\n                          whatToDecrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToDecrement) {\n            case TimeParts.hours:\n                hours--;\n                break;\n            case TimeParts.minutes:\n                minutes--;\n                break;\n            case TimeParts.seconds:\n                seconds--;\n                break;\n            default:\n        }\n\n        if (seconds < 0) { seconds = SECONDS_PER_MINUTE; }\n\n        if (minutes < 0) { minutes = MINUTES_PER_HOUR; }\n\n        if (hours < 0) { hours = HOURS_PER_DAY; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    private getCursorPositionOfPrevTimePartStart(cursorPos: number, timeString: string): number {\n        return cursorPos === 0 ? timeString.length : cursorPos - 1;\n    }\n\n    private getCursorPositionOfNextTimePartStart(cursorPos: number,\n                                                 timeString: string,\n                                                 timeDevider: string = ':'): number {\n        const nextDividerPos: number = timeString.indexOf(timeDevider, cursorPos);\n\n        return nextDividerPos !== undefined ? nextDividerPos + 1 : 0;\n    }\n\n    /**\n     * @description Get params for arrow-keys (up/down) time valie edit.\n     * @param cursorPosition Current cursor position in timeString\n     */\n    private getTimeEditMetrics(cursorPosition: number): {\n        modifiedTimePart: TimeParts;\n        cursorStartPosition: number;\n        cursorEndPosition: number;\n    } {\n        const timeString: string = this.elementRef.nativeElement.value;\n        let modifiedTimePart: TimeParts;\n        let cursorStartPosition: number;\n        let cursorEndPosition: number;\n        const hoursIndex = 0;\n        const minutesIndex = timeString.indexOf(':', hoursIndex + 1);\n        const secondsIndex = minutesIndex !== -1 ? timeString.indexOf(':', minutesIndex + 1) : -1;\n\n        if (secondsIndex !== -1 && cursorPosition > secondsIndex) {\n            modifiedTimePart = TimeParts.seconds;\n            cursorStartPosition = secondsIndex + 1;\n            cursorEndPosition = timeString.length;\n        } else if (minutesIndex !== -1 && cursorPosition > minutesIndex) {\n            modifiedTimePart = TimeParts.minutes;\n            cursorStartPosition = minutesIndex + 1;\n            cursorEndPosition = secondsIndex > -1 ? secondsIndex : timeString.length;\n        } else {\n            modifiedTimePart = TimeParts.hours;\n            cursorStartPosition = hoursIndex;\n            cursorEndPosition = minutesIndex !== -1 ? minutesIndex : timeString.length;\n        }\n\n        return {\n            modifiedTimePart,\n            cursorStartPosition,\n            cursorEndPosition\n        };\n    }\n\n    /**\n     * @description Create time string for displaying inside input element of UI\n     */\n    private getTimeStringFromDate(tempVal: Date,\n                                  timeFormat: TimeFormats = DEFAULT_TIME_FORMAT): string {\n        const hours: string = this.getNumberWithLeadingZero(tempVal.getHours());\n        const minutes: string = this.getNumberWithLeadingZero(tempVal.getMinutes());\n        const seconds: string = this.getNumberWithLeadingZero(tempVal.getSeconds());\n\n        const formattedTimeGenerators = {\n            [TimeFormats.HHmm]: () => `${hours}:${minutes}`,\n            [TimeFormats.HHmmss]: () => `${hours}:${minutes}:${seconds}`\n        };\n\n        return formattedTimeGenerators[timeFormat]();\n    }\n\n    private getParsedTimeParts(timeString: string): {\n        hoursOnly: any;\n        hoursAndMinutes: any;\n        hoursAndMinutesAndSeconds: any;\n    } {\n        const hoursAndMinutesAndSeconds = timeString.match(HOURS_MINUTES_SECONDS_REGEXP);\n        const hoursAndMinutes = timeString.match(HOURS_MINUTES_REGEXP);\n        const hoursOnly = timeString.match(HOURS_ONLY_REGEXP);\n\n        return {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        };\n    }\n\n    /**\n     * @description Create Date object from separate parts of time\n     */\n    private getDateFromTimeDigits(hours: number, minutes: number, seconds: number = 0): Date | undefined {\n        return this.getDateFromTimeString(`${hours}:${minutes}:${seconds}`);\n    }\n\n    private getDateFromTimeString(timeString: string | undefined): Date | undefined {\n        // TODO Use moment-js\n        if (timeString === undefined) { return; }\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(timeString);\n\n        if (timeString.trim().length === 0 ||\n            hoursOnly === null && hoursAndMinutes === null && hoursAndMinutesAndSeconds === null) {\n            return;\n        }\n\n        // tslint:disable no-magic-numbers\n        let hours: number = 0;\n        let minutes: number = 0;\n        let seconds: number = 0;\n\n        if (hoursOnly) {\n            hours = Number(hoursOnly[1]);\n        } else if (hoursAndMinutes) {\n            hours = Number(hoursAndMinutes[1]);\n            minutes = Number(hoursAndMinutes[2]);\n        } else if (hoursAndMinutesAndSeconds) {\n            hours = Number(hoursAndMinutesAndSeconds[1]);\n            minutes = Number(hoursAndMinutesAndSeconds[2]);\n            seconds = Number(hoursAndMinutesAndSeconds[3]);\n        }\n        // const timestamp: number = Date.parse(fullDateString);\n        const resultDate: Date = new Date(1970, 0, 1, hours, minutes, seconds);\n        // tslint:enable no-magic-numbers\n\n        return isNaN(resultDate.getTime()) ? undefined : resultDate;\n    }\n\n    private getNumberWithLeadingZero(digit: number): string {\n        const MAX_DIGIT_WITH_LEADING_ZERO: number = 9;\n\n        return digit > MAX_DIGIT_WITH_LEADING_ZERO ? `${digit}` : `0${digit}`;\n    }\n\n    private getTimeDigitsFromDate(dateVal: Date): { hours: number; minutes: number; seconds: number } {\n        return {\n            hours: dateVal.getHours(),\n            minutes: dateVal.getMinutes(),\n            seconds: dateVal.getSeconds()\n        };\n    }\n\n    private parseValidator(): ValidationErrors | null {\n        return this.currentDateTimeInput === undefined ?\n            { mcTimepickerParse: { text: this.elementRef.nativeElement.value } } :\n            null;\n    }\n\n    private minTimeValidator(): ValidationErrors | null {\n\n        if (this.currentDateTimeInput !== undefined &&\n            this.minDateTime !== undefined &&\n            this.isTimeLowerThenMin(this.currentDateTimeInput)) {\n            return { mcTimepickerLowerThenMintime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private maxTimeValidator(): ValidationErrors | null {\n        if (this.currentDateTimeInput !== undefined &&\n            this.maxDateTime !== undefined &&\n            this.isTimeGreaterThenMax(this.currentDateTimeInput)) {\n            return { mcTimepickerHigherThenMaxtime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private isTimeLowerThenMin(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.minDateTime).getTime() < 0;\n    }\n\n    private isTimeGreaterThenMax(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.maxDateTime).getTime() >= 0;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTimepicker } from './timepicker';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        FormsModule\n    ],\n    declarations: [\n        McTimepicker\n    ],\n    exports: [\n        McTimepicker\n    ]\n})\nexport class McTimepickerModule {}\n","import {\n    animate,\n    AnimationTriggerMetadata,\n    state,\n    style,\n    transition,\n    trigger,\n    query,\n    animateChild,\n    group\n} from '@angular/animations';\n\n\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n */\nexport const mcSelectAnimations: {\n    readonly transformPanel: AnimationTriggerMetadata;\n    readonly fadeInContent: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        transition('void => *', group([\n            query('@fadeInContent', animateChild()),\n            animate('150ms cubic-bezier(0.25, 0.8, 0.25, 1)')\n        ])),\n        transition('* => void', [\n            animate('250ms 100ms linear', style({ opacity: 0 }))\n        ])\n    ]),\n\n    /**\n     * This animation fades in the background color and text content of the\n     * select's options. It is time delayed to occur 100ms after the overlay\n     * panel has transformed in.\n     */\n    fadeInContent: trigger('fadeInContent', [\n        state('showing', style({ opacity: 1 })),\n        transition('void => showing', [\n            style({ opacity: 0 }),\n            animate('150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const transformPanel = mcSelectAnimations.transformPanel;\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const fadeInContent = mcSelectAnimations.fadeInContent;\n","import { fromEvent, Observable, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport {\n    AfterViewInit,\n    Component, Directive,\n    ElementRef,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    ViewEncapsulation,\n    ContentChild,\n    TemplateRef,\n    ChangeDetectorRef,\n    ChangeDetectionStrategy,\n    ViewChild\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Platform } from '@ptsecurity/cdk/platform';\nimport { CanDisable, CanDisableCtor, mixinDisabled } from '@ptsecurity/mosaic/core';\n\n\nconst COLLAPSED_CLASS: string = 'mc-navbar-collapsed-title';\nconst MC_ICON = 'mc-icon';\nconst MC_NAVBAR = 'mc-navbar';\nconst MC_NAVBAR_CONTAINER = 'mc-navbar-container';\nconst MC_NAVBAR_ITEM = 'mc-navbar-item';\nconst MC_NAVBAR_BRAND = 'mc-navbar-brand';\nconst MC_NAVBAR_TITLE = 'mc-navbar-title';\nconst MC_NAVBAR_LOGO = 'mc-navbar-logo';\n\nexport type McNavbarContainerPositionType = 'left' | 'right';\n\nexport interface IMcNavbarDropdownItem {\n    link?: string;\n    text: string;\n}\n\n@Directive({\n    selector: MC_NAVBAR_LOGO,\n    host: {\n        class: MC_NAVBAR_LOGO\n    }\n})\nexport class McNavbarLogo {}\n\n@Directive({\n    selector: MC_NAVBAR_BRAND,\n    host: {\n        class: MC_NAVBAR_BRAND\n    }\n})\nexport class McNavbarBrand {}\n\n@Directive({\n    selector: MC_NAVBAR_TITLE,\n    host: {\n        class: MC_NAVBAR_TITLE\n    }\n})\nexport class McNavbarTitle {}\n\nexport class McNavbarItemBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McNavbarMixinBase: CanDisableCtor & typeof McNavbarItemBase = mixinDisabled(McNavbarItemBase);\n\n@Component({\n    selector: MC_NAVBAR_ITEM,\n    template: `\n        <a\n            [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\n            (click)=\"handleClickByItem()\"\n            (keydown)=\"handleKeydown($event)\"\n            class=\"mc-navbar-item\"\n        >\n            <ng-content></ng-content>\n            <i *ngIf=\"hasDropdownContent\" mc-icon=\"mc-angle-M_16\"></i>\n        </a>\n        <ul\n            #dropdownContent\n            *ngIf=\"hasDropdownContent\"\n            [ngClass]=\"{ 'is-collapsed': isCollapsed }\"\n            class=\"mc-navbar-dropdown\"\n        >\n            <li\n                *ngFor=\"let item of dropdownItems\"\n                (click)=\"handleClickByDropdownItem()\"\n                class=\"mc-navbar-dropdown-item\"\n            >\n                <ng-container *ngIf=\"dropdownItemTmpl\">\n                    <ng-container *ngTemplateOutlet=\"dropdownItemTmpl; context: { $implicit: item }\"></ng-container>\n                </ng-container>\n                <a\n                    *ngIf=\"!dropdownItemTmpl\"\n                    [attr.href]=\"item.link\"\n                    [ngClass]=\"{ 'is-active': isActiveDropdownLink(item.link) }\"\n                    class=\"mc-navbar-dropdown-link\"\n                >{{ item.text }}</a>\n            </li>\n        </ul>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': '-1'\n    }\n})\nexport class McNavbarItem extends _McNavbarMixinBase implements OnInit, AfterViewInit, OnDestroy, CanDisable {\n\n    @Input()\n    tabIndex: number = 0;\n\n    @Input()\n    dropdownItems: IMcNavbarDropdownItem[] = [];\n\n    @Input()\n    set collapsedTitle(value: string) {\n        this.elementRef.nativeElement.setAttribute('computedTitle', encodeURI(value));\n    }\n\n    @ContentChild('dropdownItemTmpl', { read: TemplateRef })\n    dropdownItemTmpl: TemplateRef<IMcNavbarDropdownItem>;\n\n    @ViewChild('dropdownContent', { read: ElementRef })\n    dropdownContent: ElementRef;\n\n    get hasDropdownContent() {\n        return this.dropdownItems.length > 0;\n    }\n\n    isCollapsed: boolean = true;\n\n    private _subscription: Subscription = new Subscription();\n    private _focusMonitor$: Observable<FocusOrigin>;\n\n    private get _dropdownElements(): HTMLElement[] {\n        return this.dropdownContent ? this.dropdownContent.nativeElement.querySelectorAll('li > *') : [];\n    }\n\n    constructor(\n        public  elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _platform: Platform,\n        private _cdRef: ChangeDetectorRef\n    ) {\n        super(elementRef);\n    }\n\n    ngOnInit() {\n        this.denyClickIfDisabled();\n\n        this._focusMonitor$ = this._focusMonitor.monitor(this.elementRef.nativeElement, true);\n\n        if (this.hasDropdownContent) {\n            this.listenClickOutside();\n        }\n    }\n\n    ngAfterViewInit() {\n        if (!this.hasDropdownContent) {\n            return;\n        }\n\n        this.startListenFocusDropdownItems();\n    }\n\n    ngOnDestroy() {\n        this._subscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n        this.stopListenFocusDropdownItems();\n    }\n\n    isActiveDropdownLink(link: string): boolean {\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n\n        return window.location.href.indexOf(link) >= 0;\n    }\n\n    handleClickByItem() {\n        this.toggleDropdown();\n    }\n\n    handleKeydown($event: KeyboardEvent) {\n        const isNavbarItem = ($event.target as HTMLElement).classList.contains(MC_NAVBAR_ITEM);\n\n        // tslint:disable-next-line\n        if (this.hasDropdownContent && $event.keyCode === SPACE && isNavbarItem) {\n            this.toggleDropdown();\n        }\n    }\n\n    handleClickByDropdownItem() {\n        this.forceCloseDropdown();\n    }\n\n    private listenClickOutside() {\n        this._subscription.add(\n            this._focusMonitor$.subscribe((origin) => {\n                if (origin === null) {\n                    this.forceCloseDropdown();\n                }\n            })\n        );\n    }\n\n    private toggleDropdown() {\n        this.isCollapsed = !this.isCollapsed;\n    }\n\n    private forceCloseDropdown() {\n        this.isCollapsed = true;\n        this._cdRef.detectChanges();\n    }\n\n    private startListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.monitor(el, true);\n        });\n    }\n\n    private stopListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.stopMonitoring(el);\n        });\n    }\n\n    // This method is required due to angular 2 issue https://github.com/angular/angular/issues/11200\n    private denyClickIfDisabled() {\n        const events: Event[] = this.elementRef.nativeElement.eventListeners('click');\n\n        events.forEach((event) => this.elementRef.nativeElement.removeEventListener('click', event));\n\n        this.elementRef.nativeElement.addEventListener('click', (event: MouseEvent) => {\n            if (this.elementRef.nativeElement.hasAttribute('disabled')) {\n                event.stopImmediatePropagation();\n            }\n        }, true);\n\n        events.forEach((event) => this.elementRef.nativeElement.addEventListener('click', event));\n    }\n}\n\n@Directive({\n    selector: MC_NAVBAR_CONTAINER\n})\nexport class McNavbarContainer {\n    @Input()\n    position: McNavbarContainerPositionType = 'left';\n\n    @HostBinding('class')\n    get cssClasses(): string {\n        return this.position === 'left' ? 'mc-navbar-left' : 'mc-navbar-right';\n    }\n}\n\nclass CollapsibleItem {\n    private _collapsed: boolean = false;\n\n    constructor(\n        public element: HTMLElement,\n        public width: number\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        this._collapsed = collapsed;\n\n        this.updateCollapsedClass();\n    }\n\n    private updateCollapsedClass() {\n        if (this._collapsed) {\n            this.element.classList.add(COLLAPSED_CLASS);\n        } else {\n            this.element.classList.remove(COLLAPSED_CLASS);\n        }\n\n    }\n}\n\nclass CachedItemWidth {\n\n    get canCollapse(): boolean {\n        return this.itemsForCollapse.length > 0;\n    }\n\n    private _collapsedItemsWidth: number;\n\n    get collapsedItemsWidth(): number {\n        if (this._collapsedItemsWidth !== undefined) {\n            return this._collapsedItemsWidth;\n        }\n\n        this.calculateAndCacheCollapsedItemsWidth();\n\n        return this._collapsedItemsWidth;\n    }\n\n    constructor(\n        public element: HTMLElement,\n        public width: number,\n        public itemsForCollapse: CollapsibleItem[] = []\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        if (this.itemsForCollapse.length > 0) {\n            this.updateTitle(collapsed);\n        }\n\n        this.itemsForCollapse.forEach((item) => item.processCollapsed(collapsed));\n    }\n\n    private calculateAndCacheCollapsedItemsWidth() {\n        this._collapsedItemsWidth = this.itemsForCollapse\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getTitle(): string {\n        const computedTitle = this.element.getAttribute('computedTitle');\n\n        return computedTitle\n            ? decodeURI(computedTitle)\n            : (this.itemsForCollapse.length > 0 ? this.itemsForCollapse[0].element.innerText : '');\n    }\n\n    private updateTitle(collapsed: boolean) {\n        if (collapsed) {\n            this.element.setAttribute('title', this.getTitle());\n        } else {\n            this.element.removeAttribute('title');\n        }\n    }\n}\n\n\n@Component({\n    selector: MC_NAVBAR,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <nav class=\"mc-navbar\">\n            <ng-content select=\"[${MC_NAVBAR_CONTAINER}],${MC_NAVBAR_CONTAINER}\"></ng-content>\n        </nav>\n    `,\n    styleUrls: ['./navbar.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class McNavbar implements AfterViewInit, OnDestroy {\n\n    private readonly forceRecalculateItemsWidth: boolean = false;\n    private readonly resizeDebounceInterval: number = 100;\n    private readonly firstLevelElement: string = MC_NAVBAR_CONTAINER;\n    private readonly secondLevelElements: string[] = [\n        MC_NAVBAR_ITEM,\n        MC_NAVBAR_BRAND,\n        MC_NAVBAR_TITLE\n    ];\n\n    private _totalItemsWidths: number;\n    private _itemsWidths: CachedItemWidth[];\n\n    private get maxAllowedWidth(): number {\n        return this._elementRef.nativeElement.querySelector('nav').getBoundingClientRect().width;\n    }\n\n    private get itemsWidths(): CachedItemWidth[] {\n        if (this._itemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._itemsWidths;\n        }\n\n        this.calculateAndCacheItemsWidth();\n\n        return this._itemsWidths;\n    }\n\n    private get totalItemsWidth(): number {\n        if (this._totalItemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._totalItemsWidths;\n        }\n\n        this.calculateAndCacheTotalItemsWidth();\n\n        return this._totalItemsWidths;\n    }\n\n    private _resizeSubscription: Subscription;\n\n    constructor(\n        private _elementRef: ElementRef\n    ) {\n        const resizeObserver = fromEvent(window, 'resize')\n            .pipe(debounceTime(this.resizeDebounceInterval));\n\n        this._resizeSubscription = resizeObserver.subscribe(this.updateCollapsed.bind(this));\n    }\n\n    updateCollapsed(): void {\n        let collapseDelta = this.totalItemsWidth - this.maxAllowedWidth;\n\n        for (let i = this.itemsWidths.length - 1; i >= 0; i--) {\n            const item = this.itemsWidths[i];\n\n            if (!item.canCollapse) {\n                continue;\n            }\n\n            item.processCollapsed(collapseDelta > 0);\n            collapseDelta -= item.collapsedItemsWidth;\n        }\n    }\n\n    ngAfterViewInit(): void {\n        // Note: this wait is required for loading and rendering fonts for icons;\n        // unfortunately we cannot control font rendering\n        setTimeout(() => this.updateCollapsed(), 0);\n    }\n\n    ngOnDestroy() {\n        this._resizeSubscription.unsubscribe();\n    }\n\n    private calculateAndCacheTotalItemsWidth() {\n        this._totalItemsWidths = this.itemsWidths\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getOuterElementWidth(element: HTMLElement): number {\n        const baseWidth  = element.getBoundingClientRect().width;\n        const marginRight = parseInt(getComputedStyle(element).getPropertyValue('margin-right'));\n        const marginLeft = parseInt(getComputedStyle(element).getPropertyValue('margin-left'));\n\n        return baseWidth + marginRight + marginLeft;\n    }\n\n    private calculateAndCacheItemsWidth() {\n        const allItemsSelector = this.secondLevelElements\n            .map((e: string) => `${this.firstLevelElement}>${e}`);\n        const allItems: HTMLElement[] = Array.from(this._elementRef.nativeElement.querySelectorAll(allItemsSelector));\n\n        this._itemsWidths = allItems\n            .map((el) => new CachedItemWidth(el, this.getOuterElementWidth(el), this.getItemsForCollapse(el)));\n    }\n\n    private getItemsForCollapse(element: HTMLElement): CollapsibleItem[] {\n        const icon = element.querySelector(`[${MC_ICON}],${MC_NAVBAR_LOGO},[${MC_NAVBAR_LOGO}]`);\n\n        if (!icon) {\n            return [];\n        }\n\n        return Array.from(element.querySelectorAll(MC_NAVBAR_TITLE))\n            .map((el) => new CollapsibleItem(<HTMLElement> el, el.getBoundingClientRect().width));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport {\n    McNavbar,\n    McNavbarContainer,\n    McNavbarItem,\n    McNavbarTitle,\n    McNavbarBrand,\n    McNavbarLogo\n} from './navbar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        McIconModule\n    ],\n    exports: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ],\n    declarations: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ]\n})\nexport class McNavbarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressBarMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressBarBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressBarMixinBase:\n    CanColorCtor &\n    typeof McProgressBarBase =\n        mixinColor(McProgressBarBase);\n\n@Component({\n    selector: 'mc-progress-bar',\n    templateUrl: './progress-bar.component.html',\n    styleUrls: ['./progress-bar.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-bar',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressBar extends _McProgressBarMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-bar-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressBarMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McProgressBar\n} from './progress-bar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressBar\n    ],\n    declarations: [\n        McProgressBar\n    ]\n})\nexport class McProgressBarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressSpinnerMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressSpinnerBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressSpinnerMixinBase:\n    CanColorCtor &\n    typeof McProgressSpinnerBase =\n        mixinColor(McProgressSpinnerBase);\n\nconst MAX_DASH_ARRAY = 273;\n\n@Component({\n    selector: 'mc-progress-spinner',\n    templateUrl: './progress-spinner.component.html',\n    styleUrls: ['./progress-spinner.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-spinner',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressSpinner extends _McProgressSpinnerMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-spinner-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressSpinnerMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n\n    get dashOffsetPercent(): string {\n        return `${MAX_DASH_ARRAY - this.percentage * MAX_DASH_ARRAY}%`;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McProgressSpinner } from './progress-spinner.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressSpinner\n    ],\n    declarations: [\n        McProgressSpinner\n    ]\n})\nexport class McProgressSpinnerModule {}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, Directive, ElementRef, EventEmitter, forwardRef,\n    Input, OnDestroy, OnInit, Optional, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { UniqueSelectionDispatcher } from '@ptsecurity/cdk/collections';\n\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n\n/** Change event object emitted by McRadio. */\nexport class McRadioChange {\n    constructor(\n        /** The McRadioButton that emits the change event. */\n        public source: McRadioButton,\n        /** The value of the McRadioButton. */\n        public value: any) {}\n}\n\n// Boilerplate for applying mixins to McRadioGroup.\n/** @docs-private */\nexport class McRadioGroupBase {}\nexport const _McRadioGroupMixinBase: CanDisableCtor & typeof McRadioGroupBase = mixinDisabled(McRadioGroupBase);\n\n/**\n * Provider Expression that allows mc-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nexport const MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McRadioGroup),\n    multi: true\n};\n\n@Directive({\n    selector: 'mc-radio-group',\n    exportAs: 'mcRadioGroup',\n    providers: [MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n    host: {\n        role: 'radiogroup',\n        class: 'mc-radio-group'\n    },\n    inputs: ['disabled']\n})\nexport class McRadioGroup extends _McRadioGroupMixinBase\n    implements AfterContentInit, ControlValueAccessor, CanDisable {\n\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    @Input()\n    get name(): string { return this._name; }\n    set name(value: string) {\n        this._name = value;\n        this.updateRadioButtonNames();\n    }\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this.markRadiosForCheck();\n    }\n\n    /** Value of the radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(newValue: any) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n\n            this.updateSelectedRadioFromValue();\n            this.checkSelectedRadioButton();\n        }\n    }\n\n    /** Whether the radio button is selected. */\n    @Input()\n    get selected() { return this._selected; }\n    set selected(selected: McRadioButton | null) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this.checkSelectedRadioButton();\n    }\n\n    /** Whether the radio group is disabled */\n    @Input()\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /** Whether the radio group is required */\n    @Input()\n    get required(): boolean { return this._required; }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /**\n     * Event emitted when the group value changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * a radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** Child radio buttons. */\n    @ContentChildren(forwardRef(() => McRadioButton), { descendants: true })\n    _radios: QueryList<McRadioButton>;\n\n    /**\n     * Selected value for group. Should equal the value of the selected radio button if there *is*\n     * a corresponding radio button with a matching value. If there is *not* such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    private _value: any = null;\n\n    /** The HTML name attribute applied to radio buttons in this group. */\n    private _name: string = `mc-radio-group-${nextUniqueId++}`;\n\n    /** The currently selected radio button. Should match value. */\n    private _selected: McRadioButton | null = null;\n\n    /** Whether the `value` has been set to its initial value. */\n    private _isInitialized: boolean = false;\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    private _labelPosition: 'before' | 'after' = 'after';\n\n    /** Whether the radio group is disabled. */\n    private _disabled: boolean = false;\n\n    /** Whether the radio group is required. */\n    private _required: boolean = false;\n\n    constructor(\n        private readonly _changeDetector: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    /** The method to be called in order to update ngModel */\n    // tslint:disable-next-line\n    controlValueAccessorChangeFn: (value: any) => void = () => {};\n\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * @docs-private\n     */\n    // tslint:disable-next-line\n    onTouched: () => any = () => {};\n\n    checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on McRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the McRadioGroup.\n        this._isInitialized = true;\n    }\n\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n\n    /** Dispatch change event with current selection and group value. */\n    emitChangeEvent(): void {\n        if (this._isInitialized) {\n            this.change.emit(new McRadioChange(this._selected!, this._value));\n        }\n    }\n\n    markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach((radio) => radio.markForCheck());\n        }\n    }\n\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     */\n    writeValue(value: any) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn: (value: any) => void) {\n        this.controlValueAccessorChangeFn = fn;\n    }\n\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n\n    private updateRadioButtonNames(): void {\n        if (this._radios) {\n            this._radios.forEach((radio) => {\n                radio.name = this.name;\n            });\n        }\n    }\n\n    /** Updates the `selected` radio button from the internal _value state. */\n    private updateSelectedRadioFromValue(): void {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n\n        if (this._radios != null && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach((radio) => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n}\n\n\n// Boilerplate for applying mixins to McRadioButton.\n/** @docs-private */\nexport class McRadioButtonBase {\n    // Since the disabled property is manually defined for the McRadioButton and isn't set up in\n    // the mixin base class. To be able to use the tabindex mixin, a disabled property must be\n    // defined to properly work.\n    disabled: boolean;\n\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McRadioButtonMixinBase:\n    CanColorCtor &\n    HasTabIndexCtor &\n    typeof McRadioButtonBase =\n        mixinColor(mixinTabIndex(McRadioButtonBase));\n\n\n@Component({\n    selector: 'mc-radio-button',\n    templateUrl: 'radio.component.html',\n    styleUrls: ['radio.css'],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    exportAs: 'mcRadioButton',\n    host: {\n        class: 'mc-radio-button',\n        '[attr.id]': 'id',\n        '[class.mc-checked]': 'checked',\n        '[class.mc-disabled]': 'disabled',\n        '(focus)': '_inputElement.nativeElement.focus()'\n    }\n})\nexport class McRadioButton extends _McRadioButtonMixinBase\n    implements OnInit, OnDestroy, CanColor, HasTabIndex {\n\n    private readonly _uniqueId: string = `mc-radio-${++nextUniqueId}`;\n\n    /* tslint:disable:member-ordering */\n\n    /** The unique ID for the radio button. */\n    @Input() id: string = this._uniqueId;\n\n    /** Analog to HTML 'name' attribute used to group radios for unique selection. */\n    @Input() name: string;\n\n    /** Used to set the 'aria-label' attribute on the underlying input element. */\n    @Input('aria-label') ariaLabel: string;\n\n    /** The 'aria-labelledby' attribute takes precedence as the element's text alternative. */\n    @Input('aria-labelledby') ariaLabelledby: string;\n\n    /** The 'aria-describedby' attribute is read after the element's label and field type. */\n    @Input('aria-describedby') ariaDescribedby: string;\n\n    /** Whether this radio button is checked. */\n    @Input()\n    get checked(): boolean { return this._checked; }\n    set checked(value: boolean) {\n        const newCheckedState = toBoolean(value);\n\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            } else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** The value of this radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(value: any) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup != null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n\n    /** Whether the radio button is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled || (this.radioGroup != null && this.radioGroup.disabled);\n    }\n    set disabled(value: boolean) {\n        const newDisabledState = toBoolean(value);\n\n        if (this._disabled !== newDisabledState) {\n\n            this._disabled = newDisabledState;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** Whether the radio button is required. */\n    @Input()\n    get required(): boolean {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    private _labelPosition: 'before' | 'after';\n\n    /** The native `<input type=radio>` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Event emitted when the checked state of this radio button changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * the radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** The parent radio group. May or may not be present. */\n    radioGroup: McRadioGroup;\n\n    @Input()\n    isFocused: boolean = false;\n\n    /** ID of the native input element inside `<mc-radio-button>` */\n    get inputId(): string { return `${this.id || this._uniqueId}-input`; }\n\n    /** Whether this radio is checked. */\n    private _checked: boolean = false;\n\n    /** Whether this radio is disabled. */\n    private _disabled: boolean;\n\n    /** Whether this radio is required. */\n    private _required: boolean;\n\n    /** Value assigned to this radio. */\n    private _value: any = null;\n\n    /** Unregister function for _radioDispatcher */\n    // tslint:disable-next-line\n    private readonly removeUniqueSelectionListener: () => void = () => {};\n\n    constructor(\n        @Optional() radioGroup: McRadioGroup,\n        elementRef: ElementRef,\n        private readonly _changeDetector: ChangeDetectorRef,\n        private readonly _radioDispatcher: UniqueSelectionDispatcher\n    ) {\n\n        super(elementRef);\n\n        this.radioGroup = radioGroup;\n\n        this.removeUniqueSelectionListener =\n            _radioDispatcher.listen((id: string, name: string) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            });\n    }\n\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n\n    ngOnDestroy() {\n        this.removeUniqueSelectionListener();\n    }\n\n    /** Focuses the radio button. */\n    // tslint:disable-next-line\n    focus(): void {}\n\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n\n    onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n\n    onInputChange(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this.emitChangeEvent();\n\n        if (this.radioGroup) {\n            this.radioGroup.controlValueAccessorChangeFn(this.value);\n            this.radioGroup.touch();\n            if (groupValueChanged) {\n                this.radioGroup.emitChangeEvent();\n            }\n        }\n    }\n\n    /** Dispatch change event with current value. */\n    private emitChangeEvent(): void {\n        this.change.emit(new McRadioChange(this, this._value));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McRadioButton, McRadioGroup } from './radio.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule],\n    exports: [McRadioGroup, McRadioButton],\n    declarations: [McRadioGroup, McRadioButton]\n})\nexport class McRadioModule {\n}\n","import { Directive, Input } from '@angular/core';\n\nimport { CdkTreeNodeDef } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeDef]',\n    inputs: ['when: mcTreeNodeDefWhen'],\n    providers: [{ provide: CdkTreeNodeDef, useExisting: McTreeNodeDef }]\n})\nexport class McTreeNodeDef<T> extends CdkTreeNodeDef<T> {\n    @Input('mcTreeNode') data: T;\n}\n","import { Directive, Input, OnInit } from '@angular/core';\nimport { CdkTreeNodePadding } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodePadding]',\n    providers: [{ provide: CdkTreeNodePadding, useExisting: McTreeNodePadding }]\n})\nexport class McTreeNodePadding<T> extends CdkTreeNodePadding<T> implements OnInit {\n    get leftPadding(): number {\n        return (this._withIcon ? 0 : this._iconWidth) + this._baseLeftPadding;\n    }\n\n    _baseLeftPadding: number = 6;\n    _iconWidth: number = 20;\n    _indent: number = 16;\n\n    @Input('mcTreeNodePadding') level: number;\n\n    @Input('mcTreeNodePaddingIndent') indent: number;\n\n    _withIcon: boolean;\n\n    _paddingIndent(): string | null {\n        const nodeLevel = (this._treeNode.data && this._tree.treeControl.getLevel)\n            ? this._tree.treeControl.getLevel(this._treeNode.data)\n            : null;\n\n        const level = this._level || nodeLevel;\n\n        return level ? `${(level * this._indent) + this.leftPadding}px` : `${this._baseLeftPadding}px`;\n    }\n\n    ngOnInit(): void {\n        this._withIcon = this._tree.treeControl.isExpandable(this._treeNode.data);\n        this._setPadding();\n    }\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n    QueryList,\n    ViewEncapsulation,\n    ChangeDetectorRef,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\n\nimport { FocusKeyManager, IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { END, ENTER, HOME, PAGE_DOWN, PAGE_UP, SPACE } from '@ptsecurity/cdk/keycodes';\n\nimport {\n    McLine,\n    McLineSetter,\n    CanDisable,\n    mixinDisabled,\n    toBoolean, CanDisableCtor\n} from '@ptsecurity/mosaic/core';\n\n\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\n@Component({\n    exportAs: 'mcListOption',\n    selector: 'mc-list-option',\n    host: {\n        tabindex: '-1',\n\n        class: 'mc-list-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n        '(click)': '_handleClick()'\n    },\n    templateUrl: 'list-option.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListOption implements AfterContentInit, OnDestroy, OnInit, IFocusableOption {\n    _hasFocus: boolean = false;\n\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    @ViewChild('text') _text: ElementRef;\n\n    // Whether the label should appear before or after the checkbox. Defaults to 'after'\n    @Input() checkboxPosition: 'before' | 'after' = 'after';\n\n    @Input() value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled || (this.listSelection && this.listSelection.disabled);\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.listSelection.selectedOptions && this.listSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            this.listSelection._reportValueChange();\n        }\n    }\n\n    private _lineSetter: McLineSetter;\n    private _selected = false;\n    private _disabled = false;\n\n    constructor(\n        private _element: ElementRef,\n        private _changeDetector: ChangeDetectorRef,\n        @Inject(forwardRef(() => McListSelection))\n        public listSelection: McListSelection\n    ) {}\n\n    ngOnInit() {\n        if (this._selected) {\n            // List options that are selected at initialization can't be reported properly to the form\n            // control. This is because it takes some time until the selection-list knows about all\n            // available options. Also it can happen that the ControlValueAccessor has an initial value\n            // that should be used instead. Deferring the value change report to the next tick ensures\n            // that the form control value is not being overwritten.\n            const wasSelected = this._selected;\n\n            Promise.resolve().then(() => {\n                if (this._selected || wasSelected) {\n                    this.selected = true;\n                    this._changeDetector.markForCheck();\n                }\n            });\n        }\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    ngOnDestroy(): void {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => this.selected = false);\n        }\n\n        this.listSelection._removeOptionFromList(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    focus(): void {\n        this._element.nativeElement.focus();\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    getLabel() {\n        return this._text ? this._text.nativeElement.textContent : '';\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.listSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.listSelection.selectedOptions.select(this);\n        } else {\n            this.listSelection.selectedOptions.deselect(this);\n        }\n\n        this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleClick() {\n        if (this.disabled) { return; }\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    _handleFocus() {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur() {\n        this._hasFocus = false;\n\n        this.listSelection._onTouched();\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n\n\nexport const MC_SELECTION_LIST_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McListSelection),\n    multi: true\n};\n\n// Change event that is being fired whenever the selected state of an option changes. */\nexport class McListSelectionChange {\n    constructor(\n        // Reference to the selection list that emitted the event.\n        public source: McListSelection,\n        // Reference to the option that has been changed.\n        public option: McListOption\n    ) {}\n}\n\n\nexport class McListSelectionBase {}\n\nexport const _McListSelectionMixinBase: CanDisableCtor & typeof McListSelectionBase\n    = mixinDisabled(McListSelectionBase);\n\n@Component({\n    exportAs: 'mcListSelection',\n    selector: 'mc-list-selection',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-list-selection',\n        '[tabIndex]': 'tabIndex',\n        '(focus)': 'focus()',\n        '(blur)': '_onTouched()',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    providers: [MC_SELECTION_LIST_VALUE_ACCESSOR],\n    preserveWhitespaces: false\n})\nexport class McListSelection extends _McListSelectionMixinBase implements\n    IFocusableOption, CanDisable, AfterContentInit, ControlValueAccessor {\n\n    _keyManager: FocusKeyManager<McListOption>;\n\n    // The option components contained within this selection-list.\n    @ContentChildren(McListOption) options: QueryList<McListOption>;\n\n    tabIndex: number;\n\n    autoSelect: boolean;\n    noUnselect: boolean;\n    multiple: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input() horizontal: boolean = false;\n\n    // Emits a change event whenever the selected state of an option changes.\n    @Output() readonly selectionChange: EventEmitter<McListSelectionChange> = new EventEmitter<McListSelectionChange>();\n\n    selectedOptions: SelectionModel<McListOption>;\n\n    // Used for storing the values that were assigned before the options were initialized.\n    private _tempValues: string[] | null;\n\n    private _modelChanges = Subscription.EMPTY;\n\n    constructor(\n        private _element: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string,\n        @Attribute('multiple') multiple: string\n    ) {\n        super();\n\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.selectedOptions = new SelectionModel<McListOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.horizontal = toBoolean(this.horizontal);\n\n        this._keyManager = new FocusKeyManager<McListOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(!this.horizontal)\n            .withHorizontalOrientation(this.horizontal ? 'ltr' : null);\n\n        if (this._tempValues) {\n            this._setOptionsFromValues(this._tempValues);\n            this._tempValues = null;\n        }\n\n        // Sync external changes to the model back to the options.\n        this._modelChanges = this.selectedOptions.onChange!.subscribe((event) => {\n            for (const item of event.added) {\n                item.selected = true;\n            }\n\n            for (const item of event.removed) {\n                item.selected = false;\n            }\n        });\n\n        this.updateScrollSize();\n    }\n\n    ngOnDestroy() {\n        this._modelChanges.unsubscribe();\n    }\n\n    focus() {\n        this._element.nativeElement.focus();\n    }\n\n    selectAll() {\n        this.options.forEach((option) => option.setSelected(true));\n\n        this._reportValueChange();\n    }\n\n    deselectAll() {\n        this.options.forEach((option) => option.setSelected(false));\n\n        this._reportValueChange();\n    }\n\n    updateScrollSize(): void {\n        if (this.horizontal || !this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    // Sets the focused option of the selection-list.\n    setFocusedOption(option: McListOption): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitChangeEvent(option);\n        this._reportValueChange();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(values: string[]): void {\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        } else {\n            this._tempValues = values;\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this._onTouched = fn;\n    }\n\n    // Implemented as a part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        if (this.options) {\n            this.options.forEach((option) => option.disabled = isDisabled);\n        }\n    }\n\n    getSelectedOptionValues(): string[] {\n        return this.options.filter((option) => option.selected).map((option) => option.value);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McListOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    _canDeselectLast(listOption: McListOption): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && listOption.selected);\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    // View to model callback that should be called if the list or its options lost focus.\n    _onTouched: () => void = () => {};\n\n    // Removes an option from the selection list and updates the active item.\n    _removeOptionFromList(option: McListOption) {\n        if (option._hasFocus) {\n            const optionIndex = this._getOptionIndex(option);\n\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.setPreviousItemActive();\n            } else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.setNextItemActive();\n            }\n        }\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                if (!this.horizontal) { this._keyManager.setPreviousPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                if (!this.horizontal) { this._keyManager.setNextPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    // Reports a value change to the ControlValueAccessor\n    _reportValueChange() {\n        if (this.options) {\n            this._onChange(this.getSelectedOptionValues());\n        }\n    }\n\n    // Emits a change event if the selected state of an option changed.\n    _emitChangeEvent(option: McListOption) {\n        this.selectionChange.emit(new McListSelectionChange(this, option));\n    }\n\n    // Returns the option with the specified value.\n    private _getOptionByValue(value: string): McListOption | undefined {\n        return this.options.find((option) => option.value === value);\n    }\n\n    // Sets the selected options based on the specified values.\n    private _setOptionsFromValues(values: string[]) {\n        this.options.forEach((option) => option.setSelected(false));\n\n        values\n            .map((value) => this._getOptionByValue(value))\n            .filter(Boolean)\n            .forEach((option) => option!.setSelected(true));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    // Returns the index of the specified list option.\n    private _getOptionIndex(option: McListOption): number {\n        return this.options.toArray().indexOf(option);\n    }\n\n    // View to model callback that should be called whenever the selected options change.\n    private _onChange: (value: any) => void = (_: any) => {};\n}\n","// todo пока не делаем, перенесено из материала, но у нас в доках таких простых списков нет.\nimport {\n    AfterContentInit, ChangeDetectionStrategy, Component, ContentChildren, Directive, ElementRef, QueryList,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { McLine, McLineSetter } from '@ptsecurity/mosaic/core';\n\n\nexport class McListBase {}\n\n@Component({\n    selector: 'mc-list',\n    host: { class: 'mc-list' },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McList extends McListBase {}\n\n\n/**\n * Directive whose purpose is to add the mc- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n    selector: '[mc-subheader], [mcSubheader]',\n    host: { class: 'mc-subheader' }\n})\nexport class McListSubheaderCssStyler {}\n\n\n// Boilerplate for applying mixins to McListItem.\nexport class McListItemBase {}\n\n@Component({\n    selector: 'mc-list-item, a[mc-list-item]',\n    host: {\n        class: 'mc-list-item',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()'\n    },\n    templateUrl: './list-item.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListItem extends McListItemBase implements AfterContentInit {\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    private _lineSetter: McLineSetter;\n\n    constructor(private _element: ElementRef) {\n        super();\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    _handleFocus() {\n        this._element.nativeElement.classList.add('mc-focused');\n    }\n\n    _handleBlur() {\n        this._element.nativeElement.classList.remove('mc-focused');\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLineModule } from '@ptsecurity/mosaic/core';\n\nimport { McListSelection, McListOption } from './list-selection.component';\nimport { McList, McListItem, McListSubheaderCssStyler } from './list.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        McLineModule\n    ],\n    exports: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ],\n    declarations: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ]\n})\nexport class McListModule {}\n","import {\n    Input,\n    Attribute,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\nexport class McLinkBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McLinkBase: HasTabIndexCtor & CanDisableCtor & typeof McLinkBase\n    = mixinTabIndex(mixinDisabled(McLinkBase));\n\n@Component({\n    selector: 'a.mc-link',\n    template: `<ng-content></ng-content>`,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcLink',\n    styleUrls: ['./link.css'],\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': 'tabIndex'\n    }\n})\n\nexport class McLink extends _McLinkBase implements OnDestroy, HasTabIndex, CanDisable {\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    private _disabled = false;\n\n    constructor(\n        @Attribute('tabindex') tabIndex: string,\n        public elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _changeDetector: ChangeDetectorRef) {\n\n        super(elementRef);\n        this._focusMonitor.monitor(elementRef.nativeElement, true);\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this.elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLink } from './link.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule\n    ],\n    declarations: [McLink],\n    exports: [McLink]\n})\nexport class McLinkModule {}\n","import { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { McModalRef } from './modal-ref.class';\n\n\ninterface IRegisteredMeta {\n    modalRef: McModalRef;\n    afterOpenSubscription: Subscription;\n    afterCloseSubscription: Subscription;\n}\n\n@Injectable()\nexport class McModalControlService {\n\n    // Track singleton afterAllClose through over the injection tree\n    get afterAllClose(): Subject<void> {\n        return this.parentService ? this.parentService.afterAllClose : this.rootAfterAllClose;\n    }\n\n    // Track singleton openModals array through over the injection tree\n    get openModals(): McModalRef[] {\n        return this.parentService ? this.parentService.openModals : this.rootOpenModals;\n    }\n\n    // @ts-ignore\n    private rootOpenModals: McModalRef[] = this.parentService ? null : [];\n    // @ts-ignore\n    private rootAfterAllClose: Subject<void> = this.parentService ? null : new Subject<void>();\n    // @ts-ignore\n    private rootRegisteredMetaMap: Map<McModalRef, IRegisteredMeta> = this.parentService ? null : new Map();\n\n    // Registered modal for later usage\n    private get registeredMetaMap(): Map<McModalRef, IRegisteredMeta> {\n        return this.parentService ? this.parentService.registeredMetaMap : this.rootRegisteredMetaMap;\n    }\n\n    constructor(\n        @Optional() @SkipSelf() private parentService: McModalControlService) {\n    }\n\n    // Register a modal to listen its open/close\n    registerModal(modalRef: McModalRef): void {\n        if (!this.hasRegistered(modalRef)) {\n            const afterOpenSubscription = modalRef.afterOpen.subscribe(() => this.openModals.push(modalRef));\n            const afterCloseSubscription = modalRef.afterClose.subscribe(() => this.removeOpenModal(modalRef));\n\n            this.registeredMetaMap.set(modalRef, {modalRef, afterOpenSubscription, afterCloseSubscription});\n        }\n    }\n\n    hasRegistered(modalRef: McModalRef): boolean {\n        return this.registeredMetaMap.has(modalRef);\n    }\n\n    // Close all registered opened modals\n    closeAll(): void {\n        let i = this.openModals.length;\n\n        while (i--) {\n            this.openModals[i].close();\n        }\n    }\n\n    private removeOpenModal(modalRef: McModalRef): void {\n        const index = this.openModals.indexOf(modalRef);\n\n        if (index > -1) {\n            this.openModals.splice(index, 1);\n\n            if (!this.openModals.length) {\n                this.afterAllClose.next();\n            }\n        }\n    }\n}\n","import { Observable } from 'rxjs';\n\nimport { McModalComponent } from './modal.component';\n\n\n/**\n * API class that public to users to handle the modal instance.\n * McModalRef is aim to avoid accessing to the modal instance directly by users.\n */\nexport abstract class McModalRef<T = any, R = any> {\n    abstract afterOpen: Observable<void>;\n    abstract afterClose: Observable<R>;\n\n    abstract open(): void;\n\n    abstract close(result?: R): void;\n\n    abstract destroy(result?: R): void;\n\n    /**\n     * Trigger the nzOnOk/nzOnCancel by manual\n     */\n    abstract triggerOk(): void;\n\n    abstract triggerCancel(): void;\n\n    // /**\n    //  * Return the ComponentRef of nzContent when specify nzContent as a Component\n    //  * Note: this method may return undefined if the Component has not ready yet.\n    //    (it only available after Modal's ngOnInit)\n    //  */\n    // abstract getContentComponentRef(): ComponentRef<{}>;\n\n    /**\n     * Return the component instance of nzContent when specify nzContent as a Component\n     * Note: this method may return undefined if the Component has not ready yet.\n     * (it only available after Modal's ngOnInit)\n     */\n    abstract getContentComponent(): T;\n\n    /**\n     * Get the dom element of this Modal\n     */\n    abstract getElement(): HTMLElement;\n\n    /**\n     * Get the instance of the Modal itself\n     */\n    abstract getInstance(): McModalComponent;\n}\n","export interface IClickPosition {\n    x: number;\n    y: number;\n}\n\nexport class ModalUtil {\n    private lastPosition: IClickPosition;\n\n    constructor(private document: Document) {\n        this.lastPosition = {x: -1, y: -1};\n        this.listenDocumentClick();\n    }\n\n    getLastClickPosition(): IClickPosition {\n        return this.lastPosition;\n    }\n\n    listenDocumentClick(): void {\n        this.document.addEventListener('click', (event: MouseEvent) => {\n            this.lastPosition = {x: event.clientX, y: event.clientY};\n        });\n    }\n}\n\nexport default new ModalUtil(document);\n","import { DOCUMENT } from '@angular/common';\nimport {\n    AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    Renderer2,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewContainerRef, ViewEncapsulation\n} from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { McMeasureScrollbarService } from '@ptsecurity/mosaic/core';\nimport { Observable } from 'rxjs';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\n// tslint:disable-next-line\nimport ModalUtil from './modal-util';\nimport { IModalButtonOptions, IModalOptions, ModalType, OnClickCallback } from './modal.type';\n\n\n// Duration when perform animations (ms)\nexport const MODAL_ANIMATE_DURATION = 200;\n\ntype AnimationState = 'enter' | 'leave' | null;\n\n@Component({\n    selector: 'mc-modal',\n    templateUrl: './modal.component.html',\n    styleUrls: ['./modal.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McModalComponent<T = any, R = any> extends McModalRef<T, R>\n    implements OnInit, OnChanges, AfterViewInit, OnDestroy, IModalOptions {\n\n    // tslint:disable-next-line:no-any\n    @Input() mcModalType: ModalType = 'default';\n    // If not specified, will use <ng-content>\n    @Input() mcContent: string | TemplateRef<{}> | Type<T>;\n    // available when mcContent is a component\n    @Input() mcComponentParams: object;\n    // Default Modal ONLY\n    @Input() mcFooter: string | TemplateRef<{}> | IModalButtonOptions<T>[];\n\n    @Input()\n    get mcVisible() { return this._mcVisible; }\n    set mcVisible(value) { this._mcVisible = value; }\n    _mcVisible = false;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n\n    @Input() mcZIndex: number = 1000;\n    @Input() mcWidth: number | string = 480;\n    @Input() mcWrapClassName: string;\n    @Input() mcClassName: string;\n    @Input() mcStyle: object;\n    @Input() mcTitle: string | TemplateRef<{}>;\n    @Input() mcCloseByESC: boolean = true;\n\n    @Input()\n    get mcClosable() { return this._mcClosable; }\n    set mcClosable(value) { this._mcClosable = value; }\n    _mcClosable = true;\n\n    @Input()\n    get mcMask() { return this._mcMask; }\n    set mcMask(value) { this._mcMask = value; }\n    _mcMask = true;\n\n    @Input()\n    get mcMaskClosable() { return this._mcMaskClosable; }\n    set mcMaskClosable(value) { this._mcMaskClosable = value; }\n    _mcMaskClosable = true;\n\n    @Input() mcMaskStyle: object;\n    @Input() mcBodyStyle: object;\n\n    // Trigger when modal open(visible) after animations\n    @Output() mcAfterOpen = new EventEmitter<void>();\n    // Trigger when modal leave-animation over\n    @Output() mcAfterClose = new EventEmitter<R>();\n\n    // --- Predefined OK & Cancel buttons\n    @Input() mcOkText: string;\n    @Input() mcOkType = 'primary';\n\n    @Input()\n    get mcOkLoading() { return this._mcOkLoading; }\n    set mcOkLoading(value) { this._mcOkLoading = value; }\n    _mcOkLoading = false;\n\n    @Input() @Output() mcOnOk: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    // Only aim to focus the ok button that needs to be auto focused\n    @ViewChild('autoFocusButtonOk', {read: ElementRef}) autoFocusButtonOk: ElementRef;\n    @Input() mcCancelText: string;\n\n    @Input()\n    get mcCancelLoading() { return this._mcCancelLoading; }\n    set mcCancelLoading(value) { this._mcCancelLoading = value; }\n    _mcCancelLoading = false;\n\n    @Input() @Output() mcOnCancel: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    @ViewChild('modalContainer') modalContainer: ElementRef;\n    @ViewChild('bodyContainer', {read: ViewContainerRef}) bodyContainer: ViewContainerRef;\n    maskAnimationClassMap: object;\n    modalAnimationClassMap: object;\n    // The origin point that animation based on\n    transformOrigin = '0px 0px 0px';\n\n    // Observable alias for mcAfterOpen\n    get afterOpen(): Observable<void> {\n        return this.mcAfterOpen.asObservable();\n    }\n\n    // Observable alias for mcAfterClose\n    get afterClose(): Observable<R> {\n        return this.mcAfterClose.asObservable();\n    }\n\n    get okText(): string {\n        return this.mcOkText;\n    }\n\n    get cancelText(): string {\n        return this.mcCancelText;\n    }\n\n    // Indicate whether this dialog should hidden\n    get hidden(): boolean {\n        return !this.mcVisible && !this.animationState;\n    }\n\n    // Handle the reference when using mcContent as Component\n    private contentComponentRef: ComponentRef<T>;\n    // Current animation state\n    private animationState: AnimationState;\n    private container: HTMLElement | OverlayRef;\n\n    constructor(\n        private overlay: Overlay,\n        private renderer: Renderer2,\n        private cfr: ComponentFactoryResolver,\n        private elementRef: ElementRef,\n        private viewContainer: ViewContainerRef,\n        private mcMeasureScrollbarService: McMeasureScrollbarService,\n        private modalControl: McModalControlService,\n        private changeDetector: ChangeDetectorRef,\n        @Inject(DOCUMENT) private document: any) {\n\n        super();\n    }\n\n    @Input() mcGetContainer: HTMLElement | OverlayRef | (() => HTMLElement | OverlayRef) = () => this.overlay.create();\n\n    ngOnInit() {\n\n        // Create component along without View\n        if (this.isComponent(this.mcContent)) {\n            this.createDynamicComponent(this.mcContent as Type<T>);\n        }\n\n        // Setup default button options\n        if (this.isModalButtons(this.mcFooter)) {\n            this.mcFooter = this.formatModalButtons(this.mcFooter as IModalButtonOptions<T>[]);\n        }\n\n        // Place the modal dom to elsewhere\n        this.container = typeof this.mcGetContainer === 'function' ? this.mcGetContainer() : this.mcGetContainer;\n        if (this.container instanceof HTMLElement) {\n            this.container.appendChild(this.elementRef.nativeElement);\n        } else if (this.container instanceof OverlayRef) {\n            // NOTE: only attach the dom to overlay, the view container is not changed actually\n            this.container.overlayElement.appendChild(this.elementRef.nativeElement);\n        }\n\n        // Register modal when afterOpen/afterClose is stable\n        this.modalControl.registerModal(this);\n    }\n\n    // [NOTE] NOT available when using by service!\n    // Because ngOnChanges never be called when using by service,\n    // here we can't support \"mcContent\"(Component) etc. as inputs that initialized dynamically.\n    // BUT: User also can change \"mcContent\" dynamically to trigger UI changes\n    // (provided you don't use \bComponent that needs initializations)\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.mcVisible) {\n            // Do not trigger animation while initializing\n            this.handleVisibleStateChange(this.mcVisible, !changes.mcVisible.firstChange);\n        }\n    }\n\n    ngAfterViewInit() {\n        // If using Component, it is the time to attach View while bodyContainer is ready\n        if (this.contentComponentRef) {\n            this.bodyContainer.insert(this.contentComponentRef.hostView);\n        }\n\n        if (this.autoFocusButtonOk) {\n            (this.autoFocusButtonOk.nativeElement as HTMLButtonElement).focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.container instanceof OverlayRef) {\n            this.container.dispose();\n        }\n    }\n\n    open() {\n        this.changeVisibleFromInside(true);\n    }\n\n    close(result?: R) {\n        this.changeVisibleFromInside(false, result);\n    }\n\n    // Destroy equals Close\n    destroy(result?: R) {\n        this.close(result);\n    }\n\n    triggerOk() {\n        this.onClickOkCancel('ok');\n    }\n\n    triggerCancel() {\n        this.onClickOkCancel('cancel');\n    }\n\n    getInstance(): McModalComponent {\n        return this;\n    }\n\n    getContentComponentRef(): ComponentRef<T> {\n        return this.contentComponentRef;\n    }\n\n    getContentComponent(): T {\n        return this.contentComponentRef && this.contentComponentRef.instance;\n    }\n\n    getElement(): HTMLElement {\n        return this.elementRef && this.elementRef.nativeElement;\n    }\n\n    onClickMask($event: MouseEvent) {\n        if (\n            this.mcMask &&\n            this.mcMaskClosable &&\n            ($event.target as HTMLElement).classList.contains('mc-modal-wrap') &&\n            this.mcVisible\n        ) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // tslint:disable-next-line\n    isModalType(type: ModalType): boolean {\n        return this.mcModalType === type;\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        if (event.keyCode === ESCAPE && this.container && (this.container instanceof OverlayRef)) {\n\n            this.close();\n            event.preventDefault();\n        }\n    }\n\n    // AoT\n    onClickCloseBtn() {\n        if (this.mcVisible) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // AoT\n    // tslint:disable-next-line\n    onClickOkCancel(type: 'ok' | 'cancel') {\n        const trigger = { ok: this.mcOnOk, cancel: this.mcOnCancel }[type];\n        const loadingKey = { ok: 'mcOkLoading', cancel: 'mcCancelLoading' }[type];\n\n        if (trigger instanceof EventEmitter) {\n            trigger.emit(this.getContentComponent());\n        } else if (typeof trigger === 'function') {\n\n            const result = trigger(this.getContentComponent());\n            // Users can return \"false\" to prevent closing by default\n            const caseClose = (doClose: boolean | void | {}) => (doClose !== false) && this.close(doClose as R);\n\n            if (isPromise(result)) {\n                this[loadingKey] = true;\n                const handleThen = (doClose) => {\n                    this[loadingKey] = false;\n                    caseClose(doClose);\n                };\n                (result as Promise<void>).then(handleThen).catch(handleThen);\n            } else {\n                caseClose(result);\n            }\n        }\n    }\n\n    // AoT\n    isNonEmptyString(value: {}): boolean {\n        return typeof value === 'string' && value !== '';\n    }\n\n    // AoT\n    isTemplateRef(value: {}): boolean {\n        return value instanceof TemplateRef;\n    }\n\n    // AoT\n    isComponent(value: {}): boolean {\n        return value instanceof Type;\n    }\n\n    // AoT\n    isModalButtons(value: {}): boolean {\n        return Array.isArray(value) && value.length > 0;\n    }\n\n    // Do rest things when visible state changed\n    private handleVisibleStateChange(visible: boolean, animation: boolean = true, closeResult?: R): Promise<any> {\n        // Hide scrollbar at the first time when shown up\n        if (visible) {\n            this.changeBodyOverflow(1);\n        }\n\n        return Promise\n            .resolve(animation && this.animateTo(visible))\n            // Emit open/close event after animations over\n            .then(() => {\n                if (visible) {\n                    this.mcAfterOpen.emit();\n                } else {\n                    this.mcAfterClose.emit(closeResult);\n                    // Show/hide scrollbar when animation is over\n                    this.changeBodyOverflow();\n                }\n            });\n    }\n\n    // Lookup a button's property, if the prop is a function, call & then return the result, otherwise, return itself.\n    // AoT\n    // tslint:disable-next-line\n    getButtonCallableProp(options: IModalButtonOptions<T>, prop: string): {} {\n        const value = options[prop];\n        const args: any[] = [];\n        if (this.contentComponentRef) {\n            args.push(this.contentComponentRef.instance);\n        }\n\n        return typeof value === 'function' ? value.apply(options, args) : value;\n    }\n\n    // On mcFooter's modal button click\n    // AoT\n    // tslint:disable-next-line\n    onButtonClick(button: IModalButtonOptions<T>) {\n        // Call onClick directly\n        const result = this.getButtonCallableProp(button, 'onClick');\n        if (isPromise(result)) {\n            button.loading = true;\n            (result as Promise<{}>).then(() => button.loading = false).catch(() => button.loading = false);\n        }\n    }\n\n    // Change mcVisible from inside\n    private changeVisibleFromInside(visible: boolean, closeResult?: R): Promise<void> {\n        if (this.mcVisible !== visible) {\n            // Change mcVisible value immediately\n            this.mcVisible = visible;\n            this.mcVisibleChange.emit(visible);\n\n            return this.handleVisibleStateChange(visible, true, closeResult);\n        }\n\n        return Promise.resolve();\n    }\n\n    private changeAnimationState(state: AnimationState) {\n        this.animationState = state;\n        if (state) {\n            this.maskAnimationClassMap = {\n                [`fade-${state}`]: true,\n                [`fade-${state}-active`]: true\n            };\n            this.modalAnimationClassMap = {\n                [`zoom-${state}`]: true,\n                [`zoom-${state}-active`]: true\n            };\n        } else {\n            // @ts-ignore\n            this.maskAnimationClassMap = this.modalAnimationClassMap = null;\n        }\n\n        if (this.contentComponentRef) {\n            this.contentComponentRef.changeDetectorRef.markForCheck();\n        } else {\n            this.changeDetector.markForCheck();\n        }\n    }\n\n    private animateTo(isVisible: boolean): Promise<any> {\n        // Figure out the lastest click position when shows up\n        if (isVisible) {\n            // [NOTE] Using timeout due to the document.click event is fired later than visible change,\n            // so if not postponed to next event-loop, we can't get the lastest click position\n            window.setTimeout(() => this.updateTransformOrigin());\n        }\n\n        this.changeAnimationState(isVisible ? 'enter' : 'leave');\n\n        // Return when animation is over\n        return new Promise((resolve) => window.setTimeout(() => {\n            this.changeAnimationState(null);\n            resolve();\n        }, MODAL_ANIMATE_DURATION));\n    }\n\n    private formatModalButtons(buttons: IModalButtonOptions<T>[]): IModalButtonOptions<T>[] {\n        return buttons.map((button) => {\n\n            return {\n                ...{\n                    type: 'default',\n                    size: 'default',\n                    autoLoading: true,\n                    show: true,\n                    loading: false,\n                    disabled: false\n                },\n                ...button\n            };\n        });\n    }\n\n    /**\n     * Create a component dynamically but not attach to any View\n     * (this action will be executed when bodyContainer is ready)\n     * @param component Component class\n     */\n    private createDynamicComponent(component: Type<T>) {\n        const factory = this.cfr.resolveComponentFactory(component);\n        const childInjector = Injector.create({\n            providers: [{provide: McModalRef, useValue: this}],\n            parent: this.viewContainer.parentInjector\n        });\n\n        this.contentComponentRef = factory.create(childInjector);\n\n        if (this.mcComponentParams) {\n            Object.assign(this.contentComponentRef.instance, this.mcComponentParams);\n        }\n\n        // Do the first change detection immediately\n        // (or we do detection at ngAfterViewInit, multi-changes error will be thrown)\n        this.contentComponentRef.changeDetectorRef.detectChanges();\n\n\n    }\n\n    // Update transform-origin to the last click position on document\n    private updateTransformOrigin() {\n        const modalElement = this.modalContainer.nativeElement as HTMLElement;\n        const lastPosition = ModalUtil.getLastClickPosition();\n\n        if (lastPosition) {\n            // tslint:disable-next-line\n            this.transformOrigin = `${lastPosition.x - modalElement.offsetLeft}px ${lastPosition.y - modalElement.offsetTop}px 0px`;\n        }\n    }\n\n    /**\n     * Take care of the body's overflow to decide the existense of scrollbar\n     * @param plusNum The number that the openModals.length will increase soon\n     */\n    private changeBodyOverflow(plusNum: number = 0) {\n        const openModals = this.modalControl.openModals;\n\n        if (openModals.length + plusNum > 0) {\n            // tslint:disable-next-line\n            this.renderer.setStyle(this.document.body, 'padding-right', `${this.mcMeasureScrollbarService.scrollBarWidth}px`);\n            this.renderer.setStyle(this.document.body, 'overflow', 'hidden');\n        } else {\n            this.renderer.removeStyle(this.document.body, 'padding-right');\n            this.renderer.removeStyle(this.document.body, 'overflow');\n        }\n    }\n}\n\n////////////\n\nfunction isPromise(obj: {} | void): boolean {\n    // tslint:disable-next-line\n    return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof (obj as Promise<{}>).then === 'function' && typeof (obj as Promise<{}>).catch === 'function';\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({\n    name: 'toCssUnit'\n})\nexport class CssUnitPipe implements PipeTransform {\n    transform(value: number | string, defaultUnit: string = 'px'): string {\n        const formatted = +value;\n\n        return isNaN(formatted) ? `${value}` : `${formatted}${defaultUnit}`;\n    }\n}\n","import { ComponentRef, Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\nimport { McModalComponent } from './modal.component';\nimport { ConfirmType, IModalOptions, IModalOptionsForService } from './modal.type';\n\n\n// A builder used for managing service creating modals\nexport class ModalBuilderForService {\n\n    // Modal ComponentRef, \"null\" means it has been destroyed\n    private modalRef: ComponentRef<McModalComponent>;\n    private overlayRef: OverlayRef;\n\n    constructor(private overlay: Overlay, options: IModalOptionsForService = {}) {\n        this.createModal();\n\n        if (!('mcGetContainer' in options)) {\n            options.mcGetContainer = null;\n        }\n\n        this.changeProps(options);\n        this.modalRef.instance.open();\n        this.modalRef.instance.mcAfterClose.subscribe(() => this.destroyModal());\n\n        this.overlayRef.keydownEvents()\n            // @ts-ignore\n            .pipe(filter((event: KeyboardEvent) => {\n                return event.keyCode === ESCAPE && options.mcCloseByESC;\n            }))\n            .subscribe(() => this.modalRef.instance.close());\n    }\n\n    getInstance(): McModalComponent {\n        return this.modalRef && this.modalRef.instance;\n    }\n\n    destroyModal(): void {\n        if (this.modalRef) {\n            this.overlayRef.dispose();\n            // @ts-ignore\n            this.modalRef = null;\n        }\n    }\n\n    private changeProps(options: IModalOptions): void {\n        if (this.modalRef) {\n            // here not limit user's inputs at runtime\n            Object.assign(this.modalRef.instance, options);\n        }\n    }\n\n    // Create component to ApplicationRef\n    private createModal(): void {\n        this.overlayRef = this.overlay.create();\n        this.modalRef = this.overlayRef.attach(new ComponentPortal(McModalComponent));\n    }\n}\n\n@Injectable()\nexport class McModalService {\n    // Track of the current close modals (we assume invisible is close this time)\n    get openModals(): McModalRef[] {\n        return this.modalControl.openModals;\n    }\n\n    get afterAllClose(): Observable<void> {\n        return this.modalControl.afterAllClose.asObservable();\n    }\n\n    constructor(\n        private overlay: Overlay,\n        private modalControl: McModalControlService) {\n    }\n\n    // Closes all of the currently-open dialogs\n    closeAll(): void {\n        this.modalControl.closeAll();\n    }\n\n    create<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n\n        if (typeof options.mcOnCancel !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnCancel = () => {};\n        }\n\n        if (!('mcCloseByESC' in options)) {\n            options.mcCloseByESC = true;\n        }\n\n\n        if (!('mcWidth' in options)) {\n            // tslint:disable-next-line\n            options.mcWidth = 480;\n        }\n\n        return new ModalBuilderForService(this.overlay, options).getInstance();\n    }\n\n    confirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType = 'confirm'): McModalRef<T> {\n        if ('mcFooter' in options) {\n            console.warn(`The Confirm-Modal doesn't support \"mcFooter\", this property will be ignored.`);\n        }\n\n        // NOTE: only support function currently by calling confirm()\n        if (typeof options.mcOnOk !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnOk = () => {};\n        }\n\n        options.mcModalType = 'confirm';\n        options.mcClassName = `mc-confirm mc-confirm-${confirmType} ${options.mcClassName || ''}`;\n        options.mcMaskClosable = false;\n\n        return this.create(options);\n    }\n\n    success<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'success');\n    }\n\n    delete<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'warn');\n    }\n\n    private simpleConfirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType): McModalRef<T> {\n        // Remove the Cancel button if the user not specify a Cancel button\n        if (!('mcCancelText' in options)) {\n            // @ts-ignore\n            options.mcCancelText = null;\n        }\n\n        return this.confirm(options, confirmType);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { CssUnitPipe } from './css-unit.pipe';\nimport { McModalControlService } from './modal-control.service';\nimport { McModalComponent } from './modal.component';\nimport { McModalService } from './modal.service';\n\n\n@NgModule({\n    imports: [ CommonModule, OverlayModule, McButtonModule, McIconModule ],\n    exports: [ McModalComponent ],\n    declarations: [ McModalComponent, CssUnitPipe ],\n    entryComponents: [ McModalComponent ],\n    providers: [ McModalControlService, McModalService ]\n})\nexport class McModalModule { }\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren, Directive,\n    ElementRef,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { CanColor, CanColorCtor, mixinColor } from '@ptsecurity/mosaic/core';\nimport { EMPTY, merge } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\n\nimport { McCleaner } from './cleaner';\nimport { McFormFieldControl } from './form-field-control';\nimport { getMcFormFieldMissingControlError } from './form-field-errors';\nimport { McFormFieldNumberControl } from './form-field-number-control';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\nlet nextUniqueId = 0;\n\nexport class McFormFieldBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McFormFieldMixinBase: CanColorCtor & typeof McFormFieldBase = mixinColor(McFormFieldBase);\n\n@Component({\n    selector: 'mc-form-field',\n    exportAs: 'mcFormField',\n    templateUrl: 'form-field.html',\n    // McInput is a directive and can't have styles, so we need to include its styles here.\n    // The McInput styles are fairly minimal so it shouldn't be a big deal for people who\n    // aren't using McInput.\n    styleUrls: [\n        'form-field.css',\n        '../input/input.css',\n        '../textarea/textarea.css'\n    ],\n    host: {\n        class: 'mc-form-field',\n        '[class.mc-form-field_invalid]': '_control.errorState',\n        '[class.mc-disabled]': '_control.disabled',\n        '[class.mc-form-field_has-prefix]': 'hasPrefix',\n        '[class.mc-form-field_has-suffix]': 'hasSuffix',\n        '[class.mc-form-field_has-cleaner]': 'canShowCleaner',\n        '[class.mc-form-field_has-stepper]': 'canShowStepper',\n        '[class.mc-focused]': '_control.focused',\n        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n        '[class.ng-touched]': '_shouldForward(\"touched\")',\n        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n        '[class.ng-valid]': '_shouldForward(\"valid\")',\n        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n        '[class.ng-pending]': '_shouldForward(\"pending\")',\n        '(keydown)': 'onKeyDown($event)',\n        '(mouseenter)': 'onHoverChanged(true)',\n        '(mouseleave)': 'onHoverChanged(false)'\n    },\n    inputs: ['color'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class McFormField extends _McFormFieldMixinBase implements\n    AfterContentInit, AfterContentChecked, AfterViewInit, CanColor {\n\n    @ContentChild(McFormFieldControl) _control: McFormFieldControl<any>;\n    @ContentChild(McFormFieldNumberControl) _numberControl: McFormFieldNumberControl<any>;\n    @ContentChild(McStepper) _stepper: McStepper;\n\n    @ContentChildren(McHint) _hint: QueryList<McHint>;\n    @ContentChildren(McSuffix) _suffix: QueryList<McSuffix>;\n    @ContentChildren(McPrefix) _prefix: QueryList<McPrefix>;\n    @ContentChildren(McCleaner) _cleaner: QueryList<McCleaner>;\n\n    // Unique id for the internal form field label.\n    _labelId = `mc-form-field-label-${nextUniqueId++}`;\n\n    hovered: boolean = false;\n\n    constructor(public _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {\n        super(_elementRef);\n    }\n\n    ngAfterContentInit() {\n        this._validateControlChild();\n        if (this._control.controlType) {\n            this._elementRef.nativeElement.classList\n                .add(`mc-form-field-type-${this._control.controlType}`);\n\n            if (this._numberControl && this.hasStepper) {\n                this._stepper.stepUp.subscribe(this.onStepUp.bind(this));\n                this._stepper.stepDown.subscribe(this.onStepDown.bind(this));\n            }\n        }\n\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        this._control.stateChanges.pipe(startWith())\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n\n        if (this._numberControl) {\n            this._numberControl.stateChanges.pipe(startWith())\n                .subscribe(() => {\n                    this._changeDetectorRef.markForCheck();\n                });\n        }\n\n        // Run change detection if the value changes.\n        const valueChanges = this._control.ngControl && this._control.ngControl.valueChanges || EMPTY;\n        merge(valueChanges)\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n\n    ngAfterContentChecked() {\n        this._validateControlChild();\n    }\n\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._changeDetectorRef.detectChanges();\n    }\n\n    clearValue($event) {\n        $event.stopPropagation();\n\n        if (this._control && this._control.ngControl) {\n            this._control.ngControl.reset();\n        }\n    }\n\n    onContainerClick($event) {\n        if (this._control.onContainerClick) {\n            this._control.onContainerClick($event);\n        }\n    }\n\n    onKeyDown(e: KeyboardEvent): void {\n        // tslint:disable-next-line:deprecation\n        if (e.keyCode === ESCAPE &&\n            this._control.focused &&\n            this.hasCleaner) {\n\n            if (this._control && this._control.ngControl) {\n                this._control.ngControl.reset();\n            }\n\n            e.preventDefault();\n        }\n    }\n\n    onHoverChanged(isHovered: boolean) {\n        if (isHovered !== this.hovered) {\n            this.hovered  = isHovered;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    onStepUp() {\n        if (this._numberControl) {\n            this._numberControl.stepUp(this._numberControl.step);\n        }\n    }\n\n    onStepDown() {\n        if (this._numberControl) {\n            this._numberControl.stepDown(this._numberControl.step);\n        }\n    }\n\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop: string): boolean {\n        const ngControl = this._control ? this._control.ngControl : null;\n\n        return ngControl && ngControl[prop];\n    }\n\n    /** Throws an error if the form field's control is missing. */\n    protected _validateControlChild() {\n        if (!this._control) {\n            throw getMcFormFieldMissingControlError();\n        }\n    }\n\n    get hasHint(): boolean {\n        return this._hint && this._hint.length > 0;\n    }\n\n    get hasSuffix(): boolean {\n        return this._suffix && this._suffix.length > 0;\n    }\n\n    get hasPrefix(): boolean {\n        return this._prefix && this._prefix.length > 0;\n    }\n\n    get hasCleaner(): boolean {\n        return this._cleaner && this._cleaner.length > 0;\n    }\n\n    get hasStepper(): boolean {\n        return !!this._stepper;\n    }\n\n    get canShowCleaner(): boolean {\n        return this.hasCleaner &&\n            this._control &&\n            this._control.ngControl\n                ? this._control.ngControl.value && !this._control.disabled\n                : false;\n    }\n\n\n    get disabled(): boolean {\n        return this._control && this._control.disabled;\n    }\n\n    get canShowStepper(): boolean {\n        return this._numberControl &&\n            !this.disabled &&\n            (\n                this._numberControl.focused ||\n                this.hovered\n            );\n    }\n}\n\n@Directive({\n    selector: 'mc-form-field[mcFormFieldWithoutBorders]',\n    exportAs: 'mcFormFieldWithoutBorders',\n    host: { class: 'mc-form-field_without-borders' }\n})\nexport class McFormFieldWithoutBorders {\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCleaner } from './cleaner';\nimport { McFormField, McFormFieldWithoutBorders } from './form-field';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\n@NgModule({\n    declarations: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ],\n    imports: [CommonModule, McIconModule],\n    exports: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ]\n})\nexport class McFormFieldModule {\n}\n","import { InjectionToken } from '@angular/core';\n\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n","function sanitizeNumber(value: number): number | null {\n    return !isFinite(value) || isNaN(value)\n        ? null\n        : value;\n}\n\nfunction getPrecision(value: number): number {\n    const arr = value.toString().split('.');\n\n    return arr.length === 1\n        ? 1\n        // tslint:disable-next-line:no-magic-numbers\n        :  Math.pow(10, arr[1].length);\n}\n\nfunction add(value1: number, value2: number) {\n    const precision = Math.max(getPrecision(value1), getPrecision(value2));\n\n    const res = (value1 * precision + value2 * precision) / precision;\n\n    return sanitizeNumber(res);\n}\n\nexport const stepUp = (value: number | null,\n                       max: number,\n                       min: number,\n                       step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(min, step);\n\n        return res === null ? null : Math.min(res, max);\n    }\n\n    res = add(value, step);\n\n    return res === null ? null : Math.max(Math.min(res, max), min);\n};\n\nexport const stepDown = (value: number | null,\n                         max: number,\n                         min: number,\n                         step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(max, -step);\n\n        return res === null ? null : Math.max(res, min);\n    }\n\n    res = add(value, -step);\n\n    return res === null ? null : Math.min(Math.max(res, min), max);\n};\n","import {\n    Attribute,\n    Directive, DoCheck, ElementRef, Inject, Input, OnChanges,\n    OnDestroy, Optional, Self\n} from '@angular/core';\nimport {\n    FormGroupDirective,\n    NgControl,\n    NgForm, NgModel\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    END, C, V, X, A, DELETE, BACKSPACE, TAB, ENTER,\n    ESCAPE, ZERO, NINE, NUMPAD_ZERO, NUMPAD_NINE, NUMPAD_MINUS, DASH,\n    FF_MINUS, LEFT_ARROW, RIGHT_ARROW, HOME, UP_ARROW, DOWN_ARROW, F1, F12\n} from '@ptsecurity/cdk/keycodes';\nimport { getSupportedInputTypes, Platform } from '@ptsecurity/cdk/platform';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl, McFormFieldNumberControl } from '@ptsecurity/mosaic/form-field';\nimport { Subject } from 'rxjs';\n\nimport { getMcInputUnsupportedTypeError } from './input-errors';\nimport { MC_INPUT_VALUE_ACCESSOR } from './input-value-accessor';\nimport { stepDown, stepUp } from './stepperUtils';\n\n\nconst MC_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n\nexport const BIG_STEP = 10;\nexport const SMALL_STEP = 1;\n\nlet nextUniqueId = 0;\n\nexport class McInputBase {\n    constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n                public _parentForm: NgForm,\n                public _parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\nexport const _McInputMixinBase: CanUpdateErrorStateCtor & typeof McInputBase = mixinErrorState(McInputBase);\n\n\n@Directive({\n    selector: `input[mcInput][type=\"number\"]`,\n    exportAs: 'mcNumericalInput',\n    providers: [NgModel, { provide: McFormFieldNumberControl, useExisting: McNumberInput }],\n    host: {\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McNumberInput implements McFormFieldNumberControl<any> {\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    bigStep: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    step: number;\n\n    @Input()\n    min: number;\n\n    @Input()\n    max: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    value: any;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    private readonly _host: HTMLInputElement;\n\n    constructor(\n        private _platform: Platform ,\n        private _elementRef: ElementRef,\n        private _model: NgModel,\n        @Attribute('step') step: string,\n        @Attribute('big-step') bigStep: string,\n        @Attribute('min') min: string,\n        @Attribute('max') max: string\n    ) {\n        this.step = this.isDigit(step) ? parseFloat(step) : SMALL_STEP;\n        this.bigStep = this.isDigit(bigStep) ? parseFloat(bigStep) : BIG_STEP;\n        this.min = this.isDigit(min) ? parseFloat(min) : -Infinity;\n        this.max = this.isDigit(max) ? parseFloat(max) : Infinity;\n\n        this._host = this._elementRef.nativeElement;\n\n        const self = this;\n\n        if ('valueAsNumber' in this._host) {\n            Object.defineProperty(Object.getPrototypeOf(this._host), 'valueAsNumber', {\n                // tslint:disable-next-line:no-reserved-keywords\n                get() {\n                    const res = parseFloat(self.normalizeSplitter(this.value));\n\n                    return isNaN(res) ? null : res;\n                }\n            });\n        }\n    }\n\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const keyCode = event.keyCode;\n\n        const isCtrlA = (e) => e.keyCode === A && (e.ctrlKey || e.metaKey);\n        const isCtrlC = (e) => e.keyCode === C && (e.ctrlKey || e.metaKey);\n        const isCtrlV = (e) => e.keyCode === V && (e.ctrlKey || e.metaKey);\n        const isCtrlX = (e) => e.keyCode === X && (e.ctrlKey || e.metaKey);\n\n        const isFKey = (e) => e.keyCode >= F1 && e.keyCode <= F12;\n\n        const isNumber = (e) => (e.keyCode >= ZERO && e.keyCode <= NINE) ||\n            (e.keyCode >= NUMPAD_ZERO && e.keyCode <= NUMPAD_NINE);\n\n        const minuses = [NUMPAD_MINUS, DASH, FF_MINUS];\n        const serviceKeys = [DELETE, BACKSPACE, TAB, ESCAPE, ENTER];\n        const arrows = [LEFT_ARROW, RIGHT_ARROW];\n        const allowedKeys =  [HOME, END].concat(arrows).concat(serviceKeys).concat(minuses);\n\n        const isIEPeriod = (e) => e.key === '.' || e.key === 'Decimal';\n        const isNotIEPeriod = (e) => e.key === '.' || e.key === ',';\n\n        // Decimal is for IE\n        const isPeriod = (e) => this._platform.EDGE || this._platform.TRIDENT\n            ? isIEPeriod(e)\n            : isNotIEPeriod(e);\n\n        if (allowedKeys.indexOf(keyCode) !== -1 ||\n            isCtrlA(event) ||\n            isCtrlC(event) ||\n            isCtrlV(event) ||\n            isCtrlX(event) ||\n            isFKey(event) ||\n            isPeriod(event)\n        ) {\n            // let it happen, don't do anything\n            return;\n        }\n        // Ensure that it is not a number and stop the keypress\n        if (event.shiftKey || !isNumber(event)) {\n            event.preventDefault();\n\n            // process steps\n            const step = event.shiftKey ? this.bigStep : this.step;\n\n            if (keyCode === UP_ARROW) {\n                this.stepUp(step);\n            }\n\n            if (keyCode === DOWN_ARROW) {\n                this.stepDown(step);\n            }\n        }\n    }\n\n    onPaste(event) {\n        let value = event.clipboardData.getData('text');\n        value = this.normalizeSplitter(value);\n\n        if (!this.isDigit(value)) {\n            event.preventDefault();\n        }\n    }\n\n    stepUp(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepUp(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    stepDown(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepDown(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    private normalizeSplitter(value: string): string {\n        return value ? value.replace(/,/g, '.') : value;\n    }\n\n    private isDigit(value: string): boolean {\n        return this.isFloat(value) || this.isInt(value);\n    }\n\n    private isFloat(value: string): boolean {\n        return /^-?\\d+\\.\\d+$/.test(value);\n    }\n\n    private isInt(value: string): boolean {\n        return /^-?\\d+$/.test(value);\n    }\n}\n\n@Directive({\n    selector: `input[mcInput]`,\n    exportAs: 'mcInput',\n    host: {\n        class: 'mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(input)': '_onInput()'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McInput }]\n})\nexport class McInput extends _McInputMixinBase implements McFormFieldControl<any>, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-input';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    // tslint:disable no-reserved-keywords\n    /** Input type of the element. */\n    @Input()\n    get type(): string {\n        return this._type;\n    }\n\n    set type(value: string) {\n        this._type = value || 'text';\n        this._validateType();\n\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    // tslint:enable no-reserved-keywords\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this._inputValueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected _uid = `mc-input-${nextUniqueId++}`;\n    protected _previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n    protected _type = 'text';\n    protected _neverEmptyInputTypes = [\n        'date',\n        'datetime',\n        'datetime-local',\n        'month',\n        'time',\n        'week'\n    ].filter((t) => getSupportedInputTypes().has(t));\n\n    private _inputValueAccessor: { value: any };\n\n    constructor(protected _elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || this._elementRef.nativeElement;\n\n        this._previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n\n    /** Focuses the input. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the input changes. */\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    protected _dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Make sure the input is a supported type. */\n    protected _validateType() {\n        if (MC_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMcInputUnsupportedTypeError(this._type);\n        }\n    }\n\n    /** Checks whether the input type is one of the types that are never empty. */\n    protected _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    protected _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this._elementRef.nativeElement as HTMLInputElement).validity;\n\n        return validity && validity.badInput;\n    }\n}\n\n@Directive({\n    selector: 'input[mcInputMonospace]',\n    exportAs: 'McInputMonospace',\n    host: { class: 'mc-input_monospace' }\n})\nexport class McInputMono {\n}\n","import { Directive, forwardRef, Input, OnChanges, Provider, SimpleChanges } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, ValidatorFn, Validators } from '@angular/forms';\n\n\nexport const MIN_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MinValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[min][formControlName],[min][formControl],[min][ngModel]',\n    providers: [MIN_VALIDATOR],\n    host: {'[attr.min]': 'min ? min : null'}\n})\nexport class MinValidator implements Validator, OnChanges {\n\n    @Input() min: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('min' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.min(parseInt(this.min, 10)); }\n}\n\n\nexport const MAX_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MaxValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[max][formControlName],[max][formControl],[max][ngModel]',\n    providers: [MAX_VALIDATOR],\n    host: {\n        '[attr.max]': 'max ? max : null'\n    }\n})\nexport class MaxValidator implements Validator,\n    OnChanges {\n\n    @Input() max: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('max' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.max(parseInt(this.max, 10)); }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McInput, McInputMono, McNumberInput } from './input';\nimport { MaxValidator, MinValidator } from './input-number-validators';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator],\n    declarations: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator ]\n})\nexport class McInputModule {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-content',\n    preserveWhitespaces: false,\n    templateUrl: './content.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-content]': 'true'\n    }\n})\nexport class McContentComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-footer',\n    preserveWhitespaces: false,\n    templateUrl: './footer.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-footer]': 'true'\n    }\n})\nexport class McFooterComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector : 'mc-header',\n    preserveWhitespaces: false,\n    templateUrl: './header.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-header]': 'true'\n    }\n})\nexport class McHeaderComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-layout',\n    preserveWhitespaces: false,\n    styleUrls: ['layout.css'],\n    templateUrl: './layout.component.html',\n    host: {\n        '[class.mc-layout]': 'true',\n        '[class.mc-layout-has-sidebar]': 'hasSidebar'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McLayoutComponent {\n    hasSidebar = false;\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Host,\n    Input,\n    OnInit,\n    Optional,\n    Output\n} from '@angular/core';\nimport { toBoolean } from '@ptsecurity/mosaic/core';\n\nimport { McLayoutComponent } from './layout.component';\n\n\n@Component({\n    selector: 'mc-sidebar',\n    preserveWhitespaces: false,\n    templateUrl: './sidebar.component.html',\n    host: {\n        '[class.mc-layout-sidebar]': 'true',\n        '[class.mc-layout-sidebar-collapsed]': 'mcCollapsed',\n        '[style.flex]': 'mcFlex',\n        '[style.max-width.px]': 'mcWidth',\n        '[style.min-width.px]': 'mcWidth',\n        '[style.width.px]': 'mcWidth'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSidebarComponent implements OnInit {\n\n    @Input() _mcWidth = 200;\n    @Input() mcCollapsedWidth = 80;\n\n    @Input()\n    set mcCollapsible(value: boolean) {\n        this.collapsible = toBoolean(value);\n    }\n\n    get mcCollapsible(): boolean {\n        return this.collapsible;\n    }\n\n    @Input()\n    set mcCollapsed(value: boolean) {\n        this.collapsed = toBoolean(value);\n    }\n\n    get mcCollapsed(): boolean {\n        return this.collapsed;\n    }\n\n    // tslint:disable-next-line\n    @Output() mcCollapsedChange = new EventEmitter();\n\n    private collapsed = false;\n    private collapsible = false;\n\n    get mcFlex(): string {\n        if (this.mcCollapsed) {\n            return `0 0 ${this.mcCollapsedWidth}px`;\n        } else {\n            return `0 0 ${this.mcWidth}px`;\n        }\n    }\n\n    get mcWidth(): number {\n        if (this.mcCollapsed) {\n            return this.mcCollapsedWidth;\n        } else {\n            return this._mcWidth;\n        }\n    }\n\n    constructor(\n        @Optional() @Host() private mcLayoutComponent: McLayoutComponent) {\n    }\n\n    ngOnInit() {\n        if (this.mcLayoutComponent) {\n            this.mcLayoutComponent.hasSidebar = true;\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McContentComponent } from './content.component';\nimport { McFooterComponent } from './footer.component';\nimport { McHeaderComponent } from './header.component';\nimport { McLayoutComponent } from './layout.component';\nimport { McSidebarComponent } from './sidebar.component';\n\n\n@NgModule({\n    imports: [ CommonModule ],\n    exports: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ],\n    declarations: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ]\n})\nexport class McLayoutModule {\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    OnDestroy,\n    QueryList,\n    ViewEncapsulation,\n    ContentChildren\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\n\nimport { mixinColor, mixinDisabled, CanColor, CanDisable, CanDisableCtor, CanColorCtor } from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\n@Directive({\n    selector: 'button[mc-button], a[mc-button]',\n    host: { class: 'mc-button' }\n})\nexport class McButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-icon-button], a[mc-icon-button]',\n    queries: {\n        contentChildren: new ContentChildren(McIcon)\n    },\n    host: { class: 'mc-icon-button' }\n})\nexport class McIconButtonCSSStyler {\n    nativeElement: Element;\n\n    contentChildren: QueryList<McIcon>;\n\n    constructor(elementRef: ElementRef) {\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const twoIcons = 2;\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-icon-button_left');\n                }\n\n                if (iconElement.previousSibling) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-icon-button_right');\n                }\n            }\n        } else if (icons.length === twoIcons) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n\n\nexport class McButtonBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McButtonMixinBase:\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McButtonBase =\n        mixinColor(mixinDisabled(McButtonBase));\n\n\n@Component({\n    selector: `\n        button[mc-button],\n        button[mc-xs-button],\n        button[mc-sm-button],\n        button[mc-lg-button],\n        button[mc-xl-button]\n    `,\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[disabled]': 'disabled || null'\n    }\n})\nexport class McButton extends _McButtonMixinBase implements OnDestroy, CanDisable, CanColor {\n    constructor(elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        super(elementRef);\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n\n\n@Component({\n    selector: 'a[mc-button], a[mc-xs-button], a[mc-sm-button], a[mc-lg-button], a[mc-xl-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_haltDisabledEvents($event)'\n    }\n})\nexport class McAnchor extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n\n\n@Component({\n    selector: 'button[mc-icon-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null'\n    }\n})\nexport class McIconButton extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McButton,\n    McAnchor,\n    McIconButton,\n    McButtonCSSStyler,\n    McIconButtonCSSStyler\n} from './button.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McIconButtonCSSStyler\n    ],\n    declarations: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McIconButtonCSSStyler\n    ]\n})\nexport class McButtonModule {}\n","import {\n    Output,\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef, Input,\n    OnDestroy, EventEmitter,\n    ViewEncapsulation, HostBinding\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n@Component({\n    selector: 'mc-card',\n    templateUrl: './card.component.html',\n    styleUrls: ['./card.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color'],\n    host: {\n        class: 'mc-card',\n        '[class.mc-card_readonly]': 'readonly',\n        '[class.mc-card_selected]': 'selected',\n        '(keydown)': 'onKeyDown($event)',\n        '(click)': 'onClick($event)'\n    }\n})\nexport class McCard implements OnDestroy {\n    get tabIndex(): number | null {\n        return this.readonly ? null : this._tabIndex;\n    }\n\n    @HostBinding('attr.tabIndex')\n    @Input()\n    set tabIndex(value: number | null) {\n        this._tabIndex = value;\n    }\n\n    @Input()\n    readonly = false;\n\n    @Input()\n    selected = false;\n\n    @Output()\n    selectedChange = new EventEmitter<boolean>();\n\n    private _tabIndex: number | null = 0;\n\n    constructor(private _elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        this._focusMonitor.monitor(this._elementRef.nativeElement, false);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this.hostElement.focus();\n    }\n\n    onClick($event: MouseEvent) {\n        if (!this.readonly) {\n            $event.stopPropagation();\n\n            this.selectedChange.emit(!this.selected);\n        }\n    }\n\n    private get hostElement() {\n        return this._elementRef.nativeElement;\n    }\n\n    onKeyDown($event: KeyboardEvent) {\n        switch ($event.keyCode) {\n            case SPACE:\n                if (!this.readonly) {\n                    $event.preventDefault();\n                    this.selectedChange.emit(!this.selected);\n                }\n                break;\n            default:\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McCard\n} from './card.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [McCard],\n    declarations: [McCard]\n})\nexport class McCardModule {}\n","import { InjectionToken } from '@angular/core';\n\n\n/**\n * Checkbox click action when user click on input element.\n * noop: Do not toggle checked or indeterminate.\n * check: Only toggle checked status, ignore indeterminate.\n * check-indeterminate: Toggle checked status, set indeterminate to false. Default behavior.\n * undefined: Same as `check-indeterminate`.\n */\nexport type McCheckboxClickAction = 'noop' | 'check' | 'check-indeterminate' | undefined;\n\n/**\n * Injection token that can be used to specify the checkbox click behavior.\n */\nexport const MC_CHECKBOX_CLICK_ACTION =\n    new InjectionToken<McCheckboxClickAction>('mc-checkbox-click-action');\n","import {\n    AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_CHECKBOX_CLICK_ACTION, McCheckboxClickAction } from './checkbox-config';\n\n\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n\n/**\n * Provider Expression that allows mc-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nexport const MC_CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McCheckbox),\n    multi: true\n};\n\n/**\n * Represents the different states that require custom transitions between them.\n * @docs-private\n */\nexport enum TransitionCheckState {\n    /** The initial state of the component before any user interaction. */\n    Init,\n    /** The state representing the component when it's becoming checked. */\n    Checked,\n    /** The state representing the component when it's becoming unchecked. */\n    Unchecked,\n    /** The state representing the component when it's becoming indeterminate. */\n    Indeterminate\n}\n\n/** Change event object emitted by McCheckbox. */\nexport class McCheckboxChange {\n    /** The source McCheckbox of the event. */\n    source: McCheckbox;\n    /** The new `checked` value of the checkbox. */\n    checked: boolean;\n}\n\n// Boilerplate for applying mixins to McCheckbox.\n/** @docs-private */\nexport class McCheckboxBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McCheckboxMixinBase:\n    HasTabIndexCtor &\n    CanColorCtor &\n    CanDisableCtor &\n    typeof McCheckboxBase =\n        mixinTabIndex(mixinColor(mixinDisabled(McCheckboxBase)));\n\n\n/**\n * A mosaic checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A McCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n */\n@Component({\n    selector: 'mc-checkbox',\n    templateUrl: 'checkbox.html',\n    styleUrls: ['checkbox.css'],\n    exportAs: 'mcCheckbox',\n    host: {\n        class: 'mc-checkbox',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-indeterminate]': 'indeterminate',\n        '[class.mc-checked]': 'checked',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-checkbox-label-before]': 'labelPosition == \"before\"'\n    },\n    providers: [MC_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCheckbox extends _McCheckboxMixinBase implements ControlValueAccessor,\n    AfterViewInit, OnDestroy, CanColor, CanDisable, HasTabIndex {\n\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\n     * take precedence so this may be omitted.\n     */\n    @Input('aria-label') ariaLabel: string = '';\n\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     */\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-checkbox-${++nextUniqueId}`;\n\n    /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n    @Input() id: string = this._uniqueId;\n\n    /** Returns the unique id for the visual hidden input. */\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    /** Whether the checkbox is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    private _required: boolean;\n\n    /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n    @Input() labelPosition: 'before' | 'after' = 'after';\n\n    /** Name value will be applied to the input element if present */\n    @Input() name: string | null = null;\n\n    /** Event emitted when the checkbox's `checked` value changes. */\n    @Output() readonly change: EventEmitter<McCheckboxChange> =\n        new EventEmitter<McCheckboxChange>();\n\n    /** Event emitted when the checkbox's `indeterminate` value changes. */\n    @Output() readonly indeterminateChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** The value attribute of the native input element */\n    @Input() value: string;\n\n    /** The native `<input type=\"checkbox\">` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n     * @docs-private\n     */\n    _onTouched: () => any = () => {\n    }\n\n    private _currentAnimationClass: string = '';\n\n    private _currentCheckState: TransitionCheckState = TransitionCheckState.Init;\n\n    private _controlValueAccessorChangeFn: (value: any) => void = () => {\n    }\n\n    constructor(elementRef: ElementRef,\n                private _changeDetectorRef: ChangeDetectorRef,\n                private _focusMonitor: FocusMonitor,\n                @Attribute('tabindex') tabIndex: string,\n                @Optional() @Inject(MC_CHECKBOX_CLICK_ACTION)\n                private _clickAction: McCheckboxClickAction) {\n        super(elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._inputElement.nativeElement)\n            .subscribe((focusOrigin) => this._onInputFocusChange(focusOrigin));\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._inputElement.nativeElement);\n    }\n\n    /**\n     * Whether the checkbox is checked.\n     */\n    @Input()\n    get checked(): boolean {\n        return this._checked;\n    }\n\n    set checked(value: boolean) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     */\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value != this.disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    @Input()\n    get indeterminate(): boolean {\n        return this._indeterminate;\n    }\n\n    set indeterminate(value: boolean) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = value;\n\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(TransitionCheckState.Indeterminate);\n            } else {\n                this._transitionCheckState(\n                    this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n    }\n\n    private _indeterminate: boolean = false;\n\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // This method is getting called whenever the label of the checkbox changes.\n        // Since the checkbox uses the OnPush strategy we need to notify it about the change\n        // that has been recognized by the cdkObserveContent directive.\n        this._changeDetectorRef.markForCheck();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: any) {\n        this._onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    _getAriaChecked(): 'true' | 'false' | 'mixed' {\n        return this.checked ? 'true' : (this.indeterminate ? 'mixed' : 'false');\n    }\n\n    private _transitionCheckState(newState: TransitionCheckState) {\n        const oldState = this._currentCheckState;\n        const element: HTMLElement = this._elementRef.nativeElement;\n\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n\n        this._currentCheckState = newState;\n\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n        }\n    }\n\n    private _emitChangeEvent() {\n        const event = new McCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    }\n\n    /** Function is called whenever the focus changes for the input element. */\n    private _onInputFocusChange(focusOrigin: FocusOrigin) {\n        if (focusOrigin) {\n            this._onTouched();\n        }\n    }\n\n    /** Toggles the `checked` state of the checkbox. */\n    toggle(): void {\n        this.checked = !this.checked;\n    }\n\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param event\n     */\n    _onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && this._clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && this._clickAction !== 'check') {\n\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n\n            this.toggle();\n            this._transitionCheckState(\n                this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        } else if (!this.disabled && this._clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mc-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n\n    /** Focuses the checkbox. */\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _onInteractionEvent(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n}\n","import {\n    Directive,\n    forwardRef,\n    Provider\n} from '@angular/core';\nimport {\n    CheckboxRequiredValidator,\n    NG_VALIDATORS\n} from '@angular/forms';\n\n\nexport const MC_CHECKBOX_REQUIRED_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => McCheckboxRequiredValidator),\n    multi: true\n};\n\n/**\n * Validator for Mosaic checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mc-checkbox`.\n */\n@Directive({\n    selector: `mc-checkbox[required][formControlName],\n             mc-checkbox[required][formControl], mc-checkbox[required][ngModel]`,\n    providers: [MC_CHECKBOX_REQUIRED_VALIDATOR],\n    host: { '[attr.required]': 'required ? \"\" : null' }\n})\nexport class McCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McCheckbox } from './checkbox';\nimport { McCheckboxRequiredValidator } from './checkbox-required-validator';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McCheckbox, McCheckboxRequiredValidator],\n    declarations: [McCheckbox, McCheckboxRequiredValidator]\n})\nexport class McCheckboxModule {\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\n\n@Component({\n    selector: 'mc-divider',\n    host: {\n        class: 'mc-divider',\n        role: 'separator',\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n        '[class.mc-divider-vertical]': 'vertical',\n        '[class.mc-divider-inset]': 'inset'\n    },\n    template: '',\n    styleUrls: ['divider.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false\n})\nexport class McDivider {\n    // Whether the divider is vertically aligned.\n    @Input()\n    get vertical(): boolean {\n        return this._vertical;\n    }\n\n    set vertical(value: boolean) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n\n    private _vertical: boolean = false;\n\n    // Whether the divider is an inset divider.\n    @Input()\n    get inset(): boolean {\n        return this._inset;\n    }\n\n    set inset(value: boolean) {\n        this._inset = coerceBooleanProperty(value);\n    }\n\n    private _inset: boolean = false;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McDivider } from './divider.component';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McDivider],\n    declarations: [McDivider]\n})\nexport class McDividerModule {\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    Directive,\n    TemplateRef,\n    ComponentFactoryResolver,\n    ApplicationRef,\n    Injector,\n    ViewContainerRef,\n    Inject,\n    OnDestroy\n} from '@angular/core';\nimport { TemplatePortal, DomPortalOutlet } from '@ptsecurity/cdk/portal';\nimport { Subject } from 'rxjs';\n\n\n/**\n * Dropdown content that will be rendered lazily once the dropdown is opened.\n */\n@Directive({\n    selector: 'ng-template[mcDropdownContent]'\n})\nexport class McDropdownContent implements OnDestroy {\n\n    /** Emits when the dropdown content has been attached. */\n    _attached = new Subject<void>();\n    private _portal: TemplatePortal;\n    private _outlet: DomPortalOutlet;\n\n    constructor(\n        private _template: TemplateRef<any>,\n        private _componentFactoryResolver: ComponentFactoryResolver,\n        private _appRef: ApplicationRef,\n        private _injector: Injector,\n        private _viewContainerRef: ViewContainerRef,\n        @Inject(DOCUMENT) private _document: any) {}\n\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context: any = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n\n        this.detach();\n\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'),\n                this._componentFactoryResolver, this._appRef, this._injector);\n        }\n\n        const element: HTMLElement = this._template.elementRef.nativeElement;\n\n        // Because we support opening the same dropdown from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode!.insertBefore(this._outlet.outletElement, element);\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\n","import { EventEmitter, TemplateRef, InjectionToken } from '@angular/core';\nimport { FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/**\n * Injection token used to provide the parent dropdown to dropdown-specific components.\n * @docs-private\n */\nexport const MC_DROPDOWN_PANEL = new InjectionToken<McDropdownPanel>('MC_DROPDOWN_PANEL');\n\n/**\n * Interface for a custom dropdown panel that can be used with `mcDropdownTriggerFor`.\n * @docs-private\n */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownPanel<T = any> {\n    xPosition: DropdownPositionX;\n    yPosition: DropdownPositionY;\n    overlapTrigger: boolean;\n    templateRef: TemplateRef<any>;\n    closed: EventEmitter<void | 'click' | 'keydown' | 'tab'>;\n    direction?: Direction;\n    lazyContent?: McDropdownContent;\n    backdropClass?: string;\n    hasBackdrop?: boolean;\n    focusFirstItem(origin?: FocusOrigin): void;\n    resetActiveItem(): void;\n    setPositionClasses?(x: DropdownPositionX, y: DropdownPositionY): void;\n    addItem?(item: T): void;\n    removeItem?(item: T): void;\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    Inject,\n    Optional\n} from '@angular/core';\nimport { IFocusableOption, FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\n\n\n// Boilerplate for applying mixins to McDropdownItem.\n/** @docs-private */\nexport class McDropdownItemBase {}\nexport const _McDropdownItemMixinBase: CanDisableCtor & typeof McDropdownItemBase =\n    mixinDisabled(McDropdownItemBase);\n\n/**\n * This directive is intended to be used inside an mc-dropdown tag.\n * It exists mostly to set the role attribute.\n */\n@Component({\n    selector: 'mc-dropdown-item, [mc-dropdown-item]',\n    exportAs: 'mcDropdownItem',\n    inputs: ['disabled'],\n    host: {\n        role: 'dropdown-item',\n        class: 'mc-dropdown__item',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_checkDisabled($event)'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    template: `<ng-content></ng-content>`\n})\nexport class McDropdownItem extends _McDropdownItemMixinBase\n    implements IFocusableOption, CanDisable, OnDestroy {\n\n    private _document: Document;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        @Inject(DOCUMENT) document: any,\n        private _focusMonitor: FocusMonitor,\n        @Inject(MC_DROPDOWN_PANEL) @Optional() private _parentDropdownPanel?: McDropdownPanel<McDropdownItem>) {\n        super();\n\n        if (_focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for dropdown items only when the focus was not caused by a\n            // mouse or touch interaction.\n            _focusMonitor.monitor(this._elementRef.nativeElement, false);\n        }\n\n        if (_parentDropdownPanel && _parentDropdownPanel.addItem) {\n            _parentDropdownPanel.addItem(this);\n        }\n\n        this._document = document;\n    }\n\n    /** Focuses the dropdown item. */\n    focus(origin: FocusOrigin = 'program'): void {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin);\n        } else {\n            this._getHostElement().focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n\n        if (this._parentDropdownPanel && this._parentDropdownPanel.removeItem) {\n            this._parentDropdownPanel.removeItem(this);\n        }\n    }\n\n    /** Used to set the `tabindex`. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Returns the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._elementRef.nativeElement;\n    }\n\n    /** Prevents the default element actions if it is disabled. */\n    _checkDisabled(event: Event): void {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        const element: HTMLElement = this._elementRef.nativeElement;\n        // tslint:disable-next-line:no-magic-numbers\n        const textNodeType = this._document ? this._document.TEXT_NODE : 3;\n        let output = '';\n\n        if (element.childNodes) {\n            const length = element.childNodes.length;\n\n            // Go through all the top-level text nodes and extract their text.\n            // We skip anything that's not a text node to prevent the text from\n            // being thrown off by something like an icon.\n            for (let i = 0; i < length; i++) {\n                if (element.childNodes[i].nodeType === textNodeType) {\n                    output += element.childNodes[i].textContent;\n                }\n            }\n        }\n\n        return output.trim();\n    }\n}\n","import {\n    trigger,\n    state,\n    style,\n    animate,\n    transition,\n    query,\n    group,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\n/**\n * Animations used by the mc-dropdown component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nexport const mcDropdownAnimations: {\n    readonly transformDropdown: AnimationTriggerMetadata;\n    readonly fadeInItems: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation controls the dropdown panel's entry and exit from the page.\n     *\n     * When the dropdown panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the dropdown panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformDropdown: trigger('transformDropdown', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        })),\n        transition('void => enter', group([\n            query('.mc-dropdown__content', animate('50ms linear', style({opacity: 1}))),\n            animate('50ms cubic-bezier(0, 0, 0.2, 1)', style({transform: 'scale(1)'}))\n        ])),\n        transition('* => void', animate('50ms 25ms linear', style({opacity: 0})))\n    ]),\n\n\n    /**\n     * This animation fades in the background color and content of the dropdown panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // now. Remove next time we do breaking changes.\n        state('showing', style({opacity: 1})),\n        transition('void => *', [\n            style({opacity: 0}),\n            animate('200ms 60ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\nexport const fadeInItems = mcDropdownAnimations.fadeInItems;\n\nexport const transformDropdown = mcDropdownAnimations.transformDropdown;\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    Output,\n    TemplateRef,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    OnInit\n} from '@angular/core';\nimport { FocusKeyManager, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE, DOWN_ARROW, UP_ARROW } from '@ptsecurity/cdk/keycodes';\nimport { Subject, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { mcDropdownAnimations } from './dropdown-animations';\nimport { McDropdownContent } from './dropdown-content';\nimport { throwMcDropdownInvalidPositionX, throwMcDropdownInvalidPositionY } from './dropdown-errors';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/** Default `mc-dropdown` options that can be overridden. */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownDefaultOptions {\n    /** The x-axis position of the dropdown. */\n    xPosition: DropdownPositionX;\n\n    /** The y-axis position of the dropdown. */\n    yPosition: DropdownPositionY;\n\n    /** Whether the dropdown should overlap the dropdown trigger. */\n    overlapTrigger: boolean;\n\n    /** Class to be applied to the dropdown's backdrop. */\n    backdropClass: string;\n\n    /** Whether the dropdown has a backdrop. */\n    hasBackdrop?: boolean;\n}\n\n/** Injection token to be used to override the default options for `mc-dropdown`. */\nexport const MC_DROPDOWN_DEFAULT_OPTIONS =\n    new InjectionToken<McDropdownDefaultOptions>('mc-dropdown-default-options', {\n        providedIn: 'root',\n        factory: MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY\n    });\n\n/** @docs-private */\nexport function MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY(): McDropdownDefaultOptions {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop'\n    };\n}\n\n@Component({\n    selector: 'mc-dropdown',\n    templateUrl: 'dropdown.html',\n    styleUrls: ['dropdown.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcDropdown',\n    animations: [\n        mcDropdownAnimations.transformDropdown,\n        mcDropdownAnimations.fadeInItems\n    ],\n    providers: [\n        {provide: MC_DROPDOWN_PANEL, useExisting: McDropdown}\n    ]\n})\nexport class McDropdown implements AfterContentInit, McDropdownPanel<McDropdownItem>, OnInit, OnDestroy {\n\n    /** Position of the dropdown in the X axis. */\n    @Input()\n    get xPosition(): DropdownPositionX { return this._xPosition; }\n    set xPosition(value: DropdownPositionX) {\n        if (value !== 'before' && value !== 'after') {\n            throwMcDropdownInvalidPositionX();\n        }\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Position of the dropdown in the Y axis. */\n    @Input()\n    get yPosition(): DropdownPositionY { return this._yPosition; }\n    set yPosition(value: DropdownPositionY) {\n        if (value !== 'above' && value !== 'below') {\n            throwMcDropdownInvalidPositionY();\n        }\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Whether the dropdown should overlap its trigger. */\n    @Input()\n    get overlapTrigger(): boolean { return this._overlapTrigger; }\n    set overlapTrigger(value: boolean) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n\n    /** Whether the dropdown has a backdrop. */\n    @Input()\n    get hasBackdrop(): boolean | undefined { return this._hasBackdrop; }\n    set hasBackdrop(value: boolean | undefined) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n\n    /**\n     * This method takes classes set on the host mc-dropdown element and applies them on the\n     * dropdown template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing dropdown from outside the component.\n     * @param classes list of class names\n     */\n    @Input('class')\n    set panelClass(classes: string) {\n        if (classes && classes.length) {\n            this._classList = classes.split(' ').reduce((obj: any, className: string) => {\n                obj[className] = true;\n\n                return obj;\n            }, {});\n\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n\n    /** Config object to be passed into the dropdown's ngClass */\n    _classList: {[key: string]: boolean} = {};\n\n    /** Current state of the panel animation. */\n    _panelAnimationState: 'void' | 'enter' = 'void';\n\n    /** Emits whenever an animation on the dropdown completes. */\n    _animationDone = new Subject<AnimationEvent>();\n\n    /** Whether the dropdown is animating. */\n    _isAnimating: boolean;\n\n    /** Layout direction of the dropdown. */\n    direction: Direction;\n\n    /** Class to be added to the backdrop element. */\n    @Input() backdropClass: string = this._defaultOptions.backdropClass;\n\n    /** @docs-private */\n    @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n\n    /**\n     * List of the items inside of a dropdown.\n     */\n    @ContentChildren(McDropdownItem) items: QueryList<McDropdownItem>;\n\n    /**\n     * Dropdown content that will be rendered lazily.\n     * @docs-private\n     */\n    @ContentChild(McDropdownContent) lazyContent: McDropdownContent;\n\n    /** Event emitted when the dropdown is closed. */\n    @Output() readonly closed: EventEmitter<void | 'click' | 'keydown' | 'tab'> =\n        new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n\n    private _keyManager: FocusKeyManager<McDropdownItem>;\n    private _xPosition: DropdownPositionX = this._defaultOptions.xPosition;\n    private _yPosition: DropdownPositionY = this._defaultOptions.yPosition;\n\n    /** Dropdown items inside the current dropdown. */\n    private _items: McDropdownItem[] = [];\n\n    /** Emits whenever the amount of dropdown items changes. */\n    private _itemChanges = new Subject<McDropdownItem[]>();\n\n    /** Subscription to tab events on the dropdown panel */\n    private _tabSubscription = Subscription.EMPTY;\n    private _overlapTrigger: boolean = this._defaultOptions.overlapTrigger;\n    private _hasBackdrop: boolean | undefined = this._defaultOptions.hasBackdrop;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        private _ngZone: NgZone,\n        @Inject(MC_DROPDOWN_DEFAULT_OPTIONS) private _defaultOptions: McDropdownDefaultOptions) { }\n\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager<McDropdownItem>(this.items).withWrap().withTypeAhead();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n    }\n\n    ngOnDestroy() {\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n\n    /** Handle a keyboard event from the dropdown, delegating to the appropriate action. */\n    _handleKeydown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const keyCode = event.keyCode;\n\n        switch (keyCode) {\n            case ESCAPE:\n                this.closed.emit('keydown');\n                break;\n            case UP_ARROW:\n            case DOWN_ARROW:\n                this._keyManager.setFocusOrigin('keyboard');\n                this._keyManager.onKeydown(event);\n                break;\n              default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    /**\n     * Focus the first item in the dropdown.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin: FocusOrigin = 'program'): void {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable.asObservable()\n                .pipe(take(1))\n                .subscribe(() => this._keyManager.setFocusOrigin(origin).setFirstItemActive());\n        } else {\n            this._keyManager.setFocusOrigin(origin).setFirstItemActive();\n        }\n    }\n\n    /**\n     * Resets the active item in the dropdown. This is used when the dropdown is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n\n    /**\n     * Registers a dropdown item with the dropdown.\n     * @docs-private\n     */\n    addItem(item: McDropdownItem) {\n        // We register the items through this method, rather than picking them up through\n        // `ContentChildren`, because we need the items to be picked up by their closest\n        // `mc-dropdown` ancestor. If we used `@ContentChildren(McDropdownItem, {descendants: true})`,\n        // all descendant items will bleed into the top-level dropdown in the case where the consumer\n        // has `mc-dropdown` instances nested inside each other.\n        if (this._items.indexOf(item) === -1) {\n            this._items.push(item);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Removes an item from the dropdown.\n     * @docs-private\n     */\n    removeItem(item: McDropdownItem) {\n        const index = this._items.indexOf(item);\n\n        if (this._items.indexOf(item) > -1) {\n            this._items.splice(index, 1);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Adds classes to the dropdown panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the dropdown along the x axis.\n     * @param posY Position of the dropdown along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX: DropdownPositionX = this.xPosition, posY: DropdownPositionY = this.yPosition) {\n        const classes = this._classList;\n        classes['mc-dropdown-before'] = posX === 'before';\n        classes['mc-dropdown-after'] = posX === 'after';\n        classes['mc-dropdown-above'] = posY === 'above';\n        classes['mc-dropdown-below'] = posY === 'below';\n    }\n\n    /** Starts the enter animation. */\n    _startAnimation() {\n        this._panelAnimationState = 'enter';\n    }\n\n    /** Resets the panel animation to its initial state. */\n    _resetAnimation() {\n        this._panelAnimationState = 'void';\n    }\n\n    /** Callback that is invoked when the panel animation completes. */\n    _onAnimationDone(event: AnimationEvent) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n\n        // Scroll the content element to the top once the animation is done. This is necessary, because\n        // we move focus to the first item while it's still being animated, which can throw the browser\n        // off when it determines the scroll position. Alternatively we can move focus when the\n        // animation is done, however moving focus asynchronously will interrupt screen readers\n        // which are in the process of reading out the dropdown already. We take the `element` from\n        // the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n}\n","import {\n    AfterContentInit,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy, OnInit,\n    Optional,\n    Output,\n    ViewContainerRef\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction, Directionality } from '@ptsecurity/cdk/bidi';\nimport {\n    FlexibleConnectedPositionStrategy,\n    HorizontalConnectionPos,\n    Overlay,\n    OverlayConfig,\n    OverlayRef,\n    VerticalConnectionPos,\n    IScrollStrategy\n} from '@ptsecurity/cdk/overlay';\nimport { TemplatePortal } from '@ptsecurity/cdk/portal';\nimport { merge, Subscription } from 'rxjs';\nimport { filter, take, takeUntil } from 'rxjs/operators';\n\nimport { throwMcDropdownMissingError } from './dropdown-errors';\nimport { McDropdownPanel } from './dropdown-panel';\nimport { McDropdown } from './dropdown.component';\n\n\n/** Injection token that determines the scroll handling while the dropdown is open. */\nexport const MC_DROPDOWN_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-dropdown-scroll-strategy');\n\n/** @docs-private */\nexport function MC_DROPDOWN_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_DROPDOWN_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_DROPDOWN_SCROLL_STRATEGY_FACTORY\n};\n\n/**\n * This directive is intended to be used in conjunction with an mc-dropdown tag.  It is\n * responsible for toggling the display of the provided dropdown instance.\n */\n@Directive({\n    selector: `[mcDropdownTriggerFor]`,\n    host: {\n        '(touchstart)': '_openedBy = \"touch\"',\n        '(click)': 'toggle()'\n    },\n    exportAs: 'mcDropdownTrigger'\n})\nexport class McDropdownTrigger implements OnInit, AfterContentInit, OnDestroy {\n\n    /** Whether the dropdown is open. */\n    get opened(): boolean {\n        return this._opened;\n    }\n\n    /** The text direction of the containing app. */\n    get dir(): Direction {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    // Tracking input type is necessary so it's possible to only auto-focus\n    // the first item of the list when the dropdown is opened via the keyboard\n    _openedBy: 'mouse' | 'touch' | null = null;\n\n    /** References the dropdown instance that the trigger is associated with. */\n    @Input('mcDropdownTriggerFor') dropdown: McDropdownPanel;\n\n    /** Data to be passed along to any lazily-rendered content. */\n    @Input('mcDropdownTriggerData') data: any;\n\n    /** Event emitted when the associated dropdown is opened. */\n    @Output() readonly dropdownOpened: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the associated dropdown is closed. */\n    @Output() readonly dropdownClosed: EventEmitter<void> = new EventEmitter<void>();\n\n    private _portal: TemplatePortal;\n    private _overlayRef: OverlayRef | null = null;\n    private _opened: boolean = false;\n    private _closeSubscription = Subscription.EMPTY;\n    private _hoverSubscription = Subscription.EMPTY;\n\n    constructor(private _overlay: Overlay,\n                private _element: ElementRef<HTMLElement>,\n                private _viewContainerRef: ViewContainerRef,\n                @Inject(MC_DROPDOWN_SCROLL_STRATEGY) private _scrollStrategy: any,\n                @Optional() private _dir: Directionality,\n                private _focusMonitor?: FocusMonitor) {}\n\n    ngOnInit(): void {\n        this.dropdown.closed = this.dropdown.closed || new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n    }\n\n    ngAfterContentInit() {\n        this._check();\n\n        this.dropdown.closed.asObservable().subscribe(() => {\n            this._destroy();\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n\n        this._cleanUpSubscriptions();\n    }\n\n    /** Toggles the dropdown between the open and closed states. */\n    toggle(): void {\n        // tslint:disable-next-line:no-void-expression\n        return this._opened ? this.close() : this.open();\n    }\n\n    /** Opens the dropdown. */\n    open(): void {\n        if (this._opened) {\n            return;\n        }\n\n        this._check();\n\n        const overlayRef = this._createOverlay();\n        this._setPosition(overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy);\n        overlayRef.attach(this._portal);\n\n        if (this.dropdown.lazyContent) {\n            this.dropdown.lazyContent.attach(this.data);\n        }\n\n        this._closeSubscription = this._closingActions().subscribe(() => this.close());\n        this._init();\n\n        if (this.dropdown instanceof McDropdown) {\n            this.dropdown._startAnimation();\n        }\n    }\n\n    /** Closes the dropdown. */\n    close(): void {\n        this.dropdown.closed.emit();\n    }\n\n    /**\n     * Focuses the dropdown trigger.\n     * @param origin Source of the dropdown trigger's focus.\n     */\n    focus(origin: FocusOrigin = 'program') {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._element.nativeElement, origin);\n        } else {\n            this._element.nativeElement.focus();\n        }\n    }\n\n    /** Closes the dropdown and does the necessary cleanup. */\n    private _destroy() {\n        if (!this._overlayRef || !this.opened) {\n            return;\n        }\n\n        const dropdown = this.dropdown;\n\n        this._closeSubscription.unsubscribe();\n        this._overlayRef.detach();\n\n        if (dropdown instanceof McDropdown) {\n            dropdown._resetAnimation();\n\n            if (dropdown.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                dropdown._animationDone\n                    .pipe(\n                        filter((event) => event.toState === 'void'),\n                        take(1),\n                        // Interrupt if the content got re-attached.\n                        takeUntil(dropdown.lazyContent._attached)\n                    )\n                    .subscribe(() => dropdown.lazyContent.detach(), undefined, () => {\n                        // No matter whether the content got re-attached, reset the dropdown.\n                        this._reset();\n                    });\n            } else {\n                this._reset();\n            }\n        } else {\n            this._reset();\n\n            if (dropdown.lazyContent) {\n                dropdown.lazyContent.detach();\n            }\n        }\n    }\n\n    /**\n     * This method sets the dropdown state to open and focuses the first item if\n     * the dropdown was opened via the keyboard.\n     */\n    private _init(): void {\n        this.dropdown.direction = this.dir;\n        this._setIsOpened(true);\n        this.dropdown.focusFirstItem(this._openedBy || 'program');\n    }\n\n    /**\n     * This method resets the dropdown when it's closed, most importantly restoring\n     * focus to the dropdown trigger if the dropdown was opened via the keyboard.\n     */\n    private _reset(): void {\n        this._setIsOpened(false);\n\n        // We should reset focus if the user is navigating using a keyboard or\n        // if we have a top-level trigger which might cause focus to be lost\n        // when clicking on the backdrop.\n        if (!this._openedBy) {\n            // Note that the focus style will show up both for `program` and\n            // `keyboard` so we don't have to specify which one it is.\n            this.focus();\n        } else {\n            this.focus(this._openedBy);\n        }\n\n        this._openedBy = null;\n    }\n\n    // set state rather than toggle to support triggers sharing a dropdown\n    private _setIsOpened(isOpen: boolean): void {\n        this._opened = isOpen;\n        // tslint:disable-next-line:no-void-expression\n        this._opened ? this.dropdownOpened.emit() : this.dropdownClosed.emit();\n    }\n\n    /**\n     * This method checks that a valid instance of Dropdown has been passed into\n     * mcDropdownTriggerFor. If not, an exception is thrown.\n     */\n    private _check() {\n        if (!this.dropdown) {\n            throwMcDropdownMissingError();\n        }\n    }\n\n    /**\n     * This method creates the overlay from the provided dropdown's template and saves its\n     * OverlayRef so that it can be attached to the DOM when open is called.\n     */\n    private _createOverlay(): OverlayRef {\n        if (!this._overlayRef) {\n            this._portal = new TemplatePortal(this.dropdown.templateRef, this._viewContainerRef);\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions(config.positionStrategy as FlexibleConnectedPositionStrategy);\n            this._overlayRef = this._overlay.create(config);\n\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `McDropdownPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n\n        return this._overlayRef;\n    }\n\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    private _getOverlayConfig(): OverlayConfig {\n        return new OverlayConfig({\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withTransformOriginOn('.mc-dropdown__panel'),\n            hasBackdrop: this.dropdown.hasBackdrop === null || this.dropdown.hasBackdrop === undefined\n                ? true\n                : this.dropdown.hasBackdrop,\n            backdropClass: this.dropdown.backdropClass || 'cdk-overlay-transparent-backdrop',\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir\n        });\n    }\n\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the dropdown based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    private _subscribeToPositions(position: FlexibleConnectedPositionStrategy): void {\n        if (this.dropdown.setPositionClasses) {\n            // todo possibly we should not recompute positions there\n            /*position.positionChanges.subscribe((change) => {\n                const posX: DropdownPositionX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                const posY: DropdownPositionY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n\n                this.dropdown.setPositionClasses!(posX, posY);\n            });*/\n            position.positionChanges.subscribe(() => {\n                this.dropdown.setPositionClasses!(this.dropdown.xPosition, this.dropdown.yPosition);\n            });\n        }\n    }\n\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    private _setPosition(positionStrategy: FlexibleConnectedPositionStrategy) {\n        const [originX, originFallbackX]: HorizontalConnectionPos[] =\n            this.dropdown.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n\n        const [overlayY, overlayFallbackY]: VerticalConnectionPos[] =\n            this.dropdown.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        const [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        const offsetY = 0;\n\n        if (!this.dropdown.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n\n        positionStrategy.withPositions([\n            {originX, originY, overlayX, overlayY, offsetY},\n            {originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY},\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            }\n        ]);\n    }\n\n    /** Cleans up the active subscriptions. */\n    private _cleanUpSubscriptions(): void {\n        this._closeSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n\n    /** Returns a stream that emits whenever an action that should close the dropdown occurs. */\n    private _closingActions() {\n        const backdrop = this._overlayRef!.backdropClick();\n        const detachments = this._overlayRef!.detachments();\n\n        return merge(backdrop, detachments);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER, McDropdownTrigger } from './dropdown-trigger';\nimport { McDropdown } from './dropdown.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule\n    ],\n    exports: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    declarations: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    providers: [MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER]\n})\nexport class McDropdownModule {}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-cleaner',\n    template: '<i class=\"mc-icon_light\" mc-icon=\"mc-close-M_16\" color=\"second\"></i>'\n})\nexport class McCleaner {\n}\n","import { NgControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** The element ID for this control. */\n    readonly id: string;\n\n    /** The placeholder for this control. */\n    readonly placeholder: string;\n\n    /** Gets the NgControl for this control. */\n    readonly ngControl: NgControl | null;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Whether the control is empty. */\n    readonly empty: boolean;\n\n    /** Whether the control is required. */\n    readonly required: boolean;\n\n    /** Whether the control is disabled. */\n    readonly disabled: boolean;\n\n    /** Whether the control is in an error state. */\n    readonly errorState: boolean;\n\n    /**\n     * An optional name for the control type that can be used to distinguish `mc-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mc-form-field-type-{{controlType}}` to its root element.\n     */\n    readonly controlType?: string;\n\n    /** Handles a click on the control's container. */\n    abstract onContainerClick(event: MouseEvent): void;\n}\n","import { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldNumberControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** the number step */\n    step: number;\n\n    /** the number big step */\n    bigStep: number;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Handles step up and down */\n    abstract stepUp(step: number): void;\n\n    abstract stepDown(step: number): void;\n}\n","import { Directive, Input } from '@angular/core';\n\n\nlet nextUniqueId = 0;\n\n@Directive({\n    selector: 'mc-hint',\n    host: {\n        class: 'mc-hint',\n        '[attr.id]': 'id'\n    }\n})\nexport class McHint {\n    @Input() id: string = `mc-hint-${nextUniqueId++}`;\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcPrefix]'\n})\nexport class McPrefix {\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-stepper',\n    template: `\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-up mc-angle-L_16\"\n           (mousedown)=\"onStepUp($event)\">\n        </i>\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-down mc-angle-L_16\"\n           (mousedown)=\"onStepDown($event)\">\n        </i>\n    `\n})\nexport class McStepper {\n    @Output()\n    readonly stepUp: EventEmitter<void> = new EventEmitter<void>();\n    @Output()\n    readonly stepDown: EventEmitter<void> = new EventEmitter<void>();\n\n    onStepUp($event: MouseEvent) {\n        this.stepUp.emit();\n        $event.preventDefault();\n    }\n\n    onStepDown($event: MouseEvent) {\n        this.stepDown.emit();\n        $event.preventDefault();\n    }\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcSuffix]'\n})\nexport class McSuffix {\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\nexport function isBoolean(val: any): val is boolean { return typeof val === 'boolean'; }\n\nexport function toBoolean(value: any): boolean {\n    return value != null && `${value}` !== 'false';\n}\n","import { NgModule, InjectionToken, Optional, Inject, isDevMode } from '@angular/core';\nimport { BidiModule } from '@ptsecurity/cdk/bidi';\n\n\n// Injection token that configures whether the Mosaic sanity checks are enabled.\nexport const MC_SANITY_CHECKS = new InjectionToken<boolean>('mc-sanity-checks', {\n    providedIn: 'root',\n    factory: MC_SANITY_CHECKS_FACTORY\n});\n\nexport function MC_SANITY_CHECKS_FACTORY(): boolean {\n    return true;\n}\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Mosaic\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\n@NgModule({\n    imports: [ BidiModule ],\n    exports: [ BidiModule ]\n})\nexport class McCommonModule {\n    // Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n    private _hasDoneGlobalChecks = false;\n\n    // Reference to the global `document` object.\n    private _document = typeof document === 'object' && document ? document : null;\n\n    // Reference to the global 'window' object.\n    private _window = typeof window === 'object' && window ? window : null;\n\n    constructor(@Optional() @Inject(MC_SANITY_CHECKS) private _sanityChecksEnabled: boolean) {\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n\n    // Whether any sanity checks are enabled\n    private _areChecksEnabled(): boolean {\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    }\n\n    // Whether the code is running in tests.\n    private _isTestEnv() {\n        // tslint:disable-next-line\n        return this._window && (this._window['__karma__'] || this._window['jasmine']);\n    }\n\n    private _checkDoctypeIsDefined(): void {\n        if (this._document && !this._document.doctype) {\n            console.warn(\n                'Current document does not have a doctype. This may cause ' +\n                'some Mosaic components not to behave as expected.'\n            );\n        }\n    }\n\n    private _checkThemeIsPresent(): void {\n        if (this._document && typeof getComputedStyle === 'function') {\n            const testElement = this._document.createElement('div');\n\n            testElement.classList.add('mc-theme-loaded-marker');\n            this._document.body.appendChild(testElement);\n\n            const computedStyle = getComputedStyle(testElement);\n\n            // In some situations, the computed style of the test element can be null. For example in\n            // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n            if (computedStyle && computedStyle.display !== 'none') {\n                console.warn(\n                    'Could not find Mosaic core theme. Most Mosaic ' +\n                    'components may not work as expected. For more info refer ' +\n                    'to the theming guide: link there'\n                );\n            }\n\n            this._document.body.removeChild(testElement);\n        }\n    }\n}\n","import { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanDisable {\n    disabled: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableCtor = Constructor<CanDisable>;\n\n// Mixin to augment a directive with a `disabled` property.\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): CanDisableCtor & T {\n    return class extends base {\n        private _disabled: boolean = false;\n\n        get disabled() {\n            return this._disabled;\n        }\n\n        set disabled(value: any) {\n            this._disabled = coerceBooleanProperty(value);\n        }\n\n        constructor(...args: any[]) {\n            // tslint:disable-next-line\n            super(...args);\n        }\n    };\n}\n","import { ElementRef } from '@angular/core';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanColor {\n    color: ThemePalette;\n}\n\n/** @docs-private */\nexport type CanColorCtor = Constructor<CanColor>;\n\nexport interface HasElementRef {\n    _elementRef: ElementRef;\n}\n\nexport enum ThemePalette {\n    Primary = 'primary',\n    Second = 'second',\n    Error = 'error',\n    Default = 'second',\n    Empty = ''\n}\n\n/** Mixin to augment a directive with a `color` property. */\nexport function mixinColor<T extends Constructor<HasElementRef>>(\n    base: T,\n    defaultColor: ThemePalette = ThemePalette.Default\n): CanColorCtor & T {\n    return class extends base {\n\n        private _color: ThemePalette;\n\n        get color(): ThemePalette {\n            return this._color;\n        }\n\n        set color(value: ThemePalette) {\n            const colorPalette = value || defaultColor;\n\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mc-${this._color}`);\n                }\n\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mc-${colorPalette}`);\n                }\n\n                this._color = colorPalette;\n            }\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n\n            this.color = defaultColor;\n        }\n    };\n}\n\n","import { Constructor } from './constructor';\nimport { CanDisable } from './disabled';\n\n\nexport interface HasTabIndex {\n    tabIndex: number;\n}\n\nexport type HasTabIndexCtor = Constructor<HasTabIndex>;\n\n// Mixin to augment a directive with a `tabIndex` property.\nexport function mixinTabIndex<T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0)\n    : HasTabIndexCtor & T {\n    return class extends base {\n        private _tabIndex: number = defaultTabIndex;\n\n        get tabIndex(): number {\n            return this.disabled ? -1 : this._tabIndex;\n        }\n\n        set tabIndex(value: number) {\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n    };\n}\n","import { FormControl, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\nimport { ErrorStateMatcher } from '../error/error-options';\n\nimport { Constructor } from './constructor';\n\n\n/** @docs-private */\nexport interface CanUpdateErrorState {\n\n    readonly stateChanges: Subject<void>;\n\n    errorState: boolean;\n    errorStateMatcher: ErrorStateMatcher;\n\n    updateErrorState();\n}\n\n/** @docs-private */\nexport type CanUpdateErrorStateCtor = Constructor<CanUpdateErrorState>;\n\n/** @docs-private */\nexport interface HasErrorState {\n    _parentFormGroup: FormGroupDirective;\n    _parentForm: NgForm;\n    _defaultErrorStateMatcher: ErrorStateMatcher;\n    ngControl: NgControl;\n}\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T)\n    : CanUpdateErrorStateCtor & T {\n    return class extends base {\n        /** Whether the component is in an error state. */\n        errorState: boolean = false;\n\n        /**\n         * Stream that emits whenever the state of the input changes such that the wrapping\n         * `MatFormField` needs to run change detection.\n         */\n        readonly stateChanges = new Subject<void>();\n\n        errorStateMatcher: ErrorStateMatcher;\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this._parentFormGroup || this._parentForm;\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control as FormControl : null;\n            const newState = matcher.isErrorState(control, parent);\n\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n","import {\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ENTER, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Subject } from 'rxjs';\n\nimport { McOptgroup } from './optgroup';\n\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n\n/** Event object emitted by McOption when selected or deselected. */\nexport class McOptionSelectionChange {\n    constructor(\n        /** Reference to the option that emitted the event. */\n        public source: McOption,\n        /** Whether the change in the option's value was a result of a user action. */\n        public isUserInput = false) {\n    }\n}\n\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * @docs-private\n */\nexport interface IMcOptionParentComponent {\n    disableRipple?: boolean;\n    multiple?: boolean;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_OPTION_PARENT_COMPONENT =\n    new InjectionToken<IMcOptionParentComponent>('MC_OPTION_PARENT_COMPONENT');\n\n/**\n * Single option inside of a `<mat-select>` element.\n */\n@Component({\n    selector: 'mc-option',\n    exportAs: 'mcOption',\n    host: {\n        '[attr.tabindex]': '_getTabIndex()',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-option-multiple]': 'multiple',\n        '[class.mc-active]': 'active',\n        '[id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '(click)': '_selectViaInteraction()',\n        '(keydown)': '_handleKeydown($event)',\n        class: 'mc-option'\n    },\n    styleUrls: ['option.css'],\n    templateUrl: 'option.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McOption implements AfterViewChecked, OnDestroy {\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n        return this._parent && this._parent.multiple;\n    }\n\n    /** The unique ID of the option. */\n    get id(): string {\n        return this._id;\n    }\n\n    /** Whether or not the option is currently selected. */\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    /** The form value of the option. */\n    @Input() value: any;\n\n    /** Whether the option is disabled. */\n    @Input()\n    get disabled() {\n        return (this.group && this.group.disabled) || this._disabled;\n    }\n\n    set disabled(value: any) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() {\n        return this._parent && this._parent.disableRipple;\n    }\n\n    /** Event emitted when the option is selected or deselected. */\n        // tslint:disable-next-line:no-output-on-prefix\n    @Output() readonly onSelectionChange = new EventEmitter<McOptionSelectionChange>();\n\n    /** Emits when the state of the option changes and any parents have to be notified. */\n    readonly _stateChanges = new Subject<void>();\n\n    private _selected = false;\n    private _active = false;\n    private _disabled = false;\n    private readonly _id = `mc-option-${_uniqueIdCounter++}`;\n    private _mostRecentViewValue = '';\n\n    constructor(\n        private readonly _element: ElementRef,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_OPTION_PARENT_COMPONENT) private readonly _parent: IMcOptionParentComponent,\n        @Optional() readonly group: McOptgroup) {\n    }\n\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active(): boolean {\n        return this._active;\n    }\n\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue(): string {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n\n    /** Selects the option. */\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Deselects the option. */\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Sets focus onto this option. */\n    focus(): void {\n        const element = this._getHostElement();\n\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles(): void {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles(): void {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        return this.viewValue;\n    }\n\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event: KeyboardEvent): void {\n        // tslint:disable-next-line\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\n            this._selectViaInteraction();\n\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction(): void {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Gets the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n\n    /** Emits the selection change event. */\n    private _emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McOptionSelectionChange(this, isUserInput));\n    }\n}\n\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nexport function _countGroupLabelsBeforeOption(\n    optionIndex: number, options: QueryList<McOption>,\n    optionGroups: QueryList<McOptgroup>\n): number {\n\n    if (optionGroups.length) {\n        const optionsArray = options.toArray();\n        const groups = optionGroups.toArray();\n\n        let groupCounter = 0;\n\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n\n        return groupCounter;\n    }\n\n    return 0;\n}\n\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionIndex Index of the option to be scrolled into the view.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nexport function _getOptionScrollPosition(\n    optionIndex: number,\n    optionHeight: number,\n    currentScrollPosition: number,\n    panelHeight: number\n): number {\n    const optionOffset = optionIndex * optionHeight;\n\n    if (optionOffset < currentScrollPosition) { return optionOffset; }\n\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n\n    return currentScrollPosition;\n}\n\n","import { ConnectionPositionPair } from '@ptsecurity/cdk/overlay';\n\n\nexport const POSITION_MAP: { [key: string]: ConnectionPositionPair } = {\n    top         : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom'\n    },\n    topCenter   : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topLeft     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topRight    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    right       : {\n        originX : 'end',\n        originY : 'center',\n        overlayX: 'start',\n        overlayY: 'center'\n    },\n    rightTop    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'top',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    rightBottom : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    bottom      : {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomCenter: {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomLeft  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    bottomRight : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    left        : {\n        originX : 'start',\n        originY : 'center',\n        overlayX: 'end',\n        overlayY: 'center'\n    },\n    leftTop     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    leftBottom  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    }\n};\n\nexport const DEFAULT_4_POSITIONS = _objectValues([\n    POSITION_MAP.top, POSITION_MAP.right, POSITION_MAP.bottom, POSITION_MAP.left\n]);\n\nfunction arrayMap<T, S>(array: T[], iteratee: (item: T, index: number, arr: T[]) => S): S[] {\n    let index = -1;\n    const length = array == null ? 0 : array.length;\n    const result = Array(length);\n\n    while (++index < length) {\n        result[ index ] = iteratee(array[ index ], index, array);\n    }\n\n    return result;\n}\nfunction baseValues<T>(object: { [key: string]: T } | T[], props: string[]): T[] {\n    return arrayMap(props,  (key) => {\n        return object[ key ];\n    });\n}\nfunction _objectValues<T>(object: { [key: string]: T } | T[]): T[] {\n    return object == null ? [] : baseValues(object, Object.keys(object));\n}\n","export function throwMcDropdownMissingError() {\n    throw Error(`mcDropdownTriggerFor: must pass in an mc-dropdown instance.\n    Example:\n      <mc-dropdown #dropdown=\"mcDropdown\"></mc-dropdown>\n      <button [mcDropdownTriggerFor]=\"dropdown\"></button>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mc-dropdown xPosition=\"before\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mc-dropdown yPosition=\"above\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n","export function getMcFormFieldMissingControlError(): Error {\n  return Error('mc-form-field must contain a McFormFieldControl.');\n}\n","export function getMcInputUnsupportedTypeError(inputType: string): Error {\n    return Error(`Input type \"${inputType}\" isn't supported by mcInput.`);\n}\n","/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nexport function getMcSelectDynamicMultipleError(): Error {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nexport function getMcSelectNonArrayValueError(): Error {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nexport function getMcSelectNonFunctionValueError(): Error {\n    return Error('`compareWith` must be a function.');\n}\n","import { NgModule, Directive, ElementRef, QueryList } from '@angular/core';\n\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(McLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({\n    selector: '[mc-line], [mcLine]',\n    host: { class: 'mc-line' }\n})\nexport class McLine {}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nexport class McLineSetter {\n    constructor(private _lines: QueryList<McLine>, private _element: ElementRef) {\n        this._setLineClass(this._lines.length);\n\n        this._lines.changes.subscribe(() => {\n            this._setLineClass(this._lines.length);\n        });\n    }\n\n    private _setLineClass(count: number): void {\n        this._resetClasses();\n        if (count === 2 || count === 3) {\n            this._setClass(`mc-${count}-line`, true);\n        } else if (count > 3) {\n            this._setClass(`mc-multi-line`, true);\n        }\n    }\n\n    private _resetClasses(): void {\n        this._setClass('mc-2-line', false);\n        this._setClass('mc-3-line', false);\n        this._setClass('mc-multi-line', false);\n    }\n\n    private _setClass(className: string, isAdd: boolean): void {\n        if (isAdd) {\n            this._element.nativeElement.classList.add(className);\n        } else {\n            this._element.nativeElement.classList.remove(className);\n        }\n    }\n}\n\n@NgModule({\n    imports: [],\n    exports: [McLine],\n    declarations: [McLine]\n})\nexport class McLineModule {}\n","import { Injectable } from '@angular/core';\nimport { FormGroupDirective, NgForm, FormControl } from '@angular/forms';\n\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n@Injectable()\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\n\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n@Injectable({ providedIn: 'root' })\nexport class ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\n\nexport type McPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mc-primary .mc-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mc-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n@Component({\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'mc-pseudo-checkbox',\n    styleUrls: ['pseudo-checkbox.css'],\n    templateUrl: 'pseudo-checkbox.partial.html',\n    host: {\n        class: 'mc-pseudo-checkbox',\n        '[class.mc-pseudo-checkbox_indeterminate]': 'state === \"indeterminate\"',\n        '[class.mc-pseudo-checkbox_checked]': 'state === \"checked\"',\n        '[class.mc-disabled]': 'disabled'\n    }\n})\nexport class McPseudoCheckbox {\n    @Input() state: McPseudoCheckboxState = 'unchecked';\n\n    @Input() disabled: boolean = false;\n}\n","import { NgModule } from '@angular/core';\n\nimport { McPseudoCheckbox } from './pseudo-checkbox/pseudo-checkbox';\n\n\n@NgModule({\n    exports: [McPseudoCheckbox],\n    declarations: [McPseudoCheckbox]\n})\nexport class McPseudoCheckboxModule {}\n\n\nexport * from './pseudo-checkbox/pseudo-checkbox';\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class McMeasureScrollbarService {\n\n    get scrollBarWidth(): number {\n        if (this._scrollbarWidth) {\n            return this._scrollbarWidth;\n        }\n        this.initScrollBarWidth();\n\n        return this._scrollbarWidth;\n    }\n\n    private _scrollbarWidth: number;\n    private scrollbarMeasure = {\n        position: 'absolute',\n        top: '-9999px',\n        width: '50px',\n        height: '50px',\n        overflow: 'scroll'\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private document: any\n    ) {\n        this.initScrollBarWidth();\n    }\n\n    initScrollBarWidth() {\n        const scrollDiv = this.document.createElement('div');\n\n        // tslint:disable-next-line\n        for (const scrollProp in this.scrollbarMeasure) {\n            if (this.scrollbarMeasure.hasOwnProperty(scrollProp)) {\n                scrollDiv.style[scrollProp] = this.scrollbarMeasure[scrollProp];\n            }\n        }\n\n        this.document.body.appendChild(scrollDiv);\n\n        const width = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n        this.document.body.removeChild(scrollDiv);\n        this._scrollbarWidth = width;\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\nimport { mixinDisabled, CanDisable, CanDisableCtor } from '../common-behaviors/index';\n\n\n// Boilerplate for applying mixins to McOptgroup.\n/** @docs-private */\nexport class McOptgroupBase {}\n\nexport const _McOptgroupMixinBase: CanDisableCtor & typeof McOptgroupBase = mixinDisabled(McOptgroupBase);\n\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\n\n/**\n * Component that is used to group instances of `mc-option`.\n */\n@Component({\n    selector: 'mc-optgroup',\n    exportAs: 'mcOptgroup',\n    templateUrl: 'optgroup.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    styleUrls: ['optgroup.css'],\n    host: {\n        class: 'mc-optgroup',\n        role: 'group',\n        '[class.mc-optgroup-disabled]': 'disabled',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-labelledby]': '_labelId'\n    }\n})\nexport class McOptgroup extends _McOptgroupMixinBase implements CanDisable {\n    /** Label for the option group. */\n    @Input() label: string;\n\n    /** Unique id for the underlying label. */\n    _labelId: string = `mc-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McPseudoCheckboxModule } from '../selection/index';\n\nimport { McOptgroup } from './optgroup';\nimport { McOption } from './option';\n\n\n@NgModule({\n    imports: [CommonModule, McPseudoCheckboxModule],\n    exports: [McOption, McOptgroup],\n    declarations: [McOption, McOptgroup]\n})\nexport class McOptionModule {}\n\n\nexport * from './option';\nexport * from './optgroup';\n","import { InjectionToken } from '@angular/core';\n\n\n/** InjectionToken that can be used to specify the global label options. */\nexport const MC_LABEL_GLOBAL_OPTIONS =\n    new InjectionToken<LabelOptions>('mc-label-global-options');\n\n/** Type for the available floatLabel values. */\nexport type FloatLabelType = 'always' | 'never' | 'auto';\n\n/** Configurable options for floating labels. */\nexport interface LabelOptions {\n    /**\n     * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n     * Default behavior is assumed to be `auto`.\n     */\n    float?: FloatLabelType;\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata,\n} from '@angular/animations';\n\n\nexport const fadeAnimation: AnimationTriggerMetadata =  trigger('fadeAnimation', [\n    state('void', style({ opacity: 0 })),\n    state('true', style({ opacity: 1 })),\n    state('false', style({ opacity: 0 })),\n    transition('* => true', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n    transition('* => void', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)')),\n]);\n","import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { mixinColor, CanColor, CanColorCtor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\n@Directive({\n    selector: '[mc-icon]',\n    host: { class: 'mc mc-icon' }\n})\nexport class McIconCSSStyler {}\n\n\nexport class McIconBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McIconMixinBase: CanColorCtor & typeof McIconBase = mixinColor(McIconBase, ThemePalette.Empty);\n\n\n@Component({\n    selector: `[mc-icon]`,\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./icon.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color']\n})\nexport class McIcon extends _McIconMixinBase implements CanColor {\n    constructor(elementRef: ElementRef, @Attribute('mc-icon') iconName: string) {\n        super(elementRef);\n\n        elementRef.nativeElement.classList.add(iconName);\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McIcon,\n    McIconCSSStyler\n} from './icon.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McIcon,\n        McIconCSSStyler\n    ],\n    declarations: [\n        McIcon,\n        McIconCSSStyler\n    ]\n})\nexport class McIconModule {}\n"],"names":["preserveWhitespaces","styles","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","host","(body:click)","tslib_1.__metadata","ChangeDetectorRef","McToolTipComponent","MC_TOOLTIP_SCROLL_STRATEGY","InjectionToken","MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","provide","deps","Overlay","useFactory","MC_TOOLTIP_SCROLL_STRATEGY_FACTORY","McTooltipDirective","_overlay","elementRef","_ngZone","_scrollDispatcher","hostView","_scrollStrategy","_dir","this","isTooltipOpen","isDynamicTooltip","parentDisabled","_disabled","_trigger","_placement","mcVisibleChange","EventEmitter","$unsubscribe","Subject","manualListeners","Map","_destroyed","availablePositions","POSITION_MAP","Object","defineProperty","prototype","get","_title","set","title","updateCompValue","mcTitle","value","coerceBooleanProperty","_mouseEnterDelay","_mouseLeaveDelay","_visible","_createOverlay","_this","_overlayRef","strategy","position","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withPositions","DEFAULT_4_POSITIONS","slice","scrollableAncestors","getAncestorScrollContainers","withScrollableContainers","positionChanges","pipe","takeUntil","subscribe","change","tooltip","onPositionChange","scrollableViewProperties","isOverlayClipped","mcVisible","run","hide","create","direction","positionStrategy","panelClass","scrollStrategy","_updatePosition","detachments","_detach","hasAttached","detach","$event","updatedPlacement","mcPlacement","keys","some","key","connectionPair","originX","originY","overlayX","overlayY","setClassMap","handlePositioningUpdate","pos","overlayElement","clientHeight","element","nativeElement","currentContainer","style","top","parseInt","split","ngOnInit","mcTrigger","show","forEach","listener","event","addEventListener","ngOnDestroy","dispose","removeEventListener","clear","next","complete","handleKeydown","e","keyCode","ESCAPE","handleTouchend","getConfig","origin","_getOrigin","overlay","_getOverlayPosition","tslib_1.__assign","main","fallback","originPosition","isLtr","getMcTooltipInvalidPositionError","_a","_invertPosition","x","y","overlayPosition","newX","newY","disabled","overlayRef","_portal","ComponentPortal","attach","instance","afterHidden","property","distinctUntilChanged","data","emit","tslib_1.__decorate","Output","Input","HostBinding","Directive","selector","(keydown)","(touchend)","tslib_1.__param","Inject","Optional","ElementRef","NgZone","ScrollDispatcher","ViewContainerRef","Directionality","McToolTipModule","NgModule","declarations","exports","imports","BrowserAnimationsModule","CommonModule","OverlayModule","providers","entryComponents","VERSION","Version","SELECT_PANEL_PADDING_X","empty","visibleItems","totalItemsWidth","_getTotalItemsWidthInMatcher","totalVisibleItemsWidth","tags","tag","offsetTop","offsetHeight","getBoundingClientRect","width","hiddenItems","selected","length","itemsCounter","trigger","querySelector","matcherList","itemsCounterShowed","matcherListWidth","matcherWidth","_changeDetectorRef","markForCheck","McSelect","triggerClone","cloneNode","remove","_renderer","setStyle","appendChild","querySelectorAll","item","_handleClosedKeydown","isArrowKey","DOWN_ARROW","UP_ARROW","LEFT_ARROW","RIGHT_ARROW","ENTER","SPACE","multiple","altKey","preventDefault","open","_keyManager","onKeydown","_handleOpenKeydown","manager","HOME","END","setFirstItemActive","setLastItemActive","close","activeItem","_multiple","A","ctrlKey","hasDeselectedOptions_1","options","option","select","deselect","previouslyFocusedIndex","activeItemIndex","shiftKey","_selectViaInteraction","_initializeSelection","Promise","resolve","then","_setSelectionByValue","ngControl","_value","Array","isArray","getMcSelectNonArrayValueError","_selectionModel","currentValue","_selectValue","_sortValues","correspondingOption","setActiveItem","find","_compareWith","error","isDevMode","console","warn","_initKeyManager","ActiveDescendantKeyManager","withTypeAhead","withVerticalOrientation","withHorizontalOrientation","_isRtl","tabOut","_destroy","focus","_panelOpen","panel","_scrollActiveOptionIntoView","_resetOptions","changedOrDestroyed","merge","changes","optionSelectionChanges","_onSelect","source","isUserInput","apply","map","_stateChanges","stateChanges","_setOptionIds","wasSelected","isSelected","_propagateChanges","options_1","toArray","sort","a","b","sortComparator","indexOf","fallbackValue","valueToEmit","valueChange","_onChange","selectionChange","McSelectChange","_optionIds","id","join","_highlightCorrectOption","activeOptionIndex","labelCount","_countGroupLabelsBeforeOption","optionGroups","scrollTop","_getOptionScrollPosition","_getItemHeight","_getOptionIndex","reduce","result","current","index","undefined","_calculateOverlayPosition","itemHeight","items","_getItemCount","panelHeight","Math","min","scrollContainerHeight","maxScroll","selectedOptionOffset","scrollBuffer","_scrollTop","_calculateOverlayScroll","_offsetY","_calculateOverlayOffsetY","_checkOverlayWithinViewport","_calculateOverlayOffsetX","offsetX","overlayRect","overlayDir","viewportSize","_viewportRuler","getViewportSize","isRtl","first","group","leftOverflow","left","rightOverflow","right","round","updatePosition","topSpaceAvailable","_triggerRect","bottomSpaceAvailable","height","bottom","panelHeightTop","abs","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_transformOrigin","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","optionHeightAdjustment","ViewChild","ViewChildren","McTag","QueryList","CdkConnectedOverlay","ContentChildren","McOption","descendants","McOptgroup","ContentChild","McSelectTrigger","ErrorStateMatcher","Observable","McSelect_1","Component","exportAs","template","inputs","[attr.id]","[attr.tabindex]","class","[class.mc-disabled]","[class.mc-select-invalid]","[class.mc-select-required]","(focus)","(blur)","(window:resize)","animations","mcSelectAnimations","transformPanel","fadeInContent","McFormFieldControl","useExisting","MC_OPTION_PARENT_COMPONENT","Self","Attribute","MC_SELECT_SCROLL_STRATEGY","ViewportRuler","Renderer2","NgForm","FormGroupDirective","McFormField","NgControl","String","_McSelectMixinBase","McSelectModule","McOptionModule","McIconModule","McTagModule","McFormFieldModule","MC_SELECT_SCROLL_STRATEGY_PROVIDER","McSplitterComponent","ngZone","renderer","areas","_gutterSize","isDragging","areaPositionDivider","listeners","_direction","gutterSize","size","coerceNumberProperty","addArea","area","order","getSize","setOrder","push","initialSize","isVertical","onMouseDown","leftAreaIndex","rightAreaIndex","leftArea","rightArea","startPoint","screenX","screenY","disableFlex","setSize","runOutsideAngular","listen","onMouseUp","onMouseMove","removeArea","indexToRemove","splice","endPoint","offset","newLeftAreaSize","newRightAreaSize","minLeftAreaSize","getMinSize","minRightAreaSize","rightAreaOffset","unsubscribe","pop","McGutterDirective","_order","_size","getCursor","getState","coerceCssPixelValue","setAttr","state","Error","attribute","setAttribute","McSplitterAreaDirective","splitter","removeStyle","sz","getSizeProperty","getOffsetSizeProperty","getComputedStyle","parseFloat","getMinSizeProperty","McSplitterModule","nextUniqueId","McToggleBase","_elementRef","_McToggleMixinBase","mixinTabIndex","mixinColor","mixinDisabled","ThemePalette","Primary","McToggleChange","McToggleComponent","_super","_focusMonitor","tabIndex","call","labelPosition","ariaLabel","ariaLabelledby","_uniqueId","name","_checked","_onTouchedCallback","_onChangeCallback","_","monitor","tslib_1.__extends","McToggleComponent_1","stopMonitoring","focusVia","_inputElement","_getAriaChecked","checked","_onInteractionEvent","stopPropagation","_onLabelTextChange","_onInputClick","_updateModelValue","_emitChangeEvent","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","NG_VALUE_ACCESSOR","forwardRef","multi","[id]","[class.mc-toggle_off]","transition","animate","FocusMonitor","McToggleModule","A11yModule","McCommonModule","cdr","_prefix","_positions","_classMap","visibleSource","BehaviorSubject","$visible","asObservable","mcMouseEnterDelay","mcMouseLeaveDelay","_onHide","_closeOnInteraction","isTitleString","TemplateRef","visible","unshift","hideTId","clearTimeout","isContentEmpty","showTId","setTimeout","_markForCheck","_handleBodyInteraction","fadeAnimation","viewDef","view","def","nodes","node","nodeMatchedQueries","matchedQueryIds","nodeData","nodeIndex","arrayOfInstances","reset","notifyOnChanges","updateScrollSize","McTreeSelection","_getHeight","getClientRects","_emitNavigationEvent","navigationChange","McTreeNavigationChange","_isValidIndex","_canDeselectLast","noUnselect","selectedOptions","CdkTreeNodeOutlet","McTreeNodeOption","McTreeSelection_1","[tabIndex]","role","CdkTree","IterableDiffers","_McTreeSelectionBase","MC_TREE_DIRECTIVES","McTreeNodeDef","McTreeNodePadding","McTreeModule","CdkTreeModule","McTreeFlattener","transformFunction","getLevel","isExpandable","getChildren","_flattenNode","level","resultNodes","parentMap","flatNode","take","children","child","childParentMap","flattenNodes","structuredData","expandFlattenedNodes","treeControl","results","currentExpand","expand","i","isExpanded","McTreeFlatDataSource","treeFlattener","initialData","_flattenedData","_expandedData","_data","dataNodes","connect","collectionViewer","viewChange","expansionModel","onChange","disconnect","DataSource","McTreeNestedDataSource","arguments","McTagBase","_McTagMixinBase","ngAfterContentInit","_addClassModificatorForIcons","icons","contentChildren","iconElement","previousElementSibling","nextElementSibling","nextSibling","classList","add","previousSibling","firstIconElement","secondIconElement","McIcon","PlatformModule","MC_TEXTAREA_VALUE_ACCESSOR","McTextareaBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","McTextareaMixinBase","mixinErrorState","McTextarea","inputValueAccessor","canGrow","focused","controlType","uid","_required","lineHeight","freeRowsHeight","minHeight","valueAccessor","previousNativeValue","growObserver","fromEvent","growSubscription","grow","bind","McTextarea_1","_id","paddingTop","paddingBottom","ngOnChanges","ngDoCheck","updateErrorState","dirtyCheckNativeValue","textarea","outerHeight","window","diff","max","scrollHeight","focusChanged","isFocused","isBadInput","onContainerClick","newValue","validity","badInput","getGrowHeight","toString","[class.mc-textarea-resizable]","[attr.placeholder]","[disabled]","[required]","McTextareaModule","FormsModule","TimeParts","TimeFormats","TIMEFORMAT_PLACEHOLDERS","HHmmss","HHmm","DEFAULT_TIME_FORMAT","HOURS_MINUTES_SECONDS_REGEXP","RegExp","HOURS_MINUTES_REGEXP","HOURS_ONLY_REGEXP","uniqueComponentIdSuffix","validatorOnChange","noop","validator","MC_INPUT_VALUE_ACCESSOR","McTimepickerBase","McTimepickerMixinBase","ɵ1","validate","c","registerOnValidatorChange","McTimepicker","_minTime","_maxTime","placeholder","Validators","compose","parseValidator","minTimeValidator","maxTimeValidator","McTimepicker_1","applyInputChanges","_timeFormat","formatValue","timeFormatKey","minValue","minDateTime","getDateFromTimeString","maxValue","maxDateTime","onTouched","onBlur","onPaste","clipboardUserInput","clipboardData","getData","onInput","initialCursorStart","selectionStart","initialCursorEnd","selectionEnd","isAutocompleteTriggered","getParsedTimeParts","hoursOnly","hoursAndMinutes","hoursAndMinutesAndSeconds","doTimestringReformat","errors","createSelectionOfTimeComponentInInput","setProperty","getTimeStringFromDate","timeFormat","onKeyDown","getKeyCode","upDownTimeByArrowKeys","switchSelectionBetweenTimeparts","applyParams","changedTime","timeToApply","currentDateTimeInput","control","updateValueAndValidity","cursorPos","modifiedTimePart","getTimeEditMetrics","incrementTime","decrementTime","getCursorPositionOfPrevTimePartStart","getCursorPositionOfNextTimePartStart","code","newEditParams","cursorStartPosition","cursorEndPosition","dateVal","whatToIncrement","seconds","getTimeDigitsFromDate","hours","minutes","getDateFromTimeDigits","whatToDecrement","timeString","timeDevider","nextDividerPos","cursorPosition","minutesIndex","hoursIndex","secondsIndex","tempVal","getNumberWithLeadingZero","getHours","getMinutes","getSeconds","match","trim","Number","resultDate","Date","isNaN","getTime","digit","mcTimepickerParse","text","isTimeLowerThenMin","mcTimepickerLowerThenMintime","isTimeGreaterThenMax","mcTimepickerHigherThenMaxtime","timeToCompare","[attr.time-format]","[attr.min-time]","[attr.max-time]","[attr.value]","(input)","(paste)","NG_VALIDATORS","useValue","McTimepickerModule","transform","minWidth","opacity","query","animateChild","MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","McSelectBase","_parentFormField","_scrollStrategyFactory","_triggerFontSize","_panelDoneAnimating","_panelDoneAnimatingStream","defer","onSelectionChange","onStable","switchMap","openedChange","_openedStream","filter","o","_closedStream","_uid","_focused","_onTouched","o1","o2","_placeholder","getMcSelectDynamicMultipleError","getMcSelectNonFunctionValueError","SelectionModel","panelOpen","added","removed","startWith","ngAfterViewInit","_calculateHiddenItems","toggle","fontSize","viewValue","reverse","isEmpty","_handleKeydown","_onFadeInDone","_onFocus","_onBlur","_onAttached","positionChange","detectChanges","_getPanelTheme","color","selectedIndex","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","onRemoveMatcherItem","MC_NAVBAR_BRAND","McNavbarBrand","McNavbarTitle","MC_NAVBAR_TITLE","McNavbarItemBase","_McNavbarMixinBase","McNavbarItem","_platform","_cdRef","dropdownItems","isCollapsed","_subscription","Subscription","encodeURI","dropdownContent","denyClickIfDisabled","_focusMonitor$","hasDropdownContent","listenClickOutside","startListenFocusDropdownItems","stopListenFocusDropdownItems","isActiveDropdownLink","link","isBrowser","location","href","handleClickByItem","toggleDropdown","isNavbarItem","target","contains","MC_NAVBAR_ITEM","handleClickByDropdownItem","forceCloseDropdown","_dropdownElements","el","events","eventListeners","hasAttribute","stopImmediatePropagation","read","[attr.disabled]","Platform","McNavbarContainer","MC_NAVBAR_CONTAINER","CollapsibleItem","_collapsed","processCollapsed","collapsed","updateCollapsedClass","CachedItemWidth","itemsForCollapse","_collapsedItemsWidth","calculateAndCacheCollapsedItemsWidth","updateTitle","acc","getTitle","computedTitle","getAttribute","decodeURI","innerText","removeAttribute","McNavbar","forceRecalculateItemsWidth","resizeDebounceInterval","firstLevelElement","secondLevelElements","resizeObserver","debounceTime","_resizeSubscription","updateCollapsed","_itemsWidths","calculateAndCacheItemsWidth","_totalItemsWidths","calculateAndCacheTotalItemsWidth","collapseDelta","maxAllowedWidth","itemsWidths","canCollapse","collapsedItemsWidth","getOuterElementWidth","getPropertyValue","allItemsSelector","allItems","from","getItemsForCollapse","McNavbarModule","McNavbarLogo","idIterator","McProgressBarBase","_McProgressBarMixinBase","McProgressBar","mode","McProgressBarModule","McProgressSpinnerBase","_McProgressSpinnerMixinBase","McProgressSpinner","percentage","McProgressSpinnerModule","McRadioChange","McRadioGroupBase","_McRadioGroupMixinBase","MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","McRadioGroup","_changeDetector","_name","_selected","_isInitialized","_labelPosition","controlValueAccessorChangeFn","updateRadioButtonNames","v","markRadiosForCheck","updateSelectedRadioFromValue","checkSelectedRadioButton","toBoolean","touch","emitChangeEvent","_radios","radio","isAlreadySelected","McRadioButton","McRadioButtonBase","_McRadioButtonMixinBase","radioGroup","_radioDispatcher","removeUniqueSelectionListener","newCheckedState","notify","newDisabledState","required","onInputClick","onInputChange","groupValueChanged","[class.mc-checked]","UniqueSelectionDispatcher","McRadioModule","McTreeNodeDef_1","CdkTreeNodeDef","_baseLeftPadding","_iconWidth","_indent","McTreeNodePadding_1","_withIcon","_paddingIndent","nodeLevel","_treeNode","_tree","_level","leftPadding","_setPadding","CdkTreeNodePadding","treeSelection","_hasFocus","McTreeNodeOption_1","setSelected","setFocusedOption","_handleFocus","_handleBlur","_handleClick","tabindex","[class.mc-selected]","[class.mc-focused]","[attr.aria-expanded]","[attr.aria-level]","(click)","CdkTreeNode","McTreeSelectionChange","_differs","autoSelect","rawValue","log","_onKeyDown","withShift","withCtrl","collapse","toggleFocusedOption","PAGE_UP","setPreviousPageItemActive","PAGE_DOWN","setNextPageItemActive","FocusKeyManager","withScrollSize","floor","updateActiveItem","previousIndex_1","previousActiveItemIndex","activeIndex_1","focusedIndex","focusedOption","renderNodeChanges","dataDiffer","viewContainer","parentData","_dataDiffer","_nodeOutlet","_embeddedViews","_McListSelectionMixinBase","McListBase","McList","McListSubheaderCssStyler","McListItemBase","McListItem","_element","_lineSetter","McLineSetter","_lines","_getHostElement","McLine","McListModule","McLineModule","McListSelection","McListOption","McLinkBase","_McLinkBase","McLink","McLinkModule","McModalControlService","parentService","rootOpenModals","rootAfterAllClose","rootRegisteredMetaMap","afterAllClose","openModals","registeredMetaMap","registerModal","modalRef","hasRegistered","afterOpenSubscription","afterOpen","afterCloseSubscription","afterClose","removeOpenModal","has","closeAll","Injectable","SkipSelf","McModalRef","ModalUtil","document","lastPosition","listenDocumentClick","getLastClickPosition","clientX","clientY","ModalUtil$1","McModalComponent","cfr","mcMeasureScrollbarService","modalControl","changeDetector","mcModalType","_mcVisible","mcZIndex","mcWidth","mcCloseByESC","_mcClosable","_mcMask","_mcMaskClosable","mcAfterOpen","mcAfterClose","mcOkType","_mcOkLoading","mcOnOk","_mcCancelLoading","mcOnCancel","transformOrigin","mcGetContainer","mcOkText","mcCancelText","animationState","isComponent","mcContent","createDynamicComponent","isModalButtons","mcFooter","formatModalButtons","container","HTMLElement","OverlayRef","handleVisibleStateChange","firstChange","contentComponentRef","bodyContainer","insert","autoFocusButtonOk","changeVisibleFromInside","destroy","triggerOk","onClickOkCancel","triggerCancel","getInstance","getContentComponentRef","getContentComponent","getElement","onClickMask","mcMask","mcMaskClosable","isModalType","type","onClickCloseBtn","ok","cancel","loadingKey","caseClose_1","doClose","isPromise","handleThen","catch","isNonEmptyString","isTemplateRef","Type","animation","closeResult","changeBodyOverflow","animateTo","getButtonCallableProp","prop","args","onButtonClick","button","loading","changeAnimationState","maskAnimationClassMap","modalAnimationClassMap","_b","changeDetectorRef","isVisible","updateTransformOrigin","buttons","autoLoading","component","factory","resolveComponentFactory","childInjector","Injector","parent","parentInjector","mcComponentParams","assign","modalElement","modalContainer","offsetLeft","plusNum","body","scrollBarWidth","DOCUMENT","ComponentFactoryResolver","McMeasureScrollbarService","CssUnitPipe","defaultUnit","formatted","Pipe","ModalBuilderForService","createModal","changeProps","destroyModal","keydownEvents","McModalService","confirm","confirmType","mcClassName","success","simpleConfirm","delete","McModalModule","McButtonModule","McFormFieldNumberControl","McStepper","McHint","McSuffix","McPrefix","McCleaner","[class.mc-form-field_invalid]","[class.mc-form-field_has-prefix]","[class.mc-form-field_has-suffix]","[class.mc-form-field_has-cleaner]","[class.mc-form-field_has-stepper]","[class.ng-untouched]","[class.ng-touched]","[class.ng-pristine]","[class.ng-dirty]","[class.ng-valid]","[class.ng-invalid]","[class.ng-pending]","(mouseenter)","(mouseleave)","_McFormFieldMixinBase","McFormFieldWithoutBorders","stepUp","step","res","stepDown","MC_INPUT_INVALID_TYPES","BIG_STEP","SMALL_STEP","McInputBase","_McInputMixinBase","McNumberInput","_model","bigStep","isDigit","Infinity","_host","self","getPrototypeOf","normalizeSplitter","McNumberInput_1","_focusChanged","minuses","NUMPAD_MINUS","DASH","FF_MINUS","serviceKeys","DELETE","BACKSPACE","TAB","arrows","allowedKeys","concat","isIEPeriod","isNotIEPeriod","metaKey","C","V","X","F1","F12","EDGE","TRIDENT","ZERO","NINE","NUMPAD_ZERO","NUMPAD_NINE","valueAsNumber","update","replace","isFloat","isInt","test","NgModel","McInput","_type","_neverEmptyInputTypes","t","getSupportedInputTypes","_inputValueAccessor","_previousNativeValue","McInput_1","_validateType","_dirtyCheckNativeValue","_onInput","_isNeverEmpty","_isBadInput","getMcInputUnsupportedTypeError","McInputMono","MIN_VALIDATOR","MinValidator","_createValidator","_validator","[attr.min]","MAX_VALIDATOR","MaxValidator","[attr.max]","McInputModule","McContentComponent","[class.mc-layout-content]","McFooterComponent","[class.mc-layout-footer]","McHeaderComponent","[class.mc-layout-header]","McLayoutComponent","hasSidebar","[class.mc-layout]","[class.mc-layout-has-sidebar]","McSidebarComponent","mcLayoutComponent","_mcWidth","mcCollapsedWidth","mcCollapsedChange","collapsible","mcCollapsed","[class.mc-layout-sidebar]","[class.mc-layout-sidebar-collapsed]","[style.flex]","[style.max-width.px]","[style.min-width.px]","[style.width.px]","Host","McLayoutModule","listSelection","checkboxPosition","_reportValueChange","wasSelected_1","_removeOptionFromList","getLabel","_text","textContent","MC_SELECTION_LIST_VALUE_ACCESSOR","McListSelectionChange","McListSelectionBase","horizontal","_modelChanges","EMPTY","_tempValues","_setOptionsFromValues","_i","_c","selectAll","deselectAll","values","getSelectedOptionValues","listOption","optionIndex","setPreviousItemActive","setNextItemActive","_getOptionByValue","Boolean","McIconButton","McButton","McAnchor","McButtonCSSStyler","McIconButtonCSSStyler","McCard","readonly","selectedChange","_tabIndex","hostElement","onClick","[class.mc-card_readonly]","[class.mc-card_selected]","McCardModule","MC_CHECKBOX_CLICK_ACTION","MC_CHECKBOX_CONTROL_VALUE_ACCESSOR","McCheckbox","TransitionCheckState","McCheckboxChange","McCheckboxBase","_McCheckboxMixinBase","_clickAction","indeterminateChange","_currentAnimationClass","_currentCheckState","Init","_controlValueAccessorChangeFn","_indeterminate","focusOrigin","_onInputFocusChange","changed","_transitionCheckState","Indeterminate","Checked","Unchecked","indeterminate","newState","oldState","[class.mc-indeterminate]","[class.mc-checkbox-label-before]","MC_CHECKBOX_REQUIRED_VALIDATOR","McCheckboxRequiredValidator","[attr.required]","CheckboxRequiredValidator","McCheckboxModule","McDivider","_vertical","_inset","[attr.aria-orientation]","[class.mc-divider-vertical]","[class.mc-divider-inset]","McDividerModule","McDropdownContent","_template","_componentFactoryResolver","_appRef","_injector","_viewContainerRef","_document","_attached","context","TemplatePortal","_outlet","DomPortalOutlet","createElement","parentNode","insertBefore","outletElement","isAttached","ApplicationRef","MC_DROPDOWN_PANEL","McDropdownItemBase","_McDropdownItemMixinBase","McDropdownItem","_parentDropdownPanel","addItem","removeItem","_getTabIndex","_checkDisabled","textNodeType","TEXT_NODE","output","childNodes","length_1","nodeType","mcDropdownAnimations","transformDropdown","fadeInItems","MC_DROPDOWN_DEFAULT_OPTIONS","providedIn","MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY","McDropdown","_defaultOptions","_classList","_panelAnimationState","_animationDone","backdropClass","closed","_xPosition","xPosition","_yPosition","yPosition","_items","_itemChanges","_tabSubscription","_overlapTrigger","overlapTrigger","_hasBackdrop","hasBackdrop","McDropdown_1","throwMcDropdownInvalidPositionX","setPositionClasses","throwMcDropdownInvalidPositionY","classes","obj","className","withWrap","setFocusOrigin","focusFirstItem","lazyContent","resetActiveItem","posX","posY","_startAnimation","_resetAnimation","_onAnimationDone","_isAnimating","toState","MC_DROPDOWN_SCROLL_STRATEGY","MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER","MC_DROPDOWN_SCROLL_STRATEGY_FACTORY","McDropdownTrigger","_openedBy","dropdownOpened","dropdownClosed","_opened","_closeSubscription","_hoverSubscription","dropdown","_check","_cleanUpSubscriptions","_setPosition","_closingActions","_init","opened","_reset","dir","_setIsOpened","isOpen","throwMcDropdownMissingError","templateRef","config","_getOverlayConfig","_subscribeToPositions","OverlayConfig","withLockedPosition","originFallbackX","overlayFallbackY","originFallbackY","_d","overlayFallbackX","offsetY","backdrop","backdropClick","(touchstart)","McDropdownModule","onStepUp","onStepDown","McFormFieldBase","_labelId","hovered","_validateControlChild","_control","_numberControl","hasStepper","_stepper","valueChanges","ngAfterContentChecked","clearValue","hasCleaner","onHoverChanged","isHovered","_shouldForward","getMcFormFieldMissingControlError","_hint","_suffix","_cleaner","__extends","d","__","constructor","extendStatics","__decorate","decorators","desc","r","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","isBoolean","val","MC_SANITY_CHECKS_FACTORY","base","class_1","defaultColor","Default","_color","colorPalette","defaultTabIndex","errorState","matcher","errorStateMatcher","isErrorState","optionsArray","groups","groupCounter","optionHeight","currentScrollPosition","optionOffset","arrayMap","array","iteratee","baseValues","object","props","scrollStrategies","reposition","inputType","sanitizeNumber","isFinite","getPrecision","arr","pow","value1","value2","precision","scrollThrottle","setPrototypeOf","__proto__","p","hasOwnProperty","__assign","s","n","MC_SANITY_CHECKS","_sanityChecksEnabled","_hasDoneGlobalChecks","_window","_areChecksEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","_isTestEnv","doctype","testElement","computedStyle","display","removeChild","BidiModule","_setLineClass","count","_resetClasses","_setClass","isAdd","ShowOnDirtyErrorStateMatcher","form","invalid","dirty","submitted","touched","McPseudoCheckbox","[class.mc-pseudo-checkbox_indeterminate]","[class.mc-pseudo-checkbox_checked]","McPseudoCheckboxModule","scrollbarMeasure","overflow","initScrollBarWidth","_scrollbarWidth","scrollDiv","scrollProp","offsetWidth","clientWidth","McOptgroupBase","_McOptgroupMixinBase","_uniqueOptgroupIdCounter","[class.mc-optgroup-disabled]","[attr.aria-disabled]","[attr.aria-labelledby]","_uniqueIdCounter","McOptionSelectionChange","_parent","_active","_mostRecentViewValue","disableRipple","_emitSelectionChangeEvent","setActiveStyles","setInactiveStyles","ngAfterViewChecked","[class.mc-option-multiple]","[class.mc-active]","MC_LABEL_GLOBAL_OPTIONS","topCenter","topLeft","topRight","rightTop","rightBottom","bottomCenter","bottomLeft","bottomRight","leftTop","leftBottom","McIconCSSStyler","McIconBase","_McIconMixinBase","Empty","iconName","queries","McButtonBase","_McButtonMixinBase","focusMonitor","_haltDisabledEvents"],"mappings":"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"}