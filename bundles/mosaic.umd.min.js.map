{"version":3,"file":"mosaic.umd.min.js","sources":["../../src/lib/select/select.component.ts","../../src/lib/timepicker/timepicker.constants.ts","../../src/lib/sidepanel/sidepanel-directives.ts","../../src/lib/sidepanel/sidepanel.module.ts","../../src/lib/splitter/splitter.component.ts","../../src/lib/splitter/splitter.module.ts","../../src/lib/toggle/toggle.component.ts","../../src/lib/toggle/toggle.module.ts","../../src/lib/tooltip/tooltip.component.ts","../../src/lib/tooltip/tooltip.module.ts","../../src/lib/version.ts","../../src/lib/core/select/events.ts","../../src/lib/core/select/constants.ts","../../src/lib/tree-select/tree-select.component.ts","../../src/lib/tree-select/tree-select.module.ts","../../src/lib/textarea/textarea.component.ts","../../src/lib/textarea/textarea.module.ts","../../src/lib/timepicker/timepicker.ts","../../src/lib/timepicker/timepicker.module.ts","../../src/lib/sidepanel/sidepanel-config.ts","../../src/lib/sidepanel/sidepanel-animations.ts","../../src/lib/sidepanel/sidepanel-container.component.ts","../../src/lib/sidepanel/sidepanel-ref.ts","../../src/lib/sidepanel/sidepanel.service.ts","../../src/lib/select/select.module.ts","../../src/lib/tabs/tab-header.ts","../../src/lib/tabs/tab-group.ts","../../src/lib/tabs/tab-nav-bar/tab-nav-bar.ts","../../src/lib/tabs/tabs.module.ts","../../src/lib/tag/tag.component.ts","../../src/lib/tag/tag.module.ts","../../src/lib/progress-spinner/progress-spinner.module.ts","../../src/lib/radio/radio.component.ts","../../src/lib/radio/radio.module.ts","../../src/lib/tree/node.ts","../../src/lib/tree/padding.ts","../../src/lib/tree/toggle.ts","../../src/lib/tree/tree-option.ts","../../src/lib/tree/tree-selection.ts","../../src/lib/tree/tree.module.ts","../../src/lib/tree/data-source/flat-data-source.ts","../../src/lib/tree/data-source/nested-data-source.ts","../../src/lib/tabs/tab-content.ts","../../src/lib/tabs/tab-label.ts","../../src/lib/tabs/tab.ts","../../src/lib/tabs/tabs-animations.ts","../../src/lib/tabs/tab-body.ts","../../src/lib/tabs/tab-label-wrapper.ts","../../src/lib/modal/modal.component.ts","../../src/lib/modal/css-unit.pipe.ts","../../src/lib/modal/modal.service.ts","../../src/lib/modal/modal.module.ts","../../src/lib/navbar/navbar.component.ts","../../src/lib/navbar/navbar.module.ts","../../src/lib/progress-bar/progress-bar.component.ts","../../src/lib/progress-bar/progress-bar.module.ts","../../src/lib/progress-spinner/progress-spinner.component.ts","../../src/lib/dropdown/dropdown-trigger.ts","../../src/lib/dropdown/dropdown.module.ts","../../src/lib/layout/content.component.ts","../../src/lib/layout/footer.component.ts","../../src/lib/layout/header.component.ts","../../src/lib/layout/layout.component.ts","../../src/lib/layout/sidebar.component.ts","../../src/lib/layout/layout.module.ts","../../src/lib/list/list-selection.component.ts","../../src/lib/list/list.component.ts","../../src/lib/list/list.module.ts","../../src/lib/link/link.component.ts","../../src/lib/link/link.module.ts","../../src/lib/modal/modal-control.service.ts","../../src/lib/modal/modal-ref.class.ts","../../src/lib/modal/modal-util.ts","../../src/lib/datepicker/calendar.ts","../../src/lib/datepicker/datepicker-animations.ts","../../src/lib/datepicker/datepicker.ts","../../src/lib/datepicker/datepicker-input.ts","../../src/lib/datepicker/datepicker-toggle.ts","../../src/lib/datepicker/datepicker-module.ts","../../src/lib/divider/divider.component.ts","../../src/lib/divider/divider.module.ts","../../src/lib/dropdown/dropdown-content.ts","../../src/lib/dropdown/dropdown-panel.ts","../../src/lib/dropdown/dropdown-item.ts","../../src/lib/dropdown/dropdown-animations.ts","../../src/lib/dropdown/dropdown.component.ts","../../src/lib/input/input-number-validators.ts","../../src/lib/input/input.module.ts","../../src/lib/datepicker/datepicker-intl.ts","../../src/lib/datepicker/calendar-body.ts","../../src/lib/datepicker/month-view.ts","../../src/lib/datepicker/multi-year-view.ts","../../src/lib/datepicker/year-view.ts","../../src/lib/button/button.component.ts","../../src/lib/button/button.module.ts","../../src/lib/card/card.component.ts","../../src/lib/card/card.module.ts","../../src/lib/checkbox/checkbox-config.ts","../../src/lib/checkbox/checkbox.ts","../../src/lib/checkbox/checkbox-required-validator.ts","../../src/lib/checkbox/checkbox-module.ts","../../src/lib/form-field/cleaner.ts","../../src/lib/form-field/form-field-control.ts","../../src/lib/form-field/form-field-number-control.ts","../../src/lib/form-field/hint.ts","../../src/lib/form-field/prefix.ts","../../src/lib/form-field/stepper.ts","../../src/lib/form-field/suffix.ts","../../src/lib/form-field/form-field.ts","../../src/lib/form-field/form-field.module.ts","../../src/lib/input/input-value-accessor.ts","../../src/lib/input/stepperUtils.ts","../../src/lib/input/input.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/utils/utils.ts","../../src/lib/core/common-behaviors/common-module.ts","../../src/lib/core/common-behaviors/disabled.ts","../../src/lib/core/common-behaviors/color.ts","../../src/lib/core/common-behaviors/tabindex.ts","../../src/lib/core/common-behaviors/error-state.ts","../../src/lib/core/option/option.ts","../../src/lib/core/overlay/overlay-position-map.ts","../../src/lib/core/select/errors.ts","../../src/lib/form-field/form-field-errors.ts","../../src/lib/input/input-errors.ts","../../src/lib/datepicker/datepicker-errors.ts","../../src/lib/dropdown/dropdown-errors.ts","../../src/lib/core/line/line.ts","../../src/lib/core/error/error-options.ts","../../src/lib/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../src/lib/core/selection/index.ts","../../src/lib/core/services/measure-scrollbar.service.ts","../../src/lib/core/option/optgroup.ts","../../src/lib/core/option/index.ts","../../src/lib/core/label/label-options.ts","../../src/lib/core/animation/fade-animations.ts","../../src/lib/core/animation/animation.ts","../../src/lib/core/select/animations.ts","../../src/lib/icon/icon.component.ts","../../src/lib/icon/icon.module.ts"],"sourcesContent":["/* tslint:disable:no-empty */\n\nimport {\n    AfterContentInit, AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren,\n    Directive,\n    DoCheck,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Input,\n    isDevMode,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    QueryList, Renderer2,\n    Self,\n    SimpleChanges,\n    ViewChild, ViewChildren,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { ActiveDescendantKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    RIGHT_ARROW,\n    SPACE,\n    UP_ARROW,\n    A\n} from '@ptsecurity/cdk/keycodes';\nimport {\n    CdkConnectedOverlay,\n    ViewportRuler\n} from '@ptsecurity/cdk/overlay';\nimport {\n    countGroupLabelsBeforeOption,\n    getOptionScrollPosition,\n    CanDisable,\n    CanDisableCtor,\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    HasTabIndex,\n    HasTabIndexCtor,\n    MC_OPTION_PARENT_COMPONENT,\n    McOptgroup,\n    McOption,\n    McOptionSelectionChange,\n    mixinDisabled,\n    mixinErrorState,\n    mixinTabIndex,\n    mcSelectAnimations,\n\n    SELECT_PANEL_INDENT_PADDING_X,\n    SELECT_PANEL_MAX_HEIGHT,\n    SELECT_PANEL_PADDING_X,\n    SELECT_PANEL_VIEWPORT_PADDING,\n\n    getMcSelectDynamicMultipleError,\n    getMcSelectNonFunctionValueError,\n    getMcSelectNonArrayValueError,\n    MC_SELECT_SCROLL_STRATEGY\n} from '@ptsecurity/mosaic/core';\nimport { McFormField, McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { McTag } from '@ptsecurity/mosaic/tag';\nimport { defer, merge, Observable, Subject } from 'rxjs';\nimport {\n    filter,\n    map,\n    startWith,\n    switchMap,\n    take,\n    takeUntil,\n    distinctUntilChanged\n} from 'rxjs/operators';\n\n\nlet nextUniqueId = 0;\n\n/** The height of the select items in `em` units. */\nexport const SELECT_ITEM_HEIGHT_EM = 2;\n\n/** Change event object that is emitted when the select value has changed. */\nexport class McSelectChange {\n    constructor(public source: McSelect, public value: any) {}\n}\n\nexport class McSelectBase {\n    constructor(\n        public elementRef: ElementRef,\n        public defaultErrorStateMatcher: ErrorStateMatcher,\n        public parentForm: NgForm,\n        public parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl\n    ) {}\n}\n\nconst McSelectMixinBase: CanDisableCtor & HasTabIndexCtor & CanUpdateErrorStateCtor &\n    typeof McSelectBase = mixinTabIndex(mixinDisabled(mixinErrorState(McSelectBase)));\n\n\n@Directive({ selector: 'mc-select-trigger' })\nexport class McSelectTrigger {}\n\n\n@Component({\n    selector: 'mc-select',\n    exportAs: 'mcSelect',\n    templateUrl: 'select.html',\n    styleUrls: ['./select.css'],\n    inputs: ['disabled', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'tabIndex',\n        class: 'mc-select',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-select-invalid]': 'errorState',\n        '[class.mc-select-required]': 'required',\n        '(keydown)': 'handleKeydown($event)',\n        '(focus)': 'onFocus()',\n        '(blur)': 'onBlur()',\n        '(window:resize)': 'calculateHiddenItems()'\n    },\n    animations: [\n        mcSelectAnimations.transformPanel,\n        mcSelectAnimations.fadeInContent\n    ],\n    providers: [\n        { provide: McFormFieldControl, useExisting: McSelect },\n        { provide: MC_OPTION_PARENT_COMPONENT, useExisting: McSelect }\n    ]\n})\nexport class McSelect extends McSelectMixinBase implements\n    AfterContentInit, AfterViewInit, OnChanges, OnDestroy, OnInit, DoCheck, ControlValueAccessor, CanDisable,\n    HasTabIndex, McFormFieldControl<any>, CanUpdateErrorState {\n\n    /** A name for this control that can be used by `mc-form-field`. */\n    controlType = 'mc-select';\n\n    hiddenItems: number = 0;\n    oneMoreText: string = '...ещё';\n\n    /** The last measured value for the trigger's client bounding rect. */\n    triggerRect: ClientRect;\n\n    /** The cached font-size of the trigger element. */\n    triggerFontSize = 0;\n\n    /** Deals with the selection logic. */\n    selectionModel: SelectionModel<McOption>;\n\n    /** Manages keyboard events for options in the panel. */\n    keyManager: ActiveDescendantKeyManager<McOption>;\n\n    /** The IDs of child options to be passed to the aria-owns attribute. */\n    optionIds: string = '';\n\n    /** The value of the select panel's transform-origin property. */\n    transformOrigin: string = 'top';\n\n    /** Whether the panel's animation is done. */\n    panelDoneAnimating: boolean = false;\n\n    /** Emits when the panel element is finished transforming in. */\n    panelDoneAnimatingStream = new Subject<string>();\n\n    /** Strategy that will be used to handle scrolling while the select panel is open. */\n    scrollStrategy = this._scrollStrategyFactory();\n\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     */\n    offsetY = 0;\n\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     */\n    positions = [\n        {\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top'\n        },\n        {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'bottom'\n        }\n    ];\n\n    @ViewChild('trigger') trigger: ElementRef;\n\n    @ViewChild('panel') panel: ElementRef;\n\n    @ViewChild(CdkConnectedOverlay) overlayDir: CdkConnectedOverlay;\n\n    @ViewChildren(McTag) tags: QueryList<McTag>;\n\n    /** User-supplied override of the trigger element. */\n    @ContentChild(McSelectTrigger) customTrigger: McSelectTrigger;\n\n    /** All of the defined select options. */\n    @ContentChildren(McOption, { descendants: true }) options: QueryList<McOption>;\n\n    /** All of the defined groups of options. */\n    @ContentChildren(McOptgroup) optionGroups: QueryList<McOptgroup>;\n\n    /** Classes to be passed to the select panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[] | Set<string> | { [key: string]: any };\n\n    /** Object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     */\n    @Input() sortComparator: (a: McOption, b: McOption, options: McOption[]) => number;\n\n    /** Combined stream of all of the child options' change events. */\n    readonly optionSelectionChanges: Observable<McOptionSelectionChange> = defer(() => {\n        if (this.options) {\n            return merge(...this.options.map((option) => option.onSelectionChange));\n        }\n\n        return this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n    }) as Observable<McOptionSelectionChange>;\n\n    /** Event emitted when the select panel has been toggled. */\n    @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the select has been opened. */\n    @Output('opened') readonly openedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => o), map(() => {}));\n\n    /** Event emitted when the select has been closed. */\n    @Output('closed') readonly closedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => !o), map(() => {}));\n\n    /** Event emitted when the selected value has been changed by the user. */\n    @Output() readonly selectionChange: EventEmitter<McSelectChange> = new EventEmitter<McSelectChange>();\n\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n    @Input()\n    get placeholder(): string {\n        return this._placeholder;\n    }\n\n    set placeholder(value: string) {\n        this._placeholder = value;\n\n        this.stateChanges.next();\n    }\n\n    private _placeholder: string;\n\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n\n        this.stateChanges.next();\n    }\n\n    private _required: boolean = false;\n\n    @Input()\n    get multiple(): boolean {\n        return this._multiple;\n    }\n\n    set multiple(value: boolean) {\n        if (this.selectionModel) {\n            throw getMcSelectDynamicMultipleError();\n        }\n\n        this._multiple = coerceBooleanProperty(value);\n    }\n\n    private _multiple: boolean = false;\n\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    @Input()\n    get compareWith() {\n        return this._compareWith;\n    }\n\n    set compareWith(fn: (o1: any, o2: any) => boolean) {\n        /* tslint:disable-next-line:strict-type-predicates */\n        if (typeof fn !== 'function') {\n            throw getMcSelectNonFunctionValueError();\n        }\n\n        this._compareWith = fn;\n\n        if (this.selectionModel) {\n            // A different comparator means the selection could change.\n            this.initializeSelection();\n        }\n    }\n\n    /** Value of the select control. */\n    @Input()\n    get value(): any {\n        return this._value;\n    }\n\n    set value(newValue: any) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n\n    private _value: any;\n\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this.uid;\n        this.stateChanges.next();\n    }\n\n    private _id: string;\n\n    /** Whether the select is focused. */\n    get focused(): boolean {\n        return this._focused || this._panelOpen;\n    }\n\n    /**\n     * @deprecated Setter to be removed as this property is intended to be readonly.\n     * @breaking-change 8.0.0\n     */\n    set focused(value: boolean) {\n        this._focused = value;\n    }\n\n    private _focused = false;\n\n    get panelOpen(): boolean {\n        return this._panelOpen;\n    }\n\n    private _panelOpen = false;\n\n    /** The scroll position of the overlay panel, calculated to center the selected option. */\n    private scrollTop = 0;\n\n    /** Unique id for this input. */\n    private readonly uid = `mc-select-${nextUniqueId++}`;\n\n    /** Emits whenever the component is destroyed. */\n    private readonly destroy = new Subject<void>();\n\n    constructor(\n        private readonly _viewportRuler: ViewportRuler,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        private readonly _ngZone: NgZone,\n        private readonly _renderer: Renderer2,\n        defaultErrorStateMatcher: ErrorStateMatcher,\n        elementRef: ElementRef,\n        @Optional() private readonly _dir: Directionality,\n        @Optional() parentForm: NgForm,\n        @Optional() parentFormGroup: FormGroupDirective,\n        @Optional() private readonly _parentFormField: McFormField,\n        @Self() @Optional() public ngControl: NgControl,\n        @Attribute('tabindex') tabIndex: string,\n        @Inject(MC_SELECT_SCROLL_STRATEGY) private readonly _scrollStrategyFactory\n    ) {\n        super(elementRef, defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\n\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnInit() {\n        this.selectionModel = new SelectionModel<McOption>(this.multiple);\n        this.stateChanges.next();\n\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this.panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this.destroy))\n            .subscribe(() => {\n                if (this.panelOpen) {\n                    this.scrollTop = 0;\n                    this.openedChange.emit(true);\n                } else {\n                    this.openedChange.emit(false);\n                    this.panelDoneAnimating = false;\n                    this.overlayDir.offsetX = 0;\n                    this._changeDetectorRef.markForCheck();\n                }\n            });\n    }\n\n    ngAfterContentInit() {\n        this.initKeyManager();\n\n        this.selectionModel.changed\n            .pipe(takeUntil(this.destroy))\n            .subscribe((event) => {\n                event.added.forEach((option) => option.select());\n                event.removed.forEach((option) => option.deselect());\n            });\n\n        this.options.changes\n            .pipe(startWith(null), takeUntil(this.destroy))\n            .subscribe(() => {\n                this.resetOptions();\n                this.initializeSelection();\n            });\n    }\n\n    ngAfterViewInit(): void {\n        this.tags.changes\n            .subscribe(() => {\n                setTimeout(() => this.calculateHiddenItems(), 0);\n            });\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) { this.updateErrorState(); }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes.disabled) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy() {\n        this.destroy.next();\n        this.destroy.complete();\n        this.stateChanges.complete();\n    }\n\n    /** `View -> model callback called when value changes` */\n    _onChange: (value: any) => void = () => {};\n\n    /** `View -> model callback called when select has been touched` */\n    _onTouched = () => {};\n\n    /** Toggles the overlay panel open or closed. */\n    toggle(): void {\n        if (this.panelOpen) {\n            this.close();\n        } else {\n            this.open();\n        }\n    }\n\n    /** Opens the overlay panel. */\n    open(): void {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) { return; }\n\n        this.triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this.triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement)['font-size']);\n\n        this._panelOpen = true;\n        this.keyManager.withHorizontalOrientation(null);\n        this.calculateOverlayPosition();\n        this.highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                if (this.triggerFontSize && this.overlayDir.overlayRef && this.overlayDir.overlayRef.overlayElement) {\n                    this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this.triggerFontSize}px`;\n                }\n            });\n    }\n\n    /** Closes the overlay panel and focuses the host element. */\n    close(): void {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this.keyManager.withHorizontalOrientation(this.isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value: any): void {\n        if (this.options) {\n            this.setSelectionByValue(value);\n        }\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn: () => {}): void {\n        this._onTouched = fn;\n    }\n\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n\n    get selected(): McOption | McOption[] {\n        return this.multiple ? this.selectionModel.selected : this.selectionModel.selected[0];\n    }\n\n    get triggerValue(): string {\n        if (this.empty) { return ''; }\n\n        if (this._multiple) {\n            const selectedOptions = this.selectionModel.selected.map((option) => option.viewValue);\n\n            if (this.isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions.join(', ');\n        }\n\n        return this.selectionModel.selected[0].viewValue;\n    }\n\n    get triggerValues(): McOption[] {\n        if (this.empty) { return []; }\n\n        if (this._multiple) {\n            const selectedOptions = this.selectionModel.selected;\n\n            if (this.isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions;\n        }\n\n        return [this.selectionModel.selected[0]];\n    }\n\n    get empty(): boolean {\n        return !this.selectionModel || this.selectionModel.isEmpty();\n    }\n\n    isRtl(): boolean {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n\n    handleKeydown(event: KeyboardEvent): void {\n        if (!this.disabled) {\n            if (this.panelOpen) {\n                this.handleOpenKeydown(event);\n            } else {\n                this.handleClosedKeydown(event);\n            }\n        }\n    }\n\n    /**\n     * When the panel content is done fading in, the panelDoneAnimating property is\n     * set so the proper class can be added to the panel.\n     */\n    onFadeInDone(): void {\n        this.panelDoneAnimating = this.panelOpen;\n        this._changeDetectorRef.markForCheck();\n    }\n\n    onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    onBlur() {\n        this._focused = false;\n\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    onAttached(): void {\n        this.overlayDir.positionChange\n            .pipe(take(1))\n            .subscribe(() => {\n                this._changeDetectorRef.detectChanges();\n                this.calculateOverlayOffsetX();\n                this.panel.nativeElement.scrollTop = this.scrollTop;\n            });\n    }\n\n    /** Returns the theme to be used on the panel. */\n    getPanelTheme(): string {\n        return this._parentFormField ? `mc-${this._parentFormField.color}` : '';\n    }\n\n    /** Focuses the select element. */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    calculateOverlayScroll(selectedIndex: number, scrollBuffer: number, maxScroll: number): number {\n        const itemHeight = this.getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n\n        /* tslint:disable-next-line:no-magic-numbers */\n        const halfOptionHeight = itemHeight / 2;\n\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n\n    /** Invoked when an option is clicked. */\n    onRemoveMatcherItem(option: McOption, $event): void {\n        $event.stopPropagation();\n\n        option.deselect();\n    }\n\n    calculateHiddenItems(): void {\n        if (this.empty || !this.multiple) { return; }\n\n        let visibleItems: number = 0;\n        const totalItemsWidth = this.getTotalItemsWidthInMatcher();\n        let totalVisibleItemsWidth: number = 0;\n        const itemMargin: number = 4;\n\n        this.tags.forEach((tag) => {\n            if (tag.nativeElement.offsetTop < tag.nativeElement.offsetHeight) {\n                totalVisibleItemsWidth += tag.nativeElement.getBoundingClientRect().width + itemMargin;\n                visibleItems++;\n            }\n        });\n\n        this.hiddenItems = (this.selected as ArrayLike<McOption>).length - visibleItems;\n\n        if (this.hiddenItems) {\n            const itemsCounter = this.trigger.nativeElement.querySelector('.mc-select__match-hidden-text');\n            const matcherList = this.trigger.nativeElement.querySelector('.mc-select__match-list');\n\n            const itemsCounterShowed = itemsCounter.offsetTop < itemsCounter.offsetHeight;\n            // const itemsCounterWidth: number = itemsCounter.getBoundingClientRect().width;\n            const itemsCounterWidth: number = 86;\n\n            const matcherListWidth: number = matcherList.getBoundingClientRect().width;\n            const matcherWidth: number = matcherListWidth + itemsCounterWidth;\n\n            if (itemsCounterShowed && (totalItemsWidth < matcherWidth)) { this.hiddenItems = 0; }\n\n            if (\n                totalVisibleItemsWidth === matcherListWidth ||\n                (totalVisibleItemsWidth + itemsCounterWidth) < matcherListWidth\n            ) {\n                this._changeDetectorRef.markForCheck();\n\n                return ;\n            } else if (!itemsCounterShowed && (totalItemsWidth + itemsCounterWidth) > matcherWidth) {\n                this.hiddenItems++;\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    private getTotalItemsWidthInMatcher(): number {\n        const triggerClone = this.trigger.nativeElement.cloneNode(true);\n        triggerClone.querySelector('.mc-select__match-hidden-text').remove();\n\n        this._renderer.setStyle(triggerClone, 'position', 'absolute');\n        this._renderer.setStyle(triggerClone, 'visibility', 'hidden');\n        this._renderer.setStyle(triggerClone, 'top', '-100%');\n        this._renderer.setStyle(triggerClone, 'left', '0');\n\n        this._renderer.appendChild(this.trigger.nativeElement, triggerClone);\n\n        let totalItemsWidth: number = 0;\n        const itemMargin: number = 4;\n        triggerClone.querySelectorAll('mc-tag').forEach((item) => {\n            totalItemsWidth += item.getBoundingClientRect().width as number + itemMargin;\n        });\n\n        triggerClone.remove();\n\n        return totalItemsWidth;\n    }\n\n    /** Handles keyboard events while the select is closed. */\n    private handleClosedKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n\n        // Open the select on ALT + arrow key to match the native <select>\n        if (isOpenKey || ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        } else if (!this.multiple) {\n            this.keyManager.onKeydown(event);\n        }\n    }\n\n    /** Handles keyboard events when the selected is open. */\n    private handleOpenKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const manager = this.keyManager;\n\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n\n            if (keyCode === HOME) {\n                manager.setFirstItemActive();\n            } else {\n                manager.setLastItemActive();\n            }\n\n        } else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n        } else if ((keyCode === ENTER || keyCode === SPACE) && manager.activeItem) {\n            event.preventDefault();\n            manager.activeItem.selectViaInteraction();\n        } else if (this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some((option) => !option.selected);\n            this.options.forEach((option) => {\n                if (hasDeselectedOptions && !option.disabled) {\n                    option.select();\n                } else {\n                    option.deselect();\n                }\n            });\n        } else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n\n            manager.onKeydown(event);\n\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem.selectViaInteraction();\n            }\n        }\n    }\n\n    private initializeSelection(): void {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this.setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n        });\n    }\n\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    private setSelectionByValue(value: any | any[]): void {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMcSelectNonArrayValueError();\n            }\n\n            this.selectionModel.clear();\n            value.forEach((currentValue: any) => this.selectValue(currentValue));\n            this.sortValues();\n        } else {\n            this.selectionModel.clear();\n            const correspondingOption = this.selectValue(value);\n\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this.keyManager.setActiveItem(correspondingOption);\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    private selectValue(value: any): McOption | undefined {\n        const correspondingOption = this.options.find((option: McOption) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            } catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n\n                return false;\n            }\n        });\n\n        if (correspondingOption) {\n            this.selectionModel.select(correspondingOption);\n        }\n\n        return correspondingOption;\n    }\n\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    private initKeyManager() {\n        this.keyManager = new ActiveDescendantKeyManager<McOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this.isRtl() ? 'rtl' : 'ltr');\n\n        this.keyManager.tabOut\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => {\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            });\n\n        this.keyManager.change\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => {\n                if (this._panelOpen && this.panel) {\n                    this.scrollActiveOptionIntoView();\n                } else if (!this._panelOpen && !this.multiple && this.keyManager.activeItem) {\n                    this.keyManager.activeItem.selectViaInteraction();\n                }\n            });\n    }\n\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    private resetOptions(): void {\n        const changedOrDestroyed = merge(this.options.changes, this.destroy);\n\n        this.optionSelectionChanges\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((event) => {\n                this.onSelect(event.source, event.isUserInput);\n\n                if (event.isUserInput && !this.multiple && this._panelOpen) {\n                    this.close();\n                    this.focus();\n                }\n            });\n\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((option) => option.stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n                this.stateChanges.next();\n            });\n\n        this.setOptionIds();\n    }\n\n    /** Invoked when an option is clicked. */\n    private onSelect(option: McOption, isUserInput: boolean): void {\n        const wasSelected = this.selectionModel.isSelected(option);\n\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this.selectionModel.clear();\n            this.propagateChanges(option.value);\n        } else {\n            if (option.selected) {\n                this.selectionModel.select(option);\n            } else {\n                this.selectionModel.deselect(option);\n            }\n\n            if (isUserInput) {\n                this.keyManager.setActiveItem(option);\n            }\n\n            if (this.multiple) {\n                this.sortValues();\n\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mc-option`.\n                    this.focus();\n                }\n            }\n        }\n\n        if (wasSelected !== this.selectionModel.isSelected(option)) {\n            this.propagateChanges();\n        }\n\n        this.stateChanges.next();\n    }\n\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    private sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n\n            this.selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n\n    /** Emits change event to set the model value. */\n    private propagateChanges(fallbackValue?: any): void {\n        let valueToEmit: any = null;\n\n        if (this.multiple) {\n            valueToEmit = (this.selected as McOption[]).map((option) => option.value);\n        } else {\n            valueToEmit = this.selected ? (this.selected as McOption).value : fallbackValue;\n        }\n\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new McSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /** Records option IDs to pass to the aria-owns property. */\n    private setOptionIds() {\n        this.optionIds = this.options.map((option) => option.id).join(' ');\n    }\n\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    private highlightCorrectOption(): void {\n        if (this.keyManager) {\n            if (this.empty) {\n                this.keyManager.setFirstItemActive();\n            } else {\n                this.keyManager.setActiveItem(this.selectionModel.selected[0]);\n            }\n        }\n    }\n\n    /** Scrolls the active option into view. */\n    private scrollActiveOptionIntoView(): void {\n        const activeOptionIndex = this.keyManager.activeItemIndex || 0;\n        const labelCount = countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n\n        this.panel.nativeElement.scrollTop = getOptionScrollPosition(\n            activeOptionIndex + labelCount,\n            this.getItemHeight(),\n            this.panel.nativeElement.scrollTop,\n            SELECT_PANEL_MAX_HEIGHT\n        );\n    }\n\n    /** Gets the index of the provided option in the option list. */\n    private getOptionIndex(option: McOption): number | undefined {\n        /* tslint:disable-next-line */\n        return this.options.reduce((result: number, current: McOption, index: number) => {\n            /* tslint:disable-next-line:strict-type-predicates */\n            return result === undefined ? (option === current ? index : undefined) : result;\n        }, undefined);\n    }\n\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    private calculateOverlayPosition(): void {\n        const itemHeight = this.getItemHeight();\n        const items = this.getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset =\n            this.empty ? 0 : this.getOptionIndex(this.selectionModel.selected[0])!;\n\n        selectedOptionOffset += countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /* tslint:disable-next-line:no-magic-numbers */\n        const scrollBuffer = panelHeight / 2;\n        this.scrollTop = this.calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this.offsetY = this.calculateOverlayOffsetY();\n\n        this.checkOverlayWithinViewport(maxScroll);\n    }\n\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    private calculateOverlayOffsetX(): void {\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this.isRtl();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const paddingWidth = SELECT_PANEL_PADDING_X * 2;\n        let offsetX: number;\n\n        const selected = this.selectionModel.selected[0] || this.options.first;\n        offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n\n        // Invert the offset in LTR.\n        if (!isRtl) { offsetX *= -1; }\n\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        } else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    private calculateOverlayOffsetY(): number {\n        // const itemHeight = this.getItemHeight();\n        // const optionHeightAdjustment = (itemHeight - this.triggerRect.height) / 2;\n\n        // todo I'm not sure that we will use it\n        return 0;\n        // return Math.round(-optionHeightAdjustment);\n    }\n\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    private checkOverlayWithinViewport(maxScroll: number): void {\n        const itemHeight = this.getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n\n        const topSpaceAvailable = this.triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable =\n            viewportSize.height - this.triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n\n        const panelHeightTop = Math.abs(this.offsetY);\n        const totalPanelHeight =\n            Math.min(this.getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this.triggerRect.height;\n\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this.adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        } else if (panelHeightTop > topSpaceAvailable) {\n            this.adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        } else {\n            this.transformOrigin = this.getOriginBasedOnOption();\n        }\n    }\n\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    private adjustPanelUp(panelHeightBottom: number, bottomSpaceAvailable: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this.scrollTop -= distanceBelowViewport;\n        this.offsetY -= distanceBelowViewport;\n        this.transformOrigin = this.getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this.scrollTop <= 0) {\n            this.scrollTop = 0;\n            this.offsetY = 0;\n            this.transformOrigin = `50% bottom 0px`;\n        }\n    }\n\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    private adjustPanelDown(panelHeightTop: number, topSpaceAvailable: number, maxScroll: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this.scrollTop += distanceAboveViewport;\n        this.offsetY += distanceAboveViewport;\n        this.transformOrigin = this.getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this.scrollTop >= maxScroll) {\n            this.scrollTop = maxScroll;\n            this.offsetY = 0;\n            this.transformOrigin = `50% top 0px`;\n\n            return;\n        }\n    }\n\n    /** Sets the transform origin point based on the selected option. */\n    private getOriginBasedOnOption(): string {\n        const itemHeight = this.getItemHeight();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const optionHeightAdjustment = (itemHeight - this.triggerRect.height) / 2;\n        /* tslint:disable-next-line:no-magic-numbers */\n        const originY = Math.abs(this.offsetY) - optionHeightAdjustment + itemHeight / 2;\n\n        return `50% ${originY}px 0px`;\n    }\n\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    private getItemCount(): number {\n        return this.options.length + this.optionGroups.length;\n    }\n\n    /** Calculates the height of the select's options. */\n    private getItemHeight(): number {\n        // todo доделать\n        /* tslint:disable-next-line:no-magic-numbers */\n        return 32;\n        // return this.triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n\n    /** Comparison function to specify which option is displayed. Defaults to object equality. */\n    private _compareWith = (o1: any, o2: any) => o1 === o2;\n}\n","export enum TimeParts {\n    hours,\n    minutes,\n    seconds\n}\n\nexport enum TimeFormats {\n    HHmmss = 'HH:mm:ss',\n    HHmm = 'HH:mm'\n}\n\nexport const TIMEFORMAT_PLACEHOLDERS: { [timeFormat: string]: string } = {\n    [TimeFormats.HHmmss]: '  :  :  ',\n    [TimeFormats.HHmm]: '  :  '\n};\n\nexport const DEFAULT_TIME_FORMAT: TimeFormats = TimeFormats.HHmm;\n\nexport const HOURS_MINUTES_SECONDS_REGEXP =\n    new RegExp(/^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9]):([0-5][0-9]|[0-9])?$/);\nexport const HOURS_MINUTES_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9])?$/;\nexport const HOURS_ONLY_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):?$/;\n\nexport const SECONDS_PER_MINUTE: number = 59;\nexport const MINUTES_PER_HOUR: number = 59;\nexport const HOURS_PER_DAY: number = 23;\n\n// TODO Move it to common CDK\nexport const ARROW_UP_KEYCODE: string = 'ArrowUp';\nexport const ARROW_DOWN_KEYCODE: string = 'ArrowDown';\nexport const ARROW_LEFT_KEYCODE: string = 'ArrowLeft';\nexport const ARROW_RIGHT_KEYCODE: string = 'ArrowRight';\n","import { Component, Directive, ElementRef, Input, OnChanges, OnInit, Optional, SimpleChanges } from '@angular/core';\n\nimport { McSidepanelRef } from './sidepanel-ref';\nimport { McSidepanelService } from './sidepanel.service';\n\n\n/**\n * Button that will close the current sidepanel.\n */\n@Directive({\n    selector: 'button[mc-sidepanel-close], button[mcSidepanelClose]',\n    host: {\n        '(click)': 'sidepanelRef.close(sidepanelResult)',\n        class: 'mc-sidepanel-close',\n        type: 'button'\n    }\n})\nexport class McSidepanelClose implements OnInit, OnChanges {\n    @Input('mc-sidepanel-close') sidepanelResult: any;\n\n    @Input('mcSidepanelClose') mcSidepanelClose: any;\n\n    constructor(\n        @Optional() public sidepanelRef: McSidepanelRef,\n        private elementRef: ElementRef<HTMLElement>,\n        private sidepanelService: McSidepanelService\n    ) {}\n\n    ngOnInit() {\n        if (!this.sidepanelRef) {\n            // When this directive is included in a sidepanel via TemplateRef (rather than being\n            // in a Component), the SidepanelRef isn't available via injection because embedded\n            // views cannot be given a custom injector. Instead, we look up the SidepanelRef by\n            // ID.\n            // This must occur in `onInit`, as the ID binding for the sidepanel container won't\n            // be resolved at constructor time. We use setTimeout by same reason.\n            setTimeout(() => {\n                this.sidepanelRef = getClosestSidepanel(this.elementRef, this.sidepanelService.openedSidepanels)!;\n            });\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const proxiedChange = changes.mcSidepanelClose || changes.sidepanelResult;\n\n        if (proxiedChange) {\n            this.sidepanelResult = proxiedChange.currentValue;\n        }\n    }\n}\n\n/**\n * Header of a sidepanel.\n */\n@Component({\n    selector: 'mc-sidepanel-header',\n    template: `\n        <div class=\"mc-sidepanel-title\">\n            <ng-content></ng-content>\n        </div>\n        <button *ngIf=\"closeable\" mc-sidepanel-close>\n            <span class=\"mc-sidepanel-close-x\">\n                <i mc-icon=\"mc-close-L_16\" class=\"mc-icon mc-icon_light\" color=\"second\"></i>\n            </span>\n        </button>\n    `,\n    host: {\n        class: 'mc-sidepanel-header'\n    }\n})\nexport class McSidepanelHeader {\n    @Input() closeable: boolean;\n}\n\n/**\n * Scrollable content container of a sidepanel.\n */\n@Directive({\n    selector: 'mc-sidepanel-body, [mc-sidepanel-body], mcSidepanelBody',\n    host: {\n        class: 'mc-sidepanel-body'\n    }\n})\nexport class McSidepanelBody {}\n\n/**\n * Footer of a sidepanel.\n */\n@Directive({\n    selector: 'mc-sidepanel-footer, [mc-sidepanel-footer], mcSidepanelFooter',\n    host: {\n        class: 'mc-sidepanel-footer'\n    }\n})\nexport class McSidepanelFooter {}\n\n/**\n * Actions block of a sidepanel footer.\n */\n@Directive({\n    selector: 'mc-sidepanel-actions, [mc-sidepanel-actions], mcSidepanelActions',\n    host: {\n        class: 'mc-sidepanel-actions'\n    }\n})\nexport class McSidepanelActions {}\n\n/**\n * Finds the closest McSidepanelRef to an element by looking at the DOM.\n * @param element Element relative to which to look for a sidepanel.\n * @param openSidepanels References to the currently-open sidepanels.\n */\nfunction getClosestSidepanel(element: ElementRef<HTMLElement>, openSidepanels: McSidepanelRef[]) {\n    let parent: HTMLElement | null = element.nativeElement.parentElement;\n\n    while (parent && !parent.classList.contains('mc-sidepanel-container')) {\n        parent = parent.parentElement;\n    }\n\n    return parent ? openSidepanels.find((sidepanel) => sidepanel.id === parent!.id) : null;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { PortalModule } from '@ptsecurity/cdk/portal';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McSidepanelContainerComponent } from './sidepanel-container.component';\nimport {\n    McSidepanelActions,\n    McSidepanelBody,\n    McSidepanelClose,\n    McSidepanelFooter,\n    McSidepanelHeader\n} from './sidepanel-directives';\nimport { McSidepanelService } from './sidepanel.service';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        PortalModule,\n        McCommonModule,\n        McIconModule\n    ],\n    providers: [McSidepanelService],\n    declarations: [\n        McSidepanelContainerComponent,\n        McSidepanelClose,\n        McSidepanelHeader,\n        McSidepanelBody,\n        McSidepanelFooter,\n        McSidepanelActions\n    ],\n    entryComponents: [McSidepanelContainerComponent],\n    exports: [\n        McSidepanelContainerComponent,\n        McSidepanelClose,\n        McSidepanelHeader,\n        McSidepanelBody,\n        McSidepanelFooter,\n        McSidepanelActions\n    ]\n})\nexport class McSidepanelModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    NgZone, OnDestroy,\n    OnInit,\n    Renderer2,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { coerceBooleanProperty, coerceCssPixelValue, coerceNumberProperty } from '@ptsecurity/cdk/coercion';\n\n\ninterface IArea {\n    area: McSplitterAreaDirective;\n    index: number;\n    order: number;\n    initialSize: number;\n}\n\ninterface IPoint {\n    x: number;\n    y: number;\n}\n\n\nconst enum AttributeProperty {\n    Disabled = 'disabled'\n}\n\nconst enum Cursor {\n    Default = 'default',\n    ResizeColumn = 'col-resize',\n    ResizeRow = 'row-resize'\n}\n\nconst enum StyleProperty {\n    Cursor = 'cursor',\n    Flex = 'flex',\n    FlexBasis = 'flex-basis',\n    FlexDirection = 'flex-direction',\n    Height = 'height',\n    MaxWidth = 'max-width',\n    MinHeight = 'min-height',\n    MinWidth = 'minWidth',\n    OffsetHeight = 'offsetHeight',\n    OffsetWidth = 'offsetWidth',\n    Order = 'order',\n    Width = 'width'\n}\n\nconst enum State {\n    Disabled = 'disabled',\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\nexport const enum Direction {\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\n@Component({\n    selector: 'mc-splitter',\n    preserveWhitespaces: false,\n    styleUrls: ['splitter.css'],\n    templateUrl: './splitter.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSplitterComponent implements OnInit {\n    readonly areas: IArea[] = [];\n\n    private _direction: Direction;\n    private _disabled: boolean = false;\n    private _gutterSize: number = 6;\n\n    private isDragging: boolean = false;\n\n    private readonly areaPositionDivider: number = 2;\n    private readonly listeners: (() => void)[] = [];\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set gutterSize(gutterSize: number) {\n        const size = coerceNumberProperty(gutterSize);\n        this._gutterSize = size > 0 ? size : this.gutterSize;\n    }\n\n    get gutterSize(): number {\n        return this._gutterSize;\n    }\n\n    constructor(private elementRef: ElementRef,\n                private ngZone: NgZone,\n                private renderer: Renderer2) {}\n\n    addArea(area: McSplitterAreaDirective): void {\n        const index: number = this.areas.length;\n        const order: number = index * this.areaPositionDivider;\n        const size: number = area.getSize();\n\n        area.setOrder(order);\n\n        this.areas.push({\n            area,\n            index,\n            order,\n            initialSize: size\n        });\n    }\n\n    ngOnInit(): void {\n        if (!this.direction) {\n            this.direction = Direction.Horizontal;\n        }\n\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'column' : 'row');\n    }\n\n    onMouseDown(event: MouseEvent, leftAreaIndex: number, rightAreaIndex: number) {\n        if (this.disabled) {\n            return;\n        }\n\n        const leftArea = this.areas[leftAreaIndex];\n        const rightArea = this.areas[rightAreaIndex];\n\n        const startPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        leftArea.initialSize = leftArea.area.getSize();\n        rightArea.initialSize = rightArea.area.getSize();\n\n        this.areas.forEach((item) => {\n            const size = item.area.getSize();\n            item.area.disableFlex();\n            item.area.setSize(size);\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mouseup',\n                    () => this.onMouseUp()\n                )\n            );\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mousemove',\n                    (e: MouseEvent) => this.onMouseMove(e, startPoint, leftArea, rightArea)\n                )\n            );\n        });\n\n        this.isDragging = true;\n    }\n\n    removeArea(area: McSplitterAreaDirective): void {\n        let indexToRemove: number = -1;\n\n        this.areas.some((item, index) => {\n            if (item.area === area) {\n                indexToRemove = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        if (indexToRemove === -1) {\n            return;\n        }\n\n        this.areas.splice(indexToRemove, 1);\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private onMouseMove(event: MouseEvent, startPoint: IPoint, leftArea: IArea, rightArea: IArea) {\n        if (!this.isDragging || this.disabled) {\n            return;\n        }\n\n        const endPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        const offset = this.isVertical()\n            ? startPoint.y - endPoint.y\n            : startPoint.x - endPoint.x;\n\n        const newLeftAreaSize = leftArea.initialSize - offset;\n        const newRightAreaSize = rightArea.initialSize + offset;\n\n        const minLeftAreaSize = leftArea.area.getMinSize();\n        const minRightAreaSize = rightArea.area.getMinSize();\n\n        if (newLeftAreaSize <= minLeftAreaSize || newRightAreaSize <= minRightAreaSize) {\n            const rightAreaOffset = leftArea.initialSize - minLeftAreaSize;\n\n            leftArea.area.setSize(minLeftAreaSize);\n            rightArea.area.setSize(rightArea.initialSize + rightAreaOffset);\n        } else if (newLeftAreaSize <= 0) {\n            leftArea.area.setSize(0);\n            rightArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n        } else if (newRightAreaSize <= 0) {\n            leftArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n            rightArea.area.setSize(0);\n        } else {\n            leftArea.area.setSize(newLeftAreaSize);\n            rightArea.area.setSize(newRightAreaSize);\n        }\n    }\n\n    private onMouseUp() {\n        while (this.listeners.length > 0) {\n            const unsubscribe = this.listeners.pop();\n\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        }\n\n        this.isDragging = false;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-gutter'\n})\nexport class McGutterDirective implements OnInit {\n    private _direction: Direction = Direction.Vertical;\n    private _disabled: boolean = false;\n    private _order: number = 0;\n    private _size: number = 6;\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set order(order: number) {\n        this._order = coerceNumberProperty(order);\n    }\n\n    get order(): number {\n        return this._order;\n    }\n\n    @Input()\n    set size(size: number) {\n        this._size = coerceNumberProperty(size);\n    }\n\n    get size(): number {\n        return this._size;\n    }\n\n    constructor(private renderer: Renderer2,\n                private elementRef: ElementRef) {\n    }\n\n    ngOnInit(): void {\n        this.setStyle(StyleProperty.Cursor, this.getCursor(this.getState()));\n        this.setStyle(StyleProperty.FlexBasis, coerceCssPixelValue(this.size));\n        this.setStyle(this.isVertical() ? StyleProperty.Height : StyleProperty.Width, coerceCssPixelValue(this.size));\n        this.setStyle(StyleProperty.Order, this.order);\n\n        if (!this.isVertical()) {\n            this.setStyle(StyleProperty.Height, '100%');\n        }\n\n        if (this.disabled) {\n            this.setAttr(AttributeProperty.Disabled, 'true');\n        }\n\n        // fix IE issue with gutter icon. flex-direction is requied for flex alignment options\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'row' : 'column');\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private getCursor(state: State): string {\n        switch (state) {\n            case State.Disabled:\n                return Cursor.Default;\n            case State.Vertical:\n                return  Cursor.ResizeRow;\n            case State.Horizontal:\n                return Cursor.ResizeColumn;\n            default:\n                throw Error(`Unknown gutter state for cursor: ${state}`);\n        }\n    }\n\n    private getState(): State {\n        return this.disabled\n            ? State.Disabled\n            : this.direction === Direction.Vertical\n                ? State.Vertical\n                : State.Horizontal;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n\n    private setAttr(attribute: AttributeProperty, value: string) {\n        this.renderer.setAttribute(this.elementRef.nativeElement, attribute, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-splitter-area'\n})\nexport class McSplitterAreaDirective implements OnInit, OnDestroy {\n    constructor(private elementRef: ElementRef,\n                private renderer: Renderer2,\n                private splitter: McSplitterComponent) {}\n\n    disableFlex(): void {\n        this.renderer.removeStyle(this.elementRef.nativeElement, 'flex');\n    }\n\n    ngOnInit(): void {\n        this.splitter.addArea(this);\n\n        this.removeStyle(StyleProperty.MaxWidth);\n        this.setStyle(StyleProperty.Flex, '1');\n\n        if (this.splitter.direction === Direction.Vertical) {\n            this.setStyle(StyleProperty.Width, '100%');\n            this.removeStyle(StyleProperty.Height);\n        } else {\n            this.setStyle(StyleProperty.Height, '100%');\n            this.removeStyle(StyleProperty.Width);\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.splitter.removeArea(this);\n    }\n\n    setOrder(order: number): void {\n        this.setStyle(StyleProperty.Order, order);\n    }\n\n    setSize(size: number): void {\n        const sz = coerceNumberProperty(size);\n        this.setStyle(this.getSizeProperty(), coerceCssPixelValue(sz));\n    }\n\n    getSize(): number {\n        return this.elementRef.nativeElement[this.getOffsetSizeProperty()];\n    }\n\n    getMinSize(): number {\n        const styles = getComputedStyle(this.elementRef.nativeElement);\n\n        return parseFloat(styles[this.getMinSizeProperty()]);\n    }\n\n    private isVertical(): boolean {\n        return this.splitter.direction === Direction.Vertical;\n    }\n\n    private getMinSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.MinHeight\n            : StyleProperty.MinWidth;\n    }\n\n    private getOffsetSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.OffsetHeight\n            : StyleProperty.OffsetWidth;\n    }\n\n    private getSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.Height\n            : StyleProperty.Width;\n    }\n\n    private setStyle(style: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, style, value);\n    }\n\n    private removeStyle(style: StyleProperty) {\n        this.renderer.removeStyle(this.elementRef.nativeElement, style);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McGutterDirective, McSplitterAreaDirective, McSplitterComponent } from './splitter.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McIconModule\n    ],\n    exports: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ],\n    declarations: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ]\n})\nexport class McSplitterModule {\n}\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport {\n    Attribute,\n    ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ElementRef, EventEmitter, forwardRef,\n    Input, Output, ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    ThemePalette,\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\nlet nextUniqueId = 0;\n\ntype ToggleLabelPositionType = 'left' | 'right';\n\nexport class McToggleBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McToggleMixinBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McToggleBase = mixinTabIndex(mixinColor(mixinDisabled(McToggleBase), ThemePalette.Primary));\n\nexport class McToggleChange {\n    source: McToggleComponent;\n    checked: boolean;\n}\n\n@Component({\n    selector: 'mc-toggle',\n    exportAs: 'mcToggle',\n    templateUrl: './toggle.component.html',\n    styleUrls: ['./toggle.css'],\n    providers: [\n        {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => McToggleComponent), multi: true}\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color', 'tabIndex'],\n    host: {\n        class: 'mc-toggle',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-toggle_off]': '!checked'\n    },\n    animations: [\n        trigger('switch', [\n            state('true' , style({ left: '50%' })),\n            state('false', style({ left: '1px' })),\n            transition('true <=> false', animate('150ms'))\n        ])\n    ]\n})\nexport class McToggleComponent extends _McToggleMixinBase\n    implements ControlValueAccessor, CanColor, CanDisable, HasTabIndex {\n\n    @ViewChild('input') _inputElement: ElementRef;\n\n    @Input() labelPosition: ToggleLabelPositionType = 'right';\n\n    @Input('aria-label') ariaLabel: string = '';\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-toggle-${++nextUniqueId}`;\n\n    // tslint:disable:member-ordering\n    @Input() id: string = this._uniqueId;\n\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    @Input() name: string | null = null;\n\n    @Input() value: string;\n\n    private _disabled: boolean = false;\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this._disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    get checked() {\n        return this._checked;\n    }\n\n    @Input()\n    set checked(value: boolean) {\n        if (value !== this._checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    @Output() readonly change: EventEmitter<McToggleChange> =\n        new EventEmitter<McToggleChange>();\n\n    constructor(public _elementRef: ElementRef,\n                private _focusMonitor: FocusMonitor,\n                private _changeDetectorRef: ChangeDetectorRef,\n                @Attribute('tabindex') tabIndex: string\n    ) {\n        super(_elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _getAriaChecked(): boolean {\n        return this.checked;\n    }\n\n    _onInteractionEvent(event: Event) {\n        event.stopPropagation();\n    }\n\n    _onLabelTextChange() {\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onInputClick(event: MouseEvent) {\n        event.stopPropagation();\n        this._updateModelValue();\n        this._emitChangeEvent();\n    }\n\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    registerOnChange(fn: any) {\n        this._onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this._onTouchedCallback = fn;\n    }\n\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    // tslint:disable-next-line:no-empty\n    private _onTouchedCallback = () => {};\n\n    // tslint:disable-next-line:no-empty\n    private _onChangeCallback = (_: any) => {};\n\n    private _updateModelValue() {\n        this._checked = !this.checked;\n        this._onChangeCallback(this.checked);\n        this._onTouchedCallback();\n    }\n\n    private _emitChangeEvent() {\n        const event = new McToggleChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._onChangeCallback(this.checked);\n        this.change.emit(event);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McToggleComponent } from './toggle.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule],\n    exports: [McToggleComponent],\n    declarations: [McToggleComponent]\n})\nexport class McToggleModule {\n}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    TemplateRef,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport {\n    ConnectedOverlayPositionChange,\n    ConnectionPositionPair,\n    Overlay,\n    OverlayRef,\n    ScrollDispatcher,\n    IScrollStrategy,\n    FlexibleConnectedPositionStrategy,\n    IOverlayConnectionPosition,\n    IOriginConnectionPosition,\n    HorizontalConnectionPos,\n    VerticalConnectionPos\n} from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\nimport {\n    fadeAnimation,\n    DEFAULT_4_POSITIONS,\n    POSITION_MAP\n} from '@ptsecurity/mosaic/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\n\n@Component({\n    selector: 'mc-tooltip-component',\n    inputs: [\n        'mcMouseEnterDelay',\n        'mcMouseLeaveDelay',\n        'mcTitle',\n        'mcVisible',\n        'mcTrigger',\n        'mcPlacement'\n    ],\n    outputs: ['mcVisibleChange'],\n    animations: [ fadeAnimation ],\n    templateUrl: './tooltip.component.html',\n    preserveWhitespaces: false,\n    styleUrls: ['./tooltip.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '(body:click)': 'this.handleBodyInteraction()'\n    }\n})\nexport class McTooltipComponent {\n    prefix = 'mc-tooltip_placement';\n    positions: ConnectionPositionPair[] = [ ...DEFAULT_4_POSITIONS ];\n    classMap = {};\n    isTitleString: boolean;\n    showTid: number;\n    hideTid: number;\n    availablePositions: any;\n    $visible: Observable<boolean>;\n\n    @Output() mcVisibleChange: EventEmitter<boolean> = new EventEmitter();\n\n    @Input() mcMouseEnterDelay = 400;\n\n    @Input() mcMouseLeaveDelay = 0;\n\n    @Input()\n    get mcTitle(): string | TemplateRef<void> {\n        return this._mcTitle;\n    }\n    set mcTitle(value: string | TemplateRef<void>) {\n        this.isTitleString = !(value instanceof TemplateRef);\n\n        if (this.isTitleString) {\n            this._mcTitle = value;\n        }\n    }\n    private _mcTitle: string | TemplateRef<void>;\n\n    @Input()\n    get mcTrigger(): string {\n        return this._mcTrigger;\n    }\n    set mcTrigger(value: string) {\n        this._mcTrigger = value;\n    }\n    private _mcTrigger: string = 'hover';\n\n    @Input()\n    get mcPlacement(): string {\n        return this._mcPlacement;\n    }\n    set mcPlacement(value: string) {\n        if (value !== this._mcPlacement) {\n            this._mcPlacement = value;\n            this.positions.unshift(POSITION_MAP[ this.mcPlacement ]);\n        } else if (!value) {\n            this._mcPlacement = 'top';\n        }\n    }\n    private _mcPlacement: string = 'top';\n\n    @Input()\n    get mcVisible(): boolean {\n        return this._mcVisible.value;\n    }\n    set mcVisible(value: boolean) {\n        const visible = coerceBooleanProperty(value);\n\n        if (this._mcVisible.value !== visible) {\n            this._mcVisible.next(visible);\n            this.mcVisibleChange.emit(visible);\n        }\n    }\n    private _mcVisible: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n    /** Subject for notifying that the tooltip has been hidden from the view */\n    private readonly onHideSubject: Subject<any> = new Subject();\n    private closeOnInteraction: boolean = false;\n\n    constructor(public cdr: ChangeDetectorRef) {\n        this.availablePositions = POSITION_MAP;\n        this.$visible = this._mcVisible.asObservable();\n    }\n\n    show(): void {\n        if (this.hideTid) {\n            clearTimeout(this.hideTid);\n        }\n\n        if (!this.isContentEmpty()) {\n            if (this.mcTrigger !== 'manual') {\n                this.closeOnInteraction = true;\n            }\n            this.showTid = setTimeout(() => {\n                this.mcVisible = true;\n                this.mcVisibleChange.emit(true);\n\n                // Mark for check so if any parent component has set the\n                // ChangeDetectionStrategy to OnPush it will be checked anyways\n                this.markForCheck();\n            }, this.mcMouseEnterDelay);\n        }\n    }\n\n    hide(): void {\n        if (this.showTid) {\n            clearTimeout(this.showTid);\n        }\n\n        this.hideTid = setTimeout(() => {\n            this.mcVisible = false;\n            this.mcVisibleChange.emit(false);\n            this.onHideSubject.next();\n\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this.markForCheck();\n        }, this.mcMouseLeaveDelay);\n    }\n\n    setClassMap(): void {\n        this.classMap = `${this.prefix}-${this.mcPlacement}`;\n    }\n\n    isContentEmpty(): boolean {\n        return this.isTitleString ? (this.mcTitle === '' || !this.mcTitle) : false;\n    }\n\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden(): Observable<void> {\n        return this.onHideSubject.asObservable();\n    }\n\n    markForCheck(): void {\n        this.cdr.markForCheck();\n    }\n\n    handleBodyInteraction(): void {\n        if (this.closeOnInteraction) {\n            this.hide();\n        }\n    }\n}\n\nexport const MC_TOOLTIP_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-tooltip-scroll-strategy');\n\n/** @docs-private */\nexport function mcTooltipScrollStrategyFactory(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition({scrollThrottle: 20});\n}\n\n/** @docs-private */\nexport const MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: mcTooltipScrollStrategyFactory\n};\n\n/** Creates an error to be thrown if the user supplied an invalid tooltip position. */\nexport function getMcTooltipInvalidPositionError(position: string) {\n    return Error(`McTooltip position \"${position}\" is invalid.`);\n}\n\nconst VIEWPORT_MARGIN: number = 8;\n\n@Directive({\n    selector: '[mcTooltip], [attribute^=\"mcTooltip\"]',\n    exportAs: 'mcTooltip',\n    host: {\n        '(keydown)': 'handleKeydown($event)',\n        '(touchend)': 'handleTouchend()'\n    }\n})\nexport class McTooltip implements OnInit, OnDestroy {\n    isTooltipOpen: boolean = false;\n    isDynamicTooltip = false;\n    parentDisabled: boolean = false;\n    overlayRef: OverlayRef | null;\n    portal: ComponentPortal<McTooltipComponent>;\n    availablePositions: any;\n    tooltip: McTooltipComponent | null;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n    private $unsubscribe = new Subject<void>();\n\n    @Input('mcTooltip')\n    get mcTitle(): string {\n        return this._mcTitle;\n    }\n    set mcTitle(title: string) {\n        this._mcTitle = title;\n        this.updateCompValue('mcTitle', title);\n    }\n    private _mcTitle: string;\n\n    @Input('mcTitle')\n    set setTitle(title: string) {\n        this.mcTitle = title;\n    }\n\n    @Input('mcTooltipDisabled')\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    private _disabled: boolean = false;\n\n    @Input('mcMouseEnterDelay')\n    get mcMouseEnterDelay(): number {\n        return this._mcMouseEnterDelay;\n    }\n    set mcMouseEnterDelay(value: number) {\n        this._mcMouseEnterDelay = value;\n        this.updateCompValue('mcMouseEnterDelay', value);\n    }\n    private _mcMouseEnterDelay: number;\n\n    @Input('mcMouseLeaveDelay')\n    get mcMouseLeaveDelay(): number {\n        return this._mcMouseLeaveDelay;\n    }\n    set mcMouseLeaveDelay(value: number) {\n        this._mcMouseLeaveDelay = value;\n        this.updateCompValue('mcMouseLeaveDelay', value);\n    }\n    private _mcMouseLeaveDelay: number;\n\n    @Input('mcTrigger')\n    get mcTrigger(): string {\n        return this._mcTrigger;\n    }\n    set mcTrigger(value: string) {\n        if (value) {\n            this._mcTrigger = value;\n            this.updateCompValue('mcTrigger', value);\n        } else {\n            this._mcTrigger = 'hover';\n        }\n    }\n    private _mcTrigger: string = 'hover';\n\n    @Input('mcPlacement')\n    get mcPlacement(): string {\n        return this._mcPlacement;\n    }\n    set mcPlacement(value: string) {\n        if (value) {\n            this._mcPlacement = value;\n            this.updateCompValue('mcPlacement', value);\n        } else {\n            this._mcPlacement = 'top';\n        }\n    }\n    private _mcPlacement: string = 'top';\n\n    @Input('mcTooltipClass')\n    get mcTooltipClass() { return this._mcTooltipClass; }\n    set mсTooltipClass(value: string | string[] | Set<string> | {[key: string]: any}) {\n        this._mcTooltipClass = value;\n\n        if (this.tooltip) {\n            this.tooltip.setClassMap();\n        }\n    }\n    private _mcTooltipClass: string | string[] | Set<string> | {[key: string]: any};\n\n    @Input('mcVisible')\n    get mcVisible(): boolean {\n        return this._mcVisible;\n    }\n    set mcVisible(externalValue: boolean) {\n        const value = coerceBooleanProperty(externalValue);\n        this._mcVisible = value;\n        this.updateCompValue('mcVisible', value);\n\n        if (value) {\n            this.show();\n        }\n    }\n    private _mcVisible: boolean;\n\n    @HostBinding('class.mc-tooltip-open')\n    get isOpen(): boolean {\n        return this.isTooltipOpen;\n    }\n\n    @HostBinding('class.disabled')\n    get isParentDisabled(): boolean {\n        return this.parentDisabled;\n    }\n\n    private manualListeners = new Map<string, EventListenerOrEventListenerObject>();\n    private readonly destroyed = new Subject<void>();\n\n    constructor(\n        private overlay: Overlay,\n        private elementRef: ElementRef,\n        private ngZone: NgZone,\n        private scrollDispatcher: ScrollDispatcher,\n        private hostView: ViewContainerRef,\n        @Inject(MC_TOOLTIP_SCROLL_STRATEGY) private scrollStrategy,\n        @Optional() private direction: Directionality) {\n            this.availablePositions = POSITION_MAP;\n        }\n\n    /** Create the overlay config and position strategy */\n    createOverlay(): OverlayRef {\n        if (this.overlayRef) {\n            return this.overlayRef;\n        }\n\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this.overlay.position()\n            .flexibleConnectedTo(this.elementRef)\n            .withTransformOriginOn('.mc-tooltip')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(VIEWPORT_MARGIN)\n            .withPositions([ ...DEFAULT_4_POSITIONS ]);\n\n        const scrollableAncestors = this.scrollDispatcher\n            .getAncestorScrollContainers(this.elementRef);\n\n        strategy.withScrollableContainers(scrollableAncestors);\n\n        strategy.positionChanges.pipe(takeUntil(this.destroyed)).subscribe((change) => {\n            if (this.tooltip) {\n                this.onPositionChange(change);\n                if (change.scrollableViewProperties.isOverlayClipped && this.tooltip.mcVisible) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this.ngZone.run(() => this.hide());\n                }\n            }\n        });\n\n        this.overlayRef = this.overlay.create({\n            direction: this.direction,\n            positionStrategy: strategy,\n            panelClass: 'mc-tooltip-panel',\n            scrollStrategy: this.scrollStrategy()\n        });\n\n        this.updatePosition();\n\n        this.overlayRef.detachments()\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(() => this.detach());\n\n        return this.overlayRef;\n    }\n\n    detach() {\n        if (this.overlayRef && this.overlayRef.hasAttached()) {\n            this.overlayRef.detach();\n        }\n\n        this.tooltip = null;\n    }\n\n    onPositionChange($event: ConnectedOverlayPositionChange): void {\n        let updatedPlacement = this.mcPlacement;\n        Object.keys(this.availablePositions).some((key) => {\n            if ($event.connectionPair.originX === this.availablePositions[key].originX &&\n                $event.connectionPair.originY === this.availablePositions[key].originY &&\n                $event.connectionPair.overlayX === this.availablePositions[key].overlayX &&\n                $event.connectionPair.overlayY === this.availablePositions[key].overlayY) {\n                updatedPlacement = key;\n\n                return true;\n            }\n\n            return false;\n        });\n        this.updateCompValue('mcPlacement', updatedPlacement);\n\n        if (this.tooltip) {\n            this.tooltip.setClassMap();\n            this.tooltip.markForCheck();\n        }\n\n        this.handlePositioningUpdate();\n    }\n\n    handlePositioningUpdate() {\n        if (!this.overlayRef) {\n            this.overlayRef = this.createOverlay();\n        }\n        if (this.mcPlacement === 'right' || this.mcPlacement === 'left') {\n            const pos =\n                (this.overlayRef.overlayElement.clientHeight -\n                    this.hostView.element.nativeElement.clientHeight) / 2; // tslint:disable-line\n            const currentContainer = this.overlayRef.overlayElement.style.top || '0px';\n            this.overlayRef.overlayElement.style.top =\n                `${parseInt(currentContainer.split('px')[0], 10) + pos - 1}px`;\n            // TODO: обновлять положение стрелки\\указателя\\\"дятла\"\n        }\n    }\n\n    // tslint:disable-next-line:no-any\n    updateCompValue(key: string, value: any): void {\n        if (this.isDynamicTooltip && value) {\n            if (this.tooltip) {\n                this.tooltip[key] = value;\n            }\n        }\n    }\n\n    ngOnInit(): void {\n        this.initElementRefListeners();\n    }\n\n    ngOnDestroy(): void {\n        if (this.overlayRef) {\n            this.overlayRef.dispose();\n        }\n        this.manualListeners.forEach((listener, event) =>\n            this.elementRef.nativeElement.removeEventListener(event, listener));\n        this.manualListeners.clear();\n\n        this.$unsubscribe.next();\n        this.$unsubscribe.complete();\n    }\n\n    handleKeydown(e: KeyboardEvent) {\n        if (this.isTooltipOpen && e.keyCode === ESCAPE) { // tslint:disable-line\n            this.hide();\n        }\n    }\n\n    handleTouchend() {\n        this.hide();\n    }\n\n    initElementRefListeners() {\n        if (this.mcTrigger === 'hover') {\n\n            this.manualListeners\n                .set('mouseenter', () => this.show())\n                .set('mouseleave', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n\n        if (this.mcTrigger === 'focus') {\n\n            this.manualListeners\n                .set('focus', () => this.show())\n                .set('blur', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n    }\n\n    show(): void {\n        if (!this.disabled) {\n            if (!this.tooltip) {\n                const overlayRef = this.createOverlay();\n                this.detach();\n\n                this.portal = this.portal || new ComponentPortal(McTooltipComponent, this.hostView);\n\n                this.tooltip = overlayRef.attach(this.portal).instance;\n                this.tooltip.afterHidden()\n                    .pipe(takeUntil(this.destroyed))\n                    .subscribe(() => this.detach());\n                this.isDynamicTooltip = true;\n                const properties = [\n                    'mcTitle',\n                    'mcPlacement',\n                    'mcTrigger',\n                    'mcTooltipDisabled',\n                    'mcMouseEnterDelay',\n                    'mcMouseLeaveDelay',\n                    'mсTooltipClass',\n                    'mcVisible'\n                ];\n                properties.forEach((property) => this.updateCompValue(property, this[ property ]));\n                this.tooltip.mcVisibleChange.pipe(takeUntil(this.$unsubscribe), distinctUntilChanged())\n                    .subscribe((data) => {\n                        this.mcVisible = data;\n                        this.mcVisibleChange.emit(data);\n                        this.isTooltipOpen = data;\n                    });\n            }\n            this.updatePosition();\n            this.tooltip.show();\n        }\n    }\n\n    hide(): void {\n        if (this.tooltip) {\n            this.tooltip.hide();\n        }\n    }\n\n    /** Updates the position of the current tooltip. */\n    updatePosition() {\n        if (!this.overlayRef) {\n            this.overlayRef = this.createOverlay();\n        }\n        const position =\n            this.overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\n        const origin = this.getOrigin();\n        const overlay = this.getOverlayPosition();\n\n        position.withPositions([\n            {...origin.main, ...overlay.main},\n            {...origin.fallback, ...overlay.fallback}\n        ]);\n    }\n\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    getOrigin(): {main: IOriginConnectionPosition; fallback: IOriginConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this.direction || this.direction.value === 'ltr';\n        let originPosition: IOriginConnectionPosition;\n\n        if (position === 'top' || position === 'bottom') {\n            originPosition = {originX: 'center', originY: position === 'top' ? 'top' : 'bottom'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            originPosition = {originX: 'start', originY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            originPosition = {originX: 'end', originY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this.invertPosition(originPosition.originX, originPosition.originY);\n\n        return {\n            main: originPosition,\n            fallback: {originX: x, originY: y}\n        };\n    }\n\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    getOverlayPosition(): {main: IOverlayConnectionPosition; fallback: IOverlayConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this.direction || this.direction.value === 'ltr';\n        let overlayPosition: IOverlayConnectionPosition;\n\n        if (position === 'top') {\n            overlayPosition = {overlayX: 'center', overlayY: 'bottom'};\n        } else if (position === 'bottom') {\n            overlayPosition = {overlayX: 'center', overlayY: 'top'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            overlayPosition = {overlayX: 'end', overlayY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            overlayPosition = {overlayX: 'start', overlayY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this.invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n\n        return {\n            main: overlayPosition,\n            fallback: {overlayX: x, overlayY: y}\n        };\n    }\n\n    /** Inverts an overlay position. */\n    private invertPosition(x: HorizontalConnectionPos, y: VerticalConnectionPos) {\n        let newX: HorizontalConnectionPos = x;\n        let newY: VerticalConnectionPos = y;\n        if (this.mcPlacement === 'top' || this.mcPlacement === 'bottom') {\n            if (y === 'top') {\n                newY = 'bottom';\n            } else if (y === 'bottom') {\n                newY = 'top';\n            }\n        } else {\n            if (x === 'end') {\n                newX = 'start';\n            } else if (x === 'start') {\n                newX = 'end';\n            }\n        }\n\n        return {x: newX, y: newY};\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport {\n    McTooltipComponent,\n    McTooltip,\n    MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER\n} from './tooltip.component';\n\n\n@NgModule({\n    declarations: [McTooltipComponent, McTooltip],\n    exports: [McTooltipComponent, McTooltip],\n    imports: [CommonModule, OverlayModule],\n    providers: [MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n    entryComponents: [McTooltipComponent]\n})\nexport class McToolTipModule {\n}\n","import { Version } from '@angular/core';\n\n\nexport const VERSION = new Version('1.0.0-beta.4-3fa8704');\n","export const selectEvents = 'selectEvents';\n","import { InjectionToken } from '@angular/core';\nimport { IScrollStrategy, Overlay, RepositionScrollStrategy } from '@ptsecurity/cdk/overlay';\n\n\n/** The max height of the select's overlay panel */\nexport const SELECT_PANEL_MAX_HEIGHT = 224;\n\n/** The panel's padding on the x-axis */\nexport const SELECT_PANEL_PADDING_X = 1;\n\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\n/* tslint:disable-next-line:no-magic-numbers */\nexport const SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nexport const SELECT_PANEL_VIEWPORT_PADDING = 8;\n\n\n/** Injection token that determines the scroll handling while a select is open. */\nexport const MC_SELECT_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-select-scroll-strategy');\n\n/** @docs-private */\nexport function mcSelectScrollStrategyProviderFactory(overlay: Overlay):\n    () => RepositionScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MC_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: mcSelectScrollStrategyProviderFactory\n};\n","/* tslint:disable:no-empty */\n\nimport {\n    AfterContentInit,\n    AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    Directive,\n    DoCheck,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Input,\n    isDevMode,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    QueryList,\n    Renderer2,\n    Self,\n    SimpleChanges,\n    ViewChild,\n    ViewChildren,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    RIGHT_ARROW,\n    SPACE,\n    UP_ARROW,\n    A\n} from '@ptsecurity/cdk/keycodes';\nimport {\n    CdkConnectedOverlay,\n    ViewportRuler\n} from '@ptsecurity/cdk/overlay';\nimport { CdkTree } from '@ptsecurity/cdk/tree';\nimport {\n    getOptionScrollPosition,\n    CanDisable,\n    CanUpdateErrorState,\n    ErrorStateMatcher,\n    HasTabIndex,\n    CanDisableCtor,\n    HasTabIndexCtor,\n    CanUpdateErrorStateCtor,\n    mixinTabIndex,\n    mixinDisabled,\n    mixinErrorState,\n    mcSelectAnimations,\n\n    SELECT_PANEL_MAX_HEIGHT,\n    SELECT_PANEL_PADDING_X,\n    SELECT_PANEL_VIEWPORT_PADDING,\n\n    getMcSelectDynamicMultipleError,\n    getMcSelectNonFunctionValueError,\n    getMcSelectNonArrayValueError,\n    MC_SELECT_SCROLL_STRATEGY\n} from '@ptsecurity/mosaic/core';\nimport { McFormField, McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { McTag } from '@ptsecurity/mosaic/tag';\nimport { McTreeSelection, McTreeOption } from '@ptsecurity/mosaic/tree';\nimport { defer, merge, Observable, Subject } from 'rxjs';\nimport {\n    filter,\n    map,\n    startWith,\n    switchMap,\n    take,\n    takeUntil,\n    distinctUntilChanged\n} from 'rxjs/operators';\n\n\nlet nextUniqueId = 0;\n\n/** Change event object that is emitted when the select value has changed. */\nexport class McTreeSelectChange {\n    constructor(public source: McTreeOption, public value: any, public isUserInput = false) {}\n}\n\n\n@Directive({ selector: 'mc-tree-select-trigger' })\nexport class McTreeSelectTrigger {}\n\n\nclass McTreeSelectBase {\n    constructor(\n        public elementRef: ElementRef,\n        public defaultErrorStateMatcher: ErrorStateMatcher,\n        public parentForm: NgForm,\n        public parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl\n    ) {}\n}\n\n// tslint:disable-next-line:naming-convention\nconst McTreeSelectMixinBase: CanDisableCtor & HasTabIndexCtor & CanUpdateErrorStateCtor &\n    typeof McTreeSelectBase = mixinTabIndex(mixinDisabled(mixinErrorState(McTreeSelectBase)));\n\n\n@Component({\n    selector: 'mc-tree-select',\n    exportAs: 'mcTreeSelect',\n    templateUrl: 'tree-select.html',\n    styleUrls: ['./tree-select.css'],\n    inputs: ['disabled', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'tabIndex',\n\n        class: 'mc-tree-select',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-select-invalid]': 'errorState',\n        '[class.mc-select-required]': 'required',\n\n        '(keydown)': 'handleKeydown($event)',\n        '(focus)': 'onFocus()',\n        '(blur)': 'onBlur()',\n        '(window:resize)': 'calculateHiddenItems()'\n    },\n    animations: [\n        mcSelectAnimations.transformPanel,\n        mcSelectAnimations.fadeInContent\n    ],\n    providers: [\n        { provide: McFormFieldControl, useExisting: McTreeSelect },\n        { provide: CdkTree, useExisting: McTreeSelect }\n    ]\n})\nexport class McTreeSelect extends McTreeSelectMixinBase implements\n    AfterContentInit, AfterViewInit, OnChanges, OnDestroy, OnInit, DoCheck, ControlValueAccessor,\n    CanDisable, HasTabIndex, McFormFieldControl<any>, CanUpdateErrorState {\n\n    /** A name for this control that can be used by `mc-form-field`. */\n    controlType = 'mc-select';\n\n    hiddenItems: number = 0;\n    oneMoreText: string = '...ещё';\n\n    /** The last measured value for the trigger's client bounding rect. */\n    triggerRect: ClientRect;\n\n    /** The cached font-size of the trigger element. */\n    triggerFontSize = 0;\n\n    /** Deals with the selection logic. */\n    selectionModel: SelectionModel<McTreeOption>;\n\n    /** The IDs of child options to be passed to the aria-owns attribute. */\n    optionIds: string = '';\n\n    /** The value of the select panel's transform-origin property. */\n    transformOrigin: string = 'top';\n\n    /** Whether the panel's animation is done. */\n    panelDoneAnimating: boolean = false;\n\n    /** Emits when the panel element is finished transforming in. */\n    panelDoneAnimatingStream = new Subject<string>();\n\n    /** Strategy that will be used to handle scrolling while the select panel is open. */\n    scrollStrategy = this.scrollStrategyFactory();\n\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     */\n    offsetY = 0;\n\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     */\n    positions = [\n        {\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top'\n        },\n        {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'bottom'\n        }\n    ];\n\n    @ViewChild('trigger') trigger: ElementRef;\n\n    @ViewChild('panel') panel: ElementRef;\n\n    @ViewChild(CdkConnectedOverlay) overlayDir: CdkConnectedOverlay;\n\n    @ViewChildren(McTag) tags: QueryList<McTag>;\n\n    /** User-supplied override of the trigger element. */\n    @ContentChild(McTreeSelectTrigger) customTrigger: McTreeSelectTrigger;\n\n    @ContentChild(McTreeSelection) tree: McTreeSelection;\n\n    /** Event emitted when the select panel has been toggled. */\n    @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the select has been opened. */\n    @Output('opened') readonly openedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => o), map(() => {}));\n\n    /** Event emitted when the select has been closed. */\n    @Output('closed') readonly closedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => !o), map(() => {}));\n\n    /** Event emitted when the selected value has been changed by the user. */\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectChange>();\n\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Classes to be passed to the select panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[] | Set<string> | { [key: string]: any };\n\n    /** Object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     */\n    @Input() sortComparator: (\n        a: McTreeOption, b: McTreeOption, options: McTreeOption[]\n    ) => number;\n\n    /** Combined stream of all of the child options' change events. */\n    readonly optionSelectionChanges: Observable<McTreeSelectChange> = defer(() => {\n        if (this.options) {\n            return merge(...this.options.map((option) => option.onSelectionChange));\n        }\n\n        return this.ngZone.onStable\n            .asObservable()\n            .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n    }) as Observable<McTreeSelectChange>;\n\n    options: QueryList<McTreeOption>;\n\n    private originalOnKeyDown: (event: KeyboardEvent) => void;\n\n    @Input()\n    get placeholder(): string {\n        return this._placeholder;\n    }\n\n    set placeholder(value: string) {\n        this._placeholder = value;\n\n        this.stateChanges.next();\n    }\n\n    private _placeholder: string;\n\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n\n        this.stateChanges.next();\n    }\n\n    private _required: boolean = false;\n\n    @Input()\n    get multiple(): boolean {\n        return this._multiple;\n    }\n\n    set multiple(value: boolean) {\n        if (this.selectionModel) {\n            throw getMcSelectDynamicMultipleError();\n        }\n\n        this._multiple = coerceBooleanProperty(value);\n    }\n\n    private _multiple: boolean = false;\n\n    @Input()\n    get autoSelect(): boolean {\n        if (this.multiple) { return false; }\n\n        return this._autoSelect;\n    }\n\n    set autoSelect(value: boolean) {\n        this._autoSelect = coerceBooleanProperty(value);\n    }\n\n    private _autoSelect: boolean = true;\n\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    @Input()\n    get compareWith() {\n        return this._compareWith;\n    }\n\n    set compareWith(fn: (o1: any, o2: any) => boolean) {\n        /* tslint:disable-next-line:strict-type-predicates */\n        if (typeof fn !== 'function') {\n            throw getMcSelectNonFunctionValueError();\n        }\n\n        this._compareWith = fn;\n\n        if (this.selectionModel) {\n            // A different comparator means the selection could change.\n            this.initializeSelection();\n        }\n    }\n\n    /** Value of the select control. */\n    @Input()\n    get value(): any {\n        return this._value;\n    }\n\n    set value(newValue: any) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n\n    private _value: any;\n\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this.uid;\n        this.stateChanges.next();\n    }\n\n    private _id: string;\n\n    /** Whether the select is focused. */\n    get focused(): boolean {\n        return this._focused || this._panelOpen;\n    }\n\n    /**\n     * @deprecated Setter to be removed as this property is intended to be readonly.\n     * @breaking-change 8.0.0\n     */\n    set focused(value: boolean) {\n        this._focused = value;\n    }\n\n    private _focused = false;\n\n    get panelOpen(): boolean {\n        return this._panelOpen;\n    }\n\n    private _panelOpen = false;\n\n    /** The scroll position of the overlay panel, calculated to center the selected option. */\n    private scrollTop = 0;\n\n    /** Unique id for this input. */\n    private readonly uid = `mc-select-${nextUniqueId++}`;\n\n    /** Emits whenever the component is destroyed. */\n    private readonly destroy = new Subject<void>();\n\n    constructor(\n        private readonly viewportRuler: ViewportRuler,\n        readonly changeDetectorRef: ChangeDetectorRef,\n        private readonly ngZone: NgZone,\n        private readonly renderer: Renderer2,\n        defaultErrorStateMatcher: ErrorStateMatcher,\n        public elementRef: ElementRef,\n        @Optional() private readonly dir: Directionality,\n        @Optional() parentForm: NgForm,\n        @Optional() parentFormGroup: FormGroupDirective,\n        @Optional() private readonly parentFormField: McFormField,\n        @Self() @Optional() public ngControl: NgControl,\n        @Attribute('tabindex') tabIndex: string,\n        @Inject(MC_SELECT_SCROLL_STRATEGY) private readonly scrollStrategyFactory\n    ) {\n        super(elementRef, defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\n\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnInit() {\n        if (this.tree) {\n            this.tree.multiple = this.multiple;\n        }\n\n        this.stateChanges.next();\n\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this.panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this.destroy))\n            .subscribe(() => {\n                if (this.panelOpen) {\n                    this.scrollTop = 0;\n                    this.openedChange.emit(true);\n                } else {\n                    this.openedChange.emit(false);\n                    this.panelDoneAnimating = false;\n                    this.overlayDir.offsetX = 0;\n                    this.changeDetectorRef.markForCheck();\n                }\n            });\n    }\n\n    ngAfterContentInit() {\n        if (!this.tree) { return; }\n\n        this.initKeyManager();\n\n        this.selectionModel = this.tree.selectionModel = new SelectionModel<McTreeOption>(this.multiple);\n        this.options = this.tree.options;\n        this.tree.autoSelect = this.autoSelect;\n\n        this.selectionModel.changed\n            .pipe(takeUntil(this.destroy))\n            .subscribe((event) => {\n                event.added.forEach((option) => option.select());\n                event.removed.forEach((option) => option.deselect());\n            });\n    }\n\n    ngAfterViewInit() {\n        if (!this.tree) { return; }\n\n        this.tags.changes\n            .subscribe(() => {\n                setTimeout(() => this.calculateHiddenItems(), 0);\n            });\n\n        this.options.changes\n            .pipe(startWith(null), takeUntil(this.destroy))\n            .subscribe(() => {\n                this.updateSelectedOptions();\n\n                this.resetOptions();\n            });\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) { this.updateErrorState(); }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes.disabled) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy() {\n        this.destroy.next();\n\n        this.destroy.complete();\n        this.stateChanges.complete();\n    }\n\n    /** `View -> model callback called when value changes` */\n    onChange: (value: any) => void = () => {};\n\n    /** `View -> model callback called when select has been touched` */\n    onTouched = () => {};\n\n    toggle() {\n        if (this.panelOpen) {\n            this.close();\n        } else {\n            this.open();\n        }\n    }\n\n    open() {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) { return; }\n\n        this.triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this.triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement)['font-size']);\n\n        this._panelOpen = true;\n        // this.tree.keyManager.withHorizontalOrientation(null);\n        this.calculateOverlayPosition();\n        this.highlightCorrectOption();\n        this.changeDetectorRef.markForCheck();\n\n        // Set the font size on the panel element once it exists.\n        this.ngZone.onStable.asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                if (this.triggerFontSize && this.overlayDir.overlayRef &&\n                    this.overlayDir.overlayRef.overlayElement) {\n                    this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this.triggerFontSize}px`;\n                }\n            });\n    }\n\n    /** Closes the overlay panel and focuses the host element. */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n\n            // this.tree.keyManager.setActiveItem(-1);\n\n            // this.tree.keyManager.withHorizontalOrientation(this.isRtl() ? 'rtl' : 'ltr');\n            this.changeDetectorRef.markForCheck();\n            this.onTouched();\n        }\n    }\n\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    // todo нужно доделать!\n    writeValue(value: any) {\n        if (this.options) {\n            this.setSelectionByValue(value);\n        }\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn: (value: any) => void) {\n        this.onChange = fn;\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn: () => {}) {\n        this.onTouched = fn;\n    }\n\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n        this.changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n\n    get selected(): McTreeOption | McTreeOption[] {\n        return this.multiple ? this.selectionModel.selected : this.selectionModel.selected[0];\n    }\n\n    get triggerValue(): string {\n        if (this.empty) { return ''; }\n\n        return (this.selected as McTreeOption).viewValue;\n    }\n\n    get triggerValues(): McTreeOption[] {\n        if (this.empty) { return []; }\n\n        const selectedOptions = this.selectionModel.selected;\n\n        if (this.isRtl()) { selectedOptions.reverse(); }\n\n        return selectedOptions;\n    }\n\n    get empty(): boolean {\n        return !this.selectionModel || this.selectionModel.isEmpty();\n    }\n\n    isRtl(): boolean {\n        return this.dir ? this.dir.value === 'rtl' : false;\n    }\n\n    handleKeydown(event: KeyboardEvent) {\n        if (!this.disabled) {\n            if (this.panelOpen) {\n                this.handleOpenKeydown(event);\n            } else {\n                this.handleClosedKeydown(event);\n            }\n        }\n    }\n\n    /**\n     * When the panel content is done fading in, the panelDoneAnimating property is\n     * set so the proper class can be added to the panel.\n     */\n    onFadeInDone() {\n        this.panelDoneAnimating = this.panelOpen;\n        this.changeDetectorRef.markForCheck();\n    }\n\n    onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    onBlur() {\n        this._focused = false;\n\n        if (!this.disabled && !this.panelOpen) {\n            this.onTouched();\n            this.changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n\n    /** Callback that is invoked when the overlay panel has been attached. */\n    onAttached() {\n        this.overlayDir.positionChange\n            .pipe(take(1))\n            .subscribe(() => {\n                this.changeDetectorRef.detectChanges();\n                this.calculateOverlayOffsetX();\n                this.panel.nativeElement.scrollTop = this.scrollTop;\n            });\n    }\n\n    /** Returns the theme to be used on the panel. */\n    getPanelTheme(): string {\n        return this.parentFormField ? `mc-${this.parentFormField.color}` : '';\n    }\n\n    /** Focuses the select element. */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    calculateOverlayScroll(selectedIndex: number, scrollBuffer: number, maxScroll: number): number {\n        const itemHeight = this.getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n\n        /* tslint:disable-next-line:no-magic-numbers */\n        const halfOptionHeight = itemHeight / 2;\n\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n\n    /** Invoked when an option is clicked. */\n    onRemoveSelectedOption(selectedOption: McTreeOption, $event) {\n        $event.stopPropagation();\n\n        this.options.forEach((option) => {\n            if (option.data === selectedOption.data) { option.deselect(); }\n        });\n\n        this.selectionModel.deselect(selectedOption);\n    }\n\n    calculateHiddenItems() {\n        if (this.empty || !this.multiple) { return; }\n\n        let visibleItems: number = 0;\n        const totalItemsWidth = this.getTotalItemsWidthInMatcher();\n        let totalVisibleItemsWidth: number = 0;\n        const itemMargin: number = 4;\n\n        this.tags.forEach((tag) => {\n            if (tag.nativeElement.offsetTop < tag.nativeElement.offsetHeight) {\n                totalVisibleItemsWidth += tag.nativeElement.getBoundingClientRect().width + itemMargin;\n                visibleItems++;\n            }\n        });\n\n        this.hiddenItems = this.selectionModel.selected.length - visibleItems;\n\n        if (this.hiddenItems) {\n            const itemsCounter = this.trigger.nativeElement.querySelector('.mc-tree-select__match-hidden-text');\n            const matcherList = this.trigger.nativeElement.querySelector('.mc-tree-select__match-list');\n\n            const itemsCounterShowed = itemsCounter.offsetTop < itemsCounter.offsetHeight;\n            // const itemsCounterWidth: number = itemsCounter.getBoundingClientRect().width;\n            const itemsCounterWidth: number = 86;\n\n            const matcherListWidth: number = matcherList.getBoundingClientRect().width;\n            const matcherWidth: number = matcherListWidth + itemsCounterWidth;\n\n            if (itemsCounterShowed && (totalItemsWidth < matcherWidth)) { this.hiddenItems = 0; }\n\n            if (\n                totalVisibleItemsWidth === matcherListWidth ||\n                (totalVisibleItemsWidth + itemsCounterWidth) < matcherListWidth\n            ) {\n                this.changeDetectorRef.markForCheck();\n\n                return ;\n            } else if (!itemsCounterShowed && (totalItemsWidth + itemsCounterWidth) > matcherWidth) {\n                this.hiddenItems++;\n            }\n        }\n\n        this.changeDetectorRef.markForCheck();\n    }\n\n    private updateSelectedOptions(): void {\n        this.selectionModel.selected.forEach((selectedOption) => {\n            this.options.forEach((option) => {\n                if (option.data === selectedOption.data) {\n                    this.selectionModel.deselect(selectedOption);\n                    this.selectionModel.select(option);\n\n                    option.select();\n                }\n            });\n        });\n    }\n\n    private getTotalItemsWidthInMatcher(): number {\n        const triggerClone = this.trigger.nativeElement.cloneNode(true);\n        triggerClone.querySelector('.mc-tree-select__match-hidden-text').remove();\n\n        this.renderer.setStyle(triggerClone, 'position', 'absolute');\n        this.renderer.setStyle(triggerClone, 'visibility', 'hidden');\n        this.renderer.setStyle(triggerClone, 'top', '-100%');\n        this.renderer.setStyle(triggerClone, 'left', '0');\n\n        this.renderer.appendChild(this.trigger.nativeElement, triggerClone);\n\n        let totalItemsWidth: number = 0;\n        const itemMargin: number = 4;\n        triggerClone.querySelectorAll('mc-tag').forEach((item) => {\n            totalItemsWidth += item.getBoundingClientRect().width as number + itemMargin;\n        });\n\n        triggerClone.remove();\n\n        return totalItemsWidth;\n    }\n\n    private handleClosedKeydown(event: KeyboardEvent) {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n\n        // Open the select on ALT + arrow key to match the native <select>\n        if (isOpenKey || ((this.multiple || event.altKey) && isArrowKey)) {\n            // prevents the page from scrolling down when pressing space\n            event.preventDefault();\n\n            this.open();\n        } else if (!this.multiple && this.tree.keyManager && this.tree.keyManager.onKeydown) {\n            this.tree.keyManager.onKeydown(event);\n        }\n    }\n\n    private handleOpenKeydown(event: KeyboardEvent) {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n\n        if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n\n            this.close();\n        } else if (keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW) {\n            return this.originalOnKeyDown.call(this.tree, event);\n        } else if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n\n            if (keyCode === HOME) {\n                this.tree.keyManager.setFirstItemActive();\n            } else {\n                this.tree.keyManager.setLastItemActive();\n            }\n        } else if ((keyCode === ENTER || keyCode === SPACE) && this.tree.keyManager.activeItem) {\n            event.preventDefault();\n\n            this.tree.keyManager.activeItem.selectViaInteraction();\n        } else if (this.multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n\n            const hasDeselectedOptions = this.options.some((option) => !option.selected);\n\n            this.options.forEach((option) => {\n                if (hasDeselectedOptions && !option.disabled) {\n                    option.select();\n                } else {\n                    option.deselect();\n                }\n            });\n        } else {\n            const previouslyFocusedIndex = this.tree.keyManager.activeItemIndex;\n\n            this.tree.keyManager.onKeydown(event);\n\n            if (this.multiple && isArrowKey && event.shiftKey && this.tree.keyManager.activeItem &&\n                this.tree.keyManager.activeItemIndex !== previouslyFocusedIndex) {\n                this.tree.keyManager.activeItem.selectViaInteraction();\n            }\n        }\n    }\n\n    private initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this.setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n        });\n    }\n\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    private setSelectionByValue(value: any | any[]) {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) { throw getMcSelectNonArrayValueError(); }\n\n            this.selectionModel.clear();\n            value.forEach((currentValue: any) => this.selectValue(currentValue));\n            this.sortValues();\n        } else {\n            this.selectionModel.clear();\n            const correspondingOption = this.selectValue(value);\n\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this.tree.keyManager.setActiveItem(correspondingOption);\n            }\n        }\n\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    private selectValue(value: any): McTreeOption | undefined {\n        const correspondingOption = this.options.find((option: McTreeOption) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            } catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n\n                return false;\n            }\n        });\n\n        if (correspondingOption) {\n            this.selectionModel.select(correspondingOption);\n        }\n\n        return correspondingOption;\n    }\n\n    private initKeyManager() {\n        this.originalOnKeyDown = this.tree.onKeyDown;\n\n        this.tree.onKeyDown = () => {};\n\n        this.tree.keyManager.tabOut\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => {\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            });\n\n        this.tree.keyManager.change\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => {\n                if (this._panelOpen && this.panel) {\n                    this.scrollActiveOptionIntoView();\n                } else if (!this._panelOpen && !this.multiple && this.tree.keyManager.activeItem) {\n                    this.tree.keyManager.activeItem.selectViaInteraction();\n                }\n            });\n    }\n\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    private resetOptions() {\n        const changedOrDestroyed = merge(this.options.changes, this.destroy);\n\n        this.optionSelectionChanges\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((event) => {\n                this.onSelect(event.source, event.isUserInput);\n\n                if (event.isUserInput && !this.multiple && this._panelOpen) {\n                    this.close();\n                    this.focus();\n                }\n            });\n\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        // merge(...this.options.map((option) => option.stateChanges))\n        //     .pipe(takeUntil(changedOrDestroyed))\n        //     .subscribe(() => {\n        //         this.changeDetectorRef.markForCheck();\n        //         this.stateChanges.next();\n        //     });\n\n        this.setOptionIds();\n    }\n\n    /** Invoked when an option is clicked. */\n    private onSelect(option: McTreeOption, isUserInput: boolean) {\n        const wasSelected = this.selectionModel.isSelected(option);\n\n        if (option.value == null && !this.multiple) {\n            option.deselect();\n            this.selectionModel.clear();\n            this.propagateChanges(option.value);\n        } else {\n            if (option.selected) {\n                this.selectionModel.select(option);\n            } else {\n                this.selectionModel.deselect(option);\n            }\n\n            if (isUserInput) {\n                this.tree.keyManager.setActiveItem(option);\n            }\n\n            if (this.multiple) {\n                this.sortValues();\n\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mc-option`.\n                    this.focus();\n                }\n            }\n        }\n\n        if (wasSelected !== this.selectionModel.isSelected(option)) {\n            this.propagateChanges();\n        }\n\n        this.stateChanges.next();\n    }\n\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    private sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n\n            this.selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n\n    /** Emits change event to set the model value. */\n    private propagateChanges(fallbackValue?: any) {\n        let valueToEmit: any = null;\n\n        if (this.multiple) {\n            valueToEmit = (this.selected as any).map((option) => option.value);\n        } else {\n            valueToEmit = this.selected ? (this.selected as any).value : fallbackValue;\n        }\n\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this.onChange(valueToEmit);\n        this.selectionChange.emit(new McTreeSelectChange(this as any, valueToEmit));\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** Records option IDs to pass to the aria-owns property. */\n    private setOptionIds() {\n        this.optionIds = this.options.map((option) => option.id).join(' ');\n    }\n\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    private highlightCorrectOption() {\n        if (this.tree.keyManager) {\n            if (this.empty) {\n                this.tree.keyManager.setFirstItemActive();\n            } else {\n                this.tree.keyManager.setActiveItem(this.selectionModel.selected[0]);\n            }\n        }\n    }\n\n    /** Scrolls the active option into view. */\n    private scrollActiveOptionIntoView() {\n        const activeOptionIndex = this.tree.keyManager.activeItemIndex || 0;\n\n        this.panel.nativeElement.scrollTop = getOptionScrollPosition(\n            activeOptionIndex,\n            this.getItemHeight(),\n            this.panel.nativeElement.scrollTop,\n            SELECT_PANEL_MAX_HEIGHT\n        );\n    }\n\n    /** Gets the index of the provided option in the option list. */\n    private getOptionIndex(option: McTreeOption): number | undefined {\n        // todo разобраться с этим срачем!\n        return this.options.reduce((result: number, current: McTreeOption, index: number) => {\n            /* tslint:disable-next-line:strict-type-predicates */\n            return result === undefined ? (option === current ? index : undefined) : result;\n        }, undefined);\n    }\n\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    private calculateOverlayPosition() {\n        const itemHeight = this.getItemHeight();\n        const items = this.getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n\n        // If no value is selected we open the popup to the first item.\n        const selectedOptionOffset =\n            this.empty ? 0 : this.getOptionIndex(this.selectionModel.selected[0])!;\n\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /* tslint:disable-next-line:no-magic-numbers */\n        const scrollBuffer = panelHeight / 2;\n        this.scrollTop = this.calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this.offsetY = this.calculateOverlayOffsetY();\n\n        this.checkOverlayWithinViewport(maxScroll);\n    }\n\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    private calculateOverlayOffsetX() {\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this.viewportRuler.getViewportSize();\n        const isRtl = this.isRtl();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const paddingWidth = SELECT_PANEL_PADDING_X * 2;\n        let offsetX: number = SELECT_PANEL_PADDING_X;\n\n        // Invert the offset in LTR.\n        if (!isRtl) { offsetX *= -1; }\n\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        } else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    private calculateOverlayOffsetY(): number {\n        // const itemHeight = this.getItemHeight();\n        // const optionHeightAdjustment = (itemHeight - this.triggerRect.height) / 2;\n\n        // todo I'm not sure that we will use it\n        return 0;\n        // return Math.round(-optionHeightAdjustment);\n    }\n\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    private checkOverlayWithinViewport(maxScroll: number) {\n        const itemHeight = this.getItemHeight();\n        const viewportSize = this.viewportRuler.getViewportSize();\n\n        const topSpaceAvailable = this.triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable =\n            viewportSize.height - this.triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n\n        const panelHeightTop = Math.abs(this.offsetY);\n        const totalPanelHeight =\n            Math.min(this.getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this.triggerRect.height;\n\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this.adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        } else if (panelHeightTop > topSpaceAvailable) {\n            this.adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        } else {\n            this.transformOrigin = this.getOriginBasedOnOption();\n        }\n    }\n\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    private adjustPanelUp(panelHeightBottom: number, bottomSpaceAvailable: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this.scrollTop -= distanceBelowViewport;\n        this.offsetY -= distanceBelowViewport;\n        this.transformOrigin = this.getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this.scrollTop <= 0) {\n            this.scrollTop = 0;\n            this.offsetY = 0;\n            this.transformOrigin = `50% bottom 0px`;\n        }\n    }\n\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    private adjustPanelDown(panelHeightTop: number, topSpaceAvailable: number, maxScroll: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this.scrollTop += distanceAboveViewport;\n        this.offsetY += distanceAboveViewport;\n        this.transformOrigin = this.getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this.scrollTop >= maxScroll) {\n            this.scrollTop = maxScroll;\n            this.offsetY = 0;\n            this.transformOrigin = `50% top 0px`;\n\n            return;\n        }\n    }\n\n    /** Sets the transform origin point based on the selected option. */\n    private getOriginBasedOnOption(): string {\n        const itemHeight = this.getItemHeight();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const optionHeightAdjustment = (itemHeight - this.triggerRect.height) / 2;\n        /* tslint:disable-next-line:no-magic-numbers */\n        const originY = Math.abs(this.offsetY) - optionHeightAdjustment + itemHeight / 2;\n\n        return `50% ${originY}px 0px`;\n    }\n\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    private getItemCount(): number {\n        return this.options.length;\n    }\n\n    /** Calculates the height of the select's options. */\n    private getItemHeight(): number {\n        // todo доделать\n        /* tslint:disable-next-line:no-magic-numbers */\n        return 32;\n        // return this.triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n\n    /** Comparison function to specify which option is displayed. Defaults to object equality. */\n    private _compareWith = (o1: any, o2: any) => o1 === o2;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\nimport { MC_SELECT_SCROLL_STRATEGY_PROVIDER, McPseudoCheckboxModule } from '@ptsecurity/mosaic/core';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport { McTagModule } from '@ptsecurity/mosaic/tag';\nimport { McTreeModule } from '@ptsecurity/mosaic/tree';\n\nimport { McTreeSelect, McTreeSelectTrigger } from './tree-select.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        CdkTreeModule,\n        McTreeModule,\n        McIconModule,\n        McTagModule,\n        McPseudoCheckboxModule\n    ],\n    exports: [McTreeSelect, McTreeSelectTrigger, CommonModule],\n    declarations: [McTreeSelect, McTreeSelectTrigger],\n    providers: [MC_SELECT_SCROLL_STRATEGY_PROVIDER]\n})\nexport class McTreeSelectModule {}\n","import {\n    Directive, DoCheck, ElementRef, Inject,\n    Input, OnChanges, OnDestroy, Optional,\n    Self, InjectionToken, NgZone, OnInit\n} from '@angular/core';\nimport { FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { fromEvent, Subscription, Subject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\n\nexport const MC_TEXTAREA_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_TEXTAREA_VALUE_ACCESSOR');\n\nlet nextUniqueId = 0;\n\nconst ROW_SEPARATOR = '\\n';\n\nexport class McTextareaBase {\n    constructor(public defaultErrorStateMatcher: ErrorStateMatcher,\n                public parentForm: NgForm,\n                public parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McTextareaMixinBase: CanUpdateErrorStateCtor & typeof McTextareaBase = mixinErrorState(McTextareaBase);\n\n@Directive({\n    selector: 'textarea[mcTextarea]',\n    exportAs: 'mcTextarea',\n    host: {\n        class: 'mc-textarea',\n        '[class.mc-textarea-resizable]': '!canGrow',\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[attr.aria-invalid]': 'errorState',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': 'focusChanged(false)',\n        '(focus)': 'focusChanged(true)'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McTextarea }]\n})\nexport class McTextarea extends McTextareaMixinBase implements McFormFieldControl<any>, OnInit, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    @Input() canGrow: boolean = true;\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-textarea';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this.uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this.valueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this.valueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected uid = `mc-textsrea-${nextUniqueId++}`;\n    protected previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n\n    private valueAccessor: { value: any };\n    private growSubscription: Subscription;\n\n    private lineHeight: number = 0;\n    private freeRowsHeight: number = 0;\n    private minHeight: number = 0;\n\n    constructor(protected elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() parentForm: NgForm,\n                @Optional() parentFormGroup: FormGroupDirective,\n                defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_TEXTAREA_VALUE_ACCESSOR) inputValueAccessor: any,\n                private ngZone: NgZone) {\n        super(defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the textarea value\n        // accessor.\n        this.valueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        const growObserver = fromEvent(elementRef.nativeElement, 'input')\n            /*.pipe(\n                map((event: any) => this.getGrowHeight()),\n                // map((event: any) => event.target.scrollHeight),\n                distinctUntilChanged()\n            )*/;\n        this.growSubscription = growObserver.subscribe(this.grow.bind(this));\n    }\n\n    ngOnInit() {\n        setTimeout(() => this.grow(), 0);\n        this.lineHeight = parseInt(getComputedStyle(this.elementRef.nativeElement).lineHeight!, 10);\n\n        const paddingTop = parseInt(getComputedStyle(this.elementRef.nativeElement).paddingTop!, 10);\n        const paddingBottom = parseInt(getComputedStyle(this.elementRef.nativeElement).paddingBottom!, 10);\n\n        // tslint:disable-next-line:no-magic-numbers\n        this.minHeight = this.lineHeight * 2 + paddingTop + paddingBottom;\n        this.freeRowsHeight = this.lineHeight;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        this.growSubscription.unsubscribe();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    /** Grow textarea height to avoid vertical scroll  */\n    grow() {\n        if (!this.canGrow) {\n            return;\n        }\n\n        this.ngZone.runOutsideAngular(() => {\n            const textarea = this.elementRef.nativeElement;\n\n            const outerHeight = parseInt(window.getComputedStyle(textarea).height!, 10);\n            const diff = outerHeight - textarea.clientHeight;\n\n            textarea.style.height = 0; // this line is important to height recalculation\n\n            const height = Math.max(this.minHeight, textarea.scrollHeight + diff + this.freeRowsHeight);\n            textarea.style.height = `${height}px`;\n        });\n    }\n\n    /** Focuses the textarea. */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the textarea changes. */\n    focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native textarea `value` property. */\n    protected dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the textarea is invalid based on the native validation. */\n    protected isBadInput(): boolean {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this.elementRef.nativeElement as HTMLTextAreaElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private getGrowHeight(): number {\n        const textarea = this.elementRef.nativeElement;\n        const outerHeight = parseInt(window.getComputedStyle(textarea).height!.toString(), 10);\n        const diff = outerHeight - textarea.clientHeight;\n\n        return Math.max(this.minHeight, textarea.scrollHeight + diff);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McTextarea } from './textarea.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McTextarea],\n    declarations: [McTextarea]\n})\nexport class McTextareaModule {\n}\n","import {\n    Directive,\n    DoCheck,\n    ElementRef,\n    forwardRef,\n    Inject,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Renderer2,\n    Self\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroupDirective,\n    NG_VALIDATORS,\n    NgControl,\n    NgForm,\n    ValidationErrors,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { MC_INPUT_VALUE_ACCESSOR } from '@ptsecurity/mosaic/input';\nimport {\n    noop,\n    Subject\n} from 'rxjs';\n\nimport {\n    ARROW_DOWN_KEYCODE,\n    ARROW_LEFT_KEYCODE,\n    ARROW_RIGHT_KEYCODE,\n    ARROW_UP_KEYCODE,\n    DEFAULT_TIME_FORMAT,\n    HOURS_PER_DAY,\n    HOURS_MINUTES_REGEXP,\n    HOURS_MINUTES_SECONDS_REGEXP,\n    HOURS_ONLY_REGEXP,\n    MINUTES_PER_HOUR,\n    SECONDS_PER_MINUTE,\n    TIMEFORMAT_PLACEHOLDERS,\n    TimeFormats,\n    TimeParts\n} from './timepicker.constants';\n\n\nlet uniqueComponentIdSuffix: number = 0;\n\nconst formValidators: WeakMap<FormControl, ValidatorFn | null> = new WeakMap();\nconst formValidatorOnChangeRegistrators: WeakMap<FormControl, () => void> = new WeakMap();\nconst validatorOnChange = (c: FormControl) => {\n    const validatorOnChangeHandler = formValidatorOnChangeRegistrators.get(c);\n\n    if (validatorOnChangeHandler !== undefined) { validatorOnChangeHandler(); }\n};\n\nexport class McTimepickerBase {\n    constructor(\n        public defaultErrorStateMatcher: ErrorStateMatcher,\n        public parentForm: NgForm,\n        public parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl) { }\n}\n\n// tslint:disable-next-line naming-convention\nexport const McTimepickerMixinBase:\n    CanUpdateErrorStateCtor &\n    typeof McTimepickerBase = mixinErrorState(McTimepickerBase);\n\n@Directive({\n    selector: 'input[mcTimepicker]',\n    exportAs: 'mcTimepickerInput',\n    host: {\n        class: 'mc-timepicker mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '[attr.time-format]': 'timeFormat',\n        '[attr.min-time]': 'minTime',\n        '[attr.max-time]': 'maxTime',\n        '[attr.value]': 'value',\n        '[attr.aria-invalid]': 'errorState',\n        '(blur)': 'onBlur()',\n        '(focus)': 'focusChanged(true)',\n        '(input)': 'onInput()',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    },\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useValue: {\n                validate(c: FormControl) {\n                    // TODO This is `workaround` to bind singleton-like Validator implementation to\n                    // context of each validated component. This MUST be realized in proper way!\n                    if (this.__validatorOnChangeHandler !== undefined) {\n                        formValidatorOnChangeRegistrators.set(c, this.__validatorOnChangeHandler);\n                        this.__validatorOnChangeHandler = undefined;\n                    }\n                    const validator = formValidators.get(c);\n\n                    return validator ? validator(c) : null;\n                },\n                registerOnValidatorChange(fn: () => void): void {\n                    this.__validatorOnChangeHandler = fn;\n                }\n            },\n            multi: true\n        },\n        {\n            provide: McFormFieldControl,\n            useExisting: forwardRef(() => McTimepicker)\n        }\n    ]\n\n})\nexport class McTimepicker extends McTimepickerMixinBase\n    implements McFormFieldControl<any>,\n        OnChanges,\n        OnDestroy,\n        DoCheck,\n        CanUpdateErrorState,\n        ControlValueAccessor {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-timepicker';\n\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) { return this.ngControl.disabled; }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n        }\n\n        this.stateChanges.next();\n    }\n\n    @Input()\n    get id(): string { return this._id; }\n\n    set id(value: string) { this._id = value || this.uid; }\n\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean { return this._required; }\n\n    set required(value: boolean) { this._required = coerceBooleanProperty(value); }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string { return this.inputValueAccessor.value; }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this.inputValueAccessor.value = value;\n            this.applyInputChanges();\n        }\n    }\n\n    @Input('time-format')\n    get timeFormat(): TimeFormats { return this._timeFormat; }\n\n    set timeFormat(formatValue: TimeFormats) {\n        this._timeFormat = Object\n            .keys(TimeFormats)\n            .map((timeFormatKey) => TimeFormats[timeFormatKey])\n            .indexOf(formatValue) > -1 ? formatValue : DEFAULT_TIME_FORMAT;\n\n        validatorOnChange(<FormControl> this.ngControl.control);\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[this._timeFormat];\n    }\n\n    @Input('min-time')\n    get minTime(): string | null { return this._minTime; }\n\n    set minTime(minValue: string | null) {\n        this._minTime = minValue;\n        this.minDateTime = minValue !== null ? this.getDateFromTimeString(minValue) : undefined;\n        validatorOnChange(<FormControl> this.ngControl.control);\n    }\n\n    @Input('max-time')\n    get maxTime(): string | null { return this._maxTime; }\n\n    set maxTime(maxValue: string | null) {\n        this._maxTime = maxValue;\n        this.maxDateTime = maxValue !== null ? this.getDateFromTimeString(maxValue) : undefined;\n        validatorOnChange(<FormControl> this.ngControl.control);\n    }\n\n    private _id: string;\n    private readonly uid = `mc-timepicker-${uniqueComponentIdSuffix++}`;\n    private _disabled: boolean;\n    private _required: boolean;\n    private previousNativeValue: any;\n    private readonly inputValueAccessor: { value: any };\n    private onChange: (value: any) => void;\n    private onTouched: () => void;\n    private _timeFormat: TimeFormats;\n    private _minTime: string | null = null;\n    private minDateTime: Date | undefined;\n    private _maxTime: string | null = null;\n    private maxDateTime: Date | undefined;\n    private currentDateTimeInput: Date | undefined;\n\n    constructor(private readonly elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() parentForm: NgForm,\n                @Optional() parentFormGroup: FormGroupDirective,\n                defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any,\n                private readonly renderer: Renderer2) {\n        super(defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\n\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this.inputValueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n        this.onChange = noop;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[DEFAULT_TIME_FORMAT];\n\n        // Instead of NG_VALUE_ACCESSOR (https://github.com/angular/material2/issues/8158#issuecomment-344618103)\n        if (this.ngControl) { this.ngControl.valueAccessor = this; }\n\n        // Substitute initial empty validator with validator linked to directive object instance (workaround)\n\n        formValidators.set(\n            <FormControl> this.ngControl.control,\n            Validators.compose([\n                () => this.parseValidator(),\n                () => this.minTimeValidator(),\n                () => this.maxTimeValidator()\n            ])\n        );\n    }\n\n    ngOnChanges(): void {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck(): void {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    focusChanged(isFocused: boolean): void {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.onTouched();\n            this.stateChanges.next();\n        }\n    }\n\n    onBlur() {\n        this.applyInputChanges();\n        this.focusChanged(false);\n    }\n\n    onPaste($event) {\n        $event.preventDefault();\n        const clipboardUserInput: string = $event.clipboardData.getData('text');\n\n        if (this.getDateFromTimeString(clipboardUserInput) === undefined) { return; }\n\n        this.elementRef.nativeElement.value = clipboardUserInput;\n        this.onInput();\n    }\n\n    onInput() {\n        const initialCursorStart: number = this.elementRef.nativeElement.selectionStart;\n        const initialCursorEnd: number = this.elementRef.nativeElement.selectionEnd;\n        let isAutocompleteTriggered: boolean = false;\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(this.elementRef.nativeElement.value);\n\n        // tslint:disable no-magic-numbers\n        if (hoursOnly &&\n            hoursOnly[1] &&\n            hoursOnly[1].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutes &&\n            hoursAndMinutes[1].length === 1 &&\n            hoursAndMinutes[2] &&\n            hoursAndMinutes[2].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutesAndSeconds &&\n            hoursAndMinutesAndSeconds[1].length === 2 &&\n            hoursAndMinutesAndSeconds[2].length === 2 &&\n            hoursAndMinutesAndSeconds[3] &&\n            hoursAndMinutesAndSeconds[3].length === 2) {\n            isAutocompleteTriggered = true;\n        }\n        // tslint:enable no-magic-numbers\n\n        this.applyInputChanges({ doTimestringReformat: isAutocompleteTriggered });\n\n        this.elementRef.nativeElement.selectionStart = initialCursorStart;\n        this.elementRef.nativeElement.selectionEnd = initialCursorEnd;\n\n        if (isAutocompleteTriggered && this.ngControl.errors === null) {\n            this.createSelectionOfTimeComponentInInput(initialCursorStart + 1);\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    writeValue(value: Date | null): void {\n        if (value !== null) {\n            this.renderer.setProperty(this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(value, this.timeFormat)\n            );\n        }\n        this.onChange(value || null);\n        this.applyInputChanges();\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        const keyCode: string = this.getKeyCode(event);\n\n        if (keyCode === ARROW_UP_KEYCODE || keyCode === ARROW_DOWN_KEYCODE) {\n            this.upDownTimeByArrowKeys(event);\n        }\n        if (keyCode === ARROW_LEFT_KEYCODE || keyCode === ARROW_RIGHT_KEYCODE) {\n            this.switchSelectionBetweenTimeparts(event);\n        }\n    }\n\n    registerOnChange(fn: (value: Date) => void): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    private dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    private isBadInput(): boolean {\n        const validity = (<HTMLInputElement> this.elementRef.nativeElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private applyInputChanges(applyParams: {\n        changedTime?: Date;\n        doTimestringReformat?: boolean;\n    } = {}): void {\n        const { changedTime, doTimestringReformat = true } = applyParams;\n        const timeToApply: Date | undefined = changedTime ||\n            this.getDateFromTimeString(this.elementRef.nativeElement.value);\n        this.currentDateTimeInput = timeToApply;\n\n        if (doTimestringReformat && timeToApply !== undefined) {\n            const selectionStart: number = this.elementRef.nativeElement.selectionStart;\n            const selectionEnd: number = this.elementRef.nativeElement.selectionEnd;\n            this.renderer.setProperty(\n                this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(timeToApply, this.timeFormat));\n            this.elementRef.nativeElement.selectionStart = selectionStart;\n            this.elementRef.nativeElement.selectionEnd = selectionEnd;\n        }\n\n        (<FormControl> this.ngControl.control).updateValueAndValidity();\n        const result = this.ngControl.errors === null && timeToApply !== undefined ? timeToApply : null;\n        this.onChange(result);\n        this.stateChanges.next();\n    }\n\n    private upDownTimeByArrowKeys(event: KeyboardEvent): void {\n        event.preventDefault();\n\n        let changedTime: Date | undefined = this.currentDateTimeInput;\n        if (changedTime !== undefined) {\n            const cursorPos = this.elementRef.nativeElement.selectionStart;\n\n            const modifiedTimePart = this.getTimeEditMetrics(cursorPos)\n                .modifiedTimePart;\n            const keyCode: string = this.getKeyCode(event);\n            if (keyCode === ARROW_UP_KEYCODE) { changedTime = this.incrementTime(changedTime, modifiedTimePart); }\n            if (keyCode === ARROW_DOWN_KEYCODE) { changedTime = this.decrementTime(changedTime, modifiedTimePart); }\n            this.applyInputChanges({ changedTime });\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    private switchSelectionBetweenTimeparts(event: KeyboardEvent): void {\n        const changedTime: Date | undefined = this.currentDateTimeInput;\n        const keyCode: string = this.getKeyCode(event);\n\n        if (changedTime !== undefined) {\n            let cursorPos: number = this.elementRef.nativeElement.selectionStart;\n            if (keyCode === ARROW_LEFT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfPrevTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            } else if (keyCode === ARROW_RIGHT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfNextTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            }\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    /**\n     * @description Microsoft EDGE doesn't support KeyboaedEvent.code thus we need this helper\n     */\n    private getKeyCode(event: KeyboardEvent): string {\n        return event.code || event.key;\n    }\n\n    private createSelectionOfTimeComponentInInput(cursorPos: number): void {\n        setTimeout(() => {\n            const newEditParams = this.getTimeEditMetrics(cursorPos);\n            this.elementRef.nativeElement.selectionStart = newEditParams.cursorStartPosition;\n            this.elementRef.nativeElement.selectionEnd = newEditParams.cursorEndPosition;\n        });\n    }\n\n    private incrementTime(dateVal: Date,\n                          whatToIncrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToIncrement) {\n            case TimeParts.hours:\n                hours++;\n                break;\n            case TimeParts.minutes:\n                minutes++;\n                break;\n            case TimeParts.seconds:\n                seconds++;\n                break;\n            default:\n        }\n\n        if (seconds > SECONDS_PER_MINUTE) { seconds = 0; }\n\n        if (minutes > MINUTES_PER_HOUR) { minutes = 0; }\n\n        if (hours > HOURS_PER_DAY) { hours = 0; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    /**\n     * @description Decrement part of time\n     */\n    private decrementTime(dateVal: Date,\n                          whatToDecrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToDecrement) {\n            case TimeParts.hours:\n                hours--;\n                break;\n            case TimeParts.minutes:\n                minutes--;\n                break;\n            case TimeParts.seconds:\n                seconds--;\n                break;\n            default:\n        }\n\n        if (seconds < 0) { seconds = SECONDS_PER_MINUTE; }\n\n        if (minutes < 0) { minutes = MINUTES_PER_HOUR; }\n\n        if (hours < 0) { hours = HOURS_PER_DAY; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    private getCursorPositionOfPrevTimePartStart(cursorPos: number, timeString: string): number {\n        return cursorPos === 0 ? timeString.length : cursorPos - 1;\n    }\n\n    private getCursorPositionOfNextTimePartStart(cursorPos: number,\n                                                 timeString: string,\n                                                 timeDevider: string = ':'): number {\n        const nextDividerPos: number = timeString.indexOf(timeDevider, cursorPos);\n\n        return nextDividerPos !== undefined ? nextDividerPos + 1 : 0;\n    }\n\n    /**\n     * @description Get params for arrow-keys (up/down) time valie edit.\n     * @param cursorPosition Current cursor position in timeString\n     */\n    private getTimeEditMetrics(cursorPosition: number): {\n        modifiedTimePart: TimeParts;\n        cursorStartPosition: number;\n        cursorEndPosition: number;\n    } {\n        const timeString: string = this.elementRef.nativeElement.value;\n        let modifiedTimePart: TimeParts;\n        let cursorStartPosition: number;\n        let cursorEndPosition: number;\n        const hoursIndex = 0;\n        const minutesIndex = timeString.indexOf(':', hoursIndex + 1);\n        const secondsIndex = minutesIndex !== -1 ? timeString.indexOf(':', minutesIndex + 1) : -1;\n\n        if (secondsIndex !== -1 && cursorPosition > secondsIndex) {\n            modifiedTimePart = TimeParts.seconds;\n            cursorStartPosition = secondsIndex + 1;\n            cursorEndPosition = timeString.length;\n        } else if (minutesIndex !== -1 && cursorPosition > minutesIndex) {\n            modifiedTimePart = TimeParts.minutes;\n            cursorStartPosition = minutesIndex + 1;\n            cursorEndPosition = secondsIndex > -1 ? secondsIndex : timeString.length;\n        } else {\n            modifiedTimePart = TimeParts.hours;\n            cursorStartPosition = hoursIndex;\n            cursorEndPosition = minutesIndex !== -1 ? minutesIndex : timeString.length;\n        }\n\n        return {\n            modifiedTimePart,\n            cursorStartPosition,\n            cursorEndPosition\n        };\n    }\n\n    /**\n     * @description Create time string for displaying inside input element of UI\n     */\n    private getTimeStringFromDate(tempVal: Date,\n                                  timeFormat: TimeFormats = DEFAULT_TIME_FORMAT): string {\n        const hours: string = this.getNumberWithLeadingZero(tempVal.getHours());\n        const minutes: string = this.getNumberWithLeadingZero(tempVal.getMinutes());\n        const seconds: string = this.getNumberWithLeadingZero(tempVal.getSeconds());\n\n        const formattedTimeGenerators = {\n            [TimeFormats.HHmm]: () => `${hours}:${minutes}`,\n            [TimeFormats.HHmmss]: () => `${hours}:${minutes}:${seconds}`\n        };\n\n        return formattedTimeGenerators[timeFormat]();\n    }\n\n    private getParsedTimeParts(timeString: string): {\n        hoursOnly: any;\n        hoursAndMinutes: any;\n        hoursAndMinutesAndSeconds: any;\n    } {\n        const hoursAndMinutesAndSeconds = timeString.match(HOURS_MINUTES_SECONDS_REGEXP);\n        const hoursAndMinutes = timeString.match(HOURS_MINUTES_REGEXP);\n        const hoursOnly = timeString.match(HOURS_ONLY_REGEXP);\n\n        return {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        };\n    }\n\n    /**\n     * @description Create Date object from separate parts of time\n     */\n    private getDateFromTimeDigits(hours: number, minutes: number, seconds: number = 0): Date | undefined {\n        return this.getDateFromTimeString(`${hours}:${minutes}:${seconds}`);\n    }\n\n    private getDateFromTimeString(timeString: string | undefined): Date | undefined {\n        // TODO Use moment-js\n        if (timeString === undefined) { return; }\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(timeString);\n\n        if (timeString.trim().length === 0 ||\n            hoursOnly === null && hoursAndMinutes === null && hoursAndMinutesAndSeconds === null) {\n            return;\n        }\n\n        // tslint:disable no-magic-numbers\n        let hours: number = 0;\n        let minutes: number = 0;\n        let seconds: number = 0;\n\n        if (hoursOnly) {\n            hours = Number(hoursOnly[1]);\n        } else if (hoursAndMinutes) {\n            hours = Number(hoursAndMinutes[1]);\n            minutes = Number(hoursAndMinutes[2]);\n        } else if (hoursAndMinutesAndSeconds) {\n            hours = Number(hoursAndMinutesAndSeconds[1]);\n            minutes = Number(hoursAndMinutesAndSeconds[2]);\n            seconds = Number(hoursAndMinutesAndSeconds[3]);\n        }\n        // const timestamp: number = Date.parse(fullDateString);\n        const resultDate: Date = new Date(1970, 0, 1, hours, minutes, seconds);\n        // tslint:enable no-magic-numbers\n\n        return isNaN(resultDate.getTime()) ? undefined : resultDate;\n    }\n\n    private getNumberWithLeadingZero(digit: number): string {\n        const MAX_DIGIT_WITH_LEADING_ZERO: number = 9;\n\n        return digit > MAX_DIGIT_WITH_LEADING_ZERO ? `${digit}` : `0${digit}`;\n    }\n\n    private getTimeDigitsFromDate(dateVal: Date): { hours: number; minutes: number; seconds: number } {\n        return {\n            hours: dateVal.getHours(),\n            minutes: dateVal.getMinutes(),\n            seconds: dateVal.getSeconds()\n        };\n    }\n\n    private parseValidator(): ValidationErrors | null {\n        return this.currentDateTimeInput === undefined ?\n            { mcTimepickerParse: { text: this.elementRef.nativeElement.value } } :\n            null;\n    }\n\n    private minTimeValidator(): ValidationErrors | null {\n\n        if (this.currentDateTimeInput !== undefined &&\n            this.minDateTime !== undefined &&\n            this.isTimeLowerThenMin(this.currentDateTimeInput)) {\n            return { mcTimepickerLowerThenMintime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private maxTimeValidator(): ValidationErrors | null {\n        if (this.currentDateTimeInput !== undefined &&\n            this.maxDateTime !== undefined &&\n            this.isTimeGreaterThenMax(this.currentDateTimeInput)) {\n            return { mcTimepickerHigherThenMaxtime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private isTimeLowerThenMin(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.minDateTime).getTime() < 0;\n    }\n\n    private isTimeGreaterThenMax(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.maxDateTime).getTime() >= 0;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTimepicker } from './timepicker';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        FormsModule\n    ],\n    declarations: [\n        McTimepicker\n    ],\n    exports: [\n        McTimepicker\n    ]\n})\nexport class McTimepickerModule {}\n","import { InjectionToken } from '@angular/core';\n\n\n/** Injection token that can be used to access the data that was passed in to a sidepanel. */\nexport const MC_SIDEPANEL_DATA = new InjectionToken<any>('McSidepanelData');\n\nexport enum McSidepanelPosition {\n    Right = 'right',\n    Left = 'left',\n    Top = 'top',\n    Bottom = 'bottom'\n}\n\nexport class McSidepanelConfig<D = any> {\n    /** ID for the sidepanel. If omitted, a unique one will be generated. */\n    id?: string;\n\n    /** Data being injected into the child component. */\n    data?: D | null = null;\n\n    position?: McSidepanelPosition = McSidepanelPosition.Right;\n\n    /** Whether the sidepanel has a backdrop. */\n    hasBackdrop?: boolean = true;\n\n    /** When we open multiple sidepanels, backdrop appears only once, except cases then this flag is true. */\n    requiredBackdrop?: boolean = false;\n\n    /** Whether the user can use escape or clicking outside to close the sidepanel. */\n    disableClose?: boolean = false;\n\n    /** Custom class for the overlay pane. */\n    overlayPanelClass?: string | string[] = '';\n}\n","import { animate, AnimationTriggerMetadata, state, style, transition, trigger } from '@angular/animations';\nimport { AnimationCurves } from '@ptsecurity/mosaic/core';\n\nimport { McSidepanelPosition } from './sidepanel-config';\n\n\nexport enum McSidepanelAnimationState {\n    Void = 'void',\n    Visible = 'visible',\n    Hidden = 'hidden'\n}\n\n// TODO Find a way to use dynamic keys and avoid error \"Expression form not supported.\"\n// tslint:disable-next-line\nexport const mcSidepanelTransformAnimation: Record<McSidepanelPosition, { in: string; out: string }> = {\n    right: { in: 'translateX(100%)', out: 'translateX(0%)' },\n    left: { in: 'translateX(-100%)', out: 'translateX(0%)' },\n    top: { in: 'translateY(-100%)', out: 'translateY(0%)' },\n    bottom: { in: 'translateY(100%)', out: 'translateY(0%)' }\n};\n\nexport const mcSidepanelAnimations: {\n    readonly sidepanelState: AnimationTriggerMetadata;\n} = {\n    sidepanelState: trigger('state', [\n        state('hidden',\n            style({ transform: '{{transformIn}}' }),\n            { params: { transformIn: mcSidepanelTransformAnimation[McSidepanelPosition.Right].in }}\n        ),\n        state('visible',\n            style({ transform: '{{transformOut}}' }),\n            { params: { transformOut: mcSidepanelTransformAnimation[McSidepanelPosition.Right].out }}\n        ),\n        transition('visible => void, visible => hidden',\n            animate(`200ms ${AnimationCurves.AccelerationCurve}`)),\n        transition('void => visible',\n            animate(`200ms ${AnimationCurves.DecelerationCurve}`))\n    ])\n};\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ComponentRef,\n    ElementRef,\n    EmbeddedViewRef,\n    EventEmitter, Inject, InjectionToken,\n    OnDestroy,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal } from '@ptsecurity/cdk/portal';\n\nimport {\n    mcSidepanelAnimations,\n    McSidepanelAnimationState,\n    mcSidepanelTransformAnimation\n} from './sidepanel-animations';\n\nimport { McSidepanelConfig, McSidepanelPosition } from './sidepanel-config';\n\n\nexport const MC_SIDEPANEL_WITH_INDENT =\n    new InjectionToken<boolean>('mc-sidepanel-with-indent');\n\nexport const MC_SIDEPANEL_WITH_SHADOW =\n    new InjectionToken<boolean>('mc-sidepanel-with-shadow');\n\n@Component({\n    selector: 'mc-sidepanel-container',\n    templateUrl: './sidepanel-container.component.html',\n    styleUrls: ['./sidepanel.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    animations: [mcSidepanelAnimations.sidepanelState],\n    host: {\n        class: 'mc-sidepanel-container',\n        tabindex: '-1',\n        role: 'dialog',\n        'aria-modal': 'true',\n        '[attr.id]': 'id',\n        '[@state]': `{\n            value: animationState,\n            params: animationTransform\n        }`,\n        '(@state.start)': 'onAnimation($event)',\n        '(@state.done)': 'onAnimation($event)'\n    }\n})\nexport class McSidepanelContainerComponent extends BasePortalOutlet implements OnDestroy {\n    /** ID for the container DOM element. */\n    id: string;\n\n    /** The portal outlet inside of this container into which the content will be loaded. */\n    @ViewChild(CdkPortalOutlet) portalOutlet: CdkPortalOutlet;\n\n    /** The state of the sidepanel animations. */\n    animationState: McSidepanelAnimationState = McSidepanelAnimationState.Void;\n\n    animationTransform: { transformIn: string; transformOut: string };\n\n    /** Emits whenever the state of the animation changes. */\n    animationStateChanged = new EventEmitter<AnimationEvent>();\n\n    /** Whether the component has been destroyed. */\n    private destroyed: boolean;\n\n    constructor(\n        private elementRef: ElementRef<HTMLElement>,\n        private changeDetectorRef: ChangeDetectorRef,\n        public sidepanelConfig: McSidepanelConfig,\n        @Inject(MC_SIDEPANEL_WITH_INDENT) public withIndent: boolean,\n        @Inject(MC_SIDEPANEL_WITH_SHADOW) public withShadow: boolean) {\n        super();\n    }\n\n    ngOnDestroy(): void {\n        this.destroyed = true;\n    }\n\n    /** Attach a component portal as content to this sidepanel container. */\n    attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n        this.validatePortalAttached();\n        this.setAnimation();\n        this.setPanelClass();\n\n        return this.portalOutlet.attachComponentPortal(portal);\n    }\n\n    /** Attach a template portal as content to this sidepanel container. */\n    attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n        this.validatePortalAttached();\n        this.setAnimation();\n        this.setPanelClass();\n\n        return this.portalOutlet.attachTemplatePortal(portal);\n    }\n\n    /** Begin animation of the sidepanel entrance into view. */\n    enter(): void {\n        if (!this.destroyed) {\n            this.animationState = McSidepanelAnimationState.Visible;\n            this.changeDetectorRef.detectChanges();\n        }\n    }\n\n    /** Begin animation of the sidepanel exiting from view. */\n    exit(): void {\n        if (!this.destroyed) {\n            this.animationState = McSidepanelAnimationState.Hidden;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    onAnimation(event: AnimationEvent) {\n        this.animationStateChanged.emit(event);\n    }\n\n    private setAnimation() {\n        const position: McSidepanelPosition = this.sidepanelConfig.position!;\n\n        this.animationTransform = {\n            transformIn: mcSidepanelTransformAnimation[position].in,\n            transformOut: mcSidepanelTransformAnimation[position].out\n        };\n    }\n\n    private setPanelClass() {\n        const element: HTMLElement = this.elementRef.nativeElement;\n        const position: McSidepanelPosition = this.sidepanelConfig.position!;\n\n        element.classList.add(`mc-sidepanel-container_${position}`);\n\n        if (this.withShadow) {\n            element.classList.add('mc-sidepanel-container_shadowed');\n        }\n    }\n\n    private validatePortalAttached() {\n        if (this.portalOutlet.hasAttached()) {\n            throw Error('Attempting to attach sidepanel content after content is already attached');\n        }\n    }\n}\n","import { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { merge, Observable, Subject } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\n\nimport { McSidepanelAnimationState } from './sidepanel-animations';\nimport { McSidepanelConfig } from './sidepanel-config';\nimport { McSidepanelContainerComponent } from './sidepanel-container.component';\n\n\n// Counter for unique sidepanel ids.\nlet uniqueId = 0;\n\nexport class McSidepanelRef<T = any, R = any> {\n    readonly id: string;\n\n    /** Instance of the component making up the content of the sidepanel. */\n    instance: T;\n\n    /** Subject for notifying the user that the sidepanel has been closed and dismissed. */\n    private readonly afterClosed$ = new Subject<R | undefined>();\n\n    /** Subject for notifying the user that the sidepanel has opened and appeared. */\n    private readonly afterOpened$ = new Subject<void>();\n\n    /** Result to be passed down to the `afterDismissed` stream. */\n    private result: R | undefined;\n\n    constructor(\n        public containerInstance: McSidepanelContainerComponent,\n        private overlayRef: OverlayRef,\n        public config: McSidepanelConfig) {\n\n        this.id = this.config.id || `mc-sidepanel-${uniqueId++}`;\n        this.containerInstance.id = this.id;\n\n        // Emit when opening animation completes\n        containerInstance.animationStateChanged.pipe(\n            filter(\n                (event) => event.phaseName === 'done' && event.toState === McSidepanelAnimationState.Visible\n            ),\n            take(1)\n        ).subscribe(() => {\n            this.afterOpened$.next();\n            this.afterOpened$.complete();\n        });\n\n        // Dispose overlay when closing animation is complete\n        containerInstance.animationStateChanged.pipe(\n            filter(\n                (event) => event.phaseName === 'done' && event.toState === McSidepanelAnimationState.Hidden\n            ),\n            take(1)\n        ).subscribe(() => {\n            overlayRef.dispose();\n            this.afterClosed$.next(this.result);\n            this.afterClosed$.complete();\n        });\n\n        if (!containerInstance.sidepanelConfig.disableClose) {\n            merge(\n                overlayRef.backdropClick(),\n                overlayRef.keydownEvents().pipe(\n                    // tslint:disable:deprecation\n                    // keyCode is deprecated, but IE11 and Edge don't support code property, which we need use instead\n                    filter((event) => event.keyCode === ESCAPE)\n                )\n            ).subscribe(() => this.close());\n        }\n    }\n\n    close(result?: R): void {\n        if (!this.afterClosed$.closed) {\n            // Transition the backdrop in parallel to the sidepanel.\n            this.containerInstance.animationStateChanged.pipe(\n                filter((event) => event.phaseName === 'done'),\n                take(1)\n            ).subscribe(() => this.overlayRef.detachBackdrop());\n\n            this.result = result;\n            this.containerInstance.exit();\n        }\n    }\n\n    /** Gets an observable that is notified when the sidepanel is finished closing. */\n    afterClosed(): Observable<R | undefined> {\n        return this.afterClosed$.asObservable();\n    }\n\n    /** Gets an observable that is notified when the sidepanel has opened and appeared. */\n    afterOpened(): Observable<void> {\n        return this.afterOpened$.asObservable();\n    }\n}\n","import {\n    ComponentRef,\n    Inject,\n    Injectable,\n    InjectionToken,\n    Injector, OnDestroy,\n    Optional,\n    SkipSelf,\n    TemplateRef\n} from '@angular/core';\nimport { Overlay, OverlayConfig, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal, IComponentType, PortalInjector, TemplatePortal } from '@ptsecurity/cdk/portal';\n\nimport { MC_SIDEPANEL_DATA, McSidepanelConfig } from './sidepanel-config';\nimport {\n    McSidepanelContainerComponent,\n    MC_SIDEPANEL_WITH_INDENT,\n    MC_SIDEPANEL_WITH_SHADOW\n} from './sidepanel-container.component';\nimport { McSidepanelRef } from './sidepanel-ref';\n\n\n/** Injection token that can be used to specify default sidepanel options. */\nexport const MC_SIDEPANEL_DEFAULT_OPTIONS =\n    new InjectionToken<McSidepanelConfig>('mc-sidepanel-default-options');\n\n@Injectable()\nexport class McSidepanelService implements OnDestroy {\n    private openedSidepanelsAtThisLevel: McSidepanelRef[] = [];\n\n    /** Keeps track of the currently-open sidepanels. */\n    get openedSidepanels(): McSidepanelRef[] {\n        return this.parentSidepanelService ? this.parentSidepanelService.openedSidepanels :\n            this.openedSidepanelsAtThisLevel;\n    }\n\n    constructor(\n        private overlay: Overlay,\n        private injector: Injector,\n        @Optional() @Inject(MC_SIDEPANEL_DEFAULT_OPTIONS) private defaultOptions: McSidepanelConfig,\n        @Optional() @SkipSelf() private parentSidepanelService: McSidepanelService) {\n    }\n\n    ngOnDestroy() {\n        // Only close the sidepanels at this level on destroy\n        // since the parent service may still be active.\n        this.closeSidepanels(this.openedSidepanelsAtThisLevel);\n    }\n\n    open<T, D = any>(componentOrTemplateRef: IComponentType<T> | TemplateRef<T>,\n                     config?: McSidepanelConfig<D>): McSidepanelRef<T> {\n        const fullConfig = {\n            ...(this.defaultOptions || new McSidepanelConfig()),\n            ...config\n        };\n\n        if (fullConfig.id && this.getSidepanelById(fullConfig.id)) {\n            throw Error(`Sidepanel with id \"${fullConfig.id}\" exists already. The sidepanel id must be unique.`);\n        }\n\n        const overlayRef = this.createOverlay(fullConfig);\n        const container = this.attachContainer(overlayRef, fullConfig);\n        const ref = new McSidepanelRef(container, overlayRef, fullConfig);\n\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            container.attachTemplatePortal(new TemplatePortal<T>(componentOrTemplateRef, null!, {\n                $implicit: fullConfig.data,\n                sidepanelRef: ref\n            } as any));\n        } else {\n            const injector = this.createInjector(fullConfig, ref, container);\n            const portal = new ComponentPortal(componentOrTemplateRef, undefined, injector);\n            const contentRef = container.attachComponentPortal(portal);\n\n            ref.instance = contentRef.instance;\n        }\n\n        this.openedSidepanels.push(ref);\n        ref.afterClosed().subscribe(() => this.removeOpenSidepanel(ref));\n        container.enter();\n\n        return ref;\n    }\n\n    /**\n     * Closes all of the currently-open sidepanels.\n     */\n    closeAll(): void {\n        this.closeSidepanels(this.openedSidepanels);\n    }\n\n    /**\n     * Finds an open sidepanel by its id.\n     * @param id ID to use when looking up the sidepanel.\n     */\n    getSidepanelById(id: string): McSidepanelRef | undefined {\n        return this.openedSidepanels.find((sidepanel) => sidepanel.id === id);\n    }\n\n    /**\n     * Attaches the sidepanel container component to the overlay.\n     */\n    private attachContainer(overlayRef: OverlayRef, config: McSidepanelConfig): McSidepanelContainerComponent {\n        const openedSidepanelsWithSamePosition = this.getOpenedSidepanelsWithSamePosition(config);\n\n        const injector = new PortalInjector(this.injector, new WeakMap<any>([\n            [McSidepanelConfig, config],\n            [MC_SIDEPANEL_WITH_INDENT, openedSidepanelsWithSamePosition.length >= 1],\n            [MC_SIDEPANEL_WITH_SHADOW, openedSidepanelsWithSamePosition.length < 2] // tslint:disable-line\n        ]));\n\n        const containerPortal = new ComponentPortal(McSidepanelContainerComponent, undefined, injector);\n        const containerRef: ComponentRef<McSidepanelContainerComponent> = overlayRef.attach(containerPortal);\n\n        return containerRef.instance;\n    }\n\n    /**\n     * Creates a custom injector to be used inside the sidepanel. This allows a component loaded inside\n     * of a sidepanel to close itself and, optionally, to return a value.\n     * @param config Config object that is used to construct the sidepanel.\n     * @param sidepanelRef Reference to the sidepanel.\n     * @param sidepanelContainer Sidepanel container element that wraps all of the contents.\n     * @returns The custom injector that can be used inside the sidepanel.\n     */\n    private createInjector<T>(\n        config: McSidepanelConfig,\n        sidepanelRef: McSidepanelRef<T>,\n        sidepanelContainer: McSidepanelContainerComponent): PortalInjector {\n\n        // The McSidepanelContainerComponent is injected in the portal as the McSidepanelContainerComponent and\n        // the sidepanel's content are created out of the same ViewContainerRef and as such, are siblings for injector\n        // purposes. To allow the hierarchy that is expected, the McSidepanelContainerComponent is explicitly\n        // added to the injection tokens.\n        const injectionTokens = new WeakMap<any>([\n            [McSidepanelContainerComponent, sidepanelContainer],\n            [MC_SIDEPANEL_DATA, config.data],\n            [McSidepanelRef, sidepanelRef]\n        ]);\n\n        return new PortalInjector(this.injector, injectionTokens);\n    }\n\n    /**\n     * Creates a new overlay and places it in the correct location.\n     * @param config The user-specified sidepanel config.\n     */\n    private createOverlay(config: McSidepanelConfig): OverlayRef {\n        const overlayConfig = new OverlayConfig({\n            hasBackdrop: config.hasBackdrop,\n            backdropClass: this.getBackdropClass(config),\n            maxWidth: '100%',\n            panelClass: config.overlayPanelClass,\n            scrollStrategy: this.overlay.scrollStrategies.block(),\n            positionStrategy: this.overlay.position().global()\n        });\n\n        return this.overlay.create(overlayConfig);\n    }\n\n    private closeSidepanels(sidepanels: McSidepanelRef[]) {\n        const reversedOpenedSidepanels = [...sidepanels.reverse()];\n\n        reversedOpenedSidepanels.forEach((sidepanelRef: McSidepanelRef) => {\n            sidepanelRef.close();\n        });\n    }\n\n    private getBackdropClass(config: McSidepanelConfig): string {\n        const hasOpenedSidepanelWithBackdrop =\n            this.openedSidepanels.some((sidepanelRef) => sidepanelRef.config.hasBackdrop!);\n\n        return config.requiredBackdrop || !hasOpenedSidepanelWithBackdrop ? 'cdk-overlay-dark-backdrop' :\n            'cdk-overlay-transparent-backdrop';\n    }\n\n    private getOpenedSidepanelsWithSamePosition(config: McSidepanelConfig): McSidepanelRef[] {\n        return this.openedSidepanels.filter((sidepanelRef) => sidepanelRef.config.position === config.position);\n    }\n\n    /**\n     * Removes a sidepanel from the array of open sidepanels.\n     * @param sidepanelRef Sidepanel to be removed.\n     */\n    private removeOpenSidepanel(sidepanelRef: McSidepanelRef) {\n        const index = this.openedSidepanels.indexOf(sidepanelRef);\n\n        if (index > -1) {\n            this.openedSidepanels.splice(index, 1);\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { MC_SELECT_SCROLL_STRATEGY_PROVIDER, McOptionModule } from '@ptsecurity/mosaic/core';\nimport { McFormFieldModule } from '@ptsecurity/mosaic/form-field';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport { McTagModule } from '@ptsecurity/mosaic/tag';\n\nimport { McSelect, McSelectTrigger } from './select.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        McOptionModule,\n        McIconModule,\n        McTagModule\n    ],\n    exports: [McFormFieldModule, McSelect, McSelectTrigger, McOptionModule, CommonModule],\n    declarations: [McSelect, McSelectTrigger],\n    providers: [MC_SELECT_SCROLL_STRATEGY_PROVIDER]\n})\nexport class McSelectModule {}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Input,\n    NgZone,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Direction, Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceNumberProperty } from '@ptsecurity/cdk/coercion';\nimport { END, ENTER, HOME, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { ViewportRuler } from '@ptsecurity/cdk/scrolling';\nimport { merge, of as observableOf, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { McTabLabelWrapper } from './tab-label-wrapper';\n\n\nconst VIEWPORT_THROTTLE_TIME = 150;\nconst SCROLL_DISTANCE_DELIMITER = 3;\n\n\n/**\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n\n// Boilerplate for applying mixins to McTabHeader.\n/** @docs-private */\nexport class McTabHeaderBase {}\n\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group.\n * When the tabs list's width exceeds the width of the header container,\n * then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\n@Component({\n    selector: 'mc-tab-header',\n    templateUrl: 'tab-header.html',\n    styleUrls: ['tab-header.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        class: 'mc-tab-header',\n        '[class.mc-tab-header__pagination-controls_enabled]':\n            'showPaginationControls',\n        '[class.mc-tab-header_rtl]': 'getLayoutDirection() == \\'rtl\\''\n    }\n})\nexport class McTabHeader extends McTabHeaderBase\n    implements AfterContentChecked, AfterContentInit, OnDestroy {\n    /** The index of the active tab. */\n    @Input()\n    get selectedIndex(): number {\n        return this._selectedIndex;\n    }\n    set selectedIndex(value: number) {\n        const coercedValue = coerceNumberProperty(value);\n        this.selectedIndexChanged = this._selectedIndex !== coercedValue;\n        this._selectedIndex = coercedValue;\n\n        if (this.keyManager) {\n            this.keyManager.updateActiveItem(coercedValue);\n        }\n    }\n\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex(): number {\n        return this.keyManager ? this.keyManager.activeItemIndex! : 0;\n    }\n\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value: number) {\n        if (\n            !this.isValidIndex(value) ||\n            this.focusIndex === value ||\n            !this.keyManager\n        ) {\n            return;\n        }\n\n        this.keyManager.setActiveItem(value);\n    }\n\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance(): number {\n        return this._scrollDistance;\n    }\n    set scrollDistance(v: number) {\n        this._scrollDistance = Math.max(\n            0,\n            Math.min(this.getMaxScrollDistance(), v)\n        );\n\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this.scrollDistanceChanged = true;\n        this.checkScrollingControls();\n    }\n\n    @ContentChildren(McTabLabelWrapper)\n    labelWrappers: QueryList<McTabLabelWrapper>;\n    @ViewChild('tabListContainer')\n    tabListContainer: ElementRef;\n    @ViewChild('tabList')\n    tabList: ElementRef;\n\n    /** Whether the controls for pagination should be displayed */\n    showPaginationControls = false;\n\n    /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n    disableScrollAfter = true;\n\n    /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n    disableScrollBefore = true;\n\n    /** Event emitted when the option is selected. */\n    @Output()\n    readonly selectFocusedIndex: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted when a label is focused. */\n    @Output()\n    readonly indexFocused: EventEmitter<number> = new EventEmitter<number>();\n\n    /** The distance in pixels that the tab labels should be translated to the left. */\n    private _scrollDistance = 0;\n\n    /** Whether the header should scroll to the selected index after the view has been checked. */\n    private selectedIndexChanged = false;\n\n    /** Emits when the component is destroyed. */\n    private readonly destroyed = new Subject<void>();\n\n    /**\n     * The number of tab labels that are displayed on the header. When this changes, the header\n     * should re-evaluate the scroll position.\n     */\n    private tabLabelCount: number;\n\n    /** Whether the scroll distance has changed and should be applied after the view is checked. */\n    private scrollDistanceChanged: boolean;\n\n    /** Used to manage focus between the tabs. */\n    private keyManager: FocusKeyManager<McTabLabelWrapper>;\n\n    /** Cached text content of the header. */\n    private currentTextContent: string;\n\n    private _selectedIndex: number = 0;\n\n    constructor(\n        private elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        private viewportRuler: ViewportRuler,\n        @Optional() private dir: Directionality,\n        private ngZone: NgZone\n    ) {\n        super();\n    }\n\n    ngAfterContentChecked(): void {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this.tabLabelCount !== this.labelWrappers.length) {\n            this.updatePagination();\n            this.tabLabelCount = this.labelWrappers.length;\n            this.changeDetectorRef.markForCheck();\n        }\n\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this.selectedIndexChanged) {\n            this.scrollToLabel(this._selectedIndex);\n            this.checkScrollingControls();\n            this.selectedIndexChanged = false;\n            this.changeDetectorRef.markForCheck();\n        }\n\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this.scrollDistanceChanged) {\n            this.updateTabScrollPosition();\n            this.scrollDistanceChanged = false;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    handleKeydown(event: KeyboardEvent) {\n        switch (event.keyCode) {\n            case HOME:\n                this.keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case END:\n                this.keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case ENTER:\n            case SPACE:\n                this.selectFocusedIndex.emit(this.focusIndex);\n                event.preventDefault();\n                break;\n            default:\n                this.keyManager.onKeydown(event);\n        }\n    }\n\n    ngAfterContentInit() {\n        const dirChange = this.dir ? this.dir.change : observableOf(null);\n        const resize = this.viewportRuler.change(VIEWPORT_THROTTLE_TIME);\n        const realign = () => {\n            this.updatePagination();\n        };\n\n        this.keyManager = new FocusKeyManager(this.labelWrappers)\n            .withHorizontalOrientation(this.getLayoutDirection())\n            .withWrap();\n\n        this.keyManager.updateActiveItem(0);\n\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame === undefined\n            ? realign()\n            : requestAnimationFrame(realign);\n\n        // On dir change or window resize, update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize)\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(() => {\n                realign();\n                this.keyManager.withHorizontalOrientation(\n                    this.getLayoutDirection()\n                );\n            });\n\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this.keyManager.change\n            .pipe(takeUntil(this.destroyed))\n            .subscribe((newFocusIndex) => {\n                this.indexFocused.emit(newFocusIndex);\n                this.setTabFocus(newFocusIndex);\n            });\n    }\n\n    ngOnDestroy() {\n        this.destroyed.next();\n        this.destroyed.complete();\n    }\n\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    onContentChanges() {\n        const textContent = this.elementRef.nativeElement.textContent;\n\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in.\n\n        if (textContent !== this.currentTextContent) {\n            this.currentTextContent = textContent;\n\n            const zoneCallback = () => {\n                this.updatePagination();\n                this.changeDetectorRef.markForCheck();\n            };\n\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            // TODO: Remove null check for `_ngZone` once it's a required parameter.\n            this.ngZone ? this.ngZone.run(zoneCallback) : zoneCallback();\n        }\n    }\n\n    /**\n     * Updating the view whether pagination should be enabled or not\n     *\n     * WARNING: Calling this method can be very costly in terms of performance.  It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        this.checkPaginationEnabled();\n        this.checkScrollingControls();\n        this.updateTabScrollPosition();\n    }\n\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    isValidIndex(index: number): boolean {\n        if (!this.labelWrappers) {\n            return true;\n        }\n\n        const tab = this.labelWrappers\n            ? this.labelWrappers.toArray()[index]\n            : null;\n\n        return !!tab && !tab.disabled;\n    }\n\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    setTabFocus(tabIndex: number) {\n        if (this.showPaginationControls) {\n            this.scrollToLabel(tabIndex);\n        }\n\n        if (this.labelWrappers && this.labelWrappers.length) {\n            this.labelWrappers.toArray()[tabIndex].focus();\n\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            const containerEl = this.tabListContainer.nativeElement;\n            const dir = this.getLayoutDirection();\n\n            if (dir === 'ltr') {\n                containerEl.scrollLeft = 0;\n            } else {\n                containerEl.scrollLeft =\n                    containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n\n    /** The layout direction of the containing app. */\n    getLayoutDirection(): Direction {\n        return this.dir && this.dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    updateTabScrollPosition() {\n        const scrollDistance = this.scrollDistance;\n        const translateX =\n            this.getLayoutDirection() === 'ltr'\n                ? -scrollDistance\n                : scrollDistance;\n\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer.\n        // See: https://github.com/angular/material2/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this.tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off.\n        this.tabList.nativeElement.scrollLeft = 0;\n    }\n\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    scrollHeader(scrollDir: ScrollDirection) {\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        this.scrollDistance +=\n            ((scrollDir === 'before' ? -1 : 1) * viewLength) / SCROLL_DISTANCE_DELIMITER;\n    }\n\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    scrollToLabel(labelIndex: number) {\n        const selectedLabel = this.labelWrappers\n            ? this.labelWrappers.toArray()[labelIndex]\n            : null;\n\n        if (!selectedLabel) {\n            return;\n        }\n\n        // The view length is the visible width of the tab labels.\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        let labelBeforePos: number;\n        let labelAfterPos: number;\n\n        if (this.getLayoutDirection() === 'ltr') {\n            labelBeforePos = selectedLabel.getOffsetLeft();\n            labelAfterPos = labelBeforePos + selectedLabel.getOffsetWidth();\n        } else {\n            labelAfterPos =\n                this.tabList.nativeElement.offsetWidth -\n                selectedLabel.getOffsetLeft();\n            labelBeforePos = labelAfterPos - selectedLabel.getOffsetWidth();\n        }\n\n        const beforeVisiblePos = this.scrollDistance;\n        const afterVisiblePos = this.scrollDistance + viewLength;\n\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -=\n                beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        } else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance +=\n                labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    checkPaginationEnabled() {\n        const isEnabled =\n            this.tabList.nativeElement.scrollWidth >\n            this.elementRef.nativeElement.offsetWidth;\n\n        if (!isEnabled) {\n            this.scrollDistance = 0;\n        }\n\n        if (isEnabled !== this.showPaginationControls) {\n            this.changeDetectorRef.markForCheck();\n        }\n\n        this.showPaginationControls = isEnabled;\n    }\n\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    checkScrollingControls() {\n        // Check if the pagination arrows should be activated.\n        this.disableScrollBefore = this.scrollDistance === 0;\n        this.disableScrollAfter =\n            this.scrollDistance === this.getMaxScrollDistance();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    getMaxScrollDistance(): number {\n        const lengthOfTabList = this.tabList.nativeElement.scrollWidth;\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        return lengthOfTabList - viewLength || 0;\n    }\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    InjectionToken,\n    Inject,\n    Optional,\n    Directive, Attribute\n} from '@angular/core';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanColor,\n    CanColorCtor,\n    mixinColor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { merge, Subscription } from 'rxjs';\n\nimport { McTab } from './tab';\nimport { McTabHeader } from './tab-header';\n\n\n@Directive({\n    selector: 'mc-tab-group[mc-light-tabs], [mc-tab-nav-bar][mc-light-tabs]',\n    host: { class: 'mc-tab-group_light' }\n})\nexport class McLightTabsCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-align-tabs-center], [mc-tab-nav-bar][mc-align-tabs-center]',\n    host: { class: 'mc-tab-group_align-labels-center' }\n})\nexport class McAlignTabsCenterCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-align-tabs-end], [mc-tab-nav-bar][mc-align-tabs-end]',\n    host: { class: 'mc-tab-group_align-labels-end' }\n})\nexport class McAlignTabsEndCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-stretch-tabs], [mc-tab-nav-bar][mc-stretch-tabs]',\n    host: { class: 'mc-tab-group_stretch-labels' }\n})\nexport class McStretchTabsCssStyler { }\n\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n\n/** A simple change event emitted on focus or selection changes. */\nexport class McTabChangeEvent {\n    /** Index of the currently-selected tab. */\n    index: number;\n    /** Reference to the currently-selected tab. */\n    tab: McTab;\n}\n\n/** Possible positions for the tab header. */\nexport type McTabHeaderPosition = 'above' | 'below';\n\n/** Object that can be used to configure the default options for the tabs module. */\nexport interface IMcTabsConfig {\n    /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n    animationDuration?: string;\n}\n\n/** Injection token that can be used to provide the default options the tabs module. */\nexport const MC_TABS_CONFIG = new InjectionToken('MC_TABS_CONFIG');\n\n// Boilerplate for applying mixins to McTabGroup.\n/** @docs-private */\nexport class McTabGroupBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) { }\n}\nexport const mcTabGroupMixinBase:\n    CanColorCtor &\n    typeof McTabGroupBase =\n    mixinColor(mixinDisabled(McTabGroupBase));\n\n/**\n * Tab-group component.  Supports basic tab pairs (label + content) and includes\n * keyboard navigation.\n */\n@Component({\n    selector: 'mc-tab-group',\n    exportAs: 'mcTabGroup',\n    templateUrl: 'tab-group.html',\n    styleUrls: ['tab-group.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['color'],\n    host: {\n        class: 'mc-tab-group',\n        '[class.mc-tab-group_dynamic-height]': 'dynamicHeight',\n        '[class.mc-tab-group_inverted-header]': 'headerPosition === \"below\"'\n    }\n})\nexport class McTabGroup extends mcTabGroupMixinBase implements AfterContentInit,\n    AfterContentChecked, OnDestroy, CanColor {\n    lightTab: boolean;\n\n    /** Whether the tab group should grow to the size of the active tab. */\n    @Input()\n    get dynamicHeight(): boolean { return this._dynamicHeight; }\n    set dynamicHeight(value: boolean) { this._dynamicHeight = coerceBooleanProperty(value); }\n\n    /** The index of the active tab. */\n    @Input()\n    get selectedIndex(): number | null { return this._selectedIndex; }\n    set selectedIndex(value: number | null) {\n        this.indexToSelect = coerceNumberProperty(value, null);\n    }\n\n    @ContentChildren(McTab) tabs: QueryList<McTab>;\n\n    @ViewChild('tabBodyWrapper') tabBodyWrapper: ElementRef;\n\n    @ViewChild('tabHeader') tabHeader: McTabHeader;\n\n    /** Position of the tab header. */\n    @Input() headerPosition: McTabHeaderPosition = 'above';\n\n    /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n    @Input() animationDuration: string;\n\n    /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n    @Output() readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted when focus has changed within a tab group. */\n    @Output() readonly focusChange: EventEmitter<McTabChangeEvent> =\n        new EventEmitter<McTabChangeEvent>();\n\n    /** Event emitted when the body animation has completed */\n    @Output() readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the tab selection has changed. */\n    @Output() readonly selectedTabChange: EventEmitter<McTabChangeEvent> =\n        new EventEmitter<McTabChangeEvent>(true);\n\n    /** The tab index that should be selected after the content has been checked. */\n    private indexToSelect: number | null = 0;\n\n    /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n    private tabBodyWrapperHeight: number = 0;\n\n    /** Subscription to tabs being added/removed. */\n    private tabsSubscription = Subscription.EMPTY;\n\n    /** Subscription to changes in the tab labels. */\n    private tabLabelSubscription = Subscription.EMPTY;\n    private _dynamicHeight: boolean = false;\n    private _selectedIndex: number | null = null;\n\n    private groupId: number;\n\n    constructor(\n        elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        @Attribute('mc-light-tabs') lightTabs: string,\n        @Inject(MC_TABS_CONFIG) @Optional() defaultConfig?: IMcTabsConfig\n    ) {\n        super(elementRef);\n\n        this.lightTab = coerceBooleanProperty(lightTabs);\n\n        this.groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '0ms';\n    }\n\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = this.indexToSelect = this.clampTabIndex(this.indexToSelect);\n\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex !== indexToSelect) {\n            const isFirstRun = this._selectedIndex == null;\n\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this.createChangeEvent(indexToSelect));\n            }\n\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this.tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            });\n        }\n\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this.tabs.forEach((tab: McTab, index: number) => {\n            tab.position = index - indexToSelect;\n\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position === 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    ngAfterContentInit() {\n        this.subscribeToTabLabels();\n\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this.tabsSubscription = this.tabs.changes.subscribe(() => {\n            const indexToSelect = this.clampTabIndex(this.indexToSelect);\n\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                const tabs = this.tabs.toArray();\n\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this.indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n\n            this.subscribeToTabLabels();\n            this.changeDetectorRef.markForCheck();\n        });\n    }\n\n    ngOnDestroy() {\n        this.tabsSubscription.unsubscribe();\n        this.tabLabelSubscription.unsubscribe();\n    }\n\n    focusChanged(index: number) {\n        this.focusChange.emit(this.createChangeEvent(index));\n    }\n\n    /** Returns a unique id for each tab label element */\n    getTabLabelId(i: number): string {\n        return `mc-tab-label-${this.groupId}-${i}`;\n    }\n\n    /** Returns a unique id for each tab content element */\n    getTabContentId(i: number): string {\n        return `mc-tab-content-${this.groupId}-${i}`;\n    }\n\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    setTabBodyWrapperHeight(tabHeight: number): void {\n        if (!this._dynamicHeight || !this.tabBodyWrapperHeight) { return; }\n\n        const wrapper: HTMLElement = this.tabBodyWrapper.nativeElement;\n\n        wrapper.style.height = `${this.tabBodyWrapperHeight}px`;\n\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this.tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = `${tabHeight}px`;\n        }\n    }\n\n    /** Removes the height of the tab body wrapper. */\n    removeTabBodyWrapperHeight(): void {\n        this.tabBodyWrapperHeight = this.tabBodyWrapper.nativeElement.clientHeight;\n        this.tabBodyWrapper.nativeElement.style.height = '';\n        this.animationDone.emit();\n    }\n\n    /** Handle click events, setting new selected index if appropriate. */\n    handleClick(tab: McTab, tabHeader: McTabHeader, index: number) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n\n    /** Retrieves the tabindex for the tab. */\n    getTabIndex(tab: McTab, index: number): number | null {\n        if (tab.disabled) {\n            return null;\n        }\n\n        return this.selectedIndex === index ? 0 : -1;\n    }\n\n    private createChangeEvent(index: number): McTabChangeEvent {\n        const event = new McTabChangeEvent();\n        event.index = index;\n        if (this.tabs && this.tabs.length) {\n            event.tab = this.tabs.toArray()[index];\n        }\n\n        return event;\n    }\n\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the McTab component, whereas the data binding is inside the McTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    private subscribeToTabLabels() {\n        if (this.tabLabelSubscription) {\n            this.tabLabelSubscription.unsubscribe();\n        }\n\n        this.tabLabelSubscription = merge(...this.tabs.map((tab) => tab.stateChanges))\n            .subscribe(() => this.changeDetectorRef.markForCheck());\n    }\n\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    private clampTabIndex(index: number | null): number {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Mch.max(NaN, 0) === NaN).\n        return Math.min(this.tabs.length - 1, Math.max(index || 0, 0));\n    }\n}\n","import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    OnDestroy,\n    ViewEncapsulation\n} from '@angular/core';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    CanColor,\n    CanColorCtor,\n    CanDisable,\n    CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\n// Boilerplate for applying mixins to McTabNav.\n/** @docs-private */\nexport class McTabNavBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {}\n}\nexport const mcTabNavMixinBase: CanColorCtor &\n    typeof McTabNavBase = mixinColor(McTabNavBase);\n\n/**\n * Navigation component matching the styles of the tab group header.\n */\n@Component({\n    selector: '[mc-tab-nav-bar]',\n    exportAs: 'mcTabNavBar, mcTabNav',\n    inputs: ['color'],\n    templateUrl: 'tab-nav-bar.html',\n    styleUrls: ['tab-nav-bar.css'],\n    host: { class: 'mc-tab-nav-bar' },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McTabNav extends mcTabNavMixinBase\n    implements CanColor {\n        constructor(elementRef: ElementRef) {\n            super(elementRef);\n        }\n     }\n\n// Boilerplate for applying mixins to McTabLink.\nexport class McTabLinkBase {}\nexport const mcTabLinkMixinBase: HasTabIndexCtor & CanDisableCtor &\n    typeof McTabLinkBase = mixinTabIndex(mixinDisabled(McTabLinkBase));\n\n/**\n * Link inside of a `mc-tab-nav-bar`.\n */\n@Directive({\n    selector: '[mc-tab-link], [mcTabLink]',\n    exportAs: 'mcTabLink',\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-tab-link',\n        '[attr.aria-current]': 'active',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.tabIndex]': 'tabIndex',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-active]': 'active'\n    }\n})\nexport class McTabLink extends mcTabLinkMixinBase\n    implements OnDestroy, CanDisable, HasTabIndex {\n    /** Whether the link is active. */\n    @Input()\n    get active(): boolean {\n        return this.isActive;\n    }\n    set active(value: boolean) {\n        if (value !== this.isActive) {\n            this.isActive = value;\n        }\n    }\n\n    /** Whether the tab link is active or not. */\n    protected isActive: boolean = false;\n\n    constructor(\n        public elementRef: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        private focusMonitor: FocusMonitor\n    ) {\n        super();\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this.focusMonitor.monitor(this.elementRef.nativeElement);\n    }\n\n    ngOnDestroy() {\n        this.focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PortalModule } from '@ptsecurity/cdk/portal';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McTab } from './tab';\nimport { McTabBody, McTabBodyPortal } from './tab-body';\nimport { McTabContent } from './tab-content';\nimport {\n    McTabGroup,\n    McLightTabsCssStyler,\n    McAlignTabsCenterCssStyler,\n    McAlignTabsEndCssStyler,\n    McStretchTabsCssStyler\n} from './tab-group';\nimport { McTabHeader } from './tab-header';\nimport { McTabLabel } from './tab-label';\nimport { McTabLabelWrapper } from './tab-label-wrapper';\nimport { McTabLink, McTabNav } from './tab-nav-bar/tab-nav-bar';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McCommonModule,\n        PortalModule,\n        A11yModule\n    ],\n    // Don't export all components because some are only to be used internally.\n    exports: [\n        McCommonModule,\n        McTabGroup,\n        McTabLabel,\n        McTab,\n        McTabNav,\n        McTabLink,\n        McTabContent,\n        McLightTabsCssStyler,\n        McAlignTabsCenterCssStyler,\n        McAlignTabsEndCssStyler,\n        McStretchTabsCssStyler\n    ],\n    declarations: [\n        McTabGroup,\n        McTabLabel,\n        McTab,\n        McTabLabelWrapper,\n        McTabNav,\n        McTabLink,\n        McTabBody,\n        McTabBodyPortal,\n        McTabHeader,\n        McTabContent,\n        McLightTabsCssStyler,\n        McAlignTabsCenterCssStyler,\n        McAlignTabsEndCssStyler,\n        McStretchTabsCssStyler\n    ]\n})\nexport class McTabsModule {}\n","import {\n    ElementRef,\n    QueryList,\n    ContentChildren,\n    Component,\n    ChangeDetectionStrategy,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport {\n    mixinColor,\n    CanColor,\n    CanColorCtor,\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\nexport class McTagBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McTagMixinBase: CanColorCtor & CanDisableCtor & typeof McTagBase = mixinColor(mixinDisabled(McTagBase));\n\n\n@Component({\n    selector: 'mc-tag',\n    templateUrl: 'tag.partial.html',\n    styleUrls: ['./tag.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-tag',\n        '[class.mc-disabled]': 'disabled'\n    },\n    inputs: ['color', 'disabled']\n})\nexport class McTag extends _McTagMixinBase implements CanColor, CanDisable {\n    @ContentChildren(McIcon) contentChildren: QueryList<McIcon>;\n\n    nativeElement: HTMLElement;\n\n    private _disabled: boolean = false;\n\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this.disabled) { this._disabled = value; }\n    }\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-left-icon');\n                }\n\n                if (iconElement.previousSibling) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-right-icon');\n                }\n            }\n        } else if (icons.length > 1) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTag } from './tag.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McTag\n    ],\n    declarations: [\n        McTag\n    ]\n})\nexport class McTagModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McProgressSpinner } from './progress-spinner.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressSpinner\n    ],\n    declarations: [\n        McProgressSpinner\n    ]\n})\nexport class McProgressSpinnerModule {}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, Directive, ElementRef, EventEmitter, forwardRef,\n    Input, OnDestroy, OnInit, Optional, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { UniqueSelectionDispatcher } from '@ptsecurity/cdk/collections';\n\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n\n/** Change event object emitted by McRadio. */\nexport class McRadioChange {\n    constructor(\n        /** The McRadioButton that emits the change event. */\n        public source: McRadioButton,\n        /** The value of the McRadioButton. */\n        public value: any) {}\n}\n\n// Boilerplate for applying mixins to McRadioGroup.\n/** @docs-private */\nexport class McRadioGroupBase {}\nexport const _McRadioGroupMixinBase: CanDisableCtor & typeof McRadioGroupBase = mixinDisabled(McRadioGroupBase);\n\n/**\n * Provider Expression that allows mc-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nexport const MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McRadioGroup),\n    multi: true\n};\n\n@Directive({\n    selector: 'mc-radio-group',\n    exportAs: 'mcRadioGroup',\n    providers: [MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n    host: {\n        role: 'radiogroup',\n        class: 'mc-radio-group'\n    },\n    inputs: ['disabled']\n})\nexport class McRadioGroup extends _McRadioGroupMixinBase\n    implements AfterContentInit, ControlValueAccessor, CanDisable {\n\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    @Input()\n    get name(): string { return this._name; }\n    set name(value: string) {\n        this._name = value;\n        this.updateRadioButtonNames();\n    }\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this.markRadiosForCheck();\n    }\n\n    /** Value of the radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(newValue: any) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n\n            this.updateSelectedRadioFromValue();\n            this.checkSelectedRadioButton();\n        }\n    }\n\n    /** Whether the radio button is selected. */\n    @Input()\n    get selected() { return this._selected; }\n    set selected(selected: McRadioButton | null) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this.checkSelectedRadioButton();\n    }\n\n    /** Whether the radio group is disabled */\n    @Input()\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /** Whether the radio group is required */\n    @Input()\n    get required(): boolean { return this._required; }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /**\n     * Event emitted when the group value changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * a radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** Child radio buttons. */\n    @ContentChildren(forwardRef(() => McRadioButton), { descendants: true })\n    _radios: QueryList<McRadioButton>;\n\n    /**\n     * Selected value for group. Should equal the value of the selected radio button if there *is*\n     * a corresponding radio button with a matching value. If there is *not* such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    private _value: any = null;\n\n    /** The HTML name attribute applied to radio buttons in this group. */\n    private _name: string = `mc-radio-group-${nextUniqueId++}`;\n\n    /** The currently selected radio button. Should match value. */\n    private _selected: McRadioButton | null = null;\n\n    /** Whether the `value` has been set to its initial value. */\n    private _isInitialized: boolean = false;\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    private _labelPosition: 'before' | 'after' = 'after';\n\n    /** Whether the radio group is disabled. */\n    private _disabled: boolean = false;\n\n    /** Whether the radio group is required. */\n    private _required: boolean = false;\n\n    constructor(\n        private readonly _changeDetector: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    /** The method to be called in order to update ngModel */\n    // tslint:disable-next-line\n    controlValueAccessorChangeFn: (value: any) => void = () => {};\n\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * @docs-private\n     */\n    // tslint:disable-next-line\n    onTouched: () => any = () => {};\n\n    checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on McRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the McRadioGroup.\n        this._isInitialized = true;\n    }\n\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n\n    /** Dispatch change event with current selection and group value. */\n    emitChangeEvent(): void {\n        if (this._isInitialized) {\n            this.change.emit(new McRadioChange(this._selected!, this._value));\n        }\n    }\n\n    markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach((radio) => radio.markForCheck());\n        }\n    }\n\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     */\n    writeValue(value: any) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn: (value: any) => void) {\n        this.controlValueAccessorChangeFn = fn;\n    }\n\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n\n    private updateRadioButtonNames(): void {\n        if (this._radios) {\n            this._radios.forEach((radio) => {\n                radio.name = this.name;\n            });\n        }\n    }\n\n    /** Updates the `selected` radio button from the internal _value state. */\n    private updateSelectedRadioFromValue(): void {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n\n        if (this._radios != null && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach((radio) => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n}\n\n\n// Boilerplate for applying mixins to McRadioButton.\n/** @docs-private */\nexport class McRadioButtonBase {\n    // Since the disabled property is manually defined for the McRadioButton and isn't set up in\n    // the mixin base class. To be able to use the tabindex mixin, a disabled property must be\n    // defined to properly work.\n    disabled: boolean;\n\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McRadioButtonMixinBase:\n    CanColorCtor &\n    HasTabIndexCtor &\n    typeof McRadioButtonBase =\n        mixinColor(mixinTabIndex(McRadioButtonBase));\n\n\n@Component({\n    selector: 'mc-radio-button',\n    templateUrl: 'radio.component.html',\n    styleUrls: ['radio.css'],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    exportAs: 'mcRadioButton',\n    host: {\n        class: 'mc-radio-button',\n        '[attr.id]': 'id',\n        '[class.mc-checked]': 'checked',\n        '[class.mc-disabled]': 'disabled',\n        '(focus)': '_inputElement.nativeElement.focus()'\n    }\n})\nexport class McRadioButton extends _McRadioButtonMixinBase\n    implements OnInit, OnDestroy, CanColor, HasTabIndex {\n\n    private readonly _uniqueId: string = `mc-radio-${++nextUniqueId}`;\n\n    /* tslint:disable:member-ordering */\n\n    /** The unique ID for the radio button. */\n    @Input() id: string = this._uniqueId;\n\n    /** Analog to HTML 'name' attribute used to group radios for unique selection. */\n    @Input() name: string;\n\n    /** Used to set the 'aria-label' attribute on the underlying input element. */\n    @Input('aria-label') ariaLabel: string;\n\n    /** The 'aria-labelledby' attribute takes precedence as the element's text alternative. */\n    @Input('aria-labelledby') ariaLabelledby: string;\n\n    /** The 'aria-describedby' attribute is read after the element's label and field type. */\n    @Input('aria-describedby') ariaDescribedby: string;\n\n    /** Whether this radio button is checked. */\n    @Input()\n    get checked(): boolean { return this._checked; }\n    set checked(value: boolean) {\n        const newCheckedState = toBoolean(value);\n\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            } else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** The value of this radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(value: any) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup != null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n\n    /** Whether the radio button is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled || (this.radioGroup != null && this.radioGroup.disabled);\n    }\n    set disabled(value: boolean) {\n        const newDisabledState = toBoolean(value);\n\n        if (this._disabled !== newDisabledState) {\n\n            this._disabled = newDisabledState;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** Whether the radio button is required. */\n    @Input()\n    get required(): boolean {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    private _labelPosition: 'before' | 'after';\n\n    /** The native `<input type=radio>` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Event emitted when the checked state of this radio button changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * the radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** The parent radio group. May or may not be present. */\n    radioGroup: McRadioGroup;\n\n    @Input()\n    isFocused: boolean = false;\n\n    /** ID of the native input element inside `<mc-radio-button>` */\n    get inputId(): string { return `${this.id || this._uniqueId}-input`; }\n\n    /** Whether this radio is checked. */\n    private _checked: boolean = false;\n\n    /** Whether this radio is disabled. */\n    private _disabled: boolean;\n\n    /** Whether this radio is required. */\n    private _required: boolean;\n\n    /** Value assigned to this radio. */\n    private _value: any = null;\n\n    /** Unregister function for _radioDispatcher */\n    // tslint:disable-next-line\n    private readonly removeUniqueSelectionListener: () => void = () => {};\n\n    constructor(\n        @Optional() radioGroup: McRadioGroup,\n        elementRef: ElementRef,\n        private readonly _changeDetector: ChangeDetectorRef,\n        private readonly _radioDispatcher: UniqueSelectionDispatcher\n    ) {\n\n        super(elementRef);\n\n        this.radioGroup = radioGroup;\n\n        this.removeUniqueSelectionListener =\n            _radioDispatcher.listen((id: string, name: string) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            });\n    }\n\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n\n    ngOnDestroy() {\n        this.removeUniqueSelectionListener();\n    }\n\n    /** Focuses the radio button. */\n    // tslint:disable-next-line\n    focus(): void {}\n\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n\n    onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n\n    onInputChange(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this.emitChangeEvent();\n\n        if (this.radioGroup) {\n            this.radioGroup.controlValueAccessorChangeFn(this.value);\n            this.radioGroup.touch();\n            if (groupValueChanged) {\n                this.radioGroup.emitChangeEvent();\n            }\n        }\n    }\n\n    /** Dispatch change event with current value. */\n    private emitChangeEvent(): void {\n        this.change.emit(new McRadioChange(this, this._value));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McRadioButton, McRadioGroup } from './radio.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule],\n    exports: [McRadioGroup, McRadioButton],\n    declarations: [McRadioGroup, McRadioButton]\n})\nexport class McRadioModule {\n}\n","import { Directive, Input } from '@angular/core';\n\nimport { CdkTreeNodeDef } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeDef]',\n    inputs: ['when: mcTreeNodeDefWhen'],\n    providers: [{ provide: CdkTreeNodeDef, useExisting: McTreeNodeDef }]\n})\nexport class McTreeNodeDef<T> extends CdkTreeNodeDef<T> {\n    @Input('mcTreeNode') data: T;\n}\n","import { Directive, Input, OnInit } from '@angular/core';\nimport { CdkTreeNodePadding } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodePadding]',\n    providers: [{ provide: CdkTreeNodePadding, useExisting: McTreeNodePadding }]\n})\nexport class McTreeNodePadding<T> extends CdkTreeNodePadding<T> implements OnInit {\n    @Input('mcTreeNodePadding') level: number;\n\n    @Input('mcTreeNodePaddingIndent') indent: number;\n\n    baseLeftPadding: number = 12;\n    /* tslint:disable-next-line:naming-convention */\n    _indent: number = 20;\n\n    withIcon: boolean;\n    iconWidth: number = 20;\n\n    get leftPadding(): number {\n        return (this.withIcon ? 0 : this.iconWidth) + this.baseLeftPadding;\n    }\n\n    paddingIndent(): string | null {\n        const nodeLevel = (this.treeNode.data && this.tree.treeControl.getLevel)\n            ? this.tree.treeControl.getLevel(this.treeNode.data)\n            : null;\n\n        const level = this.level || nodeLevel;\n\n        return level ? `${(level * this._indent) + this.leftPadding}px` : `${this.baseLeftPadding}px`;\n    }\n\n    ngOnInit(): void {\n        this.withIcon = this.tree.treeControl.isExpandable(this.treeNode.data);\n\n        this.setPadding();\n    }\n}\n","import { Directive } from '@angular/core';\nimport { CdkTreeNodeToggle } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeToggle]',\n    host: {\n        '(click)': 'toggle($event)'\n    },\n    providers: [{ provide: CdkTreeNodeToggle, useExisting: McTreeNodeToggle }]\n})\nexport class McTreeNodeToggle<T> extends CdkTreeNodeToggle<T> {}\n","import {\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ElementRef,\n    Inject,\n    Optional,\n    InjectionToken\n} from '@angular/core';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { CdkTreeNode } from '@ptsecurity/cdk/tree';\nimport { CanDisable, toBoolean } from '@ptsecurity/mosaic/core';\n\n\n/* tslint:disable-next-line:naming-convention */\nexport interface McTreeOptionParentComponent {\n    multiple: boolean;\n    selectionModel: SelectionModel<McTreeOption>;\n    setFocusedOption: any;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_TREE_OPTION_PARENT_COMPONENT =\n    new InjectionToken<McTreeOptionParentComponent>('MC_TREE_OPTION_PARENT_COMPONENT');\n\nexport class McTreeOptionChange {\n    constructor(public source: McTreeOption, public isUserInput = false) {}\n}\n\nlet uniqueIdCounter: number = 0;\n\n@Component({\n    selector: 'mc-tree-option',\n    exportAs: 'mcTreeOption',\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'getTabIndex()',\n\n        '[attr.disabled]': 'disabled || null',\n\n        class: 'mc-tree-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-active]': 'active',\n\n        '(click)': 'selectViaInteraction()'\n    },\n    templateUrl: './tree-option.html',\n    providers: [{ provide: CdkTreeNode, useExisting: McTreeOption }]\n})\nexport class McTreeOption extends CdkTreeNode<McTreeOption> implements CanDisable {\n    @Output() readonly onSelectionChange = new EventEmitter<McTreeOptionChange>();\n\n    @Input() value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    // @Input()\n    // get selected(): boolean {\n    //     return this.treeSelection.selectionModel && this.treeSelection.selectionModel.isSelected(this) || false;\n    // }\n\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            // this.treeSelection._reportValueChange();\n        }\n    }\n\n    private _selected: boolean = false;\n\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active(): boolean {\n        return this._active;\n    }\n\n    private _active = false;\n\n    get id(): string {\n        return this._id;\n    }\n\n    private _id = `mc-tree-option-${uniqueIdCounter++}`;\n\n    get multiple(): boolean {\n        return this.parent.multiple;\n    }\n\n    constructor(\n        protected elementRef: ElementRef,\n        protected changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_TREE_OPTION_PARENT_COMPONENT) private readonly parent: McTreeOptionParentComponent\n    ) {\n        // todo any\n        super(elementRef, parent as any);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.parent.selectionModel) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.parent.selectionModel.select(this);\n        } else {\n            this.parent.selectionModel.deselect(this);\n        }\n\n        // this._changeDetector.markForCheck();\n    }\n\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles(): void {\n        if (!this._active) {\n            this._active = true;\n\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles(): void {\n        if (this._active) {\n            this._active = false;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    getHeight(): number {\n        const clientRects = this.elementRef.nativeElement.getClientRects();\n        if (clientRects.length) {\n            return clientRects[0].height;\n        }\n\n        return 0;\n    }\n\n    focus(): void {\n        const element = this.getHostElement();\n\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n\n    // todo старая реализация, нужно восстановить tree-selection\n    // handleClick(): void {\n    //     if (this.disabled) { return; }\n    //\n    //     this.treeSelection.setFocusedOption(this);\n    // }\n\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue(): string {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this.getHostElement().textContent || '').trim();\n    }\n\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    selectViaInteraction(): void {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent(true);\n\n            if (this.parent.setFocusedOption) {\n                this.parent.setFocusedOption(this);\n            }\n        }\n    }\n\n    emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McTreeOptionChange(this, isUserInput));\n    }\n\n    getHostElement(): HTMLElement {\n        return this.elementRef.nativeElement;\n    }\n\n    getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    EventEmitter,\n    Input,\n    IterableDiffer,\n    IterableDiffers,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    ElementRef\n} from '@angular/core';\nimport { NodeDef, ViewData } from '@angular/core/src/view';\nimport { ActiveDescendantKeyManager } from '@ptsecurity/cdk/a11y';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { CdkTree, CdkTreeNodeOutlet } from '@ptsecurity/cdk/tree';\nimport {\n    CanDisable,\n    CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\nimport { Subject } from 'rxjs';\n\nimport { MC_TREE_OPTION_PARENT_COMPONENT, McTreeOption } from './tree-option';\n\n\nexport class McTreeNavigationChange {\n    constructor(\n        public source: McTreeSelection,\n        public option: McTreeOption\n    ) {}\n}\n\nexport class McTreeSelectionChange {\n    constructor(public source: McTreeSelection, public option: McTreeOption) {}\n}\n\nclass McTreeSelectionBase<T> extends CdkTree<T> {\n    constructor(differs: IterableDiffers, changeDetectorRef: ChangeDetectorRef) {\n        super(differs, changeDetectorRef);\n    }\n}\n\n/* tslint:disable-next-line:naming-convention */\nconst McTreeSelectionBaseMixin: HasTabIndexCtor & CanDisableCtor &\n    typeof McTreeSelectionBase = mixinTabIndex(mixinDisabled(McTreeSelectionBase));\n\n\n@Component({\n    selector: 'mc-tree-selection',\n    exportAs: 'mcTreeSelection',\n    template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n    host: {\n        class: 'mc-tree-selection',\n\n        '[attr.tabindex]': 'tabIndex',\n\n        '(keydown)': 'onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    styleUrls: ['./tree.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        { provide: MC_TREE_OPTION_PARENT_COMPONENT, useExisting: McTreeSelection },\n        { provide: CdkTree, useExisting: McTreeSelection }\n    ]\n})\nexport class McTreeSelection extends McTreeSelectionBaseMixin<McTreeOption>\n    implements AfterContentInit, CanDisable, HasTabIndex {\n\n    @ViewChild(CdkTreeNodeOutlet) nodeOutlet: CdkTreeNodeOutlet;\n\n    @ContentChildren(McTreeOption) options: QueryList<McTreeOption>;\n\n    keyManager: ActiveDescendantKeyManager<McTreeOption>;\n\n    selectionModel: SelectionModel<McTreeOption>;\n\n    tabIndex: number;\n    multiple: boolean;\n    autoSelect: boolean;\n    noUnselect: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n\n    @Output() readonly navigationChange = new EventEmitter<McTreeNavigationChange>();\n\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectionChange>();\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(rawValue: boolean) {\n        const value = toBoolean(rawValue);\n\n        if (this._disabled !== value) {\n            this._disabled = value;\n\n            if (this._disabled) {\n                /* tslint:disable-next-line:no-console */\n                console.log('need disable all options');\n            } else {\n                /* tslint:disable-next-line:no-console */\n                console.log('need enable all options');\n            }\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    private readonly destroy = new Subject<void>();\n\n    constructor(\n        private elementRef: ElementRef,\n        differs: IterableDiffers,\n        changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('multiple') multiple: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string\n    ) {\n        super(differs, changeDetectorRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.multiple = multiple === null ? false : toBoolean(multiple);\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.selectionModel = new SelectionModel<McTreeOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.keyManager = new ActiveDescendantKeyManager<McTreeOption>(this.options)\n            // .withTypeAhead()\n            .withVerticalOrientation(true)\n            .withHorizontalOrientation(null);\n    }\n\n    ngOnDestroy() {\n        this.destroy.next();\n\n        this.destroy.complete();\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case LEFT_ARROW:\n                if (this.keyManager.activeItem) {\n                    this.treeControl.collapse(this.keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case RIGHT_ARROW:\n                if (this.keyManager.activeItem) {\n                    this.treeControl.expand(this.keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this.keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this.keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                this.keyManager.setPreviousPageItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                this.keyManager.setNextPageItemActive();\n                event.preventDefault();\n\n                break;\n            default:\n                this.keyManager.onKeydown(event);\n        }\n    }\n\n    updateScrollSize(): void {\n        if (!this.options.first) { return; }\n\n        this.keyManager.withScrollSize(Math.floor(this.getHeight() / this.options.first.getHeight()));\n    }\n\n    setFocusedOption(option: McTreeOption) {\n        this.keyManager.setActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this.keyManager.previousActiveItemIndex;\n            const activeIndex = this.keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this.canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this.emitNavigationEvent(option);\n    }\n\n    toggleFocusedOption(): void {\n        const focusedIndex = this.keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this.isValidIndex(focusedIndex)) {\n            const focusedOption: McTreeOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this.canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this.emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    renderNodeChanges(\n        data: McTreeOption[],\n        dataDiffer: IterableDiffer<McTreeOption> = this.dataDiffer,\n        viewContainer: any = this.nodeOutlet.viewContainer,\n        parentData?: McTreeOption\n    ): void {\n        super.renderNodeChanges(data, dataDiffer, viewContainer, parentData);\n\n        const arrayOfInstances = [];\n\n        viewContainer._embeddedViews.forEach((view: ViewData) => {\n            const viewDef = view.def;\n\n            viewDef.nodes.forEach((node: NodeDef) => {\n                if (viewDef.nodeMatchedQueries === node.matchedQueryIds) {\n                    const nodeData: any = view.nodes[node.nodeIndex];\n\n                    arrayOfInstances.push(nodeData.instance as never);\n                }\n            });\n        });\n\n        if (this.options) {\n            this.options.reset(arrayOfInstances);\n            this.options.notifyOnChanges();\n        }\n\n        this.updateScrollSize();\n    }\n\n    getHeight(): number {\n        const clientRects = this.elementRef.nativeElement.getClientRects();\n        if (clientRects.length) {\n            return clientRects[0].height;\n        }\n\n        return 0;\n    }\n\n    emitNavigationEvent(option: McTreeOption): void {\n        this.navigationChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    emitChangeEvent(option: McTreeOption): void {\n        this.selectionChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    private isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    private canDeselectLast(option: McTreeOption): boolean {\n        return !(this.noUnselect && this.selectionModel.selected.length === 1 && option.selected);\n    }\n}\n\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\nimport { McPseudoCheckboxModule } from '@ptsecurity/mosaic/core';\n\nimport { McTreeNodeDef } from './node';\nimport { McTreeNodePadding } from './padding';\nimport { McTreeNodeToggle } from './toggle';\nimport { McTreeOption } from './tree-option';\nimport { McTreeSelection } from './tree-selection';\n\n\nconst MC_TREE_DIRECTIVES = [\n    McTreeSelection,\n    McTreeOption,\n    McTreeNodeDef,\n    McTreeNodePadding,\n    McTreeNodeToggle\n];\n\n@NgModule({\n    imports: [CommonModule, CdkTreeModule, McPseudoCheckboxModule],\n    exports: MC_TREE_DIRECTIVES,\n    declarations: MC_TREE_DIRECTIVES\n})\nexport class McTreeModule {}\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { FlatTreeControl, ITreeControl } from '@ptsecurity/cdk/tree';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nexport class McTreeFlattener<T, F> {\n    constructor(\n        public transformFunction: (node: T, level: number) => F,\n        public getLevel: (node: F) => number,\n        public isExpandable: (node: F) => boolean,\n        public getChildren: (node: T) => Observable<T[]>\n    ) {}\n\n    flattenNode(node: T, level: number, resultNodes: F[], parentMap: boolean[]): F[] {\n        const flatNode = this.transformFunction(node, level);\n        resultNodes.push(flatNode);\n\n        if (this.isExpandable(flatNode)) {\n            this.getChildren(node)\n                .pipe(take(1))\n                .subscribe((children) => {\n                    children.forEach((child, index) => {\n                        const childParentMap: boolean[] = parentMap.slice();\n                        childParentMap.push(index !== children.length - 1);\n\n                        this.flattenNode(child, level + 1, resultNodes, childParentMap);\n                    });\n                });\n        }\n\n        return resultNodes;\n    }\n\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData: T[]): F[] {\n        const resultNodes: F[] = [];\n        structuredData.forEach((node) => this.flattenNode(node, 0, resultNodes, []));\n\n        return resultNodes;\n    }\n\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes: F[], treeControl: ITreeControl<F>): F[] {\n        const results: F[] = [];\n        const currentExpand: boolean[] = [];\n        currentExpand[0] = true;\n\n        nodes.forEach((node) => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n\n            if (expand) { results.push(node); }\n\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n\n        return results;\n    }\n}\n\n\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `McTree`.\n * The nested tree nodes of type `T` are flattened through `MсTreeFlattener`, and converted\n * to type `F` for `McTree` to consume.\n */\nexport class McTreeFlatDataSource<T, F> extends DataSource<F> {\n    flattenedData = new BehaviorSubject<F[]>([]);\n\n    expandedData = new BehaviorSubject<F[]>([]);\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n\n        this.flattenedData.next(this.treeFlattener.flattenNodes(this.data));\n        this.treeControl.dataNodes = this.flattenedData.value;\n    }\n\n    private _data: BehaviorSubject<T[]>;\n\n    constructor(\n        private treeControl: FlatTreeControl<F>,\n        private treeFlattener: McTreeFlattener<T, F>,\n        initialData: T[] = []\n    ) {\n        super();\n\n        this._data = new BehaviorSubject<T[]>(initialData);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<F[]> {\n        const changes = [\n            collectionViewer.viewChange,\n            this.treeControl.expansionModel.changed,\n            this.flattenedData\n        ];\n\n        return merge(...changes)\n            .pipe(map(() => {\n                this.expandedData.next(\n                    this.treeFlattener.expandFlattenedNodes(this.flattenedData.value, this.treeControl)\n                );\n\n                return this.expandedData.value;\n            }));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by ITreeControl and each non-leaf node.\n */\nexport class McTreeNestedDataSource<T> extends DataSource<T> {\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n    }\n\n    /* tslint:disable-next-line:naming-convention */\n    private _data = new BehaviorSubject<T[]>([]);\n\n    connect(collectionViewer: ICollectionViewer): Observable<T[]> {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map(() => this.data));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { Directive, TemplateRef } from '@angular/core';\n\n\n/** Decorates the `ng-template` tags and reads out the template from it. */\n@Directive({ selector: '[mcTabContent]' })\nexport class McTabContent {\n    constructor(public template: TemplateRef<any>) { }\n}\n","import { Directive } from '@angular/core';\nimport { CdkPortal } from '@ptsecurity/cdk/portal';\n\n\n/** Used to flag tab labels for use with the portal directive */\n@Directive({\n    selector: '[mc-tab-label], [mcTabLabel]'\n})\nexport class McTabLabel extends CdkPortal {}\n\n// TODO: workaround for https://github.com/angular/material2/issues/12760\n(McTabLabel as any).ctorParameters = () => (CdkPortal as any).ctorParameters;\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { TemplatePortal } from '@ptsecurity/cdk/portal';\nimport {\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { Subject } from 'rxjs';\n\nimport { McTabContent } from './tab-content';\nimport { McTabLabel } from './tab-label';\n\n\nexport class McTabBase {}\nexport const mcTabMixinBase: CanDisableCtor & typeof McTabBase = mixinDisabled(\n    McTabBase\n);\n\n@Component({\n    selector: 'mc-tab',\n    // Create a template for the content of the <mc-tab> so that we can grab a reference to this\n    // TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\n    // tab-group.\n    template: '<ng-template><ng-content></ng-content></ng-template>',\n    inputs: ['disabled'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcTab'\n})\nexport class McTab extends mcTabMixinBase\n    implements OnInit, CanDisable, OnChanges, OnDestroy {\n    /** @docs-private */\n    get content(): TemplatePortal | null {\n        return this.contentPortal;\n    }\n    /** Content for the tab label given by `<ng-template mc-tab-label>`. */\n    @ContentChild(McTabLabel)\n    templateLabel: McTabLabel;\n\n    /**\n     * Template provided in the tab content that will be used if present, used to enable lazy-loading\n     */\n    @ContentChild(McTabContent, { read: TemplateRef })\n    explicitContent: TemplateRef<any>;\n\n    /** Template inside the McTab view that contains an `<ng-content>`. */\n    @ViewChild(TemplateRef)\n    implicitContent: TemplateRef<any>;\n\n    /** Plain text label for the tab, used when there is no template label. */\n    @Input('label')\n    textLabel: string = '';\n\n    /** Aria label for the tab. */\n    @Input('aria-label')\n    ariaLabel: string;\n\n    /**\n     * Reference to the element that the tab is labelled by.\n     * Will be cleared if `aria-label` is set at the same time.\n     */\n    @Input('aria-labelledby')\n    ariaLabelledby: string;\n\n    /** Emits whenever the internal state of the tab changes. */\n    readonly stateChanges = new Subject<void>();\n\n    /**\n     * The relatively indexed position where 0 represents the center, negative is left, and positive\n     * represents the right.\n     */\n    position: number | null = null;\n\n    /**\n     * The initial relatively index origin of the tab if it was created and selected after there\n     * was already a selected tab. Provides context of what position the tab should originate from.\n     */\n    origin: number | null = null;\n\n    /**\n     * Whether the tab is currently active.\n     */\n    isActive = false;\n\n    /** Portal that will be the hosted content of the tab */\n    private contentPortal: TemplatePortal | null = null;\n\n    constructor(private viewContainerRef: ViewContainerRef) {\n        super();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (\n            changes.hasOwnProperty('textLabel') ||\n            changes.hasOwnProperty('disabled')\n        ) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngOnInit(): void {\n        this.contentPortal = new TemplatePortal(\n            this.explicitContent || this.implicitContent,\n            this.viewContainerRef\n        );\n    }\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\nexport const mcTabsAnimations: {\n    readonly translateTab: AnimationTriggerMetadata;\n} = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state(\n            'center, void, left-origin-center, right-origin-center',\n            style({ transform: 'none' })\n        ),\n\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state(\n            'left',\n            style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })\n        ),\n        state(\n            'right',\n            style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })\n        ),\n\n        transition(\n            '* => left, * => right, left => center, right => center',\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    Component,\n    ChangeDetectorRef,\n    Input,\n    Inject,\n    Output,\n    EventEmitter,\n    OnDestroy,\n    OnInit,\n    ElementRef,\n    Directive,\n    Optional,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ComponentFactoryResolver,\n    ViewContainerRef,\n    forwardRef,\n    ViewChild\n} from '@angular/core';\nimport { Directionality, Direction } from '@ptsecurity/cdk/bidi';\nimport { TemplatePortal, CdkPortalOutlet, PortalHostDirective } from '@ptsecurity/cdk/portal';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\nimport { mcTabsAnimations } from './tabs-animations';\n\n\n/**\n * These position states are used internally as animation states for the tab body. Setting the\n * position state to left, right, or center will transition the tab body from its current\n * position to its respective state. If there is not current position (void, in the case of a new\n * tab body), then there will be no transition animation to its state.\n *\n * In the case of a new tab body that should immediately be centered with an animating transition,\n * then left-origin-center or right-origin-center can be used, which will use left or right as its\n * psuedo-prior state.\n */\nexport type McTabBodyPositionState =\n    'left' | 'center' | 'right' | 'left-origin-center' | 'right-origin-center';\n\n/**\n * The origin state is an internally used state that is set on a new tab body indicating if it\n * began to the left or right of the prior selected index. For example, if the selected index was\n * set to 1, and a new tab is created and selected at index 2, then the tab body would have an\n * origin of right because its index was greater than the prior selected index.\n */\nexport type McTabBodyOriginState = 'left' | 'right';\n\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\n@Component({\n    selector: 'mc-tab-body',\n    templateUrl: 'tab-body.html',\n    styleUrls: ['tab-body.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [mcTabsAnimations.translateTab],\n    host: {\n        class: 'mc-tab-body'\n    }\n})\nexport class McTabBody implements OnInit, OnDestroy {\n\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    @Input()\n    set position(position: number) {\n        this.positionIndex = position;\n        this.computePositionAnimationState();\n    }\n\n    /** Tab body position state. Used by the animation trigger for the current state. */\n    bodyPosition: McTabBodyPositionState;\n\n    /** Event emitted when the tab begins to animate towards the center as the active tab. */\n    @Output() readonly onCentering: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted before the centering of the tab begins. */\n    @Output() readonly beforeCentering: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted before the centering of the tab begins. */\n    @Output() readonly afterLeavingCenter: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the tab completes its animation towards the center. */\n    @Output() readonly onCentered: EventEmitter<void> = new EventEmitter<void>(true);\n\n    /** The portal host inside of this container into which the tab body content will be loaded. */\n    @ViewChild(PortalHostDirective) portalHost: PortalHostDirective;\n\n    /** The tab body content to display. */\n    @Input('content') content: TemplatePortal;\n\n    /** Position that will be used when the tab is immediately becoming visible after creation. */\n    @Input() origin: number;\n\n    // Note that the default value will always be overwritten by `McTabBody`, but we need one\n    // anyway to prevent the animations module from throwing an error if the body is used on its own.\n    /** Duration for the tab's animation. */\n    @Input() animationDuration: string = '0ms';\n\n    /** Current position of the tab-body in the tab-group. Zero means that the tab is visible. */\n    private positionIndex: number;\n\n    /** Subscription to the directionality change observable. */\n    private dirChangeSubscription = Subscription.EMPTY;\n\n    constructor(private elementRef: ElementRef<HTMLElement>,\n                @Optional() private dir: Directionality,\n                changeDetectorRef: ChangeDetectorRef) {\n\n        if (this.dir && changeDetectorRef) {\n            this.dirChangeSubscription = this.dir.change.subscribe((direction: Direction) => {\n                this.computePositionAnimationState(direction);\n                changeDetectorRef.markForCheck();\n            });\n        }\n    }\n\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n        if (this.bodyPosition === 'center' && this.origin != null) {\n            this.bodyPosition = this.computePositionFromOrigin();\n        }\n    }\n\n    ngOnDestroy() {\n        this.dirChangeSubscription.unsubscribe();\n    }\n\n    onTranslateTabStarted(e: AnimationEvent): void {\n        const isCentering = this.isCenterPosition(e.toState);\n        this.beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this.onCentering.emit(this.elementRef.nativeElement.clientHeight);\n        }\n    }\n\n    onTranslateTabComplete(e: AnimationEvent): void {\n        // If the transition to the center is complete, emit an event.\n        if (this.isCenterPosition(e.toState) && this.isCenterPosition(this.bodyPosition)) {\n            this.onCentered.emit();\n        }\n\n        if (this.isCenterPosition(e.fromState) && !this.isCenterPosition(this.bodyPosition)) {\n            this.afterLeavingCenter.emit();\n        }\n    }\n\n    /** The text direction of the containing app. */\n    getLayoutDirection(): Direction {\n        return this.dir && this.dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    /** Whether the provided position state is considered center, regardless of origin. */\n    isCenterPosition(position: McTabBodyPositionState | string): boolean {\n        return position === 'center' ||\n            position === 'left-origin-center' ||\n            position === 'right-origin-center';\n    }\n\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    private computePositionAnimationState(dir: Direction = this.getLayoutDirection()) {\n        if (this.positionIndex < 0) {\n            this.bodyPosition = dir === 'ltr' ? 'left' : 'right';\n        } else if (this.positionIndex > 0) {\n            this.bodyPosition = dir === 'ltr' ? 'right' : 'left';\n        } else {\n            this.bodyPosition = 'center';\n        }\n    }\n\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    private computePositionFromOrigin(): McTabBodyPositionState {\n        const dir = this.getLayoutDirection();\n\n        if ((dir === 'ltr' && this.origin <= 0) || (dir === 'rtl' && this.origin > 0)) {\n            return 'left-origin-center';\n        }\n\n        return 'right-origin-center';\n    }\n}\n\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\n@Directive({\n    selector: '[mcTabBodyHost]'\n})\nexport class McTabBodyPortal extends CdkPortalOutlet implements OnInit, OnDestroy {\n    /** Subscription to events for when the tab body begins centering. */\n    private centeringSub = Subscription.EMPTY;\n    /** Subscription to events for when the tab body finishes leaving from center position. */\n    private leavingSub = Subscription.EMPTY;\n\n    constructor(\n        componentFactoryResolver: ComponentFactoryResolver,\n        viewContainerRef: ViewContainerRef,\n        @Inject(forwardRef(() => McTabBody)) private host: McTabBody) {\n        super(componentFactoryResolver, viewContainerRef);\n    }\n\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit(): void {\n        super.ngOnInit();\n\n        this.centeringSub = this.host.beforeCentering\n            .pipe(startWith(this.host.isCenterPosition(this.host.bodyPosition)))\n            .subscribe((isCentering: boolean) => {\n                if (isCentering && !this.hasAttached()) {\n                    this.attach(this.host.content);\n                }\n            });\n\n        this.leavingSub = this.host.afterLeavingCenter.subscribe(() => {\n            this.detach();\n        });\n    }\n\n    /** Clean up centering subscription. */\n    ngOnDestroy(): void {\n        super.ngOnDestroy();\n        this.centeringSub.unsubscribe();\n        this.leavingSub.unsubscribe();\n    }\n}\n","import { Directive, ElementRef } from '@angular/core';\nimport {\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\n\n\n// Boilerplate for applying mixins to McTabLabelWrapper.\n/** @docs-private */\nexport class McTabLabelWrapperBase {}\nexport const mcTabLabelWrapperMixinBase: CanDisableCtor &\n    typeof McTabLabelWrapperBase = mixinDisabled(McTabLabelWrapperBase);\n\n/**\n * Used in the `mc-tab-group` view to display tab labels.\n * @docs-private\n */\n@Directive({\n    selector: '[mcTabLabelWrapper]',\n    inputs: ['disabled'],\n    host: {\n        '[class.mc-disabled]': 'disabled',\n        '[attr.aria-disabled]': '!!disabled'\n    }\n})\nexport class McTabLabelWrapper extends mcTabLabelWrapperMixinBase implements CanDisable {\n    constructor(public elementRef: ElementRef) {\n        super();\n    }\n\n    /** Sets focus on the wrapper element */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    getOffsetLeft(): number {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n\n    getOffsetWidth(): number {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    Renderer2,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewContainerRef, ViewEncapsulation\n} from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { McMeasureScrollbarService } from '@ptsecurity/mosaic/core';\nimport { Observable } from 'rxjs';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\n// tslint:disable-next-line\nimport ModalUtil from './modal-util';\nimport { IModalButtonOptions, IModalOptions, ModalType, OnClickCallback } from './modal.type';\n\n\n// Duration when perform animations (ms)\nexport const MODAL_ANIMATE_DURATION = 200;\n\ntype AnimationState = 'enter' | 'leave' | null;\n\n@Component({\n    selector: 'mc-modal',\n    templateUrl: './modal.component.html',\n    styleUrls: ['./modal.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McModalComponent<T = any, R = any> extends McModalRef<T, R>\n    implements OnInit, OnChanges, AfterViewInit, OnDestroy, IModalOptions {\n\n    // tslint:disable-next-line:no-any\n    @Input() mcModalType: ModalType = 'default';\n    // If not specified, will use <ng-content>\n    @Input() mcContent: string | TemplateRef<{}> | Type<T>;\n    // available when mcContent is a component\n    @Input() mcComponentParams: T;\n    // Default Modal ONLY\n    @Input() mcFooter: string | TemplateRef<{}> | IModalButtonOptions<T>[];\n\n    @Input()\n    get mcVisible() { return this._mcVisible; }\n    set mcVisible(value) { this._mcVisible = value; }\n\n    _mcVisible = false;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n\n    @Input() mcZIndex: number = 1000;\n    @Input() mcWidth: number | string = 480;\n    @Input() mcWrapClassName: string;\n    @Input() mcClassName: string;\n    @Input() mcStyle: object;\n    @Input() mcTitle: string | TemplateRef<{}>;\n    @Input() mcCloseByESC: boolean = true;\n\n    @Input()\n    get mcClosable() { return this._mcClosable; }\n    set mcClosable(value) { this._mcClosable = value; }\n    _mcClosable = true;\n\n    @Input()\n    get mcMask() { return this._mcMask; }\n    set mcMask(value) { this._mcMask = value; }\n    _mcMask = true;\n\n    @Input()\n    get mcMaskClosable() { return this._mcMaskClosable; }\n    set mcMaskClosable(value) { this._mcMaskClosable = value; }\n    _mcMaskClosable = true;\n\n    @Input() mcMaskStyle: object;\n    @Input() mcBodyStyle: object;\n\n    // Trigger when modal open(visible) after animations\n    @Output() mcAfterOpen = new EventEmitter<void>();\n    // Trigger when modal leave-animation over\n    @Output() mcAfterClose = new EventEmitter<R>();\n\n    // --- Predefined OK & Cancel buttons\n    @Input() mcOkText: string;\n    @Input() mcOkType = 'primary';\n\n    @Input()\n    get mcOkLoading() { return this._mcOkLoading; }\n    set mcOkLoading(value) { this._mcOkLoading = value; }\n    _mcOkLoading = false;\n\n    @Input() @Output() mcOnOk: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    @Input() mcCancelText: string;\n\n    @Input()\n    get mcCancelLoading() { return this._mcCancelLoading; }\n    set mcCancelLoading(value) { this._mcCancelLoading = value; }\n    _mcCancelLoading = false;\n\n    @Input() @Output() mcOnCancel: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n\n    @ViewChild('modalContainer') modalContainer: ElementRef;\n    @ViewChild('bodyContainer', { read: ViewContainerRef }) bodyContainer: ViewContainerRef;\n    // Only aim to focus the ok button that needs to be auto focused\n    @ViewChild('autoFocusButtonOk', { read: ElementRef }) autoFocusButtonOk: ElementRef;\n\n    maskAnimationClassMap: object;\n    modalAnimationClassMap: object;\n    // The origin point that animation based on\n    transformOrigin = '0px 0px 0px';\n\n    // Observable alias for mcAfterOpen\n    get afterOpen(): Observable<void> {\n        return this.mcAfterOpen.asObservable();\n    }\n\n    // Observable alias for mcAfterClose\n    get afterClose(): Observable<R> {\n        return this.mcAfterClose.asObservable();\n    }\n\n    get okText(): string {\n        return this.mcOkText;\n    }\n\n    get cancelText(): string {\n        return this.mcCancelText;\n    }\n\n    // Indicate whether this dialog should hidden\n    get hidden(): boolean {\n        return !this.mcVisible && !this.animationState;\n    }\n\n    // Handle the reference when using mcContent as Component\n    private contentComponentRef: ComponentRef<T>;\n    // Current animation state\n    private animationState: AnimationState;\n    private container: HTMLElement | OverlayRef;\n\n    constructor(\n        private overlay: Overlay,\n        private renderer: Renderer2,\n        private cfr: ComponentFactoryResolver,\n        private elementRef: ElementRef,\n        private viewContainer: ViewContainerRef,\n        private mcMeasureScrollbarService: McMeasureScrollbarService,\n        private modalControl: McModalControlService,\n        private changeDetector: ChangeDetectorRef,\n        @Inject(DOCUMENT) private document: any) {\n\n        super();\n    }\n\n    @Input() mcGetContainer: HTMLElement | OverlayRef | (() => HTMLElement | OverlayRef) = () => this.overlay.create();\n\n    ngOnInit() {\n\n        // Create component along without View\n        if (this.isComponent(this.mcContent)) {\n            this.createDynamicComponent(this.mcContent as Type<T>);\n        }\n\n        // Setup default button options\n        if (this.isModalButtons(this.mcFooter)) {\n            this.mcFooter = this.formatModalButtons(this.mcFooter as IModalButtonOptions<T>[]);\n        }\n\n        // Place the modal dom to elsewhere\n        this.container = typeof this.mcGetContainer === 'function' ? this.mcGetContainer() : this.mcGetContainer;\n        if (this.container instanceof HTMLElement) {\n            this.container.appendChild(this.elementRef.nativeElement);\n        } else if (this.container instanceof OverlayRef) {\n            // NOTE: only attach the dom to overlay, the view container is not changed actually\n            this.container.overlayElement.appendChild(this.elementRef.nativeElement);\n        }\n\n        // Register modal when afterOpen/afterClose is stable\n        this.modalControl.registerModal(this);\n    }\n\n    // [NOTE] NOT available when using by service!\n    // Because ngOnChanges never be called when using by service,\n    // here we can't support \"mcContent\"(Component) etc. as inputs that initialized dynamically.\n    // BUT: User also can change \"mcContent\" dynamically to trigger UI changes\n    // (provided you don't use \bComponent that needs initializations)\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.mcVisible) {\n            // Do not trigger animation while initializing\n            this.handleVisibleStateChange(this.mcVisible, !changes.mcVisible.firstChange);\n        }\n    }\n\n    ngAfterViewInit() {\n        // If using Component, it is the time to attach View while bodyContainer is ready\n        if (this.contentComponentRef) {\n            this.bodyContainer.insert(this.contentComponentRef.hostView);\n        }\n\n        if (this.autoFocusButtonOk) {\n            (this.autoFocusButtonOk.nativeElement as HTMLButtonElement).focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.container instanceof OverlayRef) {\n            this.container.dispose();\n        }\n    }\n\n    open() {\n        this.changeVisibleFromInside(true);\n    }\n\n    close(result?: R) {\n        this.changeVisibleFromInside(false, result);\n    }\n\n    // Destroy equals Close\n    destroy(result?: R) {\n        this.close(result);\n    }\n\n    triggerOk() {\n        this.onClickOkCancel('ok');\n    }\n\n    triggerCancel() {\n        this.onClickOkCancel('cancel');\n    }\n\n    getInstance(): McModalComponent {\n        return this;\n    }\n\n    getContentComponentRef(): ComponentRef<T> {\n        return this.contentComponentRef;\n    }\n\n    getContentComponent(): T {\n        return this.contentComponentRef && this.contentComponentRef.instance;\n    }\n\n    getElement(): HTMLElement {\n        return this.elementRef && this.elementRef.nativeElement;\n    }\n\n    onClickMask($event: MouseEvent) {\n        if (\n            this.mcMask &&\n            this.mcMaskClosable &&\n            ($event.target as HTMLElement).classList.contains('mc-modal-wrap') &&\n            this.mcVisible\n        ) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // tslint:disable-next-line\n    isModalType(type: ModalType): boolean {\n        return this.mcModalType === type;\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        if (event.keyCode === ESCAPE && this.container && (this.container instanceof OverlayRef)) {\n\n            this.close();\n            event.preventDefault();\n        }\n    }\n\n    // AoT\n    onClickCloseBtn() {\n        if (this.mcVisible) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // AoT\n    // tslint:disable-next-line\n    onClickOkCancel(type: 'ok' | 'cancel') {\n        const trigger = { ok: this.mcOnOk, cancel: this.mcOnCancel }[type];\n        const loadingKey = { ok: 'mcOkLoading', cancel: 'mcCancelLoading' }[type];\n\n        if (trigger instanceof EventEmitter) {\n            trigger.emit(this.getContentComponent());\n        } else if (typeof trigger === 'function') {\n\n            const result = trigger(this.getContentComponent());\n            // Users can return \"false\" to prevent closing by default\n            const caseClose = (doClose: boolean | void | {}) => (doClose !== false) && this.close(doClose as R);\n\n            if (isPromise(result)) {\n                this[loadingKey] = true;\n                const handleThen = (doClose) => {\n                    this[loadingKey] = false;\n                    caseClose(doClose);\n                };\n                (result as Promise<void>).then(handleThen).catch(handleThen);\n            } else {\n                caseClose(result);\n            }\n        }\n    }\n\n    // AoT\n    isNonEmptyString(value: {}): boolean {\n        return typeof value === 'string' && value !== '';\n    }\n\n    // AoT\n    isTemplateRef(value: {}): boolean {\n        return value instanceof TemplateRef;\n    }\n\n    // AoT\n    isComponent(value: {}): boolean {\n        return value instanceof Type;\n    }\n\n    // AoT\n    isModalButtons(value: {}): boolean {\n        return Array.isArray(value) && value.length > 0;\n    }\n\n    // Do rest things when visible state changed\n    private handleVisibleStateChange(visible: boolean, animation: boolean = true, closeResult?: R): Promise<any> {\n        // Hide scrollbar at the first time when shown up\n        if (visible) {\n            this.changeBodyOverflow(1);\n        }\n\n        return Promise\n            .resolve(animation && this.animateTo(visible))\n            // Emit open/close event after animations over\n            .then(() => {\n                if (visible) {\n                    this.mcAfterOpen.emit();\n                } else {\n                    this.mcAfterClose.emit(closeResult);\n                    // Show/hide scrollbar when animation is over\n                    this.changeBodyOverflow();\n                }\n            });\n    }\n\n    // Lookup a button's property, if the prop is a function, call & then return the result, otherwise, return itself.\n    // AoT\n    // tslint:disable-next-line\n    getButtonCallableProp(options: IModalButtonOptions<T>, prop: string): {} {\n        const value = options[prop];\n        const args: any[] = [];\n        if (this.contentComponentRef) {\n            args.push(this.contentComponentRef.instance);\n        }\n\n        return typeof value === 'function' ? value.apply(options, args) : value;\n    }\n\n    // On mcFooter's modal button click\n    // AoT\n    // tslint:disable-next-line\n    onButtonClick(button: IModalButtonOptions<T>) {\n        // Call onClick directly\n        const result = this.getButtonCallableProp(button, 'onClick');\n        if (isPromise(result)) {\n            button.loading = true;\n            (result as Promise<{}>).then(() => button.loading = false).catch(() => button.loading = false);\n        }\n    }\n\n    // Change mcVisible from inside\n    private changeVisibleFromInside(visible: boolean, closeResult?: R): Promise<void> {\n        if (this.mcVisible !== visible) {\n            // Change mcVisible value immediately\n            this.mcVisible = visible;\n            this.mcVisibleChange.emit(visible);\n\n            return this.handleVisibleStateChange(visible, true, closeResult);\n        }\n\n        return Promise.resolve();\n    }\n\n    private changeAnimationState(state: AnimationState) {\n        this.animationState = state;\n        if (state) {\n            this.maskAnimationClassMap = {\n                [`fade-${state}`]: true,\n                [`fade-${state}-active`]: true\n            };\n            this.modalAnimationClassMap = {\n                [`zoom-${state}`]: true,\n                [`zoom-${state}-active`]: true\n            };\n        } else {\n            // @ts-ignore\n            this.maskAnimationClassMap = this.modalAnimationClassMap = null;\n        }\n\n        if (this.contentComponentRef) {\n            this.contentComponentRef.changeDetectorRef.markForCheck();\n        } else {\n            this.changeDetector.markForCheck();\n        }\n    }\n\n    private animateTo(isVisible: boolean): Promise<any> {\n        // Figure out the lastest click position when shows up\n        if (isVisible) {\n            // [NOTE] Using timeout due to the document.click event is fired later than visible change,\n            // so if not postponed to next event-loop, we can't get the lastest click position\n            window.setTimeout(() => this.updateTransformOrigin());\n        }\n\n        this.changeAnimationState(isVisible ? 'enter' : 'leave');\n\n        // Return when animation is over\n        return new Promise((resolve) => window.setTimeout(() => {\n            this.changeAnimationState(null);\n            resolve();\n        }, MODAL_ANIMATE_DURATION));\n    }\n\n    private formatModalButtons(buttons: IModalButtonOptions<T>[]): IModalButtonOptions<T>[] {\n        return buttons.map((button) => {\n\n            return {\n                ...{\n                    type: 'default',\n                    size: 'default',\n                    autoLoading: true,\n                    show: true,\n                    loading: false,\n                    disabled: false\n                },\n                ...button\n            };\n        });\n    }\n\n    /**\n     * Create a component dynamically but not attach to any View\n     * (this action will be executed when bodyContainer is ready)\n     * @param component Component class\n     */\n    private createDynamicComponent(component: Type<T>) {\n        const factory = this.cfr.resolveComponentFactory(component);\n        const childInjector = Injector.create({\n            providers: [{provide: McModalRef, useValue: this}],\n            parent: this.viewContainer.parentInjector\n        });\n\n        this.contentComponentRef = factory.create(childInjector);\n\n        if (this.mcComponentParams) {\n            Object.assign(this.contentComponentRef.instance, this.mcComponentParams);\n        }\n\n        // Do the first change detection immediately\n        // (or we do detection at ngAfterViewInit, multi-changes error will be thrown)\n        this.contentComponentRef.changeDetectorRef.detectChanges();\n\n\n    }\n\n    // Update transform-origin to the last click position on document\n    private updateTransformOrigin() {\n        const modalElement = this.modalContainer.nativeElement as HTMLElement;\n        const lastPosition = ModalUtil.getLastClickPosition();\n\n        if (lastPosition) {\n            // tslint:disable-next-line\n            this.transformOrigin = `${lastPosition.x - modalElement.offsetLeft}px ${lastPosition.y - modalElement.offsetTop}px 0px`;\n        }\n    }\n\n    /**\n     * Take care of the body's overflow to decide the existense of scrollbar\n     * @param plusNum The number that the openModals.length will increase soon\n     */\n    private changeBodyOverflow(plusNum: number = 0) {\n        const openModals = this.modalControl.openModals;\n\n        if (openModals.length + plusNum > 0) {\n            // tslint:disable-next-line\n            this.renderer.setStyle(this.document.body, 'padding-right', `${this.mcMeasureScrollbarService.scrollBarWidth}px`);\n            this.renderer.setStyle(this.document.body, 'overflow', 'hidden');\n        } else {\n            this.renderer.removeStyle(this.document.body, 'padding-right');\n            this.renderer.removeStyle(this.document.body, 'overflow');\n        }\n    }\n}\n\n////////////\n\nfunction isPromise(obj: {} | void): boolean {\n    // tslint:disable-next-line\n    return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof (obj as Promise<{}>).then === 'function' && typeof (obj as Promise<{}>).catch === 'function';\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({\n    name: 'toCssUnit'\n})\nexport class CssUnitPipe implements PipeTransform {\n    transform(value: number | string, defaultUnit: string = 'px'): string {\n        const formatted = +value;\n\n        return isNaN(formatted) ? `${value}` : `${formatted}${defaultUnit}`;\n    }\n}\n","import { ComponentRef, Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\nimport { McModalComponent } from './modal.component';\nimport { ConfirmType, IModalOptions, IModalOptionsForService } from './modal.type';\n\n\n// A builder used for managing service creating modals\nexport class ModalBuilderForService {\n\n    // Modal ComponentRef, \"null\" means it has been destroyed\n    private modalRef: ComponentRef<McModalComponent> | null;\n    private overlayRef: OverlayRef;\n\n    constructor(private overlay: Overlay, options: IModalOptionsForService = {}) {\n        this.createModal();\n\n        if (!('mcGetContainer' in options)) {\n            options.mcGetContainer = undefined;\n        }\n\n        this.changeProps(options);\n        this.modalRef!.instance.open();\n        this.modalRef!.instance.mcAfterClose.subscribe(() => this.destroyModal());\n\n        this.overlayRef.keydownEvents()\n            // @ts-ignore\n            .pipe(filter((event: KeyboardEvent) => {\n                return event.keyCode === ESCAPE && options.mcCloseByESC;\n            }))\n            .subscribe(() => this.modalRef!.instance.close());\n    }\n\n    getInstance(): McModalComponent | null {\n        return this.modalRef && this.modalRef.instance;\n    }\n\n    destroyModal(): void {\n        if (this.modalRef) {\n            this.overlayRef.dispose();\n            this.modalRef = null;\n        }\n    }\n\n    private changeProps(options: IModalOptions): void {\n        if (this.modalRef) {\n            // here not limit user's inputs at runtime\n            Object.assign(this.modalRef.instance, options);\n        }\n    }\n\n    // Create component to ApplicationRef\n    private createModal(): void {\n        this.overlayRef = this.overlay.create();\n        this.modalRef = this.overlayRef.attach(new ComponentPortal(McModalComponent));\n    }\n}\n\n@Injectable()\nexport class McModalService {\n    // Track of the current close modals (we assume invisible is close this time)\n    get openModals(): McModalRef[] {\n        return this.modalControl.openModals;\n    }\n\n    get afterAllClose(): Observable<void> {\n        return this.modalControl.afterAllClose.asObservable();\n    }\n\n    constructor(\n        private overlay: Overlay,\n        private modalControl: McModalControlService) {\n    }\n\n    // Closes all of the currently-open dialogs\n    closeAll(): void {\n        this.modalControl.closeAll();\n    }\n\n    create<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n\n        if (typeof options.mcOnCancel !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnCancel = () => {};\n        }\n\n        if (!('mcCloseByESC' in options)) {\n            options.mcCloseByESC = true;\n        }\n\n\n        if (!('mcWidth' in options)) {\n            // tslint:disable-next-line\n            options.mcWidth = 480;\n        }\n\n        return new ModalBuilderForService(this.overlay, options).getInstance()!;\n    }\n\n    confirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType = 'confirm'): McModalRef<T> {\n        if ('mcFooter' in options) {\n            console.warn(`The Confirm-Modal doesn't support \"mcFooter\", this property will be ignored.`);\n        }\n\n        // NOTE: only support function currently by calling confirm()\n        if (typeof options.mcOnOk !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnOk = () => {};\n        }\n\n        options.mcModalType = 'confirm';\n        options.mcClassName = `mc-confirm mc-confirm-${confirmType} ${options.mcClassName || ''}`;\n        options.mcMaskClosable = false;\n\n        return this.create(options);\n    }\n\n    success<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'success');\n    }\n\n    delete<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'warn');\n    }\n\n    private simpleConfirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType): McModalRef<T> {\n        // Remove the Cancel button if the user not specify a Cancel button\n        if (!('mcCancelText' in options)) {\n            // @ts-ignore\n            options.mcCancelText = null;\n        }\n\n        return this.confirm(options, confirmType);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { CssUnitPipe } from './css-unit.pipe';\nimport { McModalControlService } from './modal-control.service';\nimport { McModalComponent } from './modal.component';\nimport { McModalService } from './modal.service';\n\n\n@NgModule({\n    imports: [ CommonModule, OverlayModule, McButtonModule, McIconModule ],\n    exports: [ McModalComponent ],\n    declarations: [ McModalComponent, CssUnitPipe ],\n    entryComponents: [ McModalComponent ],\n    providers: [ McModalControlService, McModalService ]\n})\nexport class McModalModule { }\n","import { fromEvent, Observable, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport {\n    AfterViewInit,\n    Component, Directive,\n    ElementRef,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    ViewEncapsulation,\n    ContentChild,\n    TemplateRef,\n    ChangeDetectorRef,\n    ChangeDetectionStrategy,\n    ViewChild\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Platform } from '@ptsecurity/cdk/platform';\nimport { CanDisable, CanDisableCtor, mixinDisabled } from '@ptsecurity/mosaic/core';\n\n\nconst COLLAPSED_CLASS: string = 'mc-navbar-collapsed-title';\nconst MC_ICON = 'mc-icon';\nconst MC_NAVBAR = 'mc-navbar';\nconst MC_NAVBAR_CONTAINER = 'mc-navbar-container';\nconst MC_NAVBAR_ITEM = 'mc-navbar-item';\nconst MC_NAVBAR_BRAND = 'mc-navbar-brand';\nconst MC_NAVBAR_TITLE = 'mc-navbar-title';\nconst MC_NAVBAR_LOGO = 'mc-navbar-logo';\n\nexport type McNavbarContainerPositionType = 'left' | 'right';\n\nexport interface IMcNavbarDropdownItem {\n    link?: string;\n    text: string;\n}\n\n@Directive({\n    selector: MC_NAVBAR_LOGO,\n    host: {\n        class: MC_NAVBAR_LOGO\n    }\n})\nexport class McNavbarLogo {}\n\n@Directive({\n    selector: MC_NAVBAR_BRAND,\n    host: {\n        class: MC_NAVBAR_BRAND\n    }\n})\nexport class McNavbarBrand {}\n\n@Directive({\n    selector: MC_NAVBAR_TITLE,\n    host: {\n        class: MC_NAVBAR_TITLE\n    }\n})\nexport class McNavbarTitle {}\n\nexport class McNavbarItemBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McNavbarMixinBase: CanDisableCtor & typeof McNavbarItemBase = mixinDisabled(McNavbarItemBase);\n\n@Component({\n    selector: MC_NAVBAR_ITEM,\n    template: `\n        <a\n            [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\n            (click)=\"handleClickByItem()\"\n            (keydown)=\"handleKeydown($event)\"\n            class=\"mc-navbar-item\"\n        >\n            <ng-content></ng-content>\n            <i *ngIf=\"hasDropdownContent\" mc-icon=\"mc-angle-down-M_16\"></i>\n        </a>\n        <ul\n            #dropdownContent\n            *ngIf=\"hasDropdownContent\"\n            [ngClass]=\"{ 'is-collapsed': isCollapsed }\"\n            class=\"mc-navbar-dropdown\"\n        >\n            <li\n                *ngFor=\"let item of dropdownItems\"\n                (click)=\"handleClickByDropdownItem()\"\n                class=\"mc-navbar-dropdown-item\"\n            >\n                <ng-container *ngIf=\"dropdownItemTmpl\">\n                    <ng-container *ngTemplateOutlet=\"dropdownItemTmpl; context: { $implicit: item }\"></ng-container>\n                </ng-container>\n                <a\n                    *ngIf=\"!dropdownItemTmpl\"\n                    [attr.href]=\"item.link\"\n                    [ngClass]=\"{ 'is-active': isActiveDropdownLink(item.link) }\"\n                    class=\"mc-navbar-dropdown-link\"\n                >{{ item.text }}</a>\n            </li>\n        </ul>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': '-1'\n    }\n})\nexport class McNavbarItem extends _McNavbarMixinBase implements OnInit, AfterViewInit, OnDestroy, CanDisable {\n\n    @Input()\n    tabIndex: number = 0;\n\n    @Input()\n    dropdownItems: IMcNavbarDropdownItem[] = [];\n\n    @Input()\n    set collapsedTitle(value: string) {\n        this.elementRef.nativeElement.setAttribute('computedTitle', encodeURI(value));\n    }\n\n    @ContentChild('dropdownItemTmpl', { read: TemplateRef })\n    dropdownItemTmpl: TemplateRef<IMcNavbarDropdownItem>;\n\n    @ViewChild('dropdownContent', { read: ElementRef })\n    dropdownContent: ElementRef;\n\n    get hasDropdownContent() {\n        return this.dropdownItems.length > 0;\n    }\n\n    isCollapsed: boolean = true;\n\n    private _subscription: Subscription = new Subscription();\n    private _focusMonitor$: Observable<FocusOrigin>;\n\n    private get _dropdownElements(): HTMLElement[] {\n        return this.dropdownContent ? this.dropdownContent.nativeElement.querySelectorAll('li > *') : [];\n    }\n\n    constructor(\n        public  elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _platform: Platform,\n        private _cdRef: ChangeDetectorRef\n    ) {\n        super(elementRef);\n    }\n\n    ngOnInit() {\n        this.denyClickIfDisabled();\n\n        this._focusMonitor$ = this._focusMonitor.monitor(this.elementRef.nativeElement, true);\n\n        if (this.hasDropdownContent) {\n            this.listenClickOutside();\n        }\n    }\n\n    ngAfterViewInit() {\n        if (!this.hasDropdownContent) {\n            return;\n        }\n\n        this.startListenFocusDropdownItems();\n    }\n\n    ngOnDestroy() {\n        this._subscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n        this.stopListenFocusDropdownItems();\n    }\n\n    isActiveDropdownLink(link: string): boolean {\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n\n        return window.location.href.indexOf(link) >= 0;\n    }\n\n    handleClickByItem() {\n        this.toggleDropdown();\n    }\n\n    handleKeydown($event: KeyboardEvent) {\n        const isNavbarItem = ($event.target as HTMLElement).classList.contains(MC_NAVBAR_ITEM);\n\n        // tslint:disable-next-line\n        if (this.hasDropdownContent && $event.keyCode === SPACE && isNavbarItem) {\n            this.toggleDropdown();\n        }\n    }\n\n    handleClickByDropdownItem() {\n        this.forceCloseDropdown();\n    }\n\n    private listenClickOutside() {\n        this._subscription.add(\n            this._focusMonitor$.subscribe((origin) => {\n                if (origin === null) {\n                    this.forceCloseDropdown();\n                }\n            })\n        );\n    }\n\n    private toggleDropdown() {\n        this.isCollapsed = !this.isCollapsed;\n    }\n\n    private forceCloseDropdown() {\n        this.isCollapsed = true;\n        this._cdRef.detectChanges();\n    }\n\n    private startListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.monitor(el, true);\n        });\n    }\n\n    private stopListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.stopMonitoring(el);\n        });\n    }\n\n    // This method is required due to angular 2 issue https://github.com/angular/angular/issues/11200\n    private denyClickIfDisabled() {\n        const events: Event[] = this.elementRef.nativeElement.eventListeners('click');\n\n        events.forEach((event) => this.elementRef.nativeElement.removeEventListener('click', event));\n\n        this.elementRef.nativeElement.addEventListener('click', (event: MouseEvent) => {\n            if (this.elementRef.nativeElement.hasAttribute('disabled')) {\n                event.stopImmediatePropagation();\n            }\n        }, true);\n\n        events.forEach((event) => this.elementRef.nativeElement.addEventListener('click', event));\n    }\n}\n\n@Directive({\n    selector: MC_NAVBAR_CONTAINER\n})\nexport class McNavbarContainer {\n    @Input()\n    position: McNavbarContainerPositionType = 'left';\n\n    @HostBinding('class')\n    get cssClasses(): string {\n        return this.position === 'left' ? 'mc-navbar-left' : 'mc-navbar-right';\n    }\n}\n\nclass CollapsibleItem {\n    private _collapsed: boolean = false;\n\n    constructor(\n        public element: HTMLElement,\n        public width: number\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        this._collapsed = collapsed;\n\n        this.updateCollapsedClass();\n    }\n\n    private updateCollapsedClass() {\n        if (this._collapsed) {\n            this.element.classList.add(COLLAPSED_CLASS);\n        } else {\n            this.element.classList.remove(COLLAPSED_CLASS);\n        }\n\n    }\n}\n\nclass CachedItemWidth {\n\n    get canCollapse(): boolean {\n        return this.itemsForCollapse.length > 0;\n    }\n\n    private _collapsedItemsWidth: number;\n\n    get collapsedItemsWidth(): number {\n        if (this._collapsedItemsWidth !== undefined) {\n            return this._collapsedItemsWidth;\n        }\n\n        this.calculateAndCacheCollapsedItemsWidth();\n\n        return this._collapsedItemsWidth;\n    }\n\n    constructor(\n        public element: HTMLElement,\n        public width: number,\n        public itemsForCollapse: CollapsibleItem[] = []\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        if (this.itemsForCollapse.length > 0) {\n            this.updateTitle(collapsed);\n        }\n\n        this.itemsForCollapse.forEach((item) => item.processCollapsed(collapsed));\n    }\n\n    private calculateAndCacheCollapsedItemsWidth() {\n        this._collapsedItemsWidth = this.itemsForCollapse\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getTitle(): string {\n        const computedTitle = this.element.getAttribute('computedTitle');\n\n        return computedTitle\n            ? decodeURI(computedTitle)\n            : (this.itemsForCollapse.length > 0 ? this.itemsForCollapse[0].element.innerText : '');\n    }\n\n    private updateTitle(collapsed: boolean) {\n        if (collapsed) {\n            this.element.setAttribute('title', this.getTitle());\n        } else {\n            this.element.removeAttribute('title');\n        }\n    }\n}\n\n\n@Component({\n    selector: MC_NAVBAR,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <nav class=\"mc-navbar\">\n            <ng-content select=\"[${MC_NAVBAR_CONTAINER}],${MC_NAVBAR_CONTAINER}\"></ng-content>\n        </nav>\n    `,\n    styleUrls: ['./navbar.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class McNavbar implements AfterViewInit, OnDestroy {\n\n    private readonly forceRecalculateItemsWidth: boolean = false;\n    private readonly resizeDebounceInterval: number = 100;\n    private readonly firstLevelElement: string = MC_NAVBAR_CONTAINER;\n    private readonly secondLevelElements: string[] = [\n        MC_NAVBAR_ITEM,\n        MC_NAVBAR_BRAND,\n        MC_NAVBAR_TITLE\n    ];\n\n    private _totalItemsWidths: number;\n    private _itemsWidths: CachedItemWidth[];\n\n    private get maxAllowedWidth(): number {\n        return this._elementRef.nativeElement.querySelector('nav').getBoundingClientRect().width;\n    }\n\n    private get itemsWidths(): CachedItemWidth[] {\n        if (this._itemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._itemsWidths;\n        }\n\n        this.calculateAndCacheItemsWidth();\n\n        return this._itemsWidths;\n    }\n\n    private get totalItemsWidth(): number {\n        if (this._totalItemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._totalItemsWidths;\n        }\n\n        this.calculateAndCacheTotalItemsWidth();\n\n        return this._totalItemsWidths;\n    }\n\n    private _resizeSubscription: Subscription;\n\n    constructor(\n        private _elementRef: ElementRef\n    ) {\n        const resizeObserver = fromEvent(window, 'resize')\n            .pipe(debounceTime(this.resizeDebounceInterval));\n\n        this._resizeSubscription = resizeObserver.subscribe(this.updateCollapsed.bind(this));\n    }\n\n    updateCollapsed(): void {\n        let collapseDelta = this.totalItemsWidth - this.maxAllowedWidth;\n\n        for (let i = this.itemsWidths.length - 1; i >= 0; i--) {\n            const item = this.itemsWidths[i];\n\n            if (!item.canCollapse) {\n                continue;\n            }\n\n            item.processCollapsed(collapseDelta > 0);\n            collapseDelta -= item.collapsedItemsWidth;\n        }\n    }\n\n    ngAfterViewInit(): void {\n        // Note: this wait is required for loading and rendering fonts for icons;\n        // unfortunately we cannot control font rendering\n        setTimeout(() => this.updateCollapsed(), 0);\n    }\n\n    ngOnDestroy() {\n        this._resizeSubscription.unsubscribe();\n    }\n\n    private calculateAndCacheTotalItemsWidth() {\n        this._totalItemsWidths = this.itemsWidths\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getOuterElementWidth(element: HTMLElement): number {\n        const baseWidth  = element.getBoundingClientRect().width;\n        const marginRight = parseInt(getComputedStyle(element).getPropertyValue('margin-right'));\n        const marginLeft = parseInt(getComputedStyle(element).getPropertyValue('margin-left'));\n\n        return baseWidth + marginRight + marginLeft;\n    }\n\n    private calculateAndCacheItemsWidth() {\n        const allItemsSelector = this.secondLevelElements\n            .map((e: string) => `${this.firstLevelElement}>${e}`);\n        const allItems: HTMLElement[] = Array.from(this._elementRef.nativeElement.querySelectorAll(allItemsSelector));\n\n        this._itemsWidths = allItems\n            .map((el) => new CachedItemWidth(el, this.getOuterElementWidth(el), this.getItemsForCollapse(el)));\n    }\n\n    private getItemsForCollapse(element: HTMLElement): CollapsibleItem[] {\n        const icon = element.querySelector(`[${MC_ICON}],${MC_NAVBAR_LOGO},[${MC_NAVBAR_LOGO}]`);\n\n        if (!icon) {\n            return [];\n        }\n\n        return Array.from(element.querySelectorAll(MC_NAVBAR_TITLE))\n            .map((el) => new CollapsibleItem(<HTMLElement> el, el.getBoundingClientRect().width));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport {\n    McNavbar,\n    McNavbarContainer,\n    McNavbarItem,\n    McNavbarTitle,\n    McNavbarBrand,\n    McNavbarLogo\n} from './navbar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        McIconModule\n    ],\n    exports: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ],\n    declarations: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ]\n})\nexport class McNavbarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressBarMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressBarBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressBarMixinBase:\n    CanColorCtor &\n    typeof McProgressBarBase =\n        mixinColor(McProgressBarBase);\n\n@Component({\n    selector: 'mc-progress-bar',\n    templateUrl: './progress-bar.component.html',\n    styleUrls: ['./progress-bar.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-bar',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressBar extends _McProgressBarMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-bar-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressBarMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McProgressBar\n} from './progress-bar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressBar\n    ],\n    declarations: [\n        McProgressBar\n    ]\n})\nexport class McProgressBarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressSpinnerMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressSpinnerBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressSpinnerMixinBase:\n    CanColorCtor &\n    typeof McProgressSpinnerBase =\n        mixinColor(McProgressSpinnerBase);\n\nconst MAX_DASH_ARRAY = 273;\n\n@Component({\n    selector: 'mc-progress-spinner',\n    templateUrl: './progress-spinner.component.html',\n    styleUrls: ['./progress-spinner.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-spinner',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressSpinner extends _McProgressSpinnerMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-spinner-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressSpinnerMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n\n    get dashOffsetPercent(): string {\n        return `${MAX_DASH_ARRAY - this.percentage * MAX_DASH_ARRAY}%`;\n    }\n}\n","import {\n    AfterContentInit,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy, OnInit,\n    Optional,\n    Output,\n    ViewContainerRef\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction, Directionality } from '@ptsecurity/cdk/bidi';\nimport {\n    FlexibleConnectedPositionStrategy,\n    HorizontalConnectionPos,\n    Overlay,\n    OverlayConfig,\n    OverlayRef,\n    VerticalConnectionPos,\n    IScrollStrategy\n} from '@ptsecurity/cdk/overlay';\nimport { TemplatePortal } from '@ptsecurity/cdk/portal';\nimport { merge, Subscription } from 'rxjs';\nimport { filter, take, takeUntil } from 'rxjs/operators';\n\nimport { throwMcDropdownMissingError } from './dropdown-errors';\nimport { McDropdownPanel } from './dropdown-panel';\nimport { McDropdown } from './dropdown.component';\n\n\n/** Injection token that determines the scroll handling while the dropdown is open. */\nexport const MC_DROPDOWN_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-dropdown-scroll-strategy');\n\n/** @docs-private */\nexport function MC_DROPDOWN_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_DROPDOWN_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_DROPDOWN_SCROLL_STRATEGY_FACTORY\n};\n\n/**\n * This directive is intended to be used in conjunction with an mc-dropdown tag.  It is\n * responsible for toggling the display of the provided dropdown instance.\n */\n@Directive({\n    selector: `[mcDropdownTriggerFor]`,\n    host: {\n        '(touchstart)': '_openedBy = \"touch\"',\n        '(click)': 'toggle()'\n    },\n    exportAs: 'mcDropdownTrigger'\n})\nexport class McDropdownTrigger implements OnInit, AfterContentInit, OnDestroy {\n\n    /** Whether the dropdown is open. */\n    get opened(): boolean {\n        return this._opened;\n    }\n\n    /** The text direction of the containing app. */\n    get dir(): Direction {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    // Tracking input type is necessary so it's possible to only auto-focus\n    // the first item of the list when the dropdown is opened via the keyboard\n    _openedBy: 'mouse' | 'touch' | null = null;\n\n    /** References the dropdown instance that the trigger is associated with. */\n    @Input('mcDropdownTriggerFor') dropdown: McDropdownPanel;\n\n    /** Data to be passed along to any lazily-rendered content. */\n    @Input('mcDropdownTriggerData') data: any;\n\n    /** Event emitted when the associated dropdown is opened. */\n    @Output() readonly dropdownOpened: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the associated dropdown is closed. */\n    @Output() readonly dropdownClosed: EventEmitter<void> = new EventEmitter<void>();\n\n    private _portal: TemplatePortal;\n    private _overlayRef: OverlayRef | null = null;\n    private _opened: boolean = false;\n    private _closeSubscription = Subscription.EMPTY;\n    private _hoverSubscription = Subscription.EMPTY;\n\n    constructor(private _overlay: Overlay,\n                private _element: ElementRef<HTMLElement>,\n                private _viewContainerRef: ViewContainerRef,\n                @Inject(MC_DROPDOWN_SCROLL_STRATEGY) private _scrollStrategy: any,\n                @Optional() private _dir: Directionality,\n                private _focusMonitor?: FocusMonitor) {}\n\n    ngOnInit(): void {\n        this.dropdown.closed = this.dropdown.closed || new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n    }\n\n    ngAfterContentInit() {\n        this._check();\n\n        this.dropdown.closed.asObservable().subscribe(() => {\n            this._destroy();\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n\n        this._cleanUpSubscriptions();\n    }\n\n    /** Toggles the dropdown between the open and closed states. */\n    toggle(): void {\n        // tslint:disable-next-line:no-void-expression\n        return this._opened ? this.close() : this.open();\n    }\n\n    /** Opens the dropdown. */\n    open(): void {\n        if (this._opened) {\n            return;\n        }\n\n        this._check();\n\n        const overlayRef = this._createOverlay();\n        this._setPosition(overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy);\n        overlayRef.attach(this._portal);\n\n        if (this.dropdown.lazyContent) {\n            this.dropdown.lazyContent.attach(this.data);\n        }\n\n        this._closeSubscription = this._closingActions().subscribe(() => this.close());\n        this._init();\n\n        if (this.dropdown instanceof McDropdown) {\n            this.dropdown._startAnimation();\n        }\n    }\n\n    /** Closes the dropdown. */\n    close(): void {\n        this.dropdown.closed.emit();\n    }\n\n    /**\n     * Focuses the dropdown trigger.\n     * @param origin Source of the dropdown trigger's focus.\n     */\n    focus(origin: FocusOrigin = 'program') {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._element.nativeElement, origin);\n        } else {\n            this._element.nativeElement.focus();\n        }\n    }\n\n    /** Closes the dropdown and does the necessary cleanup. */\n    private _destroy() {\n        if (!this._overlayRef || !this.opened) {\n            return;\n        }\n\n        const dropdown = this.dropdown;\n\n        this._closeSubscription.unsubscribe();\n        this._overlayRef.detach();\n\n        if (dropdown instanceof McDropdown) {\n            dropdown._resetAnimation();\n\n            if (dropdown.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                dropdown._animationDone\n                    .pipe(\n                        filter((event) => event.toState === 'void'),\n                        take(1),\n                        // Interrupt if the content got re-attached.\n                        takeUntil(dropdown.lazyContent._attached)\n                    )\n                    .subscribe(() => dropdown.lazyContent.detach(), undefined, () => {\n                        // No matter whether the content got re-attached, reset the dropdown.\n                        this._reset();\n                    });\n            } else {\n                this._reset();\n            }\n        } else {\n            this._reset();\n\n            if (dropdown.lazyContent) {\n                dropdown.lazyContent.detach();\n            }\n        }\n    }\n\n    /**\n     * This method sets the dropdown state to open and focuses the first item if\n     * the dropdown was opened via the keyboard.\n     */\n    private _init(): void {\n        this.dropdown.direction = this.dir;\n        this._setIsOpened(true);\n        this.dropdown.focusFirstItem(this._openedBy || 'program');\n    }\n\n    /**\n     * This method resets the dropdown when it's closed, most importantly restoring\n     * focus to the dropdown trigger if the dropdown was opened via the keyboard.\n     */\n    private _reset(): void {\n        this._setIsOpened(false);\n\n        // We should reset focus if the user is navigating using a keyboard or\n        // if we have a top-level trigger which might cause focus to be lost\n        // when clicking on the backdrop.\n        if (!this._openedBy) {\n            // Note that the focus style will show up both for `program` and\n            // `keyboard` so we don't have to specify which one it is.\n            this.focus();\n        } else {\n            this.focus(this._openedBy);\n        }\n\n        this._openedBy = null;\n    }\n\n    // set state rather than toggle to support triggers sharing a dropdown\n    private _setIsOpened(isOpen: boolean): void {\n        this._opened = isOpen;\n        // tslint:disable-next-line:no-void-expression\n        this._opened ? this.dropdownOpened.emit() : this.dropdownClosed.emit();\n    }\n\n    /**\n     * This method checks that a valid instance of Dropdown has been passed into\n     * mcDropdownTriggerFor. If not, an exception is thrown.\n     */\n    private _check() {\n        if (!this.dropdown) {\n            throwMcDropdownMissingError();\n        }\n    }\n\n    /**\n     * This method creates the overlay from the provided dropdown's template and saves its\n     * OverlayRef so that it can be attached to the DOM when open is called.\n     */\n    private _createOverlay(): OverlayRef {\n        if (!this._overlayRef) {\n            this._portal = new TemplatePortal(this.dropdown.templateRef, this._viewContainerRef);\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions(config.positionStrategy as FlexibleConnectedPositionStrategy);\n            this._overlayRef = this._overlay.create(config);\n\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `McDropdownPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n\n        return this._overlayRef;\n    }\n\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    private _getOverlayConfig(): OverlayConfig {\n        return new OverlayConfig({\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withTransformOriginOn('.mc-dropdown__panel'),\n            hasBackdrop: this.dropdown.hasBackdrop === null || this.dropdown.hasBackdrop === undefined\n                ? true\n                : this.dropdown.hasBackdrop,\n            backdropClass: this.dropdown.backdropClass || 'cdk-overlay-transparent-backdrop',\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir\n        });\n    }\n\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the dropdown based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    private _subscribeToPositions(position: FlexibleConnectedPositionStrategy): void {\n        if (this.dropdown.setPositionClasses) {\n            // todo possibly we should not recompute positions there\n            /*position.positionChanges.subscribe((change) => {\n                const posX: DropdownPositionX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                const posY: DropdownPositionY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n\n                this.dropdown.setPositionClasses!(posX, posY);\n            });*/\n            position.positionChanges.subscribe(() => {\n                this.dropdown.setPositionClasses!(this.dropdown.xPosition, this.dropdown.yPosition);\n            });\n        }\n    }\n\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    private _setPosition(positionStrategy: FlexibleConnectedPositionStrategy) {\n        const [originX, originFallbackX]: HorizontalConnectionPos[] =\n            this.dropdown.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n\n        const [overlayY, overlayFallbackY]: VerticalConnectionPos[] =\n            this.dropdown.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        const [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        const offsetY = 0;\n\n        if (!this.dropdown.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n\n        positionStrategy.withPositions([\n            {originX, originY, overlayX, overlayY, offsetY},\n            {originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY},\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            }\n        ]);\n    }\n\n    /** Cleans up the active subscriptions. */\n    private _cleanUpSubscriptions(): void {\n        this._closeSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n\n    /** Returns a stream that emits whenever an action that should close the dropdown occurs. */\n    private _closingActions() {\n        const backdrop = this._overlayRef!.backdropClick();\n        const detachments = this._overlayRef!.detachments();\n\n        return merge(backdrop, detachments);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER, McDropdownTrigger } from './dropdown-trigger';\nimport { McDropdown } from './dropdown.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule\n    ],\n    exports: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    declarations: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    providers: [MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER]\n})\nexport class McDropdownModule {}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-content',\n    preserveWhitespaces: false,\n    templateUrl: './content.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-content]': 'true'\n    }\n})\nexport class McContentComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-footer',\n    preserveWhitespaces: false,\n    templateUrl: './footer.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-footer]': 'true'\n    }\n})\nexport class McFooterComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector : 'mc-header',\n    preserveWhitespaces: false,\n    templateUrl: './header.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-header]': 'true'\n    }\n})\nexport class McHeaderComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-layout',\n    preserveWhitespaces: false,\n    styleUrls: ['layout.css'],\n    templateUrl: './layout.component.html',\n    host: {\n        '[class.mc-layout]': 'true',\n        '[class.mc-layout-has-sidebar]': 'hasSidebar'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McLayoutComponent {\n    hasSidebar = false;\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Host,\n    Input,\n    OnInit,\n    Optional,\n    Output\n} from '@angular/core';\nimport { toBoolean } from '@ptsecurity/mosaic/core';\n\nimport { McLayoutComponent } from './layout.component';\n\n\n@Component({\n    selector: 'mc-sidebar',\n    preserveWhitespaces: false,\n    templateUrl: './sidebar.component.html',\n    host: {\n        '[class.mc-layout-sidebar]': 'true',\n        '[class.mc-layout-sidebar-collapsed]': 'mcCollapsed',\n        '[style.flex]': 'mcFlex',\n        '[style.max-width.px]': 'mcWidth',\n        '[style.min-width.px]': 'mcWidth',\n        '[style.width.px]': 'mcWidth'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSidebarComponent implements OnInit {\n\n    @Input() _mcWidth = 200;\n    @Input() mcCollapsedWidth = 80;\n\n    @Input()\n    set mcCollapsible(value: boolean) {\n        this.collapsible = toBoolean(value);\n    }\n\n    get mcCollapsible(): boolean {\n        return this.collapsible;\n    }\n\n    @Input()\n    set mcCollapsed(value: boolean) {\n        this.collapsed = toBoolean(value);\n    }\n\n    get mcCollapsed(): boolean {\n        return this.collapsed;\n    }\n\n    // tslint:disable-next-line\n    @Output() mcCollapsedChange = new EventEmitter();\n\n    private collapsed = false;\n    private collapsible = false;\n\n    get mcFlex(): string {\n        if (this.mcCollapsed) {\n            return `0 0 ${this.mcCollapsedWidth}px`;\n        } else {\n            return `0 0 ${this.mcWidth}px`;\n        }\n    }\n\n    get mcWidth(): number {\n        if (this.mcCollapsed) {\n            return this.mcCollapsedWidth;\n        } else {\n            return this._mcWidth;\n        }\n    }\n\n    constructor(\n        @Optional() @Host() private mcLayoutComponent: McLayoutComponent) {\n    }\n\n    ngOnInit() {\n        if (this.mcLayoutComponent) {\n            this.mcLayoutComponent.hasSidebar = true;\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McContentComponent } from './content.component';\nimport { McFooterComponent } from './footer.component';\nimport { McHeaderComponent } from './header.component';\nimport { McLayoutComponent } from './layout.component';\nimport { McSidebarComponent } from './sidebar.component';\n\n\n@NgModule({\n    imports: [ CommonModule ],\n    exports: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ],\n    declarations: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ]\n})\nexport class McLayoutModule {\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n    QueryList,\n    ViewEncapsulation,\n    ChangeDetectorRef,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\n\nimport { FocusKeyManager, IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { END, ENTER, HOME, PAGE_DOWN, PAGE_UP, SPACE } from '@ptsecurity/cdk/keycodes';\n\nimport {\n    McLine,\n    McLineSetter,\n    CanDisable,\n    mixinDisabled,\n    toBoolean, CanDisableCtor\n} from '@ptsecurity/mosaic/core';\n\n\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\n@Component({\n    exportAs: 'mcListOption',\n    selector: 'mc-list-option',\n    host: {\n        tabindex: '-1',\n\n        class: 'mc-list-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n        '(click)': '_handleClick()'\n    },\n    templateUrl: 'list-option.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListOption implements AfterContentInit, OnDestroy, OnInit, IFocusableOption {\n    _hasFocus: boolean = false;\n\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    @ViewChild('text') _text: ElementRef;\n\n    // Whether the label should appear before or after the checkbox. Defaults to 'after'\n    @Input() checkboxPosition: 'before' | 'after' = 'after';\n\n    @Input() value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled || (this.listSelection && this.listSelection.disabled);\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.listSelection.selectedOptions && this.listSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            this.listSelection._reportValueChange();\n        }\n    }\n\n    private _lineSetter: McLineSetter;\n    private _selected = false;\n    private _disabled = false;\n\n    constructor(\n        private _element: ElementRef,\n        private _changeDetector: ChangeDetectorRef,\n        @Inject(forwardRef(() => McListSelection))\n        public listSelection: McListSelection\n    ) {}\n\n    ngOnInit() {\n        if (this._selected) {\n            // List options that are selected at initialization can't be reported properly to the form\n            // control. This is because it takes some time until the selection-list knows about all\n            // available options. Also it can happen that the ControlValueAccessor has an initial value\n            // that should be used instead. Deferring the value change report to the next tick ensures\n            // that the form control value is not being overwritten.\n            const wasSelected = this._selected;\n\n            Promise.resolve().then(() => {\n                if (this._selected || wasSelected) {\n                    this.selected = true;\n                    this._changeDetector.markForCheck();\n                }\n            });\n        }\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    ngOnDestroy(): void {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => this.selected = false);\n        }\n\n        this.listSelection._removeOptionFromList(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    focus(): void {\n        this._element.nativeElement.focus();\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    getLabel() {\n        return this._text ? this._text.nativeElement.textContent : '';\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.listSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.listSelection.selectedOptions.select(this);\n        } else {\n            this.listSelection.selectedOptions.deselect(this);\n        }\n\n        this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleClick() {\n        if (this.disabled) { return; }\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    _handleFocus() {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur() {\n        this._hasFocus = false;\n\n        this.listSelection._onTouched();\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n\n\nexport const MC_SELECTION_LIST_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McListSelection),\n    multi: true\n};\n\n// Change event that is being fired whenever the selected state of an option changes. */\nexport class McListSelectionChange {\n    constructor(\n        // Reference to the selection list that emitted the event.\n        public source: McListSelection,\n        // Reference to the option that has been changed.\n        public option: McListOption\n    ) {}\n}\n\n\nexport class McListSelectionBase {}\n\nexport const _McListSelectionMixinBase: CanDisableCtor & typeof McListSelectionBase\n    = mixinDisabled(McListSelectionBase);\n\n@Component({\n    exportAs: 'mcListSelection',\n    selector: 'mc-list-selection',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-list-selection',\n        '[tabIndex]': 'tabIndex',\n        '(focus)': 'focus()',\n        '(blur)': '_onTouched()',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    providers: [MC_SELECTION_LIST_VALUE_ACCESSOR],\n    preserveWhitespaces: false\n})\nexport class McListSelection extends _McListSelectionMixinBase implements\n    IFocusableOption, CanDisable, AfterContentInit, ControlValueAccessor {\n\n    _keyManager: FocusKeyManager<McListOption>;\n\n    // The option components contained within this selection-list.\n    @ContentChildren(McListOption) options: QueryList<McListOption>;\n\n    tabIndex: number;\n\n    autoSelect: boolean;\n    noUnselect: boolean;\n    multiple: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input() horizontal: boolean = false;\n\n    // Emits a change event whenever the selected state of an option changes.\n    @Output() readonly selectionChange: EventEmitter<McListSelectionChange> = new EventEmitter<McListSelectionChange>();\n\n    selectedOptions: SelectionModel<McListOption>;\n\n    // Used for storing the values that were assigned before the options were initialized.\n    private _tempValues: string[] | null;\n\n    private _modelChanges = Subscription.EMPTY;\n\n    constructor(\n        private _element: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string,\n        @Attribute('multiple') multiple: string\n    ) {\n        super();\n\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.selectedOptions = new SelectionModel<McListOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.horizontal = toBoolean(this.horizontal);\n\n        this._keyManager = new FocusKeyManager<McListOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(!this.horizontal)\n            .withHorizontalOrientation(this.horizontal ? 'ltr' : null);\n\n        if (this._tempValues) {\n            this._setOptionsFromValues(this._tempValues);\n            this._tempValues = null;\n        }\n\n        // Sync external changes to the model back to the options.\n        this._modelChanges = this.selectedOptions.onChange!.subscribe((event) => {\n            for (const item of event.added) {\n                item.selected = true;\n            }\n\n            for (const item of event.removed) {\n                item.selected = false;\n            }\n        });\n\n        this.updateScrollSize();\n    }\n\n    ngOnDestroy() {\n        this._modelChanges.unsubscribe();\n    }\n\n    focus() {\n        this._element.nativeElement.focus();\n    }\n\n    selectAll() {\n        this.options.forEach((option) => option.setSelected(true));\n\n        this._reportValueChange();\n    }\n\n    deselectAll() {\n        this.options.forEach((option) => option.setSelected(false));\n\n        this._reportValueChange();\n    }\n\n    updateScrollSize(): void {\n        if (this.horizontal || !this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    // Sets the focused option of the selection-list.\n    setFocusedOption(option: McListOption): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitChangeEvent(option);\n        this._reportValueChange();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(values: string[]): void {\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        } else {\n            this._tempValues = values;\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this._onTouched = fn;\n    }\n\n    // Implemented as a part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        if (this.options) {\n            this.options.forEach((option) => option.disabled = isDisabled);\n        }\n    }\n\n    getSelectedOptionValues(): string[] {\n        return this.options.filter((option) => option.selected).map((option) => option.value);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McListOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    _canDeselectLast(listOption: McListOption): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && listOption.selected);\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    // View to model callback that should be called if the list or its options lost focus.\n    _onTouched: () => void = () => {};\n\n    // Removes an option from the selection list and updates the active item.\n    _removeOptionFromList(option: McListOption) {\n        if (option._hasFocus) {\n            const optionIndex = this._getOptionIndex(option);\n\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.setPreviousItemActive();\n            } else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.setNextItemActive();\n            }\n        }\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                if (!this.horizontal) { this._keyManager.setPreviousPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                if (!this.horizontal) { this._keyManager.setNextPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    // Reports a value change to the ControlValueAccessor\n    _reportValueChange() {\n        if (this.options) {\n            this._onChange(this.getSelectedOptionValues());\n        }\n    }\n\n    // Emits a change event if the selected state of an option changed.\n    _emitChangeEvent(option: McListOption) {\n        this.selectionChange.emit(new McListSelectionChange(this, option));\n    }\n\n    // Returns the option with the specified value.\n    private _getOptionByValue(value: string): McListOption | undefined {\n        return this.options.find((option) => option.value === value);\n    }\n\n    // Sets the selected options based on the specified values.\n    private _setOptionsFromValues(values: string[]) {\n        this.options.forEach((option) => option.setSelected(false));\n\n        values\n            .map((value) => this._getOptionByValue(value))\n            .filter(Boolean)\n            .forEach((option) => option!.setSelected(true));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    // Returns the index of the specified list option.\n    private _getOptionIndex(option: McListOption): number {\n        return this.options.toArray().indexOf(option);\n    }\n\n    // View to model callback that should be called whenever the selected options change.\n    private _onChange: (value: any) => void = (_: any) => {};\n}\n","// todo пока не делаем, перенесено из материала, но у нас в доках таких простых списков нет.\nimport {\n    AfterContentInit, ChangeDetectionStrategy, Component, ContentChildren, Directive, ElementRef, QueryList,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { McLine, McLineSetter } from '@ptsecurity/mosaic/core';\n\n\nexport class McListBase {}\n\n@Component({\n    selector: 'mc-list',\n    host: { class: 'mc-list' },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McList extends McListBase {}\n\n\n/**\n * Directive whose purpose is to add the mc- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n    selector: '[mc-subheader], [mcSubheader]',\n    host: { class: 'mc-subheader' }\n})\nexport class McListSubheaderCssStyler {}\n\n\n// Boilerplate for applying mixins to McListItem.\nexport class McListItemBase {}\n\n@Component({\n    selector: 'mc-list-item, a[mc-list-item]',\n    host: {\n        class: 'mc-list-item',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()'\n    },\n    templateUrl: './list-item.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListItem extends McListItemBase implements AfterContentInit {\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    private _lineSetter: McLineSetter;\n\n    constructor(private _element: ElementRef) {\n        super();\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    _handleFocus() {\n        this._element.nativeElement.classList.add('mc-focused');\n    }\n\n    _handleBlur() {\n        this._element.nativeElement.classList.remove('mc-focused');\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLineModule } from '@ptsecurity/mosaic/core';\n\nimport { McListSelection, McListOption } from './list-selection.component';\nimport { McList, McListItem, McListSubheaderCssStyler } from './list.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        McLineModule\n    ],\n    exports: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ],\n    declarations: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ]\n})\nexport class McListModule {}\n","import {\n    Input,\n    Attribute,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\nexport class McLinkBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McLinkBase: HasTabIndexCtor & CanDisableCtor & typeof McLinkBase\n    = mixinTabIndex(mixinDisabled(McLinkBase));\n\n@Component({\n    selector: 'a.mc-link',\n    template: `<ng-content></ng-content>`,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcLink',\n    styleUrls: ['./link.css'],\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': 'tabIndex'\n    }\n})\n\nexport class McLink extends _McLinkBase implements OnDestroy, HasTabIndex, CanDisable {\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    private _disabled = false;\n\n    constructor(\n        @Attribute('tabindex') tabIndex: string,\n        public elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _changeDetector: ChangeDetectorRef) {\n\n        super(elementRef);\n        this._focusMonitor.monitor(elementRef.nativeElement, true);\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this.elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLink } from './link.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule\n    ],\n    declarations: [McLink],\n    exports: [McLink]\n})\nexport class McLinkModule {}\n","import { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { McModalRef } from './modal-ref.class';\n\n\ninterface IRegisteredMeta {\n    modalRef: McModalRef;\n    afterOpenSubscription: Subscription;\n    afterCloseSubscription: Subscription;\n}\n\n@Injectable()\nexport class McModalControlService {\n\n    // Track singleton afterAllClose through over the injection tree\n    get afterAllClose(): Subject<void> {\n        return this.parentService ? this.parentService.afterAllClose : this.rootAfterAllClose!;\n    }\n\n    // Track singleton openModals array through over the injection tree\n    get openModals(): McModalRef[] {\n        return this.parentService ? this.parentService.openModals : this.rootOpenModals!;\n    }\n\n    // @ts-ignore\n    private rootOpenModals: McModalRef[] = this.parentService ? null : [];\n    // @ts-ignore\n    private rootAfterAllClose: Subject<void> = this.parentService ? null : new Subject<void>();\n    // @ts-ignore\n    private rootRegisteredMetaMap: Map<McModalRef, IRegisteredMeta> = this.parentService ? null : new Map();\n\n    // Registered modal for later usage\n    private get registeredMetaMap(): Map<McModalRef, IRegisteredMeta> {\n        return this.parentService ? this.parentService.registeredMetaMap : this.rootRegisteredMetaMap;\n    }\n\n    constructor(\n        @Optional() @SkipSelf() private parentService: McModalControlService) {\n    }\n\n    // Register a modal to listen its open/close\n    registerModal(modalRef: McModalRef): void {\n        if (!this.hasRegistered(modalRef)) {\n            const afterOpenSubscription = modalRef.afterOpen.subscribe(() => this.openModals.push(modalRef));\n            const afterCloseSubscription = modalRef.afterClose.subscribe(() => this.removeOpenModal(modalRef));\n\n            this.registeredMetaMap.set(modalRef, {modalRef, afterOpenSubscription, afterCloseSubscription});\n        }\n    }\n\n    hasRegistered(modalRef: McModalRef): boolean {\n        return this.registeredMetaMap.has(modalRef);\n    }\n\n    // Close all registered opened modals\n    closeAll(): void {\n        let i = this.openModals.length;\n\n        while (i--) {\n            this.openModals[i].close();\n        }\n    }\n\n    private removeOpenModal(modalRef: McModalRef): void {\n        const index = this.openModals.indexOf(modalRef);\n\n        if (index > -1) {\n            this.openModals.splice(index, 1);\n\n            if (!this.openModals.length) {\n                this.afterAllClose.next();\n            }\n        }\n    }\n}\n","import { Observable } from 'rxjs';\n\nimport { McModalComponent } from './modal.component';\n\n\n/**\n * API class that public to users to handle the modal instance.\n * McModalRef is aim to avoid accessing to the modal instance directly by users.\n */\nexport abstract class McModalRef<T = any, R = any> {\n    abstract afterOpen: Observable<void>;\n    abstract afterClose: Observable<R>;\n\n    abstract open(): void;\n\n    abstract close(result?: R): void;\n\n    abstract destroy(result?: R): void;\n\n    /**\n     * Trigger the mcOnOk/mcOnCancel by manual\n     */\n    abstract triggerOk(): void;\n\n    abstract triggerCancel(): void;\n\n    // /**\n    //  * Return the ComponentRef of mcContent when specify mcContent as a Component\n    //  * Note: this method may return undefined if the Component has not ready yet.\n    //    (it only available after Modal's ngOnInit)\n    //  */\n    // abstract getContentComponentRef(): ComponentRef<{}>;\n\n    /**\n     * Return the component instance of mcContent when specify mcContent as a Component\n     * Note: this method may return undefined if the Component has not ready yet.\n     * (it only available after Modal's ngOnInit)\n     */\n    abstract getContentComponent(): T;\n\n    /**\n     * Get the dom element of this Modal\n     */\n    abstract getElement(): HTMLElement;\n\n    /**\n     * Get the instance of the Modal itself\n     */\n    abstract getInstance(): McModalComponent;\n}\n","export interface IClickPosition {\n    x: number;\n    y: number;\n}\n\nexport class ModalUtil {\n    private lastPosition: IClickPosition;\n\n    constructor(private document: Document) {\n        this.lastPosition = {x: -1, y: -1};\n        this.listenDocumentClick();\n    }\n\n    getLastClickPosition(): IClickPosition {\n        return this.lastPosition;\n    }\n\n    listenDocumentClick(): void {\n        this.document.addEventListener('click', (event: MouseEvent) => {\n            this.lastPosition = {x: event.clientX, y: event.clientY};\n        });\n    }\n}\n\nexport default new ModalUtil(document);\n","import {\n    AfterContentInit,\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Output,\n    SimpleChanges,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport { ComponentPortal, IComponentType, Portal } from '@ptsecurity/cdk/portal';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { McCalendarCellCssClasses } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\nimport { McDatepickerIntl } from './datepicker-intl';\nimport { McMonthView } from './month-view';\nimport { McMultiYearView, yearsPerPage } from './multi-year-view';\nimport { McYearView } from './year-view';\n\n\n/**\n * Possible views for the calendar.\n * @docs-private\n */\nexport type McCalendarView = 'month' | 'year' | 'multi-year';\n\n/** Default header for McCalendar */\n@Component({\n    selector: 'mc-calendar-header',\n    templateUrl: 'calendar-header.html',\n    exportAs: 'mcCalendarHeader',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCalendarHeader<D> {\n    constructor(private intl: McDatepickerIntl,\n                @Inject(forwardRef(() => McCalendar)) public calendar: McCalendar<D>,\n                @Optional() private dateAdapter: DateAdapter<D>,\n                @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n                changeDetectorRef: ChangeDetectorRef) {\n\n        this.calendar.stateChanges.subscribe(() => changeDetectorRef.markForCheck());\n    }\n\n    /** The label for the current calendar view. */\n    get periodButtonText(): string {\n        if (this.calendar.currentView === 'month') {\n            const label = this.dateAdapter\n                .format(this.calendar.activeDate, this.dateFormats.display.monthYearLabel);\n\n            return label[0].toLocaleUpperCase() + label.substr(1);\n        }\n\n        if (this.calendar.currentView === 'year') {\n            return this.dateAdapter.getYearName(this.calendar.activeDate);\n        }\n\n        const activeYear = this.dateAdapter.getYear(this.calendar.activeDate);\n        const firstYearInView = this.dateAdapter.getYearName(\n            // tslint:disable-next-line:no-magic-numbers\n            this.dateAdapter.createDate(activeYear - activeYear % 24, 0, 1));\n        const lastYearInView = this.dateAdapter.getYearName(\n            // tslint:disable-next-line:no-magic-numbers\n            this.dateAdapter.createDate(activeYear + yearsPerPage - 1 - activeYear % 24, 0, 1));\n\n        return `${firstYearInView} \\u2013 ${lastYearInView}`;\n    }\n\n    get periodButtonLabel(): string {\n        return this.calendar.currentView === 'month' ?\n            this.intl.switchToMultiYearViewLabel : this.intl.switchToMonthViewLabel;\n    }\n\n    /** The label for the previous button. */\n    get prevButtonLabel(): string {\n        return {\n            month: this.intl.prevMonthLabel,\n            year: this.intl.prevYearLabel,\n            'multi-year': this.intl.prevMultiYearLabel\n        }[this.calendar.currentView];\n    }\n\n    /** The label for the next button. */\n    get nextButtonLabel(): string {\n        return {\n            month: this.intl.nextMonthLabel,\n            year: this.intl.nextYearLabel,\n            'multi-year': this.intl.nextMultiYearLabel\n        }[this.calendar.currentView];\n    }\n\n    /** Handles user clicks on the period label. */\n    currentPeriodClicked(): void {\n        this.calendar.currentView = this.calendar.currentView === 'month' ? 'multi-year' : 'month';\n    }\n\n    /** Handles user clicks on the previous button. */\n    previousClicked(): void {\n        this.calendar.activeDate = this.calendar.currentView === 'month' ?\n            this.dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) :\n            this.dateAdapter.addCalendarYears(\n                this.calendar.activeDate, this.calendar.currentView === 'year' ? -1 : -yearsPerPage\n            );\n    }\n\n    /** Handles user clicks on the next button. */\n    nextClicked(): void {\n        this.calendar.activeDate = this.calendar.currentView === 'month' ?\n            this.dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) :\n            this.dateAdapter.addCalendarYears(\n                this.calendar.activeDate,\n                this.calendar.currentView === 'year' ? 1 : yearsPerPage\n            );\n    }\n\n    /** Whether the previous period button is enabled. */\n    previousEnabled(): boolean {\n        if (!this.calendar.minDate) {\n            return true;\n        }\n\n        return !this.calendar.minDate ||\n            !this.isSameView(this.calendar.activeDate, this.calendar.minDate);\n    }\n\n    /** Whether the next period button is enabled. */\n    nextEnabled(): boolean {\n        return !this.calendar.maxDate ||\n            !this.isSameView(this.calendar.activeDate, this.calendar.maxDate);\n    }\n\n    /** Whether the two dates represent the same view in the current view mode (month or year). */\n    private isSameView(date1: D, date2: D): boolean {\n        if (this.calendar.currentView === 'month') {\n            return this.dateAdapter.getYear(date1) === this.dateAdapter.getYear(date2) &&\n                this.dateAdapter.getMonth(date1) === this.dateAdapter.getMonth(date2);\n        }\n        if (this.calendar.currentView === 'year') {\n            return this.dateAdapter.getYear(date1) === this.dateAdapter.getYear(date2);\n        }\n\n        // Otherwise we are in 'multi-year' view.\n        return Math.floor(this.dateAdapter.getYear(date1) / yearsPerPage) ===\n            Math.floor(this.dateAdapter.getYear(date2) / yearsPerPage);\n    }\n}\n\n/**\n * A calendar that is used as part of the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-calendar',\n    templateUrl: 'calendar.html',\n    styleUrls: ['calendar.css'],\n    host: {\n        class: 'mc-calendar'\n    },\n    exportAs: 'mcCalendar',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCalendar<D> implements AfterContentInit, AfterViewChecked, OnDestroy, OnChanges {\n\n    /** A date representing the period (month or year) to start the calendar in. */\n    @Input()\n    get startAt(): D | null {\n        return this._startAt;\n    }\n\n    set startAt(value: D | null) {\n        this._startAt = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /**\n     * The current active date. This determines which time period is shown and which date is\n     * highlighted when using keyboard navigation.\n     */\n    get activeDate(): D {\n        return this.clampedActiveDate;\n    }\n\n    set activeDate(value: D) {\n        this.clampedActiveDate = this.dateAdapter.clampDate(value, this.minDate, this.maxDate);\n        this.stateChanges.next();\n    }\n\n    /** Whether the calendar is in month view. */\n    get currentView(): McCalendarView {\n        return this._currentView;\n    }\n\n    set currentView(value: McCalendarView) {\n        this._currentView = value;\n        this.moveFocusOnNextTick = true;\n    }\n\n    /** An input indicating the type of the header component, if set. */\n    @Input() headerComponent: IComponentType<any>;\n\n    /** A portal containing the header component type for this calendar. */\n    calendarHeaderPortal: Portal<any>;\n\n    /** Whether the calendar should be started in month or year view. */\n    @Input() startView: McCalendarView = 'month';\n\n    /** Function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Function that can be used to add custom CSS classes to dates. */\n    @Input() dateClass: (date: D) => McCalendarCellCssClasses;\n\n    /** Emits when the currently selected date changes. */\n    @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /**\n     * Emits the year chosen in multiyear view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /**\n     * Emits the month chosen in year view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits when any date is selected. */\n    @Output() readonly userSelection: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Reference to the current month view component. */\n    @ViewChild(McMonthView) monthView: McMonthView<D>;\n\n    /** Reference to the current year view component. */\n    @ViewChild(McYearView) yearView: McYearView<D>;\n\n    /** Reference to the current multi-year view component. */\n    @ViewChild(McMultiYearView) multiYearView: McMultiYearView<D>;\n\n    /**\n     * Emits whenever there is a state change that the header may need to respond to.\n     */\n    stateChanges = new Subject<void>();\n\n    private intlChanges: Subscription;\n\n    /**\n     * Used for scheduling that focus should be moved to the active cell on the next tick.\n     * We need to schedule it, rather than do it immediately, because we have to wait\n     * for Angular to re-evaluate the view children.\n     */\n    private moveFocusOnNextTick = false;\n    private _startAt: D | null;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n    private clampedActiveDate: D;\n    private _currentView: McCalendarView;\n\n    constructor(\n        intl: McDatepickerIntl,\n        @Optional() private dateAdapter: DateAdapter<D>,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        this.intlChanges = intl.changes.subscribe(() => {\n            changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        });\n    }\n\n    ngAfterContentInit() {\n        this.calendarHeaderPortal = new ComponentPortal(this.headerComponent || McCalendarHeader);\n        this.activeDate = this.startAt || this.dateAdapter.today();\n\n        // Assign to the private property since we don't want to move focus on init.\n        this._currentView = this.startView;\n    }\n\n    ngAfterViewChecked() {\n        if (this.moveFocusOnNextTick) {\n            this.moveFocusOnNextTick = false;\n            this.focusActiveCell();\n        }\n    }\n\n    ngOnDestroy() {\n        this.intlChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const change = changes.minDate || changes.maxDate || changes.dateFilter;\n\n        if (change && !change.firstChange) {\n            const view = this.getCurrentViewComponent();\n\n            if (view) {\n                // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n                // passed down to the view via data bindings which won't be up-to-date when we call `init`.\n                this.changeDetectorRef.detectChanges();\n                view.init();\n            }\n        }\n\n        this.stateChanges.next();\n    }\n\n    focusActiveCell() {\n        this.getCurrentViewComponent().focusActiveCell();\n    }\n\n    /** Updates today's date after an update of the active date */\n    updateTodaysDate() {\n        const view = this.currentView === 'month' ? this.monthView :\n            (this.currentView === 'year' ? this.yearView : this.multiYearView);\n\n        view.ngAfterContentInit();\n    }\n\n    /** Handles date selection in the month view. */\n    dateSelected(date: D): void {\n        if (!this.dateAdapter.sameDate(date, this.selected)) {\n            this.selectedChange.emit(date);\n        }\n    }\n\n    /** Handles year selection in the multiyear view. */\n    yearSelectedInMultiYearView(normalizedYear: D) {\n        this.yearSelected.emit(normalizedYear);\n    }\n\n    /** Handles month selection in the year view. */\n    monthSelectedInYearView(normalizedMonth: D) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n\n    userSelected(): void {\n        this.userSelection.emit();\n    }\n\n    /** Handles year/month selection in the multi-year/year views. */\n    goToDateInView(date: D, view: 'month' | 'year' | 'multi-year'): void {\n        this.activeDate = date;\n        this.currentView = view;\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Returns the component instance that corresponds to the current calendar view. */\n    private getCurrentViewComponent() {\n        return this.monthView || this.yearView || this.multiYearView;\n    }\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\n/**\n * Animations used by the mosaic datepicker.\n * @docs-private\n */\nexport const mcDatepickerAnimations: {\n    readonly transformPanel: AnimationTriggerMetadata;\n    readonly fadeInCalendar: AnimationTriggerMetadata;\n} = {\n    /** Transforms the height of the datepicker's calendar. */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(1, 0.8)'\n        })),\n        transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1, 1)'\n        }))),\n        transition('* => void', animate('100ms linear', style({ opacity: 0 })))\n    ]),\n\n    /** Fades in the content of the calendar. */\n    fadeInCalendar: trigger('fadeInCalendar', [\n        state('void', style({ opacity: 0 })),\n        state('enter', style({ opacity: 1 })),\n\n        // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n        transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n    ])\n};\n\n// todo should be put into polyfils\n// https://github.com/angular/angular/issues/24769\nif (!Element.prototype.matches) {\n    Element.prototype.matches = (Element.prototype as any).msMatchesSelector;\n}\n","// tslint:disable:no-unbound-method\n// tslint:disable:no-magic-numbers\nimport { DOCUMENT } from '@angular/common';\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    Component,\n    ComponentRef,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    Optional,\n    Output,\n    ViewChild,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { DateAdapter } from '@ptsecurity/cdk/datetime';\nimport { ESCAPE, UP_ARROW } from '@ptsecurity/cdk/keycodes';\nimport {\n    Overlay,\n    OverlayConfig,\n    OverlayRef,\n    IPositionStrategy,\n    IScrollStrategy\n} from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal, IComponentType } from '@ptsecurity/cdk/portal';\nimport {\n    CanColor,\n    CanColorCtor,\n    mixinColor,\n    ThemePalette\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { merge, Observable, Subject, Subscription } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\n\nimport { McCalendar } from './calendar';\nimport { McCalendarCellCssClasses } from './calendar-body';\nimport { mcDatepickerAnimations } from './datepicker-animations';\nimport { createMissingDateImplError } from './datepicker-errors';\nimport { McDatepickerInput } from './datepicker-input';\n\n\n/** Used to generate a unique ID for each datepicker instance. */\nlet datepickerUid = 0;\n\n/** Injection token that determines the scroll handling while the calendar is open. */\nexport const MC_DATEPICKER_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-datepicker-scroll-strategy');\n\n/** @docs-private */\n// tslint:disable-next-line:naming-convention\nexport function MC_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_DATEPICKER_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_DATEPICKER_SCROLL_STRATEGY_FACTORY\n};\n\n// Boilerplate for applying mixins to McDatepickerContent.\n/** @docs-private */\nexport class McDatepickerContentBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McDatepickerContentMixinBase: CanColorCtor & typeof McDatepickerContentBase =\n    mixinColor(McDatepickerContentBase);\n\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * McCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * @docs-private\n */\n@Component({\n    selector: 'mc-datepicker__content',\n    templateUrl: 'datepicker-content.html',\n    styleUrls: ['datepicker-content.css'],\n    host: {\n        class: 'mc-datepicker__content',\n        '[@transformPanel]': '\"enter\"'\n    },\n    animations: [\n        mcDatepickerAnimations.transformPanel,\n        mcDatepickerAnimations.fadeInCalendar\n    ],\n    exportAs: 'mcDatepickerContent',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['color']\n})\nexport class McDatepickerContent<D> extends McDatepickerContentMixinBase\n    implements AfterViewInit, CanColor {\n\n    /** Reference to the internal calendar component. */\n    @ViewChild(McCalendar) calendar: McCalendar<D>;\n\n    /** Reference to the datepicker that created the overlay. */\n    datepicker: McDatepicker<D>;\n\n    /** Whether the datepicker is above or below the input. */\n    isAbove: boolean;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    ngAfterViewInit() {\n        this.calendar.focusActiveCell();\n    }\n}\n\n\n// TODO: We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"mcDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the datepicker popup/dialog. */\n@Component({\n    selector: 'mc-datepicker',\n    template: '',\n    exportAs: 'mcDatepicker',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    providers: [{ provide: McFormFieldControl, useExisting: McDatepicker }]\n})\nexport class McDatepicker<D> implements OnDestroy, CanColor {\n\n    /** The date to open the calendar to initially. */\n    @Input()\n    get startAt(): D | null {\n        // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n        // selected value is.\n        return this._startAt || (this.datepickerInput ? this.datepickerInput.value : null);\n    }\n\n    set startAt(value: D | null) {\n        this._startAt = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** Color palette to use on the datepicker's calendar. */\n    @Input()\n    get color(): ThemePalette {\n        // @ts-ignore:next-line\n        return this._color ||\n            (this.datepickerInput ? this.datepickerInput.getThemePalette() : undefined);\n    }\n\n    set color(value: ThemePalette) {\n        this._color = value;\n    }\n\n    /** Whether the datepicker pop-up should be disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled === undefined && this.datepickerInput ?\n            this.datepickerInput.disabled : !!this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        const newValue = coerceBooleanProperty(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this.disabledChange.next(newValue);\n        }\n    }\n\n    /** Whether the calendar is open. */\n    @Input()\n    get opened(): boolean {\n        return this._opened;\n    }\n\n    set opened(value: boolean) {\n        if (value) {\n            this.open();\n        } else {\n            this.close();\n        }\n    }\n\n    /** The currently selected date. */\n    get selected(): D | null {\n        return this.validSelected;\n    }\n\n    set selected(value: D | null) {\n        this.validSelected = value;\n    }\n\n    /** The minimum selectable date. */\n    get minDate(): D | null {\n        return this.datepickerInput && this.datepickerInput.min;\n    }\n\n    /** The maximum selectable date. */\n    get maxDate(): D | null {\n        return this.datepickerInput && this.datepickerInput.max;\n    }\n\n    get dateFilter(): (date: D | null) => boolean {\n        return this.datepickerInput && this.datepickerInput.dateFilter;\n    }\n\n\n    get value(): D | null {\n        return this.selected;\n    }\n\n    /** An input indicating the type of the custom header component for the calendar, if set. */\n    @Input() calendarHeaderComponent: IComponentType<any>;\n\n    /** The view that the calendar should start in. */\n    @Input() startView: 'month' | 'year' | 'multi-year' = 'month';\n\n    /**\n     * Emits selected year in multiyear view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /**\n     * Emits selected month in year view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Classes to be passed to the date picker panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[];\n\n    /** Function that can be used to add custom CSS classes to dates. */\n    @Input() dateClass: (date: D) => McCalendarCellCssClasses;\n\n    /** Emits when the datepicker has been opened. */\n    @Output('opened') openedStream: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emits when the datepicker has been closed. */\n    @Output('closed') closedStream: EventEmitter<void> = new EventEmitter<void>();\n\n    /** The id for the datepicker calendar. */\n    id: string = `mc-datepicker-${datepickerUid++}`;\n\n    /** A reference to the overlay when the calendar is opened as a popup. */\n    popupRef: OverlayRef;\n\n    /** The input element this datepicker is associated with. */\n    datepickerInput: McDatepickerInput<D>;\n\n    readonly stateChanges: Observable<void> = new Subject<void>();\n\n    /** Emits when the datepicker is disabled. */\n    readonly disabledChange = new Subject<boolean>();\n\n    /** Emits new selected date when selected date changes. */\n    readonly selectedChanged = new Subject<D>();\n    private scrollStrategy: () => IScrollStrategy;\n    private _startAt: D | null;\n    private _disabled: boolean;\n    private _opened = false;\n    private validSelected: D | null = null;\n    private _color: ThemePalette;\n\n    /** A portal containing the calendar for this datepicker. */\n    private calendarPortal: ComponentPortal<McDatepickerContent<D>>;\n\n    /** Reference to the component instantiated in popup mode. */\n    private popupComponentRef: ComponentRef<McDatepickerContent<D>> | null;\n\n    /** The element that was focused before the datepicker was opened. */\n    private focusedElementBeforeOpen: HTMLElement | null = null;\n\n    /** Subscription to value changes in the associated input element. */\n    private inputSubscription = Subscription.EMPTY;\n\n    constructor(private overlay: Overlay,\n                private ngZone: NgZone,\n                private viewContainerRef: ViewContainerRef,\n                @Inject(MC_DATEPICKER_SCROLL_STRATEGY) scrollStrategy: any,\n                @Optional() private dateAdapter: DateAdapter<D>,\n                @Optional() private dir: Directionality,\n                @Optional() @Inject(DOCUMENT) private document: any) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        this.scrollStrategy = scrollStrategy;\n    }\n\n    ngOnDestroy() {\n        this.close();\n        this.inputSubscription.unsubscribe();\n        this.disabledChange.complete();\n\n        if (this.popupRef) {\n            this.popupRef.dispose();\n            this.popupComponentRef = null;\n        }\n    }\n\n    /** Selects the given date */\n    select(date: D): void {\n        const oldValue = this.selected;\n        this.selected = date;\n        if (!this.dateAdapter.sameDate(oldValue, this.selected)) {\n            this.selectedChanged.next(date);\n        }\n    }\n\n    /** Emits the selected year in multiyear view */\n    selectYear(normalizedYear: D): void {\n        this.yearSelected.emit(normalizedYear);\n    }\n\n    /** Emits selected month in year view */\n    selectMonth(normalizedMonth: D): void {\n        this.monthSelected.emit(normalizedMonth);\n    }\n\n    /**\n     * Register an input with this datepicker.\n     * @param input The datepicker input to register with this datepicker.\n     */\n    registerInput(input: McDatepickerInput<D>): void {\n        if (this.datepickerInput) {\n            throw Error('A McDatepicker can only be associated with a single input.');\n        }\n        this.datepickerInput = input;\n        this.inputSubscription =\n            this.datepickerInput.valueChange.subscribe((value: D | null) => this.selected = value);\n    }\n\n    /** Open the calendar. */\n    open(): void {\n        if (this._opened || this.disabled) {\n            return;\n        }\n        if (!this.datepickerInput) {\n            throw Error('Attempted to open an McDatepicker with no associated input.');\n        }\n        if (this.document) {\n            this.focusedElementBeforeOpen = this.document.activeElement;\n        }\n\n        this.openAsPopup();\n\n        this._opened = true;\n        this.openedStream.emit();\n    }\n\n    /** Close the calendar. */\n    close(): void {\n        if (!this._opened) {\n            return;\n        }\n\n        if (this.popupRef && this.popupRef.hasAttached()) {\n            this.popupRef.detach();\n        }\n\n        if (this.calendarPortal && this.calendarPortal.isAttached) {\n            this.calendarPortal.detach();\n        }\n\n        const completeClose = () => {\n            // The `_opened` could've been reset already if\n            // we got two events in quick succession.\n            if (this._opened) {\n                this._opened = false;\n                this.closedStream.emit();\n                this.focusedElementBeforeOpen = null;\n            }\n        };\n\n        if (this.focusedElementBeforeOpen &&\n            typeof this.focusedElementBeforeOpen.focus === 'function') {\n            // Because IE moves focus asynchronously, we can't count on it being restored before we've\n            // marked the datepicker as closed. If the event fires out of sequence and the element that\n            // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n            // able to close the calendar at all. We work around it by making the logic, that marks\n            // the datepicker as closed, async as well.\n            this.focusedElementBeforeOpen.focus();\n            setTimeout(completeClose);\n        } else {\n            completeClose();\n        }\n    }\n\n    /** Open the calendar as a popup. */\n    private openAsPopup(): void {\n        if (!this.calendarPortal) {\n            this.calendarPortal = new ComponentPortal<McDatepickerContent<D>>(McDatepickerContent,\n                this.viewContainerRef);\n        }\n\n        if (!this.popupRef) {\n            this.createPopup();\n        }\n\n        if (!this.popupRef.hasAttached()) {\n            this.popupComponentRef = this.popupRef.attach(this.calendarPortal);\n            this.popupComponentRef.instance.datepicker = this;\n            this.setColor();\n\n            // Update the position once the calendar has rendered.\n            this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n                this.popupRef.updatePosition();\n            });\n        }\n    }\n\n    /** Create the popup. */\n    private createPopup(): void {\n        const overlayConfig = new OverlayConfig({\n            positionStrategy: this.createPopupPositionStrategy(),\n            hasBackdrop: true,\n            backdropClass: 'mc-overlay-transparent-backdrop',\n            direction: this.dir,\n            scrollStrategy: this.scrollStrategy(),\n            panelClass: 'mc-datepicker__popup'\n        });\n\n        this.popupRef = this.overlay.create(overlayConfig);\n        this.popupRef.overlayElement.setAttribute('role', 'dialog');\n\n        merge(\n            this.popupRef.backdropClick(),\n            this.popupRef.detachments(),\n            this.popupRef.keydownEvents().pipe(filter((event) => {\n                // Closing on alt + up is only valid when there's an input associated with the datepicker.\n                // tslint:disable-next-line:deprecation\n                return event.keyCode === ESCAPE || (this.datepickerInput && event.altKey && event.keyCode === UP_ARROW);\n            }))\n        ).subscribe(() => this.close());\n    }\n\n    /** Create the popup PositionStrategy. */\n    private createPopupPositionStrategy(): IPositionStrategy {\n        return this.overlay.position()\n            .flexibleConnectedTo(this.datepickerInput.elementRef)\n            .withTransformOriginOn('.mc-datepicker__content')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withLockedPosition()\n            .withPositions([\n                {\n                    originX: 'start',\n                    originY: 'bottom',\n                    overlayX: 'start',\n                    overlayY: 'top'\n                },\n                {\n                    originX: 'start',\n                    originY: 'top',\n                    overlayX: 'start',\n                    overlayY: 'bottom'\n                },\n                {\n                    originX: 'end',\n                    originY: 'bottom',\n                    overlayX: 'end',\n                    overlayY: 'top'\n                },\n                {\n                    originX: 'end',\n                    originY: 'top',\n                    overlayX: 'end',\n                    overlayY: 'bottom'\n                }\n            ]);\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Passes the current theme color along to the calendar overlay. */\n    private setColor(): void {\n        const color = this.color;\n        if (this.popupComponentRef) {\n            this.popupComponentRef.instance.color = color;\n        }\n    }\n}\n","// tslint:disable:no-empty\nimport {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Output\n} from '@angular/core';\nimport {\n    AbstractControl,\n    ControlValueAccessor,\n    NG_VALIDATORS,\n    NG_VALUE_ACCESSOR,\n    ValidationErrors,\n    Validator,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport { DOWN_ARROW } from '@ptsecurity/cdk/keycodes';\nimport { ThemePalette } from '@ptsecurity/mosaic/core';\nimport { McFormField } from '@ptsecurity/mosaic/form-field';\nimport { MC_INPUT_VALUE_ACCESSOR } from '@ptsecurity/mosaic/input';\nimport { Subscription } from 'rxjs';\n\nimport { McDatepicker } from './datepicker';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\n/** @docs-private */\nexport const MC_DATEPICKER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McDatepickerInput),\n    multi: true\n};\n\n/** @docs-private */\nexport const MC_DATEPICKER_VALIDATORS: any = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => McDatepickerInput),\n    multi: true\n};\n\n\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use McDatepickerInputEvent instead.\n */\nexport class McDatepickerInputEvent<D> {\n    /** The new value for the target datepicker input. */\n    value: D | null;\n\n    constructor(\n        /** Reference to the datepicker input component that emitted the event. */\n        public target: McDatepickerInput<D>,\n        /** Reference to the native input element associated with the datepicker input. */\n        public targetElement: HTMLElement) {\n        this.value = this.target.value;\n    }\n}\n\n\n/** Directive used to connect an input to a McDatepicker. */\n@Directive({\n    selector: 'input[mcDatepicker]',\n    providers: [\n        MC_DATEPICKER_VALUE_ACCESSOR,\n        MC_DATEPICKER_VALIDATORS,\n        { provide: MC_INPUT_VALUE_ACCESSOR, useExisting: McDatepickerInput }\n    ],\n    host: {\n        '[attr.aria-haspopup]': 'true',\n        '[attr.aria-owns]': '(datepicker?.opened && datepicker.id) || null',\n        '[attr.min]': 'min ? dateAdapter.toIso8601(min) : null',\n        '[attr.max]': 'max ? dateAdapter.toIso8601(max) : null',\n        '[disabled]': 'disabled',\n        '(input)': 'onInput($event.target.value)',\n        '(change)': 'onChange()',\n        '(blur)': 'onBlur()',\n        '(keydown)': 'onKeydown($event)'\n    },\n    exportAs: 'mcDatepickerInput'\n})\nexport class McDatepickerInput<D> implements ControlValueAccessor, OnDestroy, Validator {\n    /** The datepicker that this input is associated with. */\n    @Input()\n    set mcDatepicker(value: McDatepicker<D>) {\n        if (!value) {\n            return;\n        }\n\n        this.datepicker = value;\n        this.datepicker.registerInput(this);\n        this.datepickerSubscription.unsubscribe();\n\n        this.datepickerSubscription = this.datepicker.selectedChanged.subscribe((selected: D) => {\n            this.value = selected;\n            this.cvaOnChange(selected);\n            this.onTouched();\n            this.dateInput.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n            this.dateChange.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n        });\n    }\n\n    /** Function that can be used to filter out dates within the datepicker. */\n    @Input()\n    set mcDatepickerFilter(value: (date: D | null) => boolean) {\n        this.dateFilter = value;\n        this.validatorOnChange();\n    }\n\n    /** The value of the input. */\n    @Input()\n    get value(): D | null {\n        return this._value;\n    }\n\n    set value(value: D | null) {\n        // tslint:disable-next-line:no-parameter-reassignment\n        value = this.dateAdapter.deserialize(value);\n        this.lastValueValid = !value || this.dateAdapter.isValid(value);\n        // tslint:disable-next-line:no-parameter-reassignment\n        value = this.getValidDateOrNull(value);\n        const oldDate = this.value;\n        this._value = value;\n        this.formatValue(value);\n\n        if (!this.dateAdapter.sameDate(oldDate, value)) {\n            this.valueChange.emit(value);\n        }\n    }\n\n    /** The minimum valid date. */\n    @Input()\n    get min(): D | null {\n        return this._min;\n    }\n\n    set min(value: D | null) {\n        this._min = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.validatorOnChange();\n    }\n\n    /** The maximum valid date. */\n    @Input()\n    get max(): D | null {\n        return this._max;\n    }\n\n    set max(value: D | null) {\n        this._max = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.validatorOnChange();\n    }\n\n    /** Whether the datepicker-input is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return !!this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        const newValue = coerceBooleanProperty(value);\n        const element = this.elementRef.nativeElement;\n\n        if (this._disabled !== newValue) {\n            this._disabled = newValue;\n            this.disabledChange.emit(newValue);\n        }\n\n        // We need to null check the `blur` method, because it's undefined during SSR.\n        if (newValue && element.blur) {\n            // Normally, native input elements automatically blur if they turn disabled. This behavior\n            // is problematic, because it would mean that it triggers another change detection cycle,\n            // which then causes a changed after checked error if the input element was focused before.\n            element.blur();\n        }\n    }\n\n    datepicker: McDatepicker<D>;\n    dateFilter: (date: D | null) => boolean;\n\n    /** Emits when a `change` event is fired on this `<input>`. */\n    @Output() readonly dateChange: EventEmitter<McDatepickerInputEvent<D>> =\n        new EventEmitter<McDatepickerInputEvent<D>>();\n\n    /** Emits when an `input` event is fired on this `<input>`. */\n    @Output() readonly dateInput: EventEmitter<McDatepickerInputEvent<D>> =\n        new EventEmitter<McDatepickerInputEvent<D>>();\n\n    /** Emits when the value changes (either due to user input or programmatic change). */\n    valueChange = new EventEmitter<D | null>();\n\n    /** Emits when the disabled state has changed */\n    disabledChange = new EventEmitter<boolean>();\n    private _value: D | null;\n    private _min: D | null;\n    private _max: D | null;\n    private _disabled: boolean;\n\n    private datepickerSubscription = Subscription.EMPTY;\n\n    private localeSubscription = Subscription.EMPTY;\n\n    /** Whether the last value set on the input was valid. */\n    private lastValueValid = false;\n\n    constructor(\n        public elementRef: ElementRef<HTMLInputElement>,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        @Optional() private formField: McFormField\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        // Update the displayed date when the locale changes.\n        this.localeSubscription = dateAdapter.localeChanges.subscribe(() => {\n            this.value = this.value;\n        });\n    }\n\n    onTouched = () => {\n    }\n\n    ngOnDestroy() {\n        this.datepickerSubscription.unsubscribe();\n        this.localeSubscription.unsubscribe();\n        this.valueChange.complete();\n        this.disabledChange.complete();\n    }\n\n    /** @docs-private */\n    registerOnValidatorChange(fn: () => void): void {\n        this.validatorOnChange = fn;\n    }\n\n    /** @docs-private */\n    validate(c: AbstractControl): ValidationErrors | null {\n        return this.validator ? this.validator(c) : null;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value: D): void {\n        this.value = value;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this.cvaOnChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    onKeydown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n\n        if (this.datepicker && isAltDownArrow && !this.elementRef.nativeElement.readOnly) {\n            this.datepicker.open();\n            event.preventDefault();\n        }\n    }\n\n    onInput(value: string) {\n        let date = this.dateAdapter.parse(value, this.dateFormats.parse.dateInput);\n        this.lastValueValid = !date || this.dateAdapter.isValid(date);\n        date = this.getValidDateOrNull(date);\n\n        if (!this.dateAdapter.sameDate(date, this._value)) {\n            this._value = date;\n            this.cvaOnChange(date);\n            this.valueChange.emit(date);\n            this.dateInput.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n        }\n    }\n\n    onChange() {\n        this.dateChange.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n    }\n\n    /** Returns the palette used by the input's form field, if any. */\n    getThemePalette(): ThemePalette | undefined {\n        return this.formField ? this.formField.color : undefined;\n    }\n\n    /** Handles blur events on the input. */\n    onBlur() {\n        // Reformat the input only if we have a valid value.\n        if (this.value) {\n            this.formatValue(this.value);\n        }\n\n        this.onTouched();\n    }\n\n    private cvaOnChange: (value: any) => void = () => {\n    }\n\n    private validatorOnChange = () => {\n    }\n\n    /** The form control validator for whether the input parses. */\n    private parseValidator: ValidatorFn = (): ValidationErrors | null => {\n        return this.lastValueValid ?\n            null : { mcDatepickerParse: { text: this.elementRef.nativeElement.value } };\n    }\n\n    /** The form control validator for the min date. */\n    private minValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n        const controlValue = this.getValidDateOrNull(this.dateAdapter.deserialize(control.value));\n\n        return (!this.min || !controlValue ||\n            this.dateAdapter.compareDate(this.min, controlValue) <= 0) ?\n            null : { mcDatepickerMin: { min: this.min, actual: controlValue } };\n    }\n\n    /** The form control validator for the max date. */\n    private maxValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n        const controlValue = this.getValidDateOrNull(this.dateAdapter.deserialize(control.value));\n\n        return (!this.max || !controlValue ||\n            this.dateAdapter.compareDate(this.max, controlValue) >= 0) ?\n            null : { mcDatepickerMax: { max: this.max, actual: controlValue } };\n    }\n\n    /** The form control validator for the date filter. */\n    private filterValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n        const controlValue = this.getValidDateOrNull(this.dateAdapter.deserialize(control.value));\n\n        return !this.dateFilter || !controlValue || this.dateFilter(controlValue) ?\n            null : { mcDatepickerFilter: true };\n    }\n\n    /** Formats a value and sets it on the input element. */\n    private formatValue(value: D | null) {\n        this.elementRef.nativeElement.value =\n            value ? this.dateAdapter.format(value, this.dateFormats.display.dateInput) : '';\n    }\n\n    /** The combined form control validator for this input. */\n        // tslint:disable:member-ordering\n    private validator: ValidatorFn | null =\n        Validators.compose([\n            this.parseValidator,\n            this.minValidator,\n            this.maxValidator,\n            this.filterValidator\n        ]);\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    Directive,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    ViewEncapsulation,\n    ViewChild\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { McButton } from '@ptsecurity/mosaic/button';\nimport { merge, of as observableOf, Subscription } from 'rxjs';\n\nimport { McDatepicker } from './datepicker';\nimport { McDatepickerIntl } from './datepicker-intl';\n\n\n/** Can be used to override the icon of a `mcDatepickerToggle`. */\n@Directive({\n    selector: '[mcDatepickerToggleIcon]'\n})\nexport class McDatepickerToggleIcon {\n}\n\n\n@Component({\n    selector: 'mc-datepicker-toggle',\n    templateUrl: 'datepicker-toggle.html',\n    styleUrls: ['datepicker-toggle.css'],\n    host: {\n        class: 'mc-datepicker-toggle',\n        // Always set the tabindex to -1 so that it doesn't overlap with any custom tabindex the\n        // consumer may have provided, while still being able to receive focus.\n        '[attr.tabindex]': '-1',\n        '[class.mc-datepicker-toggle_active]': 'datepicker && datepicker.opened',\n        '[class.mc-warn]': 'datepicker && datepicker.color === \"error\"',\n        '(focus)': 'button.focus()'\n    },\n    exportAs: 'mcDatepickerToggle',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McDatepickerToggle<D> implements AfterContentInit, OnChanges, OnDestroy {\n\n    /** Whether the toggle button is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled === undefined ? this.datepicker.disabled : !!this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    /** Datepicker instance that the button will toggle. */\n    @Input('for') datepicker: McDatepicker<D>;\n\n    /** Tabindex for the toggle. */\n    @Input() tabIndex: number | null;\n\n    /** Custom icon set by the consumer. */\n    @ContentChild(McDatepickerToggleIcon) customIcon: McDatepickerToggleIcon;\n\n    /** Underlying button element. */\n    @ViewChild('button') button: McButton;\n    private stateChanges = Subscription.EMPTY;\n\n    private _disabled: boolean;\n\n    constructor(\n        public intl: McDatepickerIntl,\n        private changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') defaultTabIndex: string\n    ) {\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.datepicker) {\n            this.watchStateChanges();\n        }\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.unsubscribe();\n    }\n\n    ngAfterContentInit() {\n        this.watchStateChanges();\n    }\n\n    open(event: Event): void {\n        if (this.datepicker && !this.disabled) {\n            this.datepicker.open();\n            event.stopPropagation();\n        }\n    }\n\n    private watchStateChanges() {\n        const datepickerDisabled = this.datepicker ? this.datepicker.disabledChange : observableOf();\n        const inputDisabled = this.datepicker && this.datepicker.datepickerInput ?\n            this.datepicker.datepickerInput.disabledChange : observableOf();\n        const datepickerToggled = this.datepicker ?\n            merge(this.datepicker.openedStream, this.datepicker.closedStream) :\n            observableOf();\n\n        this.stateChanges.unsubscribe();\n        this.stateChanges = merge(\n            this.intl.changes,\n            datepickerDisabled,\n            inputDisabled,\n            datepickerToggled\n        ).subscribe(() => this.changeDetectorRef.markForCheck());\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { PortalModule } from '@ptsecurity/cdk/portal';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCalendar, McCalendarHeader } from './calendar';\nimport { McCalendarBody } from './calendar-body';\nimport {\n    McDatepicker,\n    McDatepickerContent,\n    MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER\n} from './datepicker';\nimport { McDatepickerInput } from './datepicker-input';\nimport { McDatepickerIntl } from './datepicker-intl';\nimport { McDatepickerToggle, McDatepickerToggleIcon } from './datepicker-toggle';\nimport { McMonthView } from './month-view';\nimport { McMultiYearView } from './multi-year-view';\nimport { McYearView } from './year-view';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McButtonModule,\n        OverlayModule,\n        A11yModule,\n        PortalModule,\n        McButtonModule,\n        McIconModule\n    ],\n    exports: [\n        McCalendar,\n        McCalendarBody,\n        McDatepicker,\n        McDatepickerContent,\n        McDatepickerInput,\n        McDatepickerToggle,\n        McDatepickerToggleIcon,\n        McMonthView,\n        McYearView,\n        McMultiYearView,\n        McCalendarHeader\n    ],\n    declarations: [\n        McCalendar,\n        McCalendarBody,\n        McDatepicker,\n        McDatepickerContent,\n        McDatepickerInput,\n        McDatepickerToggle,\n        McDatepickerToggleIcon,\n        McMonthView,\n        McYearView,\n        McMultiYearView,\n        McCalendarHeader\n    ],\n    providers: [\n        McDatepickerIntl,\n        MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER\n    ],\n    entryComponents: [\n        McDatepickerContent,\n        McCalendarHeader\n    ]\n})\nexport class McDatepickerModule {\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\n\n@Component({\n    selector: 'mc-divider',\n    host: {\n        class: 'mc-divider',\n        role: 'separator',\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n        '[class.mc-divider-vertical]': 'vertical',\n        '[class.mc-divider-inset]': 'inset'\n    },\n    template: '',\n    styleUrls: ['divider.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false\n})\nexport class McDivider {\n    // Whether the divider is vertically aligned.\n    @Input()\n    get vertical(): boolean {\n        return this._vertical;\n    }\n\n    set vertical(value: boolean) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n\n    private _vertical: boolean = false;\n\n    // Whether the divider is an inset divider.\n    @Input()\n    get inset(): boolean {\n        return this._inset;\n    }\n\n    set inset(value: boolean) {\n        this._inset = coerceBooleanProperty(value);\n    }\n\n    private _inset: boolean = false;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McDivider } from './divider.component';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McDivider],\n    declarations: [McDivider]\n})\nexport class McDividerModule {\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    Directive,\n    TemplateRef,\n    ComponentFactoryResolver,\n    ApplicationRef,\n    Injector,\n    ViewContainerRef,\n    Inject,\n    OnDestroy\n} from '@angular/core';\nimport { TemplatePortal, DomPortalOutlet } from '@ptsecurity/cdk/portal';\nimport { Subject } from 'rxjs';\n\n\n/**\n * Dropdown content that will be rendered lazily once the dropdown is opened.\n */\n@Directive({\n    selector: 'ng-template[mcDropdownContent]'\n})\nexport class McDropdownContent implements OnDestroy {\n\n    /** Emits when the dropdown content has been attached. */\n    _attached = new Subject<void>();\n    private _portal: TemplatePortal;\n    private _outlet: DomPortalOutlet;\n\n    constructor(\n        private _template: TemplateRef<any>,\n        private _componentFactoryResolver: ComponentFactoryResolver,\n        private _appRef: ApplicationRef,\n        private _injector: Injector,\n        private _viewContainerRef: ViewContainerRef,\n        @Inject(DOCUMENT) private _document: any) {}\n\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context: any = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n\n        this.detach();\n\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'),\n                this._componentFactoryResolver, this._appRef, this._injector);\n        }\n\n        const element: HTMLElement = this._template.elementRef.nativeElement;\n\n        // Because we support opening the same dropdown from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode!.insertBefore(this._outlet.outletElement, element);\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\n","import { EventEmitter, TemplateRef, InjectionToken } from '@angular/core';\nimport { FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/**\n * Injection token used to provide the parent dropdown to dropdown-specific components.\n * @docs-private\n */\nexport const MC_DROPDOWN_PANEL = new InjectionToken<McDropdownPanel>('MC_DROPDOWN_PANEL');\n\n/**\n * Interface for a custom dropdown panel that can be used with `mcDropdownTriggerFor`.\n * @docs-private\n */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownPanel<T = any> {\n    xPosition: DropdownPositionX;\n    yPosition: DropdownPositionY;\n    overlapTrigger: boolean;\n    templateRef: TemplateRef<any>;\n    closed: EventEmitter<void | 'click' | 'keydown' | 'tab'>;\n    direction?: Direction;\n    lazyContent?: McDropdownContent;\n    backdropClass?: string;\n    hasBackdrop?: boolean;\n    focusFirstItem(origin?: FocusOrigin): void;\n    resetActiveItem(): void;\n    setPositionClasses?(x: DropdownPositionX, y: DropdownPositionY): void;\n    addItem?(item: T): void;\n    removeItem?(item: T): void;\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    Inject,\n    Optional\n} from '@angular/core';\nimport { IFocusableOption, FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\n\n\n// Boilerplate for applying mixins to McDropdownItem.\n/** @docs-private */\nexport class McDropdownItemBase {}\nexport const _McDropdownItemMixinBase: CanDisableCtor & typeof McDropdownItemBase =\n    mixinDisabled(McDropdownItemBase);\n\n/**\n * This directive is intended to be used inside an mc-dropdown tag.\n * It exists mostly to set the role attribute.\n */\n@Component({\n    selector: 'mc-dropdown-item, [mc-dropdown-item]',\n    exportAs: 'mcDropdownItem',\n    inputs: ['disabled'],\n    host: {\n        role: 'dropdown-item',\n        class: 'mc-dropdown__item',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_checkDisabled($event)'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    template: `<ng-content></ng-content>`\n})\nexport class McDropdownItem extends _McDropdownItemMixinBase\n    implements IFocusableOption, CanDisable, OnDestroy {\n\n    private _document: Document;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        @Inject(DOCUMENT) document: any,\n        private _focusMonitor: FocusMonitor,\n        @Inject(MC_DROPDOWN_PANEL) @Optional() private _parentDropdownPanel?: McDropdownPanel<McDropdownItem>) {\n        super();\n\n        if (_focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for dropdown items only when the focus was not caused by a\n            // mouse or touch interaction.\n            _focusMonitor.monitor(this._elementRef.nativeElement, false);\n        }\n\n        if (_parentDropdownPanel && _parentDropdownPanel.addItem) {\n            _parentDropdownPanel.addItem(this);\n        }\n\n        this._document = document;\n    }\n\n    /** Focuses the dropdown item. */\n    focus(origin: FocusOrigin = 'program'): void {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin);\n        } else {\n            this._getHostElement().focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n\n        if (this._parentDropdownPanel && this._parentDropdownPanel.removeItem) {\n            this._parentDropdownPanel.removeItem(this);\n        }\n    }\n\n    /** Used to set the `tabindex`. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Returns the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._elementRef.nativeElement;\n    }\n\n    /** Prevents the default element actions if it is disabled. */\n    _checkDisabled(event: Event): void {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        const element: HTMLElement = this._elementRef.nativeElement;\n        // tslint:disable-next-line:no-magic-numbers\n        const textNodeType = this._document ? this._document.TEXT_NODE : 3;\n        let output = '';\n\n        if (element.childNodes) {\n            const length = element.childNodes.length;\n\n            // Go through all the top-level text nodes and extract their text.\n            // We skip anything that's not a text node to prevent the text from\n            // being thrown off by something like an icon.\n            for (let i = 0; i < length; i++) {\n                if (element.childNodes[i].nodeType === textNodeType) {\n                    output += element.childNodes[i].textContent;\n                }\n            }\n        }\n\n        return output.trim();\n    }\n}\n","import {\n    trigger,\n    state,\n    style,\n    animate,\n    transition,\n    query,\n    group,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\n/**\n * Animations used by the mc-dropdown component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nexport const mcDropdownAnimations: {\n    readonly transformDropdown: AnimationTriggerMetadata;\n    readonly fadeInItems: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation controls the dropdown panel's entry and exit from the page.\n     *\n     * When the dropdown panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the dropdown panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformDropdown: trigger('transformDropdown', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        })),\n        transition('void => enter', group([\n            query('.mc-dropdown__content', animate('50ms linear', style({opacity: 1}))),\n            animate('50ms cubic-bezier(0, 0, 0.2, 1)', style({transform: 'scale(1)'}))\n        ])),\n        transition('* => void', animate('50ms 25ms linear', style({opacity: 0})))\n    ]),\n\n\n    /**\n     * This animation fades in the background color and content of the dropdown panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // now. Remove next time we do breaking changes.\n        state('showing', style({opacity: 1})),\n        transition('void => *', [\n            style({opacity: 0}),\n            animate('200ms 60ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\nexport const fadeInItems = mcDropdownAnimations.fadeInItems;\n\nexport const transformDropdown = mcDropdownAnimations.transformDropdown;\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    Output,\n    TemplateRef,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    OnInit\n} from '@angular/core';\nimport { FocusKeyManager, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE, DOWN_ARROW, UP_ARROW } from '@ptsecurity/cdk/keycodes';\nimport { Subject, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { mcDropdownAnimations } from './dropdown-animations';\nimport { McDropdownContent } from './dropdown-content';\nimport { throwMcDropdownInvalidPositionX, throwMcDropdownInvalidPositionY } from './dropdown-errors';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/** Default `mc-dropdown` options that can be overridden. */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownDefaultOptions {\n    /** The x-axis position of the dropdown. */\n    xPosition: DropdownPositionX;\n\n    /** The y-axis position of the dropdown. */\n    yPosition: DropdownPositionY;\n\n    /** Whether the dropdown should overlap the dropdown trigger. */\n    overlapTrigger: boolean;\n\n    /** Class to be applied to the dropdown's backdrop. */\n    backdropClass: string;\n\n    /** Whether the dropdown has a backdrop. */\n    hasBackdrop?: boolean;\n}\n\n/** Injection token to be used to override the default options for `mc-dropdown`. */\nexport const MC_DROPDOWN_DEFAULT_OPTIONS =\n    new InjectionToken<McDropdownDefaultOptions>('mc-dropdown-default-options', {\n        providedIn: 'root',\n        factory: MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY\n    });\n\n/** @docs-private */\nexport function MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY(): McDropdownDefaultOptions {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop'\n    };\n}\n\n@Component({\n    selector: 'mc-dropdown',\n    templateUrl: 'dropdown.html',\n    styleUrls: ['dropdown.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcDropdown',\n    animations: [\n        mcDropdownAnimations.transformDropdown,\n        mcDropdownAnimations.fadeInItems\n    ],\n    providers: [\n        { provide: MC_DROPDOWN_PANEL, useExisting: McDropdown }\n    ]\n})\nexport class McDropdown implements AfterContentInit, McDropdownPanel<McDropdownItem>, OnInit, OnDestroy {\n\n    /** Position of the dropdown in the X axis. */\n    @Input()\n    get xPosition(): DropdownPositionX { return this._xPosition; }\n    set xPosition(value: DropdownPositionX) {\n        if (value !== 'before' && value !== 'after') {\n            throwMcDropdownInvalidPositionX();\n        }\n\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Position of the dropdown in the Y axis. */\n    @Input()\n    get yPosition(): DropdownPositionY { return this._yPosition; }\n    set yPosition(value: DropdownPositionY) {\n        if (value !== 'above' && value !== 'below') {\n            throwMcDropdownInvalidPositionY();\n        }\n\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Whether the dropdown should overlap its trigger. */\n    @Input()\n    get overlapTrigger(): boolean { return this._overlapTrigger; }\n    set overlapTrigger(value: boolean) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n\n    /** Whether the dropdown has a backdrop. */\n    @Input()\n    get hasBackdrop(): boolean | undefined { return this._hasBackdrop; }\n    set hasBackdrop(value: boolean | undefined) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n\n    /**\n     * This method takes classes set on the host mc-dropdown element and applies them on the\n     * dropdown template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing dropdown from outside the component.\n     * @param classes list of class names\n     */\n    @Input('class')\n    set panelClass(classes: string) {\n        if (classes && classes.length) {\n            this._classList = classes.split(' ').reduce((obj: any, className: string) => {\n                obj[className] = true;\n\n                return obj;\n            }, {});\n\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n\n    /** Config object to be passed into the dropdown's ngClass */\n    _classList: {[key: string]: boolean} = {};\n\n    /** Current state of the panel animation. */\n    _panelAnimationState: 'void' | 'enter' = 'void';\n\n    /** Emits whenever an animation on the dropdown completes. */\n    _animationDone = new Subject<AnimationEvent>();\n\n    /** Whether the dropdown is animating. */\n    _isAnimating: boolean;\n\n    /** Layout direction of the dropdown. */\n    direction: Direction;\n\n    /** Class to be added to the backdrop element. */\n    @Input() backdropClass: string = this._defaultOptions.backdropClass;\n\n    /** @docs-private */\n    @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n\n    /**\n     * List of the items inside of a dropdown.\n     */\n    @ContentChildren(McDropdownItem) items: QueryList<McDropdownItem>;\n\n    /**\n     * Dropdown content that will be rendered lazily.\n     * @docs-private\n     */\n    @ContentChild(McDropdownContent) lazyContent: McDropdownContent;\n\n    /** Event emitted when the dropdown is closed. */\n    @Output() readonly closed: EventEmitter<void | 'click' | 'keydown' | 'tab'> =\n        new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n\n    private _keyManager: FocusKeyManager<McDropdownItem>;\n    private _xPosition: DropdownPositionX = this._defaultOptions.xPosition;\n    private _yPosition: DropdownPositionY = this._defaultOptions.yPosition;\n\n    /** Dropdown items inside the current dropdown. */\n    private _items: McDropdownItem[] = [];\n\n    /** Emits whenever the amount of dropdown items changes. */\n    private _itemChanges = new Subject<McDropdownItem[]>();\n\n    /** Subscription to tab events on the dropdown panel */\n    private _tabSubscription = Subscription.EMPTY;\n    private _overlapTrigger: boolean = this._defaultOptions.overlapTrigger;\n    private _hasBackdrop: boolean | undefined = this._defaultOptions.hasBackdrop;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        private _ngZone: NgZone,\n        @Inject(MC_DROPDOWN_DEFAULT_OPTIONS) private _defaultOptions: McDropdownDefaultOptions) { }\n\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager<McDropdownItem>(this.items).withWrap().withTypeAhead();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n    }\n\n    ngOnDestroy() {\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n\n    /** Handle a keyboard event from the dropdown, delegating to the appropriate action. */\n    _handleKeydown(event: KeyboardEvent) {\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case ESCAPE:\n                this.closed.emit('keydown');\n                break;\n            case UP_ARROW:\n            case DOWN_ARROW:\n                this._keyManager.setFocusOrigin('keyboard');\n                this._keyManager.onKeydown(event);\n                break;\n            default:\n                // todo зачем обрабатывать лишние события ?\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    /**\n     * Focus the first item in the dropdown.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin: FocusOrigin = 'program'): void {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable.asObservable()\n                .pipe(take(1))\n                .subscribe(() => this._keyManager.setFocusOrigin(origin).setFirstItemActive());\n        } else {\n            this._keyManager.setFocusOrigin(origin).setFirstItemActive();\n        }\n    }\n\n    /**\n     * Resets the active item in the dropdown. This is used when the dropdown is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n\n    /**\n     * Registers a dropdown item with the dropdown.\n     * @docs-private\n     */\n    addItem(item: McDropdownItem) {\n        // We register the items through this method, rather than picking them up through\n        // `ContentChildren`, because we need the items to be picked up by their closest\n        // `mc-dropdown` ancestor. If we used `@ContentChildren(McDropdownItem, {descendants: true})`,\n        // all descendant items will bleed into the top-level dropdown in the case where the consumer\n        // has `mc-dropdown` instances nested inside each other.\n        if (this._items.indexOf(item) === -1) {\n            this._items.push(item);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Removes an item from the dropdown.\n     * @docs-private\n     */\n    removeItem(item: McDropdownItem) {\n        const index = this._items.indexOf(item);\n\n        if (this._items.indexOf(item) > -1) {\n            this._items.splice(index, 1);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Adds classes to the dropdown panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the dropdown along the x axis.\n     * @param posY Position of the dropdown along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX: DropdownPositionX = this.xPosition, posY: DropdownPositionY = this.yPosition) {\n        const classes = this._classList;\n        classes['mc-dropdown-before'] = posX === 'before';\n        classes['mc-dropdown-after'] = posX === 'after';\n        classes['mc-dropdown-above'] = posY === 'above';\n        classes['mc-dropdown-below'] = posY === 'below';\n    }\n\n    /** Starts the enter animation. */\n    _startAnimation() {\n        this._panelAnimationState = 'enter';\n    }\n\n    /** Resets the panel animation to its initial state. */\n    _resetAnimation() {\n        this._panelAnimationState = 'void';\n    }\n\n    /** Callback that is invoked when the panel animation completes. */\n    _onAnimationDone(event: AnimationEvent) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n\n        // Scroll the content element to the top once the animation is done. This is necessary, because\n        // we move focus to the first item while it's still being animated, which can throw the browser\n        // off when it determines the scroll position. Alternatively we can move focus when the\n        // animation is done, however moving focus asynchronously will interrupt screen readers\n        // which are in the process of reading out the dropdown already. We take the `element` from\n        // the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n}\n","import { Directive, forwardRef, Input, OnChanges, Provider, SimpleChanges } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, ValidatorFn, Validators } from '@angular/forms';\n\n\nexport const MIN_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MinValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[min][formControlName],[min][formControl],[min][ngModel]',\n    providers: [MIN_VALIDATOR],\n    host: {'[attr.min]': 'min ? min : null'}\n})\nexport class MinValidator implements Validator, OnChanges {\n\n    @Input() min: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('min' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.min(parseInt(this.min, 10)); }\n}\n\n\nexport const MAX_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MaxValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[max][formControlName],[max][formControl],[max][ngModel]',\n    providers: [MAX_VALIDATOR],\n    host: {\n        '[attr.max]': 'max ? max : null'\n    }\n})\nexport class MaxValidator implements Validator,\n    OnChanges {\n\n    @Input() max: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('max' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.max(parseInt(this.max, 10)); }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McInput, McInputMono, McNumberInput } from './input';\nimport { MaxValidator, MinValidator } from './input-number-validators';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator],\n    declarations: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator ]\n})\nexport class McInputModule {\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n\n/** Datepicker data that requires internationalization. */\n@Injectable({ providedIn: 'root' })\nexport class McDatepickerIntl {\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     */\n    readonly changes: Subject<void> = new Subject<void>();\n\n    /** A label for the calendar popup (used by screen readers). */\n    calendarLabel: string = 'Calendar';\n\n    /** A label for the button used to open the calendar popup (used by screen readers). */\n    openCalendarLabel: string = 'Open calendar';\n\n    /** A label for the previous month button (used by screen readers). */\n    prevMonthLabel: string = 'Previous month';\n\n    /** A label for the next month button (used by screen readers). */\n    nextMonthLabel: string = 'Next month';\n\n    /** A label for the previous year button (used by screen readers). */\n    prevYearLabel: string = 'Previous year';\n\n    /** A label for the next year button (used by screen readers). */\n    nextYearLabel: string = 'Next year';\n\n    /** A label for the previous multi-year button (used by screen readers). */\n    prevMultiYearLabel: string = 'Previous 20 years';\n\n    /** A label for the next multi-year button (used by screen readers). */\n    nextMultiYearLabel: string = 'Next 20 years';\n\n    /** A label for the 'switch to month view' button (used by screen readers). */\n    switchToMonthViewLabel: string = 'Choose date';\n\n    /** A label for the 'switch to year view' button (used by screen readers). */\n    switchToMultiYearViewLabel: string = 'Choose month and year';\n}\n","// tslint:disable:no-magic-numbers\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    Output,\n    ViewEncapsulation,\n    NgZone,\n    OnChanges,\n    SimpleChanges\n} from '@angular/core';\nimport { take } from 'rxjs/operators';\n\n\n/**\n * Extra CSS classes that can be associated with a calendar cell.\n */\nexport type McCalendarCellCssClasses = string | string[] | Set<string> | { [key: string]: any };\n\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * @docs-private\n */\nexport class McCalendarCell {\n    constructor(\n        public value: number,\n        public displayValue: string,\n        public ariaLabel: string,\n        public enabled: boolean,\n        public cssClasses?: McCalendarCellCssClasses\n    ) {\n    }\n}\n\n\n/**\n * An internal component used to display calendar data in a table.\n * @docs-private\n */\n@Component({\n    selector: '[mc-calendar-body]',\n    templateUrl: 'calendar-body.html',\n    styleUrls: ['calendar-body.css'],\n    host: {\n        class: 'mc-calendar__body',\n        role: 'grid',\n        'aria-readonly': 'true'\n    },\n    exportAs: 'mcCalendarBody',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCalendarBody implements OnChanges {\n    /** The label for the table. (e.g. \"Jan 2017\"). */\n    @Input() label: string;\n\n    /** The cells to display in the table. */\n    @Input() rows: McCalendarCell[][];\n\n    /** The value in the table that corresponds to today. */\n    @Input() todayValue: number;\n\n    /** The value in the table that is currently selected. */\n    @Input() selectedValue: number;\n\n    /** The minimum number of free cells needed to fit the label in the first row. */\n    @Input() labelMinRequiredCells: number;\n\n    /** The number of columns in the table. */\n    @Input() numCols = 7;\n\n    /** The cell number of the active cell in the table. */\n    @Input() activeCell = 0;\n\n    /**\n     * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n     * maintained even as the table resizes.\n     */\n    @Input() cellAspectRatio = 1;\n\n    /** Emits when a new value is selected. */\n    @Output() readonly selectedValueChange: EventEmitter<number> = new EventEmitter<number>();\n\n    /** The number of blank cells to put at the beginning for the first row. */\n    firstRowOffset: number;\n\n    /** Padding for the individual date cells. */\n    cellPadding: string;\n\n    /** Width of an individual cell. */\n    cellWidth: string;\n\n    constructor(private elementRef: ElementRef<HTMLElement>, private ngZone: NgZone) {\n    }\n\n    cellClicked(cell: McCalendarCell): void {\n        if (cell.enabled) {\n            this.selectedValueChange.emit(cell.value);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const columnChanges = changes.numCols;\n        // tslint:disable-next-line:no-this-assignment\n        const { rows, numCols } = this;\n\n        if (changes.rows || columnChanges) {\n            this.firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n        }\n\n        if (changes.cellAspectRatio || columnChanges || !this.cellPadding) {\n            this.cellPadding = `${this.cellAspectRatio * 50 / numCols}%`;\n        }\n\n        if (columnChanges || !this.cellWidth) {\n            this.cellWidth = `${100 / numCols}%`;\n        }\n    }\n\n    isActiveCell(rowIndex: number, colIndex: number): boolean {\n        let cellNumber = rowIndex * this.numCols + colIndex;\n\n        // Account for the fact that the first row may not have as many cells.\n        if (rowIndex) {\n            cellNumber -= this.firstRowOffset;\n        }\n\n        return cellNumber === this.activeCell;\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.ngZone.runOutsideAngular(() => {\n            this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n                const activeCell: HTMLElement | null =\n                    this.elementRef.nativeElement.querySelector('.mc-calendar__body_active');\n\n                if (activeCell) {\n                    activeCell.focus();\n                }\n            });\n        });\n    }\n}\n","// tslint:disable:no-magic-numbers\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Optional,\n    Output,\n    ViewEncapsulation,\n    ViewChild\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    UP_ARROW,\n    SPACE\n} from '@ptsecurity/cdk/keycodes';\n\nimport { McCalendarBody, McCalendarCell, McCalendarCellCssClasses } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\nconst DAYS_PER_WEEK = 7;\n\n\n/**\n * An internal component used to display a single month in the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-month-view',\n    templateUrl: 'month-view.html',\n    exportAs: 'mcMonthView',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McMonthView<D> implements AfterContentInit {\n    /**\n     * The date to display in this month view (everything other than the month and year is ignored).\n     */\n    @Input()\n    get activeDate(): D {\n        return this._activeDate;\n    }\n\n    set activeDate(value: D) {\n        const oldActiveDate = this._activeDate;\n        const validDate =\n            this.getValidDateOrNull(this.dateAdapter.deserialize(value)) || this.dateAdapter.today();\n        this._activeDate = this.dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n        if (!this.hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n            this.init();\n        }\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.selectedDate = this.getDateInCurrentMonth(this._selected);\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** Function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Function that can be used to add custom CSS classes to dates. */\n    @Input() dateClass: (date: D) => McCalendarCellCssClasses;\n\n    /** Emits when a new date is selected. */\n    @Output() readonly selectedChange: EventEmitter<D | null> = new EventEmitter<D | null>();\n\n    /** Emits when any date is selected. */\n    @Output() readonly userSelection: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emits when any date is activated. */\n    @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** The body of calendar table */\n    @ViewChild(McCalendarBody) mcCalendarBody: McCalendarBody;\n\n    /** The label for this month (e.g. \"January 2017\"). */\n    monthLabel: string;\n\n    /** Grid of calendar cells representing the dates of the month. */\n    weeks: McCalendarCell[][];\n\n    /** The number of blank cells in the first row before the 1st of the month. */\n    firstWeekOffset: number;\n\n    /**\n     * The date of the month that the currently selected Date falls on.\n     * Null if the currently selected Date is in another month.\n     */\n    selectedDate: number | null;\n\n    /** The date of the month that today falls on. Null if today is in another month. */\n    todayDate: number | null;\n\n    /** The names of the weekdays. */\n    weekdays: { long: string; narrow: string }[];\n    private _activeDate: D;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() private dir?: Directionality\n    ) {\n\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        const firstDayOfWeek = this.dateAdapter.getFirstDayOfWeek();\n        const narrowWeekdays = this.dateAdapter.getDayOfWeekNames('narrow');\n        const longWeekdays = this.dateAdapter.getDayOfWeekNames('long');\n\n        // Rotate the labels for days of the week based on the configured first day of the week.\n        const weekdays = longWeekdays.map((long, i) => {\n            return { long, narrow: narrowWeekdays[i] };\n        });\n        this.weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n\n        this._activeDate = this.dateAdapter.today();\n    }\n\n    ngAfterContentInit() {\n        this.init();\n    }\n\n    /** Handles when a new date is selected. */\n    dateSelected(date: number) {\n        if (this.selectedDate !== date) {\n            const selectedYear = this.dateAdapter.getYear(this.activeDate);\n            const selectedMonth = this.dateAdapter.getMonth(this.activeDate);\n            const selectedDate = this.dateAdapter.createDate(selectedYear, selectedMonth, date);\n\n            this.selectedChange.emit(selectedDate);\n        }\n\n        this.userSelection.emit();\n    }\n\n    /** Handles keydown events on the calendar body when calendar is in month view. */\n    handleCalendarBodyKeydown(event: KeyboardEvent): void {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n        const oldActiveDate = this._activeDate;\n        const isRtl = this.isRtl();\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, -7);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, 7);\n                break;\n            case HOME:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate,\n                    1 - this.dateAdapter.getDate(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate,\n                    (this.dateAdapter.getNumDaysInMonth(this._activeDate) -\n                        this.dateAdapter.getDate(this._activeDate)));\n                break;\n            case PAGE_UP:\n                this.activeDate = event.altKey ?\n                    this.dateAdapter.addCalendarYears(this._activeDate, -1) :\n                    this.dateAdapter.addCalendarMonths(this._activeDate, -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = event.altKey ?\n                    this.dateAdapter.addCalendarYears(this._activeDate, 1) :\n                    this.dateAdapter.addCalendarMonths(this._activeDate, 1);\n                break;\n            case ENTER:\n            case SPACE:\n                if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n                    this.dateSelected(this.dateAdapter.getDate(this._activeDate));\n                    this.userSelection.emit();\n                    // Prevent unexpected default actions such as form submission.\n                    event.preventDefault();\n                }\n\n                return;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n\n        if (this.dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n\n        this.focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n\n    /** Initializes this month view. */\n    init() {\n        this.selectedDate = this.getDateInCurrentMonth(this.selected);\n        this.todayDate = this.getDateInCurrentMonth(this.dateAdapter.today());\n        this.monthLabel =\n            this.dateAdapter.getMonthNames('short')[this.dateAdapter.getMonth(this.activeDate)];\n\n        this.monthLabel = this.monthLabel[0].toLocaleUpperCase() + this.monthLabel.substr(1);\n\n        const firstOfMonth = this.dateAdapter.createDate(this.dateAdapter.getYear(this.activeDate),\n            this.dateAdapter.getMonth(this.activeDate), 1);\n        this.firstWeekOffset =\n            (DAYS_PER_WEEK + this.dateAdapter.getDayOfWeek(firstOfMonth) -\n                this.dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n\n        this.createWeekCells();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.mcCalendarBody.focusActiveCell();\n    }\n\n    /** Creates McCalendarCells for the dates in this month. */\n    private createWeekCells() {\n        const daysInMonth = this.dateAdapter.getNumDaysInMonth(this.activeDate);\n        const dateNames = this.dateAdapter.getDateNames();\n\n        this.weeks = [[]];\n\n        for (let i = 0, cell = this.firstWeekOffset; i < daysInMonth; i++, cell++) {\n            if (cell === DAYS_PER_WEEK) {\n                this.weeks.push([]);\n                cell = 0;\n            }\n            const date = this.dateAdapter.createDate(\n                this.dateAdapter.getYear(this.activeDate),\n                this.dateAdapter.getMonth(this.activeDate), i + 1);\n            const enabled = this.shouldEnableDate(date);\n            const ariaLabel = this.dateAdapter.format(date, this.dateFormats.display.dateA11yLabel);\n            const cellClasses = this.dateClass ? this.dateClass(date) : undefined;\n\n            this.weeks[this.weeks.length - 1]\n                .push(new McCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses));\n        }\n    }\n\n    /** Date filter for the month */\n    private shouldEnableDate(date: D): boolean {\n        return !!date &&\n            (!this.dateFilter || this.dateFilter(date)) &&\n            (!this.minDate || this.dateAdapter.compareDate(date, this.minDate) >= 0) &&\n            (!this.maxDate || this.dateAdapter.compareDate(date, this.maxDate) <= 0);\n    }\n\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     */\n    private getDateInCurrentMonth(date: D | null): number | null {\n        return date && this.hasSameMonthAndYear(date, this.activeDate) ?\n            this.dateAdapter.getDate(date) : null;\n    }\n\n    /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\n    private hasSameMonthAndYear(d1: D | null, d2: D | null): boolean {\n        return !!(d1 && d2 && this.dateAdapter.getMonth(d1) === this.dateAdapter.getMonth(d2) &&\n            this.dateAdapter.getYear(d1) === this.dateAdapter.getYear(d2));\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Determines whether the user has the RTL layout direction. */\n    private isRtl() {\n        return this.dir && this.dir.value === 'rtl';\n    }\n}\n","// tslint:disable:no-magic-numbers\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { DateAdapter } from '@ptsecurity/cdk/datetime';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    UP_ARROW,\n    SPACE\n} from '@ptsecurity/cdk/keycodes';\n\nimport { McCalendarBody, McCalendarCell } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\nexport const yearsPerPage = 24;\n\nexport const yearsPerRow = 4;\n\n\n/**\n * An internal component used to display a year selector in the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-multi-year-view',\n    templateUrl: 'multi-year-view.html',\n    exportAs: 'mcMultiYearView',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McMultiYearView<D> implements AfterContentInit {\n    /** The date to display in this multi-year view (everything other than the year is ignored). */\n    @Input()\n    get activeDate(): D {\n        return this._activeDate;\n    }\n\n    set activeDate(value: D) {\n        const oldActiveDate = this._activeDate;\n        const validDate =\n            this.getValidDateOrNull(this.dateAdapter.deserialize(value)) || this.dateAdapter.today();\n        this._activeDate = this.dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n        if (Math.floor(this.dateAdapter.getYear(oldActiveDate) / yearsPerPage) !==\n            Math.floor(this.dateAdapter.getYear(this._activeDate) / yearsPerPage)) {\n            this.init();\n        }\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.selectedYear = this._selected && this.dateAdapter.getYear(this._selected);\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** A function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Emits when a new year is selected. */\n    @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits the selected year. This doesn't imply a change on the selected date */\n    @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits when any date is activated. */\n    @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** The body of calendar table */\n    @ViewChild(McCalendarBody) mcCalendarBody: McCalendarBody;\n\n    /** Grid of calendar cells representing the currently displayed years. */\n    years: McCalendarCell[][];\n\n    /** The year that today falls on. */\n    todayYear: number;\n\n    /** The year of the selected date. Null if the selected date is null. */\n    selectedYear: number | null;\n    private _activeDate: D;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() private dir?: Directionality\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        this._activeDate = this.dateAdapter.today();\n    }\n\n    ngAfterContentInit() {\n        this.init();\n    }\n\n    /** Initializes this multi-year view. */\n    init() {\n        this.todayYear = this.dateAdapter.getYear(this.dateAdapter.today());\n        const activeYear = this.dateAdapter.getYear(this._activeDate);\n        const activeOffset = activeYear % yearsPerPage;\n        this.years = [];\n        for (let i = 0, row: number[] = []; i < yearsPerPage; i++) {\n            row.push(activeYear - activeOffset + i);\n            if (row.length === yearsPerRow) {\n                this.years.push(row.map((year) => this.createCellForYear(year)));\n                row = [];\n            }\n        }\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** Handles when a new year is selected. */\n    onYearSelected(year: number) {\n        this.yearSelected.emit(this.dateAdapter.createDate(year, 0, 1));\n        const month = this.dateAdapter.getMonth(this.activeDate);\n        const daysInMonth =\n            this.dateAdapter.getNumDaysInMonth(this.dateAdapter.createDate(year, month, 1));\n        this.selectedChange.emit(this.dateAdapter.createDate(year, month,\n            Math.min(this.dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n\n    /** Handles keydown events on the calendar body when calendar is in multi-year view. */\n    handleCalendarBodyKeydown(event: KeyboardEvent): void {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n        const oldActiveDate = this._activeDate;\n        const isRtl = this.isRtl();\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n                break;\n            case HOME:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate,\n                    -this.dateAdapter.getYear(this._activeDate) % yearsPerPage);\n                break;\n            case END:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate,\n                    yearsPerPage - this.dateAdapter.getYear(this._activeDate) % yearsPerPage - 1);\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(\n                        this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(\n                        this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n                break;\n            case ENTER:\n            case SPACE:\n                this.onYearSelected(this.dateAdapter.getYear(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n\n        if (this.dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n\n        this.focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n\n    getActiveCell(): number {\n        return this.dateAdapter.getYear(this.activeDate) % yearsPerPage;\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.mcCalendarBody.focusActiveCell();\n    }\n\n    /** Creates an McCalendarCell for the given year. */\n    private createCellForYear(year: number) {\n        const yearName = this.dateAdapter.getYearName(this.dateAdapter.createDate(year, 0, 1));\n\n        return new McCalendarCell(year, yearName, yearName, this.shouldEnableYear(year));\n    }\n\n    /** Whether the given year is enabled. */\n    private shouldEnableYear(year: number) {\n        // disable if the year is greater than maxDate lower than minDate\n        if (year === undefined || year === null ||\n            (this.maxDate && year > this.dateAdapter.getYear(this.maxDate)) ||\n            (this.minDate && year < this.dateAdapter.getYear(this.minDate))) {\n            return false;\n        }\n\n        // enable if it reaches here and there's no filter defined\n        if (!this.dateFilter) {\n            return true;\n        }\n\n        const firstOfYear = this.dateAdapter.createDate(year, 0, 1);\n\n        // If any date in the year is enabled count the year as enabled.\n        for (let date = firstOfYear; this.dateAdapter.getYear(date) === year;\n             date = this.dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Determines whether the user has the RTL layout direction. */\n    private isRtl() {\n        return this.dir && this.dir.value === 'rtl';\n    }\n}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    UP_ARROW,\n    SPACE\n} from '@ptsecurity/cdk/keycodes';\n\nimport { McCalendarBody, McCalendarCell } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\n/**\n * An internal component used to display a single year in the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-year-view',\n    templateUrl: 'year-view.html',\n    exportAs: 'mcYearView',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McYearView<D> implements AfterContentInit {\n    /** The date to display in this year view (everything other than the year is ignored). */\n    @Input()\n    get activeDate(): D {\n        return this._activeDate;\n    }\n\n    set activeDate(value: D) {\n        const oldActiveDate = this._activeDate;\n        const validDate =\n            this.getValidDateOrNull(this.dateAdapter.deserialize(value)) || this.dateAdapter.today();\n        this._activeDate = this.dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n        if (this.dateAdapter.getYear(oldActiveDate) !== this.dateAdapter.getYear(this._activeDate)) {\n            this.init();\n        }\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.selectedMonth = this.getMonthInCurrentYear(this._selected);\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** A function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Emits when a new month is selected. */\n    @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits the selected month. This doesn't imply a change on the selected date */\n    @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits when any date is activated. */\n    @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** The body of calendar table */\n    @ViewChild(McCalendarBody) mcCalendarBody: McCalendarBody;\n\n    /** Grid of calendar cells representing the months of the year. */\n    months: McCalendarCell[][];\n\n    /** The label for this year (e.g. \"2017\"). */\n    yearLabel: string;\n\n    /** The month in this year that today falls on. Null if today is in a different year. */\n    todayMonth: number | null;\n\n    /**\n     * The month in this year that the selected Date falls on.\n     * Null if the selected Date is in a different year.\n     */\n    selectedMonth: number | null;\n    private _activeDate: D;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() private dir?: Directionality\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        this._activeDate = this.dateAdapter.today();\n    }\n\n    ngAfterContentInit() {\n        this.init();\n    }\n\n    /** Handles when a new month is selected. */\n    onMonthSelected(month: number) {\n        const normalizedDate =\n            this.dateAdapter.createDate(this.dateAdapter.getYear(this.activeDate), month, 1);\n\n        this.monthSelected.emit(normalizedDate);\n\n        const daysInMonth = this.dateAdapter.getNumDaysInMonth(normalizedDate);\n\n        this.selectedChange.emit(this.dateAdapter.createDate(\n            this.dateAdapter.getYear(this.activeDate), month,\n            Math.min(this.dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n\n    /** Handles keydown events on the calendar body when calendar is in year view. */\n    handleCalendarBodyKeydown(event: KeyboardEvent): void {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n        const oldActiveDate = this._activeDate;\n        const isRtl = this.isRtl();\n\n        const VERTICAL_SHIFT = 4;\n        const PAGE_SHIFT = 10;\n        const MAX_MONTH_INDEX = 11;\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, -VERTICAL_SHIFT);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, VERTICAL_SHIFT);\n                break;\n            case HOME:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate,\n                    -this.dateAdapter.getMonth(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate,\n                    MAX_MONTH_INDEX - this.dateAdapter.getMonth(this._activeDate));\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -PAGE_SHIFT : -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(this._activeDate, event.altKey ? PAGE_SHIFT : 1);\n                break;\n            case ENTER:\n            case SPACE:\n                this.onMonthSelected(this.dateAdapter.getMonth(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n\n        if (this.dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n\n        this.focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n\n    /** Initializes this year view. */\n    init() {\n        this.selectedMonth = this.getMonthInCurrentYear(this.selected);\n        this.todayMonth = this.getMonthInCurrentYear(this.dateAdapter.today());\n        this.yearLabel = this.dateAdapter.getYearName(this.activeDate);\n\n        const monthNames = this.dateAdapter.getMonthNames('short');\n\n        // First row of months only contains 5 elements so we can fit the year label on the same row.\n        // tslint:disable-next-line:no-magic-numbers\n        this.months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map((row) => row.map(\n            (month) => this.createCellForMonth(month, monthNames[month])));\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.mcCalendarBody.focusActiveCell();\n    }\n\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     */\n    private getMonthInCurrentYear(date: D | null) {\n        return date && this.dateAdapter.getYear(date) === this.dateAdapter.getYear(this.activeDate) ?\n            this.dateAdapter.getMonth(date) : null;\n    }\n\n    /** Creates an McCalendarCell for the given month. */\n    private createCellForMonth(month: number, monthName: string) {\n        const ariaLabel = this.dateAdapter.format(\n            this.dateAdapter.createDate(this.dateAdapter.getYear(this.activeDate), month, 1),\n            this.dateFormats.display.monthYearA11yLabel);\n\n        const newMonthName = monthName[0].toLocaleUpperCase() + monthName.substr(1);\n\n        return new McCalendarCell(\n            month, newMonthName, ariaLabel, this.shouldEnableMonth(month));\n    }\n\n    /** Whether the given month is enabled. */\n    private shouldEnableMonth(month: number) {\n\n        const activeYear = this.dateAdapter.getYear(this.activeDate);\n\n        if (month === undefined || month === null ||\n            this.isYearAndMonthAfterMaxDate(activeYear, month) ||\n            this.isYearAndMonthBeforeMinDate(activeYear, month)) {\n            return false;\n        }\n\n        if (!this.dateFilter) {\n            return true;\n        }\n\n        const firstOfMonth = this.dateAdapter.createDate(activeYear, month, 1);\n\n        // If any date in the month is enabled count the month as enabled.\n        for (let date = firstOfMonth; this.dateAdapter.getMonth(date) === month;\n             date = this.dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Tests whether the combination month/year is after this.maxDate, considering\n     * just the month and year of this.maxDate\n     */\n    private isYearAndMonthAfterMaxDate(year: number, month: number) {\n        if (this.maxDate) {\n            const maxYear = this.dateAdapter.getYear(this.maxDate);\n            const maxMonth = this.dateAdapter.getMonth(this.maxDate);\n\n            return year > maxYear || (year === maxYear && month > maxMonth);\n        }\n\n        return false;\n    }\n\n    /**\n     * Tests whether the combination month/year is before this.minDate, considering\n     * just the month and year of this.minDate\n     */\n    private isYearAndMonthBeforeMinDate(year: number, month: number) {\n        if (this.minDate) {\n            const minYear = this.dateAdapter.getYear(this.minDate);\n            const minMonth = this.dateAdapter.getMonth(this.minDate);\n\n            return year < minYear || (year === minYear && month < minMonth);\n        }\n\n        return false;\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Determines whether the user has the RTL layout direction. */\n    private isRtl() {\n        return this.dir && this.dir.value === 'rtl';\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    OnDestroy,\n    QueryList,\n    ViewEncapsulation,\n    ContentChildren\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\n\nimport { mixinColor, mixinDisabled, CanColor, CanDisable, CanDisableCtor, CanColorCtor } from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\n@Directive({\n    selector: 'button[mc-button], a[mc-button]',\n    host: { class: 'mc-button' }\n})\nexport class McButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-icon-button], a[mc-icon-button]',\n    queries: {\n        contentChildren: new ContentChildren(McIcon)\n    },\n    host: { class: 'mc-icon-button' }\n})\nexport class McIconButtonCSSStyler {\n    nativeElement: Element;\n\n    contentChildren: QueryList<McIcon>;\n\n    constructor(elementRef: ElementRef) {\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const twoIcons = 2;\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n            const COMMENT_NODE = 8;\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling && iconElement.nextSibling.nodeType !== COMMENT_NODE) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-icon-button_left');\n                }\n\n                if (iconElement.previousSibling && iconElement.previousSibling.nodeType !== COMMENT_NODE) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-icon-button_right');\n                }\n            }\n        } else if (icons.length === twoIcons) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n\n\nexport class McButtonBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McButtonMixinBase:\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McButtonBase =\n        mixinColor(mixinDisabled(McButtonBase));\n\n\n@Component({\n    selector: `\n        button[mc-button],\n        button[mc-xs-button],\n        button[mc-sm-button],\n        button[mc-lg-button],\n        button[mc-xl-button]\n    `,\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[disabled]': 'disabled || null'\n    }\n})\nexport class McButton extends _McButtonMixinBase implements OnDestroy, CanDisable, CanColor {\n    constructor(elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        super(elementRef);\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n\n\n@Component({\n    selector: 'a[mc-button], a[mc-xs-button], a[mc-sm-button], a[mc-lg-button], a[mc-xl-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_haltDisabledEvents($event)'\n    }\n})\nexport class McAnchor extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n\n\n@Component({\n    selector: 'button[mc-icon-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null'\n    }\n})\nexport class McIconButton extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McButton,\n    McAnchor,\n    McIconButton,\n    McButtonCSSStyler,\n    McIconButtonCSSStyler\n} from './button.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McIconButtonCSSStyler\n    ],\n    declarations: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McIconButtonCSSStyler\n    ]\n})\nexport class McButtonModule {}\n","import {\n    Output,\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef, Input,\n    OnDestroy, EventEmitter,\n    ViewEncapsulation, HostBinding\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n@Component({\n    selector: 'mc-card',\n    templateUrl: './card.component.html',\n    styleUrls: ['./card.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color'],\n    host: {\n        class: 'mc-card',\n        '[class.mc-card_readonly]': 'readonly',\n        '[class.mc-card_selected]': 'selected',\n        '(keydown)': 'onKeyDown($event)',\n        '(click)': 'onClick($event)'\n    }\n})\nexport class McCard implements OnDestroy {\n    get tabIndex(): number | null {\n        return this.readonly ? null : this._tabIndex;\n    }\n\n    @HostBinding('attr.tabIndex')\n    @Input()\n    set tabIndex(value: number | null) {\n        this._tabIndex = value;\n    }\n\n    @Input()\n    readonly = false;\n\n    @Input()\n    selected = false;\n\n    @Output()\n    selectedChange = new EventEmitter<boolean>();\n\n    private _tabIndex: number | null = 0;\n\n    constructor(private _elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        this._focusMonitor.monitor(this._elementRef.nativeElement, false);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this.hostElement.focus();\n    }\n\n    onClick($event: MouseEvent) {\n        if (!this.readonly) {\n            $event.stopPropagation();\n\n            this.selectedChange.emit(!this.selected);\n        }\n    }\n\n    private get hostElement() {\n        return this._elementRef.nativeElement;\n    }\n\n    onKeyDown($event: KeyboardEvent) {\n        switch ($event.keyCode) {\n            case SPACE:\n                if (!this.readonly) {\n                    $event.preventDefault();\n                    this.selectedChange.emit(!this.selected);\n                }\n                break;\n            default:\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McCard\n} from './card.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [McCard],\n    declarations: [McCard]\n})\nexport class McCardModule {}\n","import { InjectionToken } from '@angular/core';\n\n\n/**\n * Checkbox click action when user click on input element.\n * noop: Do not toggle checked or indeterminate.\n * check: Only toggle checked status, ignore indeterminate.\n * check-indeterminate: Toggle checked status, set indeterminate to false. Default behavior.\n * undefined: Same as `check-indeterminate`.\n */\nexport type McCheckboxClickAction = 'noop' | 'check' | 'check-indeterminate' | undefined;\n\n/**\n * Injection token that can be used to specify the checkbox click behavior.\n */\nexport const MC_CHECKBOX_CLICK_ACTION =\n    new InjectionToken<McCheckboxClickAction>('mc-checkbox-click-action');\n","import {\n    AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_CHECKBOX_CLICK_ACTION, McCheckboxClickAction } from './checkbox-config';\n\n\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n\n/**\n * Provider Expression that allows mc-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nexport const MC_CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McCheckbox),\n    multi: true\n};\n\n/**\n * Represents the different states that require custom transitions between them.\n * @docs-private\n */\nexport enum TransitionCheckState {\n    /** The initial state of the component before any user interaction. */\n    Init,\n    /** The state representing the component when it's becoming checked. */\n    Checked,\n    /** The state representing the component when it's becoming unchecked. */\n    Unchecked,\n    /** The state representing the component when it's becoming indeterminate. */\n    Indeterminate\n}\n\n/** Change event object emitted by McCheckbox. */\nexport class McCheckboxChange {\n    /** The source McCheckbox of the event. */\n    source: McCheckbox;\n    /** The new `checked` value of the checkbox. */\n    checked: boolean;\n}\n\n// Boilerplate for applying mixins to McCheckbox.\n/** @docs-private */\nexport class McCheckboxBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McCheckboxMixinBase:\n    HasTabIndexCtor &\n    CanColorCtor &\n    CanDisableCtor &\n    typeof McCheckboxBase =\n        mixinTabIndex(mixinColor(mixinDisabled(McCheckboxBase)));\n\n\n/**\n * A mosaic checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A McCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n */\n@Component({\n    selector: 'mc-checkbox',\n    templateUrl: 'checkbox.html',\n    styleUrls: ['checkbox.css'],\n    exportAs: 'mcCheckbox',\n    host: {\n        class: 'mc-checkbox',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-indeterminate]': 'indeterminate',\n        '[class.mc-checked]': 'checked',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-checkbox-label-before]': 'labelPosition == \"before\"'\n    },\n    providers: [MC_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCheckbox extends _McCheckboxMixinBase implements ControlValueAccessor,\n    AfterViewInit, OnDestroy, CanColor, CanDisable, HasTabIndex {\n\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\n     * take precedence so this may be omitted.\n     */\n    @Input('aria-label') ariaLabel: string = '';\n\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     */\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-checkbox-${++nextUniqueId}`;\n\n    /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n    @Input() id: string = this._uniqueId;\n\n    /** Returns the unique id for the visual hidden input. */\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    /** Whether the checkbox is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    private _required: boolean;\n\n    /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n    @Input() labelPosition: 'before' | 'after' = 'after';\n\n    /** Name value will be applied to the input element if present */\n    @Input() name: string | null = null;\n\n    /** Event emitted when the checkbox's `checked` value changes. */\n    @Output() readonly change: EventEmitter<McCheckboxChange> =\n        new EventEmitter<McCheckboxChange>();\n\n    /** Event emitted when the checkbox's `indeterminate` value changes. */\n    @Output() readonly indeterminateChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** The value attribute of the native input element */\n    @Input() value: string;\n\n    /** The native `<input type=\"checkbox\">` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n     * @docs-private\n     */\n    _onTouched: () => any = () => {\n    }\n\n    private _currentAnimationClass: string = '';\n\n    private _currentCheckState: TransitionCheckState = TransitionCheckState.Init;\n\n    private _controlValueAccessorChangeFn: (value: any) => void = () => {\n    }\n\n    constructor(elementRef: ElementRef,\n                private _changeDetectorRef: ChangeDetectorRef,\n                private _focusMonitor: FocusMonitor,\n                @Attribute('tabindex') tabIndex: string,\n                @Optional() @Inject(MC_CHECKBOX_CLICK_ACTION)\n                private _clickAction: McCheckboxClickAction) {\n        super(elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._inputElement.nativeElement)\n            .subscribe((focusOrigin) => this._onInputFocusChange(focusOrigin));\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._inputElement.nativeElement);\n    }\n\n    /**\n     * Whether the checkbox is checked.\n     */\n    @Input()\n    get checked(): boolean {\n        return this._checked;\n    }\n\n    set checked(value: boolean) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     */\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value != this.disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    @Input()\n    get indeterminate(): boolean {\n        return this._indeterminate;\n    }\n\n    set indeterminate(value: boolean) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = value;\n\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(TransitionCheckState.Indeterminate);\n            } else {\n                this._transitionCheckState(\n                    this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n    }\n\n    private _indeterminate: boolean = false;\n\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // This method is getting called whenever the label of the checkbox changes.\n        // Since the checkbox uses the OnPush strategy we need to notify it about the change\n        // that has been recognized by the cdkObserveContent directive.\n        this._changeDetectorRef.markForCheck();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: any) {\n        this._onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    _getAriaChecked(): 'true' | 'false' | 'mixed' {\n        return this.checked ? 'true' : (this.indeterminate ? 'mixed' : 'false');\n    }\n\n    private _transitionCheckState(newState: TransitionCheckState) {\n        const oldState = this._currentCheckState;\n        const element: HTMLElement = this._elementRef.nativeElement;\n\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n\n        this._currentCheckState = newState;\n\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n        }\n    }\n\n    private _emitChangeEvent() {\n        const event = new McCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    }\n\n    /** Function is called whenever the focus changes for the input element. */\n    private _onInputFocusChange(focusOrigin: FocusOrigin) {\n        if (focusOrigin) {\n            this._onTouched();\n        }\n    }\n\n    /** Toggles the `checked` state of the checkbox. */\n    toggle(): void {\n        this.checked = !this.checked;\n    }\n\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param event\n     */\n    _onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && this._clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && this._clickAction !== 'check') {\n\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n\n            this.toggle();\n            this._transitionCheckState(\n                this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        } else if (!this.disabled && this._clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mc-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n\n    /** Focuses the checkbox. */\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _onInteractionEvent(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n}\n","import {\n    Directive,\n    forwardRef,\n    Provider\n} from '@angular/core';\nimport {\n    CheckboxRequiredValidator,\n    NG_VALIDATORS\n} from '@angular/forms';\n\n\nexport const MC_CHECKBOX_REQUIRED_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => McCheckboxRequiredValidator),\n    multi: true\n};\n\n/**\n * Validator for Mosaic checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mc-checkbox`.\n */\n@Directive({\n    selector: `mc-checkbox[required][formControlName],\n             mc-checkbox[required][formControl], mc-checkbox[required][ngModel]`,\n    providers: [MC_CHECKBOX_REQUIRED_VALIDATOR],\n    host: { '[attr.required]': 'required ? \"\" : null' }\n})\nexport class McCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McCheckbox } from './checkbox';\nimport { McCheckboxRequiredValidator } from './checkbox-required-validator';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McCheckbox, McCheckboxRequiredValidator],\n    declarations: [McCheckbox, McCheckboxRequiredValidator]\n})\nexport class McCheckboxModule {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-cleaner',\n    template: '<i class=\"mc-icon_light\" mc-icon=\"mc-close-M_16\" color=\"second\"></i>'\n})\nexport class McCleaner {}\n","import { NgControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** The element ID for this control. */\n    readonly id: string;\n\n    /** The placeholder for this control. */\n    readonly placeholder: string;\n\n    /** Gets the NgControl for this control. */\n    readonly ngControl: NgControl | null;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Whether the control is empty. */\n    readonly empty: boolean;\n\n    /** Whether the control is required. */\n    readonly required: boolean;\n\n    /** Whether the control is disabled. */\n    readonly disabled: boolean;\n\n    /** Whether the control is in an error state. */\n    readonly errorState: boolean;\n\n    /**\n     * An optional name for the control type that can be used to distinguish `mc-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mc-form-field-type-{{controlType}}` to its root element.\n     */\n    readonly controlType?: string;\n\n    /** Handles a click on the control's container. */\n    abstract onContainerClick(event: MouseEvent): void;\n}\n","import { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldNumberControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** the number step */\n    step: number;\n\n    /** the number big step */\n    bigStep: number;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Handles step up and down */\n    abstract stepUp(step: number): void;\n\n    abstract stepDown(step: number): void;\n}\n","import { Directive, Input } from '@angular/core';\n\n\nlet nextUniqueId = 0;\n\n@Directive({\n    selector: 'mc-hint',\n    host: {\n        class: 'mc-hint',\n        '[attr.id]': 'id'\n    }\n})\nexport class McHint {\n    @Input() id: string = `mc-hint-${nextUniqueId++}`;\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcPrefix]'\n})\nexport class McPrefix {\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-stepper',\n    template: `\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-up mc-angle-down-L_16\"\n           (mousedown)=\"onStepUp($event)\">\n        </i>\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-down mc-angle-down-L_16\"\n           (mousedown)=\"onStepDown($event)\">\n        </i>\n    `\n})\nexport class McStepper {\n    @Output()\n    readonly stepUp: EventEmitter<void> = new EventEmitter<void>();\n    @Output()\n    readonly stepDown: EventEmitter<void> = new EventEmitter<void>();\n\n    onStepUp($event: MouseEvent) {\n        this.stepUp.emit();\n        $event.preventDefault();\n    }\n\n    onStepDown($event: MouseEvent) {\n        this.stepDown.emit();\n        $event.preventDefault();\n    }\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcSuffix]'\n})\nexport class McSuffix {\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren, Directive,\n    ElementRef,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { CanColor, CanColorCtor, mixinColor } from '@ptsecurity/mosaic/core';\nimport { EMPTY, merge } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\n\nimport { McCleaner } from './cleaner';\nimport { McFormFieldControl } from './form-field-control';\nimport { getMcFormFieldMissingControlError } from './form-field-errors';\nimport { McFormFieldNumberControl } from './form-field-number-control';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\nlet nextUniqueId = 0;\n\nexport class McFormFieldBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McFormFieldMixinBase: CanColorCtor & typeof McFormFieldBase = mixinColor(McFormFieldBase);\n\n@Component({\n    selector: 'mc-form-field',\n    exportAs: 'mcFormField',\n    templateUrl: 'form-field.html',\n    // McInput is a directive and can't have styles, so we need to include its styles here.\n    // The McInput styles are fairly minimal so it shouldn't be a big deal for people who\n    // aren't using McInput.\n    styleUrls: [\n        'form-field.css',\n        '../input/input.css',\n        '../textarea/textarea.css'\n    ],\n    host: {\n        class: 'mc-form-field',\n        '[class.mc-form-field_invalid]': '_control.errorState',\n        '[class.mc-disabled]': '_control.disabled',\n        '[class.mc-form-field_has-prefix]': 'hasPrefix',\n        '[class.mc-form-field_has-suffix]': 'hasSuffix',\n        '[class.mc-form-field_has-cleaner]': 'canShowCleaner',\n        '[class.mc-form-field_has-stepper]': 'canShowStepper',\n        '[class.mc-focused]': '_control.focused',\n        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n        '[class.ng-touched]': '_shouldForward(\"touched\")',\n        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n        '[class.ng-valid]': '_shouldForward(\"valid\")',\n        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n        '[class.ng-pending]': '_shouldForward(\"pending\")',\n        '(keydown)': 'onKeyDown($event)',\n        '(mouseenter)': 'onHoverChanged(true)',\n        '(mouseleave)': 'onHoverChanged(false)'\n    },\n    inputs: ['color'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class McFormField extends _McFormFieldMixinBase implements\n    AfterContentInit, AfterContentChecked, AfterViewInit, CanColor {\n\n    @ContentChild(McFormFieldControl) _control: McFormFieldControl<any>;\n    @ContentChild(McFormFieldNumberControl) _numberControl: McFormFieldNumberControl<any>;\n    @ContentChild(McStepper) _stepper: McStepper;\n\n    @ContentChildren(McHint) _hint: QueryList<McHint>;\n    @ContentChildren(McSuffix) _suffix: QueryList<McSuffix>;\n    @ContentChildren(McPrefix) _prefix: QueryList<McPrefix>;\n    @ContentChildren(McCleaner) _cleaner: QueryList<McCleaner>;\n\n    // Unique id for the internal form field label.\n    _labelId = `mc-form-field-label-${nextUniqueId++}`;\n\n    hovered: boolean = false;\n\n    constructor(public _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {\n        super(_elementRef);\n    }\n\n    ngAfterContentInit() {\n        this._validateControlChild();\n\n        if (this._control.controlType) {\n            this._elementRef.nativeElement.classList\n                .add(`mc-form-field-type-${this._control.controlType}`);\n\n            if (this._numberControl && this.hasStepper) {\n                this._stepper.stepUp.subscribe(this.onStepUp.bind(this));\n                this._stepper.stepDown.subscribe(this.onStepDown.bind(this));\n            }\n        }\n\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        this._control.stateChanges.pipe(startWith())\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n\n        if (this._numberControl) {\n            this._numberControl.stateChanges.pipe(startWith())\n                .subscribe(() => {\n                    this._changeDetectorRef.markForCheck();\n                });\n        }\n\n        // Run change detection if the value changes.\n        const valueChanges = this._control.ngControl && this._control.ngControl.valueChanges || EMPTY;\n\n        merge(valueChanges)\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n\n    ngAfterContentChecked() {\n        this._validateControlChild();\n    }\n\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._changeDetectorRef.detectChanges();\n    }\n\n    clearValue($event) {\n        $event.stopPropagation();\n\n        if (this._control && this._control.ngControl) {\n            this._control.ngControl.reset();\n        }\n    }\n\n    onContainerClick($event) {\n        if (this._control.onContainerClick) {\n            this._control.onContainerClick($event);\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === ESCAPE && this._control.focused && this.hasCleaner) {\n            if (this._control && this._control.ngControl) {\n                this._control.ngControl.reset();\n            }\n\n            event.preventDefault();\n        }\n    }\n\n    onHoverChanged(isHovered: boolean) {\n        if (isHovered !== this.hovered) {\n            this.hovered  = isHovered;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    onStepUp() {\n        if (this._numberControl) {\n            this._numberControl.stepUp(this._numberControl.step);\n        }\n    }\n\n    onStepDown() {\n        if (this._numberControl) {\n            this._numberControl.stepDown(this._numberControl.step);\n        }\n    }\n\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop: keyof NgControl): boolean {\n        const ngControl = this._control ? this._control.ngControl : null;\n\n        return ngControl && ngControl[prop];\n    }\n\n    /** Throws an error if the form field's control is missing. */\n    protected _validateControlChild() {\n        if (!this._control) {\n            throw getMcFormFieldMissingControlError();\n        }\n    }\n\n    get hasHint(): boolean {\n        return this._hint && this._hint.length > 0;\n    }\n\n    get hasSuffix(): boolean {\n        return this._suffix && this._suffix.length > 0;\n    }\n\n    get hasPrefix(): boolean {\n        return this._prefix && this._prefix.length > 0;\n    }\n\n    get hasCleaner(): boolean {\n        return this._cleaner && this._cleaner.length > 0;\n    }\n\n    get hasStepper(): boolean {\n        return !!this._stepper;\n    }\n\n    get canShowCleaner(): boolean {\n        return this.hasCleaner &&\n            this._control &&\n            this._control.ngControl\n                ? this._control.ngControl.value && !this._control.disabled\n                : false;\n    }\n\n\n    get disabled(): boolean {\n        return this._control && this._control.disabled;\n    }\n\n    get canShowStepper(): boolean {\n        return this._numberControl &&\n            !this.disabled &&\n            (\n                this._numberControl.focused ||\n                this.hovered\n            );\n    }\n}\n\n@Directive({\n    selector: 'mc-form-field[mcFormFieldWithoutBorders]',\n    exportAs: 'mcFormFieldWithoutBorders',\n    host: { class: 'mc-form-field_without-borders' }\n})\nexport class McFormFieldWithoutBorders {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCleaner } from './cleaner';\nimport { McFormField, McFormFieldWithoutBorders } from './form-field';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\n@NgModule({\n    declarations: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ],\n    imports: [CommonModule, McIconModule],\n    exports: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ]\n})\nexport class McFormFieldModule {\n}\n","import { InjectionToken } from '@angular/core';\n\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n","function sanitizeNumber(value: number): number | null {\n    return !isFinite(value) || isNaN(value)\n        ? null\n        : value;\n}\n\nfunction getPrecision(value: number): number {\n    const arr = value.toString().split('.');\n\n    return arr.length === 1\n        ? 1\n        // tslint:disable-next-line:no-magic-numbers\n        :  Math.pow(10, arr[1].length);\n}\n\nfunction add(value1: number, value2: number) {\n    const precision = Math.max(getPrecision(value1), getPrecision(value2));\n\n    const res = (value1 * precision + value2 * precision) / precision;\n\n    return sanitizeNumber(res);\n}\n\nexport const stepUp = (value: number | null,\n                       max: number,\n                       min: number,\n                       step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(min, step);\n\n        return res === null ? null : Math.min(res, max);\n    }\n\n    res = add(value, step);\n\n    return res === null ? null : Math.max(Math.min(res, max), min);\n};\n\nexport const stepDown = (value: number | null,\n                         max: number,\n                         min: number,\n                         step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(max, -step);\n\n        return res === null ? null : Math.max(res, min);\n    }\n\n    res = add(value, -step);\n\n    return res === null ? null : Math.min(Math.max(res, min), max);\n};\n","import {\n    Attribute,\n    Directive, DoCheck, ElementRef, Inject, Input, OnChanges,\n    OnDestroy, Optional, Self\n} from '@angular/core';\nimport {\n    FormGroupDirective,\n    NgControl,\n    NgForm, NgModel\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    END, C, V, X, A, DELETE, BACKSPACE, TAB, ENTER,\n    ESCAPE, ZERO, NINE, NUMPAD_ZERO, NUMPAD_NINE, NUMPAD_MINUS, DASH,\n    FF_MINUS, LEFT_ARROW, RIGHT_ARROW, HOME, UP_ARROW, DOWN_ARROW, F1, F12\n} from '@ptsecurity/cdk/keycodes';\nimport { getSupportedInputTypes, Platform } from '@ptsecurity/cdk/platform';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl, McFormFieldNumberControl } from '@ptsecurity/mosaic/form-field';\nimport { Subject } from 'rxjs';\n\nimport { getMcInputUnsupportedTypeError } from './input-errors';\nimport { MC_INPUT_VALUE_ACCESSOR } from './input-value-accessor';\nimport { stepDown, stepUp } from './stepperUtils';\n\n\nconst MC_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n\nexport const BIG_STEP = 10;\nexport const SMALL_STEP = 1;\n\nlet nextUniqueId = 0;\n\nexport class McInputBase {\n    constructor(public defaultErrorStateMatcher: ErrorStateMatcher,\n                public parentForm: NgForm,\n                public parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\nexport const _McInputMixinBase: CanUpdateErrorStateCtor & typeof McInputBase = mixinErrorState(McInputBase);\n\n\n@Directive({\n    selector: `input[mcInput][type=\"number\"]`,\n    exportAs: 'mcNumericalInput',\n    providers: [NgModel, { provide: McFormFieldNumberControl, useExisting: McNumberInput }],\n    host: {\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McNumberInput implements McFormFieldNumberControl<any> {\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    bigStep: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    step: number;\n\n    @Input()\n    min: number;\n\n    @Input()\n    max: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    value: any;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    private readonly _host: HTMLInputElement;\n\n    constructor(\n        private _platform: Platform ,\n        private _elementRef: ElementRef,\n        private _model: NgModel,\n        @Attribute('step') step: string,\n        @Attribute('big-step') bigStep: string,\n        @Attribute('min') min: string,\n        @Attribute('max') max: string\n    ) {\n        this.step = this.isDigit(step) ? parseFloat(step) : SMALL_STEP;\n        this.bigStep = this.isDigit(bigStep) ? parseFloat(bigStep) : BIG_STEP;\n        this.min = this.isDigit(min) ? parseFloat(min) : -Infinity;\n        this.max = this.isDigit(max) ? parseFloat(max) : Infinity;\n\n        this._host = this._elementRef.nativeElement;\n\n        const self = this;\n\n        if ('valueAsNumber' in this._host) {\n            Object.defineProperty(Object.getPrototypeOf(this._host), 'valueAsNumber', {\n                // tslint:disable-next-line:no-reserved-keywords\n                get() {\n                    const res = parseFloat(self.normalizeSplitter(this.value));\n\n                    return isNaN(res) ? null : res;\n                }\n            });\n        }\n    }\n\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const keyCode = event.keyCode;\n\n        const isCtrlA = (e) => e.keyCode === A && (e.ctrlKey || e.metaKey);\n        const isCtrlC = (e) => e.keyCode === C && (e.ctrlKey || e.metaKey);\n        const isCtrlV = (e) => e.keyCode === V && (e.ctrlKey || e.metaKey);\n        const isCtrlX = (e) => e.keyCode === X && (e.ctrlKey || e.metaKey);\n\n        const isFKey = (e) => e.keyCode >= F1 && e.keyCode <= F12;\n\n        const isNumber = (e) => (e.keyCode >= ZERO && e.keyCode <= NINE) ||\n            (e.keyCode >= NUMPAD_ZERO && e.keyCode <= NUMPAD_NINE);\n\n        const minuses = [NUMPAD_MINUS, DASH, FF_MINUS];\n        const serviceKeys = [DELETE, BACKSPACE, TAB, ESCAPE, ENTER];\n        const arrows = [LEFT_ARROW, RIGHT_ARROW];\n        const allowedKeys =  [HOME, END].concat(arrows).concat(serviceKeys).concat(minuses);\n\n        const isIEPeriod = (e) => e.key === '.' || e.key === 'Decimal';\n        const isNotIEPeriod = (e) => e.key === '.' || e.key === ',';\n\n        // Decimal is for IE\n        const isPeriod = (e) => this._platform.EDGE || this._platform.TRIDENT\n            ? isIEPeriod(e)\n            : isNotIEPeriod(e);\n\n        if (allowedKeys.indexOf(keyCode) !== -1 ||\n            isCtrlA(event) ||\n            isCtrlC(event) ||\n            isCtrlV(event) ||\n            isCtrlX(event) ||\n            isFKey(event) ||\n            isPeriod(event)\n        ) {\n            // let it happen, don't do anything\n            return;\n        }\n        // Ensure that it is not a number and stop the keypress\n        if (event.shiftKey || !isNumber(event)) {\n            event.preventDefault();\n\n            // process steps\n            const step = event.shiftKey ? this.bigStep : this.step;\n\n            if (keyCode === UP_ARROW) {\n                this.stepUp(step);\n            }\n\n            if (keyCode === DOWN_ARROW) {\n                this.stepDown(step);\n            }\n        }\n    }\n\n    onPaste(event) {\n        let value = event.clipboardData.getData('text');\n        value = this.normalizeSplitter(value);\n\n        if (!this.isDigit(value)) {\n            event.preventDefault();\n        }\n    }\n\n    stepUp(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepUp(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    stepDown(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepDown(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    private normalizeSplitter(value: string): string {\n        return value ? value.replace(/,/g, '.') : value;\n    }\n\n    private isDigit(value: string): boolean {\n        return this.isFloat(value) || this.isInt(value);\n    }\n\n    private isFloat(value: string): boolean {\n        return /^-?\\d+\\.\\d+$/.test(value);\n    }\n\n    private isInt(value: string): boolean {\n        return /^-?\\d+$/.test(value);\n    }\n}\n\n@Directive({\n    selector: `input[mcInput]`,\n    exportAs: 'mcInput',\n    host: {\n        class: 'mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(input)': '_onInput()'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McInput }]\n})\nexport class McInput extends _McInputMixinBase implements McFormFieldControl<any>, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-input';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    // tslint:disable no-reserved-keywords\n    /** Input type of the element. */\n    @Input()\n    get type(): string {\n        return this._type;\n    }\n\n    set type(value: string) {\n        this._type = value || 'text';\n        this._validateType();\n\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    // tslint:enable no-reserved-keywords\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this._inputValueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected _uid = `mc-input-${nextUniqueId++}`;\n    protected _previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n    protected _type = 'text';\n    protected _neverEmptyInputTypes = [\n        'date',\n        'datetime',\n        'datetime-local',\n        'month',\n        'time',\n        'week'\n    ].filter((t) => getSupportedInputTypes().has(t));\n\n    private _inputValueAccessor: { value: any };\n\n    constructor(protected _elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() parentForm: NgForm,\n                @Optional() parentFormGroup: FormGroupDirective,\n                defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any) {\n        super(defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || this._elementRef.nativeElement;\n\n        this._previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n\n    /** Focuses the input. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the input changes. */\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    protected _dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Make sure the input is a supported type. */\n    protected _validateType() {\n        if (MC_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMcInputUnsupportedTypeError(this._type);\n        }\n    }\n\n    /** Checks whether the input type is one of the types that are never empty. */\n    protected _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    protected _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this._elementRef.nativeElement as HTMLInputElement).validity;\n\n        return validity && validity.badInput;\n    }\n}\n\n@Directive({\n    selector: 'input[mcInputMonospace]',\n    exportAs: 'McInputMonospace',\n    host: { class: 'mc-input_monospace' }\n})\nexport class McInputMono {\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\nexport function isBoolean(val: any): val is boolean { return typeof val === 'boolean'; }\n\nexport function toBoolean(value: any): boolean {\n    return value != null && `${value}` !== 'false';\n}\n","import { NgModule, InjectionToken, Optional, Inject, isDevMode } from '@angular/core';\nimport { BidiModule } from '@ptsecurity/cdk/bidi';\n\n\n// Injection token that configures whether the Mosaic sanity checks are enabled.\nexport const MC_SANITY_CHECKS = new InjectionToken<boolean>('mc-sanity-checks', {\n    providedIn: 'root',\n    factory: MC_SANITY_CHECKS_FACTORY\n});\n\nexport function MC_SANITY_CHECKS_FACTORY(): boolean {\n    return true;\n}\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Mosaic\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., McTabsModule).\n */\n@NgModule({\n    imports: [ BidiModule ],\n    exports: [ BidiModule ]\n})\nexport class McCommonModule {\n    // Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n    private _hasDoneGlobalChecks = false;\n\n    // Reference to the global `document` object.\n    private _document = typeof document === 'object' && document ? document : null;\n\n    // Reference to the global 'window' object.\n    private _window = typeof window === 'object' && window ? window : null;\n\n    constructor(@Optional() @Inject(MC_SANITY_CHECKS) private _sanityChecksEnabled: boolean) {\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n\n    // Whether any sanity checks are enabled\n    private _areChecksEnabled(): boolean {\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    }\n\n    // Whether the code is running in tests.\n    private _isTestEnv() {\n        // tslint:disable-next-line\n        return this._window && (this._window['__karma__'] || this._window['jasmine']);\n    }\n\n    private _checkDoctypeIsDefined(): void {\n        if (this._document && !this._document.doctype) {\n            console.warn(\n                'Current document does not have a doctype. This may cause ' +\n                'some Mosaic components not to behave as expected.'\n            );\n        }\n    }\n\n    private _checkThemeIsPresent(): void {\n        if (this._document && typeof getComputedStyle === 'function') {\n            const testElement = this._document.createElement('div');\n\n            testElement.classList.add('mc-theme-loaded-marker');\n            this._document.body.appendChild(testElement);\n\n            const computedStyle = getComputedStyle(testElement);\n\n            // In some situations, the computed style of the test element can be null. For example in\n            // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n            if (computedStyle && computedStyle.display !== 'none') {\n                console.warn(\n                    'Could not find Mosaic core theme. Most Mosaic ' +\n                    'components may not work as expected. For more info refer ' +\n                    'to the theming guide: link there'\n                );\n            }\n\n            this._document.body.removeChild(testElement);\n        }\n    }\n}\n","import { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanDisable {\n    disabled: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableCtor = Constructor<CanDisable>;\n\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): CanDisableCtor & T {\n    return class extends base {\n        get disabled() {\n            return this._disabled;\n        }\n\n        set disabled(value: any) {\n            this._disabled = coerceBooleanProperty(value);\n        }\n\n        private _disabled: boolean = false;\n\n        constructor(...args: any[]) {\n            // tslint:disable-next-line\n            super(...args);\n        }\n    };\n}\n","import { ElementRef } from '@angular/core';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanColor {\n    color: ThemePalette;\n}\n\n/** @docs-private */\nexport type CanColorCtor = Constructor<CanColor>;\n\nexport interface HasElementRef {\n    _elementRef: ElementRef;\n}\n\nexport enum ThemePalette {\n    Primary = 'primary',\n    Second = 'second',\n    Error = 'error',\n    Default = 'second',\n    Empty = ''\n}\n\n/** Mixin to augment a directive with a `color` property. */\nexport function mixinColor<T extends Constructor<HasElementRef>>(\n    base: T,\n    defaultColor: ThemePalette = ThemePalette.Default\n): CanColorCtor & T {\n    return class extends base {\n\n        private _color: ThemePalette;\n\n        get color(): ThemePalette {\n            return this._color;\n        }\n\n        set color(value: ThemePalette) {\n            const colorPalette = value || defaultColor;\n\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mc-${this._color}`);\n                }\n\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mc-${colorPalette}`);\n                }\n\n                this._color = colorPalette;\n            }\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n\n            this.color = defaultColor;\n        }\n    };\n}\n\n","import { Constructor } from './constructor';\nimport { CanDisable } from './disabled';\n\n\nexport interface HasTabIndex {\n    tabIndex: number;\n}\n\nexport type HasTabIndexCtor = Constructor<HasTabIndex>;\n\n// Mixin to augment a directive with a `tabIndex` property.\nexport function mixinTabIndex<T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0): HasTabIndexCtor & T {\n    return class extends base {\n        get tabIndex(): number {\n            return this.disabled ? -1 : this._tabIndex;\n        }\n\n        set tabIndex(value: number) {\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n\n        private _tabIndex: number = defaultTabIndex;\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n    };\n}\n","import { FormControl, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\nimport { ErrorStateMatcher } from '../error/error-options';\n\nimport { Constructor } from './constructor';\n\n\n/** @docs-private */\nexport interface CanUpdateErrorState {\n\n    readonly stateChanges: Subject<void>;\n\n    errorState: boolean;\n    errorStateMatcher: ErrorStateMatcher;\n\n    updateErrorState();\n}\n\n/** @docs-private */\nexport type CanUpdateErrorStateCtor = Constructor<CanUpdateErrorState>;\n\n/** @docs-private */\nexport interface HasErrorState {\n    parentFormGroup: FormGroupDirective;\n    parentForm: NgForm;\n    defaultErrorStateMatcher: ErrorStateMatcher;\n    ngControl: NgControl;\n}\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T): CanUpdateErrorStateCtor & T {\n    return class extends base {\n        /** Whether the component is in an error state. */\n        errorState: boolean = false;\n\n        /**\n         * Stream that emits whenever the state of the input changes such that the wrapping\n         * `MatFormField` needs to run change detection.\n         */\n        readonly stateChanges = new Subject<void>();\n\n        errorStateMatcher: ErrorStateMatcher;\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this.parentFormGroup || this.parentForm;\n            const matcher = this.errorStateMatcher || this.defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control as FormControl : null;\n            const newState = matcher.isErrorState(control, parent);\n\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n","import {\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ENTER, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Subject } from 'rxjs';\n\nimport { McOptgroup } from './optgroup';\n\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet uniqueIdCounter = 0;\n\n/** Event object emitted by McOption when selected or deselected. */\nexport class McOptionSelectionChange {\n    constructor(public source: McOption, public isUserInput = false) {}\n}\n\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * @docs-private\n */\nexport interface IMcOptionParentComponent {\n    multiple?: boolean;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_OPTION_PARENT_COMPONENT =\n    new InjectionToken<IMcOptionParentComponent>('MC_OPTION_PARENT_COMPONENT');\n\n/**\n * Single option inside of a `<mc-select>` element.\n */\n@Component({\n    selector: 'mc-option',\n    exportAs: 'mcOption',\n    host: {\n        '[attr.tabindex]': 'getTabIndex()',\n        class: 'mc-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-option-multiple]': 'multiple',\n        '[class.mc-active]': 'active',\n        '[class.mc-disabled]': 'disabled',\n        '[id]': 'id',\n\n        '(click)': 'selectViaInteraction()',\n        '(keydown)': 'handleKeydown($event)'\n    },\n    styleUrls: ['./option.css'],\n    templateUrl: './option.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McOption implements AfterViewChecked, OnDestroy {\n    /** The form value of the option. */\n    @Input() value: any;\n\n    /** Event emitted when the option is selected or deselected. */\n    // tslint:disable-next-line:no-output-on-prefix\n    @Output() readonly onSelectionChange = new EventEmitter<McOptionSelectionChange>();\n\n    /** Emits when the state of the option changes and any parents have to be notified. */\n    readonly stateChanges = new Subject<void>();\n\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue(): string {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this.getHostElement().textContent || '').trim();\n    }\n\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n        return this.parent && this.parent.multiple;\n    }\n\n    get id(): string {\n        return this._id;\n    }\n\n    private _id = `mc-option-${uniqueIdCounter++}`;\n\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    private _selected = false;\n\n    @Input()\n    get disabled() {\n        return (this.group && this.group.disabled) || this._disabled;\n    }\n\n    set disabled(value: any) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    private _disabled = false;\n\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active(): boolean {\n        return this._active;\n    }\n\n    private _active = false;\n\n    private mostRecentViewValue = '';\n\n    constructor(\n        private readonly element: ElementRef,\n        private readonly changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_OPTION_PARENT_COMPONENT) private readonly parent: IMcOptionParentComponent,\n        @Optional() readonly group: McOptgroup\n    ) {}\n\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mc-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n\n            if (viewValue !== this.mostRecentViewValue) {\n                this.mostRecentViewValue = viewValue;\n                this.stateChanges.next();\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n    }\n\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent();\n        }\n    }\n\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent();\n        }\n    }\n\n    focus(): void {\n        const element = this.getHostElement();\n\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles(): void {\n        if (!this._active) {\n            this._active = true;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles(): void {\n        if (this._active) {\n            this._active = false;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        return this.viewValue;\n    }\n\n    /** Ensures the option is selected when activated from the keyboard. */\n    handleKeydown(event: KeyboardEvent): void {\n        // tslint:disable-next-line\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\n            this.selectViaInteraction();\n\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    selectViaInteraction(): void {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent(true);\n        }\n    }\n\n    getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    getHostElement(): HTMLElement {\n        return this.element.nativeElement;\n    }\n\n    /** Emits the selection change event. */\n    private emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McOptionSelectionChange(this, isUserInput));\n    }\n}\n\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nexport function countGroupLabelsBeforeOption(\n    optionIndex: number,\n    options: QueryList<McOption>,\n    optionGroups: QueryList<McOptgroup>\n): number {\n\n    if (optionGroups.length) {\n        const optionsArray = options.toArray();\n        const groups = optionGroups.toArray();\n\n        let groupCounter = 0;\n\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n\n        return groupCounter;\n    }\n\n    return 0;\n}\n\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionIndex Index of the option to be scrolled into the view.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nexport function getOptionScrollPosition(\n    optionIndex: number,\n    optionHeight: number,\n    currentScrollPosition: number,\n    panelHeight: number\n): number {\n    const optionOffset = optionIndex * optionHeight;\n\n    if (optionOffset < currentScrollPosition) { return optionOffset; }\n\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n\n    return currentScrollPosition;\n}\n\n","import { ConnectionPositionPair } from '@ptsecurity/cdk/overlay';\n\n\nexport const POSITION_MAP: { [key: string]: ConnectionPositionPair } = {\n    top         : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom'\n    },\n    topCenter   : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topLeft     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topRight    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    right       : {\n        originX : 'end',\n        originY : 'center',\n        overlayX: 'start',\n        overlayY: 'center'\n    },\n    rightTop    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'top',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    rightBottom : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    bottom      : {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomCenter: {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomLeft  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    bottomRight : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    left        : {\n        originX : 'start',\n        originY : 'center',\n        overlayX: 'end',\n        overlayY: 'center'\n    },\n    leftTop     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    leftBottom  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    }\n};\n\nexport const DEFAULT_4_POSITIONS = _objectValues([\n    POSITION_MAP.top, POSITION_MAP.right, POSITION_MAP.bottom, POSITION_MAP.left\n]);\n\nfunction arrayMap<T, S>(array: T[], iteratee: (item: T, index: number, arr: T[]) => S): S[] {\n    let index = -1;\n    const length = array == null ? 0 : array.length;\n    const result = Array(length);\n\n    while (++index < length) {\n        result[ index ] = iteratee(array[ index ], index, array);\n    }\n\n    return result;\n}\nfunction baseValues<T>(object: { [key: string]: T } | T[], props: string[]): T[] {\n    return arrayMap(props,  (key) => {\n        return object[ key ];\n    });\n}\nfunction _objectValues<T>(object: { [key: string]: T } | T[]): T[] {\n    return object == null ? [] : baseValues(object, Object.keys(object));\n}\n","/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nexport function getMcSelectDynamicMultipleError(): Error {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nexport function getMcSelectNonArrayValueError(): Error {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nexport function getMcSelectNonFunctionValueError(): Error {\n    return Error('`compareWith` must be a function.');\n}\n","export function getMcFormFieldMissingControlError(): Error {\n  return Error('mc-form-field must contain a McFormFieldControl.');\n}\n","export function getMcInputUnsupportedTypeError(inputType: string): Error {\n    return Error(`Input type \"${inputType}\" isn't supported by mcInput.`);\n}\n","/** @docs-private */\nexport function createMissingDateImplError(provider: string) {\n    return Error(\n        `McDatepicker: No provider found for ${provider}. You must import one of the existing ` +\n        `modules at your application root or provide a custom implementation or use exists ones.`);\n}\n","export function throwMcDropdownMissingError() {\n    throw Error(`mcDropdownTriggerFor: must pass in an mc-dropdown instance.\n    Example:\n      <mc-dropdown #dropdown=\"mcDropdown\"></mc-dropdown>\n      <button [mcDropdownTriggerFor]=\"dropdown\"></button>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mc-dropdown xPosition=\"before\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mc-dropdown yPosition=\"above\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n","import { NgModule, Directive, ElementRef, QueryList } from '@angular/core';\n\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(McLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({\n    selector: '[mc-line], [mcLine]',\n    host: { class: 'mc-line' }\n})\nexport class McLine {}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nexport class McLineSetter {\n    constructor(private _lines: QueryList<McLine>, private _element: ElementRef) {\n        this._setLineClass(this._lines.length);\n\n        this._lines.changes.subscribe(() => {\n            this._setLineClass(this._lines.length);\n        });\n    }\n\n    private _setLineClass(count: number): void {\n        this._resetClasses();\n        if (count === 2 || count === 3) {\n            this._setClass(`mc-${count}-line`, true);\n        } else if (count > 3) {\n            this._setClass(`mc-multi-line`, true);\n        }\n    }\n\n    private _resetClasses(): void {\n        this._setClass('mc-2-line', false);\n        this._setClass('mc-3-line', false);\n        this._setClass('mc-multi-line', false);\n    }\n\n    private _setClass(className: string, isAdd: boolean): void {\n        if (isAdd) {\n            this._element.nativeElement.classList.add(className);\n        } else {\n            this._element.nativeElement.classList.remove(className);\n        }\n    }\n}\n\n@NgModule({\n    imports: [],\n    exports: [McLine],\n    declarations: [McLine]\n})\nexport class McLineModule {}\n","import { Injectable } from '@angular/core';\nimport { FormGroupDirective, NgForm, FormControl } from '@angular/forms';\n\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n@Injectable()\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\n\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n@Injectable({ providedIn: 'root' })\nexport class ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\n\nexport type McPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mc-primary .mc-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mc-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n@Component({\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'mc-pseudo-checkbox',\n    styleUrls: ['pseudo-checkbox.css'],\n    templateUrl: 'pseudo-checkbox.partial.html',\n    host: {\n        class: 'mc-pseudo-checkbox',\n        '[class.mc-indeterminate]': 'state === \"indeterminate\"',\n        '[class.mc-checked]': 'state === \"checked\"',\n        '[class.mc-disabled]': 'disabled'\n    }\n})\nexport class McPseudoCheckbox {\n    @Input() state: McPseudoCheckboxState = 'unchecked';\n\n    @Input() disabled: boolean = false;\n}\n","import { NgModule } from '@angular/core';\n\nimport { McPseudoCheckbox } from './pseudo-checkbox/pseudo-checkbox';\n\n\n@NgModule({\n    exports: [McPseudoCheckbox],\n    declarations: [McPseudoCheckbox]\n})\nexport class McPseudoCheckboxModule {}\n\n\nexport * from './pseudo-checkbox/pseudo-checkbox';\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class McMeasureScrollbarService {\n\n    get scrollBarWidth(): number {\n        if (this._scrollbarWidth) {\n            return this._scrollbarWidth;\n        }\n        this.initScrollBarWidth();\n\n        return this._scrollbarWidth;\n    }\n\n    private _scrollbarWidth: number;\n    private scrollbarMeasure = {\n        position: 'absolute',\n        top: '-9999px',\n        width: '50px',\n        height: '50px',\n        overflow: 'scroll'\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private document: any\n    ) {\n        this.initScrollBarWidth();\n    }\n\n    initScrollBarWidth() {\n        const scrollDiv = this.document.createElement('div');\n\n        // tslint:disable-next-line\n        for (const scrollProp in this.scrollbarMeasure) {\n            if (this.scrollbarMeasure.hasOwnProperty(scrollProp)) {\n                scrollDiv.style[scrollProp] = this.scrollbarMeasure[scrollProp];\n            }\n        }\n\n        this.document.body.appendChild(scrollDiv);\n\n        const width = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n        this.document.body.removeChild(scrollDiv);\n        this._scrollbarWidth = width;\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\nimport { mixinDisabled, CanDisable, CanDisableCtor } from '../common-behaviors/index';\n\n\n// Boilerplate for applying mixins to McOptgroup.\n/** @docs-private */\nexport class McOptgroupBase {}\n\nexport const McOptgroupMixinBase: CanDisableCtor & typeof McOptgroupBase = mixinDisabled(McOptgroupBase);\n\n// Counter for unique group ids.\nlet uniqueOptgroupIdCounter = 0;\n\n/**\n * Component that is used to group instances of `mc-option`.\n */\n@Component({\n    selector: 'mc-optgroup',\n    exportAs: 'mcOptgroup',\n    templateUrl: 'optgroup.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    styleUrls: ['optgroup.css'],\n    host: {\n        class: 'mc-optgroup',\n        role: 'group',\n        '[class.mc-optgroup-disabled]': 'disabled',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-labelledby]': 'labelId'\n    }\n})\nexport class McOptgroup extends McOptgroupMixinBase implements CanDisable {\n    /** Label for the option group. */\n    @Input() label: string;\n\n    /** Unique id for the underlying label. */\n    labelId: string = `mc-optgroup-label-${uniqueOptgroupIdCounter++}`;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McPseudoCheckboxModule } from '../selection/index';\n\nimport { McOptgroup } from './optgroup';\nimport { McOption } from './option';\n\n\n@NgModule({\n    imports: [CommonModule, McPseudoCheckboxModule],\n    exports: [McOption, McOptgroup],\n    declarations: [McOption, McOptgroup]\n})\nexport class McOptionModule {}\n\n\nexport * from './option';\nexport * from './optgroup';\n","import { InjectionToken } from '@angular/core';\n\n\n/** InjectionToken that can be used to specify the global label options. */\nexport const MC_LABEL_GLOBAL_OPTIONS =\n    new InjectionToken<LabelOptions>('mc-label-global-options');\n\n/** Type for the available floatLabel values. */\nexport type FloatLabelType = 'always' | 'never' | 'auto';\n\n/** Configurable options for floating labels. */\nexport interface LabelOptions {\n    /**\n     * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n     * Default behavior is assumed to be `auto`.\n     */\n    float?: FloatLabelType;\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\nexport const fadeAnimation: AnimationTriggerMetadata =  trigger('fadeAnimation', [\n    state('void', style({ opacity: 0 })),\n    state('true', style({ opacity: 1 })),\n    state('false', style({ opacity: 0 })),\n    transition('* => true', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n    transition('* => void', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)'))\n]);\n","export enum AnimationCurves {\n    StandardCurve = 'cubic-bezier(0.4,0.0,0.2,1)',\n    DecelerationCurve = 'cubic-bezier(0.0,0.0,0.2,1)',\n    AccelerationCurve = 'cubic-bezier(0.4,0.0,1,1)',\n    SharpCurve = 'cubic-bezier(0.4,0.0,0.6,1)'\n}\n","import {\n    animate,\n    AnimationTriggerMetadata,\n    state,\n    style,\n    transition,\n    trigger,\n    query,\n    animateChild,\n    group\n} from '@angular/animations';\n\n\n/**\n * The following are all the animations for the mc-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mc-select animation.\n */\nexport const mcSelectAnimations: {\n    readonly transformPanel: AnimationTriggerMetadata;\n    readonly fadeInContent: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        transition('void => *', group([\n            query('@fadeInContent', animateChild()),\n            animate('150ms cubic-bezier(0.25, 0.8, 0.25, 1)')\n        ])),\n        transition('* => void', [\n            animate('250ms 100ms linear', style({ opacity: 0 }))\n        ])\n    ]),\n\n    /**\n     * This animation fades in the background color and text content of the\n     * select's options. It is time delayed to occur 100ms after the overlay\n     * panel has transformed in.\n     */\n    fadeInContent: trigger('fadeInContent', [\n        state('showing', style({ opacity: 1 })),\n        transition('void => showing', [\n            style({ opacity: 0 }),\n            animate('150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const transformPanel = mcSelectAnimations.transformPanel;\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const fadeInContent = mcSelectAnimations.fadeInContent;\n","import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { mixinColor, CanColor, CanColorCtor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\n@Directive({\n    selector: '[mc-icon]',\n    host: { class: 'mc mc-icon' }\n})\nexport class McIconCSSStyler {}\n\n\nexport class McIconBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McIconMixinBase: CanColorCtor & typeof McIconBase = mixinColor(McIconBase, ThemePalette.Empty);\n\n\n@Component({\n    selector: `[mc-icon]`,\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./icon.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color']\n})\nexport class McIcon extends _McIconMixinBase implements CanColor {\n    constructor(elementRef: ElementRef, @Attribute('mc-icon') iconName: string) {\n        super(elementRef);\n\n        elementRef.nativeElement.classList.add(iconName);\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McIcon,\n    McIconCSSStyler\n} from './icon.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McIcon,\n        McIconCSSStyler\n    ],\n    declarations: [\n        McIcon,\n        McIconCSSStyler\n    ]\n})\nexport class McIconModule {}\n"],"names":["class","type","McSidepanelRef","decorators","Optional","ElementRef","McSidepanelService","sidepanelResult","Input","args","mcSidepanelClose","McSidepanelClose","McSidepanelHeader","Component","selector","template","host","closeable","McSidepanelBody","Directive","McSidepanelFooter","McSidepanelActions","McSidepanelModule","NgModule","imports","CommonModule","OverlayModule","PortalModule","McCommonModule","McIconModule","providers","declarations","McSidepanelContainerComponent","entryComponents","exports","McSplitterComponent","elementRef","ngZone","renderer","this","areas","_disabled","_gutterSize","isDragging","areaPositionDivider","listeners","Object","defineProperty","prototype","_direction","direction","disabled","coerceBooleanProperty","gutterSize","size","coerceNumberProperty","addArea","area","index","length","order","getSize","setOrder","push","initialSize","ngOnInit","setStyle","isVertical","onMouseDown","event","leftAreaIndex","rightAreaIndex","_this","leftArea","rightArea","startPoint","x","screenX","y","screenY","forEach","item","disableFlex","setSize","runOutsideAngular","listen","onMouseUp","e","onMouseMove","removeArea","indexToRemove","some","splice","endPoint","offset","newLeftAreaSize","newRightAreaSize","minLeftAreaSize","getMinSize","minRightAreaSize","rightAreaOffset","unsubscribe","pop","property","value","nativeElement","preserveWhitespaces","styles","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","NgZone","Renderer2","McGutterDirective","_order","_size","getCursor","getState","coerceCssPixelValue","setAttr","state","Error","attribute","setAttribute","McSplitterAreaDirective","splitter","removeStyle","ngOnDestroy","sz","getSizeProperty","getOffsetSizeProperty","getComputedStyle","parseFloat","getMinSizeProperty","style","McSplitterModule","nextUniqueId","McToggleBase","_elementRef","_McToggleMixinBase","mixinTabIndex","mixinColor","mixinDisabled","ThemePalette","Primary","McToggleChange","McToggleComponent","_super","_focusMonitor","_changeDetectorRef","tabIndex","call","labelPosition","ariaLabel","ariaLabelledby","_uniqueId","id","name","_checked","change","EventEmitter","_onTouchedCallback","_onChangeCallback","_","parseInt","monitor","tslib_1.__extends","markForCheck","stopMonitoring","focus","focusVia","_inputElement","_getAriaChecked","checked","_onInteractionEvent","stopPropagation","_onLabelTextChange","_onInputClick","_updateModelValue","_emitChangeEvent","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","source","emit","exportAs","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","inputs","[id]","[attr.id]","[class.mc-disabled]","[class.mc-toggle_off]","animations","trigger","left","transition","animate","FocusMonitor","ChangeDetectorRef","String","Attribute","ViewChild","Output","McToggleModule","A11yModule","McTooltipComponent","cdr","prefix","positions","DEFAULT_4_POSITIONS","slice","classMap","mcVisibleChange","mcMouseEnterDelay","mcMouseLeaveDelay","_mcTrigger","_mcPlacement","_mcVisible","BehaviorSubject","onHideSubject","Subject","closeOnInteraction","availablePositions","POSITION_MAP","$visible","asObservable","_mcTitle","isTitleString","TemplateRef","unshift","mcPlacement","visible","next","show","hideTid","clearTimeout","isContentEmpty","mcTrigger","showTid","setTimeout","mcVisible","hide","setClassMap","mcTitle","afterHidden","handleBodyInteraction","outputs","fadeAnimation","(body:click)","MC_TOOLTIP_SCROLL_STRATEGY","InjectionToken","MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","Overlay","useFactory","mcTooltipScrollStrategyFactory","McTooltip","overlay","scrollDispatcher","hostView","scrollStrategy","isTooltipOpen","isDynamicTooltip","parentDisabled","$unsubscribe","manualListeners","Map","destroyed","title","updateCompValue","_mcMouseEnterDelay","_mcMouseLeaveDelay","_mcTooltipClass","tooltip","externalValue","createOverlay","overlayRef","strategy","position","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withPositions","scrollableAncestors","getAncestorScrollContainers","withScrollableContainers","positionChanges","pipe","takeUntil","subscribe","onPositionChange","scrollableViewProperties","isOverlayClipped","run","create","positionStrategy","panelClass","updatePosition","detachments","detach","hasAttached","$event","updatedPlacement","keys","key","connectionPair","originX","originY","overlayX","overlayY","handlePositioningUpdate","pos","overlayElement","clientHeight","element","currentContainer","top","split","initElementRefListeners","dispose","listener","removeEventListener","clear","complete","handleKeydown","keyCode","ESCAPE","handleTouchend","set","addEventListener","portal","ComponentPortal","attach","instance","distinctUntilChanged","data","getConfig","origin","getOrigin","getOverlayPosition","tslib_1.__assign","main","fallback","originPosition","isLtr","getMcTooltipInvalidPositionError","_a","invertPosition","overlayPosition","newX","newY","(keydown)","(touchend)","ScrollDispatcher","ViewContainerRef","undefined","Inject","Directionality","setTitle","mcTooltipClass","isOpen","HostBinding","isParentDisabled","McToolTipModule","VERSION","Version","SELECT_PANEL_PADDING_X","[attr.tabindex]","[class.mc-select-invalid]","[class.mc-select-required]","(focus)","(blur)","(window:resize)","mcSelectAnimations","transformPanel","fadeInContent","McFormFieldControl","McTreeSelect","CdkTree","ViewportRuler","ErrorStateMatcher","NgForm","FormGroupDirective","McFormField","NgControl","Self","MC_SELECT_SCROLL_STRATEGY","panel","overlayDir","CdkConnectedOverlay","tags","ViewChildren","McTag","customTrigger","ContentChild","McTreeSelectTrigger","tree","McTreeSelection","openedChange","openedStream","closedStream","selectionChange","valueChange","errorStateMatcher","sortComparator","placeholder","required","multiple","autoSelect","compareWith","McTreeSelectMixinBase","McTreeSelectModule","CdkTreeModule","McTreeModule","McTagModule","McPseudoCheckboxModule","MC_SELECT_SCROLL_STRATEGY_PROVIDER","MC_TEXTAREA_VALUE_ACCESSOR","McTextareaBase","defaultErrorStateMatcher","parentForm","parentFormGroup","ngControl","McTextareaMixinBase","mixinErrorState","McTextarea","inputValueAccessor","canGrow","focused","stateChanges","controlType","uid","_required","lineHeight","freeRowsHeight","minHeight","valueAccessor","previousNativeValue","growObserver","fromEvent","growSubscription","grow","bind","_id","paddingTop","paddingBottom","ngOnChanges","ngDoCheck","updateErrorState","dirtyCheckNativeValue","textarea","outerHeight","window","diff","height","Math","max","scrollHeight","focusChanged","isFocused","isBadInput","onContainerClick","newValue","validity","badInput","getGrowHeight","toString","[class.mc-textarea-resizable]","[attr.placeholder]","[attr.aria-invalid]","[disabled]","[required]","McTextareaModule","FormsModule","hours","minutes","seconds","HHmmss","HHmm","TIMEFORMAT_PLACEHOLDERS","TimeFormats","DEFAULT_TIME_FORMAT","HOURS_MINUTES_SECONDS_REGEXP","RegExp","HOURS_MINUTES_REGEXP","HOURS_ONLY_REGEXP","uniqueComponentIdSuffix","formValidators","WeakMap","formValidatorOnChangeRegistrators","validatorOnChange","c","validatorOnChangeHandler","get","McTimepickerBase","McTimepickerMixinBase","ɵ1","validate","__validatorOnChangeHandler","validator","registerOnValidatorChange","McTimepicker","_minTime","_maxTime","onChange","noop","Validators","compose","parseValidator","minTimeValidator","maxTimeValidator","applyInputChanges","_timeFormat","formatValue","map","timeFormatKey","indexOf","minValue","minDateTime","getDateFromTimeString","maxValue","maxDateTime","onTouched","onBlur","onPaste","preventDefault","clipboardUserInput","clipboardData","getData","onInput","initialCursorStart","selectionStart","initialCursorEnd","selectionEnd","isAutocompleteTriggered","getParsedTimeParts","hoursOnly","hoursAndMinutes","hoursAndMinutesAndSeconds","doTimestringReformat","errors","createSelectionOfTimeComponentInInput","setProperty","getTimeStringFromDate","timeFormat","onKeyDown","getKeyCode","upDownTimeByArrowKeys","switchSelectionBetweenTimeparts","applyParams","changedTime","timeToApply","currentDateTimeInput","updateValueAndValidity","result","cursorPos","modifiedTimePart","getTimeEditMetrics","incrementTime","decrementTime","getCursorPositionOfPrevTimePartStart","getCursorPositionOfNextTimePartStart","code","newEditParams","cursorStartPosition","cursorEndPosition","dateVal","whatToIncrement","TimeParts","getTimeDigitsFromDate","getDateFromTimeDigits","whatToDecrement","timeString","timeDevider","nextDividerPos","cursorPosition","minutesIndex","hoursIndex","secondsIndex","tempVal","getNumberWithLeadingZero","getHours","getMinutes","getSeconds","match","trim","Number","resultDate","Date","isNaN","getTime","digit","mcTimepickerParse","text","isTimeLowerThenMin","mcTimepickerLowerThenMintime","isTimeGreaterThenMax","mcTimepickerHigherThenMaxtime","timeToCompare","[attr.time-format]","[attr.min-time]","[attr.max-time]","[attr.value]","(input)","(paste)","NG_VALIDATORS","useValue","MC_INPUT_VALUE_ACCESSOR","minTime","maxTime","McTimepickerModule","PlatformModule","MC_SIDEPANEL_DATA","Right","Left","Top","Bottom","McSidepanelConfig","McSidepanelPosition","hasBackdrop","requiredBackdrop","disableClose","overlayPanelClass","Void","Visible","Hidden","mcSidepanelTransformAnimation","right","in","out","bottom","mcSidepanelAnimations","sidepanelState","transform","params","transformIn","transformOut","AnimationCurves","AccelerationCurve","DecelerationCurve","MC_SIDEPANEL_WITH_INDENT","MC_SIDEPANEL_WITH_SHADOW","changeDetectorRef","sidepanelConfig","withIndent","withShadow","animationState","McSidepanelAnimationState","animationStateChanged","attachComponentPortal","validatePortalAttached","setAnimation","setPanelClass","portalOutlet","attachTemplatePortal","enter","detectChanges","exit","onAnimation","animationTransform","classList","add","tabindex","role","aria-modal","[@state]","(@state.start)","(@state.done)","Boolean","CdkPortalOutlet","BasePortalOutlet","uniqueId","containerInstance","config","afterClosed$","afterOpened$","filter","phaseName","toState","take","merge","backdropClick","keydownEvents","close","closed","detachBackdrop","afterClosed","afterOpened","MC_SIDEPANEL_DEFAULT_OPTIONS","injector","defaultOptions","parentSidepanelService","openedSidepanelsAtThisLevel","openedSidepanels","closeSidepanels","open","componentOrTemplateRef","fullConfig","getSidepanelById","container","attachContainer","ref","TemplatePortal","$implicit","sidepanelRef","createInjector","contentRef","removeOpenSidepanel","closeAll","find","sidepanel","openedSidepanelsWithSamePosition","getOpenedSidepanelsWithSamePosition","PortalInjector","containerPortal","sidepanelContainer","injectionTokens","overlayConfig","OverlayConfig","backdropClass","getBackdropClass","maxWidth","scrollStrategies","block","global","sidepanels","reverse","hasOpenedSidepanelWithBackdrop","Injectable","Injector","SkipSelf","sidepanelService","getClosestSidepanel","changes","proxiedChange","currentValue","(click)","ENTER","SPACE","manager","activeItem","_multiple","A","ctrlKey","hasDeselectedOptions_1","options","option","selected","select","deselect","previouslyFocusedIndex","activeItemIndex","onKeydown","isArrowKey","shiftKey","selectViaInteraction","McSelect","initializeSelection","Promise","resolve","then","setSelectionByValue","_value","Array","isArray","getMcSelectNonArrayValueError","selectionModel","selectValue","sortValues","correspondingOption","keyManager","setActiveItem","_compareWith","error","isDevMode","console","warn","initKeyManager","ActiveDescendantKeyManager","withTypeAhead","withVerticalOrientation","withHorizontalOrientation","isRtl","tabOut","destroy","_panelOpen","scrollActiveOptionIntoView","resetOptions","changedOrDestroyed","optionSelectionChanges","onSelect","isUserInput","apply","setOptionIds","wasSelected","isSelected","propagateChanges","options_1","toArray","sort","a","b","fallbackValue","valueToEmit","_onChange","McSelectChange","optionIds","join","highlightCorrectOption","empty","setFirstItemActive","activeOptionIndex","labelCount","countGroupLabelsBeforeOption","optionGroups","scrollTop","getOptionScrollPosition","getItemHeight","getOptionIndex","reduce","current","calculateOverlayPosition","itemHeight","items","getItemCount","panelHeight","min","scrollContainerHeight","maxScroll","selectedOptionOffset","scrollBuffer","calculateOverlayScroll","offsetY","calculateOverlayOffsetY","checkOverlayWithinViewport","calculateOverlayOffsetX","offsetX","overlayRect","getBoundingClientRect","viewportSize","_viewportRuler","getViewportSize","first","group","leftOverflow","rightOverflow","width","round","topSpaceAvailable","triggerRect","bottomSpaceAvailable","panelHeightTop","abs","totalPanelHeight","panelHeightBottom","adjustPanelUp","adjustPanelDown","transformOrigin","getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","optionHeightAdjustment","MC_OPTION_PARENT_COMPONENT","McSelectTrigger","ContentChildren","McOption","descendants","McOptgroup","McSelectMixinBase","McSelectModule","McOptionModule","McFormFieldModule","McTreeSelectChange","McTreeSelectBase","viewportRuler","dir","parentFormField","scrollStrategyFactory","hiddenItems","oneMoreText","triggerFontSize","panelDoneAnimating","panelDoneAnimatingStream","o","defer","onSelectionChange","onStable","switchMap","_autoSelect","_focused","o1","o2","_placeholder","getMcSelectDynamicMultipleError","getMcSelectNonFunctionValueError","panelOpen","ngAfterContentInit","SelectionModel","changed","added","removed","ngAfterViewInit","calculateHiddenItems","startWith","updateSelectedOptions","toggle","fontSize","viewValue","selectedOptions","isEmpty","handleOpenKeydown","handleClosedKeydown","onFadeInDone","onFocus","onAttached","positionChange","getPanelTheme","color","selectedIndex","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","onRemoveSelectedOption","selectedOption","visibleItems","totalItemsWidth","getTotalItemsWidthInMatcher","totalVisibleItemsWidth","tag","offsetTop","offsetHeight","itemsCounter","querySelector","matcherList","itemsCounterShowed","matcherListWidth","matcherWidth","triggerClone","cloneNode","remove","appendChild","querySelectorAll","DOWN_ARROW","UP_ARROW","LEFT_ARROW","RIGHT_ARROW","altKey","originalOnKeyDown","HOME","END","setLastItemActive","McTabHeader","isValidIndex","labelWrappers","tab","setTabFocus","showPaginationControls","scrollToLabel","containerEl","tabListContainer","getLayoutDirection","scrollLeft","scrollWidth","offsetWidth","updateTabScrollPosition","scrollDistance","translateX","tabList","scrollHeader","scrollDir","viewLength","labelIndex","selectedLabel","labelBeforePos","labelAfterPos","getOffsetLeft","getOffsetWidth","beforeVisiblePos","afterVisiblePos","checkPaginationEnabled","isEnabled","checkScrollingControls","disableScrollBefore","disableScrollAfter","getMaxScrollDistance","[class.mc-tab-header__pagination-controls_enabled]","[class.mc-tab-header_rtl]","McTabLabelWrapper","selectFocusedIndex","indexFocused","McTabHeaderBase","McLightTabsCssStyler","McAlignTabsCenterCssStyler","McAlignTabsEndCssStyler","McStretchTabsCssStyler","nextId","McTabChangeEvent","MC_TABS_CONFIG","McTabGroupBase","mcTabGroupMixinBase","McTabGroup","lightTabs","defaultConfig","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","indexToSelect","tabBodyWrapperHeight","tabsSubscription","Subscription","EMPTY","tabLabelSubscription","_dynamicHeight","_selectedIndex","lightTab","groupId","animationDuration","ngAfterContentChecked","clampTabIndex","isFirstRun_1","createChangeEvent","tabs","isActive","subscribeToTabLabels","i","getTabLabelId","getTabContentId","setTabBodyWrapperHeight","tabHeight","wrapper","tabBodyWrapper","removeTabBodyWrapperHeight","handleClick","tabHeader","focusIndex","getTabIndex","[class.mc-tab-group_dynamic-height]","[class.mc-tab-group_inverted-header]","dynamicHeight","McTab","McTabNavBase","mcTabNavMixinBase","McTabNav","McTabLinkBase","mcTabLinkMixinBase","McTabLink","focusMonitor","[attr.aria-current]","[attr.aria-disabled]","[attr.tabIndex]","[class.mc-active]","active","McTabsModule","McTabLabel","McTabContent","McTabBody","McTabBodyPortal","McTagBase","_McTagMixinBase","_addClassModificatorForIcons","icons","contentChildren","iconElement","previousElementSibling","nextElementSibling","nextSibling","previousSibling","firstIconElement","secondIconElement","McIcon","McSelectBase","_ngZone","_renderer","_dir","_parentFormField","_scrollStrategyFactory","_onTouched","onRemoveMatcherItem","McProgressSpinner","McProgressSpinnerModule","McRadioChange","McRadioGroupBase","_McRadioGroupMixinBase","MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","McRadioGroup","_changeDetector","_name","_selected","_isInitialized","_labelPosition","controlValueAccessorChangeFn","updateRadioButtonNames","v","markRadiosForCheck","updateSelectedRadioFromValue","checkSelectedRadioButton","toBoolean","touch","emitChangeEvent","_radios","radio","isAlreadySelected","McRadioButton","McRadioButtonBase","_McRadioButtonMixinBase","radioGroup","_radioDispatcher","removeUniqueSelectionListener","newCheckedState","notify","newDisabledState","onInputClick","onInputChange","groupValueChanged","[class.mc-checked]","UniqueSelectionDispatcher","ariaDescribedby","McRadioModule","McTreeNodeDef","CdkTreeNodeDef","McTreeNodePadding","arguments","baseLeftPadding","_indent","iconWidth","withIcon","paddingIndent","nodeLevel","treeNode","treeControl","getLevel","level","leftPadding","isExpandable","setPadding","CdkTreeNodePadding","indent","McTreeNodeToggle","CdkTreeNodeToggle","MC_TREE_OPTION_PARENT_COMPONENT","McTreeOptionChange","uniqueIdCounter","McTreeOption","parent","_active","setSelected","setActiveStyles","setInactiveStyles","getHeight","clientRects","getClientRects","getHostElement","textContent","emitSelectionChangeEvent","setFocusedOption","[attr.disabled]","[class.mc-selected]","CdkTreeNode","McTreeNavigationChange","McTreeSelectionChange","McTreeSelectionBase","differs","McTreeSelectionBaseMixin","noUnselect","navigationChange","rawValue","log","withShift","withCtrl","collapse","expand","toggleFocusedOption","PAGE_UP","setPreviousPageItemActive","PAGE_DOWN","setNextPageItemActive","updateScrollSize","withScrollSize","floor","previousIndex_1","previousActiveItemIndex","activeIndex_1","canDeselectLast","emitNavigationEvent","focusedIndex","focusedOption","renderNodeChanges","dataDiffer","viewContainer","parentData","nodeOutlet","arrayOfInstances","_embeddedViews","view","viewDef","def","nodes","node","nodeMatchedQueries","matchedQueryIds","nodeData","nodeIndex","reset","notifyOnChanges","IterableDiffers","CdkTreeNodeOutlet","MC_TREE_DIRECTIVES","McTreeFlattener","transformFunction","getChildren","flattenNode","resultNodes","parentMap","flatNode","children","child","childParentMap","flattenNodes","structuredData","expandFlattenedNodes","results","currentExpand","isExpanded","McTreeFlatDataSource","treeFlattener","initialData","flattenedData","expandedData","_data","dataNodes","connect","collectionViewer","viewChange","expansionModel","disconnect","DataSource","McTreeNestedDataSource","CdkPortal","ctorParameters","McTabBase","mcTabMixinBase","viewContainerRef","textLabel","contentPortal","hasOwnProperty","explicitContent","implicitContent","templateLabel","read","mcTabsAnimations","translateTab","onCentering","beforeCentering","afterLeavingCenter","onCentered","dirChangeSubscription","computePositionAnimationState","positionIndex","bodyPosition","computePositionFromOrigin","onTranslateTabStarted","isCentering","isCenterPosition","onTranslateTabComplete","fromState","portalHost","PortalHostDirective","content","componentFactoryResolver","centeringSub","leavingSub","ComponentFactoryResolver","McTabLabelWrapperBase","mcTabLabelWrapperMixinBase","offsetLeft","_scrollDistance","selectedIndexChanged","coercedValue","updateActiveItem","scrollDistanceChanged","tabLabelCount","updatePagination","dirChange","observableOf","resize","realign","FocusKeyManager","withWrap","requestAnimationFrame","newFocusIndex","onContentChanges","currentTextContent","zoneCallback","mcGetContainer","HTMLElement","OverlayRef","modalControl","registerModal","McModalComponent","handleVisibleStateChange","firstChange","contentComponentRef","bodyContainer","insert","autoFocusButtonOk","changeVisibleFromInside","triggerOk","onClickOkCancel","triggerCancel","getInstance","getContentComponentRef","getContentComponent","getElement","onClickMask","mcMask","mcMaskClosable","contains","isModalType","mcModalType","onClickCloseBtn","ok","mcOnOk","cancel","mcOnCancel","loadingKey","caseClose_1","doClose","isPromise","handleThen","catch","isNonEmptyString","isTemplateRef","isComponent","Type","isModalButtons","animation","closeResult","changeBodyOverflow","animateTo","mcAfterOpen","mcAfterClose","getButtonCallableProp","prop","onButtonClick","button","loading","changeAnimationState","maskAnimationClassMap","modalAnimationClassMap","_b","changeDetector","isVisible","updateTransformOrigin","formatModalButtons","buttons","autoLoading","createDynamicComponent","component","factory","cfr","resolveComponentFactory","childInjector","McModalRef","parentInjector","mcComponentParams","assign","modalElement","modalContainer","lastPosition","ModalUtil","getLastClickPosition","plusNum","openModals","document","body","mcMeasureScrollbarService","scrollBarWidth","McMeasureScrollbarService","McModalControlService","DOCUMENT","mcContent","mcFooter","mcZIndex","mcWidth","mcWrapClassName","mcClassName","mcStyle","mcCloseByESC","mcClosable","mcMaskStyle","mcBodyStyle","mcOkText","mcOkType","mcOkLoading","mcCancelText","mcCancelLoading","CssUnitPipe","defaultUnit","formatted","Pipe","ModalBuilderForService","createModal","changeProps","destroyModal","modalRef","McModalService","afterAllClose","confirm","confirmType","success","simpleConfirm","delete","McModalModule","McButtonModule","MC_NAVBAR_CONTAINER","MC_NAVBAR_ITEM","MC_NAVBAR_BRAND","MC_NAVBAR_TITLE","McNavbarLogo","McNavbarBrand","McNavbarTitle","McNavbarItemBase","_McNavbarMixinBase","McNavbarItem","_platform","_cdRef","dropdownItems","isCollapsed","_subscription","encodeURI","dropdownContent","denyClickIfDisabled","_focusMonitor$","hasDropdownContent","listenClickOutside","startListenFocusDropdownItems","stopListenFocusDropdownItems","isActiveDropdownLink","link","isBrowser","location","href","handleClickByItem","toggleDropdown","isNavbarItem","handleClickByDropdownItem","forceCloseDropdown","_dropdownElements","el","events","eventListeners","hasAttribute","stopImmediatePropagation","Platform","collapsedTitle","dropdownItemTmpl","McNavbarContainer","cssClasses","CollapsibleItem","_collapsed","processCollapsed","collapsed","updateCollapsedClass","CachedItemWidth","itemsForCollapse","_collapsedItemsWidth","calculateAndCacheCollapsedItemsWidth","updateTitle","acc","getTitle","computedTitle","getAttribute","decodeURI","innerText","removeAttribute","McNavbar","forceRecalculateItemsWidth","resizeDebounceInterval","firstLevelElement","secondLevelElements","resizeObserver","debounceTime","_resizeSubscription","updateCollapsed","_itemsWidths","calculateAndCacheItemsWidth","_totalItemsWidths","calculateAndCacheTotalItemsWidth","collapseDelta","maxAllowedWidth","itemsWidths","canCollapse","collapsedItemsWidth","getOuterElementWidth","getPropertyValue","allItemsSelector","allItems","from","getItemsForCollapse","McNavbarModule","idIterator","McProgressBarBase","_McProgressBarMixinBase","McProgressBar","mode","McProgressBarModule","McProgressSpinnerBase","_McProgressSpinnerMixinBase","percentage","McDropdownTrigger","dropdown","_check","_destroy","_overlayRef","_cleanUpSubscriptions","_opened","_createOverlay","_setPosition","_portal","lazyContent","_closeSubscription","_closingActions","_init","McDropdown","_startAnimation","_element","opened","_resetAnimation","_animationDone","_attached","_reset","_setIsOpened","focusFirstItem","_openedBy","dropdownOpened","dropdownClosed","throwMcDropdownMissingError","templateRef","_viewContainerRef","_getOverlayConfig","_subscribeToPositions","_overlay","withLockedPosition","_scrollStrategy","setPositionClasses","xPosition","yPosition","originFallbackX","overlayFallbackY","_c","originFallbackY","_d","overlayFallbackX","overlapTrigger","_hoverSubscription","backdrop","(touchstart)","MC_DROPDOWN_SCROLL_STRATEGY","McDropdownModule","McDropdownItem","McDropdownContent","MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER","McContentComponent","[class.mc-layout-content]","McFooterComponent","[class.mc-layout-footer]","McHeaderComponent","[class.mc-layout-header]","McLayoutComponent","hasSidebar","[class.mc-layout]","[class.mc-layout-has-sidebar]","McSidebarComponent","mcLayoutComponent","_mcWidth","mcCollapsedWidth","mcCollapsedChange","collapsible","mcCollapsed","[class.mc-layout-sidebar]","[class.mc-layout-sidebar-collapsed]","[style.flex]","[style.max-width.px]","[style.min-width.px]","[style.width.px]","Host","mcCollapsible","McLayoutModule","McListOption","listSelection","_hasFocus","checkboxPosition","_reportValueChange","wasSelected_1","_lineSetter","McLineSetter","_lines","_removeOptionFromList","getLabel","_text","_getHeight","_handleClick","_handleFocus","_handleBlur","_getHostElement","[class.mc-focused]","McListSelection","McLine","MC_SELECTION_LIST_VALUE_ACCESSOR","McListSelectionChange","McListSelectionBase","_McListSelectionMixinBase","horizontal","_modelChanges","_keyManager","_tempValues","_setOptionsFromValues","_i","selectAll","deselectAll","_canDeselectLast","values","getSelectedOptionValues","_isValidIndex","listOption","optionIndex","_getOptionIndex","setPreviousItemActive","setNextItemActive","_onKeyDown","_getOptionByValue","[tabIndex]","McListBase","McList","McListSubheaderCssStyler","McListItemBase","McListItem","McListModule","McLineModule","McLinkBase","_McLinkBase","McLink","McLinkModule","parentService","rootOpenModals","rootAfterAllClose","rootRegisteredMetaMap","registeredMetaMap","hasRegistered","afterOpenSubscription","afterOpen","afterCloseSubscription","afterClose","removeOpenModal","has","listenDocumentClick","clientX","clientY","ModalUtil$1","_mcClosable","_mcMask","_mcMaskClosable","_mcOkLoading","_mcCancelLoading","McDatepickerIntl","DateAdapter","MC_DATE_FORMATS","startAt","minDate","maxDate","headerComponent","startView","dateFilter","dateClass","selectedChange","yearSelected","monthSelected","userSelection","monthView","McMonthView","yearView","McYearView","multiYearView","McMultiYearView","McCalendar","mcDatepickerAnimations","opacity","fadeInCalendar","Element","matches","msMatchesSelector","datepickerUid","MC_DATEPICKER_SCROLL_STRATEGY","MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER","MC_DATEPICKER_SCROLL_STRATEGY_FACTORY","McDatepickerContentBase","McDatepickerContentMixinBase","McDatepickerContent","calendar","focusActiveCell","[@transformPanel]","McDatepicker","dateAdapter","disabledChange","selectedChanged","validSelected","focusedElementBeforeOpen","inputSubscription","createMissingDateImplError","_startAt","datepickerInput","getValidDateOrNull","deserialize","_color","getThemePalette","popupRef","popupComponentRef","date","oldValue","sameDate","selectYear","normalizedYear","selectMonth","normalizedMonth","registerInput","input","activeElement","openAsPopup","calendarPortal","isAttached","completeClose","createPopup","datepicker","setColor","createPopupPositionStrategy","obj","isDateInstance","isValid","calendarHeaderComponent","MC_DATEPICKER_VALUE_ACCESSOR","McDatepickerInput","MC_DATEPICKER_VALIDATORS","McDatepickerInputEvent","target","targetElement","dateFormats","formField","dateChange","dateInput","datepickerSubscription","localeSubscription","lastValueValid","cvaOnChange","mcDatepickerParse","minValidator","control","controlValue","compareDate","mcDatepickerMin","actual","maxValidator","mcDatepickerMax","filterValidator","mcDatepickerFilter","localeChanges","oldDate","_min","_max","blur","isAltDownArrow","readOnly","parse","format","display","[attr.aria-haspopup]","[attr.aria-owns]","[attr.min]","[attr.max]","(change)","mcDatepicker","McDatepickerToggleIcon","McDatepickerToggle","intl","defaultTabIndex","parsedTabIndex","watchStateChanges","datepickerDisabled","inputDisabled","datepickerToggled","[class.mc-datepicker-toggle_active]","[class.mc-warn]","customIcon","McDatepickerModule","McCalendarBody","McCalendarHeader","McDivider","_vertical","_inset","[attr.aria-orientation]","[class.mc-divider-vertical]","[class.mc-divider-inset]","vertical","inset","McDividerModule","_template","_componentFactoryResolver","_appRef","_injector","_document","context","_outlet","DomPortalOutlet","createElement","insertBefore","outletElement","ApplicationRef","MC_DROPDOWN_PANEL","McDropdownItemBase","_McDropdownItemMixinBase","_parentDropdownPanel","addItem","removeItem","_getTabIndex","_checkDisabled","textNodeType","TEXT_NODE","output","childNodes","length_1","nodeType","mcDropdownAnimations","transformDropdown","query","fadeInItems","MC_DROPDOWN_DEFAULT_OPTIONS","providedIn","MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY","_defaultOptions","_classList","_panelAnimationState","_xPosition","_yPosition","_items","_itemChanges","_tabSubscription","_overlapTrigger","_hasBackdrop","throwMcDropdownInvalidPositionX","throwMcDropdownInvalidPositionY","classes","className","_handleKeydown","setFocusOrigin","resetActiveItem","posX","posY","_onAnimationDone","_isAnimating","MC_DROPDOWN_SCROLL_STRATEGY_FACTORY","MAX_VALIDATOR","MaxValidator","McInputModule","McInput","McNumberInput","McInputMono","MinValidator","calendarLabel","openCalendarLabel","prevMonthLabel","nextMonthLabel","prevYearLabel","nextYearLabel","prevMultiYearLabel","nextMultiYearLabel","switchToMonthViewLabel","switchToMultiYearViewLabel","McCalendarCell","displayValue","enabled","numCols","activeCell","cellAspectRatio","selectedValueChange","cellClicked","cell","columnChanges","rows","firstRowOffset","cellPadding","cellWidth","isActiveCell","rowIndex","colIndex","cellNumber","aria-readonly","label","todayValue","selectedValue","labelMinRequiredCells","activeDateChange","firstDayOfWeek","getFirstDayOfWeek","narrowWeekdays","getDayOfWeekNames","longWeekdays","weekdays","long","narrow","concat","_activeDate","today","oldActiveDate","validDate","clampDate","hasSameMonthAndYear","init","selectedDate","getDateInCurrentMonth","_minDate","_maxDate","dateSelected","selectedYear","getYear","activeDate","selectedMonth","getMonth","createDate","handleCalendarBodyKeydown","addCalendarDays","getDate","getNumDaysInMonth","addCalendarYears","addCalendarMonths","todayDate","monthLabel","getMonthNames","toLocaleUpperCase","substr","firstOfMonth","firstWeekOffset","getDayOfWeek","createWeekCells","mcCalendarBody","daysInMonth","dateNames","getDateNames","weeks","shouldEnableDate","dateA11yLabel","cellClasses","d1","d2","todayYear","activeYear","activeOffset","years","row","year","createCellForYear","onYearSelected","month","yearsPerPage","getActiveCell","yearName","getYearName","shouldEnableYear","firstOfYear","getMonthInCurrentYear","onMonthSelected","normalizedDate","todayMonth","yearLabel","monthNames","months","createCellForMonth","monthName","monthYearA11yLabel","newMonthName","shouldEnableMonth","isYearAndMonthAfterMaxDate","isYearAndMonthBeforeMinDate","maxYear","maxMonth","minYear","minMonth","currentView","monthYearLabel","multi-year","currentPeriodClicked","previousClicked","nextClicked","previousEnabled","isSameView","nextEnabled","date1","date2","moveFocusOnNextTick","intlChanges","clampedActiveDate","_currentView","calendarHeaderPortal","ngAfterViewChecked","getCurrentViewComponent","updateTodaysDate","yearSelectedInMultiYearView","monthSelectedInYearView","userSelected","goToDateInView","McIconButton","McButton","McAnchor","McButtonCSSStyler","McIconButtonCSSStyler","McCard","readonly","_tabIndex","hostElement","onClick","[class.mc-card_readonly]","[class.mc-card_selected]","McCardModule","MC_CHECKBOX_CLICK_ACTION","MC_CHECKBOX_CONTROL_VALUE_ACCESSOR","McCheckbox","Init","Checked","Unchecked","Indeterminate","McCheckboxChange","McCheckboxBase","_McCheckboxMixinBase","_clickAction","indeterminateChange","_currentAnimationClass","_currentCheckState","TransitionCheckState","_controlValueAccessorChangeFn","_indeterminate","focusOrigin","_onInputFocusChange","_transitionCheckState","indeterminate","newState","oldState","[class.mc-indeterminate]","[class.mc-checkbox-label-before]","MC_CHECKBOX_REQUIRED_VALIDATOR","McCheckboxRequiredValidator","[attr.required]","CheckboxRequiredValidator","McCheckboxModule","McCleaner","McFormFieldNumberControl","McHint","McPrefix","McStepper","stepUp","stepDown","onStepUp","onStepDown","McSuffix","McFormFieldBase","_McFormFieldMixinBase","_labelId","hovered","_validateControlChild","_control","_numberControl","hasStepper","_stepper","valueChanges","clearValue","hasCleaner","onHoverChanged","isHovered","step","_shouldForward","getMcFormFieldMissingControlError","_hint","_suffix","_prefix","_cleaner","[class.mc-form-field_invalid]","[class.mc-form-field_has-prefix]","[class.mc-form-field_has-suffix]","[class.mc-form-field_has-cleaner]","[class.mc-form-field_has-stepper]","[class.ng-untouched]","[class.ng-touched]","[class.ng-pristine]","[class.ng-dirty]","[class.ng-valid]","[class.ng-invalid]","[class.ng-pending]","(mouseenter)","(mouseleave)","McFormFieldWithoutBorders","res","MC_INPUT_INVALID_TYPES","BIG_STEP","SMALL_STEP","McInputBase","_McInputMixinBase","_model","bigStep","isDigit","Infinity","_host","self","getPrototypeOf","normalizeSplitter","_focusChanged","minuses","NUMPAD_MINUS","DASH","FF_MINUS","serviceKeys","DELETE","BACKSPACE","TAB","arrows","allowedKeys","isIEPeriod","isNotIEPeriod","metaKey","C","V","X","F1","F12","EDGE","TRIDENT","ZERO","NINE","NUMPAD_ZERO","NUMPAD_NINE","valueAsNumber","update","replace","isFloat","isInt","test","NgModel","_uid","_type","_neverEmptyInputTypes","t","getSupportedInputTypes","_inputValueAccessor","_previousNativeValue","_validateType","_dirtyCheckNativeValue","_onInput","_isNeverEmpty","_isBadInput","getMcInputUnsupportedTypeError","MIN_VALIDATOR","_createValidator","_validator","__extends","d","__","constructor","extendStatics","isBoolean","val","MC_SANITY_CHECKS_FACTORY","base","class_1","defaultColor","Default","colorPalette","errorState","matcher","isErrorState","optionsArray","groups","groupCounter","optionHeight","currentScrollPosition","optionOffset","arrayMap","array","iteratee","baseValues","object","props","mcSelectScrollStrategyProviderFactory","reposition","inputType","sanitizeNumber","isFinite","getPrecision","arr","pow","value1","value2","precision","provider","openSidepanels","parentElement","scrollThrottle","setPrototypeOf","__proto__","p","__assign","s","n","MC_SANITY_CHECKS","_sanityChecksEnabled","_hasDoneGlobalChecks","_window","_areChecksEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","_isTestEnv","doctype","testElement","computedStyle","removeChild","BidiModule","Second","Empty","_setLineClass","count","_resetClasses","_setClass","isAdd","ShowOnDirtyErrorStateMatcher","form","invalid","dirty","submitted","touched","McPseudoCheckbox","scrollbarMeasure","overflow","initScrollBarWidth","_scrollbarWidth","scrollDiv","scrollProp","clientWidth","McOptgroupBase","McOptgroupMixinBase","uniqueOptgroupIdCounter","labelId","[class.mc-optgroup-disabled]","[attr.aria-labelledby]","McOptionSelectionChange","mostRecentViewValue","[class.mc-option-multiple]","MC_LABEL_GLOBAL_OPTIONS","StandardCurve","SharpCurve","topCenter","topLeft","topRight","rightTop","rightBottom","bottomCenter","bottomLeft","bottomRight","leftTop","leftBottom","minWidth","animateChild","McIconCSSStyler","McIconBase","_McIconMixinBase","iconName","queries","McButtonBase","_McButtonMixinBase","_haltDisabledEvents"],"mappings":"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"}