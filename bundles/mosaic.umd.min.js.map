{"version":3,"file":"mosaic.umd.min.js","sources":["../../src/lib/radio/radio.component.ts","../../src/lib/radio/radio.module.ts","../../src/lib/list/list-selection.component.ts","../../src/lib/list/list.component.ts","../../src/lib/list/list.module.ts","../../src/lib/version.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/utils/utils.ts","../../src/lib/core/common-behaviors/common-module.ts","../../src/lib/core/common-behaviors/disabled.ts","../../src/lib/core/common-behaviors/color.ts","../../src/lib/core/common-behaviors/tabindex.ts","../../src/lib/core/line/line.ts","../../src/lib/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../src/lib/core/selection/index.ts","../../src/lib/icon/icon.component.ts","../../src/lib/icon/icon.module.ts","../../src/lib/button/button.component.ts","../../src/lib/button/button.module.ts","../../src/lib/divider/divider.component.ts","../../src/lib/divider/divider.module.ts"],"sourcesContent":["import {\n    AfterContentInit, AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, Directive, ElementRef, EventEmitter, forwardRef,\n    Input, OnDestroy, OnInit, Optional, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {UniqueSelectionDispatcher} from '@ptsecurity/cdk/collections';\n\nimport {\n    CanColor,\n    CanDisable,\n    HasTabIndex,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n\n/** Change event object emitted by McRadio. */\nexport class McRadioChange {\n    constructor(\n        /** The McRadioButton that emits the change event. */\n        public source: McRadioButton,\n        /** The value of the McRadioButton. */\n        public value: any) {}\n}\n\n// Boilerplate for applying mixins to McRadioGroup.\n/** @docs-private */\nexport class McRadioGroupBase { }\nexport const _McRadioGroupMixinBase = mixinDisabled(McRadioGroupBase);\n\n/**\n * Provider Expression that allows mc-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nexport const MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McRadioGroup),\n    multi: true\n};\n\n@Directive({\n    selector: 'mc-radio-group',\n    exportAs: 'mcRadioGroup',\n    providers: [MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n    host: {\n        'role': 'radiogroup',\n        'class': 'mc-radio-group'\n    },\n    inputs: ['disabled']\n})\nexport class McRadioGroup extends _McRadioGroupMixinBase\n    implements AfterContentInit, ControlValueAccessor, CanDisable {\n\n    /**\n     * Event emitted when the group value changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * a radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** Child radio buttons. */\n    @ContentChildren(forwardRef(() => McRadioButton), { descendants: true })\n    _radios: QueryList<McRadioButton>;\n\n    /**\n     * Selected value for group. Should equal the value of the selected radio button if there *is*\n     * a corresponding radio button with a matching value. If there is *not* such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    private _value: any = null;\n\n    /** The HTML name attribute applied to radio buttons in this group. */\n    private _name: string = `mc-radio-group-${nextUniqueId++}`;\n\n    /** The currently selected radio button. Should match value. */\n    private _selected: McRadioButton | null = null;\n\n    /** Whether the `value` has been set to its initial value. */\n    private _isInitialized: boolean = false;\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    private _labelPosition: 'before' | 'after' = 'after';\n\n    /** Whether the radio group is disabled. */\n    private _disabled: boolean = false;\n\n    /** Whether the radio group is required. */\n    private _required: boolean = false;\n\n    /** The method to be called in order to update ngModel */\n    controlValueAccessorChangeFn: (value: any) => void = () => {};\n\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * @docs-private\n     */\n    onTouched: () => any = () => {};\n\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    @Input()\n    get name(): string { return this._name; }\n    set name(value: string) {\n        this._name = value;\n        this.updateRadioButtonNames();\n    }\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this.markRadiosForCheck();\n    }\n\n    /** Value of the radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(newValue: any) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n\n            this.updateSelectedRadioFromValue();\n            this.checkSelectedRadioButton();\n        }\n    }\n\n    checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n\n    /** Whether the radio button is selected. */\n    @Input()\n    get selected() { return this._selected; }\n    set selected(selected: McRadioButton | null) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this.checkSelectedRadioButton();\n    }\n\n    /** Whether the radio group is disabled */\n    @Input()\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /** Whether the radio group is required */\n    @Input()\n    get required(): boolean { return this._required; }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    constructor(private _changeDetector: ChangeDetectorRef) {\n        super();\n    }\n\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on McRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the McRadioGroup.\n        this._isInitialized = true;\n    }\n\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n\n    /** Dispatch change event with current selection and group value. */\n    emitChangeEvent(): void {\n        if (this._isInitialized) {\n            this.change.emit(new McRadioChange(this._selected!, this._value));\n        }\n    }\n\n    markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach((radio) => radio.markForCheck());\n        }\n    }\n\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value\n     */\n    writeValue(value: any) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn: (value: any) => void) {\n        this.controlValueAccessorChangeFn = fn;\n    }\n\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n\n    private updateRadioButtonNames(): void {\n        if (this._radios) {\n            this._radios.forEach((radio) => {\n                radio.name = this.name;\n            });\n        }\n    }\n\n    /** Updates the `selected` radio button from the internal _value state. */\n    private updateSelectedRadioFromValue(): void {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected != null && this._selected.value === this._value;\n\n        if (this._radios != null && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach((radio) => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n}\n\n\n// Boilerplate for applying mixins to McRadioButton.\n/** @docs-private */\nexport class McRadioButtonBase {\n    // Since the disabled property is manually defined for the McRadioButton and isn't set up in\n    // the mixin base class. To be able to use the tabindex mixin, a disabled property must be\n    // defined to properly work.\n    disabled: boolean;\n\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McRadioButtonMixinBase =\n    mixinColor(mixinTabIndex(McRadioButtonBase));\n\n\n@Component({\n    selector: 'mc-radio-button',\n    templateUrl: 'radio.component.html',\n    styleUrls: ['radio.css'],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    exportAs: 'mcRadioButton',\n    host: {\n        'class': 'mc-radio-button',\n        '[attr.id]': 'id',\n        '[class.mc-radio-checked]': 'checked',\n        '[class.mc-radio-disabled]': 'disabled',\n        '(focus)': '_inputElement.nativeElement.focus()'\n    }\n})\nexport class McRadioButton extends _McRadioButtonMixinBase\n    implements OnInit, AfterViewInit, OnDestroy, CanColor, HasTabIndex {\n\n    private _uniqueId: string = `mc-radio-${++nextUniqueId}`;\n\n    /* tslint:disable:member-ordering */\n\n    /** The unique ID for the radio button. */\n    @Input() id: string = this._uniqueId;\n\n    /** Analog to HTML 'name' attribute used to group radios for unique selection. */\n    @Input() name: string;\n\n    /** Used to set the 'aria-label' attribute on the underlying input element. */\n    @Input('aria-label') ariaLabel: string;\n\n    /** The 'aria-labelledby' attribute takes precedence as the element's text alternative. */\n    @Input('aria-labelledby') ariaLabelledby: string;\n\n    /** The 'aria-describedby' attribute is read after the element's label and field type. */\n    @Input('aria-describedby') ariaDescribedby: string;\n\n    /** Whether this radio button is checked. */\n    @Input()\n    get checked(): boolean { return this._checked; }\n    set checked(value: boolean) {\n        const newCheckedState = toBoolean(value);\n\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            } else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** The value of this radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(value: any) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup != null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n\n    /** Whether the radio button is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled || (this.radioGroup != null && this.radioGroup.disabled);\n    }\n    set disabled(value: boolean) {\n        const newDisabledState = toBoolean(value);\n\n        if (this._disabled !== newDisabledState) {\n\n            this._disabled = newDisabledState;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** Whether the radio button is required. */\n    @Input()\n    get required(): boolean {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    private _labelPosition: 'before' | 'after';\n\n    /** The native `<input type=radio>` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Event emitted when the checked state of this radio button changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * the radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** The parent radio group. May or may not be present. */\n    radioGroup: McRadioGroup;\n\n    @Input()\n    isFocused: boolean = false;\n\n    /** ID of the native input element inside `<mc-radio-button>` */\n    get inputId(): string { return `${this.id || this._uniqueId}-input`; }\n\n    /** Whether this radio is checked. */\n    private _checked: boolean = false;\n\n    /** Whether this radio is disabled. */\n    private _disabled: boolean;\n\n    /** Whether this radio is required. */\n    private _required: boolean;\n\n    /** Value assigned to this radio. */\n    private _value: any = null;\n\n    /** Unregister function for _radioDispatcher */\n    private removeUniqueSelectionListener: () => void = () => {};\n\n    constructor(\n        @Optional() radioGroup: McRadioGroup,\n        elementRef: ElementRef,\n        private _changeDetector: ChangeDetectorRef,\n        private _radioDispatcher: UniqueSelectionDispatcher\n    ) {\n\n        super(elementRef);\n\n        this.radioGroup = radioGroup;\n\n        this.removeUniqueSelectionListener =\n            _radioDispatcher.listen((id: string, name: string) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            });\n    }\n\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n\n    ngAfterViewInit() {}\n\n    ngOnDestroy() {\n        this.removeUniqueSelectionListener();\n    }\n\n    /** Focuses the radio button. */\n    focus(): void {}\n\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n\n    onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n\n    onInputChange(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this.emitChangeEvent();\n\n        if (this.radioGroup) {\n            this.radioGroup.controlValueAccessorChangeFn(this.value);\n            this.radioGroup.touch();\n            if (groupValueChanged) {\n                this.radioGroup.emitChangeEvent();\n            }\n        }\n    }\n\n    /** Dispatch change event with current value. */\n    private emitChangeEvent(): void {\n        this.change.emit(new McRadioChange(this, this._value));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport {A11yModule} from '@ptsecurity/cdk/a11y';\nimport {McCommonModule} from '@ptsecurity/mosaic/core';\n\nimport {McRadioButton, McRadioGroup} from './radio.component';\n\n\n@NgModule({\n    imports: [ CommonModule, A11yModule, McCommonModule ],\n    exports: [ McRadioGroup, McRadioButton, McCommonModule ],\n    declarations: [ McRadioGroup, McRadioButton ]\n})\nexport class McRadioModule {}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n    QueryList,\n    ViewEncapsulation,\n    ChangeDetectorRef,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\n\nimport { FocusKeyManager, IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { DOWN_ARROW, END, ENTER, HOME, PAGE_DOWN, PAGE_UP, SPACE, UP_ARROW } from '@ptsecurity/cdk/keycodes';\n\nimport {\n    McLine,\n    McLineSetter,\n    CanDisable,\n    mixinDisabled,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\n@Component({\n    exportAs: 'mcListOption',\n    selector: 'mc-list-option',\n    host: {\n        tabindex: '-1',\n\n        class: 'mc-list-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '[class.mc-list-option-disabled]': 'disabled',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n        '(click)': '_handleClick()'\n    },\n    templateUrl: 'list-option.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListOption implements AfterContentInit, OnDestroy, OnInit, IFocusableOption {\n    _hasFocus: boolean = false;\n\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    @ViewChild('text') _text: ElementRef;\n\n    // Whether the label should appear before or after the checkbox. Defaults to 'after'\n    @Input() checkboxPosition: 'before' | 'after' = 'after';\n\n    @Input() value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled || (this.listSelection && this.listSelection.disabled);\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.listSelection.selectedOptions && this.listSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            this.listSelection._reportValueChange();\n        }\n    }\n\n    private _lineSetter: McLineSetter;\n    private _selected = false;\n    private _disabled = false;\n\n    constructor(\n        private _element: ElementRef,\n        private _changeDetector: ChangeDetectorRef,\n        @Inject(forwardRef(() => McListSelection))\n        public listSelection: McListSelection\n    ) {}\n\n    ngOnInit() {\n        if (this._selected) {\n            // List options that are selected at initialization can't be reported properly to the form\n            // control. This is because it takes some time until the selection-list knows about all\n            // available options. Also it can happen that the ControlValueAccessor has an initial value\n            // that should be used instead. Deferring the value change report to the next tick ensures\n            // that the form control value is not being overwritten.\n            const wasSelected = this._selected;\n\n            Promise.resolve().then(() => {\n                if (this._selected || wasSelected) {\n                    this.selected = true;\n                    this._changeDetector.markForCheck();\n                }\n            });\n        }\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    ngOnDestroy(): void {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => this.selected = false);\n        }\n\n        this.listSelection._removeOptionFromList(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    focus(): void {\n        this._element.nativeElement.focus();\n    }\n\n    getLabel() {\n        return this._text ? this._text.nativeElement.textContent : '';\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected) { return; }\n\n        this._selected = selected;\n\n        if (!this.listSelection.selectedOptions) { return; }\n\n        if (selected) {\n            this.listSelection.selectedOptions.select(this);\n        } else {\n            this.listSelection.selectedOptions.deselect(this);\n        }\n\n        this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleClick() {\n        if (this.disabled || this.listSelection.autoSelect) { return; }\n\n        this.toggle();\n        // Emit a change event if the selected state of the option changed through user interaction.\n        this.listSelection._emitChangeEvent(this);\n    }\n\n    _handleFocus() {\n        if (this.disabled) { return; }\n\n        this._hasFocus = true;\n        this.listSelection.setFocusedOption(this);\n    }\n\n    _handleBlur() {\n        this._hasFocus = false;\n\n        this.listSelection._onTouched();\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n\n\nexport const MC_SELECTION_LIST_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McListSelection),\n    multi: true\n};\n\n// Change event that is being fired whenever the selected state of an option changes. */\nexport class McListSelectionChange {\n    constructor(\n        // Reference to the selection list that emitted the event.\n        public source: McListSelection,\n        // Reference to the option that has been changed.\n        public option: McListOption\n    ) {}\n}\n\n\nexport class McListSelectionBase {}\n\nexport const _McListSelectionMixinBase = mixinDisabled(McListSelectionBase);\n\n@Component({\n    exportAs: 'mcListSelection',\n    selector: 'mc-list-selection',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-list-selection',\n        '[tabIndex]': 'tabIndex',\n        '(focus)': 'focus()',\n        '(blur)': '_onTouched()',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    providers: [MC_SELECTION_LIST_VALUE_ACCESSOR],\n    preserveWhitespaces: false\n})\nexport class McListSelection extends _McListSelectionMixinBase implements\n    IFocusableOption, CanDisable, AfterContentInit, ControlValueAccessor {\n\n    _keyManager: FocusKeyManager<McListOption>;\n\n    // The option components contained within this selection-list.\n    @ContentChildren(McListOption) options: QueryList<McListOption>;\n\n    tabIndex: number;\n\n    autoSelect: boolean;\n    noUnselect: boolean;\n    multiple: boolean;\n\n    @Input() horizontal: boolean = false;\n\n    // Emits a change event whenever the selected state of an option changes.\n    @Output() readonly selectionChange: EventEmitter<McListSelectionChange> =\n        new EventEmitter<McListSelectionChange>();\n\n    selectedOptions: SelectionModel<McListOption> = new SelectionModel<McListOption>(true);\n\n    private _scrollSize: number = 0;\n\n    // Used for storing the values that were assigned before the options were initialized.\n    private _tempValues: string[] | null;\n\n    // непонятна целесообразность сего\n    private _modelChanges = Subscription.EMPTY;\n\n    constructor(\n        private _element: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string,\n        @Attribute('multiple') multiple: string\n    ) {\n        super();\n\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngAfterContentInit(): void {\n        this.horizontal = toBoolean(this.horizontal);\n\n        this._keyManager = new FocusKeyManager<McListOption>(this.options)\n            .withTypeAhead()\n            .withHorizontalOrientation(this.horizontal ? 'ltr' : null)\n            .withVerticalOrientation(!this.horizontal);\n\n        if (this._tempValues) {\n            this._setOptionsFromValues(this._tempValues);\n            this._tempValues = null;\n        }\n\n        // this.selectedOptions = new SelectionModel<McListOption>(this.multiple);\n\n        // непонятна целесообразность сего\n        // Sync external changes to the model back to the options.\n        this._modelChanges = this.selectedOptions.onChange!.subscribe((event) => {\n            if (event.added) {\n                for (const item of event.added) {\n                    item.selected = true;\n                }\n            }\n\n            if (event.removed) {\n                for (const item of event.removed) {\n                    item.selected = false;\n                }\n            }\n        });\n\n        this.updateScrollSize();\n    }\n\n    ngOnDestroy() {\n        // непонятна целесообразность сего\n        this._modelChanges.unsubscribe();\n    }\n\n    focus() {\n        this._element.nativeElement.focus();\n    }\n\n    selectAll() {\n        this.options.forEach((option) => option.setSelected(true));\n\n        this._reportValueChange();\n    }\n\n    deselectAll() {\n        this.options.forEach((option) => option.setSelected(false));\n\n        this._reportValueChange();\n    }\n\n    updateScrollSize(): void {\n        if (this.horizontal || !this.options.first) { return; }\n\n        this._scrollSize = Math.floor(this._getHeight() / this.options.first._getHeight());\n    }\n\n    // Sets the focused option of the selection-list.\n    setFocusedOption(option: McListOption): void {\n        this._keyManager.updateActiveItemIndex(this._getOptionIndex(option));\n\n        if (this.autoSelect) {\n            this.options.forEach((item) => item.setSelected(false));\n\n            option.setSelected(true);\n\n            this._emitChangeEvent(option);\n            this._reportValueChange();\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(values: string[]): void {\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        } else {\n            this._tempValues = values;\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this._onTouched = fn;\n    }\n\n    // Implemented as a part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        if (this.options) {\n            this.options.forEach((option) => option.disabled = isDisabled);\n        }\n    }\n\n    getSelectedOptionValues(): string[] {\n        return this.options.filter((option) => option.selected).map((option) => option.value);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        if (this.noUnselect && this.selectedOptions.selected.length === 1) { return; }\n\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McListOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    // View to model callback that should be called if the list or its options lost focus.\n    _onTouched: () => void = () => {};\n\n    // Removes an option from the selection list and updates the active item.\n    _removeOptionFromList(option: McListOption) {\n        if (option._hasFocus) {\n            const optionIndex = this._getOptionIndex(option);\n\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.setPreviousItemActive();\n            } else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.setNextItemActive();\n            }\n        }\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        const previousFocusIndex = manager.activeItemIndex;\n\n        switch (event.keyCode) {\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                if (!this.horizontal) { this._keyManager.setPreviousPageItemActive(this._scrollSize); }\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                if (!this.horizontal) { this._keyManager.setNextPageItemActive(this._scrollSize); }\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n\n        if ((keyCode === UP_ARROW || keyCode === DOWN_ARROW) &&\n            event.shiftKey &&\n            manager.activeItemIndex !== previousFocusIndex\n        ) {\n            this.toggleFocusedOption();\n        }\n    }\n\n    // Reports a value change to the ControlValueAccessor\n    _reportValueChange() {\n        if (this.options) {\n            this._onChange(this.getSelectedOptionValues());\n        }\n    }\n\n    // Emits a change event if the selected state of an option changed.\n    _emitChangeEvent(option: McListOption) {\n        this.selectionChange.emit(new McListSelectionChange(this, option));\n    }\n\n    // Returns the option with the specified value.\n    private _getOptionByValue(value: string): McListOption | undefined {\n        return this.options.find((option) => option.value === value);\n    }\n\n    // Sets the selected options based on the specified values.\n    private _setOptionsFromValues(values: string[]) {\n        this.options.forEach((option) => option.setSelected(false));\n\n        values\n            .map((value) => this._getOptionByValue(value))\n            .filter(Boolean)\n            .forEach((option) => option!.setSelected(true));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    // Returns the index of the specified list option.\n    private _getOptionIndex(option: McListOption): number {\n        return this.options.toArray().indexOf(option);\n    }\n\n    // View to model callback that should be called whenever the selected options change.\n    private _onChange: (value: any) => void = (_: any) => {};\n}\n","// todo пока не делаем, перенесено из материала, но у нас в доках таких простых списков нет.\nimport {\n    AfterContentInit, ChangeDetectionStrategy, Component, ContentChildren, Directive, ElementRef, QueryList,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { McLine, McLineSetter } from '@ptsecurity/mosaic/core';\n\n\nexport class McListBase {}\n\n@Component({\n    selector: 'mc-list',\n    host: { class: 'mc-list' },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McList extends McListBase {}\n\n\n/**\n * Directive whose purpose is to add the mc- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n    selector: '[mc-subheader], [mcSubheader]',\n    host: { class: 'mc-subheader' }\n})\nexport class McListSubheaderCssStyler {}\n\n\n// Boilerplate for applying mixins to McListItem.\nexport class McListItemBase {}\n\n@Component({\n    selector: 'mc-list-item, a[mc-list-item]',\n    host: {\n        class: 'mc-list-item',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()'\n    },\n    templateUrl: './list-item.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListItem extends McListItemBase implements AfterContentInit {\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    private _lineSetter: McLineSetter;\n\n    constructor(private _element: ElementRef) {\n        super();\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    _handleFocus() {\n        this._element.nativeElement.classList.add('mc-focused');\n    }\n\n    _handleBlur() {\n        this._element.nativeElement.classList.remove('mc-focused');\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLineModule } from '@ptsecurity/mosaic/core';\n\nimport { McListSelection, McListOption } from './list-selection.component';\nimport { McList, McListItem, McListSubheaderCssStyler} from './list.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        McLineModule\n    ],\n    exports: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ],\n    declarations: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ]\n})\nexport class McListModule {}\n","\nimport { Version } from '@angular/core';\n\nexport const VERSION = new Version('0.0.1-aaede50');\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\nexport function isBoolean(val: any): val is boolean { return typeof val === 'boolean'; }\n\nexport function toBoolean(value: any): boolean {\n    return value != null && `${value}` !== 'false';\n}\n","import { NgModule, InjectionToken, Optional, Inject, isDevMode } from '@angular/core';\nimport { BidiModule } from '@ptsecurity/cdk/bidi';\n\n\n// Injection token that configures whether the Mosaic sanity checks are enabled.\nexport const MС_SANITY_CHECKS = new InjectionToken<boolean>('mc-sanity-checks', {\n    providedIn: 'root',\n    factory: MC_SANITY_CHECKS_FACTORY\n});\n\nexport function MC_SANITY_CHECKS_FACTORY(): boolean {\n    return true;\n}\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Mosaic\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\n@NgModule({\n    imports: [ BidiModule ],\n    exports: [ BidiModule ]\n})\nexport class McCommonModule {\n    // Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n    private _hasDoneGlobalChecks = false;\n\n    // Reference to the global `document` object.\n    private _document = typeof document === 'object' && document ? document : null;\n\n    // Reference to the global 'window' object.\n    private _window = typeof window === 'object' && window ? window : null;\n\n    constructor(@Optional() @Inject(MС_SANITY_CHECKS) private _sanityChecksEnabled: boolean) {\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n\n    // Whether any sanity checks are enabled\n    private _areChecksEnabled(): boolean {\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    }\n\n    // Whether the code is running in tests.\n    private _isTestEnv() {\n        return this._window && (this._window['__karma__'] || this._window['jasmine']);\n    }\n\n    private _checkDoctypeIsDefined(): void {\n        if (this._document && !this._document.doctype) {\n            console.warn(\n                'Current document does not have a doctype. This may cause ' +\n                'some Mosaic components not to behave as expected.'\n            );\n        }\n    }\n\n    private _checkThemeIsPresent(): void {\n        if (this._document && typeof getComputedStyle === 'function') {\n            const testElement = this._document.createElement('div');\n\n            testElement.classList.add('mc-theme-loaded-marker');\n            this._document.body.appendChild(testElement);\n\n            const computedStyle = getComputedStyle(testElement);\n\n            // In some situations, the computed style of the test element can be null. For example in\n            // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n            if (computedStyle && computedStyle.display !== 'none') {\n                console.warn(\n                    'Could not find Mosaic core theme. Most Mosaic ' +\n                    'components may not work as expected. For more info refer ' +\n                    'to the theming guide: link there'\n                );\n            }\n\n            this._document.body.removeChild(testElement);\n        }\n    }\n}\n","import { toBoolean } from '../utils/index';\nimport { Constructor } from './constructor';\n\n\nexport interface CanDisable {\n    disabled: boolean;\n}\n\n// Mixin to augment a directive with a `disabled` property.\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): Constructor<CanDisable> & T {\n    return class extends base {\n        private _disabled: boolean = false;\n\n        get disabled() {\n            return this._disabled;\n        }\n\n        set disabled(value: any) {\n            this._disabled = toBoolean(value);\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n    };\n}\n","import { ElementRef } from '@angular/core';\nimport { Constructor } from './constructor';\n\n\nexport interface CanColor {\n    color: ThemePalette;\n}\n\nexport interface HasElementRef {\n    _elementRef: ElementRef;\n}\n\nexport enum ThemePalette {\n    Primary = 'primary',\n    Second = 'second',\n    Warn = 'warn',\n    Default = 'second'\n}\n\n/** Mixin to augment a directive with a `color` property. */\nexport function mixinColor<T extends Constructor<HasElementRef>>(base: T, defaultColor: ThemePalette = ThemePalette.Default): Constructor<CanColor> & T {\n    return class extends base {\n        private _color: ThemePalette;\n\n        get color(): ThemePalette {\n            return this._color;\n        }\n\n        set color(value: ThemePalette) {\n            const colorPalette = value || defaultColor;\n\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mc-${this._color}`);\n                }\n\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mc-${colorPalette}`);\n                }\n\n                this._color = colorPalette;\n            }\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n\n            // Set the default color that can be specified from the mixin.\n            this.color = defaultColor;\n        }\n    };\n}\n\n","import { Constructor } from './constructor';\nimport { CanDisable } from './disabled';\n\n\nexport interface HasTabIndex {\n    tabIndex: number;\n}\n\n// Mixin to augment a directive with a `tabIndex` property.\nexport function mixinTabIndex<\n        T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0): Constructor<HasTabIndex\n    > & T {\n    return class extends base {\n        private _tabIndex: number = defaultTabIndex;\n\n        get tabIndex(): number {\n            return this.disabled ? -1 : this._tabIndex;\n        }\n\n        set tabIndex(value: number) {\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n    };\n}\n","import { NgModule, Directive, ElementRef, QueryList } from '@angular/core';\n\nimport { McCommonModule } from '../common-behaviors/common-module';\n\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(McLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({\n    selector: '[mc-line], [mcLine]',\n    host: { class: 'mc-line' }\n})\nexport class McLine {}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nexport class McLineSetter {\n    constructor(private _lines: QueryList<McLine>, private _element: ElementRef) {\n        this._setLineClass(this._lines.length);\n\n        this._lines.changes.subscribe(() => {\n            this._setLineClass(this._lines.length);\n        });\n    }\n\n    private _setLineClass(count: number): void {\n        this._resetClasses();\n        if (count === 2 || count === 3) {\n            this._setClass(`mc-${count}-line`, true);\n        } else if (count > 3) {\n            this._setClass(`mc-multi-line`, true);\n        }\n    }\n\n    private _resetClasses(): void {\n        this._setClass('mc-2-line', false);\n        this._setClass('mc-3-line', false);\n        this._setClass('mc-multi-line', false);\n    }\n\n    private _setClass(className: string, isAdd: boolean): void {\n        if (isAdd) {\n            this._element.nativeElement.classList.add(className);\n        } else {\n            this._element.nativeElement.classList.remove(className);\n        }\n    }\n}\n\n@NgModule({\n    imports: [McCommonModule],\n    exports: [McLine, McCommonModule],\n    declarations: [McLine]\n})\nexport class McLineModule {}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\n\nexport type McPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mc-primary .mc-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mc-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n@Component({\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'mc-pseudo-checkbox',\n    styleUrls: ['pseudo-checkbox.css'],\n    template: '',\n    host: {\n        class: 'mc-pseudo-checkbox',\n        '[class.mc-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n        '[class.mc-pseudo-checkbox-checked]': 'state === \"checked\"',\n        '[class.mc-pseudo-checkbox-disabled]': 'disabled'\n    }\n})\nexport class McPseudoCheckbox {\n    // Display state of the checkbox.\n    @Input() state: McPseudoCheckboxState = 'unchecked';\n\n    // Whether the checkbox is disabled.\n    @Input() disabled: boolean = false;\n}\n","import { NgModule } from '@angular/core';\n\nimport { McPseudoCheckbox } from './pseudo-checkbox/pseudo-checkbox';\n\n\n@NgModule({\n    exports: [McPseudoCheckbox],\n    declarations: [McPseudoCheckbox]\n})\nexport class McPseudoCheckboxModule {}\n\n\nexport * from './pseudo-checkbox/pseudo-checkbox';\n","import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { mixinColor, CanColor } from '@ptsecurity/mosaic/core';\n\n\n@Directive({\n    selector: '[mc-icon]',\n    host: { class: 'mc-icon mc' }\n})\nexport class McIconCSSStyler {}\n\n\nexport class McIconBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McIconMixinBase = mixinColor(McIconBase);\n\n\n@Component({\n    selector: `[mc-icon]`,\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./icon.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McIcon extends _McIconMixinBase implements CanColor {\n    constructor(elementRef: ElementRef, @Attribute('mc-icon') iconName: string) {\n        super(elementRef);\n\n        elementRef.nativeElement.classList.add(iconName);\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McIcon,\n    McIconCSSStyler\n} from './icon.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McIcon,\n        McIconCSSStyler\n    ],\n    declarations: [\n        McIcon,\n        McIconCSSStyler\n    ]\n})\nexport class McIconModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    OnDestroy,\n    QueryList,\n    ViewEncapsulation,\n    ContentChildren\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport { Platform } from '@ptsecurity/cdk/platform';\n\nimport { mixinColor, mixinDisabled, CanColor, CanDisable } from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\n@Directive({\n    selector: 'button[mc-button], a[mc-button]',\n    host: { class: 'mc-button' }\n})\nexport class McButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-xs-button], a[mc-xs-button]',\n    host: { class: 'mc-button mc-button_xs' }\n})\nexport class McXSButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-sm-button], a[mc-sm-button]',\n    host: { class: 'mc-button mc-button_sm' }\n})\nexport class McSMButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-lg-button], a[mc-lg-button]',\n    host: { class: 'mc-button mc-button_lg' }\n})\nexport class McLGButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-xl-button], a[mc-xl-button]',\n    host: { class: 'mc-button mc-button_xl' }\n})\nexport class McXLButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-icon-button], a[mc-icon-button]',\n    queries: {\n        contentChildren: new ContentChildren(McIcon)\n    },\n    host: { class: 'mc-icon-button' }\n})\nexport class McIconButtonCSSStyler {\n    nativeElement: Element;\n\n    contentChildren: QueryList<McIcon>;\n\n    constructor(elementRef: ElementRef) {\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const twoIcons = 2;\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-icon-button_left');\n                }\n\n                if (iconElement.previousSibling) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-icon-button_right');\n                }\n            }\n        } else if (icons.length === twoIcons) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n\n\nexport class McButtonBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McButtonMixinBase = mixinColor(mixinDisabled(McButtonBase));\n\n\n@Component({\n    selector: `\n        button[mc-button],\n        button[mc-xs-button],\n        button[mc-sm-button],\n        button[mc-lg-button],\n        button[mc-xl-button]\n    `,\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[disabled]': 'disabled || null'\n    }\n})\nexport class McButton extends _McButtonMixinBase implements OnDestroy, CanDisable, CanColor {\n    constructor(elementRef: ElementRef, private _platform: Platform, private _focusMonitor: FocusMonitor) {\n        super(elementRef);\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n\n\n@Component({\n    selector: 'a[mc-button], a[mc-xs-button], a[mc-sm-button], a[mc-lg-button], a[mc-xl-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_haltDisabledEvents($event)'\n    }\n})\nexport class McAnchor extends McButton {\n    constructor(platform: Platform, focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, platform, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n\n\n@Component({\n    selector: 'button[mc-icon-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null'\n    }\n})\nexport class McIconButton extends McButton {\n    constructor(platform: Platform, focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, platform, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McButton,\n    McAnchor,\n    McIconButton,\n    McButtonCSSStyler,\n    McXSButtonCSSStyler,\n    McSMButtonCSSStyler,\n    McLGButtonCSSStyler,\n    McXLButtonCSSStyler,\n    McIconButtonCSSStyler\n} from './button.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McXSButtonCSSStyler,\n        McSMButtonCSSStyler,\n        McLGButtonCSSStyler,\n        McXLButtonCSSStyler,\n        McIconButtonCSSStyler\n    ],\n    declarations: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McXSButtonCSSStyler,\n        McSMButtonCSSStyler,\n        McLGButtonCSSStyler,\n        McXLButtonCSSStyler,\n        McIconButtonCSSStyler\n    ]\n})\nexport class McButtonModule {}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { toBoolean } from '@ptsecurity/mosaic/core';\n\n\n@Component({\n    selector: 'mc-divider',\n    host: {\n        class: 'mc-divider',\n        role: 'separator',\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n        '[class.mc-divider-vertical]': 'vertical',\n        '[class.mc-divider-inset]': 'inset'\n    },\n    template: '',\n    styleUrls: ['divider.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false\n})\nexport class McDivider {\n    // Whether the divider is vertically aligned.\n    @Input()\n    get vertical(): boolean {\n        return this._vertical;\n    }\n\n    set vertical(value: boolean) {\n        this._vertical = toBoolean(value);\n    }\n\n    private _vertical: boolean = false;\n\n    // Whether the divider is an inset divider.\n    @Input()\n    get inset(): boolean {\n        return this._inset;\n    }\n\n    set inset(value: boolean) {\n        this._inset = toBoolean(value);\n    }\n\n    private _inset: boolean = false;\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {McCommonModule} from '@ptsecurity/mosaic/core';\n\nimport {McDivider} from './divider.component';\n\n\n@NgModule({\n    imports: [\n        McCommonModule,\n        CommonModule\n    ],\n    exports: [\n        McDivider,\n        McCommonModule\n    ],\n    declarations: [\n        McDivider\n    ]\n})\nexport class McDividerModule {}\n"],"names":["inputs","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","exportAs","host","class","[attr.id]","[class.mc-radio-checked]","[class.mc-radio-disabled]","(focus)","type","McRadioGroup","decorators","Optional","ElementRef","ChangeDetectorRef","UniqueSelectionDispatcher","id","Input","name","ariaLabel","args","ariaLabelledby","ariaDescribedby","checked","value","disabled","required","labelPosition","_inputElement","ViewChild","change","Output","isFocused","McRadioButton","_McRadioButtonMixinBase","NgModule","imports","CommonModule","A11yModule","McCommonModule","exports","declarations","McRadioModule","McListOption","_element","_changeDetector","listSelection","this","_hasFocus","checkboxPosition","_selected","_disabled","Object","defineProperty","prototype","newValue","toBoolean","markForCheck","selectedOptions","isSelected","setSelected","_reportValueChange","ngOnInit","_this","wasSelected_1","Promise","resolve","then","selected","ngAfterContentInit","_lineSetter","McLineSetter","_lines","ngOnDestroy","_removeOptionFromList","toggle","focus","nativeElement","getLabel","_text","textContent","select","deselect","_getHeight","getClientRects","height","_handleClick","autoSelect","_emitChangeEvent","_handleFocus","setFocusedOption","_handleBlur","_onTouched","_getHostElement","Component","selector","tabindex","[class.mc-selected]","[class.mc-focused]","[class.mc-list-option-disabled]","(blur)","(click)","template","preserveWhitespaces","McListSelection","Inject","forwardRef","ContentChildren","McLine","MC_SELECTION_LIST_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","multi","McListSelectionChange","source","option","McListSelectionBase","_McListSelectionMixinBase","mixinDisabled","tabIndex","noUnselect","multiple","_super","call","horizontal","selectionChange","EventEmitter","SelectionModel","_scrollSize","_modelChanges","Subscription","EMPTY","_onChange","_","parseInt","tslib_1.__extends","_keyManager","FocusKeyManager","options","withTypeAhead","withHorizontalOrientation","withVerticalOrientation","_tempValues","_setOptionsFromValues","subscribe","event","added","_i","_a","length","item","removed","_b","_c","updateScrollSize","unsubscribe","selectAll","forEach","deselectAll","first","Math","floor","updateActiveItemIndex","_getOptionIndex","writeValue","values","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","getSelectedOptionValues","filter","map","toggleFocusedOption","focusedIndex","activeItemIndex","_isValidIndex","focusedOption","toArray","optionIndex","setPreviousItemActive","setNextItemActive","_onKeyDown","keyCode","manager","previousFocusIndex","SPACE","ENTER","preventDefault","HOME","setFirstItemActive","END","setLastItemActive","PAGE_UP","setPreviousPageItemActive","PAGE_DOWN","setNextPageItemActive","onKeydown","UP_ARROW","DOWN_ARROW","shiftKey","emit","_getOptionByValue","find","Boolean","index","indexOf","styles","[tabIndex]","(keydown)","(window:resize)","providers","undefined","Attribute","McListBase","McList","Directive","McListSubheaderCssStyler","McListItemBase","McListItem","classList","add","remove","McListModule","McLineModule","VERSION","Version","__extends","d","b","__","constructor","extendStatics","create","isBoolean","val","MC_SANITY_CHECKS_FACTORY","base","class_1","arguments","apply","mixinColor","defaultColor","ThemePalette","Default","color","_color","colorPalette","_elementRef","mixinTabIndex","defaultTabIndex","_tabIndex","setPrototypeOf","__proto__","Array","p","hasOwnProperty","MС_SANITY_CHECKS","InjectionToken","providedIn","factory","_sanityChecksEnabled","_hasDoneGlobalChecks","_document","document","_window","window","_areChecksEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","isDevMode","_isTestEnv","doctype","console","warn","getComputedStyle","testElement","createElement","body","appendChild","computedStyle","display","removeChild","BidiModule","Primary","Second","Warn","_setLineClass","changes","count","_resetClasses","_setClass","className","isAdd","state","[class.mc-pseudo-checkbox-indeterminate]","[class.mc-pseudo-checkbox-checked]","[class.mc-pseudo-checkbox-disabled]","McPseudoCheckbox","McPseudoCheckboxModule","McIconCSSStyler","McIconBase","_McIconMixinBase","McIcon","elementRef","iconName","McIconModule","PlatformModule","McButtonCSSStyler","McXSButtonCSSStyler","McSMButtonCSSStyler","McLGButtonCSSStyler","McXLButtonCSSStyler","McIconButtonCSSStyler","_addClassModificatorForIcons","icons","contentChildren","iconElement","previousElementSibling","nextElementSibling","nextSibling","previousSibling","firstIconElement","secondIconElement","queries","McButtonBase","_McButtonMixinBase","McButton","_platform","_focusMonitor","monitor","stopMonitoring","[disabled]","Platform","FocusMonitor","McAnchor","platform","focusMonitor","_haltDisabledEvents","stopImmediatePropagation","[attr.tabindex]","[attr.disabled]","McIconButton","McButtonModule","McDivider","_vertical","_inset","role","[attr.aria-orientation]","[class.mc-divider-vertical]","[class.mc-divider-inset]","vertical","inset","McDividerModule","nextUniqueId","McRadioChange","McRadioGroupBase","_McRadioGroupMixinBase","MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","_value","_name","_isInitialized","_labelPosition","_required","controlValueAccessorChangeFn","onTouched","set","updateRadioButtonNames","v","markRadiosForCheck","updateSelectedRadioFromValue","checkSelectedRadioButton","touch","emitChangeEvent","_radios","radio","isAlreadySelected","descendants","McRadioButtonBase","radioGroup","_radioDispatcher","_uniqueId","_checked","removeUniqueSelectionListener","listen","newCheckedState","notify","newDisabledState","ngAfterViewInit","onInputClick","stopPropagation","onInputChange","groupValueChanged"],"mappings":"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"}