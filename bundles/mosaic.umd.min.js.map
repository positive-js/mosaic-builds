{"version":3,"file":"mosaic.umd.min.js","sources":["../../src/lib/splitter/splitter.component.ts","../../src/lib/splitter/splitter.module.ts","../../src/lib/tooltip/tooltip.component.ts","../../src/lib/tooltip/tooltip.module.ts","../../src/lib/version.ts","../../src/lib/timepicker/timepicker.constants.ts","../../src/lib/select/select.component.ts","../../src/lib/timepicker/timepicker.ts","../../src/lib/timepicker/timepicker.module.ts","../../src/lib/select/select-animations.ts","../../src/lib/select/select.module.ts","../../src/lib/radio/radio.component.ts","../../src/lib/radio/radio.module.ts","../../src/lib/tree/node.ts","../../src/lib/tree/padding.ts","../../src/lib/tree/tree-selection.ts","../../src/lib/tree/tree.module.ts","../../src/lib/tree/data-source/flat-data-source.ts","../../src/lib/tree/data-source/nested-data-source.ts","../../src/lib/tag/tag.component.ts","../../src/lib/tag/tag.module.ts","../../src/lib/modal/modal.component.ts","../../src/lib/modal/css-unit.pipe.ts","../../src/lib/modal/modal.service.ts","../../src/lib/modal/modal.module.ts","../../src/lib/navbar/navbar.component.ts","../../src/lib/navbar/navbar.module.ts","../../src/lib/progress-bar/progress-bar.component.ts","../../src/lib/progress-bar/progress-bar.module.ts","../../src/lib/progress-spinner/progress-spinner.component.ts","../../src/lib/progress-spinner/progress-spinner.module.ts","../../src/lib/layout/sidebar.component.ts","../../src/lib/layout/layout.module.ts","../../src/lib/list/list-selection.component.ts","../../src/lib/list/list.component.ts","../../src/lib/list/list.module.ts","../../src/lib/link/link.component.ts","../../src/lib/link/link.module.ts","../../src/lib/modal/modal-control.service.ts","../../src/lib/modal/modal-ref.class.ts","../../src/lib/modal/modal-util.ts","../../src/lib/button/button.component.ts","../../src/lib/button/button.module.ts","../../src/lib/checkbox/checkbox-config.ts","../../src/lib/checkbox/checkbox.ts","../../src/lib/checkbox/checkbox-required-validator.ts","../../src/lib/checkbox/checkbox-module.ts","../../src/lib/divider/divider.component.ts","../../src/lib/divider/divider.module.ts","../../src/lib/form-field/cleaner.ts","../../src/lib/form-field/form-field-control.ts","../../src/lib/form-field/form-field-number-control.ts","../../src/lib/form-field/hint.ts","../../src/lib/form-field/prefix.ts","../../src/lib/form-field/stepper.ts","../../src/lib/form-field/suffix.ts","../../src/lib/form-field/form-field.ts","../../src/lib/form-field/form-field.module.ts","../../src/lib/input/input-value-accessor.ts","../../src/lib/input/stepperUtils.ts","../../src/lib/input/input.ts","../../src/lib/input/input-number-validators.ts","../../src/lib/input/input.module.ts","../../src/lib/layout/content.component.ts","../../src/lib/layout/footer.component.ts","../../src/lib/layout/header.component.ts","../../src/lib/layout/layout.component.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/utils/utils.ts","../../src/lib/core/common-behaviors/common-module.ts","../../src/lib/core/common-behaviors/disabled.ts","../../src/lib/core/common-behaviors/color.ts","../../src/lib/core/common-behaviors/tabindex.ts","../../src/lib/core/common-behaviors/error-state.ts","../../src/lib/core/option/option.ts","../../src/lib/core/overlay/overlay-position-map.ts","../../src/lib/form-field/form-field-errors.ts","../../src/lib/input/input-errors.ts","../../src/lib/select/select-errors.ts","../../src/lib/core/line/line.ts","../../src/lib/core/error/error-options.ts","../../src/lib/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../src/lib/core/selection/index.ts","../../src/lib/core/services/measure-scrollbar.service.ts","../../src/lib/core/option/optgroup.ts","../../src/lib/core/option/index.ts","../../src/lib/core/label/label-options.ts","../../src/lib/core/animation/fade-animations.ts","../../src/lib/icon/icon.component.ts","../../src/lib/icon/icon.module.ts"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    NgZone, OnDestroy,\n    OnInit,\n    Renderer2,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { coerceBooleanProperty, coerceCssPixelValue, coerceNumberProperty } from '@ptsecurity/cdk/coercion';\n\n\ninterface IArea {\n    area: McSplitterAreaDirective;\n    index: number;\n    order: number;\n    initialSize: number;\n}\n\ninterface IPoint {\n    x: number;\n    y: number;\n}\n\n\nconst enum AttributeProperty {\n    Disabled = 'disabled'\n}\n\nconst enum Cursor {\n    Default = 'default',\n    ResizeColumn = 'col-resize',\n    ResizeRow = 'row-resize'\n}\n\nconst enum StyleProperty {\n    Cursor = 'cursor',\n    Flex = 'flex',\n    FlexBasis = 'flex-basis',\n    FlexDirection = 'flex-direction',\n    Height = 'height',\n    MaxWidth = 'max-width',\n    MinHeight = 'min-height',\n    MinWidth = 'minWidth',\n    OffsetHeight = 'offsetHeight',\n    OffsetWidth = 'offsetWidth',\n    Order = 'order',\n    Width = 'width'\n}\n\nconst enum State {\n    Disabled = 'disabled',\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\nexport const enum Direction {\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\n@Component({\n    selector: 'mc-splitter',\n    preserveWhitespaces: false,\n    styleUrls: ['splitter.css'],\n    templateUrl: './splitter.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSplitterComponent implements OnInit {\n    readonly areas: IArea[] = [];\n\n    private _direction: Direction;\n    private _disabled: boolean = false;\n    private _gutterSize: number = 6;\n\n    private isDragging: boolean = false;\n\n    private readonly areaPositionDivider: number = 2;\n    private readonly listeners: (() => void)[] = [];\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set gutterSize(gutterSize: number) {\n        const size = coerceNumberProperty(gutterSize);\n        this._gutterSize = size > 0 ? size : this.gutterSize;\n    }\n\n    get gutterSize(): number {\n        return this._gutterSize;\n    }\n\n    constructor(private elementRef: ElementRef,\n                private ngZone: NgZone,\n                private renderer: Renderer2) {}\n\n    addArea(area: McSplitterAreaDirective): void {\n        const index: number = this.areas.length;\n        const order: number = index * this.areaPositionDivider;\n        const size: number = area.getSize();\n\n        area.setOrder(order);\n\n        this.areas.push({\n            area,\n            index,\n            order,\n            initialSize: size\n        });\n    }\n\n    ngOnInit(): void {\n        if (!this.direction) {\n            this.direction = Direction.Horizontal;\n        }\n\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'column' : 'row');\n    }\n\n    onMouseDown(event: MouseEvent, leftAreaIndex: number, rightAreaIndex: number) {\n        if (this.disabled) {\n            return;\n        }\n\n        const leftArea = this.areas[leftAreaIndex];\n        const rightArea = this.areas[rightAreaIndex];\n\n        const startPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        leftArea.initialSize = leftArea.area.getSize();\n        rightArea.initialSize = rightArea.area.getSize();\n\n        this.areas.forEach((item) => {\n            const size = item.area.getSize();\n            item.area.disableFlex();\n            item.area.setSize(size);\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mouseup',\n                    () => this.onMouseUp()\n                )\n            );\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mousemove',\n                    (e: MouseEvent) => this.onMouseMove(e, startPoint, leftArea, rightArea)\n                )\n            );\n        });\n\n        this.isDragging = true;\n    }\n\n    removeArea(area: McSplitterAreaDirective): void {\n        let indexToRemove: number = -1;\n\n        this.areas.some((item, index) => {\n            if (item.area === area) {\n                indexToRemove = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        if (indexToRemove === -1) {\n            return;\n        }\n\n        this.areas.splice(indexToRemove, 1);\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private onMouseMove(event: MouseEvent, startPoint: IPoint, leftArea: IArea, rightArea: IArea) {\n        if (!this.isDragging || this.disabled) {\n            return;\n        }\n\n        const endPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        const offset = this.isVertical()\n            ? startPoint.y - endPoint.y\n            : startPoint.x - endPoint.x;\n\n        const newLeftAreaSize = leftArea.initialSize - offset;\n        const newRightAreaSize = rightArea.initialSize + offset;\n\n        const minLeftAreaSize = leftArea.area.getMinSize();\n        const minRightAreaSize = rightArea.area.getMinSize();\n\n        if (newLeftAreaSize <= minLeftAreaSize || newRightAreaSize <= minRightAreaSize) {\n            const rightAreaOffset = leftArea.initialSize - minLeftAreaSize;\n\n            leftArea.area.setSize(minLeftAreaSize);\n            rightArea.area.setSize(rightArea.initialSize + rightAreaOffset);\n        } else if (newLeftAreaSize <= 0) {\n            leftArea.area.setSize(0);\n            rightArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n        } else if (newRightAreaSize <= 0) {\n            leftArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n            rightArea.area.setSize(0);\n        } else {\n            leftArea.area.setSize(newLeftAreaSize);\n            rightArea.area.setSize(newRightAreaSize);\n        }\n    }\n\n    private onMouseUp() {\n        while (this.listeners.length > 0) {\n            const unsubscribe = this.listeners.pop();\n\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        }\n\n        this.isDragging = false;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-gutter'\n})\nexport class McGutterDirective implements OnInit {\n    private _direction: Direction = Direction.Vertical;\n    private _disabled: boolean = false;\n    private _order: number = 0;\n    private _size: number = 6;\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set order(order: number) {\n        this._order = coerceNumberProperty(order);\n    }\n\n    get order(): number {\n        return this._order;\n    }\n\n    @Input()\n    set size(size: number) {\n        this._size = coerceNumberProperty(size);\n    }\n\n    get size(): number {\n        return this._size;\n    }\n\n    constructor(private renderer: Renderer2,\n                private elementRef: ElementRef) {\n    }\n\n    ngOnInit(): void {\n        this.setStyle(StyleProperty.Cursor, this.getCursor(this.getState()));\n        this.setStyle(StyleProperty.FlexBasis, coerceCssPixelValue(this.size));\n        this.setStyle(this.isVertical() ? StyleProperty.Height : StyleProperty.Width, coerceCssPixelValue(this.size));\n        this.setStyle(StyleProperty.Order, this.order);\n\n        if (!this.isVertical()) {\n            this.setStyle(StyleProperty.Height, '100%');\n        }\n\n        if (this.disabled) {\n            this.setAttr(AttributeProperty.Disabled, 'true');\n        }\n\n        // fix IE issue with gutter icon. flex-direction is requied for flex alignment options\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'row' : 'column');\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private getCursor(state: State): string {\n        switch (state) {\n            case State.Disabled:\n                return Cursor.Default;\n            case State.Vertical:\n                return  Cursor.ResizeRow;\n            case State.Horizontal:\n                return Cursor.ResizeColumn;\n            default:\n                throw Error(`Unknown gutter state for cursor: ${state}`);\n        }\n    }\n\n    private getState(): State {\n        return this.disabled\n            ? State.Disabled\n            : this.direction === Direction.Vertical\n                ? State.Vertical\n                : State.Horizontal;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n\n    private setAttr(attribute: AttributeProperty, value: string) {\n        this.renderer.setAttribute(this.elementRef.nativeElement, attribute, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-splitter-area'\n})\nexport class McSplitterAreaDirective implements OnInit, OnDestroy {\n    constructor(private elementRef: ElementRef,\n                private renderer: Renderer2,\n                private splitter: McSplitterComponent) {}\n\n    disableFlex(): void {\n        this.renderer.removeStyle(this.elementRef.nativeElement, 'flex');\n    }\n\n    ngOnInit(): void {\n        this.splitter.addArea(this);\n\n        this.removeStyle(StyleProperty.MaxWidth);\n        this.setStyle(StyleProperty.Flex, '1');\n\n        if (this.splitter.direction === Direction.Vertical) {\n            this.setStyle(StyleProperty.Width, '100%');\n            this.removeStyle(StyleProperty.Height);\n        } else {\n            this.setStyle(StyleProperty.Height, '100%');\n            this.removeStyle(StyleProperty.Width);\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.splitter.removeArea(this);\n    }\n\n    setOrder(order: number): void {\n        this.setStyle(StyleProperty.Order, order);\n    }\n\n    setSize(size: number): void {\n        const sz = coerceNumberProperty(size);\n        this.setStyle(this.getSizeProperty(), coerceCssPixelValue(sz));\n    }\n\n    getSize(): number {\n        return this.elementRef.nativeElement[this.getOffsetSizeProperty()];\n    }\n\n    getMinSize(): number {\n        const styles = getComputedStyle(this.elementRef.nativeElement);\n\n        return parseFloat(styles[this.getMinSizeProperty()]);\n    }\n\n    private isVertical(): boolean {\n        return this.splitter.direction === Direction.Vertical;\n    }\n\n    private getMinSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.MinHeight\n            : StyleProperty.MinWidth;\n    }\n\n    private getOffsetSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.OffsetHeight\n            : StyleProperty.OffsetWidth;\n    }\n\n    private getSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.Height\n            : StyleProperty.Width;\n    }\n\n    private setStyle(style: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, style, value);\n    }\n\n    private removeStyle(style: StyleProperty) {\n        this.renderer.removeStyle(this.elementRef.nativeElement, style);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McGutterDirective, McSplitterAreaDirective, McSplitterComponent } from './splitter.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McIconModule\n    ],\n    exports: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ],\n    declarations: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ]\n})\nexport class McSplitterModule {\n}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    TemplateRef,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport {\n    ConnectedOverlayPositionChange,\n    ConnectionPositionPair,\n    Overlay,\n    OverlayRef,\n    ScrollDispatcher,\n    IScrollStrategy,\n    FlexibleConnectedPositionStrategy,\n    IOverlayConnectionPosition,\n    IOriginConnectionPosition,\n    HorizontalConnectionPos,\n    VerticalConnectionPos\n} from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\nimport {\n    fadeAnimation,\n    DEFAULT_4_POSITIONS,\n    POSITION_MAP\n} from '@ptsecurity/mosaic/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\n\n@Component({\n    selector: 'mc-tooltip',\n    animations: [ fadeAnimation ],\n    templateUrl: './tooltip.component.html',\n    preserveWhitespaces: false,\n    styleUrls: ['./tooltip.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '(body:click)': 'this._handleBodyInteraction()'\n    }\n})\n\nexport class McToolTipComponent {\n    _prefix = 'mc-tooltip_placement';\n    _positions: ConnectionPositionPair[] = [ ...DEFAULT_4_POSITIONS ];\n    _classMap = {};\n    _placement = 'top';\n    _trigger = 'hover';\n    isTitleString: boolean;\n    visibleSource = new BehaviorSubject<boolean>(false);\n    $visible: Observable<boolean> = this.visibleSource.asObservable();\n    _title: string | TemplateRef<void>;\n    showTId: number;\n    hideTId: number;\n    availablePositions: any;\n\n    @Output() mcVisibleChange: EventEmitter<boolean> = new EventEmitter();\n\n    @Input() mcMouseEnterDelay = 400;\n\n    @Input() mcMouseLeaveDelay = 0;\n\n    @Input()\n    set mcTitle(value: string | TemplateRef<void>) {\n        this.isTitleString = !(value instanceof TemplateRef);\n\n        if (this.isTitleString) {\n            this._title = value;\n        }\n    }\n\n    get mcTitle(): string | TemplateRef<void> {\n        return this._title;\n    }\n\n    @Input()\n    set mcVisible(value: boolean) {\n        const visible = coerceBooleanProperty(value);\n\n        if (this.visibleSource.value !== visible) {\n            this.visibleSource.next(visible);\n            this.mcVisibleChange.emit(visible);\n        }\n    }\n\n    get mcVisible(): boolean {\n        return this.visibleSource.value;\n    }\n\n    @Input()\n    set mcTrigger(value: string) {\n        this._trigger = value;\n    }\n\n    get mcTrigger(): string {\n        return this._trigger;\n    }\n\n    @Input()\n    set mcPlacement(value: string) {\n        if (value !== this._placement) {\n            this._placement = value;\n            this._positions.unshift(POSITION_MAP[ this.mcPlacement ]);\n        } else if (!value) {\n            this._placement = 'top';\n        }\n    }\n    get mcPlacement(): string {\n        return this._placement;\n    }\n\n    /** Subject for notifying that the tooltip has been hidden from the view */\n    private readonly _onHide: Subject<any> = new Subject();\n    private _closeOnInteraction: boolean = false;\n\n    constructor(public cdr: ChangeDetectorRef) {\n        this.availablePositions = POSITION_MAP;\n    }\n\n    show(): void {\n        if (this.hideTId) {\n            clearTimeout(this.hideTId);\n        }\n\n        if (!this.isContentEmpty()) {\n            this._closeOnInteraction = true;\n            this.showTId = setTimeout(() => {\n                this.mcVisible = true;\n                this.mcVisibleChange.emit(true);\n\n                // Mark for check so if any parent component has set the\n                // ChangeDetectionStrategy to OnPush it will be checked anyways\n                this._markForCheck();\n            }, this.mcMouseEnterDelay);\n        }\n    }\n\n    hide(): void {\n        if (this.showTId) {\n            clearTimeout(this.showTId);\n        }\n\n        this.hideTId = setTimeout(() => {\n            this.mcVisible = false;\n            this.mcVisibleChange.emit(false);\n            this._onHide.next();\n\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }, this.mcMouseLeaveDelay);\n    }\n\n    setClassMap(): void {\n        this._classMap = {\n            [ `${this._prefix}-${this._placement}` ]: true\n        };\n    }\n\n    isContentEmpty(): boolean {\n        return this.isTitleString ? (this.mcTitle === '' || !this.mcTitle) : false;\n    }\n\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden(): Observable<void> {\n        return this._onHide.asObservable();\n    }\n\n    _markForCheck(): void {\n        this.cdr.markForCheck();\n    }\n\n    _handleBodyInteraction(): void {\n        if (this._closeOnInteraction) {\n            this.hide();\n        }\n    }\n}\n\nexport const MC_TOOLTIP_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-tooltip-scroll-strategy');\n\n/** @docs-private */\nexport function MC_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition({scrollThrottle: 20});\n}\n\n/** @docs-private */\nexport const MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_TOOLTIP_SCROLL_STRATEGY_FACTORY\n};\n\n/** Creates an error to be thrown if the user supplied an invalid tooltip position. */\nexport function getMcTooltipInvalidPositionError(position: string) {\n    return Error(`McTooltip position \"${position}\" is invalid.`);\n}\n\nconst VIEWPORT_MARGIN: number = 8;\n\n@Directive({\n    selector: '[mc-tooltip]',\n    host: {\n        '(keydown)': 'handleKeydown($event)',\n        '(touchend)': 'handleTouchend()'\n    }\n})\n\nexport class McTooltipDirective implements OnInit, OnDestroy {\n    isTooltipOpen: boolean = false;\n    isDynamicTooltip = false;\n    parentDisabled: boolean = false;\n    _title: string;\n    _disabled: boolean = false;\n    _mouseEnterDelay: number;\n    _mouseLeaveDelay: number;\n    _visible: boolean;\n    _trigger: string = 'hover';\n    _placement: string = 'top';\n    _overlayRef: OverlayRef | null;\n    _portal: ComponentPortal<McToolTipComponent>;\n    availablePositions: any;\n    tooltip: McToolTipComponent | null;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n    private $unsubscribe = new Subject<void>();\n\n    @Input('mc-tooltip')\n    set mcTitle(title: string) {\n        this._title = title;\n        this.updateCompValue('mcTitle', title);\n    }\n\n    get mcTitle(): string {\n        return this._title;\n    }\n\n    @Input('mcTitle')\n    set setTitle(title: string) {\n        this.mcTitle = title;\n    }\n\n    @Input('mcTooltipDisabled')\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    @Input('mcMouseEnterDelay')\n    set mcMouseEnterDelay(value: number) {\n        this._mouseEnterDelay = value;\n        this.updateCompValue('mcMouseEnterDelay', value);\n    }\n\n    get mcMouseEnterDelay(): number {\n        return this._mouseEnterDelay;\n    }\n\n    @Input('mcMouseLeaveDelay')\n    set mcMouseLeaveDelay(value: number) {\n        this._mouseLeaveDelay = value;\n        this.updateCompValue('mcMouseLeaveDelay', value);\n    }\n\n    get mcMouseLeaveDelay(): number {\n        return this._mouseEnterDelay;\n    }\n\n    @Input('mcVisible')\n    set mcVisible(value: boolean) {\n        this._visible = value;\n        this.updateCompValue('mcVisible', value);\n    }\n\n    get mcVisible(): boolean {\n        return this._visible;\n    }\n\n    @Input('mcTrigger')\n    set mcTrigger(value: string) {\n        this._trigger = value;\n        this.updateCompValue('mcTrigger', value);\n    }\n\n    get mcTrigger(): string {\n        return this._trigger;\n    }\n\n    @Input('mcPlacement')\n    set mcPlacement(value: string) {\n        if (value) {\n            this._placement = value;\n            this.updateCompValue('mcPlacement', value);\n        } else {\n            this._placement = 'top';\n        }\n    }\n\n    get mcPlacement(): string {\n        return this._placement;\n    }\n\n    @HostBinding('class.mc-tooltip-open')\n    get isOpen(): boolean {\n        return this.isTooltipOpen;\n    }\n\n    @HostBinding('class.disabled')\n    get isParentDisabled(): boolean {\n        return this.parentDisabled;\n    }\n\n    private manualListeners = new Map<string, EventListenerOrEventListenerObject>();\n    private readonly _destroyed = new Subject<void>();\n\n    constructor(\n        private _overlay: Overlay,\n        private elementRef: ElementRef,\n        private _ngZone: NgZone,\n        private _scrollDispatcher: ScrollDispatcher,\n        private hostView: ViewContainerRef,\n        @Inject(MC_TOOLTIP_SCROLL_STRATEGY) private _scrollStrategy,\n        @Optional() private _dir: Directionality) {\n            this.availablePositions = POSITION_MAP;\n        }\n\n    /** Create the overlay config and position strategy */\n    _createOverlay(): OverlayRef {\n        if (this._overlayRef) {\n            return this._overlayRef;\n        }\n\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this.elementRef)\n            .withTransformOriginOn('.mc-tooltip')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(VIEWPORT_MARGIN)\n            .withPositions([ ...DEFAULT_4_POSITIONS ]);\n\n        const scrollableAncestors = this._scrollDispatcher\n            .getAncestorScrollContainers(this.elementRef);\n\n        strategy.withScrollableContainers(scrollableAncestors);\n\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe((change) => {\n            if (this.tooltip) {\n                this.onPositionChange(change);\n                if (change.scrollableViewProperties.isOverlayClipped && this.tooltip.mcVisible) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run(() => this.hide());\n                }\n            }\n        });\n\n        this._overlayRef = this._overlay.create({\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: 'mc-tooltip-panel',\n            scrollStrategy: this._scrollStrategy()\n        });\n\n        this._updatePosition();\n\n        this._overlayRef.detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n\n        return this._overlayRef;\n    }\n\n    _detach() {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n\n        this.tooltip = null;\n    }\n\n    onPositionChange($event: ConnectedOverlayPositionChange): void {\n        let updatedPlacement = this.mcPlacement;\n        Object.keys(this.availablePositions).some((key) => {\n            if ($event.connectionPair.originX === this.availablePositions[key].originX &&\n                $event.connectionPair.originY === this.availablePositions[key].originY &&\n                $event.connectionPair.overlayX === this.availablePositions[key].overlayX &&\n                $event.connectionPair.overlayY === this.availablePositions[key].overlayY) {\n                updatedPlacement = key;\n\n                return true;\n            }\n\n            return false;\n        });\n        this.updateCompValue('mcPlacement', updatedPlacement);\n\n        if (this.tooltip) {\n            this.tooltip.setClassMap();\n        }\n\n        this.handlePositioningUpdate();\n    }\n\n    handlePositioningUpdate() {\n        if (!this._overlayRef) {\n            this._overlayRef = this._createOverlay();\n        }\n        if (this.mcPlacement === 'right' || this.mcPlacement === 'left') {\n            const pos =\n                (this._overlayRef.overlayElement.clientHeight -\n                    this.hostView.element.nativeElement.clientHeight) / 2; // tslint:disable-line\n            const currentContainer = this._overlayRef.overlayElement.style.top || '0px';\n            this._overlayRef.overlayElement.style.top =\n                `${parseInt(currentContainer.split('px')[0], 10) + pos - 1}px`;\n            // TODO: обновлять положение стрелки\\указателя\\\"дятла\"\n        }\n    }\n\n    // tslint:disable-next-line:no-any\n    updateCompValue(key: string, value: any): void {\n        if (this.isDynamicTooltip && value) {\n            if (this.tooltip) {\n                this.tooltip[key] = value;\n            }\n        }\n    }\n\n    ngOnInit(): void {\n        if (this.mcTrigger === 'hover') {\n\n            this.manualListeners\n                .set('mouseenter', () => this.show())\n                .set('mouseleave', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n\n        if (this.mcTrigger === 'focus') {\n\n            this.manualListeners\n                .set('focus', () => this.show())\n                .set('blur', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n    }\n\n    ngOnDestroy(): void {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n        this.manualListeners.forEach((listener, event) =>\n            this.elementRef.nativeElement.removeEventListener(event, listener));\n        this.manualListeners.clear();\n\n        this.$unsubscribe.next();\n        this.$unsubscribe.complete();\n    }\n\n    handleKeydown(e: KeyboardEvent) {\n        if (this.isTooltipOpen && e.keyCode === ESCAPE) { // tslint:disable-line\n            this.hide();\n        }\n    }\n\n    handleTouchend() {\n        this.hide();\n    }\n\n    /** Updates the position of the current tooltip. */\n    _updatePosition() {\n        if (!this._overlayRef) {\n            this._overlayRef = this._createOverlay();\n        }\n        const position =\n            this._overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\n        const origin = this._getOrigin();\n        const overlay = this._getOverlayPosition();\n\n        position.withPositions([\n            {...origin.main, ...overlay.main},\n            {...origin.fallback, ...overlay.fallback}\n        ]);\n    }\n\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    _getOrigin(): {main: IOriginConnectionPosition; fallback: IOriginConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this._dir || this._dir.value === 'ltr';\n        let originPosition: IOriginConnectionPosition;\n\n        if (position === 'top' || position === 'bottom') {\n            originPosition = {originX: 'center', originY: position === 'top' ? 'top' : 'bottom'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            originPosition = {originX: 'start', originY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            originPosition = {originX: 'end', originY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this._invertPosition(originPosition.originX, originPosition.originY);\n\n        return {\n            main: originPosition,\n            fallback: {originX: x, originY: y}\n        };\n    }\n\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    _getOverlayPosition(): {main: IOverlayConnectionPosition; fallback: IOverlayConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this._dir || this._dir.value === 'ltr';\n        let overlayPosition: IOverlayConnectionPosition;\n\n        if (position === 'top') {\n            overlayPosition = {overlayX: 'center', overlayY: 'bottom'};\n        } else if (position === 'bottom') {\n            overlayPosition = {overlayX: 'center', overlayY: 'top'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            overlayPosition = {overlayX: 'end', overlayY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            overlayPosition = {overlayX: 'start', overlayY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n\n        return {\n            main: overlayPosition,\n            fallback: {overlayX: x, overlayY: y}\n        };\n    }\n\n    /** Inverts an overlay position. */\n    private _invertPosition(x: HorizontalConnectionPos, y: VerticalConnectionPos) {\n        let newX: HorizontalConnectionPos = x;\n        let newY: VerticalConnectionPos = y;\n        if (this.mcPlacement === 'top' || this.mcPlacement === 'bottom') {\n            if (y === 'top') {\n                newY = 'bottom';\n            } else if (y === 'bottom') {\n                newY = 'top';\n            }\n        } else {\n            if (x === 'end') {\n                newX = 'start';\n            } else if (x === 'start') {\n                newX = 'end';\n            }\n        }\n\n        return {x: newX, y: newY};\n    }\n\n    private show(): void {\n        if (!this.disabled) {\n            if (!this.tooltip) {\n                const overlayRef = this._createOverlay();\n                this._detach();\n                this._portal = this._portal || new ComponentPortal(McToolTipComponent, this.hostView);\n                this.tooltip = overlayRef.attach(this._portal).instance;\n                this.tooltip.afterHidden()\n                    .pipe(takeUntil(this._destroyed))\n                    .subscribe(() => this._detach());\n                this.isDynamicTooltip = true;\n                const properties = [\n                    'mcTitle',\n                    'mcMouseEnterDelay',\n                    'mcMouseLeaveDelay',\n                    'mcVisible',\n                    'mcTrigger',\n                    'mcPlacement' ];\n                properties.forEach((property) => this.updateCompValue(property, this[ property ]));\n                this.tooltip.mcVisibleChange.pipe(takeUntil(this.$unsubscribe), distinctUntilChanged())\n                    .subscribe((data) => {\n                        this._visible = data;\n                        this.mcVisibleChange.emit(data);\n                    });\n            }\n            this._updatePosition();\n            this.tooltip.show();\n            this.isTooltipOpen = true;\n        }\n    }\n\n    private hide(): void {\n        if (this.tooltip) {\n            this.tooltip.hide();\n            this.isTooltipOpen = false;\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport {\n    McToolTipComponent,\n    McTooltipDirective,\n    MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER\n} from './tooltip.component';\n\n\n@NgModule({\n    declarations: [ McToolTipComponent, McTooltipDirective ],\n    exports: [ McToolTipComponent, McTooltipDirective ],\n    imports: [ BrowserAnimationsModule, CommonModule, OverlayModule ],\n    providers: [MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n    entryComponents: [ McToolTipComponent ]\n})\nexport class McToolTipModule {\n}\n","import { Version } from '@angular/core';\n\n\nexport const VERSION = new Version('0.0.1-0513bc5');\n","export enum TimeParts {\n    hours,\n    minutes,\n    seconds\n}\n\nexport enum TimeFormats {\n    HHmmss = 'HH:mm:ss',\n    HHmm = 'HH:mm'\n}\n\nexport const TIMEFORMAT_PLACEHOLDERS: { [timeFormat: string]: string } = {\n    'hh:mm:ss': '  :  :  ',\n    'hh:mm': '  :  '\n};\n\nexport const DEFAULT_TIME_FORMAT: TimeFormats = TimeFormats.HHmm;\n\nexport const HOURS_MINUTES_SECONDS_REGEXP =\n    new RegExp(/^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9]):([0-5][0-9]|[0-9])?$/);\nexport const HOURS_MINUTES_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9])?$/;\nexport const HOURS_ONLY_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):?$/;\n\nexport const SECONDS_PER_MINUTE: number = 59;\nexport const MINUTES_PER_HOUR: number = 59;\nexport const HOURS_PER_DAY: number = 23;\n\n// TODO Move it to common CDK\nexport const ARROW_UP_KEYCODE: string = 'ArrowUp';\nexport const ARROW_DOWN_KEYCODE: string = 'ArrowDown';\nexport const ARROW_LEFT_KEYCODE: string = 'ArrowLeft';\nexport const ARROW_RIGHT_KEYCODE: string = 'ArrowRight';\n","/* tslint:disable:no-empty */\n\nimport { ActiveDescendantKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    RIGHT_ARROW,\n    SPACE,\n    UP_ARROW,\n    A\n} from '@ptsecurity/cdk/keycodes';\nimport {\n    CdkConnectedOverlay,\n    Overlay,\n    RepositionScrollStrategy,\n    IScrollStrategy,\n    ViewportRuler\n} from '@ptsecurity/cdk/overlay';\n\nimport {\n    AfterContentInit, AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren,\n    Directive,\n    DoCheck,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    isDevMode,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    QueryList, Renderer2,\n    Self,\n    SimpleChanges,\n    ViewChild, ViewChildren,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport {\n    _countGroupLabelsBeforeOption,\n    _getOptionScrollPosition,\n    CanDisable,\n    CanDisableCtor,\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    HasTabIndex, HasTabIndexCtor,\n    MC_OPTION_PARENT_COMPONENT,\n    McOptgroup,\n    McOption,\n    McOptionSelectionChange,\n    mixinDisabled,\n    mixinErrorState,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\nimport { McFormField, McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { McTag } from '@ptsecurity/mosaic/tag';\n\n\nimport { defer, merge, Observable, Subject } from 'rxjs';\nimport {\n    filter,\n    map,\n    startWith,\n    switchMap,\n    take,\n    takeUntil,\n    distinctUntilChanged\n} from 'rxjs/operators';\n\nimport {\n    getMcSelectDynamicMultipleError,\n    getMcSelectNonArrayValueError,\n    getMcSelectNonFunctionValueError\n} from './select-errors';\n\nimport { mcSelectAnimations } from './select-animations';\n\n\nlet nextUniqueId = 0;\n\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n\n/** The max height of the select's overlay panel */\nexport const SELECT_PANEL_MAX_HEIGHT = 224;\n\n/** The panel's padding on the x-axis */\nexport const SELECT_PANEL_PADDING_X = 1;\n\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\n/* tslint:disable-next-line:no-magic-numbers */\nexport const SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n\n/** The height of the select items in `em` units. */\nexport const SELECT_ITEM_HEIGHT_EM = 2;\n\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nexport const SELECT_PANEL_VIEWPORT_PADDING = 8;\n\n/** Injection token that determines the scroll handling while a select is open. */\nexport const MC_SELECT_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-select-scroll-strategy');\n\n/** @docs-private */\nexport function MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => RepositionScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MC_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n\n/** Change event object that is emitted when the select value has changed. */\nexport class McSelectChange {\n    constructor(\n        /** Reference to the select that emitted the change event. */\n        public source: McSelect,\n        /** Current value of the select that emitted the event. */\n        public value: any) {\n    }\n}\n\n// Boilerplate for applying mixins to McSelect.\n/** @docs-private */\nexport class McSelectBase {\n    constructor(\n        public _elementRef: ElementRef,\n        public _defaultErrorStateMatcher: ErrorStateMatcher,\n        public _parentForm: NgForm,\n        public _parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl\n    ) {}\n}\n\nexport const _McSelectMixinBase:\n    CanDisableCtor &\n    HasTabIndexCtor &\n    CanUpdateErrorStateCtor & typeof McSelectBase\n    = mixinTabIndex(mixinDisabled(mixinErrorState(McSelectBase)));\n\n\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\n@Directive({ selector: 'mc-select-trigger' })\nexport class McSelectTrigger {}\n\n\n@Component({\n    selector: 'mc-select',\n    exportAs: 'mcSelect',\n    templateUrl: 'select.html',\n    styleUrls: ['./select.css'],\n    inputs: ['disabled', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'tabIndex',\n        class: 'mc-select',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-select-invalid]': 'errorState',\n        '[class.mc-select-required]': 'required',\n        '(keydown)': '_handleKeydown($event)',\n        '(focus)': '_onFocus()',\n        '(blur)': '_onBlur()',\n        '(window:resize)': '_calculateHiddenItems()'\n    },\n    animations: [\n        mcSelectAnimations.transformPanel,\n        mcSelectAnimations.fadeInContent\n    ],\n    providers: [\n        { provide: McFormFieldControl, useExisting: McSelect },\n        { provide: MC_OPTION_PARENT_COMPONENT, useExisting: McSelect }\n    ]\n})\nexport class McSelect extends _McSelectMixinBase implements\n    AfterContentInit, AfterViewInit, OnChanges, OnDestroy, OnInit, DoCheck, ControlValueAccessor, CanDisable,\n    HasTabIndex, McFormFieldControl<any>, CanUpdateErrorState {\n\n    /** The last measured value for the trigger's client bounding rect. */\n    _triggerRect: ClientRect;\n\n    /** The cached font-size of the trigger element. */\n    _triggerFontSize = 0;\n\n    /** Deals with the selection logic. */\n    _selectionModel: SelectionModel<McOption>;\n\n    /** Manages keyboard events for options in the panel. */\n    _keyManager: ActiveDescendantKeyManager<McOption>;\n\n    /** The IDs of child options to be passed to the aria-owns attribute. */\n    _optionIds: string = '';\n\n    /** The value of the select panel's transform-origin property. */\n    _transformOrigin: string = 'top';\n\n    /** Whether the panel's animation is done. */\n    _panelDoneAnimating: boolean = false;\n\n    /** Emits when the panel element is finished transforming in. */\n    _panelDoneAnimatingStream = new Subject<string>();\n\n    /** Strategy that will be used to handle scrolling while the select panel is open. */\n    _scrollStrategy = this._scrollStrategyFactory();\n\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     */\n    _offsetY = 0;\n\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     */\n    _positions = [\n        {\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top'\n        },\n        {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'bottom'\n        }\n    ];\n\n    /** Whether the select is focused. */\n    get focused(): boolean {\n        return this._focused || this._panelOpen;\n    }\n\n    /**\n     * @deprecated Setter to be removed as this property is intended to be readonly.\n     * @breaking-change 8.0.0\n     */\n    set focused(value: boolean) {\n        this._focused = value;\n    }\n\n    /** A name for this control that can be used by `mc-form-field`. */\n    controlType = 'mc-select';\n\n    @ViewChild('trigger') trigger: ElementRef;\n    @ViewChildren(McTag) tags: QueryList<McTag>;\n\n    @ViewChild('panel') panel: ElementRef;\n\n    /** Overlay pane containing the options. */\n    @ViewChild(CdkConnectedOverlay) overlayDir: CdkConnectedOverlay;\n\n    /** All of the defined select options. */\n    @ContentChildren(McOption, { descendants: true }) options: QueryList<McOption>;\n\n    /** All of the defined groups of options. */\n    @ContentChildren(McOptgroup) optionGroups: QueryList<McOptgroup>;\n\n    /** Classes to be passed to the select panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[] | Set<string> | { [key: string]: any };\n\n    /** User-supplied override of the trigger element. */\n    @ContentChild(McSelectTrigger) customTrigger: McSelectTrigger;\n\n    /** Placeholder to be shown if no value has been selected. */\n    @Input()\n    get placeholder(): string {\n        return this._placeholder;\n    }\n\n    set placeholder(value: string) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n\n    /** Whether the component is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n\n    /** Whether the user should be allowed to select multiple options. */\n    @Input()\n    get multiple(): boolean {\n        return this._multiple;\n    }\n\n    set multiple(value: boolean) {\n        if (this._selectionModel) {\n            throw getMcSelectDynamicMultipleError();\n        }\n\n        this._multiple = coerceBooleanProperty(value);\n    }\n\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    @Input()\n    get compareWith() {\n        return this._compareWith;\n    }\n\n    set compareWith(fn: (o1: any, o2: any) => boolean) {\n        /* tslint:disable-next-line:strict-type-predicates */\n        if (typeof fn !== 'function') {\n            throw getMcSelectNonFunctionValueError();\n        }\n\n        this._compareWith = fn;\n\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n\n    /** Value of the select control. */\n    @Input()\n    get value(): any {\n        return this._value;\n    }\n\n    set value(newValue: any) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n\n    /** Object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     */\n    @Input() sortComparator: (a: McOption, b: McOption, options: McOption[]) => number;\n\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n\n    /** Combined stream of all of the child options' change events. */\n    readonly optionSelectionChanges: Observable<McOptionSelectionChange> = defer(() => {\n        if (this.options) {\n            return merge(...this.options.map((option) => option.onSelectionChange));\n        }\n\n        return this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n    });\n\n    /** Event emitted when the select panel has been toggled. */\n    @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the select has been opened. */\n    @Output('opened') readonly _openedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => o), map(() => {}));\n\n    /** Event emitted when the select has been closed. */\n    @Output('closed') readonly _closedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => !o), map(() => {}));\n\n    /** Event emitted when the selected value has been changed by the user. */\n    @Output() readonly selectionChange: EventEmitter<McSelectChange> = new EventEmitter<McSelectChange>();\n\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n    hiddenItems: number = 0;\n\n    /** Whether or not the overlay panel is open. */\n    private _panelOpen = false;\n\n    /** Whether filling out the select is required in the form. */\n    private _required: boolean = false;\n\n    /** The scroll position of the overlay panel, calculated to center the selected option. */\n    private _scrollTop = 0;\n\n    /** The placeholder displayed in the trigger of the select. */\n    private _placeholder: string;\n\n    /** Whether the component is in multiple selection mode. */\n    private _multiple: boolean = false;\n\n    /** Unique id for this input. */\n    private readonly _uid = `mc-select-${nextUniqueId++}`;\n\n    /** Emits whenever the component is destroyed. */\n    private readonly _destroy = new Subject<void>();\n\n    private _focused = false;\n\n    private _value: any;\n\n    private _id: string;\n\n    constructor(\n        private readonly _viewportRuler: ViewportRuler,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        private readonly _ngZone: NgZone,\n        private readonly _renderer: Renderer2,\n        _defaultErrorStateMatcher: ErrorStateMatcher,\n        elementRef: ElementRef,\n        @Optional() private readonly _dir: Directionality,\n        @Optional() _parentForm: NgForm,\n        @Optional() _parentFormGroup: FormGroupDirective,\n        @Optional() private readonly _parentFormField: McFormField,\n        @Self() @Optional() public ngControl: NgControl,\n        @Attribute('tabindex') tabIndex: string,\n        @Inject(MC_SELECT_SCROLL_STRATEGY) private readonly _scrollStrategyFactory\n    ) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnInit() {\n        this._selectionModel = new SelectionModel<McOption>(this.multiple);\n        this.stateChanges.next();\n\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe(() => {\n                if (this.panelOpen) {\n                    this._scrollTop = 0;\n                    this.openedChange.emit(true);\n                } else {\n                    this.openedChange.emit(false);\n                    this._panelDoneAnimating = false;\n                    this.overlayDir.offsetX = 0;\n                    this._changeDetectorRef.markForCheck();\n                }\n            });\n    }\n\n    ngAfterContentInit() {\n        this._initKeyManager();\n\n        this._selectionModel.onChange!\n            .pipe(takeUntil(this._destroy))\n            .subscribe((event) => {\n                event.added.forEach((option) => option.select());\n                event.removed.forEach((option) => option.deselect());\n            });\n\n        this.options.changes\n            .pipe(startWith(null), takeUntil(this._destroy))\n            .subscribe(() => {\n                this._resetOptions();\n                this._initializeSelection();\n            });\n    }\n\n    ngAfterViewInit(): void {\n        this.tags.changes\n            .subscribe(() => {\n                setTimeout(() => this._calculateHiddenItems(), 0);\n            });\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) { this.updateErrorState(); }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes.disabled) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n\n    /** `View -> model callback called when value changes` */\n    _onChange: (value: any) => void = () => {};\n\n    /** `View -> model callback called when select has been touched` */\n    _onTouched = () => {};\n\n    /** Toggles the overlay panel open or closed. */\n    toggle(): void {\n        if (this.panelOpen) {\n            this.close();\n        } else {\n            this.open();\n        }\n    }\n\n    /** Opens the overlay panel. */\n    open(): void {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) { return; }\n\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement)['font-size']);\n\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                    this.overlayDir.overlayRef.overlayElement) {\n                    this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n                }\n            });\n    }\n\n    /** Closes the overlay panel and focuses the host element. */\n    close(): void {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value: any): void {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn: () => {}): void {\n        this._onTouched = fn;\n    }\n\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n\n    get panelOpen(): boolean {\n        return this._panelOpen;\n    }\n\n    get selected(): McOption | McOption[] {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n\n    get triggerValue(): string {\n        if (this.empty) { return ''; }\n\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map((option) => option.viewValue);\n\n            if (this._isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions.join(', ');\n        }\n\n        return this._selectionModel.selected[0].viewValue;\n    }\n\n    get triggerValues(): McOption[] {\n        if (this.empty) { return []; }\n\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected;\n\n            if (this._isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions;\n        }\n\n        return [this._selectionModel.selected[0]];\n    }\n\n    get empty(): boolean {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n\n    _isRtl(): boolean {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n\n    _handleKeydown(event: KeyboardEvent): void {\n        if (!this.disabled) {\n            if (this.panelOpen) {\n                this._handleOpenKeydown(event);\n            } else {\n                this._handleClosedKeydown(event);\n            }\n        }\n    }\n\n    /**\n     * When the panel content is done fading in, the _panelDoneAnimating property is\n     * set so the proper class can be added to the panel.\n     */\n    _onFadeInDone(): void {\n        this._panelDoneAnimating = this.panelOpen;\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached(): void {\n        this.overlayDir.positionChange\n            .pipe(take(1))\n            .subscribe(() => {\n                this._changeDetectorRef.detectChanges();\n                this._calculateOverlayOffsetX();\n                this.panel.nativeElement.scrollTop = this._scrollTop;\n            });\n    }\n\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme(): string {\n        return this._parentFormField ? `mc-${this._parentFormField.color}` : '';\n    }\n\n    /** Focuses the select element. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    _calculateOverlayScroll(selectedIndex: number, scrollBuffer: number, maxScroll: number): number {\n        const itemHeight = this._getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n\n        /* tslint:disable-next-line:no-magic-numbers */\n        const halfOptionHeight = itemHeight / 2;\n\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n\n    /** Invoked when an option is clicked. */\n    onRemoveMatcherItem(option: McOption, $event): void {\n        $event.stopPropagation();\n\n        option.deselect();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat(): boolean {\n        return this._panelOpen || !this.empty;\n    }\n\n    _calculateHiddenItems(): void {\n        if (this.empty) { return; }\n\n        let visibleItems: number = 0;\n        const totalItemsWidth = this._getTotalItemsWidthInMatcher();\n        let totalVisibleItemsWidth: number = 0;\n        const itemMargin: number = 4;\n\n        this.tags.forEach((tag) => {\n            if (tag.nativeElement.offsetTop < tag.nativeElement.offsetHeight) {\n                totalVisibleItemsWidth += tag.nativeElement.getBoundingClientRect().width + itemMargin;\n                visibleItems++;\n            }\n        });\n\n        this.hiddenItems = (this.selected as ArrayLike<McOption>).length - visibleItems;\n\n        if (this.hiddenItems) {\n            const itemsCounter = this.trigger.nativeElement.querySelector('.mc-select__match-hidden-text');\n            const matcherList = this.trigger.nativeElement.querySelector('.mc-select__match-list');\n\n            const itemsCounterShowed = itemsCounter.offsetTop < itemsCounter.offsetHeight;\n            // const itemsCounterWidth: number = itemsCounter.getBoundingClientRect().width;\n            const itemsCounterWidth: number = 86;\n\n            const matcherListWidth: number = matcherList.getBoundingClientRect().width;\n            const matcherWidth: number = matcherListWidth + itemsCounterWidth;\n\n            if (itemsCounterShowed && (totalItemsWidth < matcherWidth)) { this.hiddenItems = 0; }\n\n            if (\n                totalVisibleItemsWidth === matcherListWidth ||\n                (totalVisibleItemsWidth + itemsCounterWidth) < matcherListWidth\n            ) {\n                this._changeDetectorRef.markForCheck();\n\n                return ;\n            } else if (!itemsCounterShowed && (totalItemsWidth + itemsCounterWidth) > matcherWidth) {\n                this.hiddenItems++;\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    private _getTotalItemsWidthInMatcher(): number {\n        const triggerClone = this.trigger.nativeElement.cloneNode(true);\n        triggerClone.querySelector('.mc-select__match-hidden-text').remove();\n\n        this._renderer.setStyle(triggerClone, 'position', 'absolute');\n        this._renderer.setStyle(triggerClone, 'visibility', 'hidden');\n        this._renderer.setStyle(triggerClone, 'top', '-100%');\n        this._renderer.setStyle(triggerClone, 'left', '0');\n\n        this._renderer.appendChild(this.trigger.nativeElement, triggerClone);\n\n        let totalItemsWidth: number = 0;\n        const itemMargin: number = 4;\n        triggerClone.querySelectorAll('mc-tag').forEach((item) => {\n            totalItemsWidth += item.getBoundingClientRect().width as number + itemMargin;\n        });\n\n        triggerClone.remove();\n\n        return totalItemsWidth;\n    }\n\n    /** Handles keyboard events while the select is closed. */\n    private _handleClosedKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n\n        // Open the select on ALT + arrow key to match the native <select>\n        if (isOpenKey || ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        } else if (!this.multiple) {\n            this._keyManager.onKeydown(event);\n        }\n    }\n\n    /** Handles keyboard events when the selected is open. */\n    private _handleOpenKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const manager = this._keyManager;\n\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n\n            if (keyCode === HOME) {\n                manager.setFirstItemActive();\n            } else {\n                manager.setLastItemActive();\n            }\n\n        } else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n        } else if ((keyCode === ENTER || keyCode === SPACE) && manager.activeItem) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        } else if (this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some((option) => !option.selected);\n            this.options.forEach((option) => {\n                if (hasDeselectedOptions && !option.disabled) {\n                    option.select();\n                } else {\n                    option.deselect();\n                }\n            });\n        } else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n\n            manager.onKeydown(event);\n\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n\n    private _initializeSelection(): void {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n        });\n    }\n\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    private _setSelectionByValue(value: any | any[]): void {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMcSelectNonArrayValueError();\n            }\n\n            this._selectionModel.clear();\n            value.forEach((currentValue: any) => this._selectValue(currentValue));\n            this._sortValues();\n        } else {\n            this._selectionModel.clear();\n            const correspondingOption = this._selectValue(value);\n\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    private _selectValue(value: any): McOption | undefined {\n        const correspondingOption = this.options.find((option: McOption) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            } catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n\n                return false;\n            }\n        });\n\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n\n        return correspondingOption;\n    }\n\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    private _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager<McOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n\n        this._keyManager.tabOut\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            });\n\n        this._keyManager.change\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n                if (this._panelOpen && this.panel) {\n                    this._scrollActiveOptionIntoView();\n                } else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n            });\n    }\n\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    private _resetOptions(): void {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n\n        this.optionSelectionChanges\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((event) => {\n                this._onSelect(event.source, event.isUserInput);\n\n                if (event.isUserInput && !this.multiple && this._panelOpen) {\n                    this.close();\n                    this.focus();\n                }\n            });\n\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((option) => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n                this.stateChanges.next();\n            });\n\n        this._setOptionIds();\n    }\n\n    /** Invoked when an option is clicked. */\n    private _onSelect(option: McOption, isUserInput: boolean): void {\n        const wasSelected = this._selectionModel.isSelected(option);\n\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        } else {\n            if (option.selected) {\n                this._selectionModel.select(option);\n            } else {\n                this._selectionModel.deselect(option);\n            }\n\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n\n            if (this.multiple) {\n                this._sortValues();\n\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mc-option`.\n                    this.focus();\n                }\n            }\n        }\n\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n\n        this.stateChanges.next();\n    }\n\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    private _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n\n    /** Emits change event to set the model value. */\n    private _propagateChanges(fallbackValue?: any): void {\n        let valueToEmit: any = null;\n\n        if (this.multiple) {\n            valueToEmit = (this.selected as McOption[]).map((option) => option.value);\n        } else {\n            valueToEmit = this.selected ? (this.selected as McOption).value : fallbackValue;\n        }\n\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new McSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /** Records option IDs to pass to the aria-owns property. */\n    private _setOptionIds() {\n        this._optionIds = this.options.map((option) => option.id).join(' ');\n    }\n\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    private _highlightCorrectOption(): void {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            } else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n\n    /** Scrolls the active option into view. */\n    private _scrollActiveOptionIntoView(): void {\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(\n            activeOptionIndex + labelCount,\n            this._getItemHeight(),\n            this.panel.nativeElement.scrollTop,\n            SELECT_PANEL_MAX_HEIGHT\n        );\n    }\n\n    /** Gets the index of the provided option in the option list. */\n    private _getOptionIndex(option: McOption): number | undefined {\n        /* tslint:disable-next-line */\n        return this.options.reduce((result: number, current: McOption, index: number) => {\n            /* tslint:disable-next-line:strict-type-predicates */\n            return result === undefined ? (option === current ? index : undefined) : result;\n        }, undefined);\n    }\n\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    private _calculateOverlayPosition(): void {\n        const itemHeight = this._getItemHeight();\n        const items = this._getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset =\n            this.empty ? 0 : this._getOptionIndex(this._selectionModel.selected[0])!;\n\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options,\n            this.optionGroups);\n\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /* tslint:disable-next-line:no-magic-numbers */\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY();\n\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    private _calculateOverlayOffsetX(): void {\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this._isRtl();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const paddingWidth = SELECT_PANEL_PADDING_X * 2;\n        let offsetX: number;\n\n        const selected = this._selectionModel.selected[0] || this.options.first;\n        offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n\n        // Invert the offset in LTR.\n        if (!isRtl) { offsetX *= -1; }\n\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        } else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    private _calculateOverlayOffsetY(): number {\n        // const itemHeight = this._getItemHeight();\n        // const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n\n        // todo I'm not sure that we will use it\n        return 0;\n        // return Math.round(-optionHeightAdjustment);\n    }\n\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    private _checkOverlayWithinViewport(maxScroll: number): void {\n        const itemHeight = this._getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable =\n            viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n\n        const panelHeightTop = Math.abs(this._offsetY);\n        const totalPanelHeight =\n            Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        } else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        } else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    private _adjustPanelUp(panelHeightBottom: number, bottomSpaceAvailable: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    private _adjustPanelDown(panelHeightTop: number, topSpaceAvailable: number, maxScroll: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n\n            return;\n        }\n    }\n\n    /** Sets the transform origin point based on the selected option. */\n    private _getOriginBasedOnOption(): string {\n        const itemHeight = this._getItemHeight();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /* tslint:disable-next-line:no-magic-numbers */\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n\n        return `50% ${originY}px 0px`;\n    }\n\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    private _getItemCount(): number {\n        return this.options.length + this.optionGroups.length;\n    }\n\n    /** Calculates the height of the select's options. */\n    private _getItemHeight(): number {\n        /* tslint:disable-next-line:no-magic-numbers */\n        return 32;\n        // return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n\n    /** Comparison function to specify which option is displayed. Defaults to object equality. */\n    private _compareWith = (o1: any, o2: any) => o1 === o2;\n}\n","import {\n    Directive,\n    DoCheck,\n    ElementRef,\n    forwardRef,\n    Inject,\n    InjectionToken,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Renderer2,\n    Self\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroupDirective,\n    NG_VALIDATORS,\n    NgControl,\n    NgForm,\n    ValidationErrors,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport {\n    noop,\n    Subject\n} from 'rxjs';\n\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\n\nimport {\n    ARROW_DOWN_KEYCODE,\n    ARROW_LEFT_KEYCODE,\n    ARROW_RIGHT_KEYCODE,\n    ARROW_UP_KEYCODE,\n    DEFAULT_TIME_FORMAT,\n    HOURS_PER_DAY,\n    HOURS_MINUTES_REGEXP,\n    HOURS_MINUTES_SECONDS_REGEXP,\n    HOURS_ONLY_REGEXP,\n    MINUTES_PER_HOUR,\n    SECONDS_PER_MINUTE,\n    TIMEFORMAT_PLACEHOLDERS,\n    TimeFormats,\n    TimeParts\n} from './timepicker.constants';\n\n\nlet _uniqueComponentIdSuffix: number = 0;\nlet _validatorOnChange: () => void = noop;\nlet _validator: ValidatorFn | null = () => null;\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n\nexport class McTimepickerBase {\n    constructor(\n        public _defaultErrorStateMatcher: ErrorStateMatcher,\n        public _parentForm: NgForm,\n        public _parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl) { }\n}\n\nexport const McTimepickerMixinBase:\n    CanUpdateErrorStateCtor &\n    typeof McTimepickerBase = mixinErrorState(McTimepickerBase);\n\n@Directive({\n    selector: 'input[mcTimepicker]',\n    exportAs: 'mcTimepickerInput',\n    host: {\n        class: 'mc-timepicker mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '[attr.time-format]': 'timeFormat',\n        '[attr.min-time]': 'minTime',\n        '[attr.max-time]': 'maxTime',\n        '[attr.value]': 'value',\n        '(blur)': 'onBlur()',\n        '(focus)': 'focusChanged(true)',\n        '(input)': 'onInput()',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    },\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useValue: {\n                validate(c) { return _validator ? _validator(c) : null; },\n                registerOnValidatorChange(fn: () => void): void { _validatorOnChange = fn; }\n            },\n            multi: true\n        },\n        {\n            provide: McFormFieldControl,\n            useExisting: forwardRef(() => McTimepicker)\n        }\n    ]\n\n})\nexport class McTimepicker extends McTimepickerMixinBase\n    implements McFormFieldControl<any>,\n        OnChanges,\n        OnDestroy,\n        DoCheck,\n        CanUpdateErrorState,\n        ControlValueAccessor {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-timepicker';\n\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) { return this.ngControl.disabled; }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n        }\n\n        this.stateChanges.next();\n    }\n\n    @Input()\n    get id(): string { return this._id; }\n\n    set id(value: string) { this._id = value || this._uid; }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean { return this._required; }\n\n    set required(value: boolean) { this._required = coerceBooleanProperty(value); }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string { return this._inputValueAccessor.value; }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this._applyInputChanges();\n        }\n    }\n\n    @Input('time-format')\n    get timeFormat(): TimeFormats { return this._timeFormat; }\n\n    set timeFormat(formatValue: TimeFormats) {\n        this._timeFormat = Object\n            .keys(TimeFormats)\n            .map((timeFormatKey) => TimeFormats[timeFormatKey])\n            .indexOf(formatValue) > -1 ? formatValue : DEFAULT_TIME_FORMAT;\n\n        _validatorOnChange();\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[this._timeFormat.toLowerCase()];\n    }\n\n    @Input('min-time')\n    get minTime(): string | null { return this._minTime; }\n\n    set minTime(minValue: string | null) {\n        this._minTime = minValue;\n        this._minDTime = minValue !== null ? this._getDateFromTimeString(minValue) : undefined;\n        _validatorOnChange();\n    }\n\n    @Input('max-time')\n    get maxTime(): string | null { return this._maxTime; }\n\n    set maxTime(maxValue: string | null) {\n        this._maxTime = maxValue;\n        this._maxDTime = maxValue !== null ? this._getDateFromTimeString(maxValue) : undefined;\n        _validatorOnChange();\n    }\n\n    private _id: string;\n    private readonly _uid = `mc-timepicker-${_uniqueComponentIdSuffix++}`;\n    private _disabled: boolean;\n    private _required: boolean;\n    private _previousNativeValue: any;\n    private readonly _inputValueAccessor: { value: any };\n    private _onChange: (value: any) => void;\n    private _onTouched: () => void;\n    private _timeFormat: TimeFormats;\n    private _minTime: string | null = null;\n    private _minDTime: Date | undefined;\n    private _maxTime: string | null = null;\n    private _maxDTime: Date | undefined;\n    private _currentDTimeInput: Date | undefined;\n\n    constructor(private readonly _elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any,\n                private readonly _renderer: Renderer2) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || this._elementRef.nativeElement;\n\n        this._previousNativeValue = this.value;\n        this._onChange = noop;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        // Instead of NG_VALUE_ACCESSOR (https://github.com/angular/material2/issues/8158#issuecomment-344618103)\n        if (this.ngControl) { this.ngControl.valueAccessor = this; }\n\n        // Substitute initial empty validator with validator linked to directive object instance (workaround)\n        _validator = Validators.compose([\n            () => this._parseValidator(),\n            () => this._minTimeValidator(),\n            () => this._maxTimeValidator()\n        ]);\n    }\n\n    ngOnChanges(): void {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck(): void {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    focusChanged(isFocused: boolean): void {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this._onTouched();\n            this.stateChanges.next();\n        }\n    }\n\n    onBlur() {\n        this._applyInputChanges();\n        this.focusChanged(false);\n    }\n\n    onPaste($event) {\n        $event.preventDefault();\n        const clipboardUserInput: string = $event.clipboardData.getData('text');\n\n        if (this._getDateFromTimeString(clipboardUserInput) === undefined) { return; }\n\n        this._elementRef.nativeElement.value = clipboardUserInput;\n        this.onInput();\n    }\n\n    onInput() {\n        const initialCursorStart: number = this._elementRef.nativeElement.selectionStart;\n        const initialCursorEnd: number = this._elementRef.nativeElement.selectionEnd;\n        let isAutocompleteTriggered: boolean = false;\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this._getParsedTimeParts(this._elementRef.nativeElement.value);\n\n        // tslint:disable no-magic-numbers\n        if (hoursOnly &&\n            hoursOnly[1] &&\n            hoursOnly[1].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutes &&\n            hoursAndMinutes[1].length === 1 &&\n            hoursAndMinutes[2] &&\n            hoursAndMinutes[2].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutesAndSeconds &&\n            hoursAndMinutesAndSeconds[1].length === 2 &&\n            hoursAndMinutesAndSeconds[2].length === 2 &&\n            hoursAndMinutesAndSeconds[3] &&\n            hoursAndMinutesAndSeconds[3].length === 2) {\n            isAutocompleteTriggered = true;\n        }\n        // tslint:enable no-magic-numbers\n\n        this._applyInputChanges({ doTimestringReformat: isAutocompleteTriggered });\n\n        this._elementRef.nativeElement.selectionStart = initialCursorStart;\n        this._elementRef.nativeElement.selectionEnd = initialCursorEnd;\n\n        if (isAutocompleteTriggered && this.ngControl.errors === null) {\n            this._createSelectionOfTimeComponentInInput(initialCursorStart + 1);\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this._elementRef.nativeElement.value && !this._isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    writeValue(value: Date | null): void {\n        if (value !== null) {\n            this._renderer.setProperty(this._elementRef.nativeElement,\n                'value',\n                this._getTimeStringFromDate(value, this.timeFormat)\n            );\n        }\n        this._onChange(value || null);\n        this._applyInputChanges();\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        const keyCode: string = this._getKeyCode(event);\n\n        if (keyCode === ARROW_UP_KEYCODE || keyCode === ARROW_DOWN_KEYCODE) {\n            this._upDownTimeByArrowKeys(event);\n        }\n        if (keyCode === ARROW_LEFT_KEYCODE || keyCode === ARROW_RIGHT_KEYCODE) {\n            this._switchSelectionBetweenTimeparts(event);\n        }\n    }\n\n    registerOnChange(fn: (value: Date) => void): void {\n        this._onChange = fn;\n    }\n\n    registerOnTouched(fn: () => void): void {\n        this._onTouched = fn;\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    private _dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    private _isBadInput(): boolean {\n        const validity = (<HTMLInputElement> this._elementRef.nativeElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private _applyInputChanges(applyParams: {\n        changedTime?: Date;\n        doTimestringReformat?: boolean;\n    } = {}): void {\n        const { changedTime, doTimestringReformat = true } = applyParams;\n\n        const timeToApply: Date | undefined = changedTime ||\n            this._getDateFromTimeString(this._elementRef.nativeElement.value);\n        this._currentDTimeInput = timeToApply;\n\n        if (doTimestringReformat && timeToApply !== undefined) {\n            const selectionStart: number = this._elementRef.nativeElement.selectionStart;\n            const selectionEnd: number = this._elementRef.nativeElement.selectionEnd;\n            this._renderer.setProperty(\n                this._elementRef.nativeElement,\n                'value',\n                this._getTimeStringFromDate(timeToApply, this.timeFormat));\n            this._elementRef.nativeElement.selectionStart = selectionStart;\n            this._elementRef.nativeElement.selectionEnd = selectionEnd;\n        }\n\n        (<FormControl> this.ngControl.control).updateValueAndValidity();\n        const result = this.ngControl.errors === null && timeToApply !== undefined ? timeToApply : null;\n        this._onChange(result);\n        this.stateChanges.next();\n    }\n\n    private _upDownTimeByArrowKeys(event: KeyboardEvent): void {\n        event.preventDefault();\n\n        let changedTime: Date | undefined = this._currentDTimeInput;\n        if (changedTime !== undefined) {\n            const cursorPos = this._elementRef.nativeElement.selectionStart;\n\n            const modifiedTimePart = this._getTimeEditMetrics(cursorPos)\n                .modifiedTimePart;\n            const keyCode: string = this._getKeyCode(event);\n            if (keyCode === ARROW_UP_KEYCODE) { changedTime = this._incrementTime(changedTime, modifiedTimePart); }\n            if (keyCode === ARROW_DOWN_KEYCODE) { changedTime = this._decrementTime(changedTime, modifiedTimePart); }\n            this._applyInputChanges({ changedTime });\n            this._createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    private _switchSelectionBetweenTimeparts(event: KeyboardEvent): void {\n        const changedTime: Date | undefined = this._currentDTimeInput;\n        const keyCode: string = this._getKeyCode(event);\n\n        if (changedTime !== undefined) {\n            let cursorPos: number = this._elementRef.nativeElement.selectionStart;\n            if (keyCode === ARROW_LEFT_KEYCODE) {\n                cursorPos = this._getCursorPositionOfPrevTimePartStart(cursorPos, this._elementRef.nativeElement.value);\n            } else if (keyCode === ARROW_RIGHT_KEYCODE) {\n                cursorPos = this._getCursorPositionOfNextTimePartStart(cursorPos, this._elementRef.nativeElement.value);\n            }\n            this._createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    /**\n     * @description Microsoft EDGE doesn't support KeyboaedEvent.code thus we need this helper\n     */\n    private _getKeyCode(event: KeyboardEvent): string {\n        return event.code || event.key;\n    }\n\n    private _createSelectionOfTimeComponentInInput(cursorPos: number): void {\n        setTimeout(() => {\n            const newEditParams = this._getTimeEditMetrics(cursorPos);\n            this._elementRef.nativeElement.selectionStart = newEditParams.cursorStartPosition;\n            this._elementRef.nativeElement.selectionEnd = newEditParams.cursorEndPosition;\n        });\n    }\n\n    private _incrementTime(dateVal: Date,\n                           whatToIncrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this._getTimeDigitsFromDate(dateVal);\n\n        switch (whatToIncrement) {\n            case TimeParts.hours:\n                hours++;\n                break;\n            case TimeParts.minutes:\n                minutes++;\n                break;\n            case TimeParts.seconds:\n                seconds++;\n                break;\n            default:\n        }\n\n        if (seconds > SECONDS_PER_MINUTE) { seconds = 0; }\n\n        if (minutes > MINUTES_PER_HOUR) { minutes = 0; }\n\n        if (hours > HOURS_PER_DAY) { hours = 0; }\n\n        return <Date> this._getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    /**\n     * @description Decrement part of time\n     */\n    private _decrementTime(dateVal: Date,\n                           whatToDecrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this._getTimeDigitsFromDate(dateVal);\n\n        switch (whatToDecrement) {\n            case TimeParts.hours:\n                hours--;\n                break;\n            case TimeParts.minutes:\n                minutes--;\n                break;\n            case TimeParts.seconds:\n                seconds--;\n                break;\n            default:\n        }\n\n        if (seconds < 0) { seconds = SECONDS_PER_MINUTE; }\n\n        if (minutes < 0) { minutes = MINUTES_PER_HOUR; }\n\n        if (hours < 0) { hours = HOURS_PER_DAY; }\n\n        return <Date> this._getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    private _getCursorPositionOfPrevTimePartStart(cursorPos: number, timeString: string): number {\n        return cursorPos === 0 ? timeString.length : cursorPos - 1;\n    }\n\n    private _getCursorPositionOfNextTimePartStart(cursorPos: number,\n                                                  timeString: string,\n                                                  timeDevider: string = ':'): number {\n        const nextDividerPos: number = timeString.indexOf(timeDevider, cursorPos);\n\n        return nextDividerPos !== undefined ? nextDividerPos + 1 : 0;\n    }\n\n    /**\n     * @description Get params for arrow-keys (up/down) time valie edit.\n     * @param cursorPosition Current cursor position in timeString\n     */\n    private _getTimeEditMetrics(cursorPosition: number): {\n        modifiedTimePart: TimeParts;\n        cursorStartPosition: number;\n        cursorEndPosition: number;\n    } {\n        const timeString: string = this._elementRef.nativeElement.value;\n        let modifiedTimePart: TimeParts;\n        let cursorStartPosition: number;\n        let cursorEndPosition: number;\n        const hoursIndex = 0;\n        const minutesIndex = timeString.indexOf(':', hoursIndex + 1);\n        const secondsIndex = minutesIndex !== -1 ? timeString.indexOf(':', minutesIndex + 1) : -1;\n\n        if (secondsIndex !== -1 && cursorPosition > secondsIndex) {\n            modifiedTimePart = TimeParts.seconds;\n            cursorStartPosition = secondsIndex + 1;\n            cursorEndPosition = timeString.length;\n        } else if (minutesIndex !== -1 && cursorPosition > minutesIndex) {\n            modifiedTimePart = TimeParts.minutes;\n            cursorStartPosition = minutesIndex + 1;\n            cursorEndPosition = secondsIndex > -1 ? secondsIndex : timeString.length;\n        } else {\n            modifiedTimePart = TimeParts.hours;\n            cursorStartPosition = hoursIndex;\n            cursorEndPosition = minutesIndex !== -1 ? minutesIndex : timeString.length;\n        }\n\n        return {\n            modifiedTimePart,\n            cursorStartPosition,\n            cursorEndPosition\n        };\n    }\n\n    /**\n     * @description Create time string for displaying inside input element of UI\n     */\n    private _getTimeStringFromDate(tempVal: Date,\n                                   timeFormat: TimeFormats = DEFAULT_TIME_FORMAT): string {\n        const hours: string = this._getNumberWithLeadingZero(tempVal.getHours());\n        const minutes: string = this._getNumberWithLeadingZero(tempVal.getMinutes());\n        const seconds: string = this._getNumberWithLeadingZero(tempVal.getSeconds());\n\n        const formattedTimeGenerators = {\n            [TimeFormats.HHmm]: () => `${hours}:${minutes}`,\n            [TimeFormats.HHmmss]: () => `${hours}:${minutes}:${seconds}`\n        };\n\n        return formattedTimeGenerators[timeFormat]();\n    }\n\n    private _getParsedTimeParts(timeString: string): {\n        hoursOnly: any;\n        hoursAndMinutes: any;\n        hoursAndMinutesAndSeconds: any;\n    } {\n        const hoursAndMinutesAndSeconds = timeString.match(HOURS_MINUTES_SECONDS_REGEXP);\n        const hoursAndMinutes = timeString.match(HOURS_MINUTES_REGEXP);\n        const hoursOnly = timeString.match(HOURS_ONLY_REGEXP);\n\n        return {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        };\n    }\n\n    /**\n     * @description Create Date object from separate parts of time\n     */\n    private _getDateFromTimeDigits(hours: number, minutes: number, seconds: number = 0): Date | undefined {\n        return this._getDateFromTimeString(`${hours}:${minutes}:${seconds}`);\n    }\n\n    private _getDateFromTimeString(timeString: string | undefined): Date | undefined {\n        // TODO Use moment-js\n        if (timeString === undefined) { return; }\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this._getParsedTimeParts(timeString);\n\n        if (timeString.trim().length === 0 ||\n            hoursOnly === null && hoursAndMinutes === null && hoursAndMinutesAndSeconds === null) {\n            return;\n        }\n\n        // tslint:disable no-magic-numbers\n        let hours: number = 0;\n        let minutes: number = 0;\n        let seconds: number = 0;\n\n        if (hoursOnly) {\n            hours = Number(hoursOnly[1]);\n        } else if (hoursAndMinutes) {\n            hours = Number(hoursAndMinutes[1]);\n            minutes = Number(hoursAndMinutes[2]);\n        } else if (hoursAndMinutesAndSeconds) {\n            hours = Number(hoursAndMinutesAndSeconds[1]);\n            minutes = Number(hoursAndMinutesAndSeconds[2]);\n            seconds = Number(hoursAndMinutesAndSeconds[3]);\n        }\n        // const timestamp: number = Date.parse(fullDateString);\n        const resultDate: Date = new Date(1970, 0, 1, hours, minutes, seconds);\n        // tslint:enable no-magic-numbers\n\n        return isNaN(resultDate.getTime()) ? undefined : resultDate;\n    }\n\n    private _getNumberWithLeadingZero(digit: number): string {\n        const MAX_DIGIT_WITH_LEADING_ZERO: number = 9;\n\n        return digit > MAX_DIGIT_WITH_LEADING_ZERO ? `${digit}` : `0${digit}`;\n    }\n\n    private _getTimeDigitsFromDate(dateVal: Date): { hours: number; minutes: number; seconds: number } {\n        return {\n            hours: dateVal.getHours(),\n            minutes: dateVal.getMinutes(),\n            seconds: dateVal.getSeconds()\n        };\n    }\n\n    private _parseValidator(): ValidationErrors | null {\n        return this._currentDTimeInput === undefined ?\n            { mcTimepickerParse: { text: this._elementRef.nativeElement.value } } :\n            null;\n    }\n\n    private _minTimeValidator(): ValidationErrors | null {\n\n        if (this._currentDTimeInput !== undefined &&\n            this._minDTime !== undefined &&\n            this._isTimeLowerThenMin(this._currentDTimeInput)) {\n            return { mcTimepickerLowerThenMintime: { text: this._elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private _maxTimeValidator(): ValidationErrors | null {\n        if (this._currentDTimeInput !== undefined &&\n            this._maxDTime !== undefined &&\n            this._isTimeGreaterThenMax(this._currentDTimeInput)) {\n            return { mcTimepickerHigherThenMaxtime: { text: this._elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private _isTimeLowerThenMin(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this._minDTime).getTime() < 0;\n    }\n\n    private _isTimeGreaterThenMax(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this._maxDTime).getTime() >= 0;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTimepicker } from './timepicker';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        FormsModule\n    ],\n    declarations: [\n        McTimepicker\n    ],\n    exports: [\n        McTimepicker\n    ]\n})\nexport class McTimepickerModule {}\n","import {\n    animate,\n    AnimationTriggerMetadata,\n    state,\n    style,\n    transition,\n    trigger,\n    query,\n    animateChild,\n    group\n} from '@angular/animations';\n\n\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n */\nexport const mcSelectAnimations: {\n    readonly transformPanel: AnimationTriggerMetadata;\n    readonly fadeInContent: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        transition('void => *', group([\n            query('@fadeInContent', animateChild()),\n            animate('150ms cubic-bezier(0.25, 0.8, 0.25, 1)')\n        ])),\n        transition('* => void', [\n            animate('250ms 100ms linear', style({ opacity: 0 }))\n        ])\n    ]),\n\n    /**\n     * This animation fades in the background color and text content of the\n     * select's options. It is time delayed to occur 100ms after the overlay\n     * panel has transformed in.\n     */\n    fadeInContent: trigger('fadeInContent', [\n        state('showing', style({ opacity: 1 })),\n        transition('void => showing', [\n            style({ opacity: 0 }),\n            animate('150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const transformPanel = mcSelectAnimations.transformPanel;\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const fadeInContent = mcSelectAnimations.fadeInContent;\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McOptionModule } from '@ptsecurity/mosaic/core';\nimport { McFormFieldModule } from '@ptsecurity/mosaic/form-field';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport { McTagModule } from '@ptsecurity/mosaic/tag';\n\nimport { MC_SELECT_SCROLL_STRATEGY_PROVIDER, McSelect, McSelectTrigger } from './select.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        McOptionModule,\n        McIconModule,\n        McTagModule\n    ],\n    exports: [McFormFieldModule, McSelect, McSelectTrigger, McOptionModule, CommonModule],\n    declarations: [McSelect, McSelectTrigger],\n    providers: [MC_SELECT_SCROLL_STRATEGY_PROVIDER]\n})\nexport class McSelectModule {}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, Directive, ElementRef, EventEmitter, forwardRef,\n    Input, OnDestroy, OnInit, Optional, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { UniqueSelectionDispatcher } from '@ptsecurity/cdk/collections';\n\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n\n/** Change event object emitted by McRadio. */\nexport class McRadioChange {\n    constructor(\n        /** The McRadioButton that emits the change event. */\n        public source: McRadioButton,\n        /** The value of the McRadioButton. */\n        public value: any) {}\n}\n\n// Boilerplate for applying mixins to McRadioGroup.\n/** @docs-private */\nexport class McRadioGroupBase {}\nexport const _McRadioGroupMixinBase: CanDisableCtor & typeof McRadioGroupBase = mixinDisabled(McRadioGroupBase);\n\n/**\n * Provider Expression that allows mc-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nexport const MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McRadioGroup),\n    multi: true\n};\n\n@Directive({\n    selector: 'mc-radio-group',\n    exportAs: 'mcRadioGroup',\n    providers: [MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n    host: {\n        role: 'radiogroup',\n        class: 'mc-radio-group'\n    },\n    inputs: ['disabled']\n})\nexport class McRadioGroup extends _McRadioGroupMixinBase\n    implements AfterContentInit, ControlValueAccessor, CanDisable {\n\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    @Input()\n    get name(): string { return this._name; }\n    set name(value: string) {\n        this._name = value;\n        this.updateRadioButtonNames();\n    }\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this.markRadiosForCheck();\n    }\n\n    /** Value of the radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(newValue: any) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n\n            this.updateSelectedRadioFromValue();\n            this.checkSelectedRadioButton();\n        }\n    }\n\n    /** Whether the radio button is selected. */\n    @Input()\n    get selected() { return this._selected; }\n    set selected(selected: McRadioButton | null) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this.checkSelectedRadioButton();\n    }\n\n    /** Whether the radio group is disabled */\n    @Input()\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /** Whether the radio group is required */\n    @Input()\n    get required(): boolean { return this._required; }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /**\n     * Event emitted when the group value changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * a radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** Child radio buttons. */\n    @ContentChildren(forwardRef(() => McRadioButton), { descendants: true })\n    _radios: QueryList<McRadioButton>;\n\n    /**\n     * Selected value for group. Should equal the value of the selected radio button if there *is*\n     * a corresponding radio button with a matching value. If there is *not* such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    private _value: any = null;\n\n    /** The HTML name attribute applied to radio buttons in this group. */\n    private _name: string = `mc-radio-group-${nextUniqueId++}`;\n\n    /** The currently selected radio button. Should match value. */\n    private _selected: McRadioButton | null = null;\n\n    /** Whether the `value` has been set to its initial value. */\n    private _isInitialized: boolean = false;\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    private _labelPosition: 'before' | 'after' = 'after';\n\n    /** Whether the radio group is disabled. */\n    private _disabled: boolean = false;\n\n    /** Whether the radio group is required. */\n    private _required: boolean = false;\n\n    constructor(\n        private readonly _changeDetector: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    /** The method to be called in order to update ngModel */\n    // tslint:disable-next-line\n    controlValueAccessorChangeFn: (value: any) => void = () => {};\n\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * @docs-private\n     */\n    // tslint:disable-next-line\n    onTouched: () => any = () => {};\n\n    checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on McRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the McRadioGroup.\n        this._isInitialized = true;\n    }\n\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n\n    /** Dispatch change event with current selection and group value. */\n    emitChangeEvent(): void {\n        if (this._isInitialized) {\n            this.change.emit(new McRadioChange(this._selected!, this._value));\n        }\n    }\n\n    markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach((radio) => radio.markForCheck());\n        }\n    }\n\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     */\n    writeValue(value: any) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn: (value: any) => void) {\n        this.controlValueAccessorChangeFn = fn;\n    }\n\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n\n    private updateRadioButtonNames(): void {\n        if (this._radios) {\n            this._radios.forEach((radio) => {\n                radio.name = this.name;\n            });\n        }\n    }\n\n    /** Updates the `selected` radio button from the internal _value state. */\n    private updateSelectedRadioFromValue(): void {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n\n        if (this._radios != null && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach((radio) => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n}\n\n\n// Boilerplate for applying mixins to McRadioButton.\n/** @docs-private */\nexport class McRadioButtonBase {\n    // Since the disabled property is manually defined for the McRadioButton and isn't set up in\n    // the mixin base class. To be able to use the tabindex mixin, a disabled property must be\n    // defined to properly work.\n    disabled: boolean;\n\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McRadioButtonMixinBase:\n    CanColorCtor &\n    HasTabIndexCtor &\n    typeof McRadioButtonBase =\n        mixinColor(mixinTabIndex(McRadioButtonBase));\n\n\n@Component({\n    selector: 'mc-radio-button',\n    templateUrl: 'radio.component.html',\n    styleUrls: ['radio.css'],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    exportAs: 'mcRadioButton',\n    host: {\n        class: 'mc-radio-button',\n        '[attr.id]': 'id',\n        '[class.mc-radio-checked]': 'checked',\n        '[class.mc-radio-disabled]': 'disabled',\n        '(focus)': '_inputElement.nativeElement.focus()'\n    }\n})\nexport class McRadioButton extends _McRadioButtonMixinBase\n    implements OnInit, OnDestroy, CanColor, HasTabIndex {\n\n    private readonly _uniqueId: string = `mc-radio-${++nextUniqueId}`;\n\n    /* tslint:disable:member-ordering */\n\n    /** The unique ID for the radio button. */\n    @Input() id: string = this._uniqueId;\n\n    /** Analog to HTML 'name' attribute used to group radios for unique selection. */\n    @Input() name: string;\n\n    /** Used to set the 'aria-label' attribute on the underlying input element. */\n    @Input('aria-label') ariaLabel: string;\n\n    /** The 'aria-labelledby' attribute takes precedence as the element's text alternative. */\n    @Input('aria-labelledby') ariaLabelledby: string;\n\n    /** The 'aria-describedby' attribute is read after the element's label and field type. */\n    @Input('aria-describedby') ariaDescribedby: string;\n\n    /** Whether this radio button is checked. */\n    @Input()\n    get checked(): boolean { return this._checked; }\n    set checked(value: boolean) {\n        const newCheckedState = toBoolean(value);\n\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            } else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** The value of this radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(value: any) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup != null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n\n    /** Whether the radio button is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled || (this.radioGroup != null && this.radioGroup.disabled);\n    }\n    set disabled(value: boolean) {\n        const newDisabledState = toBoolean(value);\n\n        if (this._disabled !== newDisabledState) {\n\n            this._disabled = newDisabledState;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** Whether the radio button is required. */\n    @Input()\n    get required(): boolean {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    private _labelPosition: 'before' | 'after';\n\n    /** The native `<input type=radio>` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Event emitted when the checked state of this radio button changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * the radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** The parent radio group. May or may not be present. */\n    radioGroup: McRadioGroup;\n\n    @Input()\n    isFocused: boolean = false;\n\n    /** ID of the native input element inside `<mc-radio-button>` */\n    get inputId(): string { return `${this.id || this._uniqueId}-input`; }\n\n    /** Whether this radio is checked. */\n    private _checked: boolean = false;\n\n    /** Whether this radio is disabled. */\n    private _disabled: boolean;\n\n    /** Whether this radio is required. */\n    private _required: boolean;\n\n    /** Value assigned to this radio. */\n    private _value: any = null;\n\n    /** Unregister function for _radioDispatcher */\n    // tslint:disable-next-line\n    private readonly removeUniqueSelectionListener: () => void = () => {};\n\n    constructor(\n        @Optional() radioGroup: McRadioGroup,\n        elementRef: ElementRef,\n        private readonly _changeDetector: ChangeDetectorRef,\n        private readonly _radioDispatcher: UniqueSelectionDispatcher\n    ) {\n\n        super(elementRef);\n\n        this.radioGroup = radioGroup;\n\n        this.removeUniqueSelectionListener =\n            _radioDispatcher.listen((id: string, name: string) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            });\n    }\n\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n\n    ngOnDestroy() {\n        this.removeUniqueSelectionListener();\n    }\n\n    /** Focuses the radio button. */\n    // tslint:disable-next-line\n    focus(): void {}\n\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n\n    onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n\n    onInputChange(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this.emitChangeEvent();\n\n        if (this.radioGroup) {\n            this.radioGroup.controlValueAccessorChangeFn(this.value);\n            this.radioGroup.touch();\n            if (groupValueChanged) {\n                this.radioGroup.emitChangeEvent();\n            }\n        }\n    }\n\n    /** Dispatch change event with current value. */\n    private emitChangeEvent(): void {\n        this.change.emit(new McRadioChange(this, this._value));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McRadioButton, McRadioGroup } from './radio.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule],\n    exports: [McRadioGroup, McRadioButton],\n    declarations: [McRadioGroup, McRadioButton]\n})\nexport class McRadioModule {\n}\n","import { Directive, Input } from '@angular/core';\n\nimport { CdkTreeNodeDef } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeDef]',\n    inputs: ['when: mcTreeNodeDefWhen'],\n    providers: [{ provide: CdkTreeNodeDef, useExisting: McTreeNodeDef }]\n})\nexport class McTreeNodeDef<T> extends CdkTreeNodeDef<T> {\n    @Input('mcTreeNode') data: T;\n}\n","import { Directive, Input, OnInit } from '@angular/core';\nimport { CdkTreeNodePadding } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodePadding]',\n    providers: [{ provide: CdkTreeNodePadding, useExisting: McTreeNodePadding }]\n})\nexport class McTreeNodePadding<T> extends CdkTreeNodePadding<T> implements OnInit {\n    get leftPadding(): number {\n        return (this._withIcon ? 0 : this._iconWidth) + this._baseLeftPadding;\n    }\n\n    _baseLeftPadding: number = 6;\n    _iconWidth: number = 20;\n    _indent: number = 16;\n\n    @Input('mcTreeNodePadding') level: number;\n\n    @Input('mcTreeNodePaddingIndent') indent: number;\n\n    _withIcon: boolean;\n\n    _paddingIndent(): string | null {\n        const nodeLevel = (this._treeNode.data && this._tree.treeControl.getLevel)\n            ? this._tree.treeControl.getLevel(this._treeNode.data)\n            : null;\n\n        const level = this._level || nodeLevel;\n\n        return level ? `${(level * this._indent) + this.leftPadding}px` : `${this._baseLeftPadding}px`;\n    }\n\n    ngOnInit(): void {\n        this._withIcon = this._tree.treeControl.isExpandable(this._treeNode.data);\n        this._setPadding();\n    }\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, EventEmitter, forwardRef, Input, IterableDiffer,\n    IterableDiffers, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    Directive, ElementRef, Inject\n} from '@angular/core';\nimport { NodeDef, ViewData } from '@angular/core/src/view';\n\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { CdkTreeNode, CdkTree, CdkTreeNodeOutlet } from '@ptsecurity/cdk/tree';\n\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\n\nimport { END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n/**\n * Wrapper for the CdkTree node with Material design styles.\n */\n@Directive({\n    exportAs: 'mcTreeNodeOption',\n    selector: 'mc-tree-node-option',\n    host: {\n        tabindex: '-1',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '[attr.aria-expanded]': 'isExpanded',\n        '[attr.aria-level]': 'role === \"treeitem\" ? level : null',\n        class: 'mc-tree-node',\n\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n\n        '(click)': '_handleClick()'\n    },\n    providers: [\n        { provide: CdkTreeNode, useExisting: McTreeNodeOption }\n    ]\n})\nexport class McTreeNodeOption<T> extends CdkTreeNode<T> implements CanDisable {\n    @Input() role: 'treeitem' | 'group' = 'treeitem';\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.treeSelection.selectedOptions && this.treeSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            // this.treeSelection._reportValueChange();\n        }\n    }\n\n    private _hasFocus: boolean = false;\n\n    private _disabled: boolean = false;\n    private _selected: boolean = false;\n\n    constructor(\n        protected _elementRef: ElementRef,\n        @Inject(forwardRef(() => McTreeSelection))\n        protected treeSelection: McTreeSelection<T>\n    ) {\n        super(_elementRef, treeSelection);\n    }\n\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n\n        this.treeSelection.setFocusedOption(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.treeSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.treeSelection.selectedOptions.select(this);\n        } else {\n            this.treeSelection.selectedOptions.deselect(this);\n        }\n\n        // this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleFocus(): void {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur(): void {\n        this._hasFocus = false;\n    }\n\n    _handleClick(): void {\n        if (this.disabled) { return; }\n\n        this.treeSelection.setFocusedOption(this);\n    }\n}\n\nexport const _McTreeSelectionBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    typeof CdkTree\n    = mixinTabIndex(mixinDisabled(CdkTree));\n\nexport class McTreeNavigationChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\nexport class McTreeSelectionChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\n@Component({\n    exportAs: 'mcTreeSelection',\n    selector: 'mc-tree-selection',\n    template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n    host: {\n        '[tabIndex]': 'tabIndex',\n        class: 'mc-tree-selection',\n        role: 'tree-selection',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    styleUrls: ['./tree.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: CdkTree, useExisting: McTreeSelection }]\n})\nexport class McTreeSelection<T> extends _McTreeSelectionBase<T>\n    implements AfterContentInit, CanDisable, HasTabIndex {\n    // Outlets within the tree's template where the dataNodes will be inserted.\n    @ViewChild(CdkTreeNodeOutlet) _nodeOutlet: CdkTreeNodeOutlet;\n\n    @ContentChildren(forwardRef(() => McTreeNodeOption)) options: QueryList<McTreeNodeOption<T>>;\n\n    _keyManager: FocusKeyManager<McTreeNodeOption<T>>;\n\n    selectedOptions: SelectionModel<McTreeNodeOption<T>>;\n\n    _disabled: boolean = false;\n    tabIndex: number;\n    multiple: boolean;\n    autoSelect: boolean;\n    noUnselect: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(rawValue: boolean) {\n        const value = toBoolean(rawValue);\n\n        if (this._disabled !== value) {\n            this._disabled = value;\n\n            if (this._disabled) {\n                console.log('need disable all options');\n            } else {\n                console.log('need enable all options');\n            }\n        }\n    }\n\n    @Output() readonly navigationChange = new EventEmitter<McTreeNavigationChange>();\n\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectionChange>();\n\n    constructor(\n        private _elementRef: ElementRef,\n        _differs: IterableDiffers,\n        _changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('multiple') multiple: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string\n    ) {\n        super(_differs, _changeDetectorRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.selectedOptions = new SelectionModel<McTreeNodeOption<T>>(this.multiple);\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case LEFT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.collapse(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case RIGHT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.expand(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                this._keyManager.setPreviousPageItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                this._keyManager.setNextPageItemActive();\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    ngAfterContentInit(): void {\n        this._keyManager = new FocusKeyManager<McTreeNodeOption<T>>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(true)\n            .withHorizontalOrientation(null);\n    }\n\n    updateScrollSize(): void {\n        if (!this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    setFocusedOption(option: McTreeNodeOption<T>): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitNavigationEvent(option);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McTreeNodeOption<T> = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    renderNodeChanges(\n        data: T[],\n        dataDiffer: IterableDiffer<T> = this._dataDiffer,\n        viewContainer: any = this._nodeOutlet.viewContainer,\n        parentData?: T\n    ) {\n        super.renderNodeChanges(data, dataDiffer, viewContainer, parentData);\n\n        const arrayOfInstances = [];\n\n        viewContainer._embeddedViews.forEach((view: ViewData) => {\n            const viewDef = view.def;\n\n            viewDef.nodes.forEach((node: NodeDef) => {\n                if (viewDef.nodeMatchedQueries === node.matchedQueryIds) {\n                    const nodeData: any = view.nodes[node.nodeIndex];\n\n                    arrayOfInstances.push(nodeData.instance as never);\n                }\n            });\n        });\n\n        if (this.options) {\n            this.options.reset(arrayOfInstances);\n            this.options.notifyOnChanges();\n        }\n\n        this.updateScrollSize();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _emitNavigationEvent(option: McTreeNodeOption<T>): void {\n        this.navigationChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    _emitChangeEvent(option: McTreeNodeOption<T>): void {\n        this.selectionChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    private _canDeselectLast(option: McTreeNodeOption<T>): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && option.selected);\n    }\n}\n\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\n\nimport { McTreeNodeDef } from './node';\nimport { McTreeNodePadding } from './padding';\nimport { McTreeSelection, McTreeNodeOption } from './tree-selection';\n\n\nconst MC_TREE_DIRECTIVES = [\n    McTreeNodeDef,\n    McTreeNodePadding,\n    McTreeSelection,\n    McTreeNodeOption\n];\n\n@NgModule({\n    imports: [CommonModule, CdkTreeModule],\n    exports: MC_TREE_DIRECTIVES,\n    declarations: MC_TREE_DIRECTIVES\n})\nexport class McTreeModule {}\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { FlatTreeControl, ITreeControl } from '@ptsecurity/cdk/tree';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nexport class McTreeFlattener<T, F> {\n\n    constructor(public transformFunction: (node: T, level: number) => F,\n                public getLevel: (node: F) => number,\n                public isExpandable: (node: F) => boolean,\n                public getChildren: (node: T) => Observable<T[]>) {\n    }\n\n    _flattenNode(node: T, level: number,\n                 resultNodes: F[], parentMap: boolean[]): F[] {\n        const flatNode = this.transformFunction(node, level);\n        resultNodes.push(flatNode);\n\n        if (this.isExpandable(flatNode)) {\n            this.getChildren(node).pipe(take(1)).subscribe((children) => {\n                children.forEach((child, index) => {\n                    const childParentMap: boolean[] = parentMap.slice();\n                    childParentMap.push(index !== children.length - 1);\n                    this._flattenNode(child, level + 1, resultNodes, childParentMap);\n                });\n            });\n        }\n\n        return resultNodes;\n    }\n\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData: T[]): F[] {\n        const resultNodes: F[] = [];\n        structuredData.forEach((node) => this._flattenNode(node, 0, resultNodes, []));\n\n        return resultNodes;\n    }\n\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes: F[], treeControl: ITreeControl<F>): F[] {\n        const results: F[] = [];\n        const currentExpand: boolean[] = [];\n        currentExpand[0] = true;\n\n        nodes.forEach((node) => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n\n            if (expand) { results.push(node); }\n\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n\n        return results;\n    }\n}\n\n\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `McTree`.\n * The nested tree nodes of type `T` are flattened through `MсTreeFlattener`, and converted\n * to type `F` for `McTree` to consume.\n */\nexport class McTreeFlatDataSource<T, F> extends DataSource<F> {\n    _flattenedData = new BehaviorSubject<F[]>([]);\n\n    _expandedData = new BehaviorSubject<F[]>([]);\n\n    _data: BehaviorSubject<T[]>;\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n        this._flattenedData.next(this.treeFlattener.flattenNodes(this.data));\n        this.treeControl.dataNodes = this._flattenedData.value;\n    }\n\n    constructor(private treeControl: FlatTreeControl<F>,\n                private treeFlattener: McTreeFlattener<T, F>,\n                initialData: T[] = []) {\n        super();\n        this._data = new BehaviorSubject<T[]>(initialData);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<F[]> {\n        const changes = [\n            collectionViewer.viewChange,\n            this.treeControl.expansionModel.onChange!,\n            this._flattenedData\n        ];\n\n        return merge(...changes).pipe(map(() => {\n            this._expandedData.next(\n                this.treeFlattener.expandFlattenedNodes(this._flattenedData.value, this.treeControl));\n\n            return this._expandedData.value;\n        }));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by ITreeControl and each non-leaf node.\n */\nexport class McTreeNestedDataSource<T> extends DataSource<T> {\n    _data = new BehaviorSubject<T[]>([]);\n\n    /**\n     * Data for the nested tree\n     */\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<T[]> {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map(() => this.data));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import {\n    ElementRef,\n    QueryList,\n    ContentChildren,\n    Component,\n    ChangeDetectionStrategy,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { mixinColor, CanColor, CanColorCtor } from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\nexport class McTagBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McTagMixinBase: CanColorCtor & typeof McTagBase\n    = mixinColor(McTagBase);\n\n\n@Component({\n    selector: 'mc-tag',\n    templateUrl: 'tag.partial.html',\n    styleUrls: ['./tag.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'mc-tag' },\n    inputs: ['color']\n})\nexport class McTag extends _McTagMixinBase implements CanColor {\n    @ContentChildren(McIcon) contentChildren: QueryList<McIcon>;\n\n    nativeElement: HTMLElement;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-left-icon');\n                }\n\n                if (iconElement.previousSibling) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-right-icon');\n                }\n            }\n        } else if (icons.length > 1) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTag } from './tag.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McTag\n    ],\n    declarations: [\n        McTag\n    ]\n})\nexport class McTagModule {}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    Renderer2,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewContainerRef, ViewEncapsulation\n} from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { McMeasureScrollbarService } from '@ptsecurity/mosaic/core';\nimport { Observable } from 'rxjs';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\n// tslint:disable-next-line\nimport ModalUtil from './modal-util';\nimport { IModalButtonOptions, IModalOptions, ModalType, OnClickCallback } from './modal.type';\n\n\n// Duration when perform animations (ms)\nexport const MODAL_ANIMATE_DURATION = 200;\n\ntype AnimationState = 'enter' | 'leave' | null;\n\n@Component({\n    selector: 'mc-modal',\n    templateUrl: './modal.component.html',\n    styleUrls: ['./modal.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McModalComponent<T = any, R = any> extends McModalRef<T, R>\n    implements OnInit, OnChanges, AfterViewInit, OnDestroy, IModalOptions {\n\n    // tslint:disable-next-line:no-any\n    @Input() mcModalType: ModalType = 'default';\n    // If not specified, will use <ng-content>\n    @Input() mcContent: string | TemplateRef<{}> | Type<T>;\n    // available when mcContent is a component\n    @Input() mcComponentParams: object;\n    // Default Modal ONLY\n    @Input() mcFooter: string | TemplateRef<{}> | IModalButtonOptions<T>[];\n\n    @Input()\n    get mcVisible() { return this._mcVisible; }\n    set mcVisible(value) { this._mcVisible = value; }\n    _mcVisible = false;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n\n    @Input() mcZIndex: number = 1000;\n    @Input() mcWidth: number | string = 480;\n    @Input() mcWrapClassName: string;\n    @Input() mcClassName: string;\n    @Input() mcStyle: object;\n    @Input() mcTitle: string | TemplateRef<{}>;\n    @Input() mcCloseByESC: boolean = true;\n\n    @Input()\n    get mcClosable() { return this._mcClosable; }\n    set mcClosable(value) { this._mcClosable = value; }\n    _mcClosable = true;\n\n    @Input()\n    get mcMask() { return this._mcMask; }\n    set mcMask(value) { this._mcMask = value; }\n    _mcMask = true;\n\n    @Input()\n    get mcMaskClosable() { return this._mcMaskClosable; }\n    set mcMaskClosable(value) { this._mcMaskClosable = value; }\n    _mcMaskClosable = true;\n\n    @Input() mcMaskStyle: object;\n    @Input() mcBodyStyle: object;\n\n    // Trigger when modal open(visible) after animations\n    @Output() mcAfterOpen = new EventEmitter<void>();\n    // Trigger when modal leave-animation over\n    @Output() mcAfterClose = new EventEmitter<R>();\n\n    // --- Predefined OK & Cancel buttons\n    @Input() mcOkText: string;\n    @Input() mcOkType = 'primary';\n\n    @Input()\n    get mcOkLoading() { return this._mcOkLoading; }\n    set mcOkLoading(value) { this._mcOkLoading = value; }\n    _mcOkLoading = false;\n\n    @Input() @Output() mcOnOk: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    // Only aim to focus the ok button that needs to be auto focused\n    @ViewChild('autoFocusButtonOk', {read: ElementRef}) autoFocusButtonOk: ElementRef;\n    @Input() mcCancelText: string;\n\n    @Input()\n    get mcCancelLoading() { return this._mcCancelLoading; }\n    set mcCancelLoading(value) { this._mcCancelLoading = value; }\n    _mcCancelLoading = false;\n\n    @Input() @Output() mcOnCancel: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    @ViewChild('modalContainer') modalContainer: ElementRef;\n    @ViewChild('bodyContainer', {read: ViewContainerRef}) bodyContainer: ViewContainerRef;\n    maskAnimationClassMap: object;\n    modalAnimationClassMap: object;\n    // The origin point that animation based on\n    transformOrigin = '0px 0px 0px';\n\n    // Observable alias for mcAfterOpen\n    get afterOpen(): Observable<void> {\n        return this.mcAfterOpen.asObservable();\n    }\n\n    // Observable alias for mcAfterClose\n    get afterClose(): Observable<R> {\n        return this.mcAfterClose.asObservable();\n    }\n\n    get okText(): string {\n        return this.mcOkText;\n    }\n\n    get cancelText(): string {\n        return this.mcCancelText;\n    }\n\n    // Indicate whether this dialog should hidden\n    get hidden(): boolean {\n        return !this.mcVisible && !this.animationState;\n    }\n\n    // Handle the reference when using mcContent as Component\n    private contentComponentRef: ComponentRef<T>;\n    // Current animation state\n    private animationState: AnimationState;\n    private container: HTMLElement | OverlayRef;\n\n    constructor(\n        private overlay: Overlay,\n        private renderer: Renderer2,\n        private cfr: ComponentFactoryResolver,\n        private elementRef: ElementRef,\n        private viewContainer: ViewContainerRef,\n        private mcMeasureScrollbarService: McMeasureScrollbarService,\n        private modalControl: McModalControlService,\n        private changeDetector: ChangeDetectorRef,\n        @Inject(DOCUMENT) private document: any) {\n\n        super();\n    }\n\n    @Input() mcGetContainer: HTMLElement | OverlayRef | (() => HTMLElement | OverlayRef) = () => this.overlay.create();\n\n    ngOnInit() {\n\n        // Create component along without View\n        if (this.isComponent(this.mcContent)) {\n            this.createDynamicComponent(this.mcContent as Type<T>);\n        }\n\n        // Setup default button options\n        if (this.isModalButtons(this.mcFooter)) {\n            this.mcFooter = this.formatModalButtons(this.mcFooter as IModalButtonOptions<T>[]);\n        }\n\n        // Place the modal dom to elsewhere\n        this.container = typeof this.mcGetContainer === 'function' ? this.mcGetContainer() : this.mcGetContainer;\n        if (this.container instanceof HTMLElement) {\n            this.container.appendChild(this.elementRef.nativeElement);\n        } else if (this.container instanceof OverlayRef) {\n            // NOTE: only attach the dom to overlay, the view container is not changed actually\n            this.container.overlayElement.appendChild(this.elementRef.nativeElement);\n        }\n\n        // Register modal when afterOpen/afterClose is stable\n        this.modalControl.registerModal(this);\n    }\n\n    // [NOTE] NOT available when using by service!\n    // Because ngOnChanges never be called when using by service,\n    // here we can't support \"mcContent\"(Component) etc. as inputs that initialized dynamically.\n    // BUT: User also can change \"mcContent\" dynamically to trigger UI changes\n    // (provided you don't use \bComponent that needs initializations)\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.mcVisible) {\n            // Do not trigger animation while initializing\n            this.handleVisibleStateChange(this.mcVisible, !changes.mcVisible.firstChange);\n        }\n    }\n\n    ngAfterViewInit() {\n        // If using Component, it is the time to attach View while bodyContainer is ready\n        if (this.contentComponentRef) {\n            this.bodyContainer.insert(this.contentComponentRef.hostView);\n        }\n\n        if (this.autoFocusButtonOk) {\n            (this.autoFocusButtonOk.nativeElement as HTMLButtonElement).focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.container instanceof OverlayRef) {\n            this.container.dispose();\n        }\n    }\n\n    open() {\n        this.changeVisibleFromInside(true);\n    }\n\n    close(result?: R) {\n        this.changeVisibleFromInside(false, result);\n    }\n\n    // Destroy equals Close\n    destroy(result?: R) {\n        this.close(result);\n    }\n\n    triggerOk() {\n        this.onClickOkCancel('ok');\n    }\n\n    triggerCancel() {\n        this.onClickOkCancel('cancel');\n    }\n\n    getInstance(): McModalComponent {\n        return this;\n    }\n\n    getContentComponentRef(): ComponentRef<T> {\n        return this.contentComponentRef;\n    }\n\n    getContentComponent(): T {\n        return this.contentComponentRef && this.contentComponentRef.instance;\n    }\n\n    getElement(): HTMLElement {\n        return this.elementRef && this.elementRef.nativeElement;\n    }\n\n    onClickMask($event: MouseEvent) {\n        if (\n            this.mcMask &&\n            this.mcMaskClosable &&\n            ($event.target as HTMLElement).classList.contains('mc-modal-wrap') &&\n            this.mcVisible\n        ) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // tslint:disable-next-line\n    isModalType(type: ModalType): boolean {\n        return this.mcModalType === type;\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        if (event.keyCode === ESCAPE && this.container && (this.container instanceof OverlayRef)) {\n\n            this.close();\n            event.preventDefault();\n        }\n    }\n\n    // AoT\n    onClickCloseBtn() {\n        if (this.mcVisible) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // AoT\n    // tslint:disable-next-line\n    onClickOkCancel(type: 'ok' | 'cancel') {\n        const trigger = { ok: this.mcOnOk, cancel: this.mcOnCancel }[type];\n        const loadingKey = { ok: 'mcOkLoading', cancel: 'mcCancelLoading' }[type];\n\n        if (trigger instanceof EventEmitter) {\n            trigger.emit(this.getContentComponent());\n        } else if (typeof trigger === 'function') {\n\n            const result = trigger(this.getContentComponent());\n            // Users can return \"false\" to prevent closing by default\n            const caseClose = (doClose: boolean | void | {}) => (doClose !== false) && this.close(doClose as R);\n\n            if (isPromise(result)) {\n                this[loadingKey] = true;\n                const handleThen = (doClose) => {\n                    this[loadingKey] = false;\n                    caseClose(doClose);\n                };\n                (result as Promise<void>).then(handleThen).catch(handleThen);\n            } else {\n                caseClose(result);\n            }\n        }\n    }\n\n    // AoT\n    isNonEmptyString(value: {}): boolean {\n        return typeof value === 'string' && value !== '';\n    }\n\n    // AoT\n    isTemplateRef(value: {}): boolean {\n        return value instanceof TemplateRef;\n    }\n\n    // AoT\n    isComponent(value: {}): boolean {\n        return value instanceof Type;\n    }\n\n    // AoT\n    isModalButtons(value: {}): boolean {\n        return Array.isArray(value) && value.length > 0;\n    }\n\n    // Do rest things when visible state changed\n    private handleVisibleStateChange(visible: boolean, animation: boolean = true, closeResult?: R): Promise<any> {\n        // Hide scrollbar at the first time when shown up\n        if (visible) {\n            this.changeBodyOverflow(1);\n        }\n\n        return Promise\n            .resolve(animation && this.animateTo(visible))\n            // Emit open/close event after animations over\n            .then(() => {\n                if (visible) {\n                    this.mcAfterOpen.emit();\n                } else {\n                    this.mcAfterClose.emit(closeResult);\n                    // Show/hide scrollbar when animation is over\n                    this.changeBodyOverflow();\n                }\n            });\n    }\n\n    // Lookup a button's property, if the prop is a function, call & then return the result, otherwise, return itself.\n    // AoT\n    // tslint:disable-next-line\n    getButtonCallableProp(options: IModalButtonOptions<T>, prop: string): {} {\n        const value = options[prop];\n        const args: any[] = [];\n        if (this.contentComponentRef) {\n            args.push(this.contentComponentRef.instance);\n        }\n\n        return typeof value === 'function' ? value.apply(options, args) : value;\n    }\n\n    // On mcFooter's modal button click\n    // AoT\n    // tslint:disable-next-line\n    onButtonClick(button: IModalButtonOptions<T>) {\n        // Call onClick directly\n        const result = this.getButtonCallableProp(button, 'onClick');\n        if (isPromise(result)) {\n            button.loading = true;\n            (result as Promise<{}>).then(() => button.loading = false).catch(() => button.loading = false);\n        }\n    }\n\n    // Change mcVisible from inside\n    private changeVisibleFromInside(visible: boolean, closeResult?: R): Promise<void> {\n        if (this.mcVisible !== visible) {\n            // Change mcVisible value immediately\n            this.mcVisible = visible;\n            this.mcVisibleChange.emit(visible);\n\n            return this.handleVisibleStateChange(visible, true, closeResult);\n        }\n\n        return Promise.resolve();\n    }\n\n    private changeAnimationState(state: AnimationState) {\n        this.animationState = state;\n        if (state) {\n            this.maskAnimationClassMap = {\n                [`fade-${state}`]: true,\n                [`fade-${state}-active`]: true\n            };\n            this.modalAnimationClassMap = {\n                [`zoom-${state}`]: true,\n                [`zoom-${state}-active`]: true\n            };\n        } else {\n            // @ts-ignore\n            this.maskAnimationClassMap = this.modalAnimationClassMap = null;\n        }\n\n        if (this.contentComponentRef) {\n            this.contentComponentRef.changeDetectorRef.markForCheck();\n        } else {\n            this.changeDetector.markForCheck();\n        }\n    }\n\n    private animateTo(isVisible: boolean): Promise<any> {\n        // Figure out the lastest click position when shows up\n        if (isVisible) {\n            // [NOTE] Using timeout due to the document.click event is fired later than visible change,\n            // so if not postponed to next event-loop, we can't get the lastest click position\n            window.setTimeout(() => this.updateTransformOrigin());\n        }\n\n        this.changeAnimationState(isVisible ? 'enter' : 'leave');\n\n        // Return when animation is over\n        return new Promise((resolve) => window.setTimeout(() => {\n            this.changeAnimationState(null);\n            resolve();\n        }, MODAL_ANIMATE_DURATION));\n    }\n\n    private formatModalButtons(buttons: IModalButtonOptions<T>[]): IModalButtonOptions<T>[] {\n        return buttons.map((button) => {\n\n            return {\n                ...{\n                    type: 'default',\n                    size: 'default',\n                    autoLoading: true,\n                    show: true,\n                    loading: false,\n                    disabled: false\n                },\n                ...button\n            };\n        });\n    }\n\n    /**\n     * Create a component dynamically but not attach to any View\n     * (this action will be executed when bodyContainer is ready)\n     * @param component Component class\n     */\n    private createDynamicComponent(component: Type<T>) {\n        const factory = this.cfr.resolveComponentFactory(component);\n        const childInjector = Injector.create({\n            providers: [{provide: McModalRef, useValue: this}],\n            parent: this.viewContainer.parentInjector\n        });\n\n        this.contentComponentRef = factory.create(childInjector);\n\n        if (this.mcComponentParams) {\n            Object.assign(this.contentComponentRef.instance, this.mcComponentParams);\n        }\n\n        // Do the first change detection immediately\n        // (or we do detection at ngAfterViewInit, multi-changes error will be thrown)\n        this.contentComponentRef.changeDetectorRef.detectChanges();\n\n\n    }\n\n    // Update transform-origin to the last click position on document\n    private updateTransformOrigin() {\n        const modalElement = this.modalContainer.nativeElement as HTMLElement;\n        const lastPosition = ModalUtil.getLastClickPosition();\n\n        if (lastPosition) {\n            // tslint:disable-next-line\n            this.transformOrigin = `${lastPosition.x - modalElement.offsetLeft}px ${lastPosition.y - modalElement.offsetTop}px 0px`;\n        }\n    }\n\n    /**\n     * Take care of the body's overflow to decide the existense of scrollbar\n     * @param plusNum The number that the openModals.length will increase soon\n     */\n    private changeBodyOverflow(plusNum: number = 0) {\n        const openModals = this.modalControl.openModals;\n\n        if (openModals.length + plusNum > 0) {\n            // tslint:disable-next-line\n            this.renderer.setStyle(this.document.body, 'padding-right', `${this.mcMeasureScrollbarService.scrollBarWidth}px`);\n            this.renderer.setStyle(this.document.body, 'overflow', 'hidden');\n        } else {\n            this.renderer.removeStyle(this.document.body, 'padding-right');\n            this.renderer.removeStyle(this.document.body, 'overflow');\n        }\n    }\n}\n\n////////////\n\nfunction isPromise(obj: {} | void): boolean {\n    // tslint:disable-next-line\n    return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof (obj as Promise<{}>).then === 'function' && typeof (obj as Promise<{}>).catch === 'function';\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({\n    name: 'toCssUnit'\n})\nexport class CssUnitPipe implements PipeTransform {\n    transform(value: number | string, defaultUnit: string = 'px'): string {\n        const formatted = +value;\n\n        return isNaN(formatted) ? `${value}` : `${formatted}${defaultUnit}`;\n    }\n}\n","import { ComponentRef, Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\nimport { McModalComponent } from './modal.component';\nimport { ConfirmType, IModalOptions, IModalOptionsForService } from './modal.type';\n\n\n// A builder used for managing service creating modals\nexport class ModalBuilderForService {\n\n    // Modal ComponentRef, \"null\" means it has been destroyed\n    private modalRef: ComponentRef<McModalComponent>;\n    private overlayRef: OverlayRef;\n\n    constructor(private overlay: Overlay, options: IModalOptionsForService = {}) {\n        this.createModal();\n\n        if (!('mcGetContainer' in options)) {\n            options.mcGetContainer = null;\n        }\n\n        this.changeProps(options);\n        this.modalRef.instance.open();\n        this.modalRef.instance.mcAfterClose.subscribe(() => this.destroyModal());\n\n        this.overlayRef.keydownEvents()\n            // @ts-ignore\n            .pipe(filter((event: KeyboardEvent) => {\n                return event.keyCode === ESCAPE && options.mcCloseByESC;\n            }))\n            .subscribe(() => this.modalRef.instance.close());\n    }\n\n    getInstance(): McModalComponent {\n        return this.modalRef && this.modalRef.instance;\n    }\n\n    destroyModal(): void {\n        if (this.modalRef) {\n            this.overlayRef.dispose();\n            // @ts-ignore\n            this.modalRef = null;\n        }\n    }\n\n    private changeProps(options: IModalOptions): void {\n        if (this.modalRef) {\n            // here not limit user's inputs at runtime\n            Object.assign(this.modalRef.instance, options);\n        }\n    }\n\n    // Create component to ApplicationRef\n    private createModal(): void {\n        this.overlayRef = this.overlay.create();\n        this.modalRef = this.overlayRef.attach(new ComponentPortal(McModalComponent));\n    }\n}\n\n@Injectable()\nexport class McModalService {\n    // Track of the current close modals (we assume invisible is close this time)\n    get openModals(): McModalRef[] {\n        return this.modalControl.openModals;\n    }\n\n    get afterAllClose(): Observable<void> {\n        return this.modalControl.afterAllClose.asObservable();\n    }\n\n    constructor(\n        private overlay: Overlay,\n        private modalControl: McModalControlService) {\n    }\n\n    // Closes all of the currently-open dialogs\n    closeAll(): void {\n        this.modalControl.closeAll();\n    }\n\n    create<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n\n        if (typeof options.mcOnCancel !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnCancel = () => {};\n        }\n\n        if (!('mcCloseByESC' in options)) {\n            options.mcCloseByESC = true;\n        }\n\n\n        if (!('mcWidth' in options)) {\n            // tslint:disable-next-line\n            options.mcWidth = 480;\n        }\n\n        return new ModalBuilderForService(this.overlay, options).getInstance();\n    }\n\n    confirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType = 'confirm'): McModalRef<T> {\n        if ('mcFooter' in options) {\n            console.warn(`The Confirm-Modal doesn't support \"mcFooter\", this property will be ignored.`);\n        }\n\n        // NOTE: only support function currently by calling confirm()\n        if (typeof options.mcOnOk !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnOk = () => {};\n        }\n\n        options.mcModalType = 'confirm';\n        options.mcClassName = `mc-confirm mc-confirm-${confirmType} ${options.mcClassName || ''}`;\n        options.mcMaskClosable = false;\n\n        return this.create(options);\n    }\n\n    success<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'success');\n    }\n\n    delete<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'warn');\n    }\n\n    private simpleConfirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType): McModalRef<T> {\n        // Remove the Cancel button if the user not specify a Cancel button\n        if (!('mcCancelText' in options)) {\n            // @ts-ignore\n            options.mcCancelText = null;\n        }\n\n        return this.confirm(options, confirmType);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { CssUnitPipe } from './css-unit.pipe';\nimport { McModalControlService } from './modal-control.service';\nimport { McModalComponent } from './modal.component';\nimport { McModalService } from './modal.service';\n\n\n@NgModule({\n    imports: [ CommonModule, OverlayModule, McButtonModule, McIconModule ],\n    exports: [ McModalComponent ],\n    declarations: [ McModalComponent, CssUnitPipe ],\n    entryComponents: [ McModalComponent ],\n    providers: [ McModalControlService, McModalService ]\n})\nexport class McModalModule { }\n","import { fromEvent, Observable, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport {\n    AfterViewInit,\n    Component, Directive,\n    ElementRef,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    ViewEncapsulation,\n    ContentChild,\n    TemplateRef,\n    ChangeDetectorRef,\n    ChangeDetectionStrategy,\n    ViewChild\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Platform } from '@ptsecurity/cdk/platform';\nimport { CanDisable, CanDisableCtor, mixinDisabled } from '@ptsecurity/mosaic/core';\n\n\nconst COLLAPSED_CLASS: string = 'mc-navbar-collapsed-title';\nconst MC_ICON = 'mc-icon';\nconst MC_NAVBAR = 'mc-navbar';\nconst MC_NAVBAR_CONTAINER = 'mc-navbar-container';\nconst MC_NAVBAR_ITEM = 'mc-navbar-item';\nconst MC_NAVBAR_BRAND = 'mc-navbar-brand';\nconst MC_NAVBAR_TITLE = 'mc-navbar-title';\nconst MC_NAVBAR_LOGO = 'mc-navbar-logo';\n\nexport type McNavbarContainerPositionType = 'left' | 'right';\n\nexport interface IMcNavbarDropdownItem {\n    link?: string;\n    text: string;\n}\n\n@Directive({\n    selector: MC_NAVBAR_LOGO,\n    host: {\n        class: MC_NAVBAR_LOGO\n    }\n})\nexport class McNavbarLogo {}\n\n@Directive({\n    selector: MC_NAVBAR_BRAND,\n    host: {\n        class: MC_NAVBAR_BRAND\n    }\n})\nexport class McNavbarBrand {}\n\n@Directive({\n    selector: MC_NAVBAR_TITLE,\n    host: {\n        class: MC_NAVBAR_TITLE\n    }\n})\nexport class McNavbarTitle {}\n\nexport class McNavbarItemBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McNavbarMixinBase: CanDisableCtor & typeof McNavbarItemBase = mixinDisabled(McNavbarItemBase);\n\n@Component({\n    selector: MC_NAVBAR_ITEM,\n    template: `\n        <a\n            [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\n            (click)=\"handleClickByItem()\"\n            (keydown)=\"handleKeydown($event)\"\n            class=\"mc-navbar-item\"\n        >\n            <ng-content></ng-content>\n            <i *ngIf=\"hasDropdownContent\" mc-icon=\"mc-angle-M_16\"></i>\n        </a>\n        <ul\n            #dropdownContent\n            *ngIf=\"hasDropdownContent\"\n            [ngClass]=\"{ 'is-collapsed': isCollapsed }\"\n            class=\"mc-navbar-dropdown\"\n        >\n            <li\n                *ngFor=\"let item of dropdownItems\"\n                (click)=\"handleClickByDropdownItem()\"\n                class=\"mc-navbar-dropdown-item\"\n            >\n                <ng-container *ngIf=\"dropdownItemTmpl\">\n                    <ng-container *ngTemplateOutlet=\"dropdownItemTmpl; context: { $implicit: item }\"></ng-container>\n                </ng-container>\n                <a\n                    *ngIf=\"!dropdownItemTmpl\"\n                    [attr.href]=\"item.link\"\n                    [ngClass]=\"{ 'is-active': isActiveDropdownLink(item.link) }\"\n                    class=\"mc-navbar-dropdown-link\"\n                >{{ item.text }}</a>\n            </li>\n        </ul>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': '-1'\n    }\n})\nexport class McNavbarItem extends _McNavbarMixinBase implements OnInit, AfterViewInit, OnDestroy, CanDisable {\n\n    @Input()\n    tabIndex: number = 0;\n\n    @Input()\n    dropdownItems: IMcNavbarDropdownItem[] = [];\n\n    @Input()\n    set collapsedTitle(value: string) {\n        this.elementRef.nativeElement.setAttribute('computedTitle', encodeURI(value));\n    }\n\n    @ContentChild('dropdownItemTmpl', { read: TemplateRef })\n    dropdownItemTmpl: TemplateRef<IMcNavbarDropdownItem>;\n\n    @ViewChild('dropdownContent', { read: ElementRef })\n    dropdownContent: ElementRef;\n\n    get hasDropdownContent() {\n        return this.dropdownItems.length > 0;\n    }\n\n    isCollapsed: boolean = true;\n\n    private _subscription: Subscription = new Subscription();\n    private _focusMonitor$: Observable<FocusOrigin>;\n\n    private get _dropdownElements(): HTMLElement[] {\n        return this.dropdownContent ? this.dropdownContent.nativeElement.querySelectorAll('li > *') : [];\n    }\n\n    constructor(\n        public  elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _platform: Platform,\n        private _cdRef: ChangeDetectorRef\n    ) {\n        super(elementRef);\n    }\n\n    ngOnInit() {\n        this.denyClickIfDisabled();\n\n        this._focusMonitor$ = this._focusMonitor.monitor(this.elementRef.nativeElement, true);\n\n        if (this.hasDropdownContent) {\n            this.listenClickOutside();\n        }\n    }\n\n    ngAfterViewInit() {\n        if (!this.hasDropdownContent) {\n            return;\n        }\n\n        this.startListenFocusDropdownItems();\n    }\n\n    ngOnDestroy() {\n        this._subscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n        this.stopListenFocusDropdownItems();\n    }\n\n    isActiveDropdownLink(link: string): boolean {\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n\n        return window.location.href.indexOf(link) >= 0;\n    }\n\n    handleClickByItem() {\n        this.toggleDropdown();\n    }\n\n    handleKeydown($event: KeyboardEvent) {\n        const isNavbarItem = ($event.target as HTMLElement).classList.contains(MC_NAVBAR_ITEM);\n\n        // tslint:disable-next-line\n        if (this.hasDropdownContent && $event.keyCode === SPACE && isNavbarItem) {\n            this.toggleDropdown();\n        }\n    }\n\n    handleClickByDropdownItem() {\n        this.forceCloseDropdown();\n    }\n\n    private listenClickOutside() {\n        this._subscription.add(\n            this._focusMonitor$.subscribe((origin) => {\n                if (origin === null) {\n                    this.forceCloseDropdown();\n                }\n            })\n        );\n    }\n\n    private toggleDropdown() {\n        this.isCollapsed = !this.isCollapsed;\n    }\n\n    private forceCloseDropdown() {\n        this.isCollapsed = true;\n        this._cdRef.detectChanges();\n    }\n\n    private startListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.monitor(el, true);\n        });\n    }\n\n    private stopListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.stopMonitoring(el);\n        });\n    }\n\n    // This method is required due to angular 2 issue https://github.com/angular/angular/issues/11200\n    private denyClickIfDisabled() {\n        const events: Event[] = this.elementRef.nativeElement.eventListeners('click');\n\n        events.forEach((event) => this.elementRef.nativeElement.removeEventListener('click', event));\n\n        this.elementRef.nativeElement.addEventListener('click', (event: MouseEvent) => {\n            if (this.elementRef.nativeElement.hasAttribute('disabled')) {\n                event.stopImmediatePropagation();\n            }\n        }, true);\n\n        events.forEach((event) => this.elementRef.nativeElement.addEventListener('click', event));\n    }\n}\n\n@Directive({\n    selector: MC_NAVBAR_CONTAINER\n})\nexport class McNavbarContainer {\n    @Input()\n    position: McNavbarContainerPositionType = 'left';\n\n    @HostBinding('class')\n    get cssClasses(): string {\n        return this.position === 'left' ? 'mc-navbar-left' : 'mc-navbar-right';\n    }\n}\n\nclass CollapsibleItem {\n    private _collapsed: boolean = false;\n\n    constructor(\n        public element: HTMLElement,\n        public width: number\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        this._collapsed = collapsed;\n\n        this.updateCollapsedClass();\n    }\n\n    private updateCollapsedClass() {\n        if (this._collapsed) {\n            this.element.classList.add(COLLAPSED_CLASS);\n        } else {\n            this.element.classList.remove(COLLAPSED_CLASS);\n        }\n\n    }\n}\n\nclass CachedItemWidth {\n\n    get canCollapse(): boolean {\n        return this.itemsForCollapse.length > 0;\n    }\n\n    private _collapsedItemsWidth: number;\n\n    get collapsedItemsWidth(): number {\n        if (this._collapsedItemsWidth !== undefined) {\n            return this._collapsedItemsWidth;\n        }\n\n        this.calculateAndCacheCollapsedItemsWidth();\n\n        return this._collapsedItemsWidth;\n    }\n\n    constructor(\n        public element: HTMLElement,\n        public width: number,\n        public itemsForCollapse: CollapsibleItem[] = []\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        if (this.itemsForCollapse.length > 0) {\n            this.updateTitle(collapsed);\n        }\n\n        this.itemsForCollapse.forEach((item) => item.processCollapsed(collapsed));\n    }\n\n    private calculateAndCacheCollapsedItemsWidth() {\n        this._collapsedItemsWidth = this.itemsForCollapse\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getTitle(): string {\n        const computedTitle = this.element.getAttribute('computedTitle');\n\n        return computedTitle\n            ? decodeURI(computedTitle)\n            : (this.itemsForCollapse.length > 0 ? this.itemsForCollapse[0].element.innerText : '');\n    }\n\n    private updateTitle(collapsed: boolean) {\n        if (collapsed) {\n            this.element.setAttribute('title', this.getTitle());\n        } else {\n            this.element.removeAttribute('title');\n        }\n    }\n}\n\n\n@Component({\n    selector: MC_NAVBAR,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <nav class=\"mc-navbar\">\n            <ng-content select=\"[${MC_NAVBAR_CONTAINER}],${MC_NAVBAR_CONTAINER}\"></ng-content>\n        </nav>\n    `,\n    styleUrls: ['./navbar.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class McNavbar implements AfterViewInit, OnDestroy {\n\n    private readonly forceRecalculateItemsWidth: boolean = false;\n    private readonly resizeDebounceInterval: number = 100;\n    private readonly firstLevelElement: string = MC_NAVBAR_CONTAINER;\n    private readonly secondLevelElements: string[] = [\n        MC_NAVBAR_ITEM,\n        MC_NAVBAR_BRAND,\n        MC_NAVBAR_TITLE\n    ];\n\n    private _totalItemsWidths: number;\n    private _itemsWidths: CachedItemWidth[];\n\n    private get maxAllowedWidth(): number {\n        return this._elementRef.nativeElement.querySelector('nav').getBoundingClientRect().width;\n    }\n\n    private get itemsWidths(): CachedItemWidth[] {\n        if (this._itemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._itemsWidths;\n        }\n\n        this.calculateAndCacheItemsWidth();\n\n        return this._itemsWidths;\n    }\n\n    private get totalItemsWidth(): number {\n        if (this._totalItemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._totalItemsWidths;\n        }\n\n        this.calculateAndCacheTotalItemsWidth();\n\n        return this._totalItemsWidths;\n    }\n\n    private _resizeSubscription: Subscription;\n\n    constructor(\n        private _elementRef: ElementRef\n    ) {\n        const resizeObserver = fromEvent(window, 'resize')\n            .pipe(debounceTime(this.resizeDebounceInterval));\n\n        this._resizeSubscription = resizeObserver.subscribe(this.updateCollapsed.bind(this));\n    }\n\n    updateCollapsed(): void {\n        let collapseDelta = this.totalItemsWidth - this.maxAllowedWidth;\n\n        for (let i = this.itemsWidths.length - 1; i >= 0; i--) {\n            const item = this.itemsWidths[i];\n\n            if (!item.canCollapse) {\n                continue;\n            }\n\n            item.processCollapsed(collapseDelta > 0);\n            collapseDelta -= item.collapsedItemsWidth;\n        }\n    }\n\n    ngAfterViewInit(): void {\n        // Note: this wait is required for loading and rendering fonts for icons;\n        // unfortunately we cannot control font rendering\n        setTimeout(() => this.updateCollapsed(), 0);\n    }\n\n    ngOnDestroy() {\n        this._resizeSubscription.unsubscribe();\n    }\n\n    private calculateAndCacheTotalItemsWidth() {\n        this._totalItemsWidths = this.itemsWidths\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getOuterElementWidth(element: HTMLElement): number {\n        const baseWidth  = element.getBoundingClientRect().width;\n        const marginRight = parseInt(getComputedStyle(element).getPropertyValue('margin-right'));\n        const marginLeft = parseInt(getComputedStyle(element).getPropertyValue('margin-left'));\n\n        return baseWidth + marginRight + marginLeft;\n    }\n\n    private calculateAndCacheItemsWidth() {\n        const allItemsSelector = this.secondLevelElements\n            .map((e: string) => `${this.firstLevelElement}>${e}`);\n        const allItems: HTMLElement[] = Array.from(this._elementRef.nativeElement.querySelectorAll(allItemsSelector));\n\n        this._itemsWidths = allItems\n            .map((el) => new CachedItemWidth(el, this.getOuterElementWidth(el), this.getItemsForCollapse(el)));\n    }\n\n    private getItemsForCollapse(element: HTMLElement): CollapsibleItem[] {\n        const icon = element.querySelector(`[${MC_ICON}],${MC_NAVBAR_LOGO},[${MC_NAVBAR_LOGO}]`);\n\n        if (!icon) {\n            return [];\n        }\n\n        return Array.from(element.querySelectorAll(MC_NAVBAR_TITLE))\n            .map((el) => new CollapsibleItem(<HTMLElement> el, el.getBoundingClientRect().width));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport {\n    McNavbar,\n    McNavbarContainer,\n    McNavbarItem,\n    McNavbarTitle,\n    McNavbarBrand,\n    McNavbarLogo\n} from './navbar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        McIconModule\n    ],\n    exports: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ],\n    declarations: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ]\n})\nexport class McNavbarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressBarMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressBarBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressBarMixinBase:\n    CanColorCtor &\n    typeof McProgressBarBase =\n        mixinColor(McProgressBarBase);\n\n@Component({\n    selector: 'mc-progress-bar',\n    templateUrl: './progress-bar.component.html',\n    styleUrls: ['./progress-bar.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-bar',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressBar extends _McProgressBarMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-bar-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressBarMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McProgressBar\n} from './progress-bar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressBar\n    ],\n    declarations: [\n        McProgressBar\n    ]\n})\nexport class McProgressBarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressSpinnerMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressSpinnerBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressSpinnerMixinBase:\n    CanColorCtor &\n    typeof McProgressSpinnerBase =\n        mixinColor(McProgressSpinnerBase);\n\nconst MAX_DASH_ARRAY = 273;\n\n@Component({\n    selector: 'mc-progress-spinner',\n    templateUrl: './progress-spinner.component.html',\n    styleUrls: ['./progress-spinner.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-spinner',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressSpinner extends _McProgressSpinnerMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-spinner-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressSpinnerMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n\n    get dashOffsetPercent(): string {\n        return `${MAX_DASH_ARRAY - this.percentage * MAX_DASH_ARRAY}%`;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McProgressSpinner } from './progress-spinner.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressSpinner\n    ],\n    declarations: [\n        McProgressSpinner\n    ]\n})\nexport class McProgressSpinnerModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Host,\n    Input,\n    OnInit,\n    Optional,\n    Output\n} from '@angular/core';\nimport { toBoolean } from '@ptsecurity/mosaic/core';\n\nimport { McLayoutComponent } from './layout.component';\n\n\n@Component({\n    selector: 'mc-sidebar',\n    preserveWhitespaces: false,\n    templateUrl: './sidebar.component.html',\n    host: {\n        '[class.mc-layout-sidebar]': 'true',\n        '[class.mc-layout-sidebar-collapsed]': 'mcCollapsed',\n        '[style.flex]': 'mcFlex',\n        '[style.max-width.px]': 'mcWidth',\n        '[style.min-width.px]': 'mcWidth',\n        '[style.width.px]': 'mcWidth'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSidebarComponent implements OnInit {\n\n    @Input() _mcWidth = 200;\n    @Input() mcCollapsedWidth = 80;\n\n    @Input()\n    set mcCollapsible(value: boolean) {\n        this.collapsible = toBoolean(value);\n    }\n\n    get mcCollapsible(): boolean {\n        return this.collapsible;\n    }\n\n    @Input()\n    set mcCollapsed(value: boolean) {\n        this.collapsed = toBoolean(value);\n    }\n\n    get mcCollapsed(): boolean {\n        return this.collapsed;\n    }\n\n    // tslint:disable-next-line\n    @Output() mcCollapsedChange = new EventEmitter();\n\n    private collapsed = false;\n    private collapsible = false;\n\n    get mcFlex(): string {\n        if (this.mcCollapsed) {\n            return `0 0 ${this.mcCollapsedWidth}px`;\n        } else {\n            return `0 0 ${this.mcWidth}px`;\n        }\n    }\n\n    get mcWidth(): number {\n        if (this.mcCollapsed) {\n            return this.mcCollapsedWidth;\n        } else {\n            return this._mcWidth;\n        }\n    }\n\n    constructor(\n        @Optional() @Host() private mcLayoutComponent: McLayoutComponent) {\n    }\n\n    ngOnInit() {\n        if (this.mcLayoutComponent) {\n            this.mcLayoutComponent.hasSidebar = true;\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McContentComponent } from './content.component';\nimport { McFooterComponent } from './footer.component';\nimport { McHeaderComponent } from './header.component';\nimport { McLayoutComponent } from './layout.component';\nimport { McSidebarComponent } from './sidebar.component';\n\n\n@NgModule({\n    imports: [ CommonModule ],\n    exports: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ],\n    declarations: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ]\n})\nexport class McLayoutModule {\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n    QueryList,\n    ViewEncapsulation,\n    ChangeDetectorRef,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\n\nimport { FocusKeyManager, IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { END, ENTER, HOME, PAGE_DOWN, PAGE_UP, SPACE } from '@ptsecurity/cdk/keycodes';\n\nimport {\n    McLine,\n    McLineSetter,\n    CanDisable,\n    mixinDisabled,\n    toBoolean, CanDisableCtor\n} from '@ptsecurity/mosaic/core';\n\n\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\n@Component({\n    exportAs: 'mcListOption',\n    selector: 'mc-list-option',\n    host: {\n        tabindex: '-1',\n\n        class: 'mc-list-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n        '(click)': '_handleClick()'\n    },\n    templateUrl: 'list-option.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListOption implements AfterContentInit, OnDestroy, OnInit, IFocusableOption {\n    _hasFocus: boolean = false;\n\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    @ViewChild('text') _text: ElementRef;\n\n    // Whether the label should appear before or after the checkbox. Defaults to 'after'\n    @Input() checkboxPosition: 'before' | 'after' = 'after';\n\n    @Input() value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled || (this.listSelection && this.listSelection.disabled);\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.listSelection.selectedOptions && this.listSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            this.listSelection._reportValueChange();\n        }\n    }\n\n    private _lineSetter: McLineSetter;\n    private _selected = false;\n    private _disabled = false;\n\n    constructor(\n        private _element: ElementRef,\n        private _changeDetector: ChangeDetectorRef,\n        @Inject(forwardRef(() => McListSelection))\n        public listSelection: McListSelection\n    ) {}\n\n    ngOnInit() {\n        if (this._selected) {\n            // List options that are selected at initialization can't be reported properly to the form\n            // control. This is because it takes some time until the selection-list knows about all\n            // available options. Also it can happen that the ControlValueAccessor has an initial value\n            // that should be used instead. Deferring the value change report to the next tick ensures\n            // that the form control value is not being overwritten.\n            const wasSelected = this._selected;\n\n            Promise.resolve().then(() => {\n                if (this._selected || wasSelected) {\n                    this.selected = true;\n                    this._changeDetector.markForCheck();\n                }\n            });\n        }\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    ngOnDestroy(): void {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => this.selected = false);\n        }\n\n        this.listSelection._removeOptionFromList(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    focus(): void {\n        this._element.nativeElement.focus();\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    getLabel() {\n        return this._text ? this._text.nativeElement.textContent : '';\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.listSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.listSelection.selectedOptions.select(this);\n        } else {\n            this.listSelection.selectedOptions.deselect(this);\n        }\n\n        this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleClick() {\n        if (this.disabled) { return; }\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    _handleFocus() {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur() {\n        this._hasFocus = false;\n\n        this.listSelection._onTouched();\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n\n\nexport const MC_SELECTION_LIST_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McListSelection),\n    multi: true\n};\n\n// Change event that is being fired whenever the selected state of an option changes. */\nexport class McListSelectionChange {\n    constructor(\n        // Reference to the selection list that emitted the event.\n        public source: McListSelection,\n        // Reference to the option that has been changed.\n        public option: McListOption\n    ) {}\n}\n\n\nexport class McListSelectionBase {}\n\nexport const _McListSelectionMixinBase: CanDisableCtor & typeof McListSelectionBase\n    = mixinDisabled(McListSelectionBase);\n\n@Component({\n    exportAs: 'mcListSelection',\n    selector: 'mc-list-selection',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-list-selection',\n        '[tabIndex]': 'tabIndex',\n        '(focus)': 'focus()',\n        '(blur)': '_onTouched()',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    providers: [MC_SELECTION_LIST_VALUE_ACCESSOR],\n    preserveWhitespaces: false\n})\nexport class McListSelection extends _McListSelectionMixinBase implements\n    IFocusableOption, CanDisable, AfterContentInit, ControlValueAccessor {\n\n    _keyManager: FocusKeyManager<McListOption>;\n\n    // The option components contained within this selection-list.\n    @ContentChildren(McListOption) options: QueryList<McListOption>;\n\n    tabIndex: number;\n\n    autoSelect: boolean;\n    noUnselect: boolean;\n    multiple: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input() horizontal: boolean = false;\n\n    // Emits a change event whenever the selected state of an option changes.\n    @Output() readonly selectionChange: EventEmitter<McListSelectionChange> = new EventEmitter<McListSelectionChange>();\n\n    selectedOptions: SelectionModel<McListOption>;\n\n    // Used for storing the values that were assigned before the options were initialized.\n    private _tempValues: string[] | null;\n\n    private _modelChanges = Subscription.EMPTY;\n\n    constructor(\n        private _element: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string,\n        @Attribute('multiple') multiple: string\n    ) {\n        super();\n\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.selectedOptions = new SelectionModel<McListOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.horizontal = toBoolean(this.horizontal);\n\n        this._keyManager = new FocusKeyManager<McListOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(!this.horizontal)\n            .withHorizontalOrientation(this.horizontal ? 'ltr' : null);\n\n        if (this._tempValues) {\n            this._setOptionsFromValues(this._tempValues);\n            this._tempValues = null;\n        }\n\n        // Sync external changes to the model back to the options.\n        this._modelChanges = this.selectedOptions.onChange!.subscribe((event) => {\n            for (const item of event.added) {\n                item.selected = true;\n            }\n\n            for (const item of event.removed) {\n                item.selected = false;\n            }\n        });\n\n        this.updateScrollSize();\n    }\n\n    ngOnDestroy() {\n        this._modelChanges.unsubscribe();\n    }\n\n    focus() {\n        this._element.nativeElement.focus();\n    }\n\n    selectAll() {\n        this.options.forEach((option) => option.setSelected(true));\n\n        this._reportValueChange();\n    }\n\n    deselectAll() {\n        this.options.forEach((option) => option.setSelected(false));\n\n        this._reportValueChange();\n    }\n\n    updateScrollSize(): void {\n        if (this.horizontal || !this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    // Sets the focused option of the selection-list.\n    setFocusedOption(option: McListOption): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitChangeEvent(option);\n        this._reportValueChange();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(values: string[]): void {\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        } else {\n            this._tempValues = values;\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this._onTouched = fn;\n    }\n\n    // Implemented as a part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        if (this.options) {\n            this.options.forEach((option) => option.disabled = isDisabled);\n        }\n    }\n\n    getSelectedOptionValues(): string[] {\n        return this.options.filter((option) => option.selected).map((option) => option.value);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McListOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    _canDeselectLast(listOption: McListOption): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && listOption.selected);\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    // View to model callback that should be called if the list or its options lost focus.\n    _onTouched: () => void = () => {};\n\n    // Removes an option from the selection list and updates the active item.\n    _removeOptionFromList(option: McListOption) {\n        if (option._hasFocus) {\n            const optionIndex = this._getOptionIndex(option);\n\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.setPreviousItemActive();\n            } else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.setNextItemActive();\n            }\n        }\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                if (!this.horizontal) { this._keyManager.setPreviousPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                if (!this.horizontal) { this._keyManager.setNextPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    // Reports a value change to the ControlValueAccessor\n    _reportValueChange() {\n        if (this.options) {\n            this._onChange(this.getSelectedOptionValues());\n        }\n    }\n\n    // Emits a change event if the selected state of an option changed.\n    _emitChangeEvent(option: McListOption) {\n        this.selectionChange.emit(new McListSelectionChange(this, option));\n    }\n\n    // Returns the option with the specified value.\n    private _getOptionByValue(value: string): McListOption | undefined {\n        return this.options.find((option) => option.value === value);\n    }\n\n    // Sets the selected options based on the specified values.\n    private _setOptionsFromValues(values: string[]) {\n        this.options.forEach((option) => option.setSelected(false));\n\n        values\n            .map((value) => this._getOptionByValue(value))\n            .filter(Boolean)\n            .forEach((option) => option!.setSelected(true));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    // Returns the index of the specified list option.\n    private _getOptionIndex(option: McListOption): number {\n        return this.options.toArray().indexOf(option);\n    }\n\n    // View to model callback that should be called whenever the selected options change.\n    private _onChange: (value: any) => void = (_: any) => {};\n}\n","// todo пока не делаем, перенесено из материала, но у нас в доках таких простых списков нет.\nimport {\n    AfterContentInit, ChangeDetectionStrategy, Component, ContentChildren, Directive, ElementRef, QueryList,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { McLine, McLineSetter } from '@ptsecurity/mosaic/core';\n\n\nexport class McListBase {}\n\n@Component({\n    selector: 'mc-list',\n    host: { class: 'mc-list' },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McList extends McListBase {}\n\n\n/**\n * Directive whose purpose is to add the mc- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n    selector: '[mc-subheader], [mcSubheader]',\n    host: { class: 'mc-subheader' }\n})\nexport class McListSubheaderCssStyler {}\n\n\n// Boilerplate for applying mixins to McListItem.\nexport class McListItemBase {}\n\n@Component({\n    selector: 'mc-list-item, a[mc-list-item]',\n    host: {\n        class: 'mc-list-item',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()'\n    },\n    templateUrl: './list-item.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListItem extends McListItemBase implements AfterContentInit {\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    private _lineSetter: McLineSetter;\n\n    constructor(private _element: ElementRef) {\n        super();\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    _handleFocus() {\n        this._element.nativeElement.classList.add('mc-focused');\n    }\n\n    _handleBlur() {\n        this._element.nativeElement.classList.remove('mc-focused');\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLineModule } from '@ptsecurity/mosaic/core';\n\nimport { McListSelection, McListOption } from './list-selection.component';\nimport { McList, McListItem, McListSubheaderCssStyler } from './list.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        McLineModule\n    ],\n    exports: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ],\n    declarations: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ]\n})\nexport class McListModule {}\n","import {\n    Input,\n    Attribute,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\nexport class McLinkBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McLinkBase: HasTabIndexCtor & CanDisableCtor & typeof McLinkBase\n    = mixinTabIndex(mixinDisabled(McLinkBase));\n\n@Component({\n    selector: 'a.mc-link',\n    template: `<ng-content></ng-content>`,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcLink',\n    styleUrls: ['./link.css'],\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': 'tabIndex'\n    }\n})\n\nexport class McLink extends _McLinkBase implements OnDestroy, HasTabIndex, CanDisable {\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    private _disabled = false;\n\n    constructor(\n        @Attribute('tabindex') tabIndex: string,\n        public elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _changeDetector: ChangeDetectorRef) {\n\n        super(elementRef);\n        this._focusMonitor.monitor(elementRef.nativeElement, true);\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this.elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLink } from './link.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule\n    ],\n    declarations: [McLink],\n    exports: [McLink]\n})\nexport class McLinkModule {}\n","import { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { McModalRef } from './modal-ref.class';\n\n\ninterface IRegisteredMeta {\n    modalRef: McModalRef;\n    afterOpenSubscription: Subscription;\n    afterCloseSubscription: Subscription;\n}\n\n@Injectable()\nexport class McModalControlService {\n\n    // Track singleton afterAllClose through over the injection tree\n    get afterAllClose(): Subject<void> {\n        return this.parentService ? this.parentService.afterAllClose : this.rootAfterAllClose;\n    }\n\n    // Track singleton openModals array through over the injection tree\n    get openModals(): McModalRef[] {\n        return this.parentService ? this.parentService.openModals : this.rootOpenModals;\n    }\n\n    // @ts-ignore\n    private rootOpenModals: McModalRef[] = this.parentService ? null : [];\n    // @ts-ignore\n    private rootAfterAllClose: Subject<void> = this.parentService ? null : new Subject<void>();\n    // @ts-ignore\n    private rootRegisteredMetaMap: Map<McModalRef, IRegisteredMeta> = this.parentService ? null : new Map();\n\n    // Registered modal for later usage\n    private get registeredMetaMap(): Map<McModalRef, IRegisteredMeta> {\n        return this.parentService ? this.parentService.registeredMetaMap : this.rootRegisteredMetaMap;\n    }\n\n    constructor(\n        @Optional() @SkipSelf() private parentService: McModalControlService) {\n    }\n\n    // Register a modal to listen its open/close\n    registerModal(modalRef: McModalRef): void {\n        if (!this.hasRegistered(modalRef)) {\n            const afterOpenSubscription = modalRef.afterOpen.subscribe(() => this.openModals.push(modalRef));\n            const afterCloseSubscription = modalRef.afterClose.subscribe(() => this.removeOpenModal(modalRef));\n\n            this.registeredMetaMap.set(modalRef, {modalRef, afterOpenSubscription, afterCloseSubscription});\n        }\n    }\n\n    hasRegistered(modalRef: McModalRef): boolean {\n        return this.registeredMetaMap.has(modalRef);\n    }\n\n    // Close all registered opened modals\n    closeAll(): void {\n        let i = this.openModals.length;\n\n        while (i--) {\n            this.openModals[i].close();\n        }\n    }\n\n    private removeOpenModal(modalRef: McModalRef): void {\n        const index = this.openModals.indexOf(modalRef);\n\n        if (index > -1) {\n            this.openModals.splice(index, 1);\n\n            if (!this.openModals.length) {\n                this.afterAllClose.next();\n            }\n        }\n    }\n}\n","import { Observable } from 'rxjs';\n\nimport { McModalComponent } from './modal.component';\n\n\n/**\n * API class that public to users to handle the modal instance.\n * McModalRef is aim to avoid accessing to the modal instance directly by users.\n */\nexport abstract class McModalRef<T = any, R = any> {\n    abstract afterOpen: Observable<void>;\n    abstract afterClose: Observable<R>;\n\n    abstract open(): void;\n\n    abstract close(result?: R): void;\n\n    abstract destroy(result?: R): void;\n\n    /**\n     * Trigger the nzOnOk/nzOnCancel by manual\n     */\n    abstract triggerOk(): void;\n\n    abstract triggerCancel(): void;\n\n    // /**\n    //  * Return the ComponentRef of nzContent when specify nzContent as a Component\n    //  * Note: this method may return undefined if the Component has not ready yet.\n    //    (it only available after Modal's ngOnInit)\n    //  */\n    // abstract getContentComponentRef(): ComponentRef<{}>;\n\n    /**\n     * Return the component instance of nzContent when specify nzContent as a Component\n     * Note: this method may return undefined if the Component has not ready yet.\n     * (it only available after Modal's ngOnInit)\n     */\n    abstract getContentComponent(): T;\n\n    /**\n     * Get the dom element of this Modal\n     */\n    abstract getElement(): HTMLElement;\n\n    /**\n     * Get the instance of the Modal itself\n     */\n    abstract getInstance(): McModalComponent;\n}\n","export interface IClickPosition {\n    x: number;\n    y: number;\n}\n\nexport class ModalUtil {\n    private lastPosition: IClickPosition;\n\n    constructor(private document: Document) {\n        this.lastPosition = {x: -1, y: -1};\n        this.listenDocumentClick();\n    }\n\n    getLastClickPosition(): IClickPosition {\n        return this.lastPosition;\n    }\n\n    listenDocumentClick(): void {\n        this.document.addEventListener('click', (event: MouseEvent) => {\n            this.lastPosition = {x: event.clientX, y: event.clientY};\n        });\n    }\n}\n\nexport default new ModalUtil(document);\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    OnDestroy,\n    QueryList,\n    ViewEncapsulation,\n    ContentChildren\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport { Platform } from '@ptsecurity/cdk/platform';\n\nimport { mixinColor, mixinDisabled, CanColor, CanDisable, CanDisableCtor, CanColorCtor } from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\n@Directive({\n    selector: 'button[mc-button], a[mc-button]',\n    host: { class: 'mc-button' }\n})\nexport class McButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-xs-button], a[mc-xs-button]',\n    host: { class: 'mc-button mc-button_xs' }\n})\nexport class McXSButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-sm-button], a[mc-sm-button]',\n    host: { class: 'mc-button mc-button_sm' }\n})\nexport class McSMButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-lg-button], a[mc-lg-button]',\n    host: { class: 'mc-button mc-button_lg' }\n})\nexport class McLGButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-xl-button], a[mc-xl-button]',\n    host: { class: 'mc-button mc-button_xl' }\n})\nexport class McXLButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-icon-button], a[mc-icon-button]',\n    queries: {\n        contentChildren: new ContentChildren(McIcon)\n    },\n    host: { class: 'mc-icon-button' }\n})\nexport class McIconButtonCSSStyler {\n    nativeElement: Element;\n\n    contentChildren: QueryList<McIcon>;\n\n    constructor(elementRef: ElementRef) {\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const twoIcons = 2;\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-icon-button_left');\n                }\n\n                if (iconElement.previousSibling) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-icon-button_right');\n                }\n            }\n        } else if (icons.length === twoIcons) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n\n\nexport class McButtonBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McButtonMixinBase:\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McButtonBase =\n        mixinColor(mixinDisabled(McButtonBase));\n\n\n@Component({\n    selector: `\n        button[mc-button],\n        button[mc-xs-button],\n        button[mc-sm-button],\n        button[mc-lg-button],\n        button[mc-xl-button]\n    `,\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[disabled]': 'disabled || null'\n    }\n})\nexport class McButton extends _McButtonMixinBase implements OnDestroy, CanDisable, CanColor {\n    constructor(elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        super(elementRef);\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n\n\n@Component({\n    selector: 'a[mc-button], a[mc-xs-button], a[mc-sm-button], a[mc-lg-button], a[mc-xl-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_haltDisabledEvents($event)'\n    }\n})\nexport class McAnchor extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n\n\n@Component({\n    selector: 'button[mc-icon-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null'\n    }\n})\nexport class McIconButton extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McButton,\n    McAnchor,\n    McIconButton,\n    McButtonCSSStyler,\n    McXSButtonCSSStyler,\n    McSMButtonCSSStyler,\n    McLGButtonCSSStyler,\n    McXLButtonCSSStyler,\n    McIconButtonCSSStyler\n} from './button.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McXSButtonCSSStyler,\n        McSMButtonCSSStyler,\n        McLGButtonCSSStyler,\n        McXLButtonCSSStyler,\n        McIconButtonCSSStyler\n    ],\n    declarations: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McXSButtonCSSStyler,\n        McSMButtonCSSStyler,\n        McLGButtonCSSStyler,\n        McXLButtonCSSStyler,\n        McIconButtonCSSStyler\n    ]\n})\nexport class McButtonModule {}\n","import { InjectionToken } from '@angular/core';\n\n\n/**\n * Checkbox click action when user click on input element.\n * noop: Do not toggle checked or indeterminate.\n * check: Only toggle checked status, ignore indeterminate.\n * check-indeterminate: Toggle checked status, set indeterminate to false. Default behavior.\n * undefined: Same as `check-indeterminate`.\n */\nexport type McCheckboxClickAction = 'noop' | 'check' | 'check-indeterminate' | undefined;\n\n/**\n * Injection token that can be used to specify the checkbox click behavior.\n */\nexport const MC_CHECKBOX_CLICK_ACTION =\n    new InjectionToken<McCheckboxClickAction>('mc-checkbox-click-action');\n","import {\n    AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_CHECKBOX_CLICK_ACTION, McCheckboxClickAction } from './checkbox-config';\n\n\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n\n/**\n * Provider Expression that allows mc-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nexport const MC_CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McCheckbox),\n    multi: true\n};\n\n/**\n * Represents the different states that require custom transitions between them.\n * @docs-private\n */\nexport enum TransitionCheckState {\n    /** The initial state of the component before any user interaction. */\n    Init,\n    /** The state representing the component when it's becoming checked. */\n    Checked,\n    /** The state representing the component when it's becoming unchecked. */\n    Unchecked,\n    /** The state representing the component when it's becoming indeterminate. */\n    Indeterminate\n}\n\n/** Change event object emitted by McCheckbox. */\nexport class McCheckboxChange {\n    /** The source McCheckbox of the event. */\n    source: McCheckbox;\n    /** The new `checked` value of the checkbox. */\n    checked: boolean;\n}\n\n// Boilerplate for applying mixins to McCheckbox.\n/** @docs-private */\nexport class McCheckboxBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McCheckboxMixinBase:\n    HasTabIndexCtor &\n    CanColorCtor &\n    CanDisableCtor &\n    typeof McCheckboxBase =\n        mixinTabIndex(mixinColor(mixinDisabled(McCheckboxBase)));\n\n\n/**\n * A mosaic checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A McCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n */\n@Component({\n    selector: 'mc-checkbox',\n    templateUrl: 'checkbox.html',\n    styleUrls: ['checkbox.css'],\n    exportAs: 'mcCheckbox',\n    host: {\n        class: 'mc-checkbox',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-checkbox-indeterminate]': 'indeterminate',\n        '[class.mc-checkbox-checked]': 'checked',\n        '[class.mc-checkbox-disabled]': 'disabled',\n        '[class.mc-checkbox-label-before]': 'labelPosition == \"before\"'\n    },\n    providers: [MC_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCheckbox extends _McCheckboxMixinBase implements ControlValueAccessor,\n    AfterViewInit, OnDestroy, CanColor, CanDisable, HasTabIndex {\n\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\n     * take precedence so this may be omitted.\n     */\n    @Input('aria-label') ariaLabel: string = '';\n\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     */\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-checkbox-${++nextUniqueId}`;\n\n    /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n    @Input() id: string = this._uniqueId;\n\n    /** Returns the unique id for the visual hidden input. */\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    /** Whether the checkbox is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    private _required: boolean;\n\n    /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n    @Input() labelPosition: 'before' | 'after' = 'after';\n\n    /** Name value will be applied to the input element if present */\n    @Input() name: string | null = null;\n\n    /** Event emitted when the checkbox's `checked` value changes. */\n    @Output() readonly change: EventEmitter<McCheckboxChange> =\n        new EventEmitter<McCheckboxChange>();\n\n    /** Event emitted when the checkbox's `indeterminate` value changes. */\n    @Output() readonly indeterminateChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** The value attribute of the native input element */\n    @Input() value: string;\n\n    /** The native `<input type=\"checkbox\">` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n     * @docs-private\n     */\n    _onTouched: () => any = () => {\n    }\n\n    private _currentAnimationClass: string = '';\n\n    private _currentCheckState: TransitionCheckState = TransitionCheckState.Init;\n\n    private _controlValueAccessorChangeFn: (value: any) => void = () => {\n    }\n\n    constructor(elementRef: ElementRef,\n                private _changeDetectorRef: ChangeDetectorRef,\n                private _focusMonitor: FocusMonitor,\n                @Attribute('tabindex') tabIndex: string,\n                @Optional() @Inject(MC_CHECKBOX_CLICK_ACTION)\n                private _clickAction: McCheckboxClickAction) {\n        super(elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._inputElement.nativeElement)\n            .subscribe((focusOrigin) => this._onInputFocusChange(focusOrigin));\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._inputElement.nativeElement);\n    }\n\n    /**\n     * Whether the checkbox is checked.\n     */\n    @Input()\n    get checked(): boolean {\n        return this._checked;\n    }\n\n    set checked(value: boolean) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     */\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value != this.disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    @Input()\n    get indeterminate(): boolean {\n        return this._indeterminate;\n    }\n\n    set indeterminate(value: boolean) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = value;\n\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(TransitionCheckState.Indeterminate);\n            } else {\n                this._transitionCheckState(\n                    this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n    }\n\n    private _indeterminate: boolean = false;\n\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // This method is getting called whenever the label of the checkbox changes.\n        // Since the checkbox uses the OnPush strategy we need to notify it about the change\n        // that has been recognized by the cdkObserveContent directive.\n        this._changeDetectorRef.markForCheck();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: any) {\n        this._onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    _getAriaChecked(): 'true' | 'false' | 'mixed' {\n        return this.checked ? 'true' : (this.indeterminate ? 'mixed' : 'false');\n    }\n\n    private _transitionCheckState(newState: TransitionCheckState) {\n        const oldState = this._currentCheckState;\n        const element: HTMLElement = this._elementRef.nativeElement;\n\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n\n        this._currentCheckState = newState;\n\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n        }\n    }\n\n    private _emitChangeEvent() {\n        const event = new McCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    }\n\n    /** Function is called whenever the focus changes for the input element. */\n    private _onInputFocusChange(focusOrigin: FocusOrigin) {\n        if (focusOrigin) {\n            this._onTouched();\n        }\n    }\n\n    /** Toggles the `checked` state of the checkbox. */\n    toggle(): void {\n        this.checked = !this.checked;\n    }\n\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param event\n     */\n    _onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && this._clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && this._clickAction !== 'check') {\n\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n\n            this.toggle();\n            this._transitionCheckState(\n                this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        } else if (!this.disabled && this._clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mc-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n\n    /** Focuses the checkbox. */\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _onInteractionEvent(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n}\n","import {\n    Directive,\n    forwardRef,\n    Provider\n} from '@angular/core';\nimport {\n    CheckboxRequiredValidator,\n    NG_VALIDATORS\n} from '@angular/forms';\n\n\nexport const MC_CHECKBOX_REQUIRED_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => McCheckboxRequiredValidator),\n    multi: true\n};\n\n/**\n * Validator for Mosaic checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mc-checkbox`.\n */\n@Directive({\n    selector: `mc-checkbox[required][formControlName],\n             mc-checkbox[required][formControl], mc-checkbox[required][ngModel]`,\n    providers: [MC_CHECKBOX_REQUIRED_VALIDATOR],\n    host: { '[attr.required]': 'required ? \"\" : null' }\n})\nexport class McCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McCheckbox } from './checkbox';\nimport { McCheckboxRequiredValidator } from './checkbox-required-validator';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McCheckbox, McCheckboxRequiredValidator],\n    declarations: [McCheckbox, McCheckboxRequiredValidator]\n})\nexport class McCheckboxModule {\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\n\n@Component({\n    selector: 'mc-divider',\n    host: {\n        class: 'mc-divider',\n        role: 'separator',\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n        '[class.mc-divider-vertical]': 'vertical',\n        '[class.mc-divider-inset]': 'inset'\n    },\n    template: '',\n    styleUrls: ['divider.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false\n})\nexport class McDivider {\n    // Whether the divider is vertically aligned.\n    @Input()\n    get vertical(): boolean {\n        return this._vertical;\n    }\n\n    set vertical(value: boolean) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n\n    private _vertical: boolean = false;\n\n    // Whether the divider is an inset divider.\n    @Input()\n    get inset(): boolean {\n        return this._inset;\n    }\n\n    set inset(value: boolean) {\n        this._inset = coerceBooleanProperty(value);\n    }\n\n    private _inset: boolean = false;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McDivider } from './divider.component';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McDivider],\n    declarations: [McDivider]\n})\nexport class McDividerModule {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-cleaner',\n    template: '<i mc-icon=\"mc-close-M_16\" class=\"mc-cleaner__icon\"></i>'\n})\nexport class McCleaner {\n}\n","import { NgControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** The element ID for this control. */\n    readonly id: string;\n\n    /** The placeholder for this control. */\n    readonly placeholder: string;\n\n    /** Gets the NgControl for this control. */\n    readonly ngControl: NgControl | null;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Whether the control is empty. */\n    readonly empty: boolean;\n\n    /** Whether the control is required. */\n    readonly required: boolean;\n\n    /** Whether the control is disabled. */\n    readonly disabled: boolean;\n\n    /** Whether the control is in an error state. */\n    readonly errorState: boolean;\n\n    /**\n     * An optional name for the control type that can be used to distinguish `mc-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mc-form-field-type-{{controlType}}` to its root element.\n     */\n    readonly controlType?: string;\n\n    /** Handles a click on the control's container. */\n    abstract onContainerClick(event: MouseEvent): void;\n}\n","import { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldNumberControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** the number step */\n    step: number;\n\n    /** the number big step */\n    bigStep: number;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Handles step up and down */\n    abstract stepUp(step: number): void;\n\n    abstract stepDown(step: number): void;\n}\n","import { Directive, Input } from '@angular/core';\n\n\nlet nextUniqueId = 0;\n\n@Directive({\n    selector: 'mc-hint',\n    host: {\n        class: 'mc-hint',\n        '[attr.id]': 'id'\n    }\n})\nexport class McHint {\n    @Input() id: string = `mc-hint-${nextUniqueId++}`;\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcPrefix]'\n})\nexport class McPrefix {\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-stepper',\n    template: `\n        <i class=\"mc mc-stepper-step-up mc-icon mc-angle-L_16 mc-icon-flip-h\" (mousedown)=\"onStepUp($event)\"></i>\n        <i class=\"mc mc-stepper-step-down mc-icon mc-angle-L_16\" (mousedown)=\"onStepDown($event)\"></i>\n    `\n})\nexport class McStepper {\n    @Output()\n    readonly stepUp: EventEmitter<void> = new EventEmitter<void>();\n    @Output()\n    readonly stepDown: EventEmitter<void> = new EventEmitter<void>();\n\n    onStepUp($event: MouseEvent) {\n        this.stepUp.emit();\n        $event.preventDefault();\n    }\n\n    onStepDown($event: MouseEvent) {\n        this.stepDown.emit();\n        $event.preventDefault();\n    }\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcSuffix]'\n})\nexport class McSuffix {\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren, Directive,\n    ElementRef,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\nimport { EMPTY, merge } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\n\nimport { McCleaner } from './cleaner';\nimport { McFormFieldControl } from './form-field-control';\nimport { getMcFormFieldMissingControlError } from './form-field-errors';\nimport { McFormFieldNumberControl } from './form-field-number-control';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\nlet nextUniqueId = 0;\n\nexport class McFormFieldBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McFormFieldMixinBase: CanColorCtor & typeof McFormFieldBase\n    = mixinColor(McFormFieldBase, ThemePalette.Primary);\n\n@Component({\n    selector: 'mc-form-field',\n    exportAs: 'mcFormField',\n    templateUrl: 'form-field.html',\n    // McInput is a directive and can't have styles, so we need to include its styles here.\n    // The McInput styles are fairly minimal so it shouldn't be a big deal for people who\n    // aren't using McInput.\n    styleUrls: [\n        'form-field.css',\n        '../input/input.css'\n    ],\n    host: {\n        class: 'mc-form-field',\n        '[class.mc-form-field_invalid]': '_control.errorState',\n        '[class.mc-form-field_disabled]': '_control.disabled',\n        '[class.mc-form-field_has-prefix]': 'hasPrefix',\n        '[class.mc-form-field_has-suffix]': 'hasSuffix',\n        '[class.mc-form-field_has-cleaner]': 'canShowCleaner',\n        '[class.mc-form-field_has-stepper]': 'canShowStepper',\n        '[class.mc-focused]': '_control.focused',\n        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n        '[class.ng-touched]': '_shouldForward(\"touched\")',\n        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n        '[class.ng-valid]': '_shouldForward(\"valid\")',\n        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n        '[class.ng-pending]': '_shouldForward(\"pending\")',\n        '(keydown)': 'onKeyDown($event)',\n        '(mouseenter)': 'onHoverChanged(true)',\n        '(mouseleave)': 'onHoverChanged(false)'\n    },\n    inputs: ['color'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class McFormField extends _McFormFieldMixinBase implements\n    AfterContentInit, AfterContentChecked, AfterViewInit, CanColor {\n\n    @ContentChild(McFormFieldControl) _control: McFormFieldControl<any>;\n    @ContentChild(McFormFieldNumberControl) _numberControl: McFormFieldNumberControl<any>;\n    @ContentChildren(McHint) _hint: QueryList<McHint>;\n    @ContentChildren(McSuffix) _suffix: QueryList<McSuffix>;\n    @ContentChildren(McPrefix) _prefix: QueryList<McPrefix>;\n    @ContentChildren(McCleaner) _cleaner: QueryList<McCleaner>;\n    @ContentChild(McStepper) _stepper: McStepper;\n\n    // Unique id for the internal form field label.\n    _labelId = `mc-form-field-label-${nextUniqueId++}`;\n\n    hovered: boolean = false;\n\n    constructor(public _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {\n        super(_elementRef);\n    }\n\n    ngAfterContentInit() {\n        this._validateControlChild();\n        if (this._control.controlType) {\n            this._elementRef.nativeElement.classList\n                .add(`mc-form-field-type-${this._control.controlType}`);\n\n            if (this._numberControl && this.hasStepper) {\n                this._stepper.stepUp.subscribe(this.onStepUp.bind(this));\n                this._stepper.stepDown.subscribe(this.onStepDown.bind(this));\n            }\n        }\n\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        this._control.stateChanges.pipe(startWith())\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n\n        if (this._numberControl) {\n            this._numberControl.stateChanges.pipe(startWith())\n                .subscribe(() => {\n                    this._changeDetectorRef.markForCheck();\n                });\n        }\n\n        // Run change detection if the value changes.\n        const valueChanges = this._control.ngControl && this._control.ngControl.valueChanges || EMPTY;\n        merge(valueChanges)\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n\n    ngAfterContentChecked() {\n        this._validateControlChild();\n    }\n\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._changeDetectorRef.detectChanges();\n    }\n\n    clearValue($event) {\n        $event.stopPropagation();\n\n        if (this._control && this._control.ngControl) {\n            this._control.ngControl.reset();\n        }\n    }\n\n    onContainerClick($event) {\n        if (this._control.onContainerClick) {\n            this._control.onContainerClick($event);\n        }\n    }\n\n    onKeyDown(e: KeyboardEvent): void {\n        // tslint:disable-next-line:deprecation\n        if (e.keyCode === ESCAPE &&\n            this._control.focused &&\n            this.hasCleaner) {\n\n            if (this._control && this._control.ngControl) {\n                this._control.ngControl.reset();\n            }\n\n            e.preventDefault();\n        }\n    }\n\n    onHoverChanged(isHovered: boolean) {\n        if (isHovered !== this.hovered) {\n            this.hovered  = isHovered;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    onStepUp() {\n        if (this._numberControl) {\n            this._numberControl.stepUp(this._numberControl.step);\n        }\n    }\n\n    onStepDown() {\n        if (this._numberControl) {\n            this._numberControl.stepDown(this._numberControl.step);\n        }\n    }\n\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop: string): boolean {\n        const ngControl = this._control ? this._control.ngControl : null;\n\n        return ngControl && ngControl[prop];\n    }\n\n    /** Throws an error if the form field's control is missing. */\n    protected _validateControlChild() {\n        if (!this._control) {\n            throw getMcFormFieldMissingControlError();\n        }\n    }\n\n    get hasHint(): boolean {\n        return this._hint && this._hint.length > 0;\n    }\n\n    get hasSuffix(): boolean {\n        return this._suffix && this._suffix.length > 0;\n    }\n\n    get hasPrefix(): boolean {\n        return this._prefix && this._prefix.length > 0;\n    }\n\n    get hasCleaner(): boolean {\n        return this._cleaner && this._cleaner.length > 0;\n    }\n\n    get hasStepper(): boolean {\n        return !!this._stepper;\n    }\n\n    get canShowCleaner(): boolean {\n        return this.hasCleaner &&\n            this._control &&\n            this._control.ngControl\n                ? this._control.ngControl.value && !this._control.disabled\n                : false;\n    }\n\n\n    get disabled(): boolean {\n        return this._control && this._control.disabled;\n    }\n\n    get canShowStepper(): boolean {\n        return this._numberControl &&\n            !this.disabled &&\n            (\n                this._numberControl.focused ||\n                this.hovered\n            );\n    }\n}\n\n@Directive({\n    selector: 'mc-form-field[mcFormFieldWithoutBorders]',\n    exportAs: 'mcFormFieldWithoutBorders',\n    host: { class: 'mc-form-field_without-borders' }\n})\nexport class McFormFieldWithoutBorders {\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCleaner } from './cleaner';\nimport { McFormField, McFormFieldWithoutBorders } from './form-field';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\n@NgModule({\n    declarations: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ],\n    imports: [CommonModule, McIconModule],\n    exports: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ]\n})\nexport class McFormFieldModule {\n}\n","import { InjectionToken } from '@angular/core';\n\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n","function sanitizeNumber(value: number): number | null {\n    return !isFinite(value) || isNaN(value)\n        ? null\n        : value;\n}\n\nfunction getPrecision(value: number): number {\n    const arr = value.toString().split('.');\n\n    return arr.length === 1\n        ? 1\n        // tslint:disable-next-line:no-magic-numbers\n        :  Math.pow(10, arr[1].length);\n}\n\nfunction add(value1: number, value2: number) {\n    const precision = Math.max(getPrecision(value1), getPrecision(value2));\n\n    const res = (value1 * precision + value2 * precision) / precision;\n\n    return sanitizeNumber(res);\n}\n\nexport const stepUp = (value: number | null,\n                       max: number,\n                       min: number,\n                       step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(min, step);\n\n        return res === null ? null : Math.min(res, max);\n    }\n\n    res = add(value, step);\n\n    return res === null ? null : Math.max(Math.min(res, max), min);\n};\n\nexport const stepDown = (value: number | null,\n                         max: number,\n                         min: number,\n                         step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(max, -step);\n\n        return res === null ? null : Math.max(res, min);\n    }\n\n    res = add(value, -step);\n\n    return res === null ? null : Math.min(Math.max(res, min), max);\n};\n","import {\n    Attribute,\n    Directive, DoCheck, ElementRef, Inject, Input, OnChanges,\n    OnDestroy, Optional, Self\n} from '@angular/core';\nimport {\n    FormGroupDirective,\n    NgControl,\n    NgForm, NgModel\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    END, C, V, X, A, DELETE, BACKSPACE, TAB, ENTER,\n    ESCAPE, ZERO, NINE, NUMPAD_ZERO, NUMPAD_NINE, NUMPAD_MINUS, DASH,\n    FF_MINUS, LEFT_ARROW, RIGHT_ARROW, HOME, UP_ARROW, DOWN_ARROW, F1, F12\n} from '@ptsecurity/cdk/keycodes';\nimport { getSupportedInputTypes, Platform } from '@ptsecurity/cdk/platform';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl, McFormFieldNumberControl } from '@ptsecurity/mosaic/form-field';\nimport { Subject } from 'rxjs';\n\nimport { getMcInputUnsupportedTypeError } from './input-errors';\nimport { MC_INPUT_VALUE_ACCESSOR } from './input-value-accessor';\nimport { stepDown, stepUp } from './stepperUtils';\n\n\nconst MC_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n\nexport const BIG_STEP = 10;\nexport const SMALL_STEP = 1;\n\nlet nextUniqueId = 0;\n\nexport class McInputBase {\n    constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n                public _parentForm: NgForm,\n                public _parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\nexport const _McInputMixinBase: CanUpdateErrorStateCtor & typeof McInputBase =\n    mixinErrorState(McInputBase);\n\n\n@Directive({\n    selector: `input[mcInput][type=\"number\"]`,\n    exportAs: 'mcNumericalInput',\n    providers: [NgModel, { provide: McFormFieldNumberControl, useExisting: McNumberInput }],\n    host: {\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McNumberInput implements McFormFieldNumberControl<any> {\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    bigStep: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    step: number;\n\n    @Input()\n    min: number;\n\n    @Input()\n    max: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    value: any;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    private readonly _host: HTMLInputElement;\n\n    constructor(\n        private _platform: Platform ,\n        private _elementRef: ElementRef,\n        private _model: NgModel,\n        @Attribute('step') step: string,\n        @Attribute('big-step') bigStep: string,\n        @Attribute('min') min: string,\n        @Attribute('max') max: string\n    ) {\n        this.step = this.isDigit(step) ? parseFloat(step) : SMALL_STEP;\n        this.bigStep = this.isDigit(bigStep) ? parseFloat(bigStep) : BIG_STEP;\n        this.min = this.isDigit(min) ? parseFloat(min) : -Infinity;\n        this.max = this.isDigit(max) ? parseFloat(max) : Infinity;\n\n        this._host = this._elementRef.nativeElement;\n\n        const self = this;\n\n        if ('valueAsNumber' in this._host) {\n            Object.defineProperty(Object.getPrototypeOf(this._host), 'valueAsNumber', {\n                // tslint:disable-next-line:no-reserved-keywords\n                get() {\n                    const res = parseFloat(self.normalizeSplitter(this.value));\n\n                    return isNaN(res) ? null : res;\n                }\n            });\n        }\n    }\n\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const keyCode = event.keyCode;\n\n        const isCtrlA = (e) => e.keyCode === A && (e.ctrlKey || e.metaKey);\n        const isCtrlC = (e) => e.keyCode === C && (e.ctrlKey || e.metaKey);\n        const isCtrlV = (e) => e.keyCode === V && (e.ctrlKey || e.metaKey);\n        const isCtrlX = (e) => e.keyCode === X && (e.ctrlKey || e.metaKey);\n\n        const isFKey = (e) => e.keyCode >= F1 && e.keyCode <= F12;\n\n        const isNumber = (e) => (e.keyCode >= ZERO && e.keyCode <= NINE) ||\n            (e.keyCode >= NUMPAD_ZERO && e.keyCode <= NUMPAD_NINE);\n\n        const minuses = [NUMPAD_MINUS, DASH, FF_MINUS];\n        const serviceKeys = [DELETE, BACKSPACE, TAB, ESCAPE, ENTER];\n        const arrows = [LEFT_ARROW, RIGHT_ARROW];\n        const allowedKeys =  [HOME, END].concat(arrows).concat(serviceKeys).concat(minuses);\n\n        const isIEPeriod = (e) => e.key === '.' || e.key === 'Decimal';\n        const isNotIEPeriod = (e) => e.key === '.' || e.key === ',';\n\n        // Decimal is for IE\n        const isPeriod = (e) => this._platform.EDGE || this._platform.TRIDENT\n            ? isIEPeriod(e)\n            : isNotIEPeriod(e);\n\n        if (allowedKeys.indexOf(keyCode) !== -1 ||\n            isCtrlA(event) ||\n            isCtrlC(event) ||\n            isCtrlV(event) ||\n            isCtrlX(event) ||\n            isFKey(event) ||\n            isPeriod(event)\n        ) {\n            // let it happen, don't do anything\n            return;\n        }\n        // Ensure that it is not a number and stop the keypress\n        if (event.shiftKey || !isNumber(event)) {\n            event.preventDefault();\n\n            // process steps\n            const step = event.shiftKey ? this.bigStep : this.step;\n\n            if (keyCode === UP_ARROW) {\n                this.stepUp(step);\n            }\n\n            if (keyCode === DOWN_ARROW) {\n                this.stepDown(step);\n            }\n        }\n    }\n\n    onPaste(event) {\n        let value = event.clipboardData.getData('text');\n        value = this.normalizeSplitter(value);\n\n        if (!this.isDigit(value)) {\n            event.preventDefault();\n        }\n    }\n\n    stepUp(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepUp(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    stepDown(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepDown(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    private normalizeSplitter(value: string): string {\n        return value ? value.replace(/,/g, '.') : value;\n    }\n\n    private isDigit(value: string): boolean {\n        return this.isFloat(value) || this.isInt(value);\n    }\n\n    private isFloat(value: string): boolean {\n        return /^-?\\d+\\.\\d+$/.test(value);\n    }\n\n    private isInt(value: string): boolean {\n        return /^-?\\d+$/.test(value);\n    }\n}\n\n@Directive({\n    selector: `input[mcInput]`,\n    exportAs: 'mcInput',\n    host: {\n        class: 'mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(input)': '_onInput()'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McInput }]\n})\nexport class McInput extends _McInputMixinBase implements McFormFieldControl<any>, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-input';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    // tslint:disable no-reserved-keywords\n    /** Input type of the element. */\n    @Input()\n    get type(): string {\n        return this._type;\n    }\n\n    set type(value: string) {\n        this._type = value || 'text';\n        this._validateType();\n\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    // tslint:enable no-reserved-keywords\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this._inputValueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected _uid = `mc-input-${nextUniqueId++}`;\n    protected _previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n    protected _type = 'text';\n    protected _neverEmptyInputTypes = [\n        'date',\n        'datetime',\n        'datetime-local',\n        'month',\n        'time',\n        'week'\n    ].filter((t) => getSupportedInputTypes().has(t));\n\n    private _inputValueAccessor: { value: any };\n\n    constructor(protected _elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || this._elementRef.nativeElement;\n\n        this._previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n\n    /** Focuses the input. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the input changes. */\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    protected _dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Make sure the input is a supported type. */\n    protected _validateType() {\n        if (MC_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMcInputUnsupportedTypeError(this._type);\n        }\n    }\n\n    /** Checks whether the input type is one of the types that are never empty. */\n    protected _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    protected _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this._elementRef.nativeElement as HTMLInputElement).validity;\n\n        return validity && validity.badInput;\n    }\n}\n\n@Directive({\n    selector: 'input[mcInputMonospace]',\n    exportAs: 'McInputMonospace',\n    host: { class: 'mc-input_monospace' }\n})\nexport class McInputMono {\n}\n","import { Directive, forwardRef, Input, OnChanges, Provider, SimpleChanges } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, ValidatorFn, Validators } from '@angular/forms';\n\n\nexport const MIN_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MinValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[min][formControlName],[min][formControl],[min][ngModel]',\n    providers: [MIN_VALIDATOR],\n    host: {'[attr.min]': 'min ? min : null'}\n})\nexport class MinValidator implements Validator, OnChanges {\n\n    @Input() min: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('min' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.min(parseInt(this.min, 10)); }\n}\n\n\nexport const MAX_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MaxValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[max][formControlName],[max][formControl],[max][ngModel]',\n    providers: [MAX_VALIDATOR],\n    host: {'[attr.max]': 'max ? max : null'}\n})\nexport class MaxValidator implements Validator,\n    OnChanges {\n\n    @Input() max: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('max' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.max(parseInt(this.max, 10)); }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McInput, McInputMono, McNumberInput } from './input';\nimport { MaxValidator, MinValidator } from './input-number-validators';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator],\n    declarations: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator ]\n})\nexport class McInputModule {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-content',\n    preserveWhitespaces: false,\n    templateUrl: './content.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-content]': 'true'\n    }\n})\nexport class McContentComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-footer',\n    preserveWhitespaces: false,\n    templateUrl: './footer.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-footer]': 'true'\n    }\n})\nexport class McFooterComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector : 'mc-header',\n    preserveWhitespaces: false,\n    templateUrl: './header.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-header]': 'true'\n    }\n})\nexport class McHeaderComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-layout',\n    preserveWhitespaces: false,\n    styleUrls: ['layout.css'],\n    templateUrl: './layout.component.html',\n    host: {\n        '[class.mc-layout]': 'true',\n        '[class.mc-layout-has-sidebar]': 'hasSidebar'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McLayoutComponent {\n    hasSidebar = false;\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\nexport function isBoolean(val: any): val is boolean { return typeof val === 'boolean'; }\n\nexport function toBoolean(value: any): boolean {\n    return value != null && `${value}` !== 'false';\n}\n","import { NgModule, InjectionToken, Optional, Inject, isDevMode } from '@angular/core';\nimport { BidiModule } from '@ptsecurity/cdk/bidi';\n\n\n// Injection token that configures whether the Mosaic sanity checks are enabled.\nexport const MC_SANITY_CHECKS = new InjectionToken<boolean>('mc-sanity-checks', {\n    providedIn: 'root',\n    factory: MC_SANITY_CHECKS_FACTORY\n});\n\nexport function MC_SANITY_CHECKS_FACTORY(): boolean {\n    return true;\n}\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Mosaic\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\n@NgModule({\n    imports: [ BidiModule ],\n    exports: [ BidiModule ]\n})\nexport class McCommonModule {\n    // Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n    private _hasDoneGlobalChecks = false;\n\n    // Reference to the global `document` object.\n    private _document = typeof document === 'object' && document ? document : null;\n\n    // Reference to the global 'window' object.\n    private _window = typeof window === 'object' && window ? window : null;\n\n    constructor(@Optional() @Inject(MC_SANITY_CHECKS) private _sanityChecksEnabled: boolean) {\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n\n    // Whether any sanity checks are enabled\n    private _areChecksEnabled(): boolean {\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    }\n\n    // Whether the code is running in tests.\n    private _isTestEnv() {\n        // tslint:disable-next-line\n        return this._window && (this._window['__karma__'] || this._window['jasmine']);\n    }\n\n    private _checkDoctypeIsDefined(): void {\n        if (this._document && !this._document.doctype) {\n            console.warn(\n                'Current document does not have a doctype. This may cause ' +\n                'some Mosaic components not to behave as expected.'\n            );\n        }\n    }\n\n    private _checkThemeIsPresent(): void {\n        if (this._document && typeof getComputedStyle === 'function') {\n            const testElement = this._document.createElement('div');\n\n            testElement.classList.add('mc-theme-loaded-marker');\n            this._document.body.appendChild(testElement);\n\n            const computedStyle = getComputedStyle(testElement);\n\n            // In some situations, the computed style of the test element can be null. For example in\n            // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n            if (computedStyle && computedStyle.display !== 'none') {\n                console.warn(\n                    'Could not find Mosaic core theme. Most Mosaic ' +\n                    'components may not work as expected. For more info refer ' +\n                    'to the theming guide: link there'\n                );\n            }\n\n            this._document.body.removeChild(testElement);\n        }\n    }\n}\n","import { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanDisable {\n    disabled: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableCtor = Constructor<CanDisable>;\n\n// Mixin to augment a directive with a `disabled` property.\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): CanDisableCtor & T {\n    return class extends base {\n        private _disabled: boolean = false;\n\n        get disabled() {\n            return this._disabled;\n        }\n\n        set disabled(value: any) {\n            this._disabled = coerceBooleanProperty(value);\n        }\n\n        constructor(...args: any[]) {\n            // tslint:disable-next-line\n            super(...args);\n        }\n    };\n}\n","import { ElementRef } from '@angular/core';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanColor {\n    color: ThemePalette;\n}\n\n/** @docs-private */\nexport type CanColorCtor = Constructor<CanColor>;\n\nexport interface HasElementRef {\n    _elementRef: ElementRef;\n}\n\nexport enum ThemePalette {\n    Primary = 'primary',\n    Second = 'second',\n    Error = 'error',\n    Default = 'second'\n}\n\n/** Mixin to augment a directive with a `color` property. */\nexport function mixinColor<T extends Constructor<HasElementRef>>(\n    base: T,\n    defaultColor: ThemePalette = ThemePalette.Default\n): CanColorCtor & T {\n    return class extends base {\n\n        private _color: ThemePalette;\n\n        get color(): ThemePalette {\n            return this._color;\n        }\n\n        set color(value: ThemePalette) {\n            const colorPalette = value || defaultColor;\n\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mc-${this._color}`);\n                }\n\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mc-${colorPalette}`);\n                }\n\n                this._color = colorPalette;\n            }\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n\n            this.color = defaultColor;\n        }\n    };\n}\n\n","import { Constructor } from './constructor';\nimport { CanDisable } from './disabled';\n\n\nexport interface HasTabIndex {\n    tabIndex: number;\n}\n\nexport type HasTabIndexCtor = Constructor<HasTabIndex>;\n\n// Mixin to augment a directive with a `tabIndex` property.\nexport function mixinTabIndex<T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0)\n    : HasTabIndexCtor & T {\n    return class extends base {\n        private _tabIndex: number = defaultTabIndex;\n\n        get tabIndex(): number {\n            return this.disabled ? -1 : this._tabIndex;\n        }\n\n        set tabIndex(value: number) {\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n    };\n}\n","import { FormControl, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\nimport { ErrorStateMatcher } from '../error/error-options';\n\nimport { Constructor } from './constructor';\n\n\n/** @docs-private */\nexport interface CanUpdateErrorState {\n\n    readonly stateChanges: Subject<void>;\n\n    errorState: boolean;\n    errorStateMatcher: ErrorStateMatcher;\n\n    updateErrorState();\n}\n\n/** @docs-private */\nexport type CanUpdateErrorStateCtor = Constructor<CanUpdateErrorState>;\n\n/** @docs-private */\nexport interface HasErrorState {\n    _parentFormGroup: FormGroupDirective;\n    _parentForm: NgForm;\n    _defaultErrorStateMatcher: ErrorStateMatcher;\n    ngControl: NgControl;\n}\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T)\n    : CanUpdateErrorStateCtor & T {\n    return class extends base {\n        /** Whether the component is in an error state. */\n        errorState: boolean = false;\n\n        /**\n         * Stream that emits whenever the state of the input changes such that the wrapping\n         * `MatFormField` needs to run change detection.\n         */\n        readonly stateChanges = new Subject<void>();\n\n        errorStateMatcher: ErrorStateMatcher;\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this._parentFormGroup || this._parentForm;\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control as FormControl : null;\n            const newState = matcher.isErrorState(control, parent);\n\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n","import {\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ENTER, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Subject } from 'rxjs';\n\nimport { McOptgroup } from './optgroup';\n\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n\n/** Event object emitted by McOption when selected or deselected. */\nexport class McOptionSelectionChange {\n    constructor(\n        /** Reference to the option that emitted the event. */\n        public source: McOption,\n        /** Whether the change in the option's value was a result of a user action. */\n        public isUserInput = false) {\n    }\n}\n\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * @docs-private\n */\nexport interface IMcOptionParentComponent {\n    disableRipple?: boolean;\n    multiple?: boolean;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_OPTION_PARENT_COMPONENT =\n    new InjectionToken<IMcOptionParentComponent>('MC_OPTION_PARENT_COMPONENT');\n\n/**\n * Single option inside of a `<mat-select>` element.\n */\n@Component({\n    selector: 'mc-option',\n    exportAs: 'mcOption',\n    host: {\n        '[attr.tabindex]': '_getTabIndex()',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-option-multiple]': 'multiple',\n        '[class.mc-active]': 'active',\n        '[id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '(click)': '_selectViaInteraction()',\n        '(keydown)': '_handleKeydown($event)',\n        class: 'mc-option'\n    },\n    styleUrls: ['option.css'],\n    templateUrl: 'option.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McOption implements AfterViewChecked, OnDestroy {\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n        return this._parent && this._parent.multiple;\n    }\n\n    /** The unique ID of the option. */\n    get id(): string {\n        return this._id;\n    }\n\n    /** Whether or not the option is currently selected. */\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    /** The form value of the option. */\n    @Input() value: any;\n\n    /** Whether the option is disabled. */\n    @Input()\n    get disabled() {\n        return (this.group && this.group.disabled) || this._disabled;\n    }\n\n    set disabled(value: any) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() {\n        return this._parent && this._parent.disableRipple;\n    }\n\n    /** Event emitted when the option is selected or deselected. */\n        // tslint:disable-next-line:no-output-on-prefix\n    @Output() readonly onSelectionChange = new EventEmitter<McOptionSelectionChange>();\n\n    /** Emits when the state of the option changes and any parents have to be notified. */\n    readonly _stateChanges = new Subject<void>();\n\n    private _selected = false;\n    private _active = false;\n    private _disabled = false;\n    private readonly _id = `mc-option-${_uniqueIdCounter++}`;\n    private _mostRecentViewValue = '';\n\n    constructor(\n        private readonly _element: ElementRef,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_OPTION_PARENT_COMPONENT) private readonly _parent: IMcOptionParentComponent,\n        @Optional() readonly group: McOptgroup) {\n    }\n\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active(): boolean {\n        return this._active;\n    }\n\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue(): string {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n\n    /** Selects the option. */\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Deselects the option. */\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Sets focus onto this option. */\n    focus(): void {\n        const element = this._getHostElement();\n\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles(): void {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles(): void {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        return this.viewValue;\n    }\n\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event: KeyboardEvent): void {\n        // tslint:disable-next-line\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\n            this._selectViaInteraction();\n\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction(): void {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Gets the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n\n    /** Emits the selection change event. */\n    private _emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McOptionSelectionChange(this, isUserInput));\n    }\n}\n\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nexport function _countGroupLabelsBeforeOption(\n    optionIndex: number, options: QueryList<McOption>,\n    optionGroups: QueryList<McOptgroup>\n): number {\n\n    if (optionGroups.length) {\n        const optionsArray = options.toArray();\n        const groups = optionGroups.toArray();\n\n        let groupCounter = 0;\n\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n\n        return groupCounter;\n    }\n\n    return 0;\n}\n\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionIndex Index of the option to be scrolled into the view.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nexport function _getOptionScrollPosition(\n    optionIndex: number,\n    optionHeight: number,\n    currentScrollPosition: number,\n    panelHeight: number\n): number {\n    const optionOffset = optionIndex * optionHeight;\n\n    if (optionOffset < currentScrollPosition) { return optionOffset; }\n\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n\n    return currentScrollPosition;\n}\n\n","import { ConnectionPositionPair } from '@ptsecurity/cdk/overlay';\n\n\nexport const POSITION_MAP: { [key: string]: ConnectionPositionPair } = {\n    top         : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom'\n    },\n    topCenter   : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topLeft     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topRight    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    right       : {\n        originX : 'end',\n        originY : 'center',\n        overlayX: 'start',\n        overlayY: 'center'\n    },\n    rightTop    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'top',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    rightBottom : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    bottom      : {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomCenter: {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomLeft  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    bottomRight : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    left        : {\n        originX : 'start',\n        originY : 'center',\n        overlayX: 'end',\n        overlayY: 'center'\n    },\n    leftTop     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    leftBottom  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    }\n};\n\nexport const DEFAULT_4_POSITIONS = _objectValues([\n    POSITION_MAP.top, POSITION_MAP.right, POSITION_MAP.bottom, POSITION_MAP.left\n]);\n\nfunction arrayMap<T, S>(array: T[], iteratee: (item: T, index: number, arr: T[]) => S): S[] {\n    let index = -1;\n    const length = array == null ? 0 : array.length;\n    const result = Array(length);\n\n    while (++index < length) {\n        result[ index ] = iteratee(array[ index ], index, array);\n    }\n\n    return result;\n}\nfunction baseValues<T>(object: { [key: string]: T } | T[], props: string[]): T[] {\n    return arrayMap(props,  (key) => {\n        return object[ key ];\n    });\n}\nfunction _objectValues<T>(object: { [key: string]: T } | T[]): T[] {\n    return object == null ? [] : baseValues(object, Object.keys(object));\n}\n","export function getMcFormFieldMissingControlError(): Error {\n  return Error('mc-form-field must contain a McFormFieldControl.');\n}\n","export function getMcInputUnsupportedTypeError(inputType: string): Error {\n    return Error(`Input type \"${inputType}\" isn't supported by mcInput.`);\n}\n","/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nexport function getMcSelectDynamicMultipleError(): Error {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nexport function getMcSelectNonArrayValueError(): Error {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nexport function getMcSelectNonFunctionValueError(): Error {\n    return Error('`compareWith` must be a function.');\n}\n","import { NgModule, Directive, ElementRef, QueryList } from '@angular/core';\n\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(McLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({\n    selector: '[mc-line], [mcLine]',\n    host: { class: 'mc-line' }\n})\nexport class McLine {}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nexport class McLineSetter {\n    constructor(private _lines: QueryList<McLine>, private _element: ElementRef) {\n        this._setLineClass(this._lines.length);\n\n        this._lines.changes.subscribe(() => {\n            this._setLineClass(this._lines.length);\n        });\n    }\n\n    private _setLineClass(count: number): void {\n        this._resetClasses();\n        if (count === 2 || count === 3) {\n            this._setClass(`mc-${count}-line`, true);\n        } else if (count > 3) {\n            this._setClass(`mc-multi-line`, true);\n        }\n    }\n\n    private _resetClasses(): void {\n        this._setClass('mc-2-line', false);\n        this._setClass('mc-3-line', false);\n        this._setClass('mc-multi-line', false);\n    }\n\n    private _setClass(className: string, isAdd: boolean): void {\n        if (isAdd) {\n            this._element.nativeElement.classList.add(className);\n        } else {\n            this._element.nativeElement.classList.remove(className);\n        }\n    }\n}\n\n@NgModule({\n    imports: [],\n    exports: [McLine],\n    declarations: [McLine]\n})\nexport class McLineModule {}\n","import { Injectable } from '@angular/core';\nimport { FormGroupDirective, NgForm, FormControl } from '@angular/forms';\n\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n@Injectable()\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\n\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n@Injectable({ providedIn: 'root' })\nexport class ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\n\nexport type McPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mc-primary .mc-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mc-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n@Component({\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'mc-pseudo-checkbox',\n    styleUrls: ['pseudo-checkbox.css'],\n    templateUrl: 'pseudo-checkbox.partial.html',\n    host: {\n        class: 'mc-pseudo-checkbox',\n        '[class.mc-pseudo-checkbox_indeterminate]': 'state === \"indeterminate\"',\n        '[class.mc-pseudo-checkbox_checked]': 'state === \"checked\"',\n        '[class.mc-disabled]': 'disabled'\n    }\n})\nexport class McPseudoCheckbox {\n    @Input() state: McPseudoCheckboxState = 'unchecked';\n\n    @Input() disabled: boolean = false;\n}\n","import { NgModule } from '@angular/core';\n\nimport { McPseudoCheckbox } from './pseudo-checkbox/pseudo-checkbox';\n\n\n@NgModule({\n    exports: [McPseudoCheckbox],\n    declarations: [McPseudoCheckbox]\n})\nexport class McPseudoCheckboxModule {}\n\n\nexport * from './pseudo-checkbox/pseudo-checkbox';\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class McMeasureScrollbarService {\n\n    get scrollBarWidth(): number {\n        if (this._scrollbarWidth) {\n            return this._scrollbarWidth;\n        }\n        this.initScrollBarWidth();\n\n        return this._scrollbarWidth;\n    }\n\n    private _scrollbarWidth: number;\n    private scrollbarMeasure = {\n        position: 'absolute',\n        top: '-9999px',\n        width: '50px',\n        height: '50px',\n        overflow: 'scroll'\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private document: any\n    ) {\n        this.initScrollBarWidth();\n    }\n\n    initScrollBarWidth() {\n        const scrollDiv = this.document.createElement('div');\n\n        // tslint:disable-next-line\n        for (const scrollProp in this.scrollbarMeasure) {\n            if (this.scrollbarMeasure.hasOwnProperty(scrollProp)) {\n                scrollDiv.style[scrollProp] = this.scrollbarMeasure[scrollProp];\n            }\n        }\n\n        this.document.body.appendChild(scrollDiv);\n\n        const width = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n        this.document.body.removeChild(scrollDiv);\n        this._scrollbarWidth = width;\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\nimport { mixinDisabled, CanDisable, CanDisableCtor } from '../common-behaviors/index';\n\n\n// Boilerplate for applying mixins to McOptgroup.\n/** @docs-private */\nexport class McOptgroupBase {}\n\nexport const _McOptgroupMixinBase: CanDisableCtor & typeof McOptgroupBase = mixinDisabled(McOptgroupBase);\n\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\n\n/**\n * Component that is used to group instances of `mc-option`.\n */\n@Component({\n    selector: 'mc-optgroup',\n    exportAs: 'mcOptgroup',\n    templateUrl: 'optgroup.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    styleUrls: ['optgroup.css'],\n    host: {\n        class: 'mc-optgroup',\n        role: 'group',\n        '[class.mc-optgroup-disabled]': 'disabled',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-labelledby]': '_labelId'\n    }\n})\nexport class McOptgroup extends _McOptgroupMixinBase implements CanDisable {\n    /** Label for the option group. */\n    @Input() label: string;\n\n    /** Unique id for the underlying label. */\n    _labelId: string = `mc-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McPseudoCheckboxModule } from '../selection/index';\n\nimport { McOptgroup } from './optgroup';\nimport { McOption } from './option';\n\n\n@NgModule({\n    imports: [CommonModule, McPseudoCheckboxModule],\n    exports: [McOption, McOptgroup],\n    declarations: [McOption, McOptgroup]\n})\nexport class McOptionModule {}\n\n\nexport * from './option';\nexport * from './optgroup';\n","import { InjectionToken } from '@angular/core';\n\n\n/** InjectionToken that can be used to specify the global label options. */\nexport const MC_LABEL_GLOBAL_OPTIONS =\n    new InjectionToken<LabelOptions>('mc-label-global-options');\n\n/** Type for the available floatLabel values. */\nexport type FloatLabelType = 'always' | 'never' | 'auto';\n\n/** Configurable options for floating labels. */\nexport interface LabelOptions {\n    /**\n     * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n     * Default behavior is assumed to be `auto`.\n     */\n    float?: FloatLabelType;\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata,\n} from '@angular/animations';\n\n\nexport const fadeAnimation: AnimationTriggerMetadata =  trigger('fadeAnimation', [\n    state('void', style({ opacity: 0 })),\n    state('true', style({ opacity: 1 })),\n    state('false', style({ opacity: 0 })),\n    transition('* => true', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n    transition('* => void', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)')),\n]);\n","import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { mixinColor, CanColor, CanColorCtor } from '@ptsecurity/mosaic/core';\n\n\n@Directive({\n    selector: '[mc-icon]',\n    host: { class: 'mc mc-icon' }\n})\nexport class McIconCSSStyler {}\n\n\nexport class McIconBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McIconMixinBase: CanColorCtor & typeof McIconBase\n    = mixinColor(McIconBase);\n\n\n@Component({\n    selector: `[mc-icon]`,\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./icon.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color']\n})\nexport class McIcon extends _McIconMixinBase implements CanColor {\n    constructor(elementRef: ElementRef, @Attribute('mc-icon') iconName: string) {\n        super(elementRef);\n\n        elementRef.nativeElement.classList.add(iconName);\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McIcon,\n    McIconCSSStyler\n} from './icon.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McIcon,\n        McIconCSSStyler\n    ],\n    declarations: [\n        McIcon,\n        McIconCSSStyler\n    ]\n})\nexport class McIconModule {}\n"],"names":["this","removeStyle","setStyle","McSplitterAreaDirective","prototype","ngOnDestroy","splitter","removeArea","setOrder","order","setSize","size","sz","coerceNumberProperty","getSizeProperty","coerceCssPixelValue","getSize","elementRef","nativeElement","getOffsetSizeProperty","getMinSize","styles","getComputedStyle","parseFloat","getMinSizeProperty","isVertical","direction","style","value","renderer","tslib_1.__decorate","Directive","selector","tslib_1.__metadata","ElementRef","Renderer2","McSplitterComponent","McSplitterModule","NgModule","imports","CommonModule","McIconModule","exports","McGutterDirective","declarations","McToolTipComponent","cdr","_prefix","_positions","DEFAULT_4_POSITIONS","slice","_classMap","_placement","_trigger","visibleSource","BehaviorSubject","$visible","asObservable","mcVisibleChange","EventEmitter","mcMouseEnterDelay","mcMouseLeaveDelay","_onHide","Subject","_closeOnInteraction","availablePositions","POSITION_MAP","Object","defineProperty","get","_title","set","isTitleString","TemplateRef","visible","coerceBooleanProperty","next","emit","unshift","mcPlacement","show","_this","hideTId","clearTimeout","isContentEmpty","showTId","setTimeout","mcVisible","_markForCheck","hide","setClassMap","_a","mcTitle","afterHidden","markForCheck","_handleBodyInteraction","Output","Input","Component","animations","fadeAnimation","template","preserveWhitespaces","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","host","(body:click)","ChangeDetectorRef","MC_TOOLTIP_SCROLL_STRATEGY","InjectionToken","MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","provide","deps","Overlay","useFactory","MC_TOOLTIP_SCROLL_STRATEGY_FACTORY","McTooltipDirective","_overlay","_ngZone","_scrollDispatcher","hostView","_scrollStrategy","_dir","isTooltipOpen","isDynamicTooltip","parentDisabled","_disabled","$unsubscribe","manualListeners","Map","_destroyed","title","updateCompValue","_mouseEnterDelay","_mouseLeaveDelay","_visible","_createOverlay","_overlayRef","strategy","position","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withPositions","scrollableAncestors","getAncestorScrollContainers","withScrollableContainers","positionChanges","pipe","takeUntil","subscribe","change","tooltip","onPositionChange","scrollableViewProperties","isOverlayClipped","run","create","positionStrategy","panelClass","scrollStrategy","_updatePosition","detachments","_detach","hasAttached","detach","$event","updatedPlacement","keys","some","key","connectionPair","originX","originY","overlayX","overlayY","handlePositioningUpdate","pos","overlayElement","clientHeight","element","currentContainer","top","parseInt","split","ngOnInit","mcTrigger","forEach","listener","event","addEventListener","dispose","removeEventListener","clear","complete","handleKeydown","e","keyCode","ESCAPE","handleTouchend","getConfig","origin","_getOrigin","overlay","_getOverlayPosition","tslib_1.__assign","main","fallback","originPosition","isLtr","getMcTooltipInvalidPositionError","_invertPosition","x","y","overlayPosition","newX","newY","disabled","overlayRef","_portal","ComponentPortal","attach","instance","property","distinctUntilChanged","data","HostBinding","(keydown)","(touchend)","tslib_1.__param","Inject","Optional","NgZone","ScrollDispatcher","ViewContainerRef","Directionality","McToolTipModule","BrowserAnimationsModule","OverlayModule","providers","entryComponents","VERSION","Version","SELECT_PANEL_PADDING_X","McTimepicker","_isTimeGreaterThenMax","timeToCompare","getTime","_maxDTime","ErrorStateMatcher","McTimepicker_1","exportAs","class","[attr.id]","[attr.placeholder]","[disabled]","[required]","[attr.time-format]","[attr.min-time]","[attr.max-time]","[attr.value]","(blur)","(focus)","(input)","(paste)","NG_VALIDATORS","useValue","ɵ1","multi","McFormFieldControl","useExisting","forwardRef","Self","MC_INPUT_VALUE_ACCESSOR","NgControl","NgForm","FormGroupDirective","McTimepickerMixinBase","McTimepickerModule","A11yModule","PlatformModule","FormsModule","mcSelectAnimations","transformPanel","trigger","state","transform","minWidth","opacity","transition","group","query","animateChild","animate","fadeInContent","nextUniqueId","MC_SELECT_SCROLL_STRATEGY","MC_SELECT_SCROLL_STRATEGY_PROVIDER","MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","McSelectChange","source","McSelectBase","_elementRef","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","_McSelectMixinBase","mixinTabIndex","mixinDisabled","mixinErrorState","McSelectTrigger","McSelect","_super","_viewportRuler","_changeDetectorRef","_renderer","_parentFormField","tabIndex","_scrollStrategyFactory","call","_triggerFontSize","_optionIds","_transformOrigin","_panelDoneAnimating","_panelDoneAnimatingStream","_offsetY","controlType","optionSelectionChanges","defer","options","merge","apply","map","option","onSelectionChange","onStable","take","switchMap","openedChange","_openedStream","filter","o","_closedStream","selectionChange","valueChange","hiddenItems","_panelOpen","_required","_scrollTop","_multiple","_uid","_destroy","_focused","_onChange","_onTouched","_compareWith","o1","o2","valueAccessor","id","tslib_1.__extends","McSelect_1","_placeholder","stateChanges","_selectionModel","getMcSelectDynamicMultipleError","fn","getMcSelectNonFunctionValueError","_initializeSelection","_value","newValue","writeValue","_id","SelectionModel","multiple","panelOpen","overlayDir","offsetX","ngAfterContentInit","_initKeyManager","onChange","added","select","removed","deselect","changes","startWith","_resetOptions","ngAfterViewInit","tags","_calculateHiddenItems","ngDoCheck","updateErrorState","ngOnChanges","toggle","close","open","length","_triggerRect","getBoundingClientRect","_keyManager","withHorizontalOrientation","_calculateOverlayPosition","_highlightCorrectOption","fontSize","_isRtl","_setSelectionByValue","registerOnChange","registerOnTouched","setDisabledState","isDisabled","selected","empty","selectedOptions","viewValue","reverse","join","isEmpty","_handleKeydown","_handleOpenKeydown","_handleClosedKeydown","_onFadeInDone","_onFocus","_onBlur","_onAttached","positionChange","detectChanges","_calculateOverlayOffsetX","panel","scrollTop","_getPanelTheme","color","focus","_calculateOverlayScroll","selectedIndex","scrollBuffer","maxScroll","itemHeight","_getItemHeight","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","Math","min","max","onContainerClick","onRemoveMatcherItem","stopPropagation","visibleItems","totalItemsWidth","_getTotalItemsWidthInMatcher","totalVisibleItemsWidth","tag","offsetTop","offsetHeight","width","itemsCounter","querySelector","matcherList","itemsCounterShowed","matcherListWidth","matcherWidth","triggerClone","cloneNode","remove","appendChild","querySelectorAll","item","isArrowKey","DOWN_ARROW","UP_ARROW","LEFT_ARROW","RIGHT_ARROW","ENTER","SPACE","altKey","preventDefault","onKeydown","manager","HOME","END","setFirstItemActive","setLastItemActive","activeItem","A","ctrlKey","hasDeselectedOptions_1","previouslyFocusedIndex","activeItemIndex","shiftKey","_selectViaInteraction","Promise","resolve","then","Array","isArray","getMcSelectNonArrayValueError","currentValue","_selectValue","_sortValues","correspondingOption","setActiveItem","find","error","isDevMode","console","warn","ActiveDescendantKeyManager","withTypeAhead","withVerticalOrientation","tabOut","_scrollActiveOptionIntoView","changedOrDestroyed","_onSelect","isUserInput","_stateChanges","_setOptionIds","wasSelected","isSelected","_propagateChanges","options_1","toArray","sort","a","b","sortComparator","indexOf","fallbackValue","valueToEmit","activeOptionIndex","labelCount","_countGroupLabelsBeforeOption","optionGroups","_getOptionScrollPosition","_getOptionIndex","reduce","result","current","index","undefined","items","_getItemCount","panelHeight","scrollContainerHeight","selectedOptionOffset","_calculateOverlayOffsetY","_checkOverlayWithinViewport","overlayRect","viewportSize","getViewportSize","isRtl","first","leftOverflow","left","rightOverflow","right","round","updatePosition","topSpaceAvailable","bottomSpaceAvailable","height","bottom","panelHeightTop","abs","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","optionHeightAdjustment","ViewChild","ViewChildren","McTag","QueryList","CdkConnectedOverlay","ContentChildren","McOption","descendants","McOptgroup","ContentChild","Observable","inputs","[attr.tabindex]","[class.mc-disabled]","[class.mc-select-invalid]","[class.mc-select-required]","(window:resize)","MC_OPTION_PARENT_COMPONENT","Attribute","ViewportRuler","McFormField","String","McSelectModule","McOptionModule","McTagModule","McFormFieldModule","ngZone","areas","_gutterSize","isDragging","areaPositionDivider","listeners","_direction","gutterSize","addArea","area","push","initialSize","onMouseDown","leftAreaIndex","rightAreaIndex","leftArea","rightArea","startPoint","screenX","screenY","disableFlex","runOutsideAngular","listen","onMouseUp","onMouseMove","indexToRemove","splice","endPoint","offset","newLeftAreaSize","newRightAreaSize","minLeftAreaSize","minRightAreaSize","rightAreaOffset","unsubscribe","pop","_order","_size","getCursor","getState","setAttr","Error","attribute","setAttribute","toBoolean","markRadiosForCheck","McRadioGroup","checkSelectedRadioButton","_selected","checked","_isInitialized","touch","onTouched","emitChangeEvent","McRadioChange","_radios","radio","_changeDetector","controlValueAccessorChangeFn","updateRadioButtonNames","name","updateSelectedRadioFromValue","isAlreadySelected","McRadioButton","MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","role","_McRadioGroupMixinBase","McRadioButtonBase","_McRadioButtonMixinBase","mixinColor","radioGroup","_radioDispatcher","_uniqueId","isFocused","_checked","removeUniqueSelectionListener","newCheckedState","notify","newDisabledState","required","_labelPosition","labelPosition","onInputClick","onInputChange","groupValueChanged","[class.mc-radio-checked]","[class.mc-radio-disabled]","UniqueSelectionDispatcher","McRadioModule","McCommonModule","McTreeNodeDef","McTreeNodeDef_1","CdkTreeNodeDef","McTreeNodePadding","arguments","_baseLeftPadding","_iconWidth","_indent","McTreeNodePadding_1","_withIcon","_paddingIndent","nodeLevel","_treeNode","_tree","treeControl","getLevel","level","_level","leftPadding","isExpandable","_setPadding","CdkTreeNodePadding","McTreeNodeOption","treeSelection","_hasFocus","McTreeNodeOption_1","setSelected","setFocusedOption","_getHeight","getClientRects","_handleFocus","_handleBlur","_handleClick","tabindex","[class.mc-selected]","[class.mc-focused]","[attr.aria-expanded]","[attr.aria-level]","(click)","CdkTreeNode","McTreeSelection","_McTreeSelectionBase","CdkTree","McTreeNavigationChange","McTreeSelectionChange","_differs","autoSelect","noUnselect","navigationChange","McTreeSelection_1","rawValue","log","_onKeyDown","withShift","withCtrl","collapse","expand","toggleFocusedOption","PAGE_UP","setPreviousPageItemActive","PAGE_DOWN","setNextPageItemActive","FocusKeyManager","updateScrollSize","withScrollSize","floor","updateActiveItem","previousIndex_1","previousActiveItemIndex","activeIndex_1","_canDeselectLast","_emitNavigationEvent","focusedIndex","_isValidIndex","focusedOption","_emitChangeEvent","renderNodeChanges","dataDiffer","viewContainer","parentData","_dataDiffer","_nodeOutlet","arrayOfInstances","_embeddedViews","view","viewDef","def","nodes","node","nodeMatchedQueries","matchedQueryIds","nodeData","nodeIndex","reset","notifyOnChanges","CdkTreeNodeOutlet","[tabIndex]","IterableDiffers","MC_TREE_DIRECTIVES","McTreeModule","CdkTreeModule","McTreeFlattener","transformFunction","getChildren","_flattenNode","resultNodes","parentMap","flatNode","children","child","childParentMap","flattenNodes","structuredData","expandFlattenedNodes","results","currentExpand","i","isExpanded","McTreeFlatDataSource","treeFlattener","initialData","_flattenedData","_expandedData","_data","dataNodes","connect","collectionViewer","viewChange","expansionModel","disconnect","DataSource","McTreeNestedDataSource","McTagBase","_McTagMixinBase","_addClassModificatorForIcons","icons","contentChildren","iconElement","previousElementSibling","nextElementSibling","nextSibling","classList","add","previousSibling","firstIconElement","secondIconElement","McIcon","TimeParts","TimeFormats","TIMEFORMAT_PLACEHOLDERS","hh:mm:ss","hh:mm","DEFAULT_TIME_FORMAT","HHmm","HOURS_MINUTES_SECONDS_REGEXP","RegExp","HOURS_MINUTES_REGEXP","HOURS_ONLY_REGEXP","_uniqueComponentIdSuffix","_validatorOnChange","noop","_validator","McTimepickerBase","validate","c","registerOnValidatorChange","inputValueAccessor","focused","_minTime","_maxTime","_inputValueAccessor","_previousNativeValue","Validators","compose","_parseValidator","_minTimeValidator","_maxTimeValidator","_applyInputChanges","_timeFormat","formatValue","timeFormatKey","placeholder","toLowerCase","minValue","_minDTime","_getDateFromTimeString","maxValue","_dirtyCheckNativeValue","focusChanged","onBlur","onPaste","clipboardUserInput","clipboardData","getData","onInput","initialCursorStart","selectionStart","initialCursorEnd","selectionEnd","isAutocompleteTriggered","_getParsedTimeParts","hoursOnly","hoursAndMinutes","hoursAndMinutesAndSeconds","doTimestringReformat","errors","_createSelectionOfTimeComponentInInput","_isBadInput","setProperty","_getTimeStringFromDate","timeFormat","onKeyDown","_getKeyCode","_upDownTimeByArrowKeys","_switchSelectionBetweenTimeparts","validity","badInput","applyParams","changedTime","timeToApply","_currentDTimeInput","control","updateValueAndValidity","cursorPos","modifiedTimePart","_getTimeEditMetrics","_incrementTime","_decrementTime","_getCursorPositionOfPrevTimePartStart","_getCursorPositionOfNextTimePartStart","code","newEditParams","cursorStartPosition","cursorEndPosition","dateVal","whatToIncrement","seconds","_getTimeDigitsFromDate","hours","minutes","_getDateFromTimeDigits","whatToDecrement","timeString","timeDevider","nextDividerPos","cursorPosition","minutesIndex","hoursIndex","secondsIndex","tempVal","_getNumberWithLeadingZero","getHours","getMinutes","getSeconds","HHmmss","match","trim","Number","resultDate","Date","isNaN","digit","mcTimepickerParse","text","_isTimeLowerThenMin","mcTimepickerLowerThenMintime","mcTimepickerHigherThenMaxtime","McModalComponent","onButtonClick","button","getButtonCallableProp","isPromise","loading","catch","changeVisibleFromInside","closeResult","handleVisibleStateChange","changeAnimationState","animationState","maskAnimationClassMap","modalAnimationClassMap","_b","contentComponentRef","changeDetectorRef","changeDetector","animateTo","isVisible","window","updateTransformOrigin","formatModalButtons","buttons","type","autoLoading","createDynamicComponent","component","factory","cfr","resolveComponentFactory","childInjector","Injector","McModalRef","parent","parentInjector","mcComponentParams","assign","modalElement","modalContainer","lastPosition","ModalUtil","getLastClickPosition","transformOrigin","offsetLeft","changeBodyOverflow","plusNum","modalControl","openModals","document","body","mcMeasureScrollbarService","scrollBarWidth","read","DOCUMENT","ComponentFactoryResolver","McMeasureScrollbarService","McModalControlService","CssUnitPipe","defaultUnit","formatted","Pipe","ModalBuilderForService","createModal","mcGetContainer","changeProps","modalRef","mcAfterClose","destroyModal","keydownEvents","mcCloseByESC","getInstance","McModalService","afterAllClose","closeAll","mcOnCancel","mcWidth","confirm","confirmType","mcOnOk","mcModalType","mcClassName","mcMaskClosable","success","simpleConfirm","delete","mcCancelText","Injectable","McModalModule","McButtonModule","MC_NAVBAR_CONTAINER","MC_NAVBAR_ITEM","MC_NAVBAR_BRAND","MC_NAVBAR_TITLE","McNavbarLogo","McNavbarBrand","McNavbarTitle","McNavbarItemBase","_McNavbarMixinBase","McNavbarItem","_focusMonitor","_platform","_cdRef","dropdownItems","isCollapsed","_subscription","Subscription","encodeURI","dropdownContent","denyClickIfDisabled","_focusMonitor$","monitor","hasDropdownContent","listenClickOutside","startListenFocusDropdownItems","stopMonitoring","stopListenFocusDropdownItems","isActiveDropdownLink","link","isBrowser","location","href","handleClickByItem","toggleDropdown","isNavbarItem","target","contains","handleClickByDropdownItem","forceCloseDropdown","_dropdownElements","el","events","eventListeners","hasAttribute","stopImmediatePropagation","[attr.disabled]","FocusMonitor","Platform","McNavbarContainer","CollapsibleItem","_collapsed","processCollapsed","collapsed","updateCollapsedClass","CachedItemWidth","itemsForCollapse","_collapsedItemsWidth","calculateAndCacheCollapsedItemsWidth","updateTitle","acc","getTitle","computedTitle","getAttribute","decodeURI","innerText","removeAttribute","McNavbar","forceRecalculateItemsWidth","resizeDebounceInterval","firstLevelElement","secondLevelElements","resizeObserver","fromEvent","debounceTime","_resizeSubscription","updateCollapsed","bind","_itemsWidths","calculateAndCacheItemsWidth","_totalItemsWidths","calculateAndCacheTotalItemsWidth","collapseDelta","maxAllowedWidth","itemsWidths","canCollapse","collapsedItemsWidth","getOuterElementWidth","getPropertyValue","allItemsSelector","allItems","from","getItemsForCollapse","McNavbarModule","idIterator","McProgressBarBase","_McProgressBarMixinBase","McProgressBar","mode","ThemePalette","Primary","McProgressBarModule","McProgressSpinnerBase","_McProgressSpinnerMixinBase","McProgressSpinner","percentage","McProgressSpinnerModule","McRadioGroupBase","NG_VALUE_ACCESSOR","_name","v","McSidebarComponent","[class.mc-layout-sidebar]","[class.mc-layout-sidebar-collapsed]","[style.flex]","[style.max-width.px]","[style.min-width.px]","[style.width.px]","Host","McLayoutComponent","McLayoutModule","McContentComponent","McFooterComponent","McHeaderComponent","McListOption","_element","listSelection","checkboxPosition","_reportValueChange","wasSelected_1","_lineSetter","McLineSetter","_lines","_removeOptionFromList","getLabel","_text","textContent","_getHostElement","McLine","McListSelection","MC_SELECTION_LIST_VALUE_ACCESSOR","McListSelectionChange","McListSelectionBase","_McListSelectionMixinBase","horizontal","_modelChanges","EMPTY","_","_tempValues","_setOptionsFromValues","_i","_c","selectAll","deselectAll","values","getSelectedOptionValues","listOption","optionIndex","setPreviousItemActive","setNextItemActive","_getOptionByValue","Boolean","McListBase","McList","McListSubheaderCssStyler","McListItemBase","McListItem","McListModule","McLineModule","McLinkBase","_McLinkBase","McLink","McLinkModule","parentService","rootOpenModals","rootAfterAllClose","rootRegisteredMetaMap","registeredMetaMap","registerModal","hasRegistered","afterOpenSubscription","afterOpen","afterCloseSubscription","afterClose","removeOpenModal","has","SkipSelf","listenDocumentClick","clientX","clientY","ModalUtil$1","_mcVisible","mcZIndex","_mcClosable","_mcMask","_mcMaskClosable","mcAfterOpen","mcOkType","_mcOkLoading","_mcCancelLoading","mcOkText","isComponent","mcContent","isModalButtons","mcFooter","container","HTMLElement","OverlayRef","firstChange","bodyContainer","insert","autoFocusButtonOk","destroy","triggerOk","onClickOkCancel","triggerCancel","getContentComponentRef","getContentComponent","getElement","onClickMask","mcMask","isModalType","onClickCloseBtn","ok","cancel","loadingKey","caseClose_1","doClose","handleThen","isNonEmptyString","isTemplateRef","Type","animation","prop","args","McButton","McAnchor","McIconButton","McButtonCSSStyler","McXSButtonCSSStyler","McSMButtonCSSStyler","McLGButtonCSSStyler","McXLButtonCSSStyler","McIconButtonCSSStyler","MC_CHECKBOX_CLICK_ACTION","MC_CHECKBOX_CONTROL_VALUE_ACCESSOR","McCheckbox","TransitionCheckState","McCheckboxChange","McCheckboxBase","_McCheckboxMixinBase","_clickAction","ariaLabel","ariaLabelledby","indeterminateChange","_currentAnimationClass","_currentCheckState","Init","_controlValueAccessorChangeFn","_indeterminate","_inputElement","focusOrigin","_onInputFocusChange","changed","_transitionCheckState","Indeterminate","Checked","Unchecked","_onLabelTextChange","_getAriaChecked","indeterminate","newState","oldState","_onInputClick","focusVia","_onInteractionEvent","[id]","[class.mc-checkbox-indeterminate]","[class.mc-checkbox-checked]","[class.mc-checkbox-disabled]","[class.mc-checkbox-label-before]","MC_CHECKBOX_REQUIRED_VALIDATOR","McCheckboxRequiredValidator","[attr.required]","CheckboxRequiredValidator","McCheckboxModule","McDivider","_vertical","_inset","[attr.aria-orientation]","[class.mc-divider-vertical]","[class.mc-divider-inset]","McDividerModule","McCleaner","McFormFieldNumberControl","McHint","McPrefix","McStepper","stepUp","stepDown","onStepUp","onStepDown","McSuffix","McFormFieldBase","_McFormFieldMixinBase","_labelId","hovered","_validateControlChild","_control","_numberControl","hasStepper","_stepper","valueChanges","ngAfterContentChecked","clearValue","hasCleaner","onHoverChanged","isHovered","step","_shouldForward","getMcFormFieldMissingControlError","_hint","_suffix","_cleaner","[class.mc-form-field_invalid]","[class.mc-form-field_disabled]","[class.mc-form-field_has-prefix]","[class.mc-form-field_has-suffix]","[class.mc-form-field_has-cleaner]","[class.mc-form-field_has-stepper]","[class.ng-untouched]","[class.ng-touched]","[class.ng-pristine]","[class.ng-dirty]","[class.ng-valid]","[class.ng-invalid]","[class.ng-pending]","(mouseenter)","(mouseleave)","McFormFieldWithoutBorders","res","MC_INPUT_INVALID_TYPES","BIG_STEP","SMALL_STEP","McInputBase","_McInputMixinBase","McNumberInput","_model","bigStep","isDigit","Infinity","_host","self","getPrototypeOf","normalizeSplitter","McNumberInput_1","_focusChanged","minuses","NUMPAD_MINUS","DASH","FF_MINUS","serviceKeys","DELETE","BACKSPACE","TAB","arrows","allowedKeys","concat","isIEPeriod","isNotIEPeriod","metaKey","C","V","X","F1","F12","EDGE","TRIDENT","ZERO","NINE","NUMPAD_ZERO","NUMPAD_NINE","valueAsNumber","toString","update","replace","isFloat","isInt","test","NgModel","McInput","_type","_neverEmptyInputTypes","t","getSupportedInputTypes","McInput_1","_validateType","_onInput","_isNeverEmpty","getMcInputUnsupportedTypeError","McInputMono","MIN_VALIDATOR","MinValidator","_createValidator","[attr.min]","MAX_VALIDATOR","MaxValidator","[attr.max]","McInputModule","[class.mc-layout-content]","[class.mc-layout-footer]","[class.mc-layout-header]","hasSidebar","[class.mc-layout]","[class.mc-layout-has-sidebar]","mcLayoutComponent","_mcWidth","mcCollapsedWidth","mcCollapsedChange","collapsible","mcCollapsed","__extends","d","__","constructor","extendStatics","__decorate","decorators","desc","r","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","isBoolean","val","MC_SANITY_CHECKS_FACTORY","base","class_1","defaultColor","Default","_color","colorPalette","defaultTabIndex","_tabIndex","errorState","matcher","errorStateMatcher","isErrorState","optionsArray","groups","groupCounter","optionHeight","currentScrollPosition","optionOffset","arrayMap","array","iteratee","baseValues","object","props","inputType","sanitizeNumber","isFinite","getPrecision","arr","pow","value1","value2","precision","obj","scrollStrategies","reposition","scrollThrottle","setPrototypeOf","__proto__","p","hasOwnProperty","__assign","s","n","MC_SANITY_CHECKS","providedIn","_sanityChecksEnabled","_hasDoneGlobalChecks","_document","_window","_areChecksEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","_isTestEnv","doctype","testElement","createElement","computedStyle","display","removeChild","BidiModule","_setLineClass","count","_resetClasses","_setClass","className","isAdd","ShowOnDirtyErrorStateMatcher","form","invalid","dirty","submitted","touched","McPseudoCheckbox","[class.mc-pseudo-checkbox_indeterminate]","[class.mc-pseudo-checkbox_checked]","McPseudoCheckboxModule","scrollbarMeasure","overflow","initScrollBarWidth","_scrollbarWidth","scrollDiv","scrollProp","offsetWidth","clientWidth","McOptgroupBase","_McOptgroupMixinBase","_uniqueOptgroupIdCounter","[class.mc-optgroup-disabled]","[attr.aria-disabled]","[attr.aria-labelledby]","_uniqueIdCounter","McOptionSelectionChange","_parent","_active","_mostRecentViewValue","disableRipple","_emitSelectionChangeEvent","setActiveStyles","setInactiveStyles","_getTabIndex","ngAfterViewChecked","[class.mc-option-multiple]","[class.mc-active]","MC_LABEL_GLOBAL_OPTIONS","topCenter","offsetY","topLeft","topRight","rightTop","rightBottom","bottomCenter","bottomLeft","bottomRight","leftTop","leftBottom","McIconCSSStyler","McIconBase","_McIconMixinBase","iconName","queries","McButtonBase","_McButtonMixinBase","focusMonitor","_haltDisabledEvents"],"mappings":"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"}