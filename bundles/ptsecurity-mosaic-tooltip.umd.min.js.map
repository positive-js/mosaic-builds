{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../../packages/mosaic/tooltip/tooltip.component.ts","../../../packages/mosaic/tooltip/tooltip.module.ts"],"names":["Object","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","ArrowPlacements","Top","Center","Bottom","Right","Left","McTooltipComponent","cdr","this","prefix","positions","DEFAULT_4_POSITIONS","classMap","mcVisibleChange","EventEmitter","mcMouseEnterDelay","mcMouseLeaveDelay","_mcTrigger","_mcPlacement","_mcVisible","BehaviorSubject","onHideSubject","Subject","closeOnInteraction","availablePositions","POSITION_MAP","$visible","asObservable","defineProperty","prototype","_mcTitle","unshift","mcPlacement","_mcTooltipClass","visible","coerceBooleanProperty","show","hide","_mcArrowPlacement","_this","hideTid","clearTimeout","isContentEmpty","mcTrigger","showTid","setTimeout","emit","markForCheck","setClassMap","_b","mcTooltipClass","isTitleString","mcTitle","afterHidden","handleBodyInteraction","TemplateRef","Component","args","selector","animations","fadeAnimation","template","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","preserveWhitespaces","host","(body:click)","ChangeDetectorRef","Output","Input","MC_TOOLTIP_SCROLL_STRATEGY","InjectionToken","mcTooltipScrollStrategyFactory","overlay","scrollStrategies","reposition","scrollThrottle","MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","provide","deps","Overlay","useFactory","getMcTooltipInvalidPositionError","position","Error","McTooltip","elementRef","ngZone","scrollDispatcher","hostView","scrollStrategy","direction","isTooltipOpen","isDynamicTooltip","parentDisabled","$unsubscribe","_disabled","manualListeners","Map","destroyed","title","updateCompValue","_mcMouseEnterDelay","_mcMouseLeaveDelay","updatePosition","externalValue","createOverlay","overlayRef","strategy","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withPositions","scrollableAncestors","getAncestorScrollContainers","withScrollableContainers","positionChanges","pipe","takeUntil","subscribe","change","tooltip","onPositionChange","scrollableViewProperties","isOverlayClipped","mcVisible","run","positionStrategy","panelClass","detachments","detach","hasAttached","$event","updatedPlacement","keys","some","key","connectionPair","originX","originY","overlayX","overlayY","handlePositioningUpdate","overlayElemHeight","overlayElement","clientHeight","currentContainerHeight","element","nativeElement","mcArrowPlacement","arrowElemRef","getTooltipArrowElem","currentContainerPositionTop","parseInt","offsetTop","currentContainerHeightHalfed","tooltipHeightHalfed","style","top","setAttribute","pos","defaultTooltipPlacementTop","ngOnInit","initElementRefListeners","ngOnDestroy","dispose","forEach","listener","event","removeEventListener","clear","complete","handleKeydown","keyCode","ESCAPE","handleTouchend","set","addEventListener","disabled","portal","ComponentPortal","attach","instance","property","distinctUntilChanged","data","getConfig","origin","getOrigin","getOverlayPosition","main","fallback","apply","window","dispatchEvent","Event","originPosition","isLtr","invertPosition","x","y","overlayPosition","newX","newY","_a","getElementsByClassName","Directive","exportAs","(keydown)","(touchend)","ElementRef","NgZone","ScrollDispatcher","ViewContainerRef","Inject","Directionality","decorators","type","Optional","HostBinding","NgModule","declarations","exports","imports","CommonModule","OverlayModule","providers","entryComponents"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n    ConnectedOverlayPositionChange,\n    ConnectionPositionPair,\n    Overlay,\n    OverlayRef,\n    ScrollDispatcher,\n    ScrollStrategy,\n    FlexibleConnectedPositionStrategy,\n    OverlayConnectionPosition,\n    OriginConnectionPosition,\n    HorizontalConnectionPos,\n    VerticalConnectionPos\n} from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    TemplateRef,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport {\n    fadeAnimation,\n    DEFAULT_4_POSITIONS,\n    POSITION_MAP\n} from '@ptsecurity/mosaic/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\n\nexport enum ArrowPlacements {\n    Top = 'top',\n    Center = 'center',\n    Bottom = 'bottom',\n    Right = 'right',\n    Left = 'left'\n}\n\n@Component({\n    selector: 'mc-tooltip-component',\n    animations: [fadeAnimation],\n    templateUrl: './tooltip.component.html',\n    styleUrls: ['./tooltip.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false,\n    host: {\n        '(body:click)': 'this.handleBodyInteraction()'\n    }\n})\nexport class McTooltipComponent {\n    prefix = 'mc-tooltip_placement';\n    positions: ConnectionPositionPair[] = [...DEFAULT_4_POSITIONS];\n    classMap = {};\n    isTitleString: boolean;\n    showTid: any;\n    hideTid: any;\n    availablePositions: any;\n    $visible: Observable<boolean>;\n\n    @Output() mcVisibleChange: EventEmitter<boolean> = new EventEmitter();\n\n    @Input() mcMouseEnterDelay = 400;\n\n    @Input() mcMouseLeaveDelay = 0;\n\n    @Input()\n    get mcTitle(): string | TemplateRef<any> {\n        return this._mcTitle;\n    }\n\n    set mcTitle(value: string | TemplateRef<any>) {\n        this._mcTitle = value;\n    }\n\n    private _mcTitle: string | TemplateRef<any>;\n\n    @Input()\n    get mcTrigger(): string {\n        return this._mcTrigger;\n    }\n\n    set mcTrigger(value: string) {\n        this._mcTrigger = value;\n    }\n\n    private _mcTrigger: string = 'hover';\n\n    @Input()\n    get mcPlacement(): string {\n        return this._mcPlacement;\n    }\n\n    set mcPlacement(value: string) {\n        if (value !== this._mcPlacement) {\n            this._mcPlacement = value;\n            this.positions.unshift(POSITION_MAP[ this.mcPlacement ]);\n        } else if (!value) {\n            this._mcPlacement = 'top';\n        }\n    }\n\n    private _mcPlacement: string = 'top';\n\n    @Input()\n    get mcTooltipClass(): string {\n        return this._mcTooltipClass;\n    }\n\n    set mcTooltipClass(value: string) {\n        this._mcTooltipClass = value;\n    }\n\n    private _mcTooltipClass: string;\n\n    @Input()\n    get mcVisible(): boolean {\n        return this._mcVisible.value;\n    }\n\n    set mcVisible(value: boolean) {\n        const visible = coerceBooleanProperty(value);\n\n        if (visible && this._mcVisible.value !== visible) {\n            this.show();\n        } else {\n            this.hide();\n        }\n    }\n\n    private _mcVisible: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n    @Input()\n    get mcArrowPlacement(): ArrowPlacements {\n        return this._mcArrowPlacement;\n    }\n\n    set mcArrowPlacement(value: ArrowPlacements) {\n        this._mcArrowPlacement = value;\n    }\n\n    private _mcArrowPlacement: ArrowPlacements;\n\n    /** Subject for notifying that the tooltip has been hidden from the view */\n    private readonly onHideSubject: Subject<any> = new Subject();\n    private closeOnInteraction: boolean = false;\n\n    constructor(public cdr: ChangeDetectorRef) {\n        this.availablePositions = POSITION_MAP;\n        this.$visible = this._mcVisible.asObservable();\n    }\n\n    show(): void {\n        if (this.hideTid) {\n            clearTimeout(this.hideTid);\n        }\n\n        if (!this.isContentEmpty()) {\n            if (this.mcTrigger !== 'manual') {\n                this.closeOnInteraction = true;\n            }\n\n            this.showTid = setTimeout(() => {\n                this._mcVisible.next(true);\n                this.mcVisibleChange.emit(true);\n\n                // Mark for check so if any parent component has set the\n                // ChangeDetectionStrategy to OnPush it will be checked anyways\n                this.markForCheck();\n            }, this.mcMouseEnterDelay);\n        }\n    }\n\n    hide(): void {\n        if (this.showTid) {\n            clearTimeout(this.showTid);\n        }\n\n        this.hideTid = setTimeout(() => {\n            this._mcVisible.next(false);\n            this.mcVisibleChange.emit(false);\n            this.onHideSubject.next();\n\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this.markForCheck();\n        }, this.mcMouseLeaveDelay);\n    }\n\n    setClassMap(): void {\n        this.classMap = {\n            [`${this.prefix}-${this.mcPlacement}`]: true,\n            [this.mcTooltipClass]: true\n        };\n    }\n\n    isContentEmpty(): boolean {\n        return this.isTitleString ? (this.mcTitle === '' || !this.mcTitle) : false;\n    }\n\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden(): Observable<void> {\n        return this.onHideSubject.asObservable();\n    }\n\n    markForCheck(): void {\n        this.cdr.markForCheck();\n    }\n\n    handleBodyInteraction(): void {\n        if (this.closeOnInteraction) {\n            this.hide();\n        }\n    }\n\n    get isTemplateRef(): boolean {\n        return this.mcTitle instanceof TemplateRef;\n    }\n\n    get isNonEmptyString(): boolean {\n        return typeof this.mcTitle === 'string' && this._mcTitle !== '';\n    }\n}\n\nexport const MC_TOOLTIP_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('mc-tooltip-scroll-strategy');\n\n/** @docs-private */\nexport function mcTooltipScrollStrategyFactory(overlay: Overlay): () => ScrollStrategy {\n    return () => overlay.scrollStrategies.reposition({scrollThrottle: 20});\n}\n\n/** @docs-private */\nexport const MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: mcTooltipScrollStrategyFactory\n};\n\n/** Creates an error to be thrown if the user supplied an invalid tooltip position. */\nexport function getMcTooltipInvalidPositionError(position: string) {\n    return Error(`McTooltip position \"${position}\" is invalid.`);\n}\n\nconst VIEWPORT_MARGIN: number = 8;\n\n@Directive({\n    selector: '[mcTooltip], [attribute^=\"mcTooltip\"]',\n    exportAs: 'mcTooltip',\n    host: {\n        '(keydown)': 'handleKeydown($event)',\n        '(touchend)': 'handleTouchend()'\n    }\n})\nexport class McTooltip implements OnInit, OnDestroy {\n    isTooltipOpen: boolean = false;\n    isDynamicTooltip = false;\n    parentDisabled: boolean = false;\n    overlayRef: OverlayRef | null;\n    portal: ComponentPortal<McTooltipComponent>;\n    availablePositions: any;\n    tooltip: McTooltipComponent | null;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n    private $unsubscribe = new Subject<void>();\n\n    @Input('mcTooltip')\n    get mcTitle(): string | TemplateRef<any> {\n        return this._mcTitle;\n    }\n\n    set mcTitle(title: string | TemplateRef<any>) {\n        this._mcTitle = title;\n        this.updateCompValue('mcTitle', title);\n    }\n\n    private _mcTitle: string | TemplateRef<any>;\n\n    @Input('mcTitle')\n    set setTitle(title: string | TemplateRef<any>) {\n        this.mcTitle = title;\n    }\n\n    @Input('mcTooltipDisabled')\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this.updateCompValue('mcTooltipDisabled', value);\n    }\n\n    private _disabled: boolean = false;\n\n    @Input('mcMouseEnterDelay')\n    get mcMouseEnterDelay(): number {\n        return this._mcMouseEnterDelay;\n    }\n\n    set mcMouseEnterDelay(value: number) {\n        this._mcMouseEnterDelay = value;\n        this.updateCompValue('mcMouseEnterDelay', value);\n    }\n\n    private _mcMouseEnterDelay: number;\n\n    @Input('mcMouseLeaveDelay')\n    get mcMouseLeaveDelay(): number {\n        return this._mcMouseLeaveDelay;\n    }\n\n    set mcMouseLeaveDelay(value: number) {\n        this._mcMouseLeaveDelay = value;\n        this.updateCompValue('mcMouseLeaveDelay', value);\n    }\n\n    private _mcMouseLeaveDelay: number;\n\n    @Input('mcTrigger')\n    get mcTrigger(): string {\n        return this._mcTrigger;\n    }\n\n    set mcTrigger(value: string) {\n        if (value) {\n            this._mcTrigger = value;\n            this.updateCompValue('mcTrigger', value);\n        } else {\n            this._mcTrigger = 'hover';\n        }\n    }\n\n    private _mcTrigger: string = 'hover';\n\n    @Input('mcPlacement')\n    get mcPlacement(): string {\n        return this._mcPlacement;\n    }\n\n    set mcPlacement(value: string) {\n        if (value) {\n            this._mcPlacement = value;\n            this.updateCompValue('mcPlacement', value);\n        } else {\n            this._mcPlacement = 'top';\n        }\n        this.updatePosition();\n    }\n\n    private _mcPlacement: string = 'top';\n\n    @Input('mcTooltipClass')\n    get mcTooltipClass(): string {\n        return this._mcTooltipClass;\n    }\n\n    set mcTooltipClass(value: string) {\n        if (value) {\n            this._mcTooltipClass = value;\n            this.updateCompValue('mcTooltipClass', value);\n        } else {\n            this._mcTooltipClass = '';\n        }\n    }\n\n    private _mcTooltipClass: string;\n\n    @Input('mcVisible')\n    get mcVisible(): boolean {\n        return this._mcVisible;\n    }\n\n    set mcVisible(externalValue: boolean) {\n        const value = coerceBooleanProperty(externalValue);\n\n        if (this._mcVisible !== value) {\n            this._mcVisible = value;\n            this.updateCompValue('mcVisible', value);\n\n            if (value) {\n                this.show();\n            } else {\n                this.hide();\n            }\n        }\n    }\n\n    private _mcVisible: boolean;\n\n    @Input('mcArrowPlacement')\n    get mcArrowPlacement(): ArrowPlacements {\n        return this._mcArrowPlacement;\n    }\n\n    set mcArrowPlacement(value: ArrowPlacements) {\n        this._mcArrowPlacement = value;\n    }\n\n    private _mcArrowPlacement: ArrowPlacements;\n\n    @HostBinding('class.mc-tooltip-open')\n    get isOpen(): boolean {\n        return this.isTooltipOpen;\n    }\n\n    @HostBinding('class.disabled')\n    get isParentDisabled(): boolean {\n        return this.parentDisabled;\n    }\n\n    private manualListeners = new Map<string, EventListenerOrEventListenerObject>();\n    private readonly destroyed = new Subject<void>();\n\n    constructor(\n        private overlay: Overlay,\n        private elementRef: ElementRef,\n        private ngZone: NgZone,\n        private scrollDispatcher: ScrollDispatcher,\n        private hostView: ViewContainerRef,\n        @Inject(MC_TOOLTIP_SCROLL_STRATEGY) private scrollStrategy,\n        @Optional() private direction: Directionality\n    ) {\n        this.availablePositions = POSITION_MAP;\n    }\n\n    /** Create the overlay config and position strategy */\n    createOverlay(): OverlayRef {\n        if (this.overlayRef) { return this.overlayRef; }\n\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this.overlay.position()\n            .flexibleConnectedTo(this.elementRef)\n            .withTransformOriginOn('.mc-tooltip')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(VIEWPORT_MARGIN)\n            .withPositions([...DEFAULT_4_POSITIONS]);\n\n        const scrollableAncestors = this.scrollDispatcher.getAncestorScrollContainers(this.elementRef);\n\n        strategy.withScrollableContainers(scrollableAncestors);\n\n        strategy.positionChanges\n            .pipe(takeUntil(this.destroyed))\n            .subscribe((change) => {\n                if (this.tooltip) {\n                    this.onPositionChange(change);\n                    if (change.scrollableViewProperties.isOverlayClipped && this.tooltip.mcVisible) {\n                        // After position changes occur and the overlay is clipped by\n                        // a parent scrollable then close the tooltip.\n                        this.ngZone.run(() => this.hide());\n                    }\n                }\n            });\n\n        this.overlayRef = this.overlay.create({\n            direction: this.direction,\n            positionStrategy: strategy,\n            panelClass: 'mc-tooltip-panel',\n            scrollStrategy: this.scrollStrategy()\n        });\n\n        this.updatePosition();\n\n        this.overlayRef.detachments()\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(() => this.detach());\n\n        return this.overlayRef;\n    }\n\n    detach() {\n        if (this.overlayRef && this.overlayRef.hasAttached()) {\n            this.overlayRef.detach();\n        }\n\n        this.tooltip = null;\n    }\n\n    onPositionChange($event: ConnectedOverlayPositionChange): void {\n        let updatedPlacement = this.mcPlacement;\n\n        Object.keys(this.availablePositions).some((key) => {\n            if (\n                $event.connectionPair.originX === this.availablePositions[key].originX &&\n                $event.connectionPair.originY === this.availablePositions[key].originY &&\n                $event.connectionPair.overlayX === this.availablePositions[key].overlayX &&\n                $event.connectionPair.overlayY === this.availablePositions[key].overlayY\n            ) {\n                updatedPlacement = key;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        this.updateCompValue('mcPlacement', updatedPlacement);\n\n        if (this.tooltip) {\n            this.tooltip.setClassMap();\n            this.tooltip.markForCheck();\n        }\n\n        this.handlePositioningUpdate();\n    }\n\n    handlePositioningUpdate() {\n        if (!this.overlayRef) {\n            this.overlayRef = this.createOverlay();\n        }\n\n        if (this.mcPlacement === 'right' || this.mcPlacement === 'left') {\n            const halfDelimeter = 2;\n            const overlayElemHeight = this.overlayRef.overlayElement.clientHeight;\n            const currentContainerHeight = this.hostView.element.nativeElement.clientHeight;\n\n            if (this.mcArrowPlacement === ArrowPlacements.Center) {\n                const arrowElemRef = this.getTooltipArrowElem();\n                const currentContainerPositionTop = parseInt(this.hostView.element.nativeElement.offsetTop, 10);\n                const currentContainerHeightHalfed = currentContainerHeight / halfDelimeter;\n                const tooltipHeightHalfed = overlayElemHeight / halfDelimeter;\n\n                this.overlayRef.overlayElement.style.top = `${\n                    (currentContainerPositionTop + currentContainerHeightHalfed) - tooltipHeightHalfed + 1\n                }px`;\n\n                if (arrowElemRef) {\n                    arrowElemRef.setAttribute('style', `top: ${tooltipHeightHalfed - 1}px`);\n                }\n            } else {\n                const pos = (overlayElemHeight - currentContainerHeight) / halfDelimeter;\n                const defaultTooltipPlacementTop = parseInt(this.overlayRef.overlayElement.style.top || '0px', 10);\n\n                this.overlayRef.overlayElement.style.top = `${defaultTooltipPlacementTop + pos - 1}px`;\n            }\n        }\n    }\n\n    // tslint:disable-next-line:no-any\n    updateCompValue(key: string, value: any): void {\n        if (this.isDynamicTooltip && value && this.tooltip) {\n            this.tooltip[key] = value;\n            this.tooltip.markForCheck();\n        }\n    }\n\n    ngOnInit(): void {\n        this.initElementRefListeners();\n    }\n\n    ngOnDestroy(): void {\n        if (this.overlayRef) {\n            this.overlayRef.dispose();\n        }\n\n        this.manualListeners.forEach((listener, event) => {\n            this.elementRef.nativeElement.removeEventListener(event, listener);\n        });\n\n        this.manualListeners.clear();\n\n        this.$unsubscribe.next();\n        this.$unsubscribe.complete();\n    }\n\n    handleKeydown(e: KeyboardEvent) {\n        if (this.isTooltipOpen && e.keyCode === ESCAPE) { // tslint:disable-line\n            this.hide();\n        }\n    }\n\n    handleTouchend() {\n        this.hide();\n    }\n\n    initElementRefListeners() {\n        if (this.mcTrigger === 'hover') {\n            this.manualListeners\n                .set('mouseenter', () => this.show())\n                .set('mouseleave', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n\n        if (this.mcTrigger === 'focus') {\n            this.manualListeners\n                .set('focus', () => this.show())\n                .set('blur', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n    }\n\n    show(): void {\n        if (!this.disabled) {\n            if (!this.tooltip) {\n                const overlayRef = this.createOverlay();\n                this.detach();\n\n                this.portal = this.portal || new ComponentPortal(McTooltipComponent, this.hostView);\n\n                this.tooltip = overlayRef.attach(this.portal).instance;\n                this.tooltip.afterHidden()\n                    .pipe(takeUntil(this.destroyed))\n                    .subscribe(() => this.detach());\n                this.isDynamicTooltip = true;\n                const properties = [\n                    'mcTitle',\n                    'mcPlacement',\n                    'mcTrigger',\n                    'mcTooltipDisabled',\n                    'mcMouseEnterDelay',\n                    'mcMouseLeaveDelay',\n                    'mcTooltipClass'\n                ];\n                properties.forEach((property) => this.updateCompValue(property, this[ property ]));\n                this.tooltip.mcVisibleChange.pipe(takeUntil(this.$unsubscribe), distinctUntilChanged())\n                    .subscribe((data) => {\n                        this.mcVisible = data;\n                        this.mcVisibleChange.emit(data);\n                        this.isTooltipOpen = data;\n                    });\n            }\n            this.updatePosition();\n            this.tooltip.show();\n        }\n    }\n\n    hide(): void {\n        if (this.tooltip) {\n            this.tooltip.hide();\n        }\n    }\n\n    /** Updates the position of the current tooltip. */\n    updatePosition() {\n        if (!this.overlayRef) {\n            this.overlayRef = this.createOverlay();\n        }\n\n        const position = this.overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\n        const origin = this.getOrigin();\n        const overlay = this.getOverlayPosition();\n\n        position.withPositions([\n            { ...origin.main, ...overlay.main },\n            { ...origin.fallback, ...overlay.fallback }\n        ]);\n\n        if (this.tooltip) {\n            position.apply();\n            window.dispatchEvent(new Event('resize'));\n        }\n    }\n\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    getOrigin(): {main: OriginConnectionPosition; fallback: OriginConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this.direction || this.direction.value === 'ltr';\n        let originPosition: OriginConnectionPosition;\n\n        if (position === 'top' || position === 'bottom') {\n            originPosition = { originX: 'center', originY: position === 'top' ? 'top' : 'bottom' };\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            originPosition = { originX: 'start', originY: 'center' };\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            originPosition = { originX: 'end', originY: 'center' };\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this.invertPosition(originPosition.originX, originPosition.originY);\n\n        return {\n            main: originPosition,\n            fallback: { originX: x, originY: y }\n        };\n    }\n\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    getOverlayPosition(): { main: OverlayConnectionPosition; fallback: OverlayConnectionPosition } {\n        const position = this.mcPlacement;\n        const isLtr = !this.direction || this.direction.value === 'ltr';\n        let overlayPosition: OverlayConnectionPosition;\n\n        if (position === 'top') {\n            overlayPosition = { overlayX: 'center', overlayY: 'bottom' };\n        } else if (position === 'bottom') {\n            overlayPosition = { overlayX: 'center', overlayY: 'top' };\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            overlayPosition = { overlayX: 'end', overlayY: 'center' };\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            overlayPosition = { overlayX: 'start', overlayY: 'center' };\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this.invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n\n        return {\n            main: overlayPosition,\n            fallback: { overlayX: x, overlayY: y }\n        };\n    }\n\n    /** Inverts an overlay position. */\n    private invertPosition(x: HorizontalConnectionPos, y: VerticalConnectionPos) {\n        let newX: HorizontalConnectionPos = x;\n        let newY: VerticalConnectionPos = y;\n        if (this.mcPlacement === 'top' || this.mcPlacement === 'bottom') {\n            if (y === 'top') {\n                newY = 'bottom';\n            } else if (y === 'bottom') {\n                newY = 'top';\n            }\n        } else {\n            if (x === 'end') {\n                newX = 'start';\n            } else if (x === 'start') {\n                newX = 'end';\n            }\n        }\n\n        return { x: newX, y: newY };\n    }\n\n    private getTooltipArrowElem() {\n        const arrowClassName = 'mc-tooltip-arrow';\n\n        return this.overlayRef?.overlayElement.getElementsByClassName(arrowClassName)[0];\n    }\n}\n","import { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport {\n    McTooltipComponent,\n    McTooltip,\n    MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER\n} from './tooltip.component';\n\n\n@NgModule({\n    declarations: [McTooltipComponent, McTooltip],\n    exports: [McTooltipComponent, McTooltip],\n    imports: [CommonModule, OverlayModule],\n    providers: [MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n    entryComponents: [McTooltipComponent]\n})\nexport class McToolTipModule {\n}\n"]}