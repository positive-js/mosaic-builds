{"version":3,"file":"mosaic-splitter.umd.min.js","sources":["../../packages/mosaic/splitter/splitter.component.ts","../../packages/mosaic/splitter/splitter.module.ts"],"sourcesContent":["import { coerceBooleanProperty, coerceCssPixelValue, coerceNumberProperty } from '@angular/cdk/coercion';\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    QueryList,\n    Renderer2,\n    ViewChildren,\n    ViewEncapsulation\n} from '@angular/core';\n\n\ninterface IArea {\n    area: McSplitterAreaDirective;\n    index: number;\n    order: number;\n    initialSize: number;\n}\n\ninterface IPoint {\n    x: number;\n    y: number;\n}\n\nconst enum StyleProperty {\n    Flex = 'flex',\n    FlexBasis = 'flex-basis',\n    FlexDirection = 'flex-direction',\n    Height = 'height',\n    MaxWidth = 'max-width',\n    MinHeight = 'min-height',\n    MinWidth = 'minWidth',\n    OffsetHeight = 'offsetHeight',\n    OffsetWidth = 'offsetWidth',\n    Order = 'order',\n    Width = 'width'\n}\n\nexport const enum Direction {\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\n\n@Directive({\n    selector: 'mc-gutter',\n    host: {\n        class: 'mc-gutter',\n        '[class.mc-gutter_vertical]': 'isVertical()',\n        '[class.mc-gutter_dragged]': 'dragged',\n        '(mousedown)': 'dragged = true'\n    }\n})\nexport class McGutterDirective implements OnInit {\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    private _direction: Direction = Direction.Vertical;\n\n    get order(): number {\n        return this._order;\n    }\n\n    @Input()\n    set order(order: number) {\n        this._order = coerceNumberProperty(order);\n    }\n\n    private _order: number = 0;\n\n    get size(): number {\n        return this._size;\n    }\n\n    @Input()\n    set size(size: number) {\n        this._size = coerceNumberProperty(size);\n    }\n\n    private _size: number = 6;\n\n    dragged: boolean = false;\n\n    constructor(\n        private elementRef: ElementRef,\n        private renderer: Renderer2\n    ) {}\n\n    ngOnInit(): void {\n        this.setStyle(StyleProperty.FlexBasis, coerceCssPixelValue(this.size));\n        this.setStyle(this.isVertical() ? StyleProperty.Height : StyleProperty.Width, coerceCssPixelValue(this.size));\n        this.setStyle(StyleProperty.Order, this.order);\n\n        if (!this.isVertical()) {\n            this.setStyle(StyleProperty.Height, '100%');\n        }\n\n        // fix IE issue with gutter icon. flex-direction is requied for flex alignment options\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'row' : 'column');\n    }\n\n    isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n}\n\n\n@Component({\n    selector: 'mc-splitter',\n    exportAs: 'mcSplitter',\n    host: {\n        class: 'mc-splitter'\n    },\n    preserveWhitespaces: false,\n    styleUrls: ['splitter.css'],\n    templateUrl: './splitter.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSplitterComponent implements OnInit {\n    readonly areas: IArea[] = [];\n\n    @ViewChildren(McGutterDirective) gutters: QueryList<McGutterDirective>;\n\n    private isDragging: boolean = false;\n\n    private readonly areaPositionDivider: number = 2;\n    private readonly listeners: (() => void)[] = [];\n\n    get hideGutters(): boolean {\n        return this._hideGutters;\n    }\n\n    @Input()\n    set hideGutters(value: boolean) {\n        this._hideGutters = coerceBooleanProperty(value);\n    }\n\n    private _hideGutters: boolean = false;\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    private _direction: Direction;\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    private _disabled: boolean = false;\n\n    get gutterSize(): number {\n        return this._gutterSize;\n    }\n\n    @Input()\n    set gutterSize(gutterSize: number) {\n        const size = coerceNumberProperty(gutterSize);\n        this._gutterSize = size > 0 ? size : this.gutterSize;\n    }\n\n    private _gutterSize: number = 6;\n\n    constructor(\n        public elementRef: ElementRef,\n        public changeDetectorRef: ChangeDetectorRef,\n        private ngZone: NgZone,\n        private renderer: Renderer2\n    ) {}\n\n    addArea(area: McSplitterAreaDirective): void {\n        const index: number = this.areas.length;\n        const order: number = index * this.areaPositionDivider;\n        const size: number = area.getSize();\n\n        area.setOrder(order);\n\n        this.areas.push({\n            area,\n            index,\n            order,\n            initialSize: size\n        });\n    }\n\n    ngOnInit(): void {\n        if (!this.direction) {\n            this.direction = Direction.Horizontal;\n        }\n\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'column' : 'row');\n    }\n\n    onMouseDown(event: MouseEvent, leftAreaIndex: number, rightAreaIndex: number) {\n        if (this.disabled) { return; }\n\n        event.preventDefault();\n\n        const leftArea = this.areas[leftAreaIndex];\n        const rightArea = this.areas[rightAreaIndex];\n\n        const startPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        leftArea.initialSize = leftArea.area.getSize();\n        rightArea.initialSize = rightArea.area.getSize();\n\n        this.areas.forEach((item) => {\n            const size = item.area.getSize();\n            item.area.disableFlex();\n            item.area.setSize(size);\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mouseup',\n                    () => this.onMouseUp()\n                )\n            );\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mousemove',\n                    (e: MouseEvent) => this.onMouseMove(e, startPoint, leftArea, rightArea)\n                )\n            );\n        });\n\n        this.isDragging = true;\n    }\n\n    removeArea(area: McSplitterAreaDirective): void {\n        let indexToRemove: number = -1;\n\n        this.areas.some((item, index) => {\n            if (item.area === area) {\n                indexToRemove = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        if (indexToRemove === -1) {\n            return;\n        }\n\n        this.areas.splice(indexToRemove, 1);\n    }\n\n    isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private updateGutter(): void {\n        this.gutters.forEach((gutter) => {\n            if (gutter.dragged) {\n                gutter.dragged = false;\n\n                this.changeDetectorRef.detectChanges();\n            }\n        });\n\n    }\n\n    private onMouseMove(event: MouseEvent, startPoint: IPoint, leftArea: IArea, rightArea: IArea) {\n        if (!this.isDragging || this.disabled) { return; }\n\n        const endPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        const offset = this.isVertical()\n            ? startPoint.y - endPoint.y\n            : startPoint.x - endPoint.x;\n\n        const newLeftAreaSize = leftArea.initialSize - offset;\n        const newRightAreaSize = rightArea.initialSize + offset;\n\n        const minLeftAreaSize = leftArea.area.getMinSize();\n        const minRightAreaSize = rightArea.area.getMinSize();\n\n        if (newLeftAreaSize <= minLeftAreaSize || newRightAreaSize <= minRightAreaSize) {\n            return;\n        } else if (newLeftAreaSize <= 0) {\n            leftArea.area.setSize(0);\n            rightArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n        } else if (newRightAreaSize <= 0) {\n            leftArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n            rightArea.area.setSize(0);\n        } else {\n            leftArea.area.setSize(newLeftAreaSize);\n            rightArea.area.setSize(newRightAreaSize);\n        }\n    }\n\n    private onMouseUp() {\n        while (this.listeners.length > 0) {\n            const unsubscribe = this.listeners.pop();\n\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        }\n\n        this.isDragging = false;\n\n        this.updateGutter();\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n}\n\n@Directive({\n    selector: '[mc-splitter-area]',\n    host: {\n        class: 'mc-splitter-area'\n    }\n})\nexport class McSplitterAreaDirective implements OnInit, OnDestroy {\n    constructor(\n        private elementRef: ElementRef,\n        private renderer: Renderer2,\n        private splitter: McSplitterComponent\n    ) {}\n\n    disableFlex(): void {\n        this.renderer.removeStyle(this.elementRef.nativeElement, 'flex');\n    }\n\n    ngOnInit(): void {\n        this.splitter.addArea(this);\n\n        this.removeStyle(StyleProperty.MaxWidth);\n\n        if (this.splitter.direction === Direction.Vertical) {\n            this.setStyle(StyleProperty.Width, '100%');\n            this.removeStyle(StyleProperty.Height);\n        } else {\n            this.setStyle(StyleProperty.Height, '100%');\n            this.removeStyle(StyleProperty.Width);\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.splitter.removeArea(this);\n    }\n\n    setOrder(order: number): void {\n        this.setStyle(StyleProperty.Order, order);\n    }\n\n    setSize(size: number): void {\n        if (size) {\n            const sz = coerceNumberProperty(size);\n            this.setStyle(this.getSizeProperty(), coerceCssPixelValue(sz));\n        }\n    }\n\n    getSize(): number {\n        return this.elementRef.nativeElement[this.getOffsetSizeProperty()];\n    }\n\n    getMinSize(): number {\n        const styles = getComputedStyle(this.elementRef.nativeElement);\n\n        return parseFloat(styles[this.getMinSizeProperty()]);\n    }\n\n    private isVertical(): boolean {\n        return this.splitter.direction === Direction.Vertical;\n    }\n\n    private getMinSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.MinHeight\n            : StyleProperty.MinWidth;\n    }\n\n    private getOffsetSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.OffsetHeight\n            : StyleProperty.OffsetWidth;\n    }\n\n    private getSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.Height\n            : StyleProperty.Width;\n    }\n\n    private setStyle(style: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, style, value);\n    }\n\n    private removeStyle(style: StyleProperty) {\n        this.renderer.removeStyle(this.elementRef.nativeElement, style);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McGutterDirective, McSplitterAreaDirective, McSplitterComponent } from './splitter.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McIconModule\n    ],\n    exports: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ],\n    declarations: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ]\n})\nexport class McSplitterModule {\n}\n"],"names":["McGutterDirective","elementRef","renderer","this","_direction","_order","_size","dragged","Object","defineProperty","prototype","direction","order","coerceNumberProperty","size","ngOnInit","setStyle","coerceCssPixelValue","isVertical","property","value","nativeElement","type","Directive","args","selector","host","class","[class.mc-gutter_vertical]","[class.mc-gutter_dragged]","(mousedown)","ElementRef","Renderer2","Input","McSplitterComponent","changeDetectorRef","ngZone","areas","isDragging","areaPositionDivider","listeners","_hideGutters","_disabled","_gutterSize","coerceBooleanProperty","disabled","gutterSize","addArea","area","index","length","getSize","setOrder","push","initialSize","onMouseDown","event","leftAreaIndex","rightAreaIndex","_this","preventDefault","leftArea","rightArea","startPoint","x","screenX","y","screenY","forEach","item","disableFlex","setSize","runOutsideAngular","listen","onMouseUp","e","onMouseMove","removeArea","indexToRemove","some","splice","updateGutter","gutters","gutter","detectChanges","endPoint","offset","newLeftAreaSize","newRightAreaSize","minLeftAreaSize","getMinSize","minRightAreaSize","unsubscribe","pop","Component","exportAs","preserveWhitespaces","styles","template","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","ChangeDetectorRef","NgZone","ViewChildren","hideGutters","McSplitterAreaDirective","splitter","removeStyle","ngOnDestroy","sz","getSizeProperty","getOffsetSizeProperty","getComputedStyle","parseFloat","getMinSizeProperty","style","McSplitterModule","NgModule","imports","CommonModule","McIconModule","exports","declarations"],"mappings":"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"}