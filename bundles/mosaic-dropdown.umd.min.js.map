{"version":3,"file":"mosaic-dropdown.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../packages/mosaic/dropdown/dropdown-errors.ts","../../packages/mosaic/dropdown/dropdown.component.ts","../../packages/mosaic/dropdown/dropdown-trigger.ts","../../packages/mosaic/dropdown/dropdown-content.ts","../../packages/mosaic/dropdown/dropdown-panel.ts","../../packages/mosaic/dropdown/dropdown-item.ts","../../packages/mosaic/dropdown/dropdown-animations.ts","../../packages/mosaic/dropdown/dropdown.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * Throws an exception for the case when dropdown trigger doesn't have a valid mc-dropdown instance\n * @docs-private\n */\nexport function throwMcDropdownMissingError() {\n    throw Error(`mcDropdownTriggerFor: must pass in an mc-dropdown instance.\n    Example:\n      <mc-dropdown #dropdown=\"mcDropdown\"></mc-dropdown>\n      <button [mcDropdownTriggerFor]=\"dropdown\"></button>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mc-dropdown xPosition=\"before\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mc-dropdown yPosition=\"above\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n","import { AnimationEvent } from '@angular/animations';\nimport { Direction } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    Output,\n    TemplateRef,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    OnInit\n} from '@angular/core';\nimport { FocusKeyManager, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { ESCAPE, LEFT_ARROW, RIGHT_ARROW, DOWN_ARROW, UP_ARROW } from '@ptsecurity/cdk/keycodes';\nimport { merge, Observable, Subject, Subscription } from 'rxjs';\nimport { startWith, switchMap, take } from 'rxjs/operators';\n\nimport { mcDropdownAnimations } from './dropdown-animations';\nimport { McDropdownContent } from './dropdown-content';\nimport { throwMcDropdownInvalidPositionX, throwMcDropdownInvalidPositionY } from './dropdown-errors';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/** Default `mc-dropdown` options that can be overridden. */\n// tslint:disable-next-line:naming-convention\nexport interface McDropdownDefaultOptions {\n    /** The x-axis position of the dropdown. */\n    xPosition: DropdownPositionX;\n\n    /** The y-axis position of the dropdown. */\n    yPosition: DropdownPositionY;\n\n    /** Whether the dropdown should overlap the dropdown trigger horizontally. */\n    overlapTriggerX: boolean;\n\n    /** Whether the dropdown should overlap the dropdown trigger vertically. */\n    overlapTriggerY: boolean;\n\n    /** Class to be applied to the dropdown's backdrop. */\n    backdropClass: string;\n\n    /** Whether the dropdown has a backdrop. */\n    hasBackdrop?: boolean;\n}\n\n/** Injection token to be used to override the default options for `mc-dropdown`. */\nexport const MC_DROPDOWN_DEFAULT_OPTIONS =\n    new InjectionToken<McDropdownDefaultOptions>('mc-dropdown-default-options', {\n        providedIn: 'root',\n        factory: MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY\n    });\n\n/** @docs-private */\n// tslint:disable-next-line:naming-convention\nexport function MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY(): McDropdownDefaultOptions {\n    return {\n        overlapTriggerX: true,\n        overlapTriggerY: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop'\n    };\n}\n\n@Component({\n    selector: 'mc-dropdown',\n    templateUrl: 'dropdown.html',\n    styleUrls: ['dropdown.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcDropdown',\n    animations: [\n        mcDropdownAnimations.transformDropdown,\n        mcDropdownAnimations.fadeInItems\n    ],\n    providers: [\n        { provide: MC_DROPDOWN_PANEL, useExisting: McDropdown }\n    ]\n})\nexport class McDropdown implements AfterContentInit, McDropdownPanel<McDropdownItem>, OnInit, OnDestroy {\n\n    /** Position of the dropdown in the X axis. */\n    @Input()\n    get xPosition(): DropdownPositionX {\n        return this._xPosition;\n    }\n\n    set xPosition(value: DropdownPositionX) {\n        if (value !== 'before' && value !== 'after') {\n            throwMcDropdownInvalidPositionX();\n        }\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Position of the dropdown in the Y axis. */\n    @Input()\n    get yPosition(): DropdownPositionY {\n        return this._yPosition;\n    }\n\n    set yPosition(value: DropdownPositionY) {\n        if (value !== 'above' && value !== 'below') {\n            throwMcDropdownInvalidPositionY();\n        }\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Whether the dropdown should overlap its trigger vertically. */\n    @Input()\n    get overlapTriggerY(): boolean {\n        return this._overlapTriggerY;\n    }\n\n    set overlapTriggerY(value: boolean) {\n        this._overlapTriggerY = coerceBooleanProperty(value);\n    }\n\n    /** Whether the dropdown should overlap its trigger horizontally. */\n    @Input()\n    get overlapTriggerX(): boolean {\n        return this._overlapTriggerX;\n    }\n\n    set overlapTriggerX(value: boolean) {\n        this._overlapTriggerX = coerceBooleanProperty(value);\n    }\n\n    /** Whether the dropdown has a backdrop. */\n    @Input()\n    get hasBackdrop(): boolean | undefined {\n        return this._hasBackdrop;\n    }\n\n    set hasBackdrop(value: boolean | undefined) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n\n    /**\n     * This method takes classes set on the host mc-dropdown element and applies them on the\n     * dropdown template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing dropdown from outside the component.\n     * @param classes list of class names\n     */\n    @Input('class')\n    set panelClass(classes: string) {\n        const previousPanelClass = this.previousPanelClass;\n\n        if (previousPanelClass && previousPanelClass.length) {\n            previousPanelClass.split(' ').forEach((className: string) => {\n                this.classList[className] = false;\n            });\n        }\n\n        this.previousPanelClass = classes;\n\n        if (classes && classes.length) {\n            classes.split(' ').forEach((className: string) => {\n                this.classList[className] = true;\n            });\n\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n    private _xPosition: DropdownPositionX = this._defaultOptions.xPosition;\n    private _yPosition: DropdownPositionY = this._defaultOptions.yPosition;\n    private _overlapTriggerX: boolean = this._defaultOptions.overlapTriggerX;\n    private _overlapTriggerY: boolean = this._defaultOptions.overlapTriggerY;\n    private _hasBackdrop: boolean | undefined = this._defaultOptions.hasBackdrop;\n\n    /** Config object to be passed into the dropdown's ngClass */\n    classList: { [key: string]: boolean } = {};\n\n    /** Current state of the panel animation. */\n    panelAnimationState: 'void' | 'enter' = 'void';\n\n    /** Emits whenever an animation on the dropdown completes. */\n    animationDone = new Subject<AnimationEvent>();\n\n    /** Whether the dropdown is animating. */\n    isAnimating: boolean;\n\n    /** Parent dropdown of the current dropdown panel. */\n    parent: McDropdownPanel | undefined;\n\n    /** Layout direction of the dropdown. */\n    direction: Direction;\n\n    /** Class to be added to the backdrop element. */\n    @Input() backdropClass: string = this._defaultOptions.backdropClass;\n\n    /** @docs-private */\n    @ViewChild(TemplateRef, {static: false}) templateRef: TemplateRef<any>;\n\n    /**\n     * List of the items inside of a dropdown.\n     */\n    @ContentChildren(McDropdownItem) items: QueryList<McDropdownItem>;\n\n    /**\n     * Dropdown content that will be rendered lazily.\n     * @docs-private\n     */\n    @ContentChild(McDropdownContent, {static: false}) lazyContent: McDropdownContent;\n\n    /** Event emitted when the dropdown is closed. */\n    @Output() readonly closed: EventEmitter<void | 'click' | 'keydown' | 'tab'> =\n        new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n\n    private previousPanelClass: string;\n\n    private keyManager: FocusKeyManager<McDropdownItem>;\n\n    /** Dropdown items inside the current dropdown. */\n    private itemsArray: McDropdownItem[] = [];\n\n    /** Emits whenever the amount of dropdown items changes. */\n    private itemChanges = new Subject<McDropdownItem[]>();\n\n    /** Subscription to tab events on the dropdown panel */\n    private tabSubscription = Subscription.EMPTY;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        private _ngZone: NgZone,\n        @Inject(MC_DROPDOWN_DEFAULT_OPTIONS) private _defaultOptions: McDropdownDefaultOptions) { }\n\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n\n    ngAfterContentInit() {\n        this.keyManager = new FocusKeyManager<McDropdownItem>(this.items).withWrap().withTypeAhead();\n        this.tabSubscription = this.keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n    }\n\n    ngOnDestroy() {\n        this.tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n\n    /** Stream that emits whenever the hovered dropdown item changes. */\n    hovered(): Observable<McDropdownItem> {\n        return this.itemChanges.pipe(\n            startWith(this.itemsArray),\n            switchMap((items) => merge(...items.map((item) => item.hovered)))\n        );\n    }\n\n    /** Handle a keyboard event from the dropdown, delegating to the appropriate action. */\n    handleKeydown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const keyCode = event.key || event.keyCode;\n\n        switch (keyCode) {\n            case ESCAPE:\n                this.closed.emit('keydown');\n                break;\n            case LEFT_ARROW:\n                if (this.parent && this.direction === 'ltr') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case RIGHT_ARROW:\n                if (this.parent && this.direction === 'rtl') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            default:\n                if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n                    this.keyManager.setFocusOrigin('keyboard');\n                }\n\n                this.keyManager.onKeydown(event);\n        }\n    }\n\n    /**\n     * Focus the first item in the dropdown.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin: FocusOrigin = 'program'): void {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable.asObservable()\n                .pipe(take(1))\n                .subscribe(() => this.keyManager.setFocusOrigin(origin).setFirstItemActive());\n        } else {\n            this.keyManager.setFocusOrigin(origin).setFirstItemActive();\n        }\n    }\n\n    /**\n     * Resets the active item in the dropdown. This is used when the dropdown is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n        this.keyManager.setActiveItem(-1);\n    }\n\n    /**\n     * Registers a dropdown item with the dropdown.\n     * @docs-private\n     */\n    addItem(item: McDropdownItem) {\n        // We register the items through this method, rather than picking them up through\n        // `ContentChildren`, because we need the items to be picked up by their closest\n        // `mc-dropdown` ancestor. If we used `@ContentChildren(McDropdownItem, {descendants: true})`,\n        // all descendant items will bleed into the top-level dropdown in the case where the consumer\n        // has `mc-dropdown` instances nested inside each other.\n        if (this.itemsArray.indexOf(item) === -1) {\n            this.itemsArray.push(item);\n            this.itemChanges.next(this.itemsArray);\n        }\n    }\n\n    /**\n     * Removes an item from the dropdown.\n     * @docs-private\n     */\n    removeItem(item: McDropdownItem) {\n        const index = this.itemsArray.indexOf(item);\n\n        if (this.itemsArray.indexOf(item) > -1) {\n            this.itemsArray.splice(index, 1);\n            this.itemChanges.next(this.itemsArray);\n        }\n    }\n\n    /**\n     * Adds classes to the dropdown panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the dropdown along the x axis.\n     * @param posY Position of the dropdown along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX: DropdownPositionX = this.xPosition, posY: DropdownPositionY = this.yPosition) {\n        const classes = this.classList;\n        classes['mc-dropdown-before'] = posX === 'before';\n        classes['mc-dropdown-after'] = posX === 'after';\n        classes['mc-dropdown-above'] = posY === 'above';\n        classes['mc-dropdown-below'] = posY === 'below';\n    }\n\n    /** Starts the enter animation. */\n    startAnimation() {\n        this.panelAnimationState = 'enter';\n    }\n\n    /** Resets the panel animation to its initial state. */\n    resetAnimation() {\n        this.panelAnimationState = 'void';\n    }\n\n    /** Callback that is invoked when the panel animation completes. */\n    onAnimationDone(event: AnimationEvent) {\n        this.animationDone.next(event);\n        this.isAnimating = false;\n    }\n\n    onAnimationStart(event: AnimationEvent) {\n        this.isAnimating = true;\n\n        // Scroll the content element to the top as soon as the animation starts. This is necessary,\n        // because we move focus to the first item while it's still being animated, which can throw\n        // the browser off when it determines the scroll position. Alternatively we can move focus\n        // when the animation is done, however moving focus asynchronously will interrupt screen\n        // readers which are in the process of reading out the dropdown already. We take the `element`\n        // from the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this.keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n}\n","import { Direction, Directionality } from '@angular/cdk/bidi';\nimport {\n    FlexibleConnectedPositionStrategy,\n    HorizontalConnectionPos,\n    Overlay,\n    OverlayConfig,\n    OverlayRef,\n    VerticalConnectionPos,\n    ScrollStrategy\n} from '@angular/cdk/overlay';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport {\n    AfterContentInit,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    Self,\n    ViewContainerRef\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { LEFT_ARROW, RIGHT_ARROW, SPACE, ENTER } from '@ptsecurity/cdk/keycodes';\nimport { asapScheduler, merge, of as observableOf, Subscription } from 'rxjs';\nimport { delay, filter, take, takeUntil } from 'rxjs/operators';\n\nimport { throwMcDropdownMissingError } from './dropdown-errors';\nimport { McDropdownItem } from './dropdown-item';\nimport { McDropdownPanel } from './dropdown-panel';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\nimport { McDropdown } from './dropdown.component';\n\n\n/** Injection token that determines the scroll handling while the dropdown is open. */\nexport const MC_DROPDOWN_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('mc-dropdown-scroll-strategy');\n\n/** @docs-private */\n// tslint:disable-next-line:naming-convention\nexport function MC_DROPDOWN_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => ScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_DROPDOWN_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_DROPDOWN_SCROLL_STRATEGY_FACTORY\n};\n\n/** Default top padding of the nested dropdown panel. */\nexport const NESTED_PANEL_TOP_PADDING = 2;\n\n/** Options for binding a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({passive: true});\n\n/**\n * This directive is intended to be used in conjunction with an mc-dropdown tag.  It is\n * responsible for toggling the display of the provided dropdown instance.\n */\n@Directive({\n    selector: `[mcDropdownTriggerFor]`,\n    host: {\n        'aria-haspopup': 'true',\n        '[attr.aria-expanded]': 'opened || null',\n        '(mousedown)': 'handleMousedown($event)',\n        '(keydown)': 'handleKeydown($event)',\n        '(click)': 'handleClick($event)'\n    },\n    exportAs: 'mcDropdownTrigger'\n})\nexport class McDropdownTrigger implements AfterContentInit, OnDestroy {\n\n    /** The text direction of the containing app. */\n    get dir(): Direction {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n\n    /** References the dropdown instance that the trigger is associated with. */\n    @Input('mcDropdownTriggerFor')\n    get dropdown() {\n        return this._dropdown;\n    }\n\n    set dropdown(dropdown: McDropdownPanel) {\n        if (dropdown === this._dropdown) {\n            return;\n        }\n\n        this._dropdown = dropdown;\n        this.closeSubscription.unsubscribe();\n\n        if (dropdown) {\n            this.closeSubscription = dropdown.closed.asObservable().subscribe((reason) => {\n                this.destroy();\n\n                // If a click closed the dropdown, we should close the entire chain of nested dropdowns.\n                if ((reason === 'click' || reason === 'tab') && this._parent) {\n                    this._parent.closed.emit(reason);\n                }\n            });\n        }\n    }\n\n    // Tracking input type is necessary so it's possible to only auto-focus\n    // the first item of the list when the dropdown is opened via the keyboard\n    openedBy: 'mouse' | 'touch' | null = null;\n\n    /** Data to be passed along to any lazily-rendered content. */\n    @Input('mcDropdownTriggerData') data: any;\n\n    /** Event emitted when the associated dropdown is opened. */\n    @Output() readonly dropdownOpened: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the associated dropdown is closed. */\n    @Output() readonly dropdownClosed: EventEmitter<void> = new EventEmitter<void>();\n\n    private _dropdown: McDropdownPanel;\n\n    /** Whether the dropdown is open. */\n    get opened(): boolean {\n        return this._opened;\n    }\n\n    private _opened: boolean = false;\n\n    private portal: TemplatePortal;\n\n    private overlayRef: OverlayRef | null = null;\n\n    private closeSubscription = Subscription.EMPTY;\n\n    private hoverSubscription = Subscription.EMPTY;\n\n    constructor(private _overlay: Overlay,\n                private _element: ElementRef<HTMLElement>,\n                private _viewContainerRef: ViewContainerRef,\n                @Inject(MC_DROPDOWN_SCROLL_STRATEGY) private _scrollStrategy: any,\n                @Optional() private _parent: McDropdown,\n                @Optional() @Self() private _dropdownItemInstance: McDropdownItem,\n                @Optional() private _dir: Directionality,\n                private _focusMonitor?: FocusMonitor) {\n\n        _element.nativeElement.addEventListener('touchstart', this.handleTouchStart,\n            passiveEventListenerOptions);\n\n        if (_dropdownItemInstance) {\n            _dropdownItemInstance.triggersNestedDropdown = this.triggersNestedDropdown();\n        }\n    }\n\n    ngAfterContentInit() {\n        this.check();\n        this.handleHover();\n    }\n\n    ngOnDestroy() {\n        if (this.overlayRef) {\n            this.overlayRef.dispose();\n            this.overlayRef = null;\n        }\n\n        this._element.nativeElement.removeEventListener('touchstart', this.handleTouchStart,\n            passiveEventListenerOptions);\n\n        this.cleanUpSubscriptions();\n        this.closeSubscription.unsubscribe();\n    }\n\n    /** Whether the dropdown triggers a nested dropdown or a top-level one. */\n    triggersNestedDropdown(): boolean {\n        return !!(this._dropdownItemInstance && this._parent);\n    }\n\n    /** Toggles the dropdown between the open and closed states. */\n    toggle(): void {\n        // tslint:disable-next-line:no-void-expression\n        return this._opened ? this.close() : this.open();\n    }\n\n    /** Opens the dropdown. */\n    open(): void {\n        if (this._opened) {\n            return;\n        }\n\n        this.check();\n\n        const overlayRef = this.createOverlay();\n        const overlayConfig = overlayRef.getConfig();\n\n        this.setPosition(overlayConfig.positionStrategy as FlexibleConnectedPositionStrategy);\n        overlayConfig.hasBackdrop = this.dropdown.hasBackdrop == null ? !this.triggersNestedDropdown() :\n            this.dropdown.hasBackdrop;\n        overlayRef.attach(this.getPortal());\n\n        if (this.dropdown.lazyContent) {\n            this.dropdown.lazyContent.attach(this.data);\n        }\n\n        this.closeSubscription = this.closingActions().subscribe(() => this.close());\n        this.init();\n\n        if (this.dropdown instanceof McDropdown) {\n            this.dropdown.startAnimation();\n        }\n    }\n\n    /** Closes the dropdown. */\n    close(): void {\n        this.dropdown.closed.emit();\n    }\n\n    /**\n     * Focuses the dropdown trigger.\n     * @param origin Source of the dropdown trigger's focus.\n     */\n    focus(origin: FocusOrigin = 'program') {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._element.nativeElement, origin);\n        } else {\n            this._element.nativeElement.focus();\n        }\n    }\n\n    /** Handles mouse presses on the trigger. */\n    handleMousedown(event: MouseEvent): void {\n        // Since right or middle button clicks won't trigger the `click` event,\n        // we shouldn't consider the dropdown as opened by mouse in those cases.\n        this.openedBy = event.button === 0 ? 'mouse' : null;\n\n        // Since clicking on the trigger won't close the dropdown if it opens a nested dropdown,\n        // we should prevent focus from moving onto it via click to avoid the\n        // highlight from lingering on the dropdown item.\n        if (this.triggersNestedDropdown()) {\n            event.preventDefault();\n        }\n    }\n\n    /** Handles key presses on the trigger. */\n    handleKeydown(event: KeyboardEvent): void {\n        // tslint:disable-next-line:deprecation\n        const keyCode = event.key || event.keyCode;\n\n        if (keyCode === SPACE || keyCode === ENTER) {\n            this.open();\n        }\n\n        if (this.triggersNestedDropdown() && (\n            (keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n            (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n            this.open();\n        }\n    }\n\n    /** Handles click events on the trigger. */\n    handleClick(event: MouseEvent): void {\n        if (this.triggersNestedDropdown()) {\n            // Stop event propagation to avoid closing the parent dropdown.\n            event.stopPropagation();\n            this.open();\n        } else {\n            this.toggle();\n        }\n    }\n\n    /**\n     * Handles touch start events on the trigger.\n     * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n     */\n    private handleTouchStart = () => this.openedBy = 'touch';\n\n    /** Closes the dropdown and does the necessary cleanup. */\n    private destroy() {\n        if (!this.overlayRef || !this.opened) {\n            return;\n        }\n\n        const dropdown = this.dropdown;\n\n        this.closeSubscription.unsubscribe();\n        this.overlayRef.detach();\n\n        if (dropdown instanceof McDropdown) {\n            dropdown.resetAnimation();\n\n            if (dropdown.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                dropdown.animationDone\n                    .pipe(\n                        filter((event) => event.toState === 'void'),\n                        take(1),\n                        // Interrupt if the content got re-attached.\n                        takeUntil(dropdown.lazyContent.attached)\n                    )\n                    .subscribe({next: () => dropdown.lazyContent.detach(), error: undefined, complete: () => {\n                        // No matter whether the content got re-attached, reset the dropdown.\n                        this.reset();\n                    }});\n            } else {\n                this.reset();\n            }\n        } else {\n            this.reset();\n\n            if (dropdown.lazyContent) {\n                dropdown.lazyContent.detach();\n            }\n        }\n    }\n\n    /**\n     * This method sets the dropdown state to open and focuses the first item if\n     * the dropdown was opened via the keyboard.\n     */\n    private init(): void {\n        this.dropdown.parent = this.triggersNestedDropdown() ? this._parent : undefined;\n        this.dropdown.direction = this.dir;\n        this.setIsOpened(true);\n        this.dropdown.focusFirstItem(this.openedBy || 'program');\n    }\n\n    /**\n     * This method resets the dropdown when it's closed, most importantly restoring\n     * focus to the dropdown trigger if the dropdown was opened via the keyboard.\n     */\n    private reset(): void {\n        this.setIsOpened(false);\n\n        // We should reset focus if the user is navigating using a keyboard or\n        // if we have a top-level trigger which might cause focus to be lost\n        // when clicking on the backdrop.\n        if (!this.openedBy) {\n            // Note that the focus style will show up both for `program` and\n            // `keyboard` so we don't have to specify which one it is.\n            this.focus();\n        } else if (!this.triggersNestedDropdown()) {\n            this.focus(this.openedBy);\n        }\n\n        this.openedBy = null;\n    }\n\n    // set state rather than toggle to support triggers sharing a dropdown\n    private setIsOpened(isOpen: boolean): void {\n        this._opened = isOpen;\n        // tslint:disable-next-line:no-void-expression\n        this._opened ? this.dropdownOpened.emit() : this.dropdownClosed.emit();\n\n        if (this.triggersNestedDropdown()) {\n            this._dropdownItemInstance.highlighted = isOpen;\n        }\n    }\n\n    /**\n     * This method checks that a valid instance of McDropdown has been passed into\n     * mcDropdownTriggerFor. If not, an exception is thrown.\n     */\n    private check() {\n        if (!this.dropdown) {\n            throwMcDropdownMissingError();\n        }\n    }\n\n    /**\n     * This method creates the overlay from the provided dropdown's template and saves its\n     * OverlayRef so that it can be attached to the DOM when open is called.\n     */\n    private createOverlay(): OverlayRef {\n        if (!this.overlayRef) {\n            const config = this.getOverlayConfig();\n            this.subscribeToPositions(config.positionStrategy as FlexibleConnectedPositionStrategy);\n            this.overlayRef = this._overlay.create(config);\n\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `McDropdownPanel` themselves.\n            this.overlayRef.keydownEvents().subscribe();\n        }\n\n        return this.overlayRef;\n    }\n\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    private getOverlayConfig(): OverlayConfig {\n        return new OverlayConfig({\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withTransformOriginOn('.mc-dropdown__panel'),\n            backdropClass: this.dropdown.backdropClass || 'cdk-overlay-transparent-backdrop',\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir\n        });\n    }\n\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the dropdown based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    private subscribeToPositions(position: FlexibleConnectedPositionStrategy): void {\n        if (this.dropdown.setPositionClasses) {\n            position.positionChanges.subscribe((change) => {\n                const posX: DropdownPositionX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                const posY: DropdownPositionY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n\n                this.dropdown.setPositionClasses!(posX, posY);\n            });\n        }\n    }\n\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    private setPosition(positionStrategy: FlexibleConnectedPositionStrategy) {\n\n        let [originX, originFallbackX, overlayX, overlayFallbackX]: HorizontalConnectionPos[] =\n            this.dropdown.xPosition === 'before' ?\n                ['end', 'start', 'end', 'start'] :\n                ['start', 'end', 'start', 'end'];\n\n        // tslint:disable-next-line:prefer-const\n        let [overlayY, overlayFallbackY, originY, originFallbackY]: VerticalConnectionPos[] =\n            this.dropdown.yPosition === 'above' ?\n                ['bottom', 'top', 'bottom', 'top'] :\n                ['top', 'bottom', 'top', 'bottom'];\n\n        let offsetY = 0;\n\n        if (this.triggersNestedDropdown()) {\n            // When the dropdown is nested, it should always align itself\n            // to the edges of the trigger, instead of overlapping it.\n            overlayFallbackX = originX = this.dropdown.xPosition === 'before' ? 'start' : 'end';\n            originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n            offsetY = overlayY === 'bottom' ? NESTED_PANEL_TOP_PADDING : -NESTED_PANEL_TOP_PADDING;\n        } else {\n            if (!this.dropdown.overlapTriggerY) {\n                originY = overlayY === 'top' ? 'bottom' : 'top';\n                originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n            }\n\n            if (!this.dropdown.overlapTriggerX) {\n                overlayFallbackX = originX = this.dropdown.xPosition === 'before' ? 'start' : 'end';\n                originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n            }\n        }\n\n        positionStrategy.withPositions([\n            {originX, originY, overlayX, overlayY, offsetY},\n            {originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY},\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            }\n        ]);\n    }\n\n    /** Cleans up the active subscriptions. */\n    private cleanUpSubscriptions(): void {\n        this.closeSubscription.unsubscribe();\n        this.hoverSubscription.unsubscribe();\n    }\n\n    /** Returns a stream that emits whenever an action that should close the dropdown occurs. */\n    private closingActions() {\n        const backdrop = this.overlayRef!.backdropClick();\n        const detachments = this.overlayRef!.detachments();\n        const parentClose = this._parent ? this._parent.closed : observableOf();\n        const hover = this._parent ? this._parent.hovered().pipe(\n            filter((active) => active !== this._dropdownItemInstance),\n            filter(() => this._opened)\n        ) : observableOf();\n\n        return merge(backdrop, parentClose, hover, detachments);\n    }\n\n    /** Handles the cases where the user hovers over the trigger. */\n    private handleHover() {\n        // Subscribe to changes in the hovered item in order to toggle the panel.\n        if (!this.triggersNestedDropdown()) {\n            return;\n        }\n\n        this.hoverSubscription = this._parent.hovered()\n        // Since we might have multiple competing triggers for the same dropdown (e.g. a nested dropdown\n        // with different data and triggers), we have to delay it by a tick to ensure that\n        // it won't be closed immediately after it is opened.\n            .pipe(\n                filter((active) => active === this._dropdownItemInstance && !active.disabled),\n                delay(0, asapScheduler)\n            )\n            .subscribe(() => {\n                this.openedBy = 'mouse';\n\n                // If the same dropdown is used between multiple triggers, it might still be animating\n                // while the new trigger tries to re-open it. Wait for the animation to finish\n                // before doing so. Also interrupt if the user moves to another item.\n                if (this.dropdown instanceof McDropdown && this.dropdown.isAnimating) {\n                    // We need the `delay(0)` here in order to avoid\n                    // 'changed after checked' errors in some cases. See #12194.\n                    this.dropdown.animationDone\n                        .pipe(take(1), delay(0, asapScheduler), takeUntil(this._parent.hovered()))\n                        .subscribe(() => this.open());\n                } else {\n                    this.open();\n                }\n            });\n    }\n\n    /** Gets the portal that should be attached to the overlay. */\n    private getPortal(): TemplatePortal {\n        // Note that we can avoid this check by keeping the portal on the dropdown panel.\n        // While it would be cleaner, we'd have to introduce another required method on\n        // `McDropdownPanel`, making it harder to consume.\n        if (!this.portal || this.portal.templateRef !== this.dropdown.templateRef) {\n            this.portal = new TemplatePortal(this.dropdown.templateRef, this._viewContainerRef);\n        }\n\n        return this.portal;\n    }\n\n}\n","import { TemplatePortal, DomPortalOutlet } from '@angular/cdk/portal';\nimport { DOCUMENT } from '@angular/common';\nimport {\n    Directive,\n    TemplateRef,\n    ComponentFactoryResolver,\n    ApplicationRef,\n    Injector,\n    ViewContainerRef,\n    Inject,\n    OnDestroy\n} from '@angular/core';\nimport { Subject } from 'rxjs';\n\n\n/**\n * Dropdown content that will be rendered lazily once the dropdown is opened.\n */\n@Directive({\n    selector: 'ng-template[mcDropdownContent]'\n})\nexport class McDropdownContent implements OnDestroy {\n\n    /** Emits when the dropdown content has been attached. */\n    attached = new Subject<void>();\n    private portal: TemplatePortal;\n    private outlet: DomPortalOutlet;\n\n    constructor(\n        private _template: TemplateRef<any>,\n        private _componentFactoryResolver: ComponentFactoryResolver,\n        private _appRef: ApplicationRef,\n        private _injector: Injector,\n        private _viewContainerRef: ViewContainerRef,\n        @Inject(DOCUMENT) private _document: any) {}\n\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context: any = {}) {\n        if (!this.portal) {\n            this.portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n\n        this.detach();\n\n        if (!this.outlet) {\n            this.outlet = new DomPortalOutlet(this._document.createElement('div'),\n                this._componentFactoryResolver, this._appRef, this._injector);\n        }\n\n        const element: HTMLElement = this._template.elementRef.nativeElement;\n\n        // Because we support opening the same dropdown from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode!.insertBefore(this.outlet.outletElement, element);\n        this.portal.attach(this.outlet, context);\n        this.attached.next();\n    }\n\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n        if (this.portal.isAttached) {\n            this.portal.detach();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.outlet) {\n            this.outlet.dispose();\n        }\n    }\n}\n","import { Direction } from '@angular/cdk/bidi';\nimport { EventEmitter, TemplateRef, InjectionToken } from '@angular/core';\nimport { FocusOrigin } from '@ptsecurity/cdk/a11y';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/**\n * Injection token used to provide the parent dropdown to dropdown-specific components.\n * @docs-private\n */\nexport const MC_DROPDOWN_PANEL = new InjectionToken<McDropdownPanel>('MC_DROPDOWN_PANEL');\n\n/**\n * Interface for a custom dropdown panel that can be used with `mcDropdownTriggerFor`.\n * @docs-private\n */\n// tslint:disable-next-line:naming-convention\nexport interface McDropdownPanel<T = any> {\n    xPosition: DropdownPositionX;\n    yPosition: DropdownPositionY;\n    overlapTriggerX: boolean;\n    overlapTriggerY: boolean;\n    templateRef: TemplateRef<any>;\n    closed: EventEmitter<void | 'click' | 'keydown' | 'tab'>;\n    parent?: McDropdownPanel | undefined;\n    direction?: Direction;\n    lazyContent?: McDropdownContent;\n    backdropClass?: string;\n    hasBackdrop?: boolean;\n    focusFirstItem(origin?: FocusOrigin): void;\n    resetActiveItem(): void;\n    setPositionClasses?(x: DropdownPositionX, y: DropdownPositionY): void;\n    addItem?(item: T): void;\n    removeItem?(item: T): void;\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    Inject,\n    Optional,\n    Input,\n    ViewChild\n} from '@angular/core';\nimport { IFocusableOption, FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { CanDisable, CanDisableCtor, mixinDisabled } from '@ptsecurity/mosaic/core';\nimport { Subject } from 'rxjs';\n\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\n\n\n// Boilerplate for applying mixins to McDropdownItem.\n/** @docs-private */\nexport class McDropdownItemBase {}\n// tslint:disable-next-line:naming-convention\nexport const McDropdownItemMixinBase: CanDisableCtor & typeof McDropdownItemBase =\n    mixinDisabled(McDropdownItemBase);\n\n/**\n * This directive is intended to be used inside an mc-dropdown tag.\n * It exists mostly to set the role attribute.\n */\n@Component({\n    selector: 'mc-dropdown-item, [mc-dropdown-item]',\n    exportAs: 'mcDropdownItem',\n    inputs: ['disabled'],\n    host: {\n        '[attr.role]': 'role',\n        class: 'mc-dropdown__item',\n        '[class.mc-dropdown__item_highlighted]': 'highlighted',\n        '[attr.tabindex]': 'getTabIndex()',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': 'checkDisabled($event)',\n        '(mouseenter)': 'handleMouseEnter()'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    template: `\n        <div #content>\n            <ng-content></ng-content>\n        </div>\n        <i *ngIf=\"triggersNestedDropdown\" mc-icon=\"mc-angle-right-M_16\" class=\"mc-dropdown__trigger\"></i>\n    `\n})\nexport class McDropdownItem extends McDropdownItemMixinBase\n    implements IFocusableOption, CanDisable, OnDestroy {\n\n    /** ARIA role for the dropdown item. */\n    @Input() role: 'menuitem' | 'menuitemradio' | 'menuitemcheckbox' = 'menuitem';\n\n    @ViewChild('content', {static: false}) content;\n\n    /** Stream that emits when the dropdown item is hovered. */\n    readonly hovered: Subject<McDropdownItem> = new Subject<McDropdownItem>();\n\n    /** Whether the dropdown item is highlighted. */\n    highlighted: boolean = false;\n\n    /** Whether the dropdown item acts as a trigger for a nested dropdown. */\n    triggersNestedDropdown: boolean = false;\n\n    private document: Document;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        @Inject(DOCUMENT) document: any,\n        private _focusMonitor: FocusMonitor,\n        @Inject(MC_DROPDOWN_PANEL) @Optional() private _parentDropdownPanel?: McDropdownPanel<McDropdownItem>) {\n        super();\n\n        if (_focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for dropdown items only when the focus was not caused by a\n            // mouse or touch interaction.\n            _focusMonitor.monitor(this._elementRef.nativeElement, false);\n        }\n\n        if (_parentDropdownPanel && _parentDropdownPanel.addItem) {\n            _parentDropdownPanel.addItem(this);\n        }\n\n        this.document = document;\n    }\n\n    /** Focuses the dropdown item. */\n    focus(origin: FocusOrigin = 'program'): void {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this.getHostElement(), origin);\n        } else {\n            this.getHostElement().focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n\n        if (this._parentDropdownPanel && this._parentDropdownPanel.removeItem) {\n            this._parentDropdownPanel.removeItem(this);\n        }\n\n        this.hovered.complete();\n    }\n\n    /** Used to set the `tabindex`. */\n    getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Returns the host DOM element. */\n    getHostElement(): HTMLElement {\n        return this._elementRef.nativeElement;\n    }\n\n    /** Prevents the default element actions if it is disabled. */\n    checkDisabled(event: Event): void {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n\n    /** Emits to the hover stream. */\n    handleMouseEnter() {\n        this.hovered.next(this);\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        const element: HTMLElement = this.content.nativeElement;\n        // tslint:disable-next-line:no-magic-numbers\n        const textNodeType = this.document ? this.document.TEXT_NODE : 3;\n        let output = '';\n\n        if (element.childNodes) {\n            const length = element.childNodes.length;\n\n            // Go through all the top-level text nodes and extract their text.\n            // We skip anything that's not a text node to prevent the text from\n            // being thrown off by something like an icon.\n            for (let i = 0; i < length; i++) {\n                if (element.childNodes[i].nodeType === textNodeType) {\n                    output += element.childNodes[i].textContent;\n                }\n            }\n        }\n\n        return output.trim();\n    }\n}\n","import {\n    trigger,\n    state,\n    style,\n    animate,\n    transition,\n    query,\n    group,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\n/**\n * Animations used by the mc-dropdown component.\n * @docs-private\n */\nexport const mcDropdownAnimations: {\n    readonly transformDropdown: AnimationTriggerMetadata;\n    readonly fadeInItems: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation controls the dropdown panel's entry and exit from the page.\n     *\n     * When the dropdown panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the dropdown panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformDropdown: trigger('transformDropdown', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        })),\n        transition('void => enter', group([\n            query('.mc-dropdown__content', animate('50ms linear', style({opacity: 1}))),\n            animate('50ms cubic-bezier(0, 0, 0.2, 1)', style({transform: 'scale(1)'}))\n        ])),\n        transition('* => void', animate('50ms 25ms linear', style({opacity: 0})))\n    ]),\n\n\n    /**\n     * This animation fades in the background color and content of the dropdown panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // now. Remove next time we do breaking changes.\n        state('showing', style({opacity: 1})),\n        transition('void => *', [\n            style({opacity: 0}),\n            animate('200ms 60ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\nexport const fadeInItems = mcDropdownAnimations.fadeInItems;\n\nexport const transformDropdown = mcDropdownAnimations.transformDropdown;\n","import { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER, McDropdownTrigger } from './dropdown-trigger';\nimport { McDropdown } from './dropdown.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        McIconModule\n    ],\n    exports: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    declarations: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    providers: [MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER]\n})\nexport class McDropdownModule {}\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","throwMcDropdownMissingError","Error","throwMcDropdownInvalidPositionX","throwMcDropdownInvalidPositionY","MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY","overlapTriggerX","overlapTriggerY","xPosition","yPosition","backdropClass","MC_DROPDOWN_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","setPrototypeOf","__proto__","Array","p","hasOwnProperty","McDropdownContent","_template","_componentFactoryResolver","_appRef","_injector","_viewContainerRef","_document","attached","Subject","attach","context","portal","TemplatePortal","detach","outlet","DomPortalOutlet","createElement","element","elementRef","nativeElement","insertBefore","outletElement","next","isAttached","ngOnDestroy","dispose","type","Directive","args","selector","TemplateRef","ComponentFactoryResolver","ApplicationRef","Injector","ViewContainerRef","undefined","decorators","Inject","DOCUMENT","MC_DROPDOWN_PANEL","InjectionToken","McDropdownItemBase","McDropdownItemMixinBase","mixinDisabled","McDropdownItem","_super","_elementRef","document","_focusMonitor","_parentDropdownPanel","_this","call","role","hovered","highlighted","triggersNestedDropdown","monitor","addItem","tslib_1.__extends","focus","origin","focusVia","getHostElement","stopMonitoring","removeItem","complete","getTabIndex","disabled","checkDisabled","event","preventDefault","stopPropagation","handleMouseEnter","getLabel","content","textNodeType","TEXT_NODE","output","childNodes","length_1","length","i","nodeType","textContent","trim","Component","exportAs","inputs","host","[attr.role]","class","[class.mc-dropdown__item_highlighted]","[attr.tabindex]","[attr.aria-disabled]","[attr.disabled]","(click)","(mouseenter)","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","template","ElementRef","FocusMonitor","Optional","Input","ViewChild","static","mcDropdownAnimations","transformDropdown","trigger","state","style","opacity","transform","transition","group","query","animate","fadeInItems","MC_DROPDOWN_DEFAULT_OPTIONS","providedIn","factory","McDropdown","_ngZone","_defaultOptions","_xPosition","_yPosition","_overlapTriggerX","_overlapTriggerY","_hasBackdrop","hasBackdrop","classList","panelAnimationState","animationDone","closed","EventEmitter","itemsArray","itemChanges","tabSubscription","Subscription","EMPTY","defineProperty","value","setPositionClasses","coerceBooleanProperty","classes","previousPanelClass","split","forEach","className","ngOnInit","ngAfterContentInit","keyManager","FocusKeyManager","items","withWrap","withTypeAhead","tabOut","subscribe","emit","unsubscribe","pipe","startWith","switchMap","merge","apply","map","item","handleKeydown","keyCode","key","ESCAPE","LEFT_ARROW","parent","direction","RIGHT_ARROW","UP_ARROW","DOWN_ARROW","setFocusOrigin","onKeydown","focusFirstItem","lazyContent","onStable","asObservable","take","setFirstItemActive","resetActiveItem","setActiveItem","indexOf","push","index","splice","posX","posY","startAnimation","resetAnimation","onAnimationDone","isAnimating","onAnimationStart","toState","activeItemIndex","scrollTop","styles","animations","providers","provide","useExisting","NgZone","panelClass","templateRef","ContentChildren","ContentChild","Output","MC_DROPDOWN_SCROLL_STRATEGY","MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","Overlay","useFactory","passiveEventListenerOptions","normalizePassiveListenerOptions","passive","McDropdownTrigger","_overlay","_element","_scrollStrategy","_parent","_dropdownItemInstance","_dir","openedBy","dropdownOpened","dropdownClosed","_opened","overlayRef","closeSubscription","hoverSubscription","handleTouchStart","addEventListener","_dropdown","dropdown","reason","destroy","check","handleHover","removeEventListener","cleanUpSubscriptions","toggle","close","open","createOverlay","overlayConfig","getConfig","setPosition","getPortal","data","closingActions","init","handleMousedown","button","SPACE","ENTER","dir","handleClick","opened","filter","takeUntil","error","reset","setIsOpened","isOpen","config","getOverlayConfig","subscribeToPositions","keydownEvents","OverlayConfig","positionStrategy","position","flexibleConnectedTo","withLockedPosition","withTransformOriginOn","scrollStrategy","positionChanges","change","connectionPair","overlayX","overlayY","_a","originX","originFallbackX","overlayFallbackX","_b","overlayFallbackY","originY","originFallbackY","offsetY","withPositions","backdrop","backdropClick","detachments","parentClose","observableOf","hover","active","delay","asapScheduler","aria-haspopup","[attr.aria-expanded]","(mousedown)","(keydown)","Self","Directionality","McDropdownModule","NgModule","imports","CommonModule","OverlayModule","McIconModule","exports","declarations"],"mappings":"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"}