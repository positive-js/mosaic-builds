{"version":3,"file":"mosaic-dropdown.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/lib/dropdown/dropdown-errors.ts","../../src/lib/dropdown/dropdown.component.ts","../../src/lib/dropdown/dropdown-trigger.ts","../../src/lib/dropdown/dropdown-content.ts","../../src/lib/dropdown/dropdown-panel.ts","../../src/lib/dropdown/dropdown-item.ts","../../src/lib/dropdown/dropdown-animations.ts","../../src/lib/dropdown/dropdown.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export function throwMcDropdownMissingError() {\n    throw Error(`mcDropdownTriggerFor: must pass in an mc-dropdown instance.\n    Example:\n      <mc-dropdown #dropdown=\"mcDropdown\"></mc-dropdown>\n      <button [mcDropdownTriggerFor]=\"dropdown\"></button>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mc-dropdown xPosition=\"before\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mc-dropdown yPosition=\"above\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    Output,\n    TemplateRef,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    OnInit\n} from '@angular/core';\nimport { FocusKeyManager, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE, DOWN_ARROW, UP_ARROW } from '@ptsecurity/cdk/keycodes';\nimport { Subject, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { mcDropdownAnimations } from './dropdown-animations';\nimport { McDropdownContent } from './dropdown-content';\nimport { throwMcDropdownInvalidPositionX, throwMcDropdownInvalidPositionY } from './dropdown-errors';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/** Default `mc-dropdown` options that can be overridden. */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownDefaultOptions {\n    /** The x-axis position of the dropdown. */\n    xPosition: DropdownPositionX;\n\n    /** The y-axis position of the dropdown. */\n    yPosition: DropdownPositionY;\n\n    /** Whether the dropdown should overlap the dropdown trigger. */\n    overlapTrigger: boolean;\n\n    /** Class to be applied to the dropdown's backdrop. */\n    backdropClass: string;\n\n    /** Whether the dropdown has a backdrop. */\n    hasBackdrop?: boolean;\n}\n\n/** Injection token to be used to override the default options for `mc-dropdown`. */\nexport const MC_DROPDOWN_DEFAULT_OPTIONS =\n    new InjectionToken<McDropdownDefaultOptions>('mc-dropdown-default-options', {\n        providedIn: 'root',\n        factory: MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY\n    });\n\n/** @docs-private */\nexport function MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY(): McDropdownDefaultOptions {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop'\n    };\n}\n\n@Component({\n    selector: 'mc-dropdown',\n    templateUrl: 'dropdown.html',\n    styleUrls: ['dropdown.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcDropdown',\n    animations: [\n        mcDropdownAnimations.transformDropdown,\n        mcDropdownAnimations.fadeInItems\n    ],\n    providers: [\n        { provide: MC_DROPDOWN_PANEL, useExisting: McDropdown }\n    ]\n})\nexport class McDropdown implements AfterContentInit, McDropdownPanel<McDropdownItem>, OnInit, OnDestroy {\n\n    /** Position of the dropdown in the X axis. */\n    @Input()\n    get xPosition(): DropdownPositionX { return this._xPosition; }\n    set xPosition(value: DropdownPositionX) {\n        if (value !== 'before' && value !== 'after') {\n            throwMcDropdownInvalidPositionX();\n        }\n\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Position of the dropdown in the Y axis. */\n    @Input()\n    get yPosition(): DropdownPositionY { return this._yPosition; }\n    set yPosition(value: DropdownPositionY) {\n        if (value !== 'above' && value !== 'below') {\n            throwMcDropdownInvalidPositionY();\n        }\n\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Whether the dropdown should overlap its trigger. */\n    @Input()\n    get overlapTrigger(): boolean { return this._overlapTrigger; }\n    set overlapTrigger(value: boolean) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n\n    /** Whether the dropdown has a backdrop. */\n    @Input()\n    get hasBackdrop(): boolean | undefined { return this._hasBackdrop; }\n    set hasBackdrop(value: boolean | undefined) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n\n    /**\n     * This method takes classes set on the host mc-dropdown element and applies them on the\n     * dropdown template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing dropdown from outside the component.\n     * @param classes list of class names\n     */\n    @Input('class')\n    set panelClass(classes: string) {\n        if (classes && classes.length) {\n            this._classList = classes.split(' ').reduce((obj: any, className: string) => {\n                obj[className] = true;\n\n                return obj;\n            }, {});\n\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n\n    /** Config object to be passed into the dropdown's ngClass */\n    _classList: {[key: string]: boolean} = {};\n\n    /** Current state of the panel animation. */\n    _panelAnimationState: 'void' | 'enter' = 'void';\n\n    /** Emits whenever an animation on the dropdown completes. */\n    _animationDone = new Subject<AnimationEvent>();\n\n    /** Whether the dropdown is animating. */\n    _isAnimating: boolean;\n\n    /** Layout direction of the dropdown. */\n    direction: Direction;\n\n    /** Class to be added to the backdrop element. */\n    @Input() backdropClass: string = this._defaultOptions.backdropClass;\n\n    /** @docs-private */\n    @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n\n    /**\n     * List of the items inside of a dropdown.\n     */\n    @ContentChildren(McDropdownItem) items: QueryList<McDropdownItem>;\n\n    /**\n     * Dropdown content that will be rendered lazily.\n     * @docs-private\n     */\n    @ContentChild(McDropdownContent) lazyContent: McDropdownContent;\n\n    /** Event emitted when the dropdown is closed. */\n    @Output() readonly closed: EventEmitter<void | 'click' | 'keydown' | 'tab'> =\n        new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n\n    private _keyManager: FocusKeyManager<McDropdownItem>;\n    private _xPosition: DropdownPositionX = this._defaultOptions.xPosition;\n    private _yPosition: DropdownPositionY = this._defaultOptions.yPosition;\n\n    /** Dropdown items inside the current dropdown. */\n    private _items: McDropdownItem[] = [];\n\n    /** Emits whenever the amount of dropdown items changes. */\n    private _itemChanges = new Subject<McDropdownItem[]>();\n\n    /** Subscription to tab events on the dropdown panel */\n    private _tabSubscription = Subscription.EMPTY;\n    private _overlapTrigger: boolean = this._defaultOptions.overlapTrigger;\n    private _hasBackdrop: boolean | undefined = this._defaultOptions.hasBackdrop;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        private _ngZone: NgZone,\n        @Inject(MC_DROPDOWN_DEFAULT_OPTIONS) private _defaultOptions: McDropdownDefaultOptions) { }\n\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager<McDropdownItem>(this.items).withWrap().withTypeAhead();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n    }\n\n    ngOnDestroy() {\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n\n    /** Handle a keyboard event from the dropdown, delegating to the appropriate action. */\n    _handleKeydown(event: KeyboardEvent) {\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case ESCAPE:\n                this.closed.emit('keydown');\n                break;\n            case UP_ARROW:\n            case DOWN_ARROW:\n                this._keyManager.setFocusOrigin('keyboard');\n                this._keyManager.onKeydown(event);\n                break;\n            default:\n                // todo зачем обрабатывать лишние события ?\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    /**\n     * Focus the first item in the dropdown.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin: FocusOrigin = 'program'): void {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable.asObservable()\n                .pipe(take(1))\n                .subscribe(() => this._keyManager.setFocusOrigin(origin).setFirstItemActive());\n        } else {\n            this._keyManager.setFocusOrigin(origin).setFirstItemActive();\n        }\n    }\n\n    /**\n     * Resets the active item in the dropdown. This is used when the dropdown is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n\n    /**\n     * Registers a dropdown item with the dropdown.\n     * @docs-private\n     */\n    addItem(item: McDropdownItem) {\n        // We register the items through this method, rather than picking them up through\n        // `ContentChildren`, because we need the items to be picked up by their closest\n        // `mc-dropdown` ancestor. If we used `@ContentChildren(McDropdownItem, {descendants: true})`,\n        // all descendant items will bleed into the top-level dropdown in the case where the consumer\n        // has `mc-dropdown` instances nested inside each other.\n        if (this._items.indexOf(item) === -1) {\n            this._items.push(item);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Removes an item from the dropdown.\n     * @docs-private\n     */\n    removeItem(item: McDropdownItem) {\n        const index = this._items.indexOf(item);\n\n        if (this._items.indexOf(item) > -1) {\n            this._items.splice(index, 1);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Adds classes to the dropdown panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the dropdown along the x axis.\n     * @param posY Position of the dropdown along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX: DropdownPositionX = this.xPosition, posY: DropdownPositionY = this.yPosition) {\n        const classes = this._classList;\n        classes['mc-dropdown-before'] = posX === 'before';\n        classes['mc-dropdown-after'] = posX === 'after';\n        classes['mc-dropdown-above'] = posY === 'above';\n        classes['mc-dropdown-below'] = posY === 'below';\n    }\n\n    /** Starts the enter animation. */\n    _startAnimation() {\n        this._panelAnimationState = 'enter';\n    }\n\n    /** Resets the panel animation to its initial state. */\n    _resetAnimation() {\n        this._panelAnimationState = 'void';\n    }\n\n    /** Callback that is invoked when the panel animation completes. */\n    _onAnimationDone(event: AnimationEvent) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n\n        // Scroll the content element to the top once the animation is done. This is necessary, because\n        // we move focus to the first item while it's still being animated, which can throw the browser\n        // off when it determines the scroll position. Alternatively we can move focus when the\n        // animation is done, however moving focus asynchronously will interrupt screen readers\n        // which are in the process of reading out the dropdown already. We take the `element` from\n        // the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n}\n","import {\n    AfterContentInit,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy, OnInit,\n    Optional,\n    Output,\n    ViewContainerRef\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction, Directionality } from '@ptsecurity/cdk/bidi';\nimport {\n    FlexibleConnectedPositionStrategy,\n    HorizontalConnectionPos,\n    Overlay,\n    OverlayConfig,\n    OverlayRef,\n    VerticalConnectionPos,\n    IScrollStrategy\n} from '@ptsecurity/cdk/overlay';\nimport { TemplatePortal } from '@ptsecurity/cdk/portal';\nimport { merge, Subscription } from 'rxjs';\nimport { filter, take, takeUntil } from 'rxjs/operators';\n\nimport { throwMcDropdownMissingError } from './dropdown-errors';\nimport { McDropdownPanel } from './dropdown-panel';\nimport { McDropdown } from './dropdown.component';\n\n\n/** Injection token that determines the scroll handling while the dropdown is open. */\nexport const MC_DROPDOWN_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-dropdown-scroll-strategy');\n\n/** @docs-private */\nexport function MC_DROPDOWN_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_DROPDOWN_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_DROPDOWN_SCROLL_STRATEGY_FACTORY\n};\n\n/**\n * This directive is intended to be used in conjunction with an mc-dropdown tag.  It is\n * responsible for toggling the display of the provided dropdown instance.\n */\n@Directive({\n    selector: `[mcDropdownTriggerFor]`,\n    host: {\n        '(touchstart)': '_openedBy = \"touch\"',\n        '(click)': 'toggle()'\n    },\n    exportAs: 'mcDropdownTrigger'\n})\nexport class McDropdownTrigger implements OnInit, AfterContentInit, OnDestroy {\n\n    /** Whether the dropdown is open. */\n    get opened(): boolean {\n        return this._opened;\n    }\n\n    /** The text direction of the containing app. */\n    get dir(): Direction {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    // Tracking input type is necessary so it's possible to only auto-focus\n    // the first item of the list when the dropdown is opened via the keyboard\n    _openedBy: 'mouse' | 'touch' | null = null;\n\n    /** References the dropdown instance that the trigger is associated with. */\n    @Input('mcDropdownTriggerFor') dropdown: McDropdownPanel;\n\n    /** Data to be passed along to any lazily-rendered content. */\n    @Input('mcDropdownTriggerData') data: any;\n\n    /** Event emitted when the associated dropdown is opened. */\n    @Output() readonly dropdownOpened: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the associated dropdown is closed. */\n    @Output() readonly dropdownClosed: EventEmitter<void> = new EventEmitter<void>();\n\n    private _portal: TemplatePortal;\n    private _overlayRef: OverlayRef | null = null;\n    private _opened: boolean = false;\n    private _closeSubscription = Subscription.EMPTY;\n    private _hoverSubscription = Subscription.EMPTY;\n\n    constructor(private _overlay: Overlay,\n                private _element: ElementRef<HTMLElement>,\n                private _viewContainerRef: ViewContainerRef,\n                @Inject(MC_DROPDOWN_SCROLL_STRATEGY) private _scrollStrategy: any,\n                @Optional() private _dir: Directionality,\n                private _focusMonitor?: FocusMonitor) {}\n\n    ngOnInit(): void {\n        this.dropdown.closed = this.dropdown.closed || new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n    }\n\n    ngAfterContentInit() {\n        this._check();\n\n        this.dropdown.closed.asObservable().subscribe(() => {\n            this._destroy();\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n\n        this._cleanUpSubscriptions();\n    }\n\n    /** Toggles the dropdown between the open and closed states. */\n    toggle(): void {\n        // tslint:disable-next-line:no-void-expression\n        return this._opened ? this.close() : this.open();\n    }\n\n    /** Opens the dropdown. */\n    open(): void {\n        if (this._opened) {\n            return;\n        }\n\n        this._check();\n\n        const overlayRef = this._createOverlay();\n        this._setPosition(overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy);\n        overlayRef.attach(this._portal);\n\n        if (this.dropdown.lazyContent) {\n            this.dropdown.lazyContent.attach(this.data);\n        }\n\n        this._closeSubscription = this._closingActions().subscribe(() => this.close());\n        this._init();\n\n        if (this.dropdown instanceof McDropdown) {\n            this.dropdown._startAnimation();\n        }\n    }\n\n    /** Closes the dropdown. */\n    close(): void {\n        this.dropdown.closed.emit();\n    }\n\n    /**\n     * Focuses the dropdown trigger.\n     * @param origin Source of the dropdown trigger's focus.\n     */\n    focus(origin: FocusOrigin = 'program') {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._element.nativeElement, origin);\n        } else {\n            this._element.nativeElement.focus();\n        }\n    }\n\n    /** Closes the dropdown and does the necessary cleanup. */\n    private _destroy() {\n        if (!this._overlayRef || !this.opened) {\n            return;\n        }\n\n        const dropdown = this.dropdown;\n\n        this._closeSubscription.unsubscribe();\n        this._overlayRef.detach();\n\n        if (dropdown instanceof McDropdown) {\n            dropdown._resetAnimation();\n\n            if (dropdown.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                dropdown._animationDone\n                    .pipe(\n                        filter((event) => event.toState === 'void'),\n                        take(1),\n                        // Interrupt if the content got re-attached.\n                        takeUntil(dropdown.lazyContent._attached)\n                    )\n                    .subscribe(() => dropdown.lazyContent.detach(), undefined, () => {\n                        // No matter whether the content got re-attached, reset the dropdown.\n                        this._reset();\n                    });\n            } else {\n                this._reset();\n            }\n        } else {\n            this._reset();\n\n            if (dropdown.lazyContent) {\n                dropdown.lazyContent.detach();\n            }\n        }\n    }\n\n    /**\n     * This method sets the dropdown state to open and focuses the first item if\n     * the dropdown was opened via the keyboard.\n     */\n    private _init(): void {\n        this.dropdown.direction = this.dir;\n        this._setIsOpened(true);\n        this.dropdown.focusFirstItem(this._openedBy || 'program');\n    }\n\n    /**\n     * This method resets the dropdown when it's closed, most importantly restoring\n     * focus to the dropdown trigger if the dropdown was opened via the keyboard.\n     */\n    private _reset(): void {\n        this._setIsOpened(false);\n\n        // We should reset focus if the user is navigating using a keyboard or\n        // if we have a top-level trigger which might cause focus to be lost\n        // when clicking on the backdrop.\n        if (!this._openedBy) {\n            // Note that the focus style will show up both for `program` and\n            // `keyboard` so we don't have to specify which one it is.\n            this.focus();\n        } else {\n            this.focus(this._openedBy);\n        }\n\n        this._openedBy = null;\n    }\n\n    // set state rather than toggle to support triggers sharing a dropdown\n    private _setIsOpened(isOpen: boolean): void {\n        this._opened = isOpen;\n        // tslint:disable-next-line:no-void-expression\n        this._opened ? this.dropdownOpened.emit() : this.dropdownClosed.emit();\n    }\n\n    /**\n     * This method checks that a valid instance of Dropdown has been passed into\n     * mcDropdownTriggerFor. If not, an exception is thrown.\n     */\n    private _check() {\n        if (!this.dropdown) {\n            throwMcDropdownMissingError();\n        }\n    }\n\n    /**\n     * This method creates the overlay from the provided dropdown's template and saves its\n     * OverlayRef so that it can be attached to the DOM when open is called.\n     */\n    private _createOverlay(): OverlayRef {\n        if (!this._overlayRef) {\n            this._portal = new TemplatePortal(this.dropdown.templateRef, this._viewContainerRef);\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions(config.positionStrategy as FlexibleConnectedPositionStrategy);\n            this._overlayRef = this._overlay.create(config);\n\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `McDropdownPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n\n        return this._overlayRef;\n    }\n\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    private _getOverlayConfig(): OverlayConfig {\n        return new OverlayConfig({\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withTransformOriginOn('.mc-dropdown__panel'),\n            hasBackdrop: this.dropdown.hasBackdrop === null || this.dropdown.hasBackdrop === undefined\n                ? true\n                : this.dropdown.hasBackdrop,\n            backdropClass: this.dropdown.backdropClass || 'cdk-overlay-transparent-backdrop',\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir\n        });\n    }\n\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the dropdown based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    private _subscribeToPositions(position: FlexibleConnectedPositionStrategy): void {\n        if (this.dropdown.setPositionClasses) {\n            // todo possibly we should not recompute positions there\n            /*position.positionChanges.subscribe((change) => {\n                const posX: DropdownPositionX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                const posY: DropdownPositionY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n\n                this.dropdown.setPositionClasses!(posX, posY);\n            });*/\n            position.positionChanges.subscribe(() => {\n                this.dropdown.setPositionClasses!(this.dropdown.xPosition, this.dropdown.yPosition);\n            });\n        }\n    }\n\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    private _setPosition(positionStrategy: FlexibleConnectedPositionStrategy) {\n        const [originX, originFallbackX]: HorizontalConnectionPos[] =\n            this.dropdown.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n\n        const [overlayY, overlayFallbackY]: VerticalConnectionPos[] =\n            this.dropdown.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        const [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        const offsetY = 0;\n\n        if (!this.dropdown.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n\n        positionStrategy.withPositions([\n            {originX, originY, overlayX, overlayY, offsetY},\n            {originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY},\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            }\n        ]);\n    }\n\n    /** Cleans up the active subscriptions. */\n    private _cleanUpSubscriptions(): void {\n        this._closeSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n\n    /** Returns a stream that emits whenever an action that should close the dropdown occurs. */\n    private _closingActions() {\n        const backdrop = this._overlayRef!.backdropClick();\n        const detachments = this._overlayRef!.detachments();\n\n        return merge(backdrop, detachments);\n    }\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    Directive,\n    TemplateRef,\n    ComponentFactoryResolver,\n    ApplicationRef,\n    Injector,\n    ViewContainerRef,\n    Inject,\n    OnDestroy\n} from '@angular/core';\nimport { TemplatePortal, DomPortalOutlet } from '@ptsecurity/cdk/portal';\nimport { Subject } from 'rxjs';\n\n\n/**\n * Dropdown content that will be rendered lazily once the dropdown is opened.\n */\n@Directive({\n    selector: 'ng-template[mcDropdownContent]'\n})\nexport class McDropdownContent implements OnDestroy {\n\n    /** Emits when the dropdown content has been attached. */\n    _attached = new Subject<void>();\n    private _portal: TemplatePortal;\n    private _outlet: DomPortalOutlet;\n\n    constructor(\n        private _template: TemplateRef<any>,\n        private _componentFactoryResolver: ComponentFactoryResolver,\n        private _appRef: ApplicationRef,\n        private _injector: Injector,\n        private _viewContainerRef: ViewContainerRef,\n        @Inject(DOCUMENT) private _document: any) {}\n\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context: any = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n\n        this.detach();\n\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'),\n                this._componentFactoryResolver, this._appRef, this._injector);\n        }\n\n        const element: HTMLElement = this._template.elementRef.nativeElement;\n\n        // Because we support opening the same dropdown from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode!.insertBefore(this._outlet.outletElement, element);\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\n","import { EventEmitter, TemplateRef, InjectionToken } from '@angular/core';\nimport { FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/**\n * Injection token used to provide the parent dropdown to dropdown-specific components.\n * @docs-private\n */\nexport const MC_DROPDOWN_PANEL = new InjectionToken<McDropdownPanel>('MC_DROPDOWN_PANEL');\n\n/**\n * Interface for a custom dropdown panel that can be used with `mcDropdownTriggerFor`.\n * @docs-private\n */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownPanel<T = any> {\n    xPosition: DropdownPositionX;\n    yPosition: DropdownPositionY;\n    overlapTrigger: boolean;\n    templateRef: TemplateRef<any>;\n    closed: EventEmitter<void | 'click' | 'keydown' | 'tab'>;\n    direction?: Direction;\n    lazyContent?: McDropdownContent;\n    backdropClass?: string;\n    hasBackdrop?: boolean;\n    focusFirstItem(origin?: FocusOrigin): void;\n    resetActiveItem(): void;\n    setPositionClasses?(x: DropdownPositionX, y: DropdownPositionY): void;\n    addItem?(item: T): void;\n    removeItem?(item: T): void;\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    Inject,\n    Optional\n} from '@angular/core';\nimport { IFocusableOption, FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\n\n\n// Boilerplate for applying mixins to McDropdownItem.\n/** @docs-private */\nexport class McDropdownItemBase {}\nexport const _McDropdownItemMixinBase: CanDisableCtor & typeof McDropdownItemBase =\n    mixinDisabled(McDropdownItemBase);\n\n/**\n * This directive is intended to be used inside an mc-dropdown tag.\n * It exists mostly to set the role attribute.\n */\n@Component({\n    selector: 'mc-dropdown-item, [mc-dropdown-item]',\n    exportAs: 'mcDropdownItem',\n    inputs: ['disabled'],\n    host: {\n        role: 'dropdown-item',\n        class: 'mc-dropdown__item',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_checkDisabled($event)'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    template: `<ng-content></ng-content>`\n})\nexport class McDropdownItem extends _McDropdownItemMixinBase\n    implements IFocusableOption, CanDisable, OnDestroy {\n\n    private _document: Document;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        @Inject(DOCUMENT) document: any,\n        private _focusMonitor: FocusMonitor,\n        @Inject(MC_DROPDOWN_PANEL) @Optional() private _parentDropdownPanel?: McDropdownPanel<McDropdownItem>) {\n        super();\n\n        if (_focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for dropdown items only when the focus was not caused by a\n            // mouse or touch interaction.\n            _focusMonitor.monitor(this._elementRef.nativeElement, false);\n        }\n\n        if (_parentDropdownPanel && _parentDropdownPanel.addItem) {\n            _parentDropdownPanel.addItem(this);\n        }\n\n        this._document = document;\n    }\n\n    /** Focuses the dropdown item. */\n    focus(origin: FocusOrigin = 'program'): void {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin);\n        } else {\n            this._getHostElement().focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n\n        if (this._parentDropdownPanel && this._parentDropdownPanel.removeItem) {\n            this._parentDropdownPanel.removeItem(this);\n        }\n    }\n\n    /** Used to set the `tabindex`. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Returns the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._elementRef.nativeElement;\n    }\n\n    /** Prevents the default element actions if it is disabled. */\n    _checkDisabled(event: Event): void {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        const element: HTMLElement = this._elementRef.nativeElement;\n        // tslint:disable-next-line:no-magic-numbers\n        const textNodeType = this._document ? this._document.TEXT_NODE : 3;\n        let output = '';\n\n        if (element.childNodes) {\n            const length = element.childNodes.length;\n\n            // Go through all the top-level text nodes and extract their text.\n            // We skip anything that's not a text node to prevent the text from\n            // being thrown off by something like an icon.\n            for (let i = 0; i < length; i++) {\n                if (element.childNodes[i].nodeType === textNodeType) {\n                    output += element.childNodes[i].textContent;\n                }\n            }\n        }\n\n        return output.trim();\n    }\n}\n","import {\n    trigger,\n    state,\n    style,\n    animate,\n    transition,\n    query,\n    group,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\n/**\n * Animations used by the mc-dropdown component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nexport const mcDropdownAnimations: {\n    readonly transformDropdown: AnimationTriggerMetadata;\n    readonly fadeInItems: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation controls the dropdown panel's entry and exit from the page.\n     *\n     * When the dropdown panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the dropdown panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformDropdown: trigger('transformDropdown', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        })),\n        transition('void => enter', group([\n            query('.mc-dropdown__content', animate('50ms linear', style({opacity: 1}))),\n            animate('50ms cubic-bezier(0, 0, 0.2, 1)', style({transform: 'scale(1)'}))\n        ])),\n        transition('* => void', animate('50ms 25ms linear', style({opacity: 0})))\n    ]),\n\n\n    /**\n     * This animation fades in the background color and content of the dropdown panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // now. Remove next time we do breaking changes.\n        state('showing', style({opacity: 1})),\n        transition('void => *', [\n            style({opacity: 0}),\n            animate('200ms 60ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\nexport const fadeInItems = mcDropdownAnimations.fadeInItems;\n\nexport const transformDropdown = mcDropdownAnimations.transformDropdown;\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER, McDropdownTrigger } from './dropdown-trigger';\nimport { McDropdown } from './dropdown.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule\n    ],\n    exports: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    declarations: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    providers: [MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER]\n})\nexport class McDropdownModule {}\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","throwMcDropdownMissingError","Error","throwMcDropdownInvalidPositionX","throwMcDropdownInvalidPositionY","MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY","overlapTrigger","xPosition","yPosition","backdropClass","MC_DROPDOWN_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","setPrototypeOf","__proto__","Array","p","hasOwnProperty","McDropdownContent","_template","_componentFactoryResolver","_appRef","_injector","_viewContainerRef","_document","_attached","Subject","attach","context","_portal","TemplatePortal","detach","_outlet","DomPortalOutlet","createElement","element","elementRef","nativeElement","parentNode","insertBefore","outletElement","next","isAttached","ngOnDestroy","dispose","tslib_1.__decorate","Directive","selector","tslib_1.__param","Inject","DOCUMENT","tslib_1.__metadata","TemplateRef","ComponentFactoryResolver","ApplicationRef","Injector","ViewContainerRef","MC_DROPDOWN_PANEL","InjectionToken","McDropdownItemBase","_McDropdownItemMixinBase","mixinDisabled","McDropdownItem","_super","_elementRef","document","_focusMonitor","_parentDropdownPanel","_this","call","monitor","addItem","tslib_1.__extends","focus","origin","focusVia","_getHostElement","stopMonitoring","removeItem","_getTabIndex","disabled","_checkDisabled","event","preventDefault","stopPropagation","getLabel","textNodeType","TEXT_NODE","output","childNodes","length_1","nodeType","textContent","trim","Component","exportAs","inputs","host","role","class","[attr.tabindex]","[attr.disabled]","(click)","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","template","Optional","ElementRef","FocusMonitor","mcDropdownAnimations","transformDropdown","trigger","state","style","opacity","transform","transition","group","query","animate","fadeInItems","MC_DROPDOWN_DEFAULT_OPTIONS","providedIn","factory","McDropdown","_ngZone","_defaultOptions","_classList","_panelAnimationState","_animationDone","closed","EventEmitter","_xPosition","_yPosition","_items","_itemChanges","_tabSubscription","Subscription","EMPTY","_overlapTrigger","_hasBackdrop","hasBackdrop","McDropdown_1","get","set","value","setPositionClasses","coerceBooleanProperty","classes","split","reduce","obj","className","ngOnInit","ngAfterContentInit","_keyManager","FocusKeyManager","items","withWrap","withTypeAhead","tabOut","subscribe","emit","unsubscribe","complete","_handleKeydown","keyCode","ESCAPE","UP_ARROW","DOWN_ARROW","setFocusOrigin","onKeydown","focusFirstItem","lazyContent","onStable","asObservable","pipe","take","setFirstItemActive","resetActiveItem","setActiveItem","item","indexOf","push","index","splice","posX","posY","_startAnimation","_resetAnimation","_onAnimationDone","_isAnimating","toState","activeItemIndex","scrollTop","Input","ViewChild","ContentChildren","QueryList","ContentChild","Output","styles","animations","providers","provide","useExisting","NgZone","MC_DROPDOWN_SCROLL_STRATEGY","MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","Overlay","useFactory","McDropdownTrigger","_overlay","_element","_scrollStrategy","_dir","_openedBy","dropdownOpened","dropdownClosed","_overlayRef","_opened","_closeSubscription","_hoverSubscription","dropdown","_check","_destroy","_cleanUpSubscriptions","toggle","close","open","overlayRef","_createOverlay","_setPosition","getConfig","positionStrategy","data","_closingActions","_init","opened","filter","takeUntil","undefined","_reset","direction","dir","_setIsOpened","isOpen","templateRef","config","_getOverlayConfig","_subscribeToPositions","keydownEvents","OverlayConfig","position","flexibleConnectedTo","withLockedPosition","withTransformOriginOn","scrollStrategy","positionChanges","_a","originX","originFallbackX","_b","overlayY","overlayFallbackY","_c","originY","originFallbackY","_d","overlayX","overlayFallbackX","withPositions","offsetY","backdrop","backdropClick","detachments","merge","(touchstart)","Directionality","McDropdownModule","NgModule","imports","CommonModule","OverlayModule","exports","declarations"],"mappings":"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"}