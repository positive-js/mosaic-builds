{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../../packages/mosaic/modal/modal-control.service.ts","../../../packages/mosaic/modal/modal-ref.class.ts","../../../packages/mosaic/modal/modal-util.ts","../../../packages/mosaic/modal/modal.component.ts","../../../packages/mosaic/modal/css-unit.pipe.ts","../../../packages/mosaic/modal/modal.directive.ts","../../../packages/mosaic/modal/modal.service.ts","../../../packages/mosaic/modal/modal.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","create","__values","o","s","Symbol","iterator","m","i","length","next","value","done","TypeError","McModalControlService","parentService","this","rootOpenModals","rootAfterAllClose","Subject","rootRegisteredMetaMap","Map","defineProperty","afterAllClose","openModals","registeredMetaMap","registerModal","modalRef","_this","hasRegistered","afterOpenSubscription","afterOpen","subscribe","push","afterCloseSubscription","afterClose","removeOpenModal","set","has","closeAll","close","index","indexOf","splice","Injectable","decorators","type","Optional","SkipSelf","ModalUtil","document","lastPosition","x","y","listenDocumentClick","getLastClickPosition","addEventListener","event","clientX","clientY","modalUtilObject","McModalComponent","overlay","renderer","cfr","elementRef","viewContainer","modalControl","changeDetector","_super","mcModalType","_mcVisible","mcVisibleChange","EventEmitter","mcZIndex","mcWidth","mcCloseByESC","_mcClosable","_mcMask","_mcMaskClosable","mcAfterOpen","mcAfterClose","mcOkType","_mcOkLoading","mcOnOk","_mcCancelLoading","mcOnCancel","transformOrigin","mcGetContainer","__","constructor","__extends","asObservable","mcOkText","mcCancelText","mcVisible","animationState","ngOnInit","isComponent","mcContent","createDynamicComponent","isModalButtons","mcFooter","formatModalButtons","mcComponent","container","HTMLElement","appendChild","nativeElement","OverlayRef","overlayElement","ngOnChanges","changes","handleVisibleStateChange","firstChange","ngAfterViewInit","contentComponentRef","bodyContainer","insert","hostView","_b","autoFocusedButtons","toArray","_c","autoFocusedButton","autofocus","focus","ngOnDestroy","dispose","open","changeVisibleFromInside","result","destroy","markForCheck","triggerOk","onClickOkCancel","triggerCancel","getInstance","getContentComponentRef","getContentComponent","instance","getElement","onClickMask","$event","mcMask","mcMaskClosable","classList","contains","isModalType","onKeyDown","keyCode","ESCAPE","preventDefault","onClickCloseBtn","trigger","ok","cancel","loadingKey","emit","caseClose_1","doClose","isPromise","handleThen","then","catch","isNonEmptyString","isTemplateRef","TemplateRef","Type","isArray","getButtonCallableProp","options","prop","args","apply","onButtonClick","button","loading","visible","animation","closeResult","changeBodyOverflow","Promise","resolve","animateTo","changeAnimationState","state","maskAnimationClassMap","_a","modalAnimationClassMap","changeDetectorRef","isVisible","window","setTimeout","updateTransformOrigin","buttons","map","assign","size","autoLoading","show","disabled","component","factory","resolveComponentFactory","childInjector","Injector","providers","provide","McModalRef","useValue","parent","injector","mcComponentParams","detectChanges","modalElement","modalContainer","offsetLeft","offsetTop","plusNum","setStyle","body","removeStyle","obj","Component","selector","template","encapsulation","ViewEncapsulation","None","host","(keydown)","Overlay","Renderer2","ComponentFactoryResolver","ElementRef","ViewContainerRef","ChangeDetectorRef","Inject","DOCUMENT","Input","Output","ViewChild","static","read","ViewChildren","CssUnitPipe","transform","defaultUnit","formatted","isNaN","Pipe","name","Directive","class","ModalBuilderForService","createModal","undefined","changeProps","destroyModal","overlayRef","keydownEvents","pipe","filter","attach","ComponentPortal","McModalService","confirm","confirmType","console","warn","mcClassName","success","simpleConfirm","delete","NgModule","imports","CommonModule","OverlayModule","A11yModule","McButtonModule","McIconModule","exports","McModalTitle","McModalBody","McModalFooter","declarations","entryComponents"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { McModalRef } from './modal-ref.class';\n\n\ninterface IRegisteredMeta {\n    modalRef: McModalRef;\n    afterOpenSubscription: Subscription;\n    afterCloseSubscription: Subscription;\n}\n\n@Injectable()\nexport class McModalControlService {\n\n    // Track singleton afterAllClose through over the injection tree\n    get afterAllClose(): Subject<void> {\n        return this.parentService ? this.parentService.afterAllClose : this.rootAfterAllClose;\n    }\n\n    // Track singleton openModals array through over the injection tree\n    get openModals(): McModalRef[] {\n        return this.parentService ? this.parentService.openModals : this.rootOpenModals;\n    }\n\n    // @ts-ignore\n    private rootOpenModals: McModalRef[] = this.parentService ? null : [];\n    // @ts-ignore\n    private rootAfterAllClose: Subject<void> = this.parentService ? null : new Subject<void>();\n    // @ts-ignore\n    private rootRegisteredMetaMap: Map<McModalRef, IRegisteredMeta> = this.parentService ? null : new Map();\n\n    // Registered modal for later usage\n    private get registeredMetaMap(): Map<McModalRef, IRegisteredMeta> {\n        return this.parentService ? this.parentService.registeredMetaMap : this.rootRegisteredMetaMap;\n    }\n\n    constructor(\n        @Optional() @SkipSelf() private parentService: McModalControlService) {\n    }\n\n    // Register a modal to listen its open/close\n    registerModal(modalRef: McModalRef): void {\n        if (!this.hasRegistered(modalRef)) {\n            const afterOpenSubscription = modalRef.afterOpen.subscribe(() => this.openModals.push(modalRef));\n            const afterCloseSubscription = modalRef.afterClose.subscribe(() => this.removeOpenModal(modalRef));\n\n            this.registeredMetaMap.set(modalRef, {modalRef, afterOpenSubscription, afterCloseSubscription});\n        }\n    }\n\n    hasRegistered(modalRef: McModalRef): boolean {\n        return this.registeredMetaMap.has(modalRef);\n    }\n\n    // Close all registered opened modals\n    closeAll(): void {\n        let i = this.openModals.length;\n\n        while (i--) {\n            this.openModals[i].close();\n        }\n    }\n\n    private removeOpenModal(modalRef: McModalRef): void {\n        const index = this.openModals.indexOf(modalRef);\n\n        if (index > -1) {\n            this.openModals.splice(index, 1);\n\n            if (!this.openModals.length) {\n                this.afterAllClose.next();\n            }\n        }\n    }\n}\n","import { Observable } from 'rxjs';\n\nimport { McModalComponent } from './modal.component';\n\n\n/**\n * API class that public to users to handle the modal instance.\n * McModalRef is aim to avoid accessing to the modal instance directly by users.\n */\n// tslint:disable-next-line:naming-convention\nexport abstract class McModalRef<T = any, R = any> {\n    abstract afterOpen: Observable<void>;\n    abstract afterClose: Observable<R>;\n\n    abstract open(): void;\n\n    abstract close(result?: R): void;\n\n    abstract destroy(result?: R): void;\n\n    /**\n     * Trigger the mcOnOk/mcOnCancel by manual\n     */\n    abstract triggerOk(): void;\n\n    abstract triggerCancel(): void;\n\n    // /**\n    //  * Return the ComponentRef of mcContent when specify mcContent as a Component\n    //  * Note: this method may return undefined if the Component has not ready yet.\n    //    (it only available after Modal's ngOnInit)\n    //  */\n    // abstract getContentComponentRef(): ComponentRef<{}>;\n\n    /**\n     * Return the component instance of mcContent when specify mcContent as a Component\n     * Note: this method may return undefined if the Component has not ready yet.\n     * (it only available after Modal's ngOnInit)\n     */\n    abstract getContentComponent(): T;\n\n    /**\n     * Get the dom element of this Modal\n     */\n    abstract getElement(): HTMLElement;\n\n    /**\n     * Get the instance of the Modal itself\n     */\n    abstract getInstance(): McModalComponent;\n\n    /**\n     * Call markForCheck for change detector\n     */\n    abstract markForCheck();\n}\n","export interface IClickPosition {\n    x: number;\n    y: number;\n}\n\nexport class ModalUtil {\n    private lastPosition: IClickPosition;\n\n    constructor(private document: Document) {\n        this.lastPosition = {x: -1, y: -1};\n        this.listenDocumentClick();\n    }\n\n    getLastClickPosition(): IClickPosition {\n        return this.lastPosition;\n    }\n\n    listenDocumentClick(): void {\n        this.document.addEventListener('click', (event: MouseEvent) => {\n            this.lastPosition = {x: event.clientX, y: event.clientY};\n        });\n    }\n}\n\nexport const modalUtilObject = new ModalUtil(document);\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { DOCUMENT } from '@angular/common';\nimport {\n    AfterViewInit, ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    Renderer2,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewChildren,\n    ViewContainerRef, ViewEncapsulation\n} from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Observable } from 'rxjs';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\nimport { modalUtilObject as ModalUtil } from './modal-util';\nimport { IModalButtonOptions, IModalOptions, ModalType, OnClickCallback } from './modal.type';\n\n\n// Duration when perform animations (ms)\nexport const MODAL_ANIMATE_DURATION = 200;\n\ntype AnimationState = 'enter' | 'leave' | null;\n\n@Component({\n    selector: 'mc-modal',\n    templateUrl: './modal.component.html',\n    styleUrls: ['./modal.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McModalComponent<T = any, R = any> extends McModalRef<T, R>\n    implements OnInit, OnChanges, AfterViewInit, OnDestroy, IModalOptions {\n\n    @Input() mcModalType: ModalType = 'default';\n\n    // The instance of component opened into the dialog.\n    @Input() mcComponent: Type<T>;\n    // If not specified, will use <ng-content>\n    @Input() mcContent: string | TemplateRef<{}> | Type<T>;\n    // available when mcContent is a component\n    @Input() mcComponentParams: T;\n    // Default Modal ONLY\n    @Input() mcFooter: string | TemplateRef<{}> | IModalButtonOptions<T>[];\n\n    @Input()\n    get mcVisible() { return this._mcVisible; }\n    set mcVisible(value) { this._mcVisible = value; }\n\n    private _mcVisible = false;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n\n    @Input() mcZIndex: number = 1000;\n    @Input() mcWidth: number | string = 480;\n    @Input() mcWrapClassName: string;\n    @Input() mcClassName: string;\n    @Input() mcStyle: object;\n    @Input() mcTitle: string | TemplateRef<{}>;\n    @Input() mcCloseByESC: boolean = true;\n\n    @Input()\n    get mcClosable() { return this._mcClosable; }\n    set mcClosable(value) { this._mcClosable = value; }\n    private _mcClosable = true;\n\n    @Input()\n    get mcMask() { return this._mcMask; }\n    set mcMask(value) { this._mcMask = value; }\n    private _mcMask = true;\n\n    @Input()\n    get mcMaskClosable() { return this._mcMaskClosable; }\n    set mcMaskClosable(value) { this._mcMaskClosable = value; }\n    private _mcMaskClosable = false;\n\n    @Input() mcMaskStyle: object;\n    @Input() mcBodyStyle: object;\n\n    // Trigger when modal open(visible) after animations\n    @Output() mcAfterOpen = new EventEmitter<void>();\n    // Trigger when modal leave-animation over\n    @Output() mcAfterClose = new EventEmitter<R>();\n\n    // --- Predefined OK & Cancel buttons\n    @Input() mcOkText: string;\n    @Input() mcOkType = 'primary';\n\n    @Input()\n    get mcOkLoading() { return this._mcOkLoading; }\n    set mcOkLoading(value) { this._mcOkLoading = value; }\n    private _mcOkLoading = false;\n\n    @Input() @Output() mcOnOk: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    @Input() mcCancelText: string;\n\n    @Input()\n    get mcCancelLoading() { return this._mcCancelLoading; }\n    set mcCancelLoading(value) { this._mcCancelLoading = value; }\n    private _mcCancelLoading = false;\n\n    @Input() @Output() mcOnCancel: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n\n    @ViewChild('modalContainer', { static: true }) modalContainer: ElementRef;\n    @ViewChild('bodyContainer', { read: ViewContainerRef, static: false }) bodyContainer: ViewContainerRef;\n    // Only aim to focus the ok button that needs to be auto focused\n    @ViewChildren('autoFocusedButton', { read: ElementRef }) autoFocusedButtons: QueryList<ElementRef>;\n\n    maskAnimationClassMap: object;\n    modalAnimationClassMap: object;\n    // The origin point that animation based on\n    transformOrigin = '0px 0px 0px';\n\n    // Observable alias for mcAfterOpen\n    get afterOpen(): Observable<void> {\n        return this.mcAfterOpen.asObservable();\n    }\n\n    // Observable alias for mcAfterClose\n    get afterClose(): Observable<R> {\n        return this.mcAfterClose.asObservable();\n    }\n\n    get okText(): string {\n        return this.mcOkText;\n    }\n\n    get cancelText(): string {\n        return this.mcCancelText;\n    }\n\n    // Indicate whether this dialog should hidden\n    get hidden(): boolean {\n        return !this.mcVisible && !this.animationState;\n    }\n\n    // Handle the reference when using mcContent as Component\n    private contentComponentRef: ComponentRef<T>;\n    // Current animation state\n    private animationState: AnimationState;\n    private container: HTMLElement | OverlayRef;\n\n    constructor(\n        private overlay: Overlay,\n        private renderer: Renderer2,\n        private cfr: ComponentFactoryResolver,\n        private elementRef: ElementRef,\n        private viewContainer: ViewContainerRef,\n        private modalControl: McModalControlService,\n        private changeDetector: ChangeDetectorRef,\n        @Inject(DOCUMENT) private document: any\n    ) {\n        super();\n    }\n\n    @Input() mcGetContainer: HTMLElement | OverlayRef | (() => HTMLElement | OverlayRef) = () => this.overlay.create();\n\n    ngOnInit() {\n\n        // Create component along without View\n        if (this.isComponent(this.mcContent)) {\n            this.createDynamicComponent(this.mcContent as Type<T>);\n        }\n\n        // Setup default button options\n        if (this.isModalButtons(this.mcFooter)) {\n            this.mcFooter = this.formatModalButtons(this.mcFooter as IModalButtonOptions<T>[]);\n        }\n\n        if (this.isComponent(this.mcComponent)) {\n            this.createDynamicComponent(this.mcComponent);\n        }\n\n        // Place the modal dom to elsewhere\n        this.container = typeof this.mcGetContainer === 'function' ? this.mcGetContainer() : this.mcGetContainer;\n        if (this.container instanceof HTMLElement) {\n            this.container.appendChild(this.elementRef.nativeElement);\n        } else if (this.container instanceof OverlayRef) {\n            // NOTE: only attach the dom to overlay, the view container is not changed actually\n            this.container.overlayElement.appendChild(this.elementRef.nativeElement);\n        }\n\n        // Register modal when afterOpen/afterClose is stable\n        this.modalControl.registerModal(this);\n    }\n\n    // [NOTE] NOT available when using by service!\n    // Because ngOnChanges never be called when using by service,\n    // here we can't support \"mcContent\"(Component) etc. as inputs that initialized dynamically.\n    // BUT: User also can change \"mcContent\" dynamically to trigger UI changes\n    // (provided you don't use \bComponent that needs initializations)\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.mcVisible) {\n            // Do not trigger animation while initializing\n            this.handleVisibleStateChange(this.mcVisible, !changes.mcVisible.firstChange);\n        }\n    }\n\n    ngAfterViewInit() {\n        // If using Component, it is the time to attach View while bodyContainer is ready\n        if (this.contentComponentRef) {\n            this.bodyContainer.insert(this.contentComponentRef.hostView);\n        }\n\n        for (const autoFocusedButton of this.autoFocusedButtons.toArray()) {\n            if (autoFocusedButton.nativeElement.autofocus) {\n                (autoFocusedButton.nativeElement as HTMLButtonElement).focus();\n\n                break;\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.container instanceof OverlayRef) {\n            this.container.dispose();\n        }\n    }\n\n    open() {\n        this.changeVisibleFromInside(true);\n    }\n\n    close(result?: R) {\n        this.changeVisibleFromInside(false, result);\n    }\n\n    // Destroy equals Close\n    destroy(result?: R) {\n        this.close(result);\n    }\n\n    markForCheck() {\n        this.changeDetector.markForCheck();\n    }\n\n    triggerOk() {\n        this.onClickOkCancel('ok');\n    }\n\n    triggerCancel() {\n        this.onClickOkCancel('cancel');\n    }\n\n    getInstance(): McModalComponent {\n        return this;\n    }\n\n    getContentComponentRef(): ComponentRef<T> {\n        return this.contentComponentRef;\n    }\n\n    getContentComponent(): T {\n        return this.contentComponentRef && this.contentComponentRef.instance;\n    }\n\n    getElement(): HTMLElement {\n        return this.elementRef && this.elementRef.nativeElement;\n    }\n\n    onClickMask($event: MouseEvent) {\n        if (\n            this.mcMask &&\n            this.mcMaskClosable &&\n            ($event.target as HTMLElement).classList.contains('mc-modal-wrap') &&\n            this.mcVisible\n        ) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // tslint:disable-next-line: no-reserved-keywords\n    isModalType(type: ModalType): boolean {\n        return this.mcModalType === type;\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        // tslint:disable-next-line:deprecation .key isn't supported in Edge\n        if (event.keyCode === ESCAPE && this.container && (this.container instanceof OverlayRef)) {\n\n            this.close();\n            event.preventDefault();\n        }\n    }\n\n    // AoT\n    onClickCloseBtn() {\n        if (this.mcVisible) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // AoT\n    // tslint:disable-next-line: no-reserved-keywords\n    onClickOkCancel(type: 'ok' | 'cancel') {\n        const trigger = { ok: this.mcOnOk, cancel: this.mcOnCancel }[type];\n        const loadingKey = { ok: 'mcOkLoading', cancel: 'mcCancelLoading' }[type];\n\n        if (trigger instanceof EventEmitter) {\n            trigger.emit(this.getContentComponent());\n        } else if (typeof trigger === 'function') {\n\n            const result = trigger(this.getContentComponent());\n            // Users can return \"false\" to prevent closing by default\n            const caseClose = (doClose: boolean | void | {}) => (doClose !== false) && this.close(doClose as R);\n\n            if (isPromise(result)) {\n                this[loadingKey] = true;\n                const handleThen = (doClose) => {\n                    this[loadingKey] = false;\n                    caseClose(doClose);\n                };\n                (result as Promise<void>).then(handleThen).catch(handleThen);\n            } else {\n                caseClose(result);\n            }\n        }\n    }\n\n    // AoT\n    isNonEmptyString(value: {}): boolean {\n        return typeof value === 'string' && value !== '';\n    }\n\n    // AoT\n    isTemplateRef(value: {}): boolean {\n        return value instanceof TemplateRef;\n    }\n\n    // AoT\n    isComponent(value: {}): boolean {\n        return value instanceof Type;\n    }\n\n    // AoT\n    isModalButtons(value: {}): boolean {\n        return Array.isArray(value) && value.length > 0;\n    }\n\n    // Lookup a button's property, if the prop is a function, call & then return the result, otherwise, return itself.\n    // AoT\n    getButtonCallableProp(options: IModalButtonOptions<T>, prop: string): {} {\n        const value = options[prop];\n        const args: any[] = [];\n        if (this.contentComponentRef) {\n            args.push(this.contentComponentRef.instance);\n        }\n\n        return typeof value === 'function' ? value.apply(options, args) : value;\n    }\n\n    // On mcFooter's modal button click\n    // AoT\n    onButtonClick(button: IModalButtonOptions<T>) {\n        // Call onClick directly\n        // tslint:disable-next-line:no-inferred-empty-object-type  rule seems to be broken\n        const result = this.getButtonCallableProp(button, 'onClick');\n        if (isPromise(result)) {\n            button.loading = true;\n            (result as Promise<{}>).then(() => button.loading = false).catch(() => button.loading = false);\n        }\n    }\n\n    // Do rest things when visible state changed\n    private handleVisibleStateChange(visible: boolean, animation: boolean = true, closeResult?: R): Promise<any> {\n        // Hide scrollbar at the first time when shown up\n        if (visible) {\n            this.changeBodyOverflow(1);\n        }\n\n        return Promise\n            .resolve(animation && this.animateTo(visible))\n            // Emit open/close event after animations over\n            .then(() => {\n                if (visible) {\n                    this.mcAfterOpen.emit();\n                } else {\n                    this.mcAfterClose.emit(closeResult);\n                    // Show/hide scrollbar when animation is over\n                    this.changeBodyOverflow();\n                }\n            });\n    }\n\n    // Change mcVisible from inside\n    private changeVisibleFromInside(visible: boolean, closeResult?: R): Promise<void> {\n        if (this.mcVisible !== visible) {\n            // Change mcVisible value immediately\n            this.mcVisible = visible;\n            this.mcVisibleChange.emit(visible);\n\n            return this.handleVisibleStateChange(visible, true, closeResult);\n        }\n\n        return Promise.resolve();\n    }\n\n    private changeAnimationState(state: AnimationState) {\n        this.animationState = state;\n        if (state) {\n            this.maskAnimationClassMap = {\n                [`fade-${state}`]: true,\n                [`fade-${state}-active`]: true\n            };\n            this.modalAnimationClassMap = {\n                [`zoom-${state}`]: true,\n                [`zoom-${state}-active`]: true\n            };\n        } else {\n            // @ts-ignore\n            this.maskAnimationClassMap = this.modalAnimationClassMap = null;\n        }\n\n        if (this.contentComponentRef) {\n            this.contentComponentRef.changeDetectorRef.markForCheck();\n        } else {\n            this.changeDetector.markForCheck();\n        }\n    }\n\n    private animateTo(isVisible: boolean): Promise<any> {\n        // Figure out the lastest click position when shows up\n        if (isVisible) {\n            // [NOTE] Using timeout due to the document.click event is fired later than visible change,\n            // so if not postponed to next event-loop, we can't get the lastest click position\n            window.setTimeout(() => this.updateTransformOrigin());\n        }\n\n        this.changeAnimationState(isVisible ? 'enter' : 'leave');\n\n        // Return when animation is over\n        return new Promise((resolve) => window.setTimeout(() => {\n            this.changeAnimationState(null);\n            resolve();\n        }, MODAL_ANIMATE_DURATION));\n    }\n\n    private formatModalButtons(buttons: IModalButtonOptions<T>[]): IModalButtonOptions<T>[] {\n        return buttons.map((button) => {\n\n            return {\n                ...{\n                    type: 'default',\n                    size: 'default',\n                    autoLoading: true,\n                    show: true,\n                    loading: false,\n                    disabled: false\n                },\n                ...button\n            };\n        });\n    }\n\n    /**\n     * Create a component dynamically but not attach to any View\n     * (this action will be executed when bodyContainer is ready)\n     * @param component Component class\n     */\n    private createDynamicComponent(component: Type<T>) {\n        const factory = this.cfr.resolveComponentFactory(component);\n        const childInjector = Injector.create({\n            providers: [{provide: McModalRef, useValue: this}],\n            parent: this.viewContainer.injector\n        });\n\n        this.contentComponentRef = factory.create(childInjector);\n\n        if (this.mcComponentParams) {\n            Object.assign(this.contentComponentRef.instance, this.mcComponentParams);\n        }\n\n        // Do the first change detection immediately\n        // (or we do detection at ngAfterViewInit, multi-changes error will be thrown)\n        this.contentComponentRef.changeDetectorRef.detectChanges();\n    }\n\n    // Update transform-origin to the last click position on document\n    private updateTransformOrigin() {\n        const modalElement = this.modalContainer.nativeElement as HTMLElement;\n        const lastPosition = ModalUtil.getLastClickPosition();\n\n        if (lastPosition) {\n            this.transformOrigin = `${lastPosition.x - modalElement.offsetLeft}px ${lastPosition.y - modalElement.offsetTop}px 0px`;\n        }\n    }\n\n    /**\n     * Take care of the body's overflow to decide the existense of scrollbar\n     * @param plusNum The number that the openModals.length will increase soon\n     */\n    private changeBodyOverflow(plusNum: number = 0) {\n        const openModals = this.modalControl.openModals;\n\n        if (openModals.length + plusNum > 0) {\n            this.renderer.setStyle(this.document.body, 'overflow', 'hidden');\n        } else {\n            this.renderer.removeStyle(this.document.body, 'overflow');\n        }\n    }\n}\n\n////////////\n\nfunction isPromise(obj: {} | void): boolean {\n    // tslint:disable-next-line: no-unbound-method\n    return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof (obj as Promise<{}>).then === 'function' && typeof (obj as Promise<{}>).catch === 'function';\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({\n    name: 'toCssUnit'\n})\nexport class CssUnitPipe implements PipeTransform {\n    transform(value: number | string, defaultUnit: string = 'px'): string {\n        const formatted = +value;\n\n        return isNaN(formatted) ? `${value}` : `${formatted}${defaultUnit}`;\n    }\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: `[mc-modal-title], mc-modal-title, [mcModalTitle]`,\n    host: {\n        class: 'mc-modal-header mc-modal-title'\n    }\n})\nexport class McModalTitle {}\n\n@Directive({\n    selector: `[mc-modal-body], mc-modal-body, [mcModalBody]`,\n    host: {\n        class: 'mc-modal-body'\n    }\n})\nexport class McModalBody {}\n\n@Directive({\n    selector: `[mc-modal-footer], mc-modal-footer, [mcModalFooter]`,\n    host: {\n        class: 'mc-modal-footer'\n    }\n})\nexport class McModalFooter {}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ComponentRef, Injectable } from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\nimport { McModalComponent } from './modal.component';\nimport { ConfirmType, IModalOptions, IModalOptionsForService } from './modal.type';\n\n\n// A builder used for managing service creating modals\nexport class ModalBuilderForService {\n\n    // Modal ComponentRef, \"null\" means it has been destroyed\n    private modalRef: ComponentRef<McModalComponent> | null;\n    private overlayRef: OverlayRef;\n\n    constructor(private overlay: Overlay, options: IModalOptionsForService = {}) {\n        this.createModal();\n\n        if (!('mcGetContainer' in options)) {\n            options.mcGetContainer = undefined;\n        }\n\n        this.changeProps(options);\n        this.modalRef!.instance.open();\n        this.modalRef!.instance.mcAfterClose.subscribe(() => this.destroyModal());\n\n        this.overlayRef.keydownEvents()\n            // @ts-ignore\n            .pipe(filter((event: KeyboardEvent) => {\n                // tslint:disable-next-line:deprecation replacement .key isn't supported in Edge\n                return event.keyCode === ESCAPE && options.mcCloseByESC;\n            }))\n            .subscribe(() => this.modalRef!.instance.close());\n    }\n\n    getInstance(): McModalComponent | null {\n        return this.modalRef && this.modalRef.instance;\n    }\n\n    destroyModal(): void {\n        if (this.modalRef) {\n            this.overlayRef.dispose();\n            this.modalRef = null;\n        }\n    }\n\n    private changeProps(options: IModalOptions): void {\n        if (this.modalRef) {\n            // here not limit user's inputs at runtime\n            Object.assign(this.modalRef.instance, options);\n        }\n    }\n\n    // Create component to ApplicationRef\n    private createModal(): void {\n        this.overlayRef = this.overlay.create();\n        this.modalRef = this.overlayRef.attach(new ComponentPortal(McModalComponent));\n    }\n}\n\n@Injectable()\nexport class McModalService {\n    // Track of the current close modals (we assume invisible is close this time)\n    get openModals(): McModalRef[] {\n        return this.modalControl.openModals;\n    }\n\n    get afterAllClose(): Observable<void> {\n        return this.modalControl.afterAllClose.asObservable();\n    }\n\n    constructor(\n        private overlay: Overlay,\n        private modalControl: McModalControlService) {\n    }\n\n    // Closes all of the currently-open dialogs\n    closeAll(): void {\n        this.modalControl.closeAll();\n    }\n\n    create<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n\n        if (typeof options.mcOnCancel !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnCancel = () => {};\n        }\n\n        if (!('mcCloseByESC' in options)) {\n            options.mcCloseByESC = true;\n        }\n\n\n        if (!('mcWidth' in options)) {\n            // tslint:disable-next-line\n            options.mcWidth = 480;\n        }\n\n        return new ModalBuilderForService(this.overlay, options).getInstance()!;\n    }\n\n    confirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType = 'confirm'): McModalRef<T> {\n        if ('mcFooter' in options) {\n            console.warn(`The Confirm-Modal doesn't support \"mcFooter\", this property will be ignored.`);\n        }\n\n        // NOTE: only support function currently by calling confirm()\n        if (typeof options.mcOnOk !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnOk = () => {};\n        }\n\n        options.mcModalType = 'confirm';\n        options.mcClassName = `mc-confirm mc-confirm-${confirmType} ${options.mcClassName || ''}`;\n\n        return this.create(options);\n    }\n\n    open<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n\n        options.mcModalType = 'custom';\n\n        return this.create(options);\n    }\n\n    success<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'success');\n    }\n\n    // tslint:disable-next-line: no-reserved-keywords\n    delete<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'warn');\n    }\n\n    private simpleConfirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType): McModalRef<T> {\n        // Remove the Cancel button if the user not specify a Cancel button\n        if (!('mcCancelText' in options)) {\n            // @ts-ignore\n            options.mcCancelText = null;\n        }\n\n        return this.confirm(options, confirmType);\n    }\n}\n","import { A11yModule } from '@angular/cdk/a11y';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { CssUnitPipe } from './css-unit.pipe';\nimport { McModalControlService } from './modal-control.service';\nimport { McModalComponent } from './modal.component';\nimport { McModalBody, McModalFooter, McModalTitle } from './modal.directive';\nimport { McModalService } from './modal.service';\n\n\n@NgModule({\n    imports: [CommonModule, OverlayModule, A11yModule, McButtonModule, McIconModule],\n    exports: [\n        McModalComponent,\n        McModalTitle,\n        McModalBody,\n        McModalFooter\n    ],\n    declarations: [\n        McModalComponent,\n        McModalTitle,\n        McModalBody,\n        McModalFooter,\n        CssUnitPipe\n    ],\n    entryComponents: [McModalComponent],\n    providers: [McModalControlService, McModalService]\n})\nexport class McModalModule {}\n"]}