{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@ptsecurity/mosaic/modal/modal-control.service.ts","ng://@ptsecurity/mosaic/modal/modal-ref.class.ts","ng://@ptsecurity/mosaic/modal/modal-util.ts","ng://@ptsecurity/mosaic/modal/modal.component.ts","ng://@ptsecurity/mosaic/modal/css-unit.pipe.ts","ng://@ptsecurity/mosaic/modal/modal.directive.ts","ng://@ptsecurity/mosaic/modal/modal.service.ts","ng://@ptsecurity/mosaic/modal/modal.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__assign","assign","t","s","i","n","arguments","length","prototype","call","apply","this","__values","o","Symbol","iterator","m","next","value","done","TypeError","McModalControlService","parentService","rootOpenModals","rootAfterAllClose","Subject","rootRegisteredMetaMap","Map","defineProperty","afterAllClose","openModals","registeredMetaMap","registerModal","modalRef","_this","hasRegistered","afterOpenSubscription","afterOpen","subscribe","push","afterCloseSubscription","afterClose","removeOpenModal","set","has","closeAll","close","index","indexOf","splice","Injectable","decorators","type","Optional","SkipSelf","ModalUtil","document","lastPosition","x","y","listenDocumentClick","getLastClickPosition","addEventListener","event","clientX","clientY","modalUtilObject","McModalComponent","overlay","renderer","cfr","elementRef","viewContainer","modalControl","changeDetector","_super","mcModalType","_mcVisible","mcVisibleChange","EventEmitter","mcZIndex","mcWidth","mcCloseByESC","_mcClosable","_mcMask","_mcMaskClosable","mcAfterOpen","mcAfterClose","mcOkType","_mcOkLoading","mcOnOk","_mcCancelLoading","mcOnCancel","transformOrigin","mcGetContainer","create","__","constructor","__extends","asObservable","mcOkText","mcCancelText","mcVisible","animationState","ngOnInit","isComponent","mcContent","createDynamicComponent","isModalButtons","mcFooter","formatModalButtons","mcComponent","container","HTMLElement","appendChild","nativeElement","OverlayRef","overlayElement","ngOnChanges","changes","handleVisibleStateChange","firstChange","ngAfterViewInit","contentComponentRef","bodyContainer","insert","hostView","_b","autoFocusedButtons","toArray","_c","autoFocusedButton","autofocus","focus","ngOnDestroy","dispose","open","changeVisibleFromInside","result","destroy","markForCheck","triggerOk","onClickOkCancel","triggerCancel","getInstance","getContentComponentRef","getContentComponent","instance","getElement","onClickMask","$event","mcMask","mcMaskClosable","classList","contains","isModalType","onKeyDown","keyCode","ESCAPE","preventDefault","onClickCloseBtn","trigger","ok","cancel","loadingKey","emit","caseClose_1","doClose","isPromise","handleThen","then","catch","isNonEmptyString","isTemplateRef","TemplateRef","Type","isArray","getButtonCallableProp","options","prop","args","onButtonClick","button","loading","visible","animation","closeResult","changeBodyOverflow","Promise","resolve","animateTo","changeAnimationState","state","maskAnimationClassMap","_a","modalAnimationClassMap","changeDetectorRef","isVisible","window","setTimeout","updateTransformOrigin","buttons","map","size","autoLoading","show","disabled","component","factory","resolveComponentFactory","childInjector","Injector","providers","provide","McModalRef","useValue","parent","injector","mcComponentParams","detectChanges","modalElement","modalContainer","offsetLeft","offsetTop","plusNum","setStyle","body","removeStyle","Component","selector","template","encapsulation","ViewEncapsulation","None","host","(keydown)","Overlay","Renderer2","ComponentFactoryResolver","ElementRef","ViewContainerRef","ChangeDetectorRef","Inject","DOCUMENT","Input","Output","ViewChild","static","read","ViewChildren","obj","CssUnitPipe","transform","defaultUnit","formatted","isNaN","Pipe","name","McModalTitle","Directive","class","McModalBody","McModalFooter","ModalBuilderForService","createModal","undefined","changeProps","destroyModal","overlayRef","keydownEvents","pipe","filter","attach","ComponentPortal","McModalService","confirm","confirmType","console","warn","mcClassName","success","simpleConfirm","delete","McModalModule","NgModule","imports","CommonModule","OverlayModule","A11yModule","McButtonModule","McIconModule","exports","declarations","entryComponents"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { McModalRef } from './modal-ref.class';\n\n\ninterface IRegisteredMeta {\n    modalRef: McModalRef;\n    afterOpenSubscription: Subscription;\n    afterCloseSubscription: Subscription;\n}\n\n@Injectable()\nexport class McModalControlService {\n\n    // Track singleton afterAllClose through over the injection tree\n    get afterAllClose(): Subject<void> {\n        return this.parentService ? this.parentService.afterAllClose : this.rootAfterAllClose;\n    }\n\n    // Track singleton openModals array through over the injection tree\n    get openModals(): McModalRef[] {\n        return this.parentService ? this.parentService.openModals : this.rootOpenModals;\n    }\n\n    // @ts-ignore\n    private rootOpenModals: McModalRef[] = this.parentService ? null : [];\n    // @ts-ignore\n    private rootAfterAllClose: Subject<void> = this.parentService ? null : new Subject<void>();\n    // @ts-ignore\n    private rootRegisteredMetaMap: Map<McModalRef, IRegisteredMeta> = this.parentService ? null : new Map();\n\n    // Registered modal for later usage\n    private get registeredMetaMap(): Map<McModalRef, IRegisteredMeta> {\n        return this.parentService ? this.parentService.registeredMetaMap : this.rootRegisteredMetaMap;\n    }\n\n    constructor(\n        @Optional() @SkipSelf() private parentService: McModalControlService) {\n    }\n\n    // Register a modal to listen its open/close\n    registerModal(modalRef: McModalRef): void {\n        if (!this.hasRegistered(modalRef)) {\n            const afterOpenSubscription = modalRef.afterOpen.subscribe(() => this.openModals.push(modalRef));\n            const afterCloseSubscription = modalRef.afterClose.subscribe(() => this.removeOpenModal(modalRef));\n\n            this.registeredMetaMap.set(modalRef, {modalRef, afterOpenSubscription, afterCloseSubscription});\n        }\n    }\n\n    hasRegistered(modalRef: McModalRef): boolean {\n        return this.registeredMetaMap.has(modalRef);\n    }\n\n    // Close all registered opened modals\n    closeAll(): void {\n        let i = this.openModals.length;\n\n        while (i--) {\n            this.openModals[i].close();\n        }\n    }\n\n    private removeOpenModal(modalRef: McModalRef): void {\n        const index = this.openModals.indexOf(modalRef);\n\n        if (index > -1) {\n            this.openModals.splice(index, 1);\n\n            if (!this.openModals.length) {\n                this.afterAllClose.next();\n            }\n        }\n    }\n}\n","import { Observable } from 'rxjs';\n\nimport { McModalComponent } from './modal.component';\n\n\n/**\n * API class that public to users to handle the modal instance.\n * McModalRef is aim to avoid accessing to the modal instance directly by users.\n */\n// tslint:disable-next-line:naming-convention\nexport abstract class McModalRef<T = any, R = any> {\n    abstract afterOpen: Observable<void>;\n    abstract afterClose: Observable<R>;\n\n    abstract open(): void;\n\n    abstract close(result?: R): void;\n\n    abstract destroy(result?: R): void;\n\n    /**\n     * Trigger the mcOnOk/mcOnCancel by manual\n     */\n    abstract triggerOk(): void;\n\n    abstract triggerCancel(): void;\n\n    // /**\n    //  * Return the ComponentRef of mcContent when specify mcContent as a Component\n    //  * Note: this method may return undefined if the Component has not ready yet.\n    //    (it only available after Modal's ngOnInit)\n    //  */\n    // abstract getContentComponentRef(): ComponentRef<{}>;\n\n    /**\n     * Return the component instance of mcContent when specify mcContent as a Component\n     * Note: this method may return undefined if the Component has not ready yet.\n     * (it only available after Modal's ngOnInit)\n     */\n    abstract getContentComponent(): T;\n\n    /**\n     * Get the dom element of this Modal\n     */\n    abstract getElement(): HTMLElement;\n\n    /**\n     * Get the instance of the Modal itself\n     */\n    abstract getInstance(): McModalComponent;\n\n    /**\n     * Call markForCheck for change detector\n     */\n    abstract markForCheck();\n}\n","export interface IClickPosition {\n    x: number;\n    y: number;\n}\n\nexport class ModalUtil {\n    private lastPosition: IClickPosition;\n\n    constructor(private document: Document) {\n        this.lastPosition = {x: -1, y: -1};\n        this.listenDocumentClick();\n    }\n\n    getLastClickPosition(): IClickPosition {\n        return this.lastPosition;\n    }\n\n    listenDocumentClick(): void {\n        this.document.addEventListener('click', (event: MouseEvent) => {\n            this.lastPosition = {x: event.clientX, y: event.clientY};\n        });\n    }\n}\n\nexport const modalUtilObject = new ModalUtil(document);\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { DOCUMENT } from '@angular/common';\nimport {\n    AfterViewInit, ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    Renderer2,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewChildren,\n    ViewContainerRef, ViewEncapsulation\n} from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Observable } from 'rxjs';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\nimport { modalUtilObject as ModalUtil } from './modal-util';\nimport { IModalButtonOptions, IModalOptions, ModalType, OnClickCallback } from './modal.type';\n\n\n// Duration when perform animations (ms)\nexport const MODAL_ANIMATE_DURATION = 200;\n\ntype AnimationState = 'enter' | 'leave' | null;\n\n@Component({\n    selector: 'mc-modal',\n    templateUrl: './modal.component.html',\n    styleUrls: ['./modal.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McModalComponent<T = any, R = any> extends McModalRef<T, R>\n    implements OnInit, OnChanges, AfterViewInit, OnDestroy, IModalOptions {\n\n    @Input() mcModalType: ModalType = 'default';\n\n    // The instance of component opened into the dialog.\n    @Input() mcComponent: Type<T>;\n    // If not specified, will use <ng-content>\n    @Input() mcContent: string | TemplateRef<{}> | Type<T>;\n    // available when mcContent is a component\n    @Input() mcComponentParams: T;\n    // Default Modal ONLY\n    @Input() mcFooter: string | TemplateRef<{}> | IModalButtonOptions<T>[];\n\n    @Input()\n    get mcVisible() { return this._mcVisible; }\n    set mcVisible(value) { this._mcVisible = value; }\n\n    private _mcVisible = false;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n\n    @Input() mcZIndex: number = 1000;\n    @Input() mcWidth: number | string = 480;\n    @Input() mcWrapClassName: string;\n    @Input() mcClassName: string;\n    @Input() mcStyle: object;\n    @Input() mcTitle: string | TemplateRef<{}>;\n    @Input() mcCloseByESC: boolean = true;\n\n    @Input()\n    get mcClosable() { return this._mcClosable; }\n    set mcClosable(value) { this._mcClosable = value; }\n    private _mcClosable = true;\n\n    @Input()\n    get mcMask() { return this._mcMask; }\n    set mcMask(value) { this._mcMask = value; }\n    private _mcMask = true;\n\n    @Input()\n    get mcMaskClosable() { return this._mcMaskClosable; }\n    set mcMaskClosable(value) { this._mcMaskClosable = value; }\n    private _mcMaskClosable = false;\n\n    @Input() mcMaskStyle: object;\n    @Input() mcBodyStyle: object;\n\n    // Trigger when modal open(visible) after animations\n    @Output() mcAfterOpen = new EventEmitter<void>();\n    // Trigger when modal leave-animation over\n    @Output() mcAfterClose = new EventEmitter<R>();\n\n    // --- Predefined OK & Cancel buttons\n    @Input() mcOkText: string;\n    @Input() mcOkType = 'primary';\n\n    @Input()\n    get mcOkLoading() { return this._mcOkLoading; }\n    set mcOkLoading(value) { this._mcOkLoading = value; }\n    private _mcOkLoading = false;\n\n    @Input() @Output() mcOnOk: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    @Input() mcCancelText: string;\n\n    @Input()\n    get mcCancelLoading() { return this._mcCancelLoading; }\n    set mcCancelLoading(value) { this._mcCancelLoading = value; }\n    private _mcCancelLoading = false;\n\n    @Input() @Output() mcOnCancel: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n\n    @ViewChild('modalContainer', { static: true }) modalContainer: ElementRef;\n    @ViewChild('bodyContainer', { read: ViewContainerRef, static: false }) bodyContainer: ViewContainerRef;\n    // Only aim to focus the ok button that needs to be auto focused\n    @ViewChildren('autoFocusedButton', { read: ElementRef }) autoFocusedButtons: QueryList<ElementRef>;\n\n    maskAnimationClassMap: object;\n    modalAnimationClassMap: object;\n    // The origin point that animation based on\n    transformOrigin = '0px 0px 0px';\n\n    // Observable alias for mcAfterOpen\n    get afterOpen(): Observable<void> {\n        return this.mcAfterOpen.asObservable();\n    }\n\n    // Observable alias for mcAfterClose\n    get afterClose(): Observable<R> {\n        return this.mcAfterClose.asObservable();\n    }\n\n    get okText(): string {\n        return this.mcOkText;\n    }\n\n    get cancelText(): string {\n        return this.mcCancelText;\n    }\n\n    // Indicate whether this dialog should hidden\n    get hidden(): boolean {\n        return !this.mcVisible && !this.animationState;\n    }\n\n    // Handle the reference when using mcContent as Component\n    private contentComponentRef: ComponentRef<T>;\n    // Current animation state\n    private animationState: AnimationState;\n    private container: HTMLElement | OverlayRef;\n\n    constructor(\n        private overlay: Overlay,\n        private renderer: Renderer2,\n        private cfr: ComponentFactoryResolver,\n        private elementRef: ElementRef,\n        private viewContainer: ViewContainerRef,\n        private modalControl: McModalControlService,\n        private changeDetector: ChangeDetectorRef,\n        @Inject(DOCUMENT) private document: any\n    ) {\n        super();\n    }\n\n    @Input() mcGetContainer: HTMLElement | OverlayRef | (() => HTMLElement | OverlayRef) = () => this.overlay.create();\n\n    ngOnInit() {\n\n        // Create component along without View\n        if (this.isComponent(this.mcContent)) {\n            this.createDynamicComponent(this.mcContent as Type<T>);\n        }\n\n        // Setup default button options\n        if (this.isModalButtons(this.mcFooter)) {\n            this.mcFooter = this.formatModalButtons(this.mcFooter as IModalButtonOptions<T>[]);\n        }\n\n        if (this.isComponent(this.mcComponent)) {\n            this.createDynamicComponent(this.mcComponent);\n        }\n\n        // Place the modal dom to elsewhere\n        this.container = typeof this.mcGetContainer === 'function' ? this.mcGetContainer() : this.mcGetContainer;\n        if (this.container instanceof HTMLElement) {\n            this.container.appendChild(this.elementRef.nativeElement);\n        } else if (this.container instanceof OverlayRef) {\n            // NOTE: only attach the dom to overlay, the view container is not changed actually\n            this.container.overlayElement.appendChild(this.elementRef.nativeElement);\n        }\n\n        // Register modal when afterOpen/afterClose is stable\n        this.modalControl.registerModal(this);\n    }\n\n    // [NOTE] NOT available when using by service!\n    // Because ngOnChanges never be called when using by service,\n    // here we can't support \"mcContent\"(Component) etc. as inputs that initialized dynamically.\n    // BUT: User also can change \"mcContent\" dynamically to trigger UI changes\n    // (provided you don't use \bComponent that needs initializations)\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.mcVisible) {\n            // Do not trigger animation while initializing\n            this.handleVisibleStateChange(this.mcVisible, !changes.mcVisible.firstChange);\n        }\n    }\n\n    ngAfterViewInit() {\n        // If using Component, it is the time to attach View while bodyContainer is ready\n        if (this.contentComponentRef) {\n            this.bodyContainer.insert(this.contentComponentRef.hostView);\n        }\n\n        for (const autoFocusedButton of this.autoFocusedButtons.toArray()) {\n            if (autoFocusedButton.nativeElement.autofocus) {\n                (autoFocusedButton.nativeElement as HTMLButtonElement).focus();\n\n                break;\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.container instanceof OverlayRef) {\n            this.container.dispose();\n        }\n    }\n\n    open() {\n        this.changeVisibleFromInside(true);\n    }\n\n    close(result?: R) {\n        this.changeVisibleFromInside(false, result);\n    }\n\n    // Destroy equals Close\n    destroy(result?: R) {\n        this.close(result);\n    }\n\n    markForCheck() {\n        this.changeDetector.markForCheck();\n    }\n\n    triggerOk() {\n        this.onClickOkCancel('ok');\n    }\n\n    triggerCancel() {\n        this.onClickOkCancel('cancel');\n    }\n\n    getInstance(): McModalComponent {\n        return this;\n    }\n\n    getContentComponentRef(): ComponentRef<T> {\n        return this.contentComponentRef;\n    }\n\n    getContentComponent(): T {\n        return this.contentComponentRef && this.contentComponentRef.instance;\n    }\n\n    getElement(): HTMLElement {\n        return this.elementRef && this.elementRef.nativeElement;\n    }\n\n    onClickMask($event: MouseEvent) {\n        if (\n            this.mcMask &&\n            this.mcMaskClosable &&\n            ($event.target as HTMLElement).classList.contains('mc-modal-wrap') &&\n            this.mcVisible\n        ) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // tslint:disable-next-line: no-reserved-keywords\n    isModalType(type: ModalType): boolean {\n        return this.mcModalType === type;\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        // tslint:disable-next-line:deprecation .key isn't supported in Edge\n        if (event.keyCode === ESCAPE && this.container && (this.container instanceof OverlayRef)) {\n\n            this.close();\n            event.preventDefault();\n        }\n    }\n\n    // AoT\n    onClickCloseBtn() {\n        if (this.mcVisible) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // AoT\n    // tslint:disable-next-line: no-reserved-keywords\n    onClickOkCancel(type: 'ok' | 'cancel') {\n        const trigger = { ok: this.mcOnOk, cancel: this.mcOnCancel }[type];\n        const loadingKey = { ok: 'mcOkLoading', cancel: 'mcCancelLoading' }[type];\n\n        if (trigger instanceof EventEmitter) {\n            trigger.emit(this.getContentComponent());\n        } else if (typeof trigger === 'function') {\n\n            const result = trigger(this.getContentComponent());\n            // Users can return \"false\" to prevent closing by default\n            const caseClose = (doClose: boolean | void | {}) => (doClose !== false) && this.close(doClose as R);\n\n            if (isPromise(result)) {\n                this[loadingKey] = true;\n                const handleThen = (doClose) => {\n                    this[loadingKey] = false;\n                    caseClose(doClose);\n                };\n                (result as Promise<void>).then(handleThen).catch(handleThen);\n            } else {\n                caseClose(result);\n            }\n        }\n    }\n\n    // AoT\n    isNonEmptyString(value: {}): boolean {\n        return typeof value === 'string' && value !== '';\n    }\n\n    // AoT\n    isTemplateRef(value: {}): boolean {\n        return value instanceof TemplateRef;\n    }\n\n    // AoT\n    isComponent(value: {}): boolean {\n        return value instanceof Type;\n    }\n\n    // AoT\n    isModalButtons(value: {}): boolean {\n        return Array.isArray(value) && value.length > 0;\n    }\n\n    // Lookup a button's property, if the prop is a function, call & then return the result, otherwise, return itself.\n    // AoT\n    getButtonCallableProp(options: IModalButtonOptions<T>, prop: string): {} {\n        const value = options[prop];\n        const args: any[] = [];\n        if (this.contentComponentRef) {\n            args.push(this.contentComponentRef.instance);\n        }\n\n        return typeof value === 'function' ? value.apply(options, args) : value;\n    }\n\n    // On mcFooter's modal button click\n    // AoT\n    onButtonClick(button: IModalButtonOptions<T>) {\n        // Call onClick directly\n        // tslint:disable-next-line:no-inferred-empty-object-type  rule seems to be broken\n        const result = this.getButtonCallableProp(button, 'onClick');\n        if (isPromise(result)) {\n            button.loading = true;\n            (result as Promise<{}>).then(() => button.loading = false).catch(() => button.loading = false);\n        }\n    }\n\n    // Do rest things when visible state changed\n    private handleVisibleStateChange(visible: boolean, animation: boolean = true, closeResult?: R): Promise<any> {\n        // Hide scrollbar at the first time when shown up\n        if (visible) {\n            this.changeBodyOverflow(1);\n        }\n\n        return Promise\n            .resolve(animation && this.animateTo(visible))\n            // Emit open/close event after animations over\n            .then(() => {\n                if (visible) {\n                    this.mcAfterOpen.emit();\n                } else {\n                    this.mcAfterClose.emit(closeResult);\n                    // Show/hide scrollbar when animation is over\n                    this.changeBodyOverflow();\n                }\n            });\n    }\n\n    // Change mcVisible from inside\n    private changeVisibleFromInside(visible: boolean, closeResult?: R): Promise<void> {\n        if (this.mcVisible !== visible) {\n            // Change mcVisible value immediately\n            this.mcVisible = visible;\n            this.mcVisibleChange.emit(visible);\n\n            return this.handleVisibleStateChange(visible, true, closeResult);\n        }\n\n        return Promise.resolve();\n    }\n\n    private changeAnimationState(state: AnimationState) {\n        this.animationState = state;\n        if (state) {\n            this.maskAnimationClassMap = {\n                [`fade-${state}`]: true,\n                [`fade-${state}-active`]: true\n            };\n            this.modalAnimationClassMap = {\n                [`zoom-${state}`]: true,\n                [`zoom-${state}-active`]: true\n            };\n        } else {\n            // @ts-ignore\n            this.maskAnimationClassMap = this.modalAnimationClassMap = null;\n        }\n\n        if (this.contentComponentRef) {\n            this.contentComponentRef.changeDetectorRef.markForCheck();\n        } else {\n            this.changeDetector.markForCheck();\n        }\n    }\n\n    private animateTo(isVisible: boolean): Promise<any> {\n        // Figure out the lastest click position when shows up\n        if (isVisible) {\n            // [NOTE] Using timeout due to the document.click event is fired later than visible change,\n            // so if not postponed to next event-loop, we can't get the lastest click position\n            window.setTimeout(() => this.updateTransformOrigin());\n        }\n\n        this.changeAnimationState(isVisible ? 'enter' : 'leave');\n\n        // Return when animation is over\n        return new Promise((resolve) => window.setTimeout(() => {\n            this.changeAnimationState(null);\n            resolve();\n        }, MODAL_ANIMATE_DURATION));\n    }\n\n    private formatModalButtons(buttons: IModalButtonOptions<T>[]): IModalButtonOptions<T>[] {\n        return buttons.map((button) => {\n\n            return {\n                ...{\n                    type: 'default',\n                    size: 'default',\n                    autoLoading: true,\n                    show: true,\n                    loading: false,\n                    disabled: false\n                },\n                ...button\n            };\n        });\n    }\n\n    /**\n     * Create a component dynamically but not attach to any View\n     * (this action will be executed when bodyContainer is ready)\n     * @param component Component class\n     */\n    private createDynamicComponent(component: Type<T>) {\n        const factory = this.cfr.resolveComponentFactory(component);\n        const childInjector = Injector.create({\n            providers: [{provide: McModalRef, useValue: this}],\n            parent: this.viewContainer.injector\n        });\n\n        this.contentComponentRef = factory.create(childInjector);\n\n        if (this.mcComponentParams) {\n            Object.assign(this.contentComponentRef.instance, this.mcComponentParams);\n        }\n\n        // Do the first change detection immediately\n        // (or we do detection at ngAfterViewInit, multi-changes error will be thrown)\n        this.contentComponentRef.changeDetectorRef.detectChanges();\n    }\n\n    // Update transform-origin to the last click position on document\n    private updateTransformOrigin() {\n        const modalElement = this.modalContainer.nativeElement as HTMLElement;\n        const lastPosition = ModalUtil.getLastClickPosition();\n\n        if (lastPosition) {\n            this.transformOrigin = `${lastPosition.x - modalElement.offsetLeft}px ${lastPosition.y - modalElement.offsetTop}px 0px`;\n        }\n    }\n\n    /**\n     * Take care of the body's overflow to decide the existense of scrollbar\n     * @param plusNum The number that the openModals.length will increase soon\n     */\n    private changeBodyOverflow(plusNum: number = 0) {\n        const openModals = this.modalControl.openModals;\n\n        if (openModals.length + plusNum > 0) {\n            this.renderer.setStyle(this.document.body, 'overflow', 'hidden');\n        } else {\n            this.renderer.removeStyle(this.document.body, 'overflow');\n        }\n    }\n}\n\n////////////\n\nfunction isPromise(obj: {} | void): boolean {\n    // tslint:disable-next-line: no-unbound-method\n    return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof (obj as Promise<{}>).then === 'function' && typeof (obj as Promise<{}>).catch === 'function';\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({\n    name: 'toCssUnit'\n})\nexport class CssUnitPipe implements PipeTransform {\n    transform(value: number | string, defaultUnit: string = 'px'): string {\n        const formatted = +value;\n\n        return isNaN(formatted) ? `${value}` : `${formatted}${defaultUnit}`;\n    }\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: `[mc-modal-title], mc-modal-title, [mcModalTitle]`,\n    host: {\n        class: 'mc-modal-header mc-modal-title'\n    }\n})\nexport class McModalTitle {}\n\n@Directive({\n    selector: `[mc-modal-body], mc-modal-body, [mcModalBody]`,\n    host: {\n        class: 'mc-modal-body'\n    }\n})\nexport class McModalBody {}\n\n@Directive({\n    selector: `[mc-modal-footer], mc-modal-footer, [mcModalFooter]`,\n    host: {\n        class: 'mc-modal-footer'\n    }\n})\nexport class McModalFooter {}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ComponentRef, Injectable } from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\nimport { McModalComponent } from './modal.component';\nimport { ConfirmType, IModalOptions, IModalOptionsForService } from './modal.type';\n\n\n// A builder used for managing service creating modals\nexport class ModalBuilderForService {\n\n    // Modal ComponentRef, \"null\" means it has been destroyed\n    private modalRef: ComponentRef<McModalComponent> | null;\n    private overlayRef: OverlayRef;\n\n    constructor(private overlay: Overlay, options: IModalOptionsForService = {}) {\n        this.createModal();\n\n        if (!('mcGetContainer' in options)) {\n            options.mcGetContainer = undefined;\n        }\n\n        this.changeProps(options);\n        this.modalRef!.instance.open();\n        this.modalRef!.instance.mcAfterClose.subscribe(() => this.destroyModal());\n\n        this.overlayRef.keydownEvents()\n            // @ts-ignore\n            .pipe(filter((event: KeyboardEvent) => {\n                // tslint:disable-next-line:deprecation replacement .key isn't supported in Edge\n                return event.keyCode === ESCAPE && options.mcCloseByESC;\n            }))\n            .subscribe(() => this.modalRef!.instance.close());\n    }\n\n    getInstance(): McModalComponent | null {\n        return this.modalRef && this.modalRef.instance;\n    }\n\n    destroyModal(): void {\n        if (this.modalRef) {\n            this.overlayRef.dispose();\n            this.modalRef = null;\n        }\n    }\n\n    private changeProps(options: IModalOptions): void {\n        if (this.modalRef) {\n            // here not limit user's inputs at runtime\n            Object.assign(this.modalRef.instance, options);\n        }\n    }\n\n    // Create component to ApplicationRef\n    private createModal(): void {\n        this.overlayRef = this.overlay.create();\n        this.modalRef = this.overlayRef.attach(new ComponentPortal(McModalComponent));\n    }\n}\n\n@Injectable()\nexport class McModalService {\n    // Track of the current close modals (we assume invisible is close this time)\n    get openModals(): McModalRef[] {\n        return this.modalControl.openModals;\n    }\n\n    get afterAllClose(): Observable<void> {\n        return this.modalControl.afterAllClose.asObservable();\n    }\n\n    constructor(\n        private overlay: Overlay,\n        private modalControl: McModalControlService) {\n    }\n\n    // Closes all of the currently-open dialogs\n    closeAll(): void {\n        this.modalControl.closeAll();\n    }\n\n    create<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n\n        if (typeof options.mcOnCancel !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnCancel = () => {};\n        }\n\n        if (!('mcCloseByESC' in options)) {\n            options.mcCloseByESC = true;\n        }\n\n\n        if (!('mcWidth' in options)) {\n            // tslint:disable-next-line\n            options.mcWidth = 480;\n        }\n\n        return new ModalBuilderForService(this.overlay, options).getInstance()!;\n    }\n\n    confirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType = 'confirm'): McModalRef<T> {\n        if ('mcFooter' in options) {\n            console.warn(`The Confirm-Modal doesn't support \"mcFooter\", this property will be ignored.`);\n        }\n\n        // NOTE: only support function currently by calling confirm()\n        if (typeof options.mcOnOk !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnOk = () => {};\n        }\n\n        options.mcModalType = 'confirm';\n        options.mcClassName = `mc-confirm mc-confirm-${confirmType} ${options.mcClassName || ''}`;\n\n        return this.create(options);\n    }\n\n    open<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n\n        options.mcModalType = 'custom';\n\n        return this.create(options);\n    }\n\n    success<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'success');\n    }\n\n    // tslint:disable-next-line: no-reserved-keywords\n    delete<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'warn');\n    }\n\n    private simpleConfirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType): McModalRef<T> {\n        // Remove the Cancel button if the user not specify a Cancel button\n        if (!('mcCancelText' in options)) {\n            // @ts-ignore\n            options.mcCancelText = null;\n        }\n\n        return this.confirm(options, confirmType);\n    }\n}\n","import { A11yModule } from '@angular/cdk/a11y';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { CssUnitPipe } from './css-unit.pipe';\nimport { McModalControlService } from './modal-control.service';\nimport { McModalComponent } from './modal.component';\nimport { McModalBody, McModalFooter, McModalTitle } from './modal.directive';\nimport { McModalService } from './modal.service';\n\n\n@NgModule({\n    imports: [CommonModule, OverlayModule, A11yModule, McButtonModule, McIconModule],\n    exports: [\n        McModalComponent,\n        McModalTitle,\n        McModalBody,\n        McModalFooter\n    ],\n    declarations: [\n        McModalComponent,\n        McModalTitle,\n        McModalBody,\n        McModalFooter,\n        CssUnitPipe\n    ],\n    entryComponents: [McModalComponent],\n    providers: [McModalControlService, McModalService]\n})\nexport class McModalModule {}\n"]}