{"version":3,"file":"mosaic-select.umd.js","sources":["../../src/lib/select/select.module.ts","../../src/lib/select/select.component.ts","../../src/lib/select/select-animations.ts","../../src/lib/select/select-errors.ts","../../node_modules/tslib/tslib.es6.js"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McOptionModule } from '@ptsecurity/mosaic/core';\nimport { McFormFieldModule } from '@ptsecurity/mosaic/form-field';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport { McTagModule } from '@ptsecurity/mosaic/tag';\n\nimport { MC_SELECT_SCROLL_STRATEGY_PROVIDER, McSelect, McSelectTrigger } from './select.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        McOptionModule,\n        McIconModule,\n        McTagModule\n    ],\n    exports: [McFormFieldModule, McSelect, McSelectTrigger, McOptionModule, CommonModule],\n    declarations: [McSelect, McSelectTrigger],\n    providers: [MC_SELECT_SCROLL_STRATEGY_PROVIDER]\n})\nexport class McSelectModule {}\n","/* tslint:disable:no-empty */\n\nimport { ActiveDescendantKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    RIGHT_ARROW,\n    SPACE,\n    UP_ARROW,\n    A\n} from '@ptsecurity/cdk/keycodes';\nimport {\n    CdkConnectedOverlay,\n    Overlay,\n    RepositionScrollStrategy,\n    IScrollStrategy,\n    ViewportRuler\n} from '@ptsecurity/cdk/overlay';\n\nimport {\n    AfterContentInit, AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren,\n    Directive,\n    DoCheck,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    isDevMode,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    QueryList, Renderer2,\n    Self,\n    SimpleChanges,\n    ViewChild, ViewChildren,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport {\n    _countGroupLabelsBeforeOption,\n    _getOptionScrollPosition,\n    CanDisable,\n    CanDisableCtor,\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    HasTabIndex, HasTabIndexCtor,\n    MC_OPTION_PARENT_COMPONENT,\n    McOptgroup,\n    McOption,\n    McOptionSelectionChange,\n    mixinDisabled,\n    mixinErrorState,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\nimport { McFormField, McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { McTag } from '@ptsecurity/mosaic/tag';\n\n\nimport { defer, merge, Observable, Subject } from 'rxjs';\nimport {\n    filter,\n    map,\n    startWith,\n    switchMap,\n    take,\n    takeUntil,\n    distinctUntilChanged\n} from 'rxjs/operators';\n\nimport {\n    getMcSelectDynamicMultipleError,\n    getMcSelectNonArrayValueError,\n    getMcSelectNonFunctionValueError\n} from './select-errors';\n\nimport { mcSelectAnimations } from './select-animations';\n\n\nlet nextUniqueId = 0;\n\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n\n/** The max height of the select's overlay panel */\nexport const SELECT_PANEL_MAX_HEIGHT = 224;\n\n/** The panel's padding on the x-axis */\nexport const SELECT_PANEL_PADDING_X = 1;\n\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\n/* tslint:disable-next-line:no-magic-numbers */\nexport const SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n\n/** The height of the select items in `em` units. */\nexport const SELECT_ITEM_HEIGHT_EM = 2;\n\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nexport const SELECT_PANEL_VIEWPORT_PADDING = 8;\n\n/** Injection token that determines the scroll handling while a select is open. */\nexport const MC_SELECT_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-select-scroll-strategy');\n\n/** @docs-private */\nexport function MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => RepositionScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MC_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n\n/** Change event object that is emitted when the select value has changed. */\nexport class McSelectChange {\n    constructor(\n        /** Reference to the select that emitted the change event. */\n        public source: McSelect,\n        /** Current value of the select that emitted the event. */\n        public value: any) {\n    }\n}\n\n// Boilerplate for applying mixins to McSelect.\n/** @docs-private */\nexport class McSelectBase {\n    constructor(\n        public _elementRef: ElementRef,\n        public _defaultErrorStateMatcher: ErrorStateMatcher,\n        public _parentForm: NgForm,\n        public _parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl\n    ) {}\n}\n\nexport const _McSelectMixinBase:\n    CanDisableCtor &\n    HasTabIndexCtor &\n    CanUpdateErrorStateCtor & typeof McSelectBase\n    = mixinTabIndex(mixinDisabled(mixinErrorState(McSelectBase)));\n\n\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\n@Directive({ selector: 'mc-select-trigger' })\nexport class McSelectTrigger {}\n\n\n@Component({\n    selector: 'mc-select',\n    exportAs: 'mcSelect',\n    templateUrl: 'select.html',\n    styleUrls: ['./select.css'],\n    inputs: ['disabled', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'tabIndex',\n        class: 'mc-select',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-select-invalid]': 'errorState',\n        '[class.mc-select-required]': 'required',\n        '(keydown)': '_handleKeydown($event)',\n        '(focus)': '_onFocus()',\n        '(blur)': '_onBlur()',\n        '(window:resize)': '_calculateHiddenItems()'\n    },\n    animations: [\n        mcSelectAnimations.transformPanel,\n        mcSelectAnimations.fadeInContent\n    ],\n    providers: [\n        { provide: McFormFieldControl, useExisting: McSelect },\n        { provide: MC_OPTION_PARENT_COMPONENT, useExisting: McSelect }\n    ]\n})\nexport class McSelect extends _McSelectMixinBase implements\n    AfterContentInit, AfterViewInit, OnChanges, OnDestroy, OnInit, DoCheck, ControlValueAccessor, CanDisable,\n    HasTabIndex, McFormFieldControl<any>, CanUpdateErrorState {\n\n    /** The last measured value for the trigger's client bounding rect. */\n    _triggerRect: ClientRect;\n\n    /** The cached font-size of the trigger element. */\n    _triggerFontSize = 0;\n\n    /** Deals with the selection logic. */\n    _selectionModel: SelectionModel<McOption>;\n\n    /** Manages keyboard events for options in the panel. */\n    _keyManager: ActiveDescendantKeyManager<McOption>;\n\n    /** The IDs of child options to be passed to the aria-owns attribute. */\n    _optionIds: string = '';\n\n    /** The value of the select panel's transform-origin property. */\n    _transformOrigin: string = 'top';\n\n    /** Whether the panel's animation is done. */\n    _panelDoneAnimating: boolean = false;\n\n    /** Emits when the panel element is finished transforming in. */\n    _panelDoneAnimatingStream = new Subject<string>();\n\n    /** Strategy that will be used to handle scrolling while the select panel is open. */\n    _scrollStrategy = this._scrollStrategyFactory();\n\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     */\n    _offsetY = 0;\n\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     */\n    _positions = [\n        {\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top'\n        },\n        {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'bottom'\n        }\n    ];\n\n    /** Whether the select is focused. */\n    get focused(): boolean {\n        return this._focused || this._panelOpen;\n    }\n\n    /**\n     * @deprecated Setter to be removed as this property is intended to be readonly.\n     * @breaking-change 8.0.0\n     */\n    set focused(value: boolean) {\n        this._focused = value;\n    }\n\n    /** A name for this control that can be used by `mc-form-field`. */\n    controlType = 'mc-select';\n\n    @ViewChild('trigger') trigger: ElementRef;\n    @ViewChildren(McTag) tags: QueryList<McTag>;\n\n    @ViewChild('panel') panel: ElementRef;\n\n    /** Overlay pane containing the options. */\n    @ViewChild(CdkConnectedOverlay) overlayDir: CdkConnectedOverlay;\n\n    /** All of the defined select options. */\n    @ContentChildren(McOption, { descendants: true }) options: QueryList<McOption>;\n\n    /** All of the defined groups of options. */\n    @ContentChildren(McOptgroup) optionGroups: QueryList<McOptgroup>;\n\n    /** Classes to be passed to the select panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[] | Set<string> | { [key: string]: any };\n\n    /** User-supplied override of the trigger element. */\n    @ContentChild(McSelectTrigger) customTrigger: McSelectTrigger;\n\n    /** Placeholder to be shown if no value has been selected. */\n    @Input()\n    get placeholder(): string {\n        return this._placeholder;\n    }\n\n    set placeholder(value: string) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n\n    /** Whether the component is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n\n    /** Whether the user should be allowed to select multiple options. */\n    @Input()\n    get multiple(): boolean {\n        return this._multiple;\n    }\n\n    set multiple(value: boolean) {\n        if (this._selectionModel) {\n            throw getMcSelectDynamicMultipleError();\n        }\n\n        this._multiple = coerceBooleanProperty(value);\n    }\n\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    @Input()\n    get compareWith() {\n        return this._compareWith;\n    }\n\n    set compareWith(fn: (o1: any, o2: any) => boolean) {\n        /* tslint:disable-next-line:strict-type-predicates */\n        if (typeof fn !== 'function') {\n            throw getMcSelectNonFunctionValueError();\n        }\n\n        this._compareWith = fn;\n\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n\n    /** Value of the select control. */\n    @Input()\n    get value(): any {\n        return this._value;\n    }\n\n    set value(newValue: any) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n\n    /** Object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     */\n    @Input() sortComparator: (a: McOption, b: McOption, options: McOption[]) => number;\n\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n\n    /** Combined stream of all of the child options' change events. */\n    readonly optionSelectionChanges: Observable<McOptionSelectionChange> = defer(() => {\n        if (this.options) {\n            return merge(...this.options.map((option) => option.onSelectionChange));\n        }\n\n        return this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n    });\n\n    /** Event emitted when the select panel has been toggled. */\n    @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the select has been opened. */\n    @Output('opened') readonly _openedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => o), map(() => {}));\n\n    /** Event emitted when the select has been closed. */\n    @Output('closed') readonly _closedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => !o), map(() => {}));\n\n    /** Event emitted when the selected value has been changed by the user. */\n    @Output() readonly selectionChange: EventEmitter<McSelectChange> = new EventEmitter<McSelectChange>();\n\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n    hiddenItems: number = 0;\n\n    /** Whether or not the overlay panel is open. */\n    private _panelOpen = false;\n\n    /** Whether filling out the select is required in the form. */\n    private _required: boolean = false;\n\n    /** The scroll position of the overlay panel, calculated to center the selected option. */\n    private _scrollTop = 0;\n\n    /** The placeholder displayed in the trigger of the select. */\n    private _placeholder: string;\n\n    /** Whether the component is in multiple selection mode. */\n    private _multiple: boolean = false;\n\n    /** Unique id for this input. */\n    private readonly _uid = `mc-select-${nextUniqueId++}`;\n\n    /** Emits whenever the component is destroyed. */\n    private readonly _destroy = new Subject<void>();\n\n    private _focused = false;\n\n    private _value: any;\n\n    private _id: string;\n\n    constructor(\n        private readonly _viewportRuler: ViewportRuler,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        private readonly _ngZone: NgZone,\n        private readonly _renderer: Renderer2,\n        _defaultErrorStateMatcher: ErrorStateMatcher,\n        elementRef: ElementRef,\n        @Optional() private readonly _dir: Directionality,\n        @Optional() _parentForm: NgForm,\n        @Optional() _parentFormGroup: FormGroupDirective,\n        @Optional() private readonly _parentFormField: McFormField,\n        @Self() @Optional() public ngControl: NgControl,\n        @Attribute('tabindex') tabIndex: string,\n        @Inject(MC_SELECT_SCROLL_STRATEGY) private readonly _scrollStrategyFactory\n    ) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnInit() {\n        this._selectionModel = new SelectionModel<McOption>(this.multiple);\n        this.stateChanges.next();\n\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe(() => {\n                if (this.panelOpen) {\n                    this._scrollTop = 0;\n                    this.openedChange.emit(true);\n                } else {\n                    this.openedChange.emit(false);\n                    this._panelDoneAnimating = false;\n                    this.overlayDir.offsetX = 0;\n                    this._changeDetectorRef.markForCheck();\n                }\n            });\n    }\n\n    ngAfterContentInit() {\n        this._initKeyManager();\n\n        this._selectionModel.onChange!\n            .pipe(takeUntil(this._destroy))\n            .subscribe((event) => {\n                event.added.forEach((option) => option.select());\n                event.removed.forEach((option) => option.deselect());\n            });\n\n        this.options.changes\n            .pipe(startWith(null), takeUntil(this._destroy))\n            .subscribe(() => {\n                this._resetOptions();\n                this._initializeSelection();\n            });\n    }\n\n    ngAfterViewInit(): void {\n        this.tags.changes\n            .subscribe(() => {\n                setTimeout(() => this._calculateHiddenItems(), 0);\n            });\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) { this.updateErrorState(); }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes.disabled) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n\n    /** `View -> model callback called when value changes` */\n    _onChange: (value: any) => void = () => {};\n\n    /** `View -> model callback called when select has been touched` */\n    _onTouched = () => {};\n\n    /** Toggles the overlay panel open or closed. */\n    toggle(): void {\n        if (this.panelOpen) {\n            this.close();\n        } else {\n            this.open();\n        }\n    }\n\n    /** Opens the overlay panel. */\n    open(): void {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) { return; }\n\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement)['font-size']);\n\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                    this.overlayDir.overlayRef.overlayElement) {\n                    this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n                }\n            });\n    }\n\n    /** Closes the overlay panel and focuses the host element. */\n    close(): void {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value: any): void {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn: () => {}): void {\n        this._onTouched = fn;\n    }\n\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n\n    get panelOpen(): boolean {\n        return this._panelOpen;\n    }\n\n    get selected(): McOption | McOption[] {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n\n    get triggerValue(): string {\n        if (this.empty) { return ''; }\n\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map((option) => option.viewValue);\n\n            if (this._isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions.join(', ');\n        }\n\n        return this._selectionModel.selected[0].viewValue;\n    }\n\n    get triggerValues(): McOption[] {\n        if (this.empty) { return []; }\n\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected;\n\n            if (this._isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions;\n        }\n\n        return [this._selectionModel.selected[0]];\n    }\n\n    get empty(): boolean {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n\n    _isRtl(): boolean {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n\n    _handleKeydown(event: KeyboardEvent): void {\n        if (!this.disabled) {\n            if (this.panelOpen) {\n                this._handleOpenKeydown(event);\n            } else {\n                this._handleClosedKeydown(event);\n            }\n        }\n    }\n\n    /**\n     * When the panel content is done fading in, the _panelDoneAnimating property is\n     * set so the proper class can be added to the panel.\n     */\n    _onFadeInDone(): void {\n        this._panelDoneAnimating = this.panelOpen;\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached(): void {\n        this.overlayDir.positionChange\n            .pipe(take(1))\n            .subscribe(() => {\n                this._changeDetectorRef.detectChanges();\n                this._calculateOverlayOffsetX();\n                this.panel.nativeElement.scrollTop = this._scrollTop;\n            });\n    }\n\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme(): string {\n        return this._parentFormField ? `mc-${this._parentFormField.color}` : '';\n    }\n\n    /** Focuses the select element. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    _calculateOverlayScroll(selectedIndex: number, scrollBuffer: number, maxScroll: number): number {\n        const itemHeight = this._getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n\n        /* tslint:disable-next-line:no-magic-numbers */\n        const halfOptionHeight = itemHeight / 2;\n\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n\n    /** Invoked when an option is clicked. */\n    onRemoveMatcherItem(option: McOption, $event): void {\n        $event.stopPropagation();\n\n        option.deselect();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat(): boolean {\n        return this._panelOpen || !this.empty;\n    }\n\n    _calculateHiddenItems(): void {\n        if (this.empty) { return; }\n\n        let visibleItems: number = 0;\n        const totalItemsWidth = this._getTotalItemsWidthInMatcher();\n        let totalVisibleItemsWidth: number = 0;\n        const itemMargin: number = 4;\n\n        this.tags.forEach((tag) => {\n            if (tag.nativeElement.offsetTop < tag.nativeElement.offsetHeight) {\n                totalVisibleItemsWidth += tag.nativeElement.getBoundingClientRect().width + itemMargin;\n                visibleItems++;\n            }\n        });\n\n        this.hiddenItems = (this.selected as ArrayLike<McOption>).length - visibleItems;\n\n        if (this.hiddenItems) {\n            const itemsCounter = this.trigger.nativeElement.querySelector('.mc-select__match-hidden-text');\n            const matcherList = this.trigger.nativeElement.querySelector('.mc-select__match-list');\n\n            const itemsCounterShowed = itemsCounter.offsetTop < itemsCounter.offsetHeight;\n            // const itemsCounterWidth: number = itemsCounter.getBoundingClientRect().width;\n            const itemsCounterWidth: number = 86;\n\n            const matcherListWidth: number = matcherList.getBoundingClientRect().width;\n            const matcherWidth: number = matcherListWidth + itemsCounterWidth;\n\n            if (itemsCounterShowed && (totalItemsWidth < matcherWidth)) { this.hiddenItems = 0; }\n\n            if (\n                totalVisibleItemsWidth === matcherListWidth ||\n                (totalVisibleItemsWidth + itemsCounterWidth) < matcherListWidth\n            ) {\n                this._changeDetectorRef.markForCheck();\n\n                return ;\n            } else if (!itemsCounterShowed && (totalItemsWidth + itemsCounterWidth) > matcherWidth) {\n                this.hiddenItems++;\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    private _getTotalItemsWidthInMatcher(): number {\n        const triggerClone = this.trigger.nativeElement.cloneNode(true);\n        triggerClone.querySelector('.mc-select__match-hidden-text').remove();\n\n        this._renderer.setStyle(triggerClone, 'position', 'absolute');\n        this._renderer.setStyle(triggerClone, 'visibility', 'hidden');\n        this._renderer.setStyle(triggerClone, 'top', '-100%');\n        this._renderer.setStyle(triggerClone, 'left', '0');\n\n        this._renderer.appendChild(this.trigger.nativeElement, triggerClone);\n\n        let totalItemsWidth: number = 0;\n        const itemMargin: number = 4;\n        triggerClone.querySelectorAll('mc-tag').forEach((item) => {\n            totalItemsWidth += item.getBoundingClientRect().width as number + itemMargin;\n        });\n\n        triggerClone.remove();\n\n        return totalItemsWidth;\n    }\n\n    /** Handles keyboard events while the select is closed. */\n    private _handleClosedKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n\n        // Open the select on ALT + arrow key to match the native <select>\n        if (isOpenKey || ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        } else if (!this.multiple) {\n            this._keyManager.onKeydown(event);\n        }\n    }\n\n    /** Handles keyboard events when the selected is open. */\n    private _handleOpenKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const manager = this._keyManager;\n\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n\n            if (keyCode === HOME) {\n                manager.setFirstItemActive();\n            } else {\n                manager.setLastItemActive();\n            }\n\n        } else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n        } else if ((keyCode === ENTER || keyCode === SPACE) && manager.activeItem) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        } else if (this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some((option) => !option.selected);\n            this.options.forEach((option) => {\n                if (hasDeselectedOptions && !option.disabled) {\n                    option.select();\n                } else {\n                    option.deselect();\n                }\n            });\n        } else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n\n            manager.onKeydown(event);\n\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n\n    private _initializeSelection(): void {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n        });\n    }\n\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    private _setSelectionByValue(value: any | any[]): void {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMcSelectNonArrayValueError();\n            }\n\n            this._selectionModel.clear();\n            value.forEach((currentValue: any) => this._selectValue(currentValue));\n            this._sortValues();\n        } else {\n            this._selectionModel.clear();\n            const correspondingOption = this._selectValue(value);\n\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    private _selectValue(value: any): McOption | undefined {\n        const correspondingOption = this.options.find((option: McOption) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            } catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n\n                return false;\n            }\n        });\n\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n\n        return correspondingOption;\n    }\n\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    private _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager<McOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n\n        this._keyManager.tabOut\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            });\n\n        this._keyManager.change\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n                if (this._panelOpen && this.panel) {\n                    this._scrollActiveOptionIntoView();\n                } else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n            });\n    }\n\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    private _resetOptions(): void {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n\n        this.optionSelectionChanges\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((event) => {\n                this._onSelect(event.source, event.isUserInput);\n\n                if (event.isUserInput && !this.multiple && this._panelOpen) {\n                    this.close();\n                    this.focus();\n                }\n            });\n\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((option) => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n                this.stateChanges.next();\n            });\n\n        this._setOptionIds();\n    }\n\n    /** Invoked when an option is clicked. */\n    private _onSelect(option: McOption, isUserInput: boolean): void {\n        const wasSelected = this._selectionModel.isSelected(option);\n\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        } else {\n            if (option.selected) {\n                this._selectionModel.select(option);\n            } else {\n                this._selectionModel.deselect(option);\n            }\n\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n\n            if (this.multiple) {\n                this._sortValues();\n\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mc-option`.\n                    this.focus();\n                }\n            }\n        }\n\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n\n        this.stateChanges.next();\n    }\n\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    private _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n\n    /** Emits change event to set the model value. */\n    private _propagateChanges(fallbackValue?: any): void {\n        let valueToEmit: any = null;\n\n        if (this.multiple) {\n            valueToEmit = (this.selected as McOption[]).map((option) => option.value);\n        } else {\n            valueToEmit = this.selected ? (this.selected as McOption).value : fallbackValue;\n        }\n\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new McSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /** Records option IDs to pass to the aria-owns property. */\n    private _setOptionIds() {\n        this._optionIds = this.options.map((option) => option.id).join(' ');\n    }\n\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    private _highlightCorrectOption(): void {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            } else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n\n    /** Scrolls the active option into view. */\n    private _scrollActiveOptionIntoView(): void {\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(\n            activeOptionIndex + labelCount,\n            this._getItemHeight(),\n            this.panel.nativeElement.scrollTop,\n            SELECT_PANEL_MAX_HEIGHT\n        );\n    }\n\n    /** Gets the index of the provided option in the option list. */\n    private _getOptionIndex(option: McOption): number | undefined {\n        /* tslint:disable-next-line */\n        return this.options.reduce((result: number, current: McOption, index: number) => {\n            /* tslint:disable-next-line:strict-type-predicates */\n            return result === undefined ? (option === current ? index : undefined) : result;\n        }, undefined);\n    }\n\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    private _calculateOverlayPosition(): void {\n        const itemHeight = this._getItemHeight();\n        const items = this._getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset =\n            this.empty ? 0 : this._getOptionIndex(this._selectionModel.selected[0])!;\n\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options,\n            this.optionGroups);\n\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /* tslint:disable-next-line:no-magic-numbers */\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY();\n\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    private _calculateOverlayOffsetX(): void {\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this._isRtl();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const paddingWidth = SELECT_PANEL_PADDING_X * 2;\n        let offsetX: number;\n\n        const selected = this._selectionModel.selected[0] || this.options.first;\n        offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n\n        // Invert the offset in LTR.\n        if (!isRtl) { offsetX *= -1; }\n\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        } else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    private _calculateOverlayOffsetY(): number {\n        // const itemHeight = this._getItemHeight();\n        // const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n\n        // todo I'm not sure that we will use it\n        return 0;\n        // return Math.round(-optionHeightAdjustment);\n    }\n\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    private _checkOverlayWithinViewport(maxScroll: number): void {\n        const itemHeight = this._getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable =\n            viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n\n        const panelHeightTop = Math.abs(this._offsetY);\n        const totalPanelHeight =\n            Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        } else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        } else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    private _adjustPanelUp(panelHeightBottom: number, bottomSpaceAvailable: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    private _adjustPanelDown(panelHeightTop: number, topSpaceAvailable: number, maxScroll: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n\n            return;\n        }\n    }\n\n    /** Sets the transform origin point based on the selected option. */\n    private _getOriginBasedOnOption(): string {\n        const itemHeight = this._getItemHeight();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /* tslint:disable-next-line:no-magic-numbers */\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n\n        return `50% ${originY}px 0px`;\n    }\n\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    private _getItemCount(): number {\n        return this.options.length + this.optionGroups.length;\n    }\n\n    /** Calculates the height of the select's options. */\n    private _getItemHeight(): number {\n        /* tslint:disable-next-line:no-magic-numbers */\n        return 32;\n        // return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n\n    /** Comparison function to specify which option is displayed. Defaults to object equality. */\n    private _compareWith = (o1: any, o2: any) => o1 === o2;\n}\n","import {\n    animate,\n    AnimationTriggerMetadata,\n    state,\n    style,\n    transition,\n    trigger,\n    query,\n    animateChild,\n    group\n} from '@angular/animations';\n\n\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n */\nexport const mcSelectAnimations: {\n    readonly transformPanel: AnimationTriggerMetadata;\n    readonly fadeInContent: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        transition('void => *', group([\n            query('@fadeInContent', animateChild()),\n            animate('150ms cubic-bezier(0.25, 0.8, 0.25, 1)')\n        ])),\n        transition('* => void', [\n            animate('250ms 100ms linear', style({ opacity: 0 }))\n        ])\n    ]),\n\n    /**\n     * This animation fades in the background color and text content of the\n     * select's options. It is time delayed to occur 100ms after the overlay\n     * panel has transformed in.\n     */\n    fadeInContent: trigger('fadeInContent', [\n        state('showing', style({ opacity: 1 })),\n        transition('void => showing', [\n            style({ opacity: 0 }),\n            animate('150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const transformPanel = mcSelectAnimations.transformPanel;\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const fadeInContent = mcSelectAnimations.fadeInContent;\n","/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nexport function getMcSelectDynamicMultipleError(): Error {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nexport function getMcSelectNonArrayValueError(): Error {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nexport function getMcSelectNonFunctionValueError(): Error {\n    return Error('`compareWith` must be a function.');\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n"],"names":["McFormFieldModule","McOptionModule","CommonModule","McTagModule","McIconModule","OverlayModule","NgModule","tslib_1.__decorate","NgControl","McFormField","FormGroupDirective","NgForm","Directionality","ElementRef","ErrorStateMatcher","Renderer2","NgZone","ChangeDetectorRef","tslib_1.__metadata","ViewportRuler","tslib_1.__param","Inject","Attribute","Self","Optional","MC_OPTION_PARENT_COMPONENT","McFormFieldControl","ChangeDetectionStrategy","ViewEncapsulation","Component","EventEmitter","Output","Observable","Input","ContentChild","QueryList","ContentChildren","McOptgroup","McOption","CdkConnectedOverlay","ViewChild","ViewChildren","McTag","_countGroupLabelsBeforeOption","_getOptionScrollPosition","merge","takeUntil","ActiveDescendantKeyManager","isDevMode","A","ENTER","SPACE","HOME","END","DOWN_ARROW","UP_ARROW","LEFT_ARROW","RIGHT_ARROW","tag","take","startWith","distinctUntilChanged","SelectionModel","coerceBooleanProperty","Subject","filter","map","switchMap","defer","tslib_1.__extends","Directive","mixinTabIndex","mixinDisabled","mixinErrorState","Overlay","overlay","InjectionToken","animate","style","transition","state","trigger","query","animateChild","group"],"mappings":"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"}