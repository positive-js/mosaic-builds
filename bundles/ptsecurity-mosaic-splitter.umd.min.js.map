{"version":3,"sources":["../../../packages/mosaic/splitter/splitter.component.ts","../../../packages/mosaic/splitter/splitter.module.ts"],"names":["Direction","McGutterDirective","elementRef","renderer","this","_direction","Vertical","_order","_size","dragged","Object","defineProperty","prototype","direction","order","coerceNumberProperty","size","ngOnInit","setStyle","coerceCssPixelValue","isVertical","property","value","nativeElement","Directive","args","selector","host","class","[class.mc-gutter_vertical]","[class.mc-gutter_dragged]","(mousedown)","ElementRef","Renderer2","Input","McSplitterComponent","changeDetectorRef","ngZone","areas","isDragging","areaPositionDivider","listeners","_hideGutters","_disabled","_gutterSize","coerceBooleanProperty","disabled","gutterSize","addArea","area","index","length","getSize","setOrder","push","initialSize","Horizontal","onMouseDown","event","leftAreaIndex","rightAreaIndex","_this","preventDefault","leftArea","rightArea","startPoint","x","screenX","y","screenY","forEach","item","disableFlex","setSize","runOutsideAngular","listen","onMouseUp","e","onMouseMove","removeArea","indexToRemove","some","splice","updateGutter","gutters","gutter","detectChanges","endPoint","offset","newLeftAreaSize","newRightAreaSize","minLeftAreaSize","getMinSize","minRightAreaSize","unsubscribe","pop","Component","exportAs","preserveWhitespaces","template","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","ChangeDetectorRef","NgZone","ViewChildren","McSplitterAreaDirective","splitter","removeStyle","ngOnDestroy","sz","getSizeProperty","getOffsetSizeProperty","styles","getComputedStyle","parseFloat","getMinSizeProperty","style","NgModule","imports","CommonModule","McIconModule","exports","declarations"],"mappings":"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","sourcesContent":["import { coerceBooleanProperty, coerceCssPixelValue, coerceNumberProperty } from '@angular/cdk/coercion';\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    QueryList,\n    Renderer2,\n    ViewChildren,\n    ViewEncapsulation\n} from '@angular/core';\n\n\ninterface IArea {\n    area: McSplitterAreaDirective;\n    index: number;\n    order: number;\n    initialSize: number;\n}\n\ninterface IPoint {\n    x: number;\n    y: number;\n}\n\nconst enum StyleProperty {\n    Flex = 'flex',\n    FlexBasis = 'flex-basis',\n    FlexDirection = 'flex-direction',\n    Height = 'height',\n    MaxWidth = 'max-width',\n    MinHeight = 'min-height',\n    MinWidth = 'minWidth',\n    OffsetHeight = 'offsetHeight',\n    OffsetWidth = 'offsetWidth',\n    Order = 'order',\n    Width = 'width'\n}\n\nexport enum Direction {\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\n\n@Directive({\n    selector: 'mc-gutter',\n    host: {\n        class: 'mc-gutter',\n        '[class.mc-gutter_vertical]': 'isVertical()',\n        '[class.mc-gutter_dragged]': 'dragged',\n        '(mousedown)': 'dragged = true'\n    }\n})\nexport class McGutterDirective implements OnInit {\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    private _direction: Direction = Direction.Vertical;\n\n    get order(): number {\n        return this._order;\n    }\n\n    @Input()\n    set order(order: number) {\n        this._order = coerceNumberProperty(order);\n    }\n\n    private _order: number = 0;\n\n    get size(): number {\n        return this._size;\n    }\n\n    @Input()\n    set size(size: number) {\n        this._size = coerceNumberProperty(size);\n    }\n\n    private _size: number = 6;\n\n    dragged: boolean = false;\n\n    constructor(\n        private elementRef: ElementRef,\n        private renderer: Renderer2\n    ) {}\n\n    ngOnInit(): void {\n        this.setStyle(StyleProperty.FlexBasis, coerceCssPixelValue(this.size));\n        this.setStyle(this.isVertical() ? StyleProperty.Height : StyleProperty.Width, coerceCssPixelValue(this.size));\n        this.setStyle(StyleProperty.Order, this.order);\n\n        if (!this.isVertical()) {\n            this.setStyle(StyleProperty.Height, '100%');\n        }\n\n        // fix IE issue with gutter icon. flex-direction is requied for flex alignment options\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'row' : 'column');\n    }\n\n    isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n}\n\n\n@Component({\n    selector: 'mc-splitter',\n    exportAs: 'mcSplitter',\n    host: {\n        class: 'mc-splitter'\n    },\n    preserveWhitespaces: false,\n    styleUrls: ['splitter.scss'],\n    templateUrl: './splitter.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSplitterComponent implements OnInit {\n    readonly areas: IArea[] = [];\n\n    @ViewChildren(McGutterDirective) gutters: QueryList<McGutterDirective>;\n\n    private isDragging: boolean = false;\n\n    private readonly areaPositionDivider: number = 2;\n    private readonly listeners: (() => void)[] = [];\n\n    get hideGutters(): boolean {\n        return this._hideGutters;\n    }\n\n    @Input()\n    set hideGutters(value: boolean) {\n        this._hideGutters = coerceBooleanProperty(value);\n    }\n\n    private _hideGutters: boolean = false;\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    private _direction: Direction;\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    private _disabled: boolean = false;\n\n    get gutterSize(): number {\n        return this._gutterSize;\n    }\n\n    @Input()\n    set gutterSize(gutterSize: number) {\n        const size = coerceNumberProperty(gutterSize);\n        this._gutterSize = size > 0 ? size : this.gutterSize;\n    }\n\n    private _gutterSize: number = 6;\n\n    constructor(\n        public elementRef: ElementRef,\n        public changeDetectorRef: ChangeDetectorRef,\n        private ngZone: NgZone,\n        private renderer: Renderer2\n    ) {}\n\n    addArea(area: McSplitterAreaDirective): void {\n        const index: number = this.areas.length;\n        const order: number = index * this.areaPositionDivider;\n        const size: number = area.getSize();\n\n        area.setOrder(order);\n\n        this.areas.push({\n            area,\n            index,\n            order,\n            initialSize: size\n        });\n    }\n\n    ngOnInit(): void {\n        if (!this.direction) {\n            this.direction = Direction.Horizontal;\n        }\n\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'column' : 'row');\n    }\n\n    onMouseDown(event: MouseEvent, leftAreaIndex: number, rightAreaIndex: number) {\n        if (this.disabled) { return; }\n\n        event.preventDefault();\n\n        const leftArea = this.areas[leftAreaIndex];\n        const rightArea = this.areas[rightAreaIndex];\n\n        const startPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        leftArea.initialSize = leftArea.area.getSize();\n        rightArea.initialSize = rightArea.area.getSize();\n\n        this.areas.forEach((item) => {\n            const size = item.area.getSize();\n            item.area.disableFlex();\n            item.area.setSize(size);\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mouseup',\n                    () => this.onMouseUp()\n                )\n            );\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mousemove',\n                    (e: MouseEvent) => this.onMouseMove(e, startPoint, leftArea, rightArea)\n                )\n            );\n        });\n\n        this.isDragging = true;\n    }\n\n    removeArea(area: McSplitterAreaDirective): void {\n        let indexToRemove: number = -1;\n\n        this.areas.some((item, index) => {\n            if (item.area === area) {\n                indexToRemove = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        if (indexToRemove === -1) {\n            return;\n        }\n\n        this.areas.splice(indexToRemove, 1);\n    }\n\n    isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private updateGutter(): void {\n        this.gutters.forEach((gutter) => {\n            if (gutter.dragged) {\n                gutter.dragged = false;\n\n                this.changeDetectorRef.detectChanges();\n            }\n        });\n\n    }\n\n    private onMouseMove(event: MouseEvent, startPoint: IPoint, leftArea: IArea, rightArea: IArea) {\n        if (!this.isDragging || this.disabled) { return; }\n\n        const endPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        const offset = this.isVertical()\n            ? startPoint.y - endPoint.y\n            : startPoint.x - endPoint.x;\n\n        const newLeftAreaSize = leftArea.initialSize - offset;\n        const newRightAreaSize = rightArea.initialSize + offset;\n\n        const minLeftAreaSize = leftArea.area.getMinSize();\n        const minRightAreaSize = rightArea.area.getMinSize();\n\n        if (newLeftAreaSize <= minLeftAreaSize || newRightAreaSize <= minRightAreaSize) {\n            return;\n        } else if (newLeftAreaSize <= 0) {\n            leftArea.area.setSize(0);\n            rightArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n        } else if (newRightAreaSize <= 0) {\n            leftArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n            rightArea.area.setSize(0);\n        } else {\n            leftArea.area.setSize(newLeftAreaSize);\n            rightArea.area.setSize(newRightAreaSize);\n        }\n    }\n\n    private onMouseUp() {\n        while (this.listeners.length > 0) {\n            const unsubscribe = this.listeners.pop();\n\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        }\n\n        this.isDragging = false;\n\n        this.updateGutter();\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n}\n\n@Directive({\n    selector: '[mc-splitter-area]',\n    host: {\n        class: 'mc-splitter-area'\n    }\n})\nexport class McSplitterAreaDirective implements OnInit, OnDestroy {\n    constructor(\n        private elementRef: ElementRef,\n        private renderer: Renderer2,\n        private splitter: McSplitterComponent\n    ) {}\n\n    disableFlex(): void {\n        this.renderer.removeStyle(this.elementRef.nativeElement, 'flex');\n    }\n\n    ngOnInit(): void {\n        this.splitter.addArea(this);\n\n        this.removeStyle(StyleProperty.MaxWidth);\n\n        if (this.splitter.direction === Direction.Vertical) {\n            this.setStyle(StyleProperty.Width, '100%');\n            this.removeStyle(StyleProperty.Height);\n        } else {\n            this.setStyle(StyleProperty.Height, '100%');\n            this.removeStyle(StyleProperty.Width);\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.splitter.removeArea(this);\n    }\n\n    setOrder(order: number): void {\n        this.setStyle(StyleProperty.Order, order);\n    }\n\n    setSize(size: number): void {\n        if (size) {\n            const sz = coerceNumberProperty(size);\n            this.setStyle(this.getSizeProperty(), coerceCssPixelValue(sz));\n        }\n    }\n\n    getSize(): number {\n        return this.elementRef.nativeElement[this.getOffsetSizeProperty()];\n    }\n\n    getMinSize(): number {\n        const styles = getComputedStyle(this.elementRef.nativeElement);\n\n        return parseFloat(styles[this.getMinSizeProperty()]);\n    }\n\n    private isVertical(): boolean {\n        return this.splitter.direction === Direction.Vertical;\n    }\n\n    private getMinSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.MinHeight\n            : StyleProperty.MinWidth;\n    }\n\n    private getOffsetSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.OffsetHeight\n            : StyleProperty.OffsetWidth;\n    }\n\n    private getSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.Height\n            : StyleProperty.Width;\n    }\n\n    private setStyle(style: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, style, value);\n    }\n\n    private removeStyle(style: StyleProperty) {\n        this.renderer.removeStyle(this.elementRef.nativeElement, style);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McGutterDirective, McSplitterAreaDirective, McSplitterComponent } from './splitter.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McIconModule\n    ],\n    exports: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ],\n    declarations: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ]\n})\nexport class McSplitterModule {\n}\n"]}