{"version":3,"sources":["ng://@ptsecurity/mosaic/splitter/splitter.component.ts","ng://@ptsecurity/mosaic/splitter/splitter.module.ts"],"names":["Direction","Horizontal","Vertical","McGutterDirective","elementRef","renderer","this","_direction","_order","_size","dragged","Object","defineProperty","prototype","direction","order","coerceNumberProperty","size","ngOnInit","setStyle","coerceCssPixelValue","isVertical","property","value","nativeElement","Directive","args","selector","host","class","[class.mc-gutter_vertical]","[class.mc-gutter_dragged]","(mousedown)","ElementRef","Renderer2","Input","McSplitterComponent","changeDetectorRef","ngZone","areas","isDragging","areaPositionDivider","listeners","_hideGutters","_disabled","_gutterSize","coerceBooleanProperty","disabled","gutterSize","addArea","area","index","length","getSize","setOrder","push","initialSize","onMouseDown","event","leftAreaIndex","rightAreaIndex","_this","preventDefault","leftArea","rightArea","startPoint","x","screenX","y","screenY","forEach","item","disableFlex","setSize","runOutsideAngular","listen","onMouseUp","e","onMouseMove","removeArea","indexToRemove","some","splice","updateGutter","gutters","gutter","detectChanges","endPoint","offset","newLeftAreaSize","newRightAreaSize","minLeftAreaSize","getMinSize","minRightAreaSize","unsubscribe","pop","Component","exportAs","preserveWhitespaces","template","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","ChangeDetectorRef","NgZone","ViewChildren","McSplitterAreaDirective","splitter","removeStyle","ngOnDestroy","sz","getSizeProperty","getOffsetSizeProperty","styles","getComputedStyle","parseFloat","getMinSizeProperty","style","McSplitterModule","NgModule","imports","CommonModule","McIconModule","exports","declarations"],"mappings":"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","sourcesContent":["import { coerceBooleanProperty, coerceCssPixelValue, coerceNumberProperty } from '@angular/cdk/coercion';\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    QueryList,\n    Renderer2,\n    ViewChildren,\n    ViewEncapsulation\n} from '@angular/core';\n\n\ninterface IArea {\n    area: McSplitterAreaDirective;\n    index: number;\n    order: number;\n    initialSize: number;\n}\n\ninterface IPoint {\n    x: number;\n    y: number;\n}\n\nconst enum StyleProperty {\n    Flex = 'flex',\n    FlexBasis = 'flex-basis',\n    FlexDirection = 'flex-direction',\n    Height = 'height',\n    MaxWidth = 'max-width',\n    MinHeight = 'min-height',\n    MinWidth = 'minWidth',\n    OffsetHeight = 'offsetHeight',\n    OffsetWidth = 'offsetWidth',\n    Order = 'order',\n    Width = 'width'\n}\n\nexport enum Direction {\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\n\n@Directive({\n    selector: 'mc-gutter',\n    host: {\n        class: 'mc-gutter',\n        '[class.mc-gutter_vertical]': 'isVertical()',\n        '[class.mc-gutter_dragged]': 'dragged',\n        '(mousedown)': 'dragged = true'\n    }\n})\nexport class McGutterDirective implements OnInit {\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    private _direction: Direction = Direction.Vertical;\n\n    get order(): number {\n        return this._order;\n    }\n\n    @Input()\n    set order(order: number) {\n        this._order = coerceNumberProperty(order);\n    }\n\n    private _order: number = 0;\n\n    get size(): number {\n        return this._size;\n    }\n\n    @Input()\n    set size(size: number) {\n        this._size = coerceNumberProperty(size);\n    }\n\n    private _size: number = 6;\n\n    dragged: boolean = false;\n\n    constructor(\n        private elementRef: ElementRef,\n        private renderer: Renderer2\n    ) {}\n\n    ngOnInit(): void {\n        this.setStyle(StyleProperty.FlexBasis, coerceCssPixelValue(this.size));\n        this.setStyle(this.isVertical() ? StyleProperty.Height : StyleProperty.Width, coerceCssPixelValue(this.size));\n        this.setStyle(StyleProperty.Order, this.order);\n\n        if (!this.isVertical()) {\n            this.setStyle(StyleProperty.Height, '100%');\n        }\n\n        // fix IE issue with gutter icon. flex-direction is requied for flex alignment options\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'row' : 'column');\n    }\n\n    isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n}\n\n\n@Component({\n    selector: 'mc-splitter',\n    exportAs: 'mcSplitter',\n    host: {\n        class: 'mc-splitter'\n    },\n    preserveWhitespaces: false,\n    styleUrls: ['splitter.scss'],\n    templateUrl: './splitter.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSplitterComponent implements OnInit {\n    readonly areas: IArea[] = [];\n\n    @ViewChildren(McGutterDirective) gutters: QueryList<McGutterDirective>;\n\n    private isDragging: boolean = false;\n\n    private readonly areaPositionDivider: number = 2;\n    private readonly listeners: (() => void)[] = [];\n\n    get hideGutters(): boolean {\n        return this._hideGutters;\n    }\n\n    @Input()\n    set hideGutters(value: boolean) {\n        this._hideGutters = coerceBooleanProperty(value);\n    }\n\n    private _hideGutters: boolean = false;\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    private _direction: Direction;\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    private _disabled: boolean = false;\n\n    get gutterSize(): number {\n        return this._gutterSize;\n    }\n\n    @Input()\n    set gutterSize(gutterSize: number) {\n        const size = coerceNumberProperty(gutterSize);\n        this._gutterSize = size > 0 ? size : this.gutterSize;\n    }\n\n    private _gutterSize: number = 6;\n\n    constructor(\n        public elementRef: ElementRef,\n        public changeDetectorRef: ChangeDetectorRef,\n        private ngZone: NgZone,\n        private renderer: Renderer2\n    ) {}\n\n    addArea(area: McSplitterAreaDirective): void {\n        const index: number = this.areas.length;\n        const order: number = index * this.areaPositionDivider;\n        const size: number = area.getSize();\n\n        area.setOrder(order);\n\n        this.areas.push({\n            area,\n            index,\n            order,\n            initialSize: size\n        });\n    }\n\n    ngOnInit(): void {\n        if (!this.direction) {\n            this.direction = Direction.Horizontal;\n        }\n\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'column' : 'row');\n    }\n\n    onMouseDown(event: MouseEvent, leftAreaIndex: number, rightAreaIndex: number) {\n        if (this.disabled) { return; }\n\n        event.preventDefault();\n\n        const leftArea = this.areas[leftAreaIndex];\n        const rightArea = this.areas[rightAreaIndex];\n\n        const startPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        leftArea.initialSize = leftArea.area.getSize();\n        rightArea.initialSize = rightArea.area.getSize();\n\n        this.areas.forEach((item) => {\n            const size = item.area.getSize();\n            item.area.disableFlex();\n            item.area.setSize(size);\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mouseup',\n                    () => this.onMouseUp()\n                )\n            );\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mousemove',\n                    (e: MouseEvent) => this.onMouseMove(e, startPoint, leftArea, rightArea)\n                )\n            );\n        });\n\n        this.isDragging = true;\n    }\n\n    removeArea(area: McSplitterAreaDirective): void {\n        let indexToRemove: number = -1;\n\n        this.areas.some((item, index) => {\n            if (item.area === area) {\n                indexToRemove = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        if (indexToRemove === -1) {\n            return;\n        }\n\n        this.areas.splice(indexToRemove, 1);\n    }\n\n    isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private updateGutter(): void {\n        this.gutters.forEach((gutter) => {\n            if (gutter.dragged) {\n                gutter.dragged = false;\n\n                this.changeDetectorRef.detectChanges();\n            }\n        });\n\n    }\n\n    private onMouseMove(event: MouseEvent, startPoint: IPoint, leftArea: IArea, rightArea: IArea) {\n        if (!this.isDragging || this.disabled) { return; }\n\n        const endPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        const offset = this.isVertical()\n            ? startPoint.y - endPoint.y\n            : startPoint.x - endPoint.x;\n\n        const newLeftAreaSize = leftArea.initialSize - offset;\n        const newRightAreaSize = rightArea.initialSize + offset;\n\n        const minLeftAreaSize = leftArea.area.getMinSize();\n        const minRightAreaSize = rightArea.area.getMinSize();\n\n        if (newLeftAreaSize <= minLeftAreaSize || newRightAreaSize <= minRightAreaSize) {\n            return;\n        } else if (newLeftAreaSize <= 0) {\n            leftArea.area.setSize(0);\n            rightArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n        } else if (newRightAreaSize <= 0) {\n            leftArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n            rightArea.area.setSize(0);\n        } else {\n            leftArea.area.setSize(newLeftAreaSize);\n            rightArea.area.setSize(newRightAreaSize);\n        }\n    }\n\n    private onMouseUp() {\n        while (this.listeners.length > 0) {\n            const unsubscribe = this.listeners.pop();\n\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        }\n\n        this.isDragging = false;\n\n        this.updateGutter();\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n}\n\n@Directive({\n    selector: '[mc-splitter-area]',\n    host: {\n        class: 'mc-splitter-area'\n    }\n})\nexport class McSplitterAreaDirective implements OnInit, OnDestroy {\n    constructor(\n        private elementRef: ElementRef,\n        private renderer: Renderer2,\n        private splitter: McSplitterComponent\n    ) {}\n\n    disableFlex(): void {\n        this.renderer.removeStyle(this.elementRef.nativeElement, 'flex');\n    }\n\n    ngOnInit(): void {\n        this.splitter.addArea(this);\n\n        this.removeStyle(StyleProperty.MaxWidth);\n\n        if (this.splitter.direction === Direction.Vertical) {\n            this.setStyle(StyleProperty.Width, '100%');\n            this.removeStyle(StyleProperty.Height);\n        } else {\n            this.setStyle(StyleProperty.Height, '100%');\n            this.removeStyle(StyleProperty.Width);\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.splitter.removeArea(this);\n    }\n\n    setOrder(order: number): void {\n        this.setStyle(StyleProperty.Order, order);\n    }\n\n    setSize(size: number): void {\n        if (size) {\n            const sz = coerceNumberProperty(size);\n            this.setStyle(this.getSizeProperty(), coerceCssPixelValue(sz));\n        }\n    }\n\n    getSize(): number {\n        return this.elementRef.nativeElement[this.getOffsetSizeProperty()];\n    }\n\n    getMinSize(): number {\n        const styles = getComputedStyle(this.elementRef.nativeElement);\n\n        return parseFloat(styles[this.getMinSizeProperty()]);\n    }\n\n    private isVertical(): boolean {\n        return this.splitter.direction === Direction.Vertical;\n    }\n\n    private getMinSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.MinHeight\n            : StyleProperty.MinWidth;\n    }\n\n    private getOffsetSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.OffsetHeight\n            : StyleProperty.OffsetWidth;\n    }\n\n    private getSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.Height\n            : StyleProperty.Width;\n    }\n\n    private setStyle(style: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, style, value);\n    }\n\n    private removeStyle(style: StyleProperty) {\n        this.renderer.removeStyle(this.elementRef.nativeElement, style);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McGutterDirective, McSplitterAreaDirective, McSplitterComponent } from './splitter.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McIconModule\n    ],\n    exports: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ],\n    declarations: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ]\n})\nexport class McSplitterModule {\n}\n"]}