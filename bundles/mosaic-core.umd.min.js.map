{"version":3,"file":"mosaic-core.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../packages/mosaic/core/utils/utils.ts","../../packages/mosaic/core/common-behaviors/common-module.ts","../../packages/mosaic/core/common-behaviors/disabled.ts","../../packages/mosaic/core/common-behaviors/color.ts","../../packages/mosaic/core/common-behaviors/tabindex.ts","../../packages/mosaic/core/common-behaviors/error-state.ts","../../packages/mosaic/core/option/option.ts","../../packages/mosaic/core/overlay/overlay-position-map.ts","../../packages/mosaic/core/select/errors.ts","../../packages/mosaic/core/select/constants.ts","../../packages/mosaic/core/formatters/number/formatter.ts","../../packages/mosaic/core/validation/validation.ts","../../packages/mosaic/core/line/line.ts","../../packages/mosaic/core/error/error-options.ts","../../packages/mosaic/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../packages/mosaic/core/selection/constants.ts","../../packages/mosaic/core/selection/index.ts","../../packages/mosaic/core/services/measure-scrollbar.service.ts","../../packages/mosaic/core/option/optgroup.ts","../../packages/mosaic/core/option/index.ts","../../packages/mosaic/core/label/label-options.ts","../../packages/mosaic/core/animation/fade-animations.ts","../../packages/mosaic/core/animation/animation.ts","../../packages/mosaic/core/select/animations.ts","../../packages/mosaic/core/highlight/highlight.pipe.ts","../../packages/mosaic/core/highlight/index.ts","../../packages/mosaic/core/formatters/index.ts","../../packages/mosaic/core/select/events.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\nexport function isBoolean(val: any): val is boolean { return typeof val === 'boolean'; }\n\nexport function toBoolean(value: any): boolean {\n    return value != null && `${value}` !== 'false';\n}\n","import { BidiModule } from '@angular/cdk/bidi';\nimport { NgModule, InjectionToken, Optional, Inject, isDevMode } from '@angular/core';\n\n\n// Injection token that configures whether the Mosaic sanity checks are enabled.\nexport const MC_SANITY_CHECKS = new InjectionToken<boolean>('mc-sanity-checks', {\n    providedIn: 'root',\n    factory: mcSanityChecksFactory\n});\n\nexport function mcSanityChecksFactory(): boolean {\n    return true;\n}\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Mosaic\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., McTabsModule).\n */\n@NgModule({\n    imports: [ BidiModule ],\n    exports: [ BidiModule ]\n})\nexport class McCommonModule {\n    // Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n    private hasDoneGlobalChecks = false;\n\n    // Reference to the global `document` object.\n    // tslint:disable-next-line: orthodox-getter-and-setter\n    private _document = typeof document === 'object' && document ? document : null;\n\n    // Reference to the global 'window' object.\n    // tslint:disable-next-line: orthodox-getter-and-setter\n    private _window = typeof window === 'object' && window ? window : null;\n\n    constructor(@Optional() @Inject(MC_SANITY_CHECKS) private _sanityChecksEnabled: boolean) {\n        if (this.areChecksEnabled() && !this.hasDoneGlobalChecks) {\n            this.checkDoctypeIsDefined();\n            this.checkThemeIsPresent();\n            this.hasDoneGlobalChecks = true;\n        }\n    }\n\n    // Whether any sanity checks are enabled\n    private areChecksEnabled(): boolean {\n        return this._sanityChecksEnabled && isDevMode() && !this.isTestEnv();\n    }\n\n    // Whether the code is running in tests.\n    private isTestEnv() {\n        // tslint:disable-next-line\n        return this._window && (this._window['__karma__'] || this._window['jasmine']);\n    }\n\n    private checkDoctypeIsDefined(): void {\n        if (this._document && !this._document.doctype) {\n            console.warn(\n                'Current document does not have a doctype. This may cause ' +\n                'some Mosaic components not to behave as expected.'\n            );\n        }\n    }\n\n    private checkThemeIsPresent(): void {\n        if (this._document && typeof getComputedStyle === 'function') {\n            const testElement = this._document.createElement('div');\n\n            testElement.classList.add('mc-theme-loaded-marker');\n            this._document.body.appendChild(testElement);\n\n            const computedStyle = getComputedStyle(testElement);\n\n            // In some situations, the computed style of the test element can be null. For example in\n            // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n            if (computedStyle && computedStyle.display !== 'none') {\n                console.warn(\n                    'Could not find Mosaic core theme. Most Mosaic ' +\n                    'components may not work as expected. For more info refer ' +\n                    'to the theming guide: link there'\n                );\n            }\n\n            this._document.body.removeChild(testElement);\n        }\n    }\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { Constructor } from './constructor';\n\n\n// tslint:disable-next-line naming-convention\nexport interface CanDisable {\n    disabled: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableCtor = Constructor<CanDisable>;\n\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): CanDisableCtor & T {\n    return class extends base {\n        get disabled() {\n            return this._disabled;\n        }\n\n        set disabled(value: any) {\n            this._disabled = coerceBooleanProperty(value);\n        }\n\n        private _disabled: boolean = false;\n\n        constructor(...args: any[]) {\n            // tslint:disable-next-line\n            super(...args);\n        }\n    };\n}\n","import { ElementRef } from '@angular/core';\n\nimport { Constructor } from './constructor';\n\n\n// tslint:disable-next-line:naming-convention\nexport interface CanColor {\n    color: ThemePalette;\n}\n\n/** @docs-private */\nexport type CanColorCtor = Constructor<CanColor>;\n\n// tslint:disable-next-line:naming-convention\nexport interface HasElementRef {\n    _elementRef: ElementRef;\n}\n\nexport enum ThemePalette {\n    Primary = 'primary',\n    Second = 'second',\n    Error = 'error',\n    Default = 'second',\n    Empty = ''\n}\n\n/** Mixin to augment a directive with a `color` property. */\nexport function mixinColor<T extends Constructor<HasElementRef>>(\n    base: T,\n    defaultColor: ThemePalette = ThemePalette.Default\n): CanColorCtor & T {\n    return class extends base {\n\n        get color(): ThemePalette {\n            return this._color;\n        }\n\n        set color(value: ThemePalette) {\n            const colorPalette = value || defaultColor;\n\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mc-${this._color}`);\n                }\n\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mc-${colorPalette}`);\n                }\n\n                this._color = colorPalette;\n            }\n        }\n\n        private _color: ThemePalette;\n\n        constructor(...args: any[]) {\n            super(...args);\n\n            this.color = defaultColor;\n        }\n    };\n}\n\n","import { Constructor } from './constructor';\nimport { CanDisable } from './disabled';\n\n\n// tslint:disable-next-line:naming-convention\nexport interface HasTabIndex {\n    tabIndex: number;\n}\n\nexport type HasTabIndexCtor = Constructor<HasTabIndex>;\n\n// Mixin to augment a directive with a `tabIndex` property.\nexport function mixinTabIndex<T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0): HasTabIndexCtor & T {\n    return class extends base {\n        get tabIndex(): number {\n            return this.disabled ? -1 : this._tabIndex;\n        }\n\n        set tabIndex(value: number) {\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n\n        private _tabIndex: number = defaultTabIndex;\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n    };\n}\n","import { FormControl, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\nimport { ErrorStateMatcher } from '../error/error-options';\n\nimport { Constructor } from './constructor';\n\n\n/** @docs-private */\n// tslint:disable-next-line:naming-convention\nexport interface CanUpdateErrorState {\n\n    readonly stateChanges: Subject<void>;\n\n    errorState: boolean;\n    errorStateMatcher: ErrorStateMatcher;\n\n    updateErrorState();\n}\n\n/** @docs-private */\nexport type CanUpdateErrorStateCtor = Constructor<CanUpdateErrorState>;\n\n/** @docs-private */\n// tslint:disable-next-line:naming-convention\nexport interface HasErrorState {\n    parentFormGroup: FormGroupDirective;\n    parentForm: NgForm;\n    defaultErrorStateMatcher: ErrorStateMatcher;\n    ngControl: NgControl;\n}\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T): CanUpdateErrorStateCtor & T {\n    return class extends base {\n        /** Whether the component is in an error state. */\n        errorState: boolean = false;\n\n        /**\n         * Stream that emits whenever the state of the input changes such that the wrapping\n         * `MatFormField` needs to run change detection.\n         */\n        readonly stateChanges = new Subject<void>();\n\n        errorStateMatcher: ErrorStateMatcher;\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this.parentFormGroup || this.parentForm;\n            const matcher = this.errorStateMatcher || this.defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control as FormControl : null;\n            const newState = matcher.isErrorState(control, parent);\n\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ENTER, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Subject } from 'rxjs';\n\nimport { McOptgroup } from './optgroup';\n\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet uniqueIdCounter = 0;\n\n/** Event object emitted by McOption when selected or deselected. */\nexport class McOptionSelectionChange {\n    constructor(public source: McOption, public isUserInput = false) {}\n}\n\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * @docs-private\n */\n// tslint:disable-next-line: naming-convention\nexport interface McOptionParentComponent {\n    multiple?: boolean;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_OPTION_PARENT_COMPONENT =\n    new InjectionToken<McOptionParentComponent>('MC_OPTION_PARENT_COMPONENT');\n\n/**\n * Single option inside of a `<mc-select>` element.\n */\n@Component({\n    selector: 'mc-option',\n    exportAs: 'mcOption',\n    host: {\n        '[attr.tabindex]': 'getTabIndex()',\n        class: 'mc-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-option-multiple]': 'multiple',\n        '[class.mc-active]': 'active',\n        '[class.mc-disabled]': 'disabled',\n        '[id]': 'id',\n\n        '(click)': 'selectViaInteraction()',\n        '(keydown)': 'handleKeydown($event)'\n    },\n    styleUrls: ['./option.css'],\n    templateUrl: './option.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McOption implements AfterViewChecked, OnDestroy {\n    /** The form value of the option. */\n    @Input() value: any;\n\n    @Input()\n    get showCheckbox() {\n        return this._showCheckbox === undefined ? this.multiple : this._showCheckbox;\n    }\n\n    set showCheckbox(value) {\n        this._showCheckbox = coerceBooleanProperty(value);\n    }\n\n    private _showCheckbox: boolean;\n\n    /** Event emitted when the option is selected or deselected. */\n    // tslint:disable-next-line:no-output-on-prefix\n    @Output() readonly onSelectionChange = new EventEmitter<McOptionSelectionChange>();\n\n    /** Emits when the state of the option changes and any parents have to be notified. */\n    readonly stateChanges = new Subject<void>();\n\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue(): string {\n        // TODO: Add input property alternative for node envs.\n        return (this.getHostElement().textContent || '').trim();\n    }\n\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n        return this.parent && this.parent.multiple;\n    }\n\n    get id(): string {\n        return this._id;\n    }\n\n    private _id = `mc-option-${uniqueIdCounter++}`;\n\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    private _selected = false;\n\n    @Input()\n    get disabled() {\n        return (this.group && this.group.disabled) || this._disabled;\n    }\n\n    set disabled(value: any) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    private _disabled = false;\n\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active(): boolean {\n        return this._active;\n    }\n\n    private _active = false;\n\n    private mostRecentViewValue = '';\n\n    constructor(\n        private readonly element: ElementRef,\n        private readonly changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_OPTION_PARENT_COMPONENT) private readonly parent: McOptionParentComponent,\n        @Optional() readonly group: McOptgroup\n    ) {}\n\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mc-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n\n            if (viewValue !== this.mostRecentViewValue) {\n                this.mostRecentViewValue = viewValue;\n                this.stateChanges.next();\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n    }\n\n    getHeight(): number {\n        // tslint:disable-next-line:naming-convention\n        const DOMRect: DOMRect = this.element.nativeElement.getClientRects()[0];\n\n        return DOMRect ? DOMRect.height : 0;\n    }\n\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent();\n        }\n    }\n\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent();\n        }\n    }\n\n    focus(): void {\n        const element = this.getHostElement();\n\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles(): void {\n        if (!this._active) {\n            this._active = true;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles(): void {\n        if (this._active) {\n            this._active = false;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        return this.viewValue;\n    }\n\n    /** Ensures the option is selected when activated from the keyboard. */\n    handleKeydown(event: KeyboardEvent): void {\n        // tslint:disable-next-line\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\n            this.selectViaInteraction();\n\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    selectViaInteraction(): void {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent(true);\n        }\n    }\n\n    getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    getHostElement(): HTMLElement {\n        return this.element.nativeElement;\n    }\n\n    /** Emits the selection change event. */\n    private emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McOptionSelectionChange(this, isUserInput));\n    }\n}\n\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nexport function countGroupLabelsBeforeOption(\n    optionIndex: number,\n    options: QueryList<McOption>,\n    optionGroups: QueryList<McOptgroup>\n): number {\n\n    if (optionGroups.length) {\n        const optionsArray = options.toArray();\n        const groups = optionGroups.toArray();\n\n        let groupCounter = 0;\n\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n\n        return groupCounter;\n    }\n\n    return 0;\n}\n\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionIndex Index of the option to be scrolled into the view.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nexport function getOptionScrollPosition(\n    optionIndex: number,\n    optionHeight: number,\n    currentScrollPosition: number,\n    panelHeight: number\n): number {\n    const optionOffset = optionIndex * optionHeight;\n\n    if (optionOffset < currentScrollPosition) { return optionOffset; }\n\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n\n    return currentScrollPosition;\n}\n\n","import { ConnectionPositionPair } from '@angular/cdk/overlay';\n\n\nexport const POSITION_MAP: { [key: string]: ConnectionPositionPair } = {\n    top         : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom'\n    },\n    topCenter   : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom'\n    },\n    topLeft     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'bottom'\n    },\n    topRight    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    },\n    right       : {\n        originX : 'end',\n        originY : 'center',\n        overlayX: 'start',\n        overlayY: 'center'\n    },\n    rightTop    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    rightBottom : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'bottom'\n    },\n    bottom      : {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomCenter: {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomLeft  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    bottomRight : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    left        : {\n        originX : 'start',\n        originY : 'center',\n        overlayX: 'end',\n        overlayY: 'center'\n    },\n    leftTop     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    leftBottom  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    }\n};\n\nexport const DEFAULT_4_POSITIONS = objectValues([\n    POSITION_MAP.top, POSITION_MAP.right, POSITION_MAP.bottom, POSITION_MAP.left\n]);\n\nexport const EXTENDED_OVERLAY_POSITIONS = objectValues([\n    POSITION_MAP.top, POSITION_MAP.topLeft, POSITION_MAP.topRight, POSITION_MAP.right, POSITION_MAP.rightTop,\n    POSITION_MAP.rightBottom, POSITION_MAP.bottom, POSITION_MAP.bottomLeft, POSITION_MAP.bottomRight,\n    POSITION_MAP.left, POSITION_MAP.leftTop, POSITION_MAP.leftBottom\n]);\n\nexport const POSITION_TO_CSS_MAP: {[key: string]: string} = {\n    top: 'top',\n    topLeft: 'top-left',\n    topRight: 'top-right',\n    right: 'right',\n    rightTop: 'right-top',\n    rightBottom: 'right-bottom',\n    left: 'left',\n    leftTop: 'left-top',\n    leftBottom: 'left-bottom',\n    bottom: 'bottom',\n    bottomLeft: 'bottom-left',\n    bottomRight: 'bottom-right'\n};\n\nfunction arrayMap<T, S>(array: T[], iteratee: (item: T, index: number, arr: T[]) => S): S[] {\n    let index = -1;\n    const length = array == null ? 0 : array.length;\n    const result = Array(length);\n\n    while (++index < length) {\n        result[ index ] = iteratee(array[ index ], index, array);\n    }\n\n    return result;\n}\nfunction baseValues<T>(object: { [key: string]: T } | T[], props: string[]): T[] {\n    return arrayMap(props,  (key) => {\n        return object[ key ];\n    });\n}\nfunction objectValues<T>(object: { [key: string]: T } | T[]): T[] {\n    return object == null ? [] : baseValues(object, Object.keys(object));\n}\n","/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nexport function getMcSelectDynamicMultipleError(): Error {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nexport function getMcSelectNonArrayValueError(): Error {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nexport function getMcSelectNonFunctionValueError(): Error {\n    return Error('`compareWith` must be a function.');\n}\n","import { ScrollStrategy, Overlay, RepositionScrollStrategy } from '@angular/cdk/overlay';\nimport { InjectionToken } from '@angular/core';\n\n\n/** The max height of the select's overlay panel */\nexport const SELECT_PANEL_MAX_HEIGHT = 224;\n\n/** The panel's padding on the x-axis */\nexport const SELECT_PANEL_PADDING_X = 1;\n\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\n/* tslint:disable-next-line:no-magic-numbers */\nexport const SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nexport const SELECT_PANEL_VIEWPORT_PADDING = 8;\n\n\n/** Injection token that determines the scroll handling while a select is open. */\nexport const MC_SELECT_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('mc-select-scroll-strategy');\n\n/** @docs-private */\nexport function mcSelectScrollStrategyProviderFactory(overlay: Overlay):\n    () => RepositionScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MC_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: mcSelectScrollStrategyProviderFactory\n};\n","/* tslint:disable:naming-convention */\nimport { Inject, Injectable, InjectionToken, Optional, Pipe, PipeTransform } from '@angular/core';\n\n\nexport const MC_LOCALE_ID = new InjectionToken<string>('McLocaleId');\n\nexport const DEFAULT_MC_LOCALE_ID = 'ru';\n\n\nfunction isEmpty(value: any): boolean {\n    return value == null || value === '' || value !== value;\n}\n\nfunction strToNumber(value: number | string): number {\n    if (typeof value === 'string' && !isNaN(Number(value) - parseFloat(value))) {\n        return Number(value);\n    }\n\n    if (typeof value !== 'number') {\n        throw new Error(`${value} is not a number`);\n    }\n\n    return value;\n}\n\nexport const NUMBER_FORMAT_REGEXP = /^(\\d+)?\\.((\\d+)(-(\\d+))?)?$/;\n\nconst minIntGroupPosition = 1;\nconst minFractionGroupPosition = 3;\nconst maxFractionGroupPosition = 5;\n\ninterface NumberFormatOptions {\n    useGrouping: boolean;\n\n    minimumIntegerDigits: number;\n    minimumFractionDigits: number;\n    maximumFractionDigits: number;\n    minimumSignificantDigits: number;\n    maximumSignificantDigits: number;\n\n    localeMatcher?: string;\n    style?: string;\n\n    currency?: string;\n    currencyDisplay?: string;\n}\n\nclass ParsedDigitsInfo {\n    minimumIntegerDigits: number;\n    minimumFractionDigits: number;\n    maximumFractionDigits: number;\n}\n\nfunction parseDigitsInfo(digitsInfo: string): ParsedDigitsInfo {\n    const parts = digitsInfo.match(NUMBER_FORMAT_REGEXP);\n\n    if (parts === null) {\n        throw new Error(`${digitsInfo} is not a valid digit info`);\n    }\n\n    const minIntPart = parts[minIntGroupPosition];\n    const minFractionPart = parts[minFractionGroupPosition];\n    const maxFractionPart = parts[maxFractionGroupPosition];\n\n    const result = new ParsedDigitsInfo();\n\n    if (minIntPart != null) {\n        result.minimumIntegerDigits = parseInt(minIntPart);\n    }\n\n    if (minFractionPart != null) {\n        result.minimumFractionDigits = parseInt(minFractionPart);\n    }\n\n    if (maxFractionPart != null) {\n        result.maximumFractionDigits = parseInt(maxFractionPart);\n    } else if (minFractionPart != null && result.minimumFractionDigits > result.maximumFractionDigits) {\n        result.maximumFractionDigits = result.minimumFractionDigits;\n    }\n\n    return result;\n}\n\n\n@Injectable({ providedIn: 'root' })\n@Pipe({name: 'mcNumber'})\nexport class McDecimalPipe implements PipeTransform {\n    constructor(@Optional() @Inject(MC_LOCALE_ID) private _locale: string) {}\n\n    /**\n     * @param value The number to be formatted.\n     * @param digitsInfo Decimal representation options, specified by a string\n     * in the following format:<br>\n     * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.\n     *   - `minIntegerDigits`: The minimum number of integer digits before the decimal point.\n     * Default is `1`.\n     *   - `minFractionDigits`: The minimum number of digits after the decimal point.\n     * Default is `0`.\n     *   - `maxFractionDigits`: The maximum number of digits after the decimal point.\n     * Default is `3`.\n     * @param locale A locale code for the locale format rules to use.\n     * When not supplied, uses the value of `MC_LOCALE_ID`, which is `ru` by default.\n     */\n    transform(value: any, digitsInfo?: string, locale?: string): string | null {\n        if (isEmpty(value)) { return null; }\n\n        const currentLocale = locale || this._locale || DEFAULT_MC_LOCALE_ID;\n\n        let parsedDigitsInfo;\n\n        if (digitsInfo) {\n            parsedDigitsInfo = parseDigitsInfo(digitsInfo);\n        }\n\n        const options: NumberFormatOptions = {\n            useGrouping: true,\n            minimumIntegerDigits: 1,\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 3,\n            ...parsedDigitsInfo\n        };\n\n        try {\n            const num = strToNumber(value);\n\n            return Intl.NumberFormat.call(this, currentLocale, options).format(num);\n        } catch (error) {\n            throw Error(`InvalidPipeArgument: McDecimalPipe for pipe '${JSON.stringify(error.message)}'`);\n        }\n    }\n}\n","import { InjectionToken } from '@angular/core';\nimport {\n    AbstractControl,\n    NgControl,\n    NgForm,\n    RequiredValidator,\n    ValidationErrors,\n    Validator,\n    ValidatorFn\n} from '@angular/forms';\n\n\n// tslint:disable-next-line:naming-convention\nexport interface McValidationOptions {\n    useValidation: boolean;\n}\n\nexport const MC_VALIDATION = new InjectionToken<McValidationOptions>(\n    'McUseValidation',\n    { factory: () => ({ useValidation: true }) }\n    );\n\n\nfunction setValidState(control: AbstractControl, validator: ValidatorFn): void {\n    if (!control) { return; }\n\n    control.clearValidators();\n    control.updateValueAndValidity({ emitEvent: false });\n    control.setValidators(validator);\n}\n\n\n/** This function do next:\n * - run validation on submitting parent form\n * - prevent validation in required validator if form doesn't submitted\n * - if control has focus validation will be prevented\n */\nexport function setMosaicValidation(component) {\n    const ngControl = component.ngControl;\n\n    if (!ngControl) { return; }\n\n    const parentForm: NgForm = component.parentForm || component.parentFormGroup;\n\n    if (parentForm) {\n        parentForm.ngSubmit.subscribe(() => {\n            // tslint:disable-next-line: no-unnecessary-type-assertion\n            ngControl.control!.updateValueAndValidity({ emitEvent: false });\n        });\n    }\n\n    if (component.ngModel) {\n        setMosaicValidationForModelControl(component, component.rawValidators, parentForm);\n    } else if (component.formControlName || component.ngControl) {\n        setMosaicValidationForFormControl(component, parentForm, ngControl);\n    }\n}\nexport function setMosaicValidationForModelControl(component, validators: Validator[], parentForm: NgForm) {\n    if (!validators) { return; }\n\n    validators.forEach((validator: Validator) => {\n        // tslint:disable-next-line: no-unbound-method\n        const originalValidate = validator.validate;\n\n        if (validator instanceof RequiredValidator) {\n            // changed required validation logic\n            validator.validate = (control: AbstractControl): ValidationErrors | null => {\n                if (parentForm && !parentForm.submitted) { return null; }\n\n                return originalValidate.call(validator, control);\n            };\n        } else {\n            // changed all other validation logic\n            validator.validate = (control: AbstractControl): ValidationErrors | null => {\n                if (component.focused) { return null; }\n\n                return originalValidate.call(validator, control);\n            };\n        }\n    });\n}\n\nexport function setMosaicValidationForFormControl(component, parentForm: NgForm, ngControl: NgControl) {\n    const originalValidator = ngControl.control!.validator;\n\n    // changed required validation logic after initialization\n    if (ngControl.invalid && ngControl.errors!.required) {\n        Promise.resolve().then(() => setValidState(ngControl.control!, originalValidator!));\n    }\n\n    // check dynamic updates\n    ngControl.statusChanges!\n        .subscribe(() => {\n            // changed required validation logic\n            if (ngControl.invalid && (parentForm && !parentForm.submitted) && ngControl.errors!.required) {\n                setValidState(ngControl.control!, originalValidator!);\n            }\n\n            // changed all other validation logic\n            if (ngControl.invalid && component.focused) {\n                setValidState(ngControl.control!, originalValidator!);\n            }\n        });\n}\n","import { NgModule, Directive, ElementRef, QueryList } from '@angular/core';\n\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(McLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({\n    selector: '[mc-line], [mcLine]',\n    host: { class: 'mc-line' }\n})\nexport class McLine {}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nexport class McLineSetter {\n    constructor(private _lines: QueryList<McLine>, private _element: ElementRef) {\n        this.setLineClass(this._lines.length);\n\n        this._lines.changes.subscribe(() => {\n            this.setLineClass(this._lines.length);\n        });\n    }\n\n    private setLineClass(count: number): void {\n        const minLineClassNumber = 2;\n        const maxLineClassNumber = 3;\n        this.resetClasses();\n        if (count === minLineClassNumber || count === maxLineClassNumber) {\n            this.setClass(`mc-${count}-line`, true);\n        } else if (count > maxLineClassNumber) {\n            this.setClass(`mc-multi-line`, true);\n        }\n    }\n\n    private resetClasses(): void {\n        this.setClass('mc-2-line', false);\n        this.setClass('mc-3-line', false);\n        this.setClass('mc-multi-line', false);\n    }\n\n    private setClass(className: string, isAdd: boolean): void {\n        if (isAdd) {\n            this._element.nativeElement.classList.add(className);\n        } else {\n            this._element.nativeElement.classList.remove(className);\n        }\n    }\n}\n\n@NgModule({\n    imports: [],\n    exports: [McLine],\n    declarations: [McLine]\n})\nexport class McLineModule {}\n","import { Injectable } from '@angular/core';\nimport { FormGroupDirective, NgForm, FormControl } from '@angular/forms';\n\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n@Injectable()\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\n\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n@Injectable({ providedIn: 'root' })\nexport class ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\n\nexport type McPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mc-primary .mc-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mc-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n@Component({\n    selector: 'mc-pseudo-checkbox',\n    templateUrl: 'pseudo-checkbox.partial.html',\n    styleUrls: ['pseudo-checkbox.css'],\n    host: {\n        class: 'mc-pseudo-checkbox',\n        '[class.mc-indeterminate]': 'state === \"indeterminate\"',\n        '[class.mc-checked]': 'state === \"checked\"',\n        '[class.mc-disabled]': 'disabled'\n    },\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McPseudoCheckbox {\n    @Input() state: McPseudoCheckboxState = 'unchecked';\n\n    @Input() disabled: boolean = false;\n}\n","export enum MultipleMode {\n    CHECKBOX = 'checkbox',\n    KEYBOARD = 'keyboard'\n}\n","import { NgModule } from '@angular/core';\n\nimport { McPseudoCheckbox } from './pseudo-checkbox/pseudo-checkbox';\n\n\n@NgModule({\n    exports: [McPseudoCheckbox],\n    declarations: [McPseudoCheckbox]\n})\nexport class McPseudoCheckboxModule {}\n\n\nexport * from './pseudo-checkbox/pseudo-checkbox';\nexport * from './constants';\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class McMeasureScrollbarService {\n\n    get scrollBarWidth(): number {\n        if (this._scrollBarWidth) {\n            return this._scrollBarWidth;\n        }\n        this.initScrollBarWidth();\n\n        return this._scrollBarWidth;\n    }\n\n    private _scrollBarWidth: number;\n    private scrollbarMeasure = {\n        position: 'absolute',\n        top: '-9999px',\n        width: '50px',\n        height: '50px',\n        overflow: 'scroll'\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private document: any\n    ) {\n        this.initScrollBarWidth();\n    }\n\n    initScrollBarWidth() {\n        const scrollDiv = this.document.createElement('div');\n\n        // tslint:disable-next-line\n        for (const scrollProp in this.scrollbarMeasure) {\n            if (this.scrollbarMeasure.hasOwnProperty(scrollProp)) {\n                scrollDiv.style[scrollProp] = this.scrollbarMeasure[scrollProp];\n            }\n        }\n\n        this.document.body.appendChild(scrollDiv);\n\n        const width = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n        this.document.body.removeChild(scrollDiv);\n        this._scrollBarWidth = width;\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\nimport { mixinDisabled, CanDisable, CanDisableCtor } from '../common-behaviors/index';\n\n\n/** @docs-private */\nexport class McOptgroupBase {}\n\n// tslint:disable-next-line: naming-convention\nexport const McOptgroupMixinBase: CanDisableCtor & typeof McOptgroupBase = mixinDisabled(McOptgroupBase);\n\nlet uniqueOptgroupIdCounter = 0;\n\n/**\n * Component that is used to group instances of `mc-option`.\n */\n@Component({\n    selector: 'mc-optgroup',\n    exportAs: 'mcOptgroup',\n    templateUrl: 'optgroup.html',\n    styleUrls: ['./optgroup.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    host: {\n        class: 'mc-optgroup',\n        '[class.mc-disabled]': 'disabled'\n    }\n})\nexport class McOptgroup extends McOptgroupMixinBase implements CanDisable {\n    @Input() label: string;\n\n    /** Unique id for the underlying label. */\n    labelId: string = `mc-optgroup-label-${uniqueOptgroupIdCounter++}`;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McPseudoCheckboxModule } from '../selection/index';\n\nimport { McOptgroup } from './optgroup';\nimport { McOption } from './option';\n\n\n@NgModule({\n    imports: [CommonModule, McPseudoCheckboxModule],\n    exports: [McOption, McOptgroup],\n    declarations: [McOption, McOptgroup]\n})\nexport class McOptionModule {}\n\n\nexport * from './option';\nexport * from './optgroup';\n","import { InjectionToken } from '@angular/core';\n\n\n/** InjectionToken that can be used to specify the global label options. */\nexport const MC_LABEL_GLOBAL_OPTIONS =\n    new InjectionToken<LabelOptions>('mc-label-global-options');\n\n/** Type for the available floatLabel values. */\nexport type FloatLabelType = 'always' | 'never' | 'auto';\n\n/** Configurable options for floating labels. */\n// tslint:disable-next-line:naming-convention\nexport interface LabelOptions {\n    /**\n     * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n     * Default behavior is assumed to be `auto`.\n     */\n    float?: FloatLabelType;\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\nexport const fadeAnimation: AnimationTriggerMetadata =  trigger('fadeAnimation', [\n    state('void', style({ opacity: 0 })),\n    state('true', style({ opacity: 1 })),\n    state('false', style({ opacity: 0 })),\n    transition('* => true', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n    transition('* => void', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)'))\n]);\n","export enum AnimationCurves {\n    StandardCurve = 'cubic-bezier(0.4,0.0,0.2,1)',\n    DecelerationCurve = 'cubic-bezier(0.0,0.0,0.2,1)',\n    AccelerationCurve = 'cubic-bezier(0.4,0.0,1,1)',\n    SharpCurve = 'cubic-bezier(0.4,0.0,0.6,1)'\n}\n","import {\n    animate,\n    AnimationTriggerMetadata,\n    state,\n    style,\n    transition,\n    trigger,\n    query,\n    animateChild,\n    group\n} from '@angular/animations';\n\n\n/**\n * The following are all the animations for the mc-select component, with each\n * const containing the metadata for one animation.\n *\n */\nexport const mcSelectAnimations: {\n    readonly transformPanel: AnimationTriggerMetadata;\n    readonly fadeInContent: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        transition('void => *', group([\n            query('@fadeInContent', animateChild()),\n            animate('150ms cubic-bezier(0.25, 0.8, 0.25, 1)')\n        ])),\n        transition('* => void', [\n            animate('250ms 100ms linear', style({ opacity: 0 }))\n        ])\n    ]),\n\n    /**\n     * This animation fades in the background color and text content of the\n     * select's options. It is time delayed to occur 100ms after the overlay\n     * panel has transformed in.\n     */\n    fadeInContent: trigger('fadeInContent', [\n        state('showing', style({ opacity: 1 })),\n        transition('void => showing', [\n            style({ opacity: 0 }),\n            animate('150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const transformPanel = mcSelectAnimations.transformPanel;\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const fadeInContent = mcSelectAnimations.fadeInContent;\n","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({ name: 'mcHighlight' })\nexport class McHighlightPipe implements PipeTransform {\n    transform(value: any, args: any): any {\n        if (!args) { return value; }\n\n        return value.replace(new RegExp(`(${args})`, 'gi'), '<mark class=\"mc-highlight\">$1</mark>');\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McHighlightPipe } from './highlight.pipe';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McHighlightPipe],\n    declarations: [McHighlightPipe]\n})\nexport class McHighlightModule {}\n\n\nexport * from './highlight.pipe';\n","import { NgModule } from '@angular/core';\n\nimport { McDecimalPipe } from './number/formatter';\n\n\n@NgModule({\n    exports: [\n        McDecimalPipe\n    ],\n    declarations: [\n        McDecimalPipe\n    ]\n})\nexport class McFormattersModule {}\n\n\nexport * from './number/formatter';\n","export const selectEvents = 'selectEvents';\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","isBoolean","val","toBoolean","value","mcSanityChecksFactory","mixinDisabled","base","_super","class_1","args","_i","arguments","length","_this","apply","_disabled","tslib_1.__extends","defineProperty","coerceBooleanProperty","mixinColor","defaultColor","ThemePalette","Default","color","_color","colorPalette","_elementRef","nativeElement","classList","remove","add","mixinTabIndex","defaultTabIndex","_tabIndex","disabled","mixinErrorState","errorState","stateChanges","Subject","updateErrorState","oldState","parent","parentFormGroup","parentForm","matcher","errorStateMatcher","defaultErrorStateMatcher","control","ngControl","newState","isErrorState","next","countGroupLabelsBeforeOption","optionIndex","options","optionGroups","optionsArray","toArray","groups","groupCounter","i","group","getOptionScrollPosition","optionHeight","currentScrollPosition","panelHeight","optionOffset","Math","max","arrayMap","array","iteratee","index","result","Array","baseValues","object","props","key","objectValues","keys","getMcSelectDynamicMultipleError","Error","getMcSelectNonArrayValueError","getMcSelectNonFunctionValueError","mcSelectScrollStrategyProviderFactory","overlay","scrollStrategies","reposition","isEmpty","strToNumber","isNaN","Number","parseFloat","parseDigitsInfo","digitsInfo","parts","match","NUMBER_FORMAT_REGEXP","minIntPart","minIntGroupPosition","minFractionPart","minFractionGroupPosition","maxFractionPart","maxFractionGroupPosition","ParsedDigitsInfo","minimumIntegerDigits","parseInt","minimumFractionDigits","maximumFractionDigits","setValidState","validator","clearValidators","updateValueAndValidity","emitEvent","setValidators","setMosaicValidation","component","ngSubmit","subscribe","ngModel","setMosaicValidationForModelControl","rawValidators","formControlName","setMosaicValidationForFormControl","validators","forEach","originalValidate","validate","RequiredValidator","submitted","call","focused","originalValidator","invalid","required","Promise","resolve","then","setPrototypeOf","__proto__","p","hasOwnProperty","__assign","assign","t","s","n","MC_SANITY_CHECKS","InjectionToken","providedIn","factory","McCommonModule","_sanityChecksEnabled","hasDoneGlobalChecks","_document","document","_window","window","areChecksEnabled","checkDoctypeIsDefined","checkThemeIsPresent","isDevMode","isTestEnv","doctype","console","warn","getComputedStyle","testElement","createElement","body","appendChild","computedStyle","display","removeChild","type","NgModule","imports","BidiModule","exports","Boolean","decorators","Optional","Inject","Primary","Second","Empty","McLine","Directive","selector","host","class","McLineSetter","_lines","_element","setLineClass","changes","count","resetClasses","setClass","className","isAdd","McLineModule","declarations","ShowOnDirtyErrorStateMatcher","form","dirty","Injectable","ErrorStateMatcher","touched","McPseudoCheckbox","state","Component","template","styles","[class.mc-indeterminate]","[class.mc-checked]","[class.mc-disabled]","preserveWhitespaces","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","Input","CHECKBOX","KEYBOARD","McPseudoCheckboxModule","McMeasureScrollbarService","scrollbarMeasure","position","top","width","height","overflow","initScrollBarWidth","_scrollBarWidth","scrollDiv","scrollProp","style","offsetWidth","clientWidth","undefined","DOCUMENT","McOptgroupBase","McOptgroupMixinBase","uniqueOptgroupIdCounter","McOptgroup","labelId","exportAs","inputs","label","uniqueIdCounter","McOptionSelectionChange","source","isUserInput","MC_OPTION_PARENT_COMPONENT","McOption","element","changeDetectorRef","onSelectionChange","EventEmitter","_id","_selected","_active","mostRecentViewValue","_showCheckbox","multiple","getHostElement","textContent","trim","ngAfterViewChecked","viewValue","ngOnDestroy","complete","getHeight","DOMRect","getClientRects","select","markForCheck","emitSelectionChangeEvent","deselect","focus","setActiveStyles","setInactiveStyles","getLabel","handleKeydown","event","keyCode","ENTER","SPACE","selectViaInteraction","preventDefault","getTabIndex","emit","[attr.tabindex]","[class.mc-selected]","[class.mc-option-multiple]","[class.mc-active]","[id]","(click)","(keydown)","ElementRef","ChangeDetectorRef","showCheckbox","Output","McOptionModule","CommonModule","MC_LABEL_GLOBAL_OPTIONS","fadeAnimation","trigger","opacity","transition","animate","StandardCurve","DecelerationCurve","AccelerationCurve","SharpCurve","POSITION_MAP","originX","originY","overlayX","overlayY","topCenter","topLeft","topRight","right","rightTop","rightBottom","bottom","bottomCenter","bottomLeft","bottomRight","left","leftTop","leftBottom","DEFAULT_4_POSITIONS","EXTENDED_OVERLAY_POSITIONS","POSITION_TO_CSS_MAP","MC_SELECT_SCROLL_STRATEGY","MC_SELECT_SCROLL_STRATEGY_PROVIDER","provide","deps","Overlay","useFactory","mcSelectAnimations","transformPanel","transform","minWidth","query","animateChild","fadeInContent","McHighlightPipe","replace","RegExp","Pipe","name","McHighlightModule","MC_LOCALE_ID","McDecimalPipe","_locale","locale","parsedDigitsInfo","currentLocale","tslib_1.__assign","useGrouping","num","Intl","NumberFormat","format","error","JSON","stringify","message","String","McFormattersModule","MC_VALIDATION","useValidation","SELECT_PANEL_PADDING_X"],"mappings":"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"}