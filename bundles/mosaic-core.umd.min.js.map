{"version":3,"file":"mosaic-core.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/lib/core/utils/utils.ts","../../src/lib/core/common-behaviors/common-module.ts","../../src/lib/core/common-behaviors/disabled.ts","../../src/lib/core/common-behaviors/color.ts","../../src/lib/core/common-behaviors/tabindex.ts","../../src/lib/core/common-behaviors/error-state.ts","../../src/lib/core/option/option.ts","../../src/lib/core/overlay/overlay-position-map.ts","../../src/lib/core/line/line.ts","../../src/lib/core/error/error-options.ts","../../src/lib/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../src/lib/core/selection/index.ts","../../src/lib/core/services/measure-scrollbar.service.ts","../../src/lib/core/option/optgroup.ts","../../src/lib/core/option/index.ts","../../src/lib/core/label/label-options.ts","../../src/lib/core/animation/fade-animations.ts","../../src/lib/core/animation/animation.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\nexport function isBoolean(val: any): val is boolean { return typeof val === 'boolean'; }\n\nexport function toBoolean(value: any): boolean {\n    return value != null && `${value}` !== 'false';\n}\n","import { NgModule, InjectionToken, Optional, Inject, isDevMode } from '@angular/core';\nimport { BidiModule } from '@ptsecurity/cdk/bidi';\n\n\n// Injection token that configures whether the Mosaic sanity checks are enabled.\nexport const MC_SANITY_CHECKS = new InjectionToken<boolean>('mc-sanity-checks', {\n    providedIn: 'root',\n    factory: MC_SANITY_CHECKS_FACTORY\n});\n\nexport function MC_SANITY_CHECKS_FACTORY(): boolean {\n    return true;\n}\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Mosaic\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., McTabsModule).\n */\n@NgModule({\n    imports: [ BidiModule ],\n    exports: [ BidiModule ]\n})\nexport class McCommonModule {\n    // Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n    private _hasDoneGlobalChecks = false;\n\n    // Reference to the global `document` object.\n    private _document = typeof document === 'object' && document ? document : null;\n\n    // Reference to the global 'window' object.\n    private _window = typeof window === 'object' && window ? window : null;\n\n    constructor(@Optional() @Inject(MC_SANITY_CHECKS) private _sanityChecksEnabled: boolean) {\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n\n    // Whether any sanity checks are enabled\n    private _areChecksEnabled(): boolean {\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    }\n\n    // Whether the code is running in tests.\n    private _isTestEnv() {\n        // tslint:disable-next-line\n        return this._window && (this._window['__karma__'] || this._window['jasmine']);\n    }\n\n    private _checkDoctypeIsDefined(): void {\n        if (this._document && !this._document.doctype) {\n            console.warn(\n                'Current document does not have a doctype. This may cause ' +\n                'some Mosaic components not to behave as expected.'\n            );\n        }\n    }\n\n    private _checkThemeIsPresent(): void {\n        if (this._document && typeof getComputedStyle === 'function') {\n            const testElement = this._document.createElement('div');\n\n            testElement.classList.add('mc-theme-loaded-marker');\n            this._document.body.appendChild(testElement);\n\n            const computedStyle = getComputedStyle(testElement);\n\n            // In some situations, the computed style of the test element can be null. For example in\n            // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n            if (computedStyle && computedStyle.display !== 'none') {\n                console.warn(\n                    'Could not find Mosaic core theme. Most Mosaic ' +\n                    'components may not work as expected. For more info refer ' +\n                    'to the theming guide: link there'\n                );\n            }\n\n            this._document.body.removeChild(testElement);\n        }\n    }\n}\n","import { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanDisable {\n    disabled: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableCtor = Constructor<CanDisable>;\n\n// Mixin to augment a directive with a `disabled` property.\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): CanDisableCtor & T {\n    return class extends base {\n        private _disabled: boolean = false;\n\n        get disabled() {\n            return this._disabled;\n        }\n\n        set disabled(value: any) {\n            this._disabled = coerceBooleanProperty(value);\n        }\n\n        constructor(...args: any[]) {\n            // tslint:disable-next-line\n            super(...args);\n        }\n    };\n}\n","import { ElementRef } from '@angular/core';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanColor {\n    color: ThemePalette;\n}\n\n/** @docs-private */\nexport type CanColorCtor = Constructor<CanColor>;\n\nexport interface HasElementRef {\n    _elementRef: ElementRef;\n}\n\nexport enum ThemePalette {\n    Primary = 'primary',\n    Second = 'second',\n    Error = 'error',\n    Default = 'second',\n    Empty = ''\n}\n\n/** Mixin to augment a directive with a `color` property. */\nexport function mixinColor<T extends Constructor<HasElementRef>>(\n    base: T,\n    defaultColor: ThemePalette = ThemePalette.Default\n): CanColorCtor & T {\n    return class extends base {\n\n        private _color: ThemePalette;\n\n        get color(): ThemePalette {\n            return this._color;\n        }\n\n        set color(value: ThemePalette) {\n            const colorPalette = value || defaultColor;\n\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mc-${this._color}`);\n                }\n\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mc-${colorPalette}`);\n                }\n\n                this._color = colorPalette;\n            }\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n\n            this.color = defaultColor;\n        }\n    };\n}\n\n","import { Constructor } from './constructor';\nimport { CanDisable } from './disabled';\n\n\nexport interface HasTabIndex {\n    tabIndex: number;\n}\n\nexport type HasTabIndexCtor = Constructor<HasTabIndex>;\n\n// Mixin to augment a directive with a `tabIndex` property.\nexport function mixinTabIndex<T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0)\n    : HasTabIndexCtor & T {\n    return class extends base {\n        private _tabIndex: number = defaultTabIndex;\n\n        get tabIndex(): number {\n            return this.disabled ? -1 : this._tabIndex;\n        }\n\n        set tabIndex(value: number) {\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n    };\n}\n","import { FormControl, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\nimport { ErrorStateMatcher } from '../error/error-options';\n\nimport { Constructor } from './constructor';\n\n\n/** @docs-private */\nexport interface CanUpdateErrorState {\n\n    readonly stateChanges: Subject<void>;\n\n    errorState: boolean;\n    errorStateMatcher: ErrorStateMatcher;\n\n    updateErrorState();\n}\n\n/** @docs-private */\nexport type CanUpdateErrorStateCtor = Constructor<CanUpdateErrorState>;\n\n/** @docs-private */\nexport interface HasErrorState {\n    _parentFormGroup: FormGroupDirective;\n    _parentForm: NgForm;\n    _defaultErrorStateMatcher: ErrorStateMatcher;\n    ngControl: NgControl;\n}\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T): CanUpdateErrorStateCtor & T {\n    return class extends base {\n        /** Whether the component is in an error state. */\n        errorState: boolean = false;\n\n        /**\n         * Stream that emits whenever the state of the input changes such that the wrapping\n         * `MatFormField` needs to run change detection.\n         */\n        readonly stateChanges = new Subject<void>();\n\n        errorStateMatcher: ErrorStateMatcher;\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this._parentFormGroup || this._parentForm;\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control as FormControl : null;\n            const newState = matcher.isErrorState(control, parent);\n\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n","import {\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ENTER, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Subject } from 'rxjs';\n\nimport { McOptgroup } from './optgroup';\n\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n\n/** Event object emitted by McOption when selected or deselected. */\nexport class McOptionSelectionChange {\n    constructor(\n        /** Reference to the option that emitted the event. */\n        public source: McOption,\n        /** Whether the change in the option's value was a result of a user action. */\n        public isUserInput = false) {\n    }\n}\n\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * @docs-private\n */\nexport interface IMcOptionParentComponent {\n    disableRipple?: boolean;\n    multiple?: boolean;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_OPTION_PARENT_COMPONENT =\n    new InjectionToken<IMcOptionParentComponent>('MC_OPTION_PARENT_COMPONENT');\n\n/**\n * Single option inside of a `<mat-select>` element.\n */\n@Component({\n    selector: 'mc-option',\n    exportAs: 'mcOption',\n    host: {\n        '[attr.tabindex]': '_getTabIndex()',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-option-multiple]': 'multiple',\n        '[class.mc-active]': 'active',\n        '[id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '(click)': '_selectViaInteraction()',\n        '(keydown)': '_handleKeydown($event)',\n        class: 'mc-option'\n    },\n    styleUrls: ['option.css'],\n    templateUrl: 'option.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McOption implements AfterViewChecked, OnDestroy {\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n        return this._parent && this._parent.multiple;\n    }\n\n    /** The unique ID of the option. */\n    get id(): string {\n        return this._id;\n    }\n\n    /** Whether or not the option is currently selected. */\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    /** The form value of the option. */\n    @Input() value: any;\n\n    /** Whether the option is disabled. */\n    @Input()\n    get disabled() {\n        return (this.group && this.group.disabled) || this._disabled;\n    }\n\n    set disabled(value: any) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() {\n        return this._parent && this._parent.disableRipple;\n    }\n\n    /** Event emitted when the option is selected or deselected. */\n        // tslint:disable-next-line:no-output-on-prefix\n    @Output() readonly onSelectionChange = new EventEmitter<McOptionSelectionChange>();\n\n    /** Emits when the state of the option changes and any parents have to be notified. */\n    readonly _stateChanges = new Subject<void>();\n\n    private _selected = false;\n    private _active = false;\n    private _disabled = false;\n    private readonly _id = `mc-option-${_uniqueIdCounter++}`;\n    private _mostRecentViewValue = '';\n\n    constructor(\n        private readonly _element: ElementRef,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_OPTION_PARENT_COMPONENT) private readonly _parent: IMcOptionParentComponent,\n        @Optional() readonly group: McOptgroup) {\n    }\n\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active(): boolean {\n        return this._active;\n    }\n\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue(): string {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n\n    /** Selects the option. */\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Deselects the option. */\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Sets focus onto this option. */\n    focus(): void {\n        const element = this._getHostElement();\n\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles(): void {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles(): void {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        return this.viewValue;\n    }\n\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event: KeyboardEvent): void {\n        // tslint:disable-next-line\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\n            this._selectViaInteraction();\n\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction(): void {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Gets the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n\n    /** Emits the selection change event. */\n    private _emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McOptionSelectionChange(this, isUserInput));\n    }\n}\n\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nexport function _countGroupLabelsBeforeOption(\n    optionIndex: number, options: QueryList<McOption>,\n    optionGroups: QueryList<McOptgroup>\n): number {\n\n    if (optionGroups.length) {\n        const optionsArray = options.toArray();\n        const groups = optionGroups.toArray();\n\n        let groupCounter = 0;\n\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n\n        return groupCounter;\n    }\n\n    return 0;\n}\n\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionIndex Index of the option to be scrolled into the view.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nexport function _getOptionScrollPosition(\n    optionIndex: number,\n    optionHeight: number,\n    currentScrollPosition: number,\n    panelHeight: number\n): number {\n    const optionOffset = optionIndex * optionHeight;\n\n    if (optionOffset < currentScrollPosition) { return optionOffset; }\n\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n\n    return currentScrollPosition;\n}\n\n","import { ConnectionPositionPair } from '@ptsecurity/cdk/overlay';\n\n\nexport const POSITION_MAP: { [key: string]: ConnectionPositionPair } = {\n    top         : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom'\n    },\n    topCenter   : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topLeft     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topRight    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    right       : {\n        originX : 'end',\n        originY : 'center',\n        overlayX: 'start',\n        overlayY: 'center'\n    },\n    rightTop    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'top',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    rightBottom : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    bottom      : {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomCenter: {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomLeft  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    bottomRight : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    left        : {\n        originX : 'start',\n        originY : 'center',\n        overlayX: 'end',\n        overlayY: 'center'\n    },\n    leftTop     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    leftBottom  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    }\n};\n\nexport const DEFAULT_4_POSITIONS = _objectValues([\n    POSITION_MAP.top, POSITION_MAP.right, POSITION_MAP.bottom, POSITION_MAP.left\n]);\n\nfunction arrayMap<T, S>(array: T[], iteratee: (item: T, index: number, arr: T[]) => S): S[] {\n    let index = -1;\n    const length = array == null ? 0 : array.length;\n    const result = Array(length);\n\n    while (++index < length) {\n        result[ index ] = iteratee(array[ index ], index, array);\n    }\n\n    return result;\n}\nfunction baseValues<T>(object: { [key: string]: T } | T[], props: string[]): T[] {\n    return arrayMap(props,  (key) => {\n        return object[ key ];\n    });\n}\nfunction _objectValues<T>(object: { [key: string]: T } | T[]): T[] {\n    return object == null ? [] : baseValues(object, Object.keys(object));\n}\n","import { NgModule, Directive, ElementRef, QueryList } from '@angular/core';\n\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(McLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({\n    selector: '[mc-line], [mcLine]',\n    host: { class: 'mc-line' }\n})\nexport class McLine {}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nexport class McLineSetter {\n    constructor(private _lines: QueryList<McLine>, private _element: ElementRef) {\n        this._setLineClass(this._lines.length);\n\n        this._lines.changes.subscribe(() => {\n            this._setLineClass(this._lines.length);\n        });\n    }\n\n    private _setLineClass(count: number): void {\n        this._resetClasses();\n        if (count === 2 || count === 3) {\n            this._setClass(`mc-${count}-line`, true);\n        } else if (count > 3) {\n            this._setClass(`mc-multi-line`, true);\n        }\n    }\n\n    private _resetClasses(): void {\n        this._setClass('mc-2-line', false);\n        this._setClass('mc-3-line', false);\n        this._setClass('mc-multi-line', false);\n    }\n\n    private _setClass(className: string, isAdd: boolean): void {\n        if (isAdd) {\n            this._element.nativeElement.classList.add(className);\n        } else {\n            this._element.nativeElement.classList.remove(className);\n        }\n    }\n}\n\n@NgModule({\n    imports: [],\n    exports: [McLine],\n    declarations: [McLine]\n})\nexport class McLineModule {}\n","import { Injectable } from '@angular/core';\nimport { FormGroupDirective, NgForm, FormControl } from '@angular/forms';\n\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n@Injectable()\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\n\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n@Injectable({ providedIn: 'root' })\nexport class ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\n\nexport type McPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mc-primary .mc-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mc-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n@Component({\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'mc-pseudo-checkbox',\n    styleUrls: ['pseudo-checkbox.css'],\n    templateUrl: 'pseudo-checkbox.partial.html',\n    host: {\n        class: 'mc-pseudo-checkbox',\n        '[class.mc-indeterminate]': 'state === \"indeterminate\"',\n        '[class.mc-checked]': 'state === \"checked\"',\n        '[class.mc-disabled]': 'disabled'\n    }\n})\nexport class McPseudoCheckbox {\n    @Input() state: McPseudoCheckboxState = 'unchecked';\n\n    @Input() disabled: boolean = false;\n}\n","import { NgModule } from '@angular/core';\n\nimport { McPseudoCheckbox } from './pseudo-checkbox/pseudo-checkbox';\n\n\n@NgModule({\n    exports: [McPseudoCheckbox],\n    declarations: [McPseudoCheckbox]\n})\nexport class McPseudoCheckboxModule {}\n\n\nexport * from './pseudo-checkbox/pseudo-checkbox';\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class McMeasureScrollbarService {\n\n    get scrollBarWidth(): number {\n        if (this._scrollbarWidth) {\n            return this._scrollbarWidth;\n        }\n        this.initScrollBarWidth();\n\n        return this._scrollbarWidth;\n    }\n\n    private _scrollbarWidth: number;\n    private scrollbarMeasure = {\n        position: 'absolute',\n        top: '-9999px',\n        width: '50px',\n        height: '50px',\n        overflow: 'scroll'\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private document: any\n    ) {\n        this.initScrollBarWidth();\n    }\n\n    initScrollBarWidth() {\n        const scrollDiv = this.document.createElement('div');\n\n        // tslint:disable-next-line\n        for (const scrollProp in this.scrollbarMeasure) {\n            if (this.scrollbarMeasure.hasOwnProperty(scrollProp)) {\n                scrollDiv.style[scrollProp] = this.scrollbarMeasure[scrollProp];\n            }\n        }\n\n        this.document.body.appendChild(scrollDiv);\n\n        const width = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n        this.document.body.removeChild(scrollDiv);\n        this._scrollbarWidth = width;\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\nimport { mixinDisabled, CanDisable, CanDisableCtor } from '../common-behaviors/index';\n\n\n// Boilerplate for applying mixins to McOptgroup.\n/** @docs-private */\nexport class McOptgroupBase {}\n\nexport const _McOptgroupMixinBase: CanDisableCtor & typeof McOptgroupBase = mixinDisabled(McOptgroupBase);\n\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\n\n/**\n * Component that is used to group instances of `mc-option`.\n */\n@Component({\n    selector: 'mc-optgroup',\n    exportAs: 'mcOptgroup',\n    templateUrl: 'optgroup.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    styleUrls: ['optgroup.css'],\n    host: {\n        class: 'mc-optgroup',\n        role: 'group',\n        '[class.mc-optgroup-disabled]': 'disabled',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-labelledby]': '_labelId'\n    }\n})\nexport class McOptgroup extends _McOptgroupMixinBase implements CanDisable {\n    /** Label for the option group. */\n    @Input() label: string;\n\n    /** Unique id for the underlying label. */\n    _labelId: string = `mc-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McPseudoCheckboxModule } from '../selection/index';\n\nimport { McOptgroup } from './optgroup';\nimport { McOption } from './option';\n\n\n@NgModule({\n    imports: [CommonModule, McPseudoCheckboxModule],\n    exports: [McOption, McOptgroup],\n    declarations: [McOption, McOptgroup]\n})\nexport class McOptionModule {}\n\n\nexport * from './option';\nexport * from './optgroup';\n","import { InjectionToken } from '@angular/core';\n\n\n/** InjectionToken that can be used to specify the global label options. */\nexport const MC_LABEL_GLOBAL_OPTIONS =\n    new InjectionToken<LabelOptions>('mc-label-global-options');\n\n/** Type for the available floatLabel values. */\nexport type FloatLabelType = 'always' | 'never' | 'auto';\n\n/** Configurable options for floating labels. */\nexport interface LabelOptions {\n    /**\n     * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n     * Default behavior is assumed to be `auto`.\n     */\n    float?: FloatLabelType;\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\nexport const fadeAnimation: AnimationTriggerMetadata =  trigger('fadeAnimation', [\n    state('void', style({ opacity: 0 })),\n    state('true', style({ opacity: 1 })),\n    state('false', style({ opacity: 0 })),\n    transition('* => true', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n    transition('* => void', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)'))\n]);\n","export enum AnimationCurves {\n    StandardCurve = 'cubic-bezier(0.4,0.0,0.2,1)',\n    DecelerationCurve = 'cubic-bezier(0.0,0.0,0.2,1)',\n    AccelerationCurve = 'cubic-bezier(0.4,0.0,1,1)',\n    SharpCurve = 'cubic-bezier(0.4,0.0,0.6,1)'\n}\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","isBoolean","val","toBoolean","value","MC_SANITY_CHECKS_FACTORY","mixinDisabled","base","_super","class_1","args","_i","_this","apply","_disabled","tslib_1.__extends","get","set","coerceBooleanProperty","mixinColor","defaultColor","ThemePalette","Default","color","_color","colorPalette","_elementRef","nativeElement","classList","remove","add","mixinTabIndex","defaultTabIndex","_tabIndex","disabled","mixinErrorState","errorState","stateChanges","Subject","updateErrorState","oldState","parent","_parentFormGroup","_parentForm","matcher","errorStateMatcher","_defaultErrorStateMatcher","control","ngControl","newState","isErrorState","next","_countGroupLabelsBeforeOption","optionIndex","options","optionGroups","optionsArray","toArray","groups","groupCounter","group","_getOptionScrollPosition","optionHeight","currentScrollPosition","panelHeight","optionOffset","Math","max","arrayMap","array","iteratee","index","result","Array","baseValues","object","props","setPrototypeOf","__proto__","p","hasOwnProperty","MC_SANITY_CHECKS","InjectionToken","providedIn","factory","McCommonModule","_sanityChecksEnabled","_hasDoneGlobalChecks","_document","document","_window","window","_areChecksEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","isDevMode","_isTestEnv","doctype","console","warn","getComputedStyle","testElement","createElement","body","appendChild","computedStyle","display","removeChild","tslib_1.__decorate","NgModule","imports","BidiModule","exports","tslib_1.__param","Optional","Inject","McLine","Directive","selector","host","class","McLineSetter","_lines","_element","_setLineClass","changes","subscribe","count","_resetClasses","_setClass","className","isAdd","McLineModule","declarations","ShowOnDirtyErrorStateMatcher","form","invalid","dirty","submitted","Injectable","ErrorStateMatcher","touched","McPseudoCheckbox","state","Input","Component","encapsulation","ViewEncapsulation","None","preserveWhitespaces","changeDetection","ChangeDetectionStrategy","OnPush","styles","template","[class.mc-indeterminate]","[class.mc-checked]","[class.mc-disabled]","McPseudoCheckboxModule","McMeasureScrollbarService","scrollbarMeasure","position","top","width","height","overflow","initScrollBarWidth","_scrollbarWidth","scrollDiv","scrollProp","style","offsetWidth","clientWidth","DOCUMENT","McOptgroupBase","_McOptgroupMixinBase","_uniqueOptgroupIdCounter","McOptgroup","_labelId","exportAs","inputs","role","[class.mc-optgroup-disabled]","[attr.aria-disabled]","[attr.aria-labelledby]","_uniqueIdCounter","McOptionSelectionChange","source","isUserInput","MC_OPTION_PARENT_COMPONENT","McOption","_changeDetectorRef","_parent","onSelectionChange","EventEmitter","_stateChanges","_selected","_active","_id","_mostRecentViewValue","multiple","disableRipple","_getHostElement","textContent","trim","select","markForCheck","_emitSelectionChangeEvent","deselect","focus","element","setActiveStyles","setInactiveStyles","getLabel","viewValue","_handleKeydown","event","keyCode","ENTER","SPACE","_selectViaInteraction","preventDefault","_getTabIndex","ngAfterViewChecked","ngOnDestroy","complete","emit","Output","[attr.tabindex]","[class.mc-selected]","[class.mc-option-multiple]","[class.mc-active]","[id]","(click)","(keydown)","tslib_1.__metadata","ElementRef","ChangeDetectorRef","McOptionModule","CommonModule","MC_LABEL_GLOBAL_OPTIONS","fadeAnimation","trigger","opacity","transition","animate","AnimationCurves","POSITION_MAP","originX","originY","overlayX","overlayY","topCenter","offsetX","undefined","offsetY","topLeft","topRight","right","rightTop","rightBottom","bottom","bottomCenter","bottomLeft","bottomRight","left","leftTop","leftBottom","DEFAULT_4_POSITIONS","keys"],"mappings":"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"}