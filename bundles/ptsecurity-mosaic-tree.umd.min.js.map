{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@ptsecurity/mosaic/tree/node.directive.ts","ng://@ptsecurity/mosaic/tree/padding.directive.ts","ng://@ptsecurity/mosaic/tree/toggle.ts","ng://@ptsecurity/mosaic/tree/tree-option.component.ts","ng://@ptsecurity/mosaic/tree/tree-selection.component.ts","ng://@ptsecurity/mosaic/tree/tree.module.ts","ng://@ptsecurity/mosaic/tree/data-source/flat-data-source.ts","ng://@ptsecurity/mosaic/tree/data-source/nested-data-source.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","McTreeNodeDef","_super","Directive","args","selector","inputs","providers","provide","CdkTreeNodeDef","useExisting","Input","McTreeNodePadding","_this","apply","baseLeftPadding","_indent","iconWidth","defineProperty","withIcon","paddingIndent","nodeLevel","treeNode","data","tree","treeControl","getLevel","level","leftPadding","ngOnInit","isExpandable","setPadding","CdkTreeNodePadding","McTreeNodeToggleComponent","disabled","filterValue","pipe","map","subscribe","state","isExpanded","node","Component","template","host","class","(click)","[class.mc-disabled]","[class.mc-opened]","encapsulation","ViewEncapsulation","None","CdkTreeNodeToggle","CdkTree","CdkTreeNode","McTreeNodeToggleDirective","MC_TREE_OPTION_PARENT_COMPONENT","InjectionToken","source","isUserInput","uniqueIdCounter","McTreeOption","elementRef","changeDetectorRef","ngZone","onFocus","Subject","onBlur","_disabled","onSelectionChange","EventEmitter","_selected","_id","hasFocus","_value","newValue","coerceBooleanProperty","undefined","_showCheckbox","showCheckbox","isSelected","setSelected","multiple","getHostElement","textContent","trim","ngAfterContentInit","getValue","toggle","selected","selectionModel","select","deselect","markForCheck","focus","focusOrigin","nativeElement","option","Promise","resolve","then","blur","onStable","asObservable","take","run","getHeight","clientRects","getClientRects","height","emitSelectionChangeEvent","selectViaInteraction","$event","shiftKey","hasModifierKey","ctrlKey","setSelectedOptionsByClick","emit","McTreeOptionChange","exportAs","[attr.id]","[attr.tabindex]","[attr.disabled]","[class.mc-selected]","[class.mc-focused]","(focus)","(blur)","changeDetection","ChangeDetectionStrategy","OnPush","ElementRef","ChangeDetectorRef","NgZone","Inject","Output","MC_SELECTION_TREE_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","forwardRef","McTreeSelection","multi","differs","tabIndex","resetFocusedItemOnBlur","navigationChange","selectionChange","multipleMode","userTabIndex","_autoSelect","_noUnselectLast","_tabIndex","destroy","onChange","onTouched","parseInt","MultipleMode","CHECKBOX","KEYBOARD","autoSelect","noUnselectLast","SelectionModel","merge","renderedOptions","rawValue","markOptionsForCheck","keyManager","FocusKeyManager","withVerticalOrientation","withHorizontalOrientation","change","takeUntil","activeItem","emitNavigationEvent","updateOptionsFocus","tabOut","allowFocusEscape","changed","getSelectedValues","notifyOnChanges","changes","options","resetOptions","updateTabIndex","forEach","selectedValue","ngOnDestroy","complete","isFocusReceivedFromNestedOption","setFirstItemActive","hasFocusedOption","setActiveItem","onKeyDown","event","setFocusOrigin","keyCode","DOWN_ARROW","setNextItemActive","UP_ARROW","setPreviousItemActive","LEFT_ARROW","collapse","preventDefault","RIGHT_ARROW","expand","SPACE","ENTER","toggleFocusedOption","HOME","END","setLastItemActive","PAGE_UP","setPreviousPageItemActive","PAGE_DOWN","setNextPageItemActive","setSelectedOptionsByKey","updateScrollSize","first","withScrollSize","Math","floor","setSelectedOptions","canDeselectLast","clear","emitChangeEvent","selectedOptionState","fromIndex","previousActiveItemIndex","toIndex","activeItemIndex","_a","toArray","slice","filter","item","renderedOption","setFocusedOption","focusedOption","renderNodeChanges","dataDiffer","viewContainer","parentData","nodeOutlet","arrayOfInstances","changeDetectorRefs","_embeddedViews","view","viewDef","def","nodes","nodeMatchedQueries","matchedQueryIds","nodeData","nodeIndex","instance","setTimeout","destroyed","detectChanges","reset","getItemHeight","McTreeNavigationChange","writeValue","isArray","getMcSelectNonArrayValueError","setOptionsFromValues","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","values","valuesToSelect","reduce","result","hasValue","dropSubscriptions","listenToOptionsFocus","optionFocusSubscription","unsubscribe","optionBlurSubscription","optionFocusChanges","index","indexOf","isValidIndex","updateActiveItem","optionBlurChanges","some","relatedTarget","classList","contains","(keydown)","(window:resize)","IterableDiffers","Attribute","ViewChild","CdkTreeNodeOutlet","static","ContentChildren","MC_TREE_DIRECTIVES","McTreeModule","NgModule","imports","CommonModule","CdkTreeModule","McPseudoCheckboxModule","exports","declarations","McTreeFlattener","transformFunction","getChildren","flattenNode","resultNodes","parent","flatNode","childrenNodes","flattenChildren","children","child","flattenNodes","structuredData","expandFlattenedNodes","results","currentExpand","McTreeDataSourceChangeTypes","McTreeFlatDataSource","treeFlattener","initialData","flattenedData","BehaviorSubject","expandedData","filteredData","_data","dataNodes","connect","collectionViewer","viewChange","expansionModel","type","changeObj","filterHandler","expansionHandler","filterModel","expandedNodes","disconnect","DataSource","McTreeNestedDataSource"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Directive, Input } from '@angular/core';\nimport { CdkTreeNodeDef } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeDef]',\n    inputs: ['when: mcTreeNodeDefWhen'],\n    providers: [{ provide: CdkTreeNodeDef, useExisting: McTreeNodeDef }]\n})\nexport class McTreeNodeDef<T> extends CdkTreeNodeDef<T> {\n    @Input('mcTreeNode') data: T;\n}\n","import { Directive, Input, OnInit } from '@angular/core';\nimport { CdkTreeNodePadding } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodePadding]',\n    providers: [{ provide: CdkTreeNodePadding, useExisting: McTreeNodePadding }]\n})\nexport class McTreeNodePadding<T> extends CdkTreeNodePadding<T> implements OnInit {\n    @Input('mcTreeNodePadding') level: number;\n\n    @Input('mcTreeNodePaddingIndent') indent: number;\n\n    baseLeftPadding: number = 12;\n    /* tslint:disable-next-line:naming-convention orthodox-getter-and-setter*/\n    _indent: number = 20;\n\n    withIcon: boolean;\n    iconWidth: number = 20;\n\n    get leftPadding(): number {\n        return (this.withIcon ? 0 : this.iconWidth) + this.baseLeftPadding;\n    }\n\n    paddingIndent(): string | null {\n        const nodeLevel = (this.treeNode.data && this.tree.treeControl.getLevel)\n            ? this.tree.treeControl.getLevel(this.treeNode.data)\n            : 0;\n\n        const level = this.level || nodeLevel;\n\n        return level > 0 ? `${(level * this._indent) + this.leftPadding}px` : `${this.leftPadding}px`;\n    }\n\n    ngOnInit(): void {\n        this.withIcon = this.tree.treeControl.isExpandable(this.treeNode.data);\n\n        this.setPadding();\n    }\n}\n","import { Component, Directive, Input, ViewEncapsulation } from '@angular/core';\nimport { CdkTree, CdkTreeNode, CdkTreeNodeToggle } from '@ptsecurity/cdk/tree';\nimport { map } from 'rxjs/operators';\n\n\n@Component({\n    selector: 'mc-tree-node-toggle',\n    template: `\n        <i class=\"mc mc-icon mc-angle-down-S_16\"></i>\n    `,\n    host: {\n        class: 'mc-tree-node-toggle',\n        '(click)': 'toggle($event)',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-opened]': 'iconState'\n    },\n    encapsulation: ViewEncapsulation.None,\n    providers: [{ provide: CdkTreeNodeToggle, useExisting: McTreeNodeToggleComponent }]\n})\nexport class McTreeNodeToggleComponent<T> extends CdkTreeNodeToggle<T> {\n    disabled: boolean = false;\n\n    @Input() node: T;\n\n    get iconState(): any {\n        return this.disabled || this.tree.treeControl.isExpanded(this.node);\n    }\n\n    constructor(tree: CdkTree<T>, treeNode: CdkTreeNode<T>) {\n        super(tree, treeNode);\n\n        this.tree.treeControl.filterValue\n            .pipe(map((value) => value.length > 0))\n            .subscribe((state: boolean) => this.disabled = state);\n    }\n}\n\n@Directive({\n    selector: '[mcTreeNodeToggle]',\n    host: {\n        '(click)': 'toggle($event)',\n        '[class.mc-disabled]': 'disabled'\n    },\n    providers: [{ provide: CdkTreeNodeToggle, useExisting: McTreeNodeToggleDirective }]\n})\nexport class McTreeNodeToggleDirective<T> extends CdkTreeNodeToggle<T> {\n    disabled: boolean = false;\n\n    constructor(tree: CdkTree<T>, treeNode: CdkTreeNode<T>) {\n        super(tree, treeNode);\n\n        this.tree.treeControl.filterValue\n            .pipe(map((value) => value.length > 0))\n            .subscribe((state: boolean) => this.disabled = state);\n    }\n}\n","import { FocusOrigin } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ElementRef,\n    Inject,\n    InjectionToken,\n    ChangeDetectionStrategy,\n    ViewEncapsulation,\n    AfterContentInit,\n    NgZone\n} from '@angular/core';\nimport { hasModifierKey } from '@ptsecurity/cdk/keycodes';\nimport { CdkTreeNode } from '@ptsecurity/cdk/tree';\nimport { CanDisable } from '@ptsecurity/mosaic/core';\nimport { Subject } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\n\n// tslint:disable-next-line:naming-convention\nexport interface McTreeOptionEvent {\n    option: McTreeOption;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_TREE_OPTION_PARENT_COMPONENT = new InjectionToken<any>('MC_TREE_OPTION_PARENT_COMPONENT');\n\nexport class McTreeOptionChange {\n    constructor(public source: McTreeOption, public isUserInput = false) {}\n}\n\nlet uniqueIdCounter: number = 0;\n\n@Component({\n    selector: 'mc-tree-option',\n    exportAs: 'mcTreeOption',\n    templateUrl: './tree-option.html',\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': '-1',\n\n        '[attr.disabled]': 'disabled || null',\n\n        class: 'mc-tree-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': 'hasFocus',\n\n        '(focus)': 'focus()',\n        '(blur)': 'blur()',\n\n        '(click)': 'selectViaInteraction($event)'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    providers: [{ provide: CdkTreeNode, useExisting: McTreeOption }]\n})\nexport class McTreeOption extends CdkTreeNode<McTreeOption> implements CanDisable, AfterContentInit {\n    readonly onFocus = new Subject<McTreeOptionEvent>();\n\n    readonly onBlur = new Subject<McTreeOptionEvent>();\n\n    get value(): any {\n        return this._value;\n    }\n\n    set value(value: any) {\n        this._value = value;\n    }\n\n    private _value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled || (this.tree && this.tree.disabled);\n    }\n\n    set disabled(value: any) {\n        const newValue = coerceBooleanProperty(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    @Input()\n    get showCheckbox() {\n        return this._showCheckbox !== undefined ? this._showCheckbox : this.tree.showCheckbox;\n    }\n\n    set showCheckbox(value: any) {\n        this._showCheckbox = coerceBooleanProperty(value);\n    }\n\n    private _showCheckbox: boolean;\n\n    @Output() readonly onSelectionChange = new EventEmitter<McTreeOptionChange>();\n\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = coerceBooleanProperty(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n        }\n    }\n\n    private _selected: boolean = false;\n\n    get id(): string {\n        return this._id;\n    }\n\n    private _id = `mc-tree-option-${uniqueIdCounter++}`;\n\n    get multiple(): boolean {\n        return this.tree.multiple;\n    }\n\n    get viewValue(): string {\n        // TODO: Add input property alternative for node envs.\n        return (this.getHostElement().textContent || '').trim();\n    }\n\n    hasFocus: boolean = false;\n\n    constructor(\n        elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        private ngZone: NgZone,\n        @Inject(MC_TREE_OPTION_PARENT_COMPONENT) public tree: any\n    ) {\n        super(elementRef, tree);\n    }\n\n    ngAfterContentInit(): void {\n        this.value = this.tree.treeControl.getValue(this.data);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    setSelected(selected: boolean): void {\n        if (this._selected === selected || !this.tree.selectionModel) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.tree.selectionModel.select(this.data);\n        } else {\n            this.tree.selectionModel.deselect(this.data);\n        }\n\n        this.changeDetectorRef.markForCheck();\n    }\n\n    focus(focusOrigin?: FocusOrigin) {\n        if (focusOrigin === 'program') { return; }\n\n        if (this.disabled || this.hasFocus) { return; }\n\n        this.elementRef.nativeElement.focus();\n\n        this.onFocus.next({ option: this });\n\n        Promise.resolve().then(() => {\n            this.hasFocus = true;\n\n            this.changeDetectorRef.markForCheck();\n        });\n    }\n\n    blur(): void {\n        // When animations are enabled, Angular may end up removing the option from the DOM a little\n        // earlier than usual, causing it to be blurred and throwing off the logic in the tree\n        // that moves focus not the next item. To work around the issue, we defer marking the option\n        // as not focused until the next time the zone stabilizes.\n        this.ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                this.ngZone.run(() => {\n                    this.hasFocus = false;\n\n                    this.onBlur.next({ option: this });\n                });\n            });\n    }\n\n    getHeight(): number {\n        const clientRects = this.elementRef.nativeElement.getClientRects();\n\n        if (clientRects.length) {\n            return clientRects[0].height;\n        }\n\n        return 0;\n    }\n\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent();\n        }\n    }\n\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    selectViaInteraction($event?: KeyboardEvent): void {\n        if (!this.disabled) {\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent(true);\n\n            const shiftKey = $event ? hasModifierKey($event, 'shiftKey') : false;\n            const ctrlKey = $event ? hasModifierKey($event, 'ctrlKey') : false;\n\n            this.tree.setSelectedOptionsByClick(this, shiftKey, ctrlKey);\n        }\n    }\n\n    emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McTreeOptionChange(this, isUserInput));\n    }\n\n    getHostElement(): HTMLElement {\n        return this.elementRef.nativeElement;\n    }\n\n    markForCheck() {\n        this.changeDetectorRef.markForCheck();\n    }\n}\n","/* tslint:disable:no-empty */\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    IterableDiffer,\n    IterableDiffers,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { NodeDef, ViewData } from '@angular/core/esm2015/src/view';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\nimport {\n    hasModifierKey,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    SPACE,\n    DOWN_ARROW,\n    UP_ARROW\n} from '@ptsecurity/cdk/keycodes';\nimport { CdkTree, CdkTreeNodeOutlet, FlatTreeControl } from '@ptsecurity/cdk/tree';\nimport { CanDisable, getMcSelectNonArrayValueError, HasTabIndex, MultipleMode } from '@ptsecurity/mosaic/core';\nimport { merge, Observable, Subject, Subscription } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { MC_TREE_OPTION_PARENT_COMPONENT, McTreeOption, McTreeOptionEvent } from './tree-option.component';\n\n\nexport const MC_SELECTION_TREE_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McTreeSelection),\n    multi: true\n};\n\nexport class McTreeNavigationChange<T> {\n    constructor(public source: McTreeSelection<any>, public option: T) {}\n}\n\nexport class McTreeSelectionChange<T> {\n    constructor(public source: McTreeSelection<any>, public option: T) {}\n}\n\n// tslint:disable-next-line:naming-convention\ninterface SelectionModelOption {\n    id: number | string;\n    value: string;\n}\n\n\n@Component({\n    selector: 'mc-tree-selection',\n    exportAs: 'mcTreeSelection',\n    template: '<ng-container cdkTreeNodeOutlet></ng-container>',\n    host: {\n        class: 'mc-tree-selection',\n\n        '[attr.tabindex]': 'tabIndex',\n\n        '(blur)': 'blur()',\n        '(focus)': 'focus($event)',\n\n        '(keydown)': 'onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    styleUrls: ['./tree.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        MC_SELECTION_TREE_VALUE_ACCESSOR,\n        { provide: MC_TREE_OPTION_PARENT_COMPONENT, useExisting: McTreeSelection },\n        { provide: CdkTree, useExisting: McTreeSelection }\n    ]\n})\nexport class McTreeSelection<T extends McTreeOption> extends CdkTree<T>\n    implements ControlValueAccessor, AfterContentInit, CanDisable, HasTabIndex {\n\n    @ViewChild(CdkTreeNodeOutlet, { static: true }) nodeOutlet: CdkTreeNodeOutlet;\n\n    @ContentChildren(McTreeOption) renderedOptions: QueryList<T>;\n\n    keyManager: FocusKeyManager<T>;\n\n    selectionModel: SelectionModel<SelectionModelOption>;\n\n    resetFocusedItemOnBlur: boolean = true;\n\n    @Input() treeControl: FlatTreeControl<T>;\n\n    @Output() readonly navigationChange = new EventEmitter<McTreeNavigationChange<T>>();\n\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectionChange<T>>();\n\n    multipleMode: MultipleMode | null = null;\n\n    userTabIndex: number | null = null;\n\n    get optionFocusChanges(): Observable<McTreeOptionEvent> {\n        return merge(...this.renderedOptions.map((option) => option.onFocus));\n    }\n\n    get optionBlurChanges(): Observable<McTreeOptionEvent> {\n        return merge(...this.renderedOptions.map((option) => option.onBlur));\n    }\n\n    get multiple(): boolean {\n        return !!this.multipleMode;\n    }\n\n    @Input()\n    get autoSelect(): boolean {\n        return this._autoSelect;\n    }\n\n    set autoSelect(value: boolean) {\n        this._autoSelect = coerceBooleanProperty(value);\n    }\n\n    private _autoSelect: boolean = true;\n\n    @Input()\n    get noUnselectLast(): boolean {\n        return this._noUnselectLast;\n    }\n\n    set noUnselectLast(value: boolean) {\n        this._noUnselectLast = coerceBooleanProperty(value);\n    }\n\n    private _noUnselectLast: boolean = true;\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(rawValue: boolean) {\n        const value = coerceBooleanProperty(rawValue);\n\n        if (this._disabled !== value) {\n            this._disabled = value;\n\n            this.markOptionsForCheck();\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    @Input()\n    get tabIndex(): any {\n        return this._tabIndex;\n    }\n\n    set tabIndex(value: any) {\n        this._tabIndex = value;\n        this.userTabIndex = value;\n    }\n\n    private _tabIndex = 0;\n\n    get showCheckbox(): boolean {\n        return this.multipleMode === MultipleMode.CHECKBOX;\n    }\n\n    private readonly destroy = new Subject<void>();\n\n    private optionFocusSubscription: Subscription | null;\n\n    private optionBlurSubscription: Subscription | null;\n\n    constructor(\n        private elementRef: ElementRef,\n        differs: IterableDiffers,\n        changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('multiple') multiple: string\n    ) {\n        super(differs, changeDetectorRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        if (multiple === MultipleMode.CHECKBOX || multiple === MultipleMode.KEYBOARD) {\n            this.multipleMode = multiple;\n        } else if (multiple !== null) {\n            this.multipleMode = MultipleMode.CHECKBOX;\n        }\n\n        if (this.multipleMode === MultipleMode.CHECKBOX) {\n            this.autoSelect = false;\n            this.noUnselectLast = false;\n        }\n\n        this.selectionModel = new SelectionModel<SelectionModelOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.keyManager = new FocusKeyManager<T>(this.renderedOptions)\n            .withVerticalOrientation(true)\n            .withHorizontalOrientation(null);\n\n        this.keyManager.change\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => {\n                if (this.keyManager.activeItem) {\n                    this.emitNavigationEvent(this.keyManager.activeItem);\n\n                    // todo need check this logic\n                    if (this.autoSelect && !this.keyManager.activeItem.disabled) {\n                        this.updateOptionsFocus();\n                    }\n                }\n            });\n\n        this.keyManager.tabOut\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => this.allowFocusEscape());\n\n        this.selectionModel.changed\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => {\n                this.onChange(this.getSelectedValues());\n\n                this.renderedOptions.notifyOnChanges();\n            });\n\n        this.renderedOptions.changes\n            .pipe(takeUntil(this.destroy))\n            .subscribe((options) => {\n                this.resetOptions();\n\n                // Check to see if we need to update our tab index\n                this.updateTabIndex();\n\n                // todo need to do optimisation\n                options.forEach((option) => {\n                    option.deselect();\n\n                    this.getSelectedValues().forEach((selectedValue) => {\n                        if (option.value === selectedValue) {\n                            option.select();\n                        }\n                    });\n                });\n            });\n    }\n\n    ngOnDestroy(): void {\n        this.destroy.next();\n        this.destroy.complete();\n    }\n\n    focus($event): void {\n        if (this.renderedOptions.length === 0 || this.isFocusReceivedFromNestedOption($event)) { return; }\n\n        this.keyManager.setFirstItemActive();\n    }\n\n    blur() {\n        if (!this.hasFocusedOption() && this.resetFocusedItemOnBlur) {\n            this.keyManager.setActiveItem(-1);\n        }\n\n        this.onTouched();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n        this.keyManager.setFocusOrigin('keyboard');\n        // tslint:disable-next-line: deprecation\n        const keyCode = event.keyCode;\n\n        switch (keyCode) {\n            case DOWN_ARROW:\n                this.keyManager.setNextItemActive();\n\n                break;\n            case UP_ARROW:\n                this.keyManager.setPreviousItemActive();\n\n                break;\n            case LEFT_ARROW:\n                if (this.keyManager.activeItem) {\n                    this.treeControl.collapse(this.keyManager.activeItem.data as T);\n                }\n\n                event.preventDefault();\n\n                return;\n            case RIGHT_ARROW:\n                if (this.keyManager.activeItem) {\n                    this.treeControl.expand(this.keyManager.activeItem.data as T);\n                }\n\n                event.preventDefault();\n\n                return;\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this.keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this.keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                this.keyManager.setPreviousPageItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                this.keyManager.setNextPageItemActive();\n                event.preventDefault();\n\n                break;\n            default:\n                return;\n        }\n\n        if (this.keyManager.activeItem) {\n            this.setSelectedOptionsByKey(\n                this.keyManager.activeItem, hasModifierKey(event, 'shiftKey'), hasModifierKey(event, 'ctrlKey')\n            );\n        }\n    }\n\n    updateScrollSize(): void {\n        if (!this.renderedOptions.first) { return; }\n\n        this.keyManager.withScrollSize(Math.floor(this.getHeight() / this.renderedOptions.first.getHeight()));\n    }\n\n    setSelectedOptionsByKey(option: T, shiftKey: boolean, ctrlKey: boolean): void {\n        if (shiftKey && this.multiple) {\n            this.setSelectedOptions(option);\n        } else if (ctrlKey) {\n            if (!this.canDeselectLast(option)) { return; }\n        } else if (this.autoSelect) {\n            this.selectionModel.clear();\n            this.selectionModel.toggle(option.data);\n        }\n\n        this.emitChangeEvent(option);\n    }\n\n    setSelectedOptionsByClick(option: T, shiftKey: boolean, ctrlKey: boolean): void {\n        if (!shiftKey && !ctrlKey) {\n            this.keyManager.setActiveItem(option);\n        }\n\n        if (shiftKey && this.multiple) {\n            this.setSelectedOptions(option);\n        } else if (ctrlKey) {\n            if (!this.canDeselectLast(option)) { return; }\n\n            this.selectionModel.toggle(option.data);\n        } else if (this.autoSelect) {\n            this.selectionModel.clear();\n            this.selectionModel.toggle(option.data);\n        } else {\n            this.selectionModel.toggle(option.data);\n        }\n\n        this.emitChangeEvent(option);\n    }\n\n    setSelectedOptions(option: T): void {\n        const selectedOptionState = option.selected;\n\n        let fromIndex = this.keyManager.previousActiveItemIndex;\n        let toIndex = this.keyManager.previousActiveItemIndex = this.keyManager.activeItemIndex;\n\n        if (toIndex === fromIndex) { return; }\n\n        if (fromIndex > toIndex) {\n            [fromIndex, toIndex] = [toIndex, fromIndex];\n        }\n\n        this.renderedOptions\n            .toArray()\n            .slice(fromIndex, toIndex + 1)\n            .filter((item) => !item.disabled)\n            .forEach((renderedOption) => {\n                const isLastRenderedOption = renderedOption === this.keyManager.activeItem;\n\n                if (isLastRenderedOption && renderedOption.selected && this.noUnselectLast) { return; }\n\n                renderedOption.setSelected(!selectedOptionState);\n            });\n    }\n\n    setFocusedOption(option: T): void {\n        this.keyManager.setActiveItem(option);\n    }\n\n    toggleFocusedOption(): void {\n        const focusedOption = this.keyManager.activeItem;\n\n        if (focusedOption && (!focusedOption.selected || this.canDeselectLast(focusedOption))) {\n            focusedOption.toggle();\n            this.emitChangeEvent(focusedOption);\n        }\n    }\n\n    renderNodeChanges(\n        data: T[],\n        dataDiffer: IterableDiffer<T> = this.dataDiffer,\n        viewContainer: any = this.nodeOutlet.viewContainer,\n        parentData?: T\n    ): void {\n        super.renderNodeChanges(data, dataDiffer, viewContainer, parentData);\n\n        const arrayOfInstances = [];\n        const changeDetectorRefs: any[] = [];\n\n        viewContainer._embeddedViews.forEach((view: ViewData) => {\n            const viewDef = view.def;\n\n            viewDef.nodes.forEach((node: NodeDef) => {\n                if (viewDef.nodeMatchedQueries === node.matchedQueryIds) {\n                    const nodeData: any = view.nodes[node.nodeIndex];\n\n                    arrayOfInstances.push(nodeData.instance as never);\n                    changeDetectorRefs.push(nodeData.instance.changeDetectorRef);\n                }\n            });\n        });\n\n        setTimeout(() => {\n            changeDetectorRefs.forEach((changeDetectorRef) => {\n                if (!changeDetectorRef.destroyed) {\n                    changeDetectorRef.detectChanges();\n                }\n            });\n        });\n\n        if (this.renderedOptions) {\n            this.renderedOptions.reset(arrayOfInstances);\n            this.renderedOptions.notifyOnChanges();\n        }\n\n        this.updateScrollSize();\n\n        this.nodeOutlet.changeDetectorRef.detectChanges();\n    }\n\n    getHeight(): number {\n        const clientRects = this.elementRef.nativeElement.getClientRects();\n\n        if (clientRects.length) {\n            return clientRects[0].height;\n        }\n\n        return 0;\n    }\n\n    getItemHeight(): number {\n        return this.renderedOptions.first ? this.renderedOptions.first.getHeight() : 0;\n    }\n\n    emitNavigationEvent(option: T): void {\n        this.navigationChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    emitChangeEvent(option: T): void {\n        this.selectionChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    writeValue(value: any): void {\n        if (this.multiple && value && !Array.isArray(value)) {\n            throw getMcSelectNonArrayValueError();\n        }\n\n        if (this.renderedOptions) {\n            this.setOptionsFromValues(this.multiple ? value : [value]);\n        }\n    }\n\n    /** `View -> model callback called when value changes` */\n    onChange: (value: any) => void = () => {};\n\n    registerOnChange(fn: (value: any) => void): void {\n        this.onChange = fn;\n    }\n\n    /** `View -> model callback called when select has been touched` */\n    onTouched = () => {};\n\n    registerOnTouched(fn: () => {}): void {\n        this.onTouched = fn;\n    }\n\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     */\n    setDisabledState(isDisabled: boolean): void {\n        this._disabled = isDisabled;\n        this.changeDetectorRef.markForCheck();\n    }\n\n    setOptionsFromValues(values: any[]): void {\n        this.selectionModel.clear();\n\n        const valuesToSelect = values.reduce((result, value) => {\n            return this.treeControl.hasValue(value) ? [...result, this.treeControl.hasValue(value)] : [...result];\n        }, []);\n\n        this.selectionModel.select(...valuesToSelect);\n    }\n\n    getSelectedValues(): any[] {\n        return this.selectionModel.selected.map((selected) => this.treeControl.getValue(selected));\n    }\n\n    protected updateTabIndex(): void {\n        this._tabIndex = this.renderedOptions.length === 0 ? -1 : 0;\n    }\n\n    private allowFocusEscape() {\n        if (this._tabIndex !== -1) {\n            this._tabIndex = -1;\n\n            setTimeout(() => {\n                this._tabIndex = this.userTabIndex || 0;\n                this.changeDetectorRef.markForCheck();\n            });\n        }\n    }\n\n    private resetOptions() {\n        this.dropSubscriptions();\n        this.listenToOptionsFocus();\n    }\n\n    private dropSubscriptions() {\n        if (this.optionFocusSubscription) {\n            this.optionFocusSubscription.unsubscribe();\n            this.optionFocusSubscription = null;\n        }\n\n        if (this.optionBlurSubscription) {\n            this.optionBlurSubscription.unsubscribe();\n            this.optionBlurSubscription = null;\n        }\n    }\n\n    private listenToOptionsFocus(): void {\n        this.optionFocusSubscription = this.optionFocusChanges\n            .subscribe((event) => {\n                const index: number = this.renderedOptions.toArray().indexOf(event.option as T);\n\n                this.renderedOptions\n                    .filter((option) => option.hasFocus)\n                    .forEach((option) => option.hasFocus = false);\n\n                if (this.isValidIndex(index)) {\n                    this.keyManager.updateActiveItem(index);\n                }\n            });\n\n        this.optionBlurSubscription = this.optionBlurChanges\n            .subscribe(() => this.blur());\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.renderedOptions.length;\n    }\n\n    /** Checks whether any of the options is focused. */\n    private hasFocusedOption() {\n        return this.renderedOptions.some((option) => option.hasFocus);\n    }\n\n    private markOptionsForCheck() {\n        if (this.renderedOptions) {\n            this.renderedOptions.forEach((option) => option.markForCheck());\n        }\n    }\n\n    private updateOptionsFocus() {\n        this.renderedOptions\n            .filter((option) => option.hasFocus)\n            .forEach((option) => option.hasFocus = false);\n    }\n\n    private canDeselectLast(option: McTreeOption): boolean {\n        return !(this.noUnselectLast && this.selectionModel.selected.length === 1 && option.selected);\n    }\n\n    private isFocusReceivedFromNestedOption($event: FocusEvent) {\n        if (!$event || !$event.relatedTarget) { return false; }\n\n        return ($event.relatedTarget as HTMLElement).classList.contains('mc-tree-option');\n    }\n}\n\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\nimport { McPseudoCheckboxModule } from '@ptsecurity/mosaic/core';\n\nimport { McTreeNodeDef } from './node.directive';\nimport { McTreeNodePadding } from './padding.directive';\nimport { McTreeNodeToggleDirective, McTreeNodeToggleComponent } from './toggle';\nimport { McTreeOption } from './tree-option.component';\nimport { McTreeSelection } from './tree-selection.component';\n\n\nconst MC_TREE_DIRECTIVES = [\n    McTreeSelection,\n    McTreeOption,\n    McTreeNodeDef,\n    McTreeNodePadding,\n    McTreeNodeToggleComponent,\n    McTreeNodeToggleDirective\n];\n\n@NgModule({\n    imports: [CommonModule, CdkTreeModule, McPseudoCheckboxModule],\n    exports: MC_TREE_DIRECTIVES,\n    declarations: MC_TREE_DIRECTIVES\n})\nexport class McTreeModule {}\n","import { CollectionViewer, DataSource } from '@angular/cdk/collections';\nimport { FlatTreeControl, TreeControl } from '@ptsecurity/cdk/tree';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nexport class McTreeFlattener<T, F> {\n    constructor(\n        public transformFunction: (node: T, level: number, parent: F | null) => F,\n        public getLevel: (node: F) => number,\n        public isExpandable: (node: F) => boolean,\n        public getChildren: (node: T) => Observable<T[]> | T[] | undefined | null\n    ) {}\n\n    flattenNode(node: T, level: number, resultNodes: F[], parent: F | null): F[] {\n        const flatNode = this.transformFunction(node, level, parent);\n        resultNodes.push(flatNode);\n\n        if (this.isExpandable(flatNode)) {\n            const childrenNodes = this.getChildren(node);\n\n            if (childrenNodes) {\n                if (Array.isArray(childrenNodes)) {\n                    this.flattenChildren(childrenNodes, level, resultNodes, flatNode);\n                } else {\n                    childrenNodes\n                        .pipe(take(1))\n                        .subscribe((children) => {\n                            this.flattenChildren(children, level, resultNodes, flatNode);\n                        });\n                }\n            }\n        }\n\n        return resultNodes;\n    }\n\n    flattenChildren(children: T[], level: number, resultNodes: F[], parent: F | null): void {\n        children.forEach((child) => {\n            this.flattenNode(child, level + 1, resultNodes, parent);\n        });\n    }\n\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData: T[]): F[] {\n        const resultNodes: F[] = [];\n        structuredData.forEach((node) => this.flattenNode(node, 0, resultNodes, null));\n\n        return resultNodes;\n    }\n\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes: F[], treeControl: TreeControl<F>): F[] {\n        const results: F[] = [];\n        const currentExpand: boolean[] = [];\n        currentExpand[0] = true;\n\n        nodes.forEach((node) => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n\n            if (expand) { results.push(node); }\n\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n\n        return results;\n    }\n}\n\nenum McTreeDataSourceChangeTypes {\n    Expansion = 'expansion',\n    Filter = 'filter'\n}\n\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `McTree`.\n * The nested tree nodes of type `T` are flattened through `MсTreeFlattener`, and converted\n * to type `F` for `McTree` to consume.\n */\nexport class McTreeFlatDataSource<T, F> extends DataSource<F> {\n    flattenedData = new BehaviorSubject<F[]>([]);\n\n    expandedData = new BehaviorSubject<F[]>([]);\n\n    filteredData = new BehaviorSubject<F[]>([]);\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n\n        this.flattenedData.next(this.treeFlattener.flattenNodes(this.data));\n        this.treeControl.dataNodes = this.flattenedData.value;\n    }\n\n    private _data: BehaviorSubject<T[]>;\n\n    constructor(\n        private treeControl: FlatTreeControl<F>,\n        private treeFlattener: McTreeFlattener<T, F>,\n        initialData: T[] = []\n    ) {\n        super();\n\n        this._data = new BehaviorSubject<T[]>(initialData);\n    }\n\n    connect(collectionViewer: CollectionViewer): Observable<F[]> {\n        return merge(\n            collectionViewer.viewChange,\n            this.treeControl.expansionModel.changed\n                .pipe(map((value) => ({ type: McTreeDataSourceChangeTypes.Expansion, value }))),\n            this.treeControl.filterValue\n                .pipe(map((value) => ({ type: McTreeDataSourceChangeTypes.Filter, value }))),\n            this.flattenedData\n        )\n        .pipe(map((changeObj: any): any => {\n            if (changeObj.type === McTreeDataSourceChangeTypes.Filter) {\n                if (changeObj.value && changeObj.value.length > 0) {\n                    return this.filterHandler();\n                } else {\n                    return this.expansionHandler();\n                }\n            }\n\n            return this.expansionHandler();\n        }));\n    }\n\n    filterHandler(): F[] {\n        this.filteredData.next(this.treeControl.filterModel.selected);\n\n        return this.filteredData.value;\n    }\n\n    expansionHandler(): F[] {\n        const expandedNodes = this.treeFlattener.expandFlattenedNodes(this.flattenedData.value, this.treeControl);\n        this.expandedData.next(expandedNodes);\n\n        return this.expandedData.value;\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { CollectionViewer, DataSource } from '@angular/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by TreeControl and each non-leaf node.\n */\nexport class McTreeNestedDataSource<T> extends DataSource<T> {\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n    }\n\n    /* tslint:disable-next-line:naming-convention */\n    private _data = new BehaviorSubject<T[]>([]);\n\n    connect(collectionViewer: CollectionViewer): Observable<T[]> {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map(() => this.data));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n"]}