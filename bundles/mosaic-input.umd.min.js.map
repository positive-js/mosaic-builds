{"version":3,"file":"mosaic-input.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/lib/input/input-errors.ts","../../src/lib/input/stepperUtils.ts","../../src/lib/input/input-value-accessor.ts","../../src/lib/input/input.ts","../../src/lib/input/input-number-validators.ts","../../src/lib/input/input.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export function getMcInputUnsupportedTypeError(inputType: string): Error {\n    return Error(`Input type \"${inputType}\" isn't supported by mcInput.`);\n}\n","function sanitizeNumber(value: number): number | null {\n    return !isFinite(value) || isNaN(value)\n        ? null\n        : value;\n}\n\nfunction getPrecision(value: number): number {\n    const arr = value.toString().split('.');\n\n    return arr.length === 1\n        ? 1\n        // tslint:disable-next-line:no-magic-numbers\n        :  Math.pow(10, arr[1].length);\n}\n\nfunction add(value1: number, value2: number) {\n    const precision = Math.max(getPrecision(value1), getPrecision(value2));\n\n    const res = (value1 * precision + value2 * precision) / precision;\n\n    return sanitizeNumber(res);\n}\n\nexport const stepUp = (value: number | null,\n                       max: number,\n                       min: number,\n                       step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(min, step);\n\n        return res === null ? null : Math.min(res, max);\n    }\n\n    res = add(value, step);\n\n    return res === null ? null : Math.max(Math.min(res, max), min);\n};\n\nexport const stepDown = (value: number | null,\n                         max: number,\n                         min: number,\n                         step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(max, -step);\n\n        return res === null ? null : Math.max(res, min);\n    }\n\n    res = add(value, -step);\n\n    return res === null ? null : Math.min(Math.max(res, min), max);\n};\n","import { InjectionToken } from '@angular/core';\n\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n","import {\n    Attribute,\n    Directive, DoCheck, ElementRef, Inject, Input, OnChanges,\n    OnDestroy, Optional, Self\n} from '@angular/core';\nimport {\n    FormGroupDirective,\n    NgControl,\n    NgForm, NgModel\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    END, C, V, X, A, DELETE, BACKSPACE, TAB, ENTER,\n    ESCAPE, ZERO, NINE, NUMPAD_ZERO, NUMPAD_NINE, NUMPAD_MINUS, DASH,\n    FF_MINUS, LEFT_ARROW, RIGHT_ARROW, HOME, UP_ARROW, DOWN_ARROW, F1, F12\n} from '@ptsecurity/cdk/keycodes';\nimport { getSupportedInputTypes, Platform } from '@ptsecurity/cdk/platform';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl, McFormFieldNumberControl } from '@ptsecurity/mosaic/form-field';\nimport { Subject } from 'rxjs';\n\nimport { getMcInputUnsupportedTypeError } from './input-errors';\nimport { MC_INPUT_VALUE_ACCESSOR } from './input-value-accessor';\nimport { stepDown, stepUp } from './stepperUtils';\n\n\nconst MC_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n\nexport const BIG_STEP = 10;\nexport const SMALL_STEP = 1;\n\nlet nextUniqueId = 0;\n\nexport class McInputBase {\n    constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n                public _parentForm: NgForm,\n                public _parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\nexport const _McInputMixinBase: CanUpdateErrorStateCtor & typeof McInputBase =\n    mixinErrorState(McInputBase);\n\n\n@Directive({\n    selector: `input[mcInput][type=\"number\"]`,\n    exportAs: 'mcNumericalInput',\n    providers: [NgModel, { provide: McFormFieldNumberControl, useExisting: McNumberInput }],\n    host: {\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McNumberInput implements McFormFieldNumberControl<any> {\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    value: any;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    private readonly _host: HTMLInputElement;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    private readonly _step: number;\n    get step() {\n        return this._step;\n    }\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    private readonly _bigStep: number;\n    get bigStep() {\n        return this._bigStep;\n    }\n\n    private readonly _min: number;\n    private readonly _max: number;\n\n    constructor(\n        private _platform: Platform ,\n        private _elementRef: ElementRef,\n        private _model: NgModel,\n        @Attribute('step') step: string,\n        @Attribute('big-step') bigStep: string,\n        @Attribute('min') min: string,\n        @Attribute('max') max: string\n    ) {\n        this._step = this.isDigit(step) ? parseFloat(step) : SMALL_STEP;\n        this._bigStep = this.isDigit(bigStep) ? parseFloat(bigStep) : BIG_STEP;\n        this._min = this.isDigit(min) ? parseFloat(min) : -Infinity;\n        this._max = this.isDigit(max) ? parseFloat(max) : Infinity;\n\n        this._host = this._elementRef.nativeElement;\n\n        const self = this;\n\n        if ('valueAsNumber' in this._host) {\n            Object.defineProperty(Object.getPrototypeOf(this._host), 'valueAsNumber', {\n                // tslint:disable-next-line:no-reserved-keywords\n                get() {\n                    const res = parseFloat(self.normalizeSplitter(this.value));\n\n                    return isNaN(res) ? null : res;\n                }\n            });\n        }\n    }\n\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const keyCode = event.keyCode;\n\n        const isCtrlA = (e) => e.keyCode === A && (e.ctrlKey || e.metaKey);\n        const isCtrlC = (e) => e.keyCode === C && (e.ctrlKey || e.metaKey);\n        const isCtrlV = (e) => e.keyCode === V && (e.ctrlKey || e.metaKey);\n        const isCtrlX = (e) => e.keyCode === X && (e.ctrlKey || e.metaKey);\n\n        const isFKey = (e) => e.keyCode >= F1 && e.keyCode <= F12;\n\n        const isNumber = (e) => (e.keyCode >= ZERO && e.keyCode <= NINE) ||\n            (e.keyCode >= NUMPAD_ZERO && e.keyCode <= NUMPAD_NINE);\n\n        const minuses = [NUMPAD_MINUS, DASH, FF_MINUS];\n        const serviceKeys = [DELETE, BACKSPACE, TAB, ESCAPE, ENTER];\n        const arrows = [LEFT_ARROW, RIGHT_ARROW];\n        const allowedKeys =  [HOME, END].concat(arrows).concat(serviceKeys).concat(minuses);\n\n        const isIEPeriod = (e) => e.key === '.' || e.key === 'Decimal';\n        const isNotIEPeriod = (e) => e.key === '.' || e.key === ',';\n\n        // Decimal is for IE\n        const isPeriod = (e) => this._platform.EDGE || this._platform.TRIDENT\n            ? isIEPeriod(e)\n            : isNotIEPeriod(e);\n\n        if (allowedKeys.indexOf(keyCode) !== -1 ||\n            isCtrlA(event) ||\n            isCtrlC(event) ||\n            isCtrlV(event) ||\n            isCtrlX(event) ||\n            isFKey(event) ||\n            isPeriod(event)\n        ) {\n            // let it happen, don't do anything\n            return;\n        }\n        // Ensure that it is not a number and stop the keypress\n        if (event.shiftKey || !isNumber(event)) {\n            event.preventDefault();\n\n            // process steps\n            const step = event.shiftKey ? this._bigStep : this._step;\n\n            if (keyCode === UP_ARROW) {\n                this.stepUp(step);\n            }\n\n            if (keyCode === DOWN_ARROW) {\n                this.stepDown(step);\n            }\n        }\n    }\n\n    onPaste(event) {\n        let value = event.clipboardData.getData('text');\n        value = this.normalizeSplitter(value);\n\n        if (!this.isDigit(value)) {\n            event.preventDefault();\n        }\n    }\n\n    stepUp(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepUp(this._host.valueAsNumber, this._max, this._min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    stepDown(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepDown(this._host.valueAsNumber, this._max, this._min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    private normalizeSplitter(value: string): string {\n        return value ? value.replace(/,/g, '.') : value;\n    }\n\n    private isDigit(value: string): boolean {\n        return this.isFloat(value) || this.isInt(value);\n    }\n\n    private isFloat(value: string): boolean {\n        return /^-?\\d+\\.\\d+$/.test(value);\n    }\n\n    private isInt(value: string): boolean {\n        return /^-?\\d+$/.test(value);\n    }\n}\n\n@Directive({\n    selector: `input[mcInput]`,\n    exportAs: 'mcInput',\n    host: {\n        class: 'mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(input)': '_onInput()'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McInput }]\n})\nexport class McInput extends _McInputMixinBase implements McFormFieldControl<any>, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-input';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    // tslint:disable no-reserved-keywords\n    /** Input type of the element. */\n    @Input()\n    get type(): string {\n        return this._type;\n    }\n\n    set type(value: string) {\n        this._type = value || 'text';\n        this._validateType();\n\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    // tslint:enable no-reserved-keywords\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this._inputValueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected _uid = `mc-input-${nextUniqueId++}`;\n    protected _previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n    protected _type = 'text';\n    protected _neverEmptyInputTypes = [\n        'date',\n        'datetime',\n        'datetime-local',\n        'month',\n        'time',\n        'week'\n    ].filter((t) => getSupportedInputTypes().has(t));\n\n    private _inputValueAccessor: { value: any };\n\n    constructor(protected _elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || this._elementRef.nativeElement;\n\n        this._previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n\n    /** Focuses the input. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the input changes. */\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    protected _dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Make sure the input is a supported type. */\n    protected _validateType() {\n        if (MC_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMcInputUnsupportedTypeError(this._type);\n        }\n    }\n\n    /** Checks whether the input type is one of the types that are never empty. */\n    protected _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    protected _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this._elementRef.nativeElement as HTMLInputElement).validity;\n\n        return validity && validity.badInput;\n    }\n}\n\n@Directive({\n    selector: 'input[mcInputMonospace]',\n    exportAs: 'McInputMonospace',\n    host: { class: 'mc-input_monospace' }\n})\nexport class McInputMono {\n}\n","import { Directive, forwardRef, Input, OnChanges, Provider, SimpleChanges } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, ValidatorFn, Validators } from '@angular/forms';\n\n\nexport const MIN_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MinValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[min][formControlName],[min][formControl],[min][ngModel]',\n    providers: [MIN_VALIDATOR],\n    host: {'[attr.min]': 'min ? min : null'}\n})\nexport class MinValidator implements Validator, OnChanges {\n\n    @Input() min: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('min' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.min(parseInt(this.min, 10)); }\n}\n\n\nexport const MAX_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MaxValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[max][formControlName],[max][formControl],[max][ngModel]',\n    providers: [MAX_VALIDATOR],\n    host: {'[attr.max]': 'max ? max : null'}\n})\nexport class MaxValidator implements Validator,\n    OnChanges {\n\n    @Input() max: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('max' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.max(parseInt(this.max, 10)); }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McInput, McInputMono, McNumberInput } from './input';\nimport { MaxValidator, MinValidator } from './input-number-validators';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator],\n    declarations: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator ]\n})\nexport class McInputModule {\n}\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","getMcInputUnsupportedTypeError","inputType","Error","sanitizeNumber","value","isFinite","isNaN","getPrecision","arr","toString","split","Math","pow","add","value1","value2","precision","max","setPrototypeOf","__proto__","Array","p","hasOwnProperty","MC_INPUT_VALUE_ACCESSOR","InjectionToken","stepUp","min","step","res","stepDown","MC_INPUT_INVALID_TYPES","BIG_STEP","SMALL_STEP","nextUniqueId","McInputBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","_McInputMixinBase","mixinErrorState","McNumberInput","_platform","_elementRef","_model","bigStep","focused","stateChanges","Subject","_step","isDigit","parseFloat","_bigStep","_min","Infinity","_max","_host","nativeElement","self","getPrototypeOf","get","normalizeSplitter","McNumberInput_1","_focusChanged","isFocused","next","onKeyDown","event","_this","keyCode","minuses","NUMPAD_MINUS","DASH","FF_MINUS","serviceKeys","DELETE","BACKSPACE","TAB","ESCAPE","ENTER","arrows","LEFT_ARROW","RIGHT_ARROW","allowedKeys","HOME","END","concat","isIEPeriod","e","isNotIEPeriod","indexOf","A","ctrlKey","metaKey","C","V","X","F1","F12","EDGE","TRIDENT","shiftKey","ZERO","NINE","NUMPAD_ZERO","NUMPAD_NINE","preventDefault","UP_ARROW","DOWN_ARROW","onPaste","clipboardData","getData","focus","valueAsNumber","update","emit","replace","isFloat","isInt","test","tslib_1.__decorate","Directive","selector","exportAs","providers","NgModel","provide","McFormFieldNumberControl","useExisting","host","(blur)","(focus)","(paste)","(keydown)","tslib_1.__param","Attribute","tslib_1.__metadata","Platform","ElementRef","String","McInput","_super","inputValueAccessor","call","controlType","_uid","_disabled","_required","_type","_neverEmptyInputTypes","filter","t","getSupportedInputTypes","has","_inputValueAccessor","_previousNativeValue","id","tslib_1.__extends","McInput_1","disabled","set","coerceBooleanProperty","_id","_validateType","type","ngOnChanges","ngOnDestroy","complete","ngDoCheck","updateErrorState","_dirtyCheckNativeValue","_onInput","_isNeverEmpty","_isBadInput","onContainerClick","newValue","validity","badInput","Input","ErrorStateMatcher","class","[attr.id]","[attr.placeholder]","[disabled]","[required]","(input)","McFormFieldControl","Optional","Self","Inject","NgControl","NgForm","FormGroupDirective","McInputMono","MIN_VALIDATOR","NG_VALIDATORS","forwardRef","MinValidator","multi","changes","_createValidator","_onChange","validate","_validator","registerOnValidatorChange","fn","Validators","parseInt","[attr.min]","MAX_VALIDATOR","MaxValidator","[attr.max]","McInputModule","NgModule","imports","CommonModule","A11yModule","McCommonModule","FormsModule","exports","declarations"],"mappings":"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"}