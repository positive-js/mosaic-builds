{"version":3,"file":"mosaic-input.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../packages/mosaic/input/input-errors.ts","../../packages/mosaic/input/stepperUtils.ts","../../packages/mosaic/input/input-value-accessor.ts","../../packages/mosaic/input/input.ts","../../packages/mosaic/input/input-number-validators.ts","../../packages/mosaic/input/input.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export function getMcInputUnsupportedTypeError(inputType: string): Error {\n    return Error(`Input type \"${inputType}\" isn't supported by mcInput.`);\n}\n","function getPrecision(value: number): number {\n    const arr = value.toString().split('.');\n\n    return arr.length === 1\n        ? 1\n        // tslint:disable-next-line:no-magic-numbers\n        :  Math.pow(10, arr[1].length);\n}\n\nfunction add(value1: number, value2: number) {\n    const precision = Math.max(getPrecision(value1), getPrecision(value2));\n\n    return (value1 * precision + value2 * precision) / precision;\n}\n\nexport const stepUp = (value: number, max: number, min: number, step: number): number => {\n    return Math.max(Math.min(add(value, step), max), min);\n};\n\nexport const stepDown = (value: number, max: number, min: number, step: number): number => {\n    return Math.min(Math.max(add(value, -step), min), max);\n};\n","import { InjectionToken } from '@angular/core';\n\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { getSupportedInputTypes, Platform } from '@angular/cdk/platform';\nimport {\n    AfterContentInit,\n    Attribute,\n    Directive,\n    DoCheck,\n    ElementRef,\n    Inject,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Self\n} from '@angular/core';\nimport {\n    FormGroupDirective,\n    NG_VALIDATORS,\n    NgControl,\n    NgForm,\n    NgModel,\n    Validator\n} from '@angular/forms';\nimport {\n    END, C, V, X, A, Z, DELETE, BACKSPACE, TAB, ENTER,\n    ESCAPE, ZERO, NINE, NUMPAD_ZERO, NUMPAD_NINE, NUMPAD_MINUS, DASH,\n    FF_MINUS, LEFT_ARROW, RIGHT_ARROW, HOME, UP_ARROW, DOWN_ARROW, F1, F12\n} from '@ptsecurity/cdk/keycodes';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    MC_VALIDATION,\n    McValidationOptions,\n    mixinErrorState,\n    setMosaicValidation\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl, McFormFieldNumberControl } from '@ptsecurity/mosaic/form-field';\nimport { Subject } from 'rxjs';\n\nimport { getMcInputUnsupportedTypeError } from './input-errors';\nimport { MC_INPUT_VALUE_ACCESSOR } from './input-value-accessor';\nimport { stepDown, stepUp } from './stepperUtils';\n\n\nconst MC_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n\nexport const BIG_STEP = 10;\nexport const SMALL_STEP = 1;\n\nlet nextUniqueId = 0;\n\nexport class McInputBase {\n    constructor(\n        public defaultErrorStateMatcher: ErrorStateMatcher,\n        public parentForm: NgForm,\n        public parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl\n    ) {}\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McInputMixinBase: CanUpdateErrorStateCtor & typeof McInputBase = mixinErrorState(McInputBase);\n\n\n@Directive({\n    selector: `input[mcInput][type=\"number\"]`,\n    exportAs: 'mcNumericalInput',\n    providers: [\n        { provide: McFormFieldNumberControl, useExisting: McNumberInput }\n    ],\n    host: {\n        '(blur)': 'focusChanged(false)',\n        '(focus)': 'focusChanged(true)',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McNumberInput implements McFormFieldNumberControl<any> {\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    bigStep: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    step: number;\n\n    @Input()\n    min: number;\n\n    @Input()\n    max: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    value: any;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    private readonly host: HTMLInputElement;\n\n    constructor(\n        private platform: Platform ,\n        private elementRef: ElementRef,\n        private model: NgModel,\n        @Attribute('step') step: string,\n        @Attribute('big-step') bigStep: string,\n        @Attribute('min') min: string,\n        @Attribute('max') max: string\n    ) {\n        this.step = this.isDigit(step) ? parseFloat(step) : SMALL_STEP;\n        this.bigStep = this.isDigit(bigStep) ? parseFloat(bigStep) : BIG_STEP;\n        this.min = this.isDigit(min) ? parseFloat(min) : -Infinity;\n        this.max = this.isDigit(max) ? parseFloat(max) : Infinity;\n\n        this.host = this.elementRef.nativeElement;\n\n        const self = this;\n\n        if ('valueAsNumber' in this.host) {\n            Object.defineProperty(Object.getPrototypeOf(this.host), 'valueAsNumber', {\n                // tslint:disable-next-line:no-reserved-keywords\n                get() {\n                    const res = parseFloat(self.normalizeSplitter(this.value));\n\n                    return isNaN(res) ? null : res;\n                }\n            });\n        }\n    }\n\n    focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const keyCode = event.keyCode;\n\n        const isCtrlA = (e) => e.keyCode === A && (e.ctrlKey || e.metaKey);\n        const isCtrlC = (e) => e.keyCode === C && (e.ctrlKey || e.metaKey);\n        const isCtrlV = (e) => e.keyCode === V && (e.ctrlKey || e.metaKey);\n        const isCtrlX = (e) => e.keyCode === X && (e.ctrlKey || e.metaKey);\n        const isCtrlZ = (e) => e.keyCode === Z && (e.ctrlKey || e.metaKey);\n\n        const isFKey = (e) => e.keyCode >= F1 && e.keyCode <= F12;\n\n        const isNumber = (e) => (e.keyCode >= ZERO && e.keyCode <= NINE) ||\n            (e.keyCode >= NUMPAD_ZERO && e.keyCode <= NUMPAD_NINE);\n\n        const minuses = [NUMPAD_MINUS, DASH, FF_MINUS];\n        const serviceKeys = [DELETE, BACKSPACE, TAB, ESCAPE, ENTER];\n        const arrows = [LEFT_ARROW, RIGHT_ARROW];\n        const allowedKeys =  [HOME, END].concat(arrows).concat(serviceKeys).concat(minuses);\n\n        const isIEPeriod = (e) => e.key === '.' || e.key === 'Decimal';\n        const isNotIEPeriod = (e) => e.key === '.' || e.key === ',';\n\n        // Decimal is for IE\n        const isPeriod = (e) => this.platform.EDGE || this.platform.TRIDENT\n            ? isIEPeriod(e)\n            : isNotIEPeriod(e);\n\n        if (allowedKeys.indexOf(keyCode) !== -1 ||\n            isCtrlA(event) ||\n            isCtrlC(event) ||\n            isCtrlV(event) ||\n            isCtrlX(event) ||\n            isCtrlZ(event) ||\n            isFKey(event) ||\n            isPeriod(event)\n        ) {\n            // let it happen, don't do anything\n            return;\n        }\n        // Ensure that it is not a number and stop the keypress\n        if (event.shiftKey || !isNumber(event)) {\n            event.preventDefault();\n\n            // process steps\n            const step = event.shiftKey ? this.bigStep : this.step;\n\n            if (keyCode === UP_ARROW) {\n                this.stepUp(step);\n            }\n\n            if (keyCode === DOWN_ARROW) {\n                this.stepDown(step);\n            }\n        }\n    }\n\n    onPaste(event) {\n        let value = event.clipboardData.getData('text');\n        value = this.normalizeSplitter(value);\n\n        if (!this.isDigit(value)) {\n            event.preventDefault();\n        }\n    }\n\n    stepUp(step: number) {\n        this.elementRef.nativeElement.focus();\n\n        const res = stepUp(this.host.valueAsNumber || 0, this.max, this.min, step);\n\n        this.host.value = res.toString();\n        this.model.update.emit(this.host.valueAsNumber);\n    }\n\n    stepDown(step: number) {\n        this.elementRef.nativeElement.focus();\n\n        const res = stepDown(this.host.valueAsNumber || 0, this.max, this.min, step);\n\n        this.host.value = res.toString();\n        this.model.update.emit(this.host.valueAsNumber);\n    }\n\n    private normalizeSplitter(value: string): string {\n        return value ? value.replace(/,/g, '.') : value;\n    }\n\n    private isDigit(value: string): boolean {\n        return this.isFloat(value) || this.isInt(value);\n    }\n\n    private isFloat(value: string): boolean {\n        return /^-?\\d+\\.\\d+$/.test(value);\n    }\n\n    private isInt(value: string): boolean {\n        return /^-?\\d+$/.test(value);\n    }\n}\n\n\n@Directive({\n    selector: `input[mcInput]`,\n    exportAs: 'mcInput',\n    host: {\n        class: 'mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': 'onBlur()',\n        '(focus)': 'focusChanged(true)',\n        '(input)': 'onInput()'\n    },\n    providers: [\n        { provide: McFormFieldControl, useExisting: McInput }\n    ]\n})\nexport class McInput extends McInputMixinBase implements McFormFieldControl<any>, OnChanges, OnDestroy, DoCheck,\n    CanUpdateErrorState, AfterContentInit, OnChanges {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-input';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    protected uid = `mc-input-${nextUniqueId++}`;\n    protected previousNativeValue: any;\n    protected neverEmptyInputTypes = [\n        'date',\n        'datetime',\n        'datetime-local',\n        'month',\n        'time',\n        'week'\n    ].filter((t) => getSupportedInputTypes().has(t));\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    private _disabled = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this.uid;\n    }\n\n    private _id: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    private _required = false;\n\n    // tslint:disable no-reserved-keywords\n    /** Input type of the element. */\n    @Input()\n    get type(): string {\n        return this._type;\n    }\n\n    set type(value: string) {\n        this._type = value || 'text';\n        this.validateType();\n\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (getSupportedInputTypes().has(this._type)) {\n            this.elementRef.nativeElement.type = this._type;\n        }\n    }\n    // tslint:enable no-reserved-keywords\n\n    private _type = 'text';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this._inputValueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    // tslint:disable-next-line: orthodox-getter-and-setter\n    private _inputValueAccessor: { value: any };\n\n    // tslint:disable-next-line: naming-convention\n    constructor(\n        protected elementRef: ElementRef,\n        @Optional() @Self() @Inject(NG_VALIDATORS) private rawValidators: Validator[],\n        @Optional() @Inject(MC_VALIDATION) private mcValidation: McValidationOptions,\n        @Optional() @Self() ngControl: NgControl,\n        @Optional() parentForm: NgForm,\n        @Optional() parentFormGroup: FormGroupDirective,\n        defaultErrorStateMatcher: ErrorStateMatcher,\n        @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any\n    ) {\n        super(defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\n\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngAfterContentInit(): void {\n        if (!this.ngControl) { return; }\n\n        if (this.mcValidation.useValidation) {\n            setMosaicValidation.call(this, this.rawValidators, this.parentForm || this.parentFormGroup, this.ngControl);\n        }\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    /** Focuses the input. */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    onBlur(): void {\n        this.focusChanged(false);\n\n        this.ngControl.control!.updateValueAndValidity();\n    }\n\n    /** Callback for the cases where the focused state of the input changes. */\n    focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.isNeverEmpty() && !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    protected dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Make sure the input is a supported type. */\n    protected validateType() {\n        if (MC_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMcInputUnsupportedTypeError(this._type);\n        }\n    }\n\n    /** Checks whether the input type is one of the types that are never empty. */\n    protected isNeverEmpty() {\n        return this.neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    protected isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this.elementRef.nativeElement as HTMLInputElement).validity;\n\n        return validity && validity.badInput;\n    }\n}\n\n@Directive({\n    selector: 'input[mcInputMonospace]',\n    exportAs: 'McInputMonospace',\n    host: { class: 'mc-input_monospace' }\n})\nexport class McInputMono {\n}\n","import { Directive, forwardRef, Input, OnChanges, Provider, SimpleChanges } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, ValidatorFn, Validators } from '@angular/forms';\n\n\nexport const MIN_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MinValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[min][formControlName],[min][formControl],[min][ngModel]',\n    providers: [MIN_VALIDATOR],\n    host: {'[attr.min]': 'min ? min : null'}\n})\nexport class MinValidator implements Validator, OnChanges {\n\n    @Input() min: string;\n    private validator: ValidatorFn;\n    private onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('min' in changes) {\n            this.createValidator();\n            if (this.onChange) { this.onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this.validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this.onChange = fn; }\n\n    private createValidator(): void { this.validator = Validators.min(parseInt(this.min, 10)); }\n}\n\n\nexport const MAX_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MaxValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[max][formControlName],[max][formControl],[max][ngModel]',\n    providers: [MAX_VALIDATOR],\n    host: {\n        '[attr.max]': 'max ? max : null'\n    }\n})\nexport class MaxValidator implements Validator,\n    OnChanges {\n\n    @Input() max: string;\n    private validator: ValidatorFn;\n    private onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('max' in changes) {\n            this.createValidator();\n            if (this.onChange) { this.onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this.validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this.onChange = fn; }\n\n    private createValidator(): void { this.validator = Validators.max(parseInt(this.max, 10)); }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McInput, McInputMono, McNumberInput } from './input';\nimport { MaxValidator, MinValidator } from './input-number-validators';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator],\n    declarations: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator ]\n})\nexport class McInputModule {\n}\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","getMcInputUnsupportedTypeError","inputType","Error","getPrecision","value","arr","toString","split","length","Math","pow","add","value1","value2","precision","max","setPrototypeOf","__proto__","Array","p","hasOwnProperty","MC_INPUT_VALUE_ACCESSOR","InjectionToken","stepUp","min","step","stepDown","MC_INPUT_INVALID_TYPES","BIG_STEP","SMALL_STEP","nextUniqueId","McInputBase","defaultErrorStateMatcher","parentForm","parentFormGroup","ngControl","McInputMixinBase","mixinErrorState","McNumberInput","platform","elementRef","model","bigStep","focused","stateChanges","Subject","isDigit","parseFloat","Infinity","host","nativeElement","self","defineProperty","getPrototypeOf","get","res","normalizeSplitter","isNaN","focusChanged","isFocused","next","onKeyDown","event","_this","keyCode","minuses","NUMPAD_MINUS","DASH","FF_MINUS","serviceKeys","DELETE","BACKSPACE","TAB","ESCAPE","ENTER","arrows","LEFT_ARROW","RIGHT_ARROW","allowedKeys","HOME","END","concat","isIEPeriod","e","key","isNotIEPeriod","indexOf","A","ctrlKey","metaKey","C","V","X","Z","F1","F12","EDGE","TRIDENT","shiftKey","ZERO","NINE","NUMPAD_ZERO","NUMPAD_NINE","preventDefault","UP_ARROW","DOWN_ARROW","onPaste","clipboardData","getData","focus","valueAsNumber","update","emit","replace","isFloat","isInt","test","type","Directive","args","selector","exportAs","providers","provide","McFormFieldNumberControl","useExisting","(blur)","(focus)","(paste)","(keydown)","Platform","ElementRef","NgModel","String","decorators","Attribute","Input","McInput","_super","rawValidators","mcValidation","inputValueAccessor","call","controlType","uid","neverEmptyInputTypes","filter","t","getSupportedInputTypes","has","_disabled","_required","_type","_inputValueAccessor","previousNativeValue","id","tslib_1.__extends","disabled","coerceBooleanProperty","_id","validateType","ngAfterContentInit","useValidation","setMosaicValidation","ngOnChanges","ngOnDestroy","complete","ngDoCheck","updateErrorState","dirtyCheckNativeValue","onBlur","updateValueAndValidity","onInput","isNeverEmpty","isBadInput","onContainerClick","newValue","validity","badInput","class","[attr.id]","[attr.placeholder]","[disabled]","[required]","(input)","McFormFieldControl","Optional","Self","Inject","NG_VALIDATORS","undefined","MC_VALIDATION","NgControl","NgForm","FormGroupDirective","ErrorStateMatcher","errorStateMatcher","placeholder","required","McInputMono","MIN_VALIDATOR","forwardRef","MinValidator","multi","changes","createValidator","onChange","validate","c","validator","registerOnValidatorChange","fn","Validators","parseInt","[attr.min]","MAX_VALIDATOR","MaxValidator","[attr.max]","McInputModule","NgModule","imports","CommonModule","A11yModule","McCommonModule","FormsModule","exports","declarations"],"mappings":"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"}