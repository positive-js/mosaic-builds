/**
 * @license
 * Positive Technologies All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license.
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/forms"),require("@ptsecurity/cdk/a11y"),require("@ptsecurity/mosaic/core"),require("@angular/common")):"function"==typeof define&&define.amd?define("@ptsecurity/mosaic/checkbox",["exports","@angular/core","@angular/forms","@ptsecurity/cdk/a11y","@ptsecurity/mosaic/core","@angular/common"],t):t((e.ng=e.ng||{},e.ng.mosaic=e.ng.mosaic||{},e.ng.mosaic.checkbox={}),e.ng.core,e.ng.forms,e.ng.cdk.a11y,e.ng.mosaic.core,e.ng.common)}(this,function(e,t,n,i,c,o){"use strict";function r(e,t){function n(){this.constructor=e}a(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}var a=function(e,t){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},s=new t.InjectionToken("mc-checkbox-click-action"),h=0,d={provide:n.NG_VALUE_ACCESSOR,useExisting:t.forwardRef(function(){return b}),multi:!0},l={Init:0,Checked:1,Unchecked:2,Indeterminate:3};l[l.Init]="Init",l[l.Checked]="Checked",l[l.Unchecked]="Unchecked",l[l.Indeterminate]="Indeterminate";var u=function(){function e(){}return e}(),m=function(){function e(e){this._elementRef=e}return e}(),p=c.mixinTabIndex(c.mixinColor(c.mixinDisabled(m))),b=function(e){function n(n,i,c,o,r){var a=e.call(this,n)||this;return a._changeDetectorRef=i,a._focusMonitor=c,a._clickAction=r,a.ariaLabel="",a.ariaLabelledby=null,a._uniqueId="mc-checkbox-"+ ++h,a.id=a._uniqueId,a.labelPosition="after",a.name=null,a.change=new t.EventEmitter,a.indeterminateChange=new t.EventEmitter,a._onTouched=function(){},a._currentAnimationClass="",a._currentCheckState=l.Init,a._controlValueAccessorChangeFn=function(){},a._checked=!1,a._disabled=!1,a._indeterminate=!1,a.tabIndex=parseInt(o)||0,a}return r(n,e),Object.defineProperty(n.prototype,"inputId",{get:function(){return(this.id||this._uniqueId)+"-input"},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"required",{get:function(){return this._required},set:function(e){this._required=c.toBoolean(e)},enumerable:!0,configurable:!0}),n.prototype.ngAfterViewInit=function(){var e=this;this._focusMonitor.monitor(this._inputElement.nativeElement).subscribe(function(t){return e._onInputFocusChange(t)})},n.prototype.ngOnDestroy=function(){this._focusMonitor.stopMonitoring(this._inputElement.nativeElement)},Object.defineProperty(n.prototype,"checked",{get:function(){return this._checked},set:function(e){e!=this.checked&&(this._checked=e,this._changeDetectorRef.markForCheck())},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"disabled",{get:function(){return this._disabled},set:function(e){e!=this.disabled&&(this._disabled=e,this._changeDetectorRef.markForCheck())},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"indeterminate",{get:function(){return this._indeterminate},set:function(e){var t=e!=this._indeterminate;this._indeterminate=e,t&&(this._indeterminate?this._transitionCheckState(l.Indeterminate):this._transitionCheckState(this.checked?l.Checked:l.Unchecked),this.indeterminateChange.emit(this._indeterminate))},enumerable:!0,configurable:!0}),n.prototype._onLabelTextChange=function(){this._changeDetectorRef.markForCheck()},n.prototype.writeValue=function(e){this.checked=!!e},n.prototype.registerOnChange=function(e){this._controlValueAccessorChangeFn=e},n.prototype.registerOnTouched=function(e){this._onTouched=e},n.prototype.setDisabledState=function(e){this.disabled=e},n.prototype._getAriaChecked=function(){return this.checked?"true":this.indeterminate?"mixed":"false"},n.prototype._transitionCheckState=function(e){var t=this._currentCheckState,n=this._elementRef.nativeElement;t!==e&&(this._currentAnimationClass.length>0&&n.classList.remove(this._currentAnimationClass),this._currentCheckState=e,this._currentAnimationClass.length>0&&n.classList.add(this._currentAnimationClass))},n.prototype._emitChangeEvent=function(){var e=new u;e.source=this,e.checked=this.checked,this._controlValueAccessorChangeFn(this.checked),this.change.emit(e)},n.prototype._onInputFocusChange=function(e){e&&this._onTouched()},n.prototype.toggle=function(){this.checked=!this.checked},n.prototype._onInputClick=function(e){var t=this;e.stopPropagation(),this.disabled||"noop"===this._clickAction?this.disabled||"noop"!==this._clickAction||(this._inputElement.nativeElement.checked=this.checked,this._inputElement.nativeElement.indeterminate=this.indeterminate):(this.indeterminate&&"check"!==this._clickAction&&Promise.resolve().then(function(){t._indeterminate=!1,t.indeterminateChange.emit(t._indeterminate)}),this.toggle(),this._transitionCheckState(this._checked?l.Checked:l.Unchecked),this._emitChangeEvent())},n.prototype.focus=function(){this._focusMonitor.focusVia(this._inputElement.nativeElement,"keyboard")},n.prototype._onInteractionEvent=function(e){e.stopPropagation()},n.decorators=[{type:t.Component,args:[{selector:"mc-checkbox",template:'<label [attr.for]="inputId" class="mc-checkbox-layout" #label><div class="mc-checkbox-inner-container" [class.mc-checkbox-inner-container-no-side-margin]="!checkboxLabel.textContent || !checkboxLabel.textContent.trim()"><input #input type="checkbox" class="mc-checkbox-input cdk-visually-hidden" [id]="inputId" [required]="required" [checked]="checked" [attr.value]="value" [disabled]="disabled" [attr.name]="name" [tabIndex]="tabIndex" [indeterminate]="indeterminate" [attr.aria-label]="ariaLabel || null" [attr.aria-labelledby]="ariaLabelledby" [attr.aria-checked]="_getAriaChecked()" (change)="_onInteractionEvent($event)" (click)="_onInputClick($event)"><div class="mc-checkbox-frame"><i class="mc-checkbox-checkmark mc mc-check_16"></i> <i class="mc-checkbox-mixedmark mc mc-minus_16"></i></div></div><span class="mc-checkbox-label" #checkboxLabel (cdkObserveContent)="_onLabelTextChange()"><ng-content></ng-content></span></label>',styles:[".mc-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:3px;box-sizing:border-box;pointer-events:none}.mc-checkbox{cursor:pointer;-webkit-tap-highlight-color:transparent}.mc-checkbox.mc-checked .mc-checkbox-checkmark{display:block}.mc-checkbox.mc-checked .mc-checkbox-mixedmark{display:none}.mc-checkbox.mc-indeterminate .mc-checkbox-checkmark{display:none}.mc-checkbox.mc-indeterminate .mc-checkbox-mixedmark{display:block}.mc-checkbox.mc-disabled{cursor:default}.mc-checkbox.mc-disabled .mc-checkbox-frame{box-shadow:none}.mc-checkbox-layout{cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mc-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mc-checkbox-inner-container{margin-left:8px;margin-right:auto}.mc-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mc-checkbox-frame{background-color:transparent;border-width:1px;border-style:solid;box-shadow:inset 0 0 1px 0 rgba(0,0,0,.2)}.mc-checkbox-checkmark,.mc-checkbox-mixedmark{display:none;position:absolute;top:-1px;left:-1px;right:0;bottom:0}.mc-checkbox-label-before .mc-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mc-checkbox-label-before .mc-checkbox-inner-container{margin-left:auto;margin-right:8px}"],exportAs:"mcCheckbox",host:{class:"mc-checkbox","[id]":"id","[attr.id]":"id","[class.mc-indeterminate]":"indeterminate","[class.mc-checked]":"checked","[class.mc-disabled]":"disabled","[class.mc-checkbox-label-before]":'labelPosition == "before"'},providers:[d],inputs:["color","tabIndex"],encapsulation:t.ViewEncapsulation.None,changeDetection:t.ChangeDetectionStrategy.OnPush}]}],n.ctorParameters=function(){return[{type:t.ElementRef},{type:t.ChangeDetectorRef},{type:i.FocusMonitor},{type:String,decorators:[{type:t.Attribute,args:["tabindex"]}]},{type:void 0,decorators:[{type:t.Optional},{type:t.Inject,args:[s]}]}]},n.propDecorators={ariaLabel:[{type:t.Input,args:["aria-label"]}],ariaLabelledby:[{type:t.Input,args:["aria-labelledby"]}],id:[{type:t.Input}],required:[{type:t.Input}],labelPosition:[{type:t.Input}],name:[{type:t.Input}],change:[{type:t.Output}],indeterminateChange:[{type:t.Output}],value:[{type:t.Input}],_inputElement:[{type:t.ViewChild,args:["input",{static:!1}]}],checked:[{type:t.Input}],disabled:[{type:t.Input}],indeterminate:[{type:t.Input}]},n}(p),k={provide:n.NG_VALIDATORS,useExisting:t.forwardRef(function(){return f}),multi:!0},f=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return r(n,e),n.decorators=[{type:t.Directive,args:[{selector:"mc-checkbox[required][formControlName],\n             mc-checkbox[required][formControl], mc-checkbox[required][ngModel]",providers:[k],host:{"[attr.required]":'required ? "" : null'}}]}],n}(n.CheckboxRequiredValidator),g=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{imports:[o.CommonModule],exports:[b,f],declarations:[b,f]}]}],e}();e.MC_CHECKBOX_CONTROL_VALUE_ACCESSOR=d,e.TransitionCheckState=l,e.McCheckboxChange=u,e.McCheckboxBase=m,e._McCheckboxMixinBase=p,e.McCheckbox=b,e.MC_CHECKBOX_CLICK_ACTION=s,e.McCheckboxModule=g,e.MC_CHECKBOX_REQUIRED_VALIDATOR=k,e.McCheckboxRequiredValidator=f,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=mosaic-checkbox.umd.min.js.map
