/**
 * @license
 * Positive Technologies All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license.
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/forms"),require("@ptsecurity/cdk/a11y"),require("@ptsecurity/mosaic/core"),require("@angular/common")):"function"==typeof define&&define.amd?define("@ptsecurity/mosaic/checkbox",["exports","@angular/core","@angular/forms","@ptsecurity/cdk/a11y","@ptsecurity/mosaic/core","@angular/common"],t):t((e.ng=e.ng||{},e.ng.mosaic=e.ng.mosaic||{},e.ng.mosaic.checkbox={}),e.ng.core,e.ng.forms,e.ng.cdk.a11y,e.ng.mosaic.core,e.ng.common)}(this,function(e,t,n,i,o,c){"use strict";function r(e,t){function n(){this.constructor=e}l(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}function a(e,t,n,i){var o,c=arguments.length,r=c<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,i);else for(var a=e.length-1;a>=0;a--)(o=e[a])&&(r=(c<3?o(r):c>3?o(t,n,r):o(t,n))||r);return c>3&&r&&Object.defineProperty(t,n,r),r}function s(e,t){return function(n,i){t(n,i,e)}}function h(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)}var l=function(e,t){return(l=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},d=new t.InjectionToken("mc-checkbox-click-action"),u=0,p={provide:n.NG_VALUE_ACCESSOR,useExisting:t.forwardRef(function(){return f}),multi:!0};!function(e){e[e.Init=0]="Init",e[e.Checked=1]="Checked",e[e.Unchecked=2]="Unchecked",e[e.Indeterminate=3]="Indeterminate"}(e.TransitionCheckState||(e.TransitionCheckState={}));var m=function(){function e(){}return e}(),b=function(){function e(e){this._elementRef=e}return e}(),k=o.mixinTabIndex(o.mixinColor(o.mixinDisabled(b))),f=function(n){function c(i,o,c,r,a){var s=n.call(this,i)||this;return s._changeDetectorRef=o,s._focusMonitor=c,s._clickAction=a,s.ariaLabel="",s.ariaLabelledby=null,s._uniqueId="mc-checkbox-"+ ++u,s.id=s._uniqueId,s.labelPosition="after",s.name=null,s.change=new t.EventEmitter,s.indeterminateChange=new t.EventEmitter,s._onTouched=function(){},s._currentAnimationClass="",s._currentCheckState=e.TransitionCheckState.Init,s._controlValueAccessorChangeFn=function(){},s._checked=!1,s._disabled=!1,s._indeterminate=!1,s.tabIndex=parseInt(r)||0,s}return r(c,n),Object.defineProperty(c.prototype,"inputId",{get:function(){return(this.id||this._uniqueId)+"-input"},enumerable:!0,configurable:!0}),Object.defineProperty(c.prototype,"required",{get:function(){return this._required},set:function(e){this._required=o.toBoolean(e)},enumerable:!0,configurable:!0}),c.prototype.ngAfterViewInit=function(){var e=this;this._focusMonitor.monitor(this._inputElement.nativeElement).subscribe(function(t){return e._onInputFocusChange(t)})},c.prototype.ngOnDestroy=function(){this._focusMonitor.stopMonitoring(this._inputElement.nativeElement)},Object.defineProperty(c.prototype,"checked",{get:function(){return this._checked},set:function(e){e!=this.checked&&(this._checked=e,this._changeDetectorRef.markForCheck())},enumerable:!0,configurable:!0}),Object.defineProperty(c.prototype,"disabled",{get:function(){return this._disabled},set:function(e){e!=this.disabled&&(this._disabled=e,this._changeDetectorRef.markForCheck())},enumerable:!0,configurable:!0}),Object.defineProperty(c.prototype,"indeterminate",{get:function(){return this._indeterminate},set:function(t){var n=t!=this._indeterminate;this._indeterminate=t,n&&(this._indeterminate?this._transitionCheckState(e.TransitionCheckState.Indeterminate):this._transitionCheckState(this.checked?e.TransitionCheckState.Checked:e.TransitionCheckState.Unchecked),this.indeterminateChange.emit(this._indeterminate))},enumerable:!0,configurable:!0}),c.prototype._onLabelTextChange=function(){this._changeDetectorRef.markForCheck()},c.prototype.writeValue=function(e){this.checked=!!e},c.prototype.registerOnChange=function(e){this._controlValueAccessorChangeFn=e},c.prototype.registerOnTouched=function(e){this._onTouched=e},c.prototype.setDisabledState=function(e){this.disabled=e},c.prototype._getAriaChecked=function(){return this.checked?"true":this.indeterminate?"mixed":"false"},c.prototype._transitionCheckState=function(e){var t=this._currentCheckState,n=this._elementRef.nativeElement;t!==e&&(this._currentAnimationClass.length>0&&n.classList.remove(this._currentAnimationClass),this._currentCheckState=e,this._currentAnimationClass.length>0&&n.classList.add(this._currentAnimationClass))},c.prototype._emitChangeEvent=function(){var e=new m;e.source=this,e.checked=this.checked,this._controlValueAccessorChangeFn(this.checked),this.change.emit(e)},c.prototype._onInputFocusChange=function(e){e&&this._onTouched()},c.prototype.toggle=function(){this.checked=!this.checked},c.prototype._onInputClick=function(t){var n=this;t.stopPropagation(),this.disabled||"noop"===this._clickAction?this.disabled||"noop"!==this._clickAction||(this._inputElement.nativeElement.checked=this.checked,this._inputElement.nativeElement.indeterminate=this.indeterminate):(this.indeterminate&&"check"!==this._clickAction&&Promise.resolve().then(function(){n._indeterminate=!1,n.indeterminateChange.emit(n._indeterminate)}),this.toggle(),this._transitionCheckState(this._checked?e.TransitionCheckState.Checked:e.TransitionCheckState.Unchecked),this._emitChangeEvent())},c.prototype.focus=function(){this._focusMonitor.focusVia(this._inputElement.nativeElement,"keyboard")},c.prototype._onInteractionEvent=function(e){e.stopPropagation()},a([t.Input("aria-label"),h("design:type",String)],c.prototype,"ariaLabel",void 0),a([t.Input("aria-labelledby"),h("design:type",Object)],c.prototype,"ariaLabelledby",void 0),a([t.Input(),h("design:type",String)],c.prototype,"id",void 0),a([t.Input(),h("design:type",Boolean),h("design:paramtypes",[Boolean])],c.prototype,"required",null),a([t.Input(),h("design:type",String)],c.prototype,"labelPosition",void 0),a([t.Input(),h("design:type",Object)],c.prototype,"name",void 0),a([t.Output(),h("design:type",t.EventEmitter)],c.prototype,"change",void 0),a([t.Output(),h("design:type",t.EventEmitter)],c.prototype,"indeterminateChange",void 0),a([t.Input(),h("design:type",String)],c.prototype,"value",void 0),a([t.ViewChild("input"),h("design:type",t.ElementRef)],c.prototype,"_inputElement",void 0),a([t.Input(),h("design:type",Boolean),h("design:paramtypes",[Boolean])],c.prototype,"checked",null),a([t.Input(),h("design:type",Object),h("design:paramtypes",[Object])],c.prototype,"disabled",null),a([t.Input(),h("design:type",Boolean),h("design:paramtypes",[Boolean])],c.prototype,"indeterminate",null),c=a([t.Component({selector:"mc-checkbox",template:'<label [attr.for]="inputId" class="mc-checkbox-layout" #label><div class="mc-checkbox-inner-container" [class.mc-checkbox-inner-container-no-side-margin]="!checkboxLabel.textContent || !checkboxLabel.textContent.trim()"><input #input type="checkbox" class="mc-checkbox-input cdk-visually-hidden" [id]="inputId" [required]="required" [checked]="checked" [attr.value]="value" [disabled]="disabled" [attr.name]="name" [tabIndex]="tabIndex" [indeterminate]="indeterminate" [attr.aria-label]="ariaLabel || null" [attr.aria-labelledby]="ariaLabelledby" [attr.aria-checked]="_getAriaChecked()" (change)="_onInteractionEvent($event)" (click)="_onInputClick($event)"><div class="mc-checkbox-frame"><i class="mc-checkbox-checkmark mc mc-check_16"></i> <i class="mc-checkbox-mixedmark mc mc-minus_16"></i></div></div><span class="mc-checkbox-label" #checkboxLabel (cdkObserveContent)="_onLabelTextChange()"><ng-content></ng-content></span></label>',styles:[".mc-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:3px;box-sizing:border-box;pointer-events:none}.mc-checkbox{cursor:pointer;-webkit-tap-highlight-color:transparent}.mc-checkbox.mc-checked .mc-checkbox-checkmark{display:block}.mc-checkbox.mc-checked .mc-checkbox-mixedmark{display:none}.mc-checkbox.mc-indeterminate .mc-checkbox-checkmark{display:none}.mc-checkbox.mc-indeterminate .mc-checkbox-mixedmark{display:block}.mc-checkbox.mc-disabled{cursor:default}.mc-checkbox.mc-disabled .mc-checkbox-frame{box-shadow:none}.mc-checkbox-layout{cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mc-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mc-checkbox-inner-container{margin-left:8px;margin-right:auto}.mc-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mc-checkbox-frame{background-color:transparent;border-width:1px;border-style:solid;box-shadow:inset 0 0 1px 0 rgba(0,0,0,.2)}.mc-checkbox-checkmark,.mc-checkbox-mixedmark{display:none;position:absolute;top:-1px;left:-1px;right:0;bottom:0}.mc-checkbox-label-before .mc-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mc-checkbox-label-before .mc-checkbox-inner-container{margin-left:auto;margin-right:8px}"],exportAs:"mcCheckbox",host:{class:"mc-checkbox","[id]":"id","[attr.id]":"id","[class.mc-indeterminate]":"indeterminate","[class.mc-checked]":"checked","[class.mc-disabled]":"disabled","[class.mc-checkbox-label-before]":'labelPosition == "before"'},providers:[p],inputs:["color","tabIndex"],encapsulation:t.ViewEncapsulation.None,changeDetection:t.ChangeDetectionStrategy.OnPush}),s(3,t.Attribute("tabindex")),s(4,t.Optional()),s(4,t.Inject(d)),h("design:paramtypes",[t.ElementRef,t.ChangeDetectorRef,i.FocusMonitor,String,Object])],c)}(k),g={provide:n.NG_VALIDATORS,useExisting:t.forwardRef(function(){return y}),multi:!0},y=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return r(n,e),n=a([t.Directive({selector:"mc-checkbox[required][formControlName],\n             mc-checkbox[required][formControl], mc-checkbox[required][ngModel]",providers:[g],host:{"[attr.required]":'required ? "" : null'}})],n)}(n.CheckboxRequiredValidator),x=function(){function e(){}return e=a([t.NgModule({imports:[c.CommonModule],exports:[f,y],declarations:[f,y]})],e)}();e.MC_CHECKBOX_CONTROL_VALUE_ACCESSOR=p,e.McCheckboxChange=m,e.McCheckboxBase=b,e._McCheckboxMixinBase=k,e.McCheckbox=f,e.MC_CHECKBOX_CLICK_ACTION=d,e.McCheckboxModule=x,e.MC_CHECKBOX_REQUIRED_VALIDATOR=g,e.McCheckboxRequiredValidator=y,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=mosaic-checkbox.umd.min.js.map
