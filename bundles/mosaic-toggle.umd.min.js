/**
 * @license
 * Positive Technologies All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license.
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/animations"),require("@angular/core"),require("@angular/forms"),require("@ptsecurity/cdk/a11y"),require("@ptsecurity/mosaic/core"),require("@angular/common")):"function"==typeof define&&define.amd?define("@ptsecurity/mosaic/toggle",["exports","@angular/animations","@angular/core","@angular/forms","@ptsecurity/cdk/a11y","@ptsecurity/mosaic/core","@angular/common"],t):t((e.ng=e.ng||{},e.ng.mosaic=e.ng.mosaic||{},e.ng.mosaic.toggle={}),e.ng.animations,e.ng.core,e.ng.forms,e.ng.cdk.a11y,e.ng.mosaic.core,e.ng.common)}(this,function(e,t,o,n,i,a,c){"use strict";function r(e,t){function o(){this.constructor=e}d(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}function l(e,t,o,n){var i,a=arguments.length,c=a<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)c=Reflect.decorate(e,t,o,n);else for(var r=e.length-1;r>=0;r--)(i=e[r])&&(c=(a<3?i(c):a>3?i(t,o,c):i(t,o))||c);return a>3&&c&&Object.defineProperty(t,o,c),c}function s(e,t){return function(o,n){t(o,n,e)}}function g(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)}var d=function(e,t){return(d=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)t.hasOwnProperty(o)&&(e[o]=t[o])})(e,t)},p=0,u=function(){function e(e){this._elementRef=e}return e}(),m=a.mixinTabIndex(a.mixinColor(a.mixinDisabled(u),a.ThemePalette.Primary)),f=function(){function e(){}return e}(),h=function(e){function a(t,n,i,a){var c=e.call(this,t)||this;return c._elementRef=t,c._focusMonitor=n,c._changeDetectorRef=i,c.labelPosition="right",c.ariaLabel="",c.ariaLabelledby=null,c._uniqueId="mc-toggle-"+ ++p,c.id=c._uniqueId,c.name=null,c._disabled=!1,c._checked=!1,c.change=new o.EventEmitter,c._onTouchedCallback=function(){},c._onChangeCallback=function(e){},c.tabIndex=parseInt(a)||0,c._focusMonitor.monitor(c._elementRef.nativeElement,!0),c}r(a,e),c=a,Object.defineProperty(a.prototype,"inputId",{get:function(){return(this.id||this._uniqueId)+"-input"},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"disabled",{get:function(){return this._disabled},set:function(e){e!==this._disabled&&(this._disabled=e,this._changeDetectorRef.markForCheck())},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"checked",{get:function(){return this._checked},set:function(e){e!==this._checked&&(this._checked=e,this._changeDetectorRef.markForCheck())},enumerable:!0,configurable:!0}),a.prototype.ngOnDestroy=function(){this._focusMonitor.stopMonitoring(this._elementRef.nativeElement)},a.prototype.focus=function(){this._focusMonitor.focusVia(this._inputElement.nativeElement,"keyboard")},a.prototype._getAriaChecked=function(){return this.checked},a.prototype._onInteractionEvent=function(e){e.stopPropagation()},a.prototype._onLabelTextChange=function(){this._changeDetectorRef.markForCheck()},a.prototype._onInputClick=function(e){e.stopPropagation(),this._updateModelValue(),this._emitChangeEvent()},a.prototype.writeValue=function(e){this.checked=!!e},a.prototype.registerOnChange=function(e){this._onChangeCallback=e},a.prototype.registerOnTouched=function(e){this._onTouchedCallback=e},a.prototype.setDisabledState=function(e){this.disabled=e},a.prototype._updateModelValue=function(){this._checked=!this.checked,this._onChangeCallback(this.checked),this._onTouchedCallback()},a.prototype._emitChangeEvent=function(){var e=new f;e.source=this,e.checked=this.checked,this._onChangeCallback(this.checked),this.change.emit(e)};var c;return l([o.ViewChild("input"),g("design:type",o.ElementRef)],a.prototype,"_inputElement",void 0),l([o.Input(),g("design:type",String)],a.prototype,"labelPosition",void 0),l([o.Input("aria-label"),g("design:type",String)],a.prototype,"ariaLabel",void 0),l([o.Input("aria-labelledby"),g("design:type",Object)],a.prototype,"ariaLabelledby",void 0),l([o.Input(),g("design:type",String)],a.prototype,"id",void 0),l([o.Input(),g("design:type",Object)],a.prototype,"name",void 0),l([o.Input(),g("design:type",String)],a.prototype,"value",void 0),l([o.Input(),g("design:type",Object),g("design:paramtypes",[Object])],a.prototype,"disabled",null),l([o.Input(),g("design:type",Boolean),g("design:paramtypes",[Boolean])],a.prototype,"checked",null),l([o.Output(),g("design:type",o.EventEmitter)],a.prototype,"change",void 0),a=c=l([o.Component({selector:"mc-toggle",exportAs:"mcToggle",template:'<label [attr.for]="inputId" class="mc-toggle-layout" #label><div class="mc-toggle__container" [class.left]="labelPosition === \'left\'"><input #input type="checkbox" class="mc-toggle-input cdk-visually-hidden" [id]="inputId" [checked]="checked" [attr.value]="value" [disabled]="disabled" [attr.name]="name" [tabIndex]="tabIndex" [attr.aria-label]="ariaLabel || null" [attr.aria-labelledby]="ariaLabelledby" [attr.aria-checked]="_getAriaChecked()" (click)="_onInputClick($event)" (change)="_onInteractionEvent($event)"><div class="mc-toggle-bar-container"><div class="mc-toggle__focus-frame"></div><div class="mc-toggle-bar"><div class="mc-toggle__circle" [@switch]="checked"></div></div></div><div class="mc-toggle__content" [class.left]="labelPosition === \'left\'" [class.right]="labelPosition === \'right\'"><span class="mc-toggle-label" (cdkObserveContent)="_onLabelTextChange()"><ng-content></ng-content></span></div></div></label>',styles:[".mc-toggle{display:inline-block}.mc-toggle .mc-toggle-layout{cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mc-toggle .mc-toggle-bar{position:relative;border-width:1px;border-style:solid}.mc-toggle .mc-toggle-bar.mc-toggle-label-position-left{order:1}.mc-toggle .mc-toggle-bar-container{position:relative}.mc-toggle__container{display:flex;align-items:center;position:relative}.mc-toggle__container.left{flex-direction:row-reverse}.mc-toggle__content.left{margin-right:8px}.mc-toggle__content.right{margin-left:8px}.mc-toggle__circle{position:absolute;border-width:1px;border-style:solid;border-radius:100%;margin-top:-1px;margin-left:-1px;transform:translateX(-1px)}.mc-toggle__focus-frame{position:absolute;top:0;left:0;z-index:1}.mc-toggle:not(.mc-toggle_small) .mc-toggle-bar{height:16px;width:28px;border-radius:9px}.mc-toggle:not(.mc-toggle_small) .mc-toggle__focus-frame{border-radius:9px;height:16px;width:28px}.mc-toggle:not(.mc-toggle_small) .mc-toggle__circle{height:16px;width:16px}.mc-toggle.mc-toggle_small .mc-toggle-bar{height:14px;width:24px;border-radius:8px}.mc-toggle.mc-toggle_small .mc-toggle__focus-frame{border-radius:8px;height:14px;width:24px}.mc-toggle.mc-toggle_small .mc-toggle__circle{height:14px;width:14px}.mc-toggle:not(.mc-disabled){cursor:pointer}"],providers:[{provide:n.NG_VALUE_ACCESSOR,useExisting:o.forwardRef(function(){return c}),multi:!0}],changeDetection:o.ChangeDetectionStrategy.OnPush,encapsulation:o.ViewEncapsulation.None,inputs:["disabled","color","tabIndex"],host:{class:"mc-toggle","[id]":"id","[attr.id]":"id","[class.mc-disabled]":"disabled","[class.mc-toggle_off]":"!checked"},animations:[t.trigger("switch",[t.state("true",t.style({left:"50%"})),t.state("false",t.style({left:"1px"})),t.transition("true <=> false",t.animate("150ms"))])]}),s(3,o.Attribute("tabindex")),g("design:paramtypes",[o.ElementRef,i.FocusMonitor,o.ChangeDetectorRef,String])],a)}(m),b=function(){function e(){}return e=l([o.NgModule({imports:[c.CommonModule,i.A11yModule,a.McCommonModule],exports:[h],declarations:[h]})],e)}();e.McToggleModule=b,e.McToggleBase=u,e._McToggleMixinBase=m,e.McToggleChange=f,e.McToggleComponent=h,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=mosaic-toggle.umd.min.js.map
