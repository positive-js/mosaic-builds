{"version":3,"file":"mosaic.umd.js","sources":["../../src/lib/version.ts","../../src/lib/tree/data-source/nested-data-source.ts","../../src/lib/tree/data-source/flat-data-source.ts","../../src/lib/tree/tree.module.ts","../../src/lib/tree/tree-selection.ts","../../src/lib/tree/padding.ts","../../src/lib/tree/node.ts","../../src/lib/radio/radio.module.ts","../../src/lib/radio/radio.component.ts","../../src/lib/progress-spinner/progress-spinner.module.ts","../../src/lib/progress-spinner/progress-spinner.component.ts","../../src/lib/progress-bar/progress-bar.module.ts","../../src/lib/progress-bar/progress-bar.component.ts","../../src/lib/navbar/navbar.module.ts","../../src/lib/navbar/navbar.component.ts","../../src/lib/link/link.module.ts","../../src/lib/link/link.component.ts","../../src/lib/list/list.module.ts","../../src/lib/list/list.component.ts","../../src/lib/list/list-selection.component.ts","../../src/lib/input/input.module.ts","../../src/lib/input/input.ts","../../src/lib/input/input-value-accessor.ts","../../src/lib/input/input-errors.ts","../../src/lib/form-field/form-field.module.ts","../../src/lib/form-field/form-field.ts","../../src/lib/form-field/suffix.ts","../../src/lib/form-field/prefix.ts","../../src/lib/form-field/hint.ts","../../src/lib/form-field/form-field-errors.ts","../../src/lib/form-field/form-field-control.ts","../../src/lib/form-field/cleaner.ts","../../src/lib/divider/divider.module.ts","../../src/lib/divider/divider.component.ts","../../src/lib/checkbox/checkbox-module.ts","../../src/lib/checkbox/checkbox-required-validator.ts","../../src/lib/checkbox/checkbox.ts","../../src/lib/checkbox/checkbox-config.ts","../../src/lib/button/button.module.ts","../../src/lib/button/button.component.ts","../../src/lib/icon/icon.module.ts","../../src/lib/icon/icon.component.ts","../../src/lib/core/selection/index.ts","../../src/lib/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../src/lib/core/error/error-options.ts","../../src/lib/core/line/line.ts","../../src/lib/core/common-behaviors/error-state.ts","../../src/lib/core/common-behaviors/tabindex.ts","../../src/lib/core/common-behaviors/color.ts","../../src/lib/core/common-behaviors/disabled.ts","../../src/lib/core/common-behaviors/common-module.ts","../../src/lib/core/utils/utils.ts","../../node_modules/tslib/tslib.es6.js"],"sourcesContent":["import { Version } from '@angular/core';\n\n\nexport const VERSION = new Version('0.0.1-d5466ea');\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by ITreeControl and each non-leaf node.\n */\nexport class McTreeNestedDataSource<T> extends DataSource<T> {\n    _data = new BehaviorSubject<T[]>([]);\n\n    /**\n     * Data for the nested tree\n     */\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<T[]> {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map(() => this.data));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { FlatTreeControl, ITreeControl } from '@ptsecurity/cdk/tree';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nexport class McTreeFlattener<T, F> {\n\n    constructor(public transformFunction: (node: T, level: number) => F,\n                public getLevel: (node: F) => number,\n                public isExpandable: (node: F) => boolean,\n                public getChildren: (node: T) => Observable<T[]>) {\n    }\n\n    _flattenNode(node: T, level: number,\n                 resultNodes: F[], parentMap: boolean[]): F[] {\n        const flatNode = this.transformFunction(node, level);\n        resultNodes.push(flatNode);\n\n        if (this.isExpandable(flatNode)) {\n            this.getChildren(node).pipe(take(1)).subscribe((children) => {\n                children.forEach((child, index) => {\n                    const childParentMap: boolean[] = parentMap.slice();\n                    childParentMap.push(index !== children.length - 1);\n                    this._flattenNode(child, level + 1, resultNodes, childParentMap);\n                });\n            });\n        }\n\n        return resultNodes;\n    }\n\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData: T[]): F[] {\n        const resultNodes: F[] = [];\n        structuredData.forEach((node) => this._flattenNode(node, 0, resultNodes, []));\n\n        return resultNodes;\n    }\n\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes: F[], treeControl: ITreeControl<F>): F[] {\n        const results: F[] = [];\n        const currentExpand: boolean[] = [];\n        currentExpand[0] = true;\n\n        nodes.forEach((node) => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n\n            if (expand) { results.push(node); }\n\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n\n        return results;\n    }\n}\n\n\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `McTree`.\n * The nested tree nodes of type `T` are flattened through `MсTreeFlattener`, and converted\n * to type `F` for `McTree` to consume.\n */\nexport class McTreeFlatDataSource<T, F> extends DataSource<F> {\n    _flattenedData = new BehaviorSubject<F[]>([]);\n\n    _expandedData = new BehaviorSubject<F[]>([]);\n\n    _data: BehaviorSubject<T[]>;\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n        this._flattenedData.next(this.treeFlattener.flattenNodes(this.data));\n        this.treeControl.dataNodes = this._flattenedData.value;\n    }\n\n    constructor(private treeControl: FlatTreeControl<F>,\n                private treeFlattener: McTreeFlattener<T, F>,\n                initialData: T[] = []) {\n        super();\n        this._data = new BehaviorSubject<T[]>(initialData);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<F[]> {\n        const changes = [\n            collectionViewer.viewChange,\n            this.treeControl.expansionModel.onChange!,\n            this._flattenedData\n        ];\n\n        return merge(...changes).pipe(map(() => {\n            this._expandedData.next(\n                this.treeFlattener.expandFlattenedNodes(this._flattenedData.value, this.treeControl));\n\n            return this._expandedData.value;\n        }));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\n\nimport { McTreeNodeDef } from './node';\nimport { McTreeNodePadding } from './padding';\nimport { McTreeSelection, McTreeNodeOption } from './tree-selection';\n\n\nconst MC_TREE_DIRECTIVES = [\n    McTreeNodeDef,\n    McTreeNodePadding,\n    McTreeSelection,\n    McTreeNodeOption\n];\n\n@NgModule({\n    imports: [CommonModule, CdkTreeModule],\n    exports: MC_TREE_DIRECTIVES,\n    declarations: MC_TREE_DIRECTIVES\n})\nexport class McTreeModule {}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, EventEmitter, forwardRef, Input, IterableDiffer,\n    IterableDiffers, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    Directive, ElementRef, Inject\n} from '@angular/core';\nimport { NodeDef, ViewData } from '@angular/core/src/view';\n\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { CdkTreeNode, CdkTree, CdkTreeNodeOutlet } from '@ptsecurity/cdk/tree';\n\nimport { CanDisable, HasTabIndex, mixinDisabled, mixinTabIndex, toBoolean } from '@ptsecurity/mosaic/core';\n\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\n\nimport { END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n/**\n * Wrapper for the CdkTree node with Material design styles.\n */\n@Directive({\n    exportAs: 'mcTreeNodeOption',\n    selector: 'mc-tree-node-option',\n    host: {\n        tabindex: '-1',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '[attr.aria-expanded]': 'isExpanded',\n        '[attr.aria-level]': 'role === \"treeitem\" ? level : null',\n        class: 'mc-tree-node',\n\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n\n        '(click)': '_handleClick()'\n    },\n    providers: [\n        { provide: CdkTreeNode, useExisting: McTreeNodeOption }\n    ]\n})\nexport class McTreeNodeOption<T> extends CdkTreeNode<T> implements CanDisable {\n    @Input() role: 'treeitem' | 'group' = 'treeitem';\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.treeSelection.selectedOptions && this.treeSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            // this.treeSelection._reportValueChange();\n        }\n    }\n\n    private _hasFocus: boolean = false;\n\n    private _disabled: boolean = false;\n    private _selected: boolean = false;\n\n    constructor(\n        protected _elementRef: ElementRef,\n        @Inject(forwardRef(() => McTreeSelection))\n        protected treeSelection: McTreeSelection<T>\n    ) {\n        super(_elementRef, treeSelection);\n    }\n\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n\n        this.treeSelection.setFocusedOption(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.treeSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.treeSelection.selectedOptions.select(this);\n        } else {\n            this.treeSelection.selectedOptions.deselect(this);\n        }\n\n        // this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleFocus(): void {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur(): void {\n        this._hasFocus = false;\n    }\n\n    _handleClick(): void {\n        if (this.disabled) { return; }\n\n        this.treeSelection.setFocusedOption(this);\n    }\n}\n\nexport const _McTreeSelectionBase = mixinTabIndex(mixinDisabled(CdkTree));\n\nexport class McTreeNavigationChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\nexport class McTreeSelectionChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\n@Component({\n    exportAs: 'mcTreeSelection',\n    selector: 'mc-tree-selection',\n    template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n    host: {\n        '[tabIndex]': 'tabIndex',\n        class: 'mc-tree-selection',\n        role: 'tree-selection',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    styleUrls: ['./tree.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: CdkTree, useExisting: McTreeSelection }]\n})\nexport class McTreeSelection<T> extends _McTreeSelectionBase<T>\n    implements AfterContentInit, CanDisable, HasTabIndex {\n    // Outlets within the tree's template where the dataNodes will be inserted.\n    @ViewChild(CdkTreeNodeOutlet) _nodeOutlet: CdkTreeNodeOutlet;\n\n    @ContentChildren(forwardRef(() => McTreeNodeOption)) options: QueryList<McTreeNodeOption<T>>;\n\n    _keyManager: FocusKeyManager<McTreeNodeOption<T>>;\n\n    selectedOptions: SelectionModel<McTreeNodeOption<T>>;\n\n    _disabled: boolean = false;\n    tabIndex: number;\n    multiple: boolean;\n    autoSelect: boolean;\n    noUnselect: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(rawValue: boolean) {\n        const value = toBoolean(rawValue);\n\n        if (this._disabled !== value) {\n            this._disabled = value;\n\n            if (this._disabled) {\n                console.log('need disable all options');\n            } else {\n                console.log('need enable all options');\n            }\n        }\n    }\n\n    @Output() readonly navigationChange = new EventEmitter<McTreeNavigationChange>();\n\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectionChange>();\n\n    constructor(\n        private _elementRef: ElementRef,\n        _differs: IterableDiffers,\n        _changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('multiple') multiple: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string\n    ) {\n        super(_differs, _changeDetectorRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.selectedOptions = new SelectionModel<McTreeNodeOption<T>>(this.multiple);\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case LEFT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.collapse(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case RIGHT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.expand(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                this._keyManager.setPreviousPageItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                this._keyManager.setNextPageItemActive();\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    ngAfterContentInit(): void {\n        this._keyManager = new FocusKeyManager<McTreeNodeOption<T>>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(true)\n            .withHorizontalOrientation(null);\n    }\n\n    updateScrollSize(): void {\n        if (!this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    setFocusedOption(option: McTreeNodeOption<T>): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitNavigationEvent(option);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McTreeNodeOption<T> = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    renderNodeChanges(\n        data: T[],\n        dataDiffer: IterableDiffer<T> = this._dataDiffer,\n        viewContainer: any = this._nodeOutlet.viewContainer,\n        parentData?: T\n    ) {\n        super.renderNodeChanges(data, dataDiffer, viewContainer, parentData);\n\n        const arrayOfInstances = [];\n\n        viewContainer._embeddedViews.forEach((view: ViewData) => {\n            const viewDef = view.def;\n\n            viewDef.nodes.forEach((node: NodeDef) => {\n                if (viewDef.nodeMatchedQueries === node.matchedQueryIds) {\n                    const nodeData: any = view.nodes[node.nodeIndex];\n\n                    arrayOfInstances.push(nodeData.instance as never);\n                }\n            });\n        });\n\n        if (this.options) {\n            this.options.reset(arrayOfInstances);\n            this.options.notifyOnChanges();\n        }\n\n        this.updateScrollSize();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _emitNavigationEvent(option: McTreeNodeOption<T>): void {\n        this.navigationChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    _emitChangeEvent(option: McTreeNodeOption<T>): void {\n        this.selectionChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    private _canDeselectLast(option: McTreeNodeOption<T>): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && option.selected);\n    }\n}\n\n","import { Directive, Input, OnInit } from '@angular/core';\nimport { CdkTreeNodePadding } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodePadding]',\n    providers: [{ provide: CdkTreeNodePadding, useExisting: McTreeNodePadding }]\n})\nexport class McTreeNodePadding<T> extends CdkTreeNodePadding<T> implements OnInit {\n    get leftPadding(): number {\n        return (this._withIcon ? 0 : this._iconWidth) + this._baseLeftPadding;\n    }\n\n    _baseLeftPadding: number = 6;\n    _iconWidth: number = 20;\n    _indent: number = 16;\n\n    @Input('mcTreeNodePadding') level: number;\n\n    @Input('mcTreeNodePaddingIndent') indent: number;\n\n    _withIcon: boolean;\n\n    _paddingIndent(): string | null {\n        const nodeLevel = (this._treeNode.data && this._tree.treeControl.getLevel)\n            ? this._tree.treeControl.getLevel(this._treeNode.data)\n            : null;\n\n        const level = this._level || nodeLevel;\n\n        return level ? `${(level * this._indent) + this.leftPadding}px` : `${this._baseLeftPadding}px`;\n    }\n\n    ngOnInit(): void {\n        this._withIcon = this._tree.treeControl.isExpandable(this._treeNode.data);\n        this._setPadding();\n    }\n}\n","import { Directive, Input } from '@angular/core';\n\nimport { CdkTreeNodeDef } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeDef]',\n    inputs: ['when: mcTreeNodeDefWhen'],\n    providers: [{ provide: CdkTreeNodeDef, useExisting: McTreeNodeDef }]\n})\nexport class McTreeNodeDef<T> extends CdkTreeNodeDef<T> {\n    @Input('mcTreeNode') data: T;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McRadioButton, McRadioGroup } from './radio.component';\n\n\n@NgModule({\n    imports: [ CommonModule, A11yModule, McCommonModule ],\n    exports: [ McRadioGroup, McRadioButton, McCommonModule ],\n    declarations: [ McRadioGroup, McRadioButton ]\n})\nexport class McRadioModule {}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, Directive, ElementRef, EventEmitter, forwardRef,\n    Input, OnDestroy, OnInit, Optional, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { UniqueSelectionDispatcher } from '@ptsecurity/cdk/collections';\n\nimport {\n    CanColor,\n    CanDisable,\n    HasTabIndex,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n\n/** Change event object emitted by McRadio. */\nexport class McRadioChange {\n    constructor(\n        /** The McRadioButton that emits the change event. */\n        public source: McRadioButton,\n        /** The value of the McRadioButton. */\n        public value: any) {}\n}\n\n// Boilerplate for applying mixins to McRadioGroup.\n/** @docs-private */\nexport class McRadioGroupBase {}\nexport const _McRadioGroupMixinBase = mixinDisabled(McRadioGroupBase);\n\n/**\n * Provider Expression that allows mc-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nexport const MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McRadioGroup),\n    multi: true\n};\n\n@Directive({\n    selector: 'mc-radio-group',\n    exportAs: 'mcRadioGroup',\n    providers: [MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n    host: {\n        role: 'radiogroup',\n        class: 'mc-radio-group'\n    },\n    inputs: ['disabled']\n})\nexport class McRadioGroup extends _McRadioGroupMixinBase\n    implements AfterContentInit, ControlValueAccessor, CanDisable {\n\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    @Input()\n    get name(): string { return this._name; }\n    set name(value: string) {\n        this._name = value;\n        this.updateRadioButtonNames();\n    }\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this.markRadiosForCheck();\n    }\n\n    /** Value of the radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(newValue: any) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n\n            this.updateSelectedRadioFromValue();\n            this.checkSelectedRadioButton();\n        }\n    }\n\n    /** Whether the radio button is selected. */\n    @Input()\n    get selected() { return this._selected; }\n    set selected(selected: McRadioButton | null) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this.checkSelectedRadioButton();\n    }\n\n    /** Whether the radio group is disabled */\n    @Input()\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /** Whether the radio group is required */\n    @Input()\n    get required(): boolean { return this._required; }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /**\n     * Event emitted when the group value changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * a radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** Child radio buttons. */\n    @ContentChildren(forwardRef(() => McRadioButton), { descendants: true })\n    _radios: QueryList<McRadioButton>;\n\n    /**\n     * Selected value for group. Should equal the value of the selected radio button if there *is*\n     * a corresponding radio button with a matching value. If there is *not* such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    private _value: any = null;\n\n    /** The HTML name attribute applied to radio buttons in this group. */\n    private _name: string = `mc-radio-group-${nextUniqueId++}`;\n\n    /** The currently selected radio button. Should match value. */\n    private _selected: McRadioButton | null = null;\n\n    /** Whether the `value` has been set to its initial value. */\n    private _isInitialized: boolean = false;\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    private _labelPosition: 'before' | 'after' = 'after';\n\n    /** Whether the radio group is disabled. */\n    private _disabled: boolean = false;\n\n    /** Whether the radio group is required. */\n    private _required: boolean = false;\n\n    constructor(\n        private readonly _changeDetector: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    /** The method to be called in order to update ngModel */\n    // tslint:disable-next-line\n    controlValueAccessorChangeFn: (value: any) => void = () => {};\n\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * @docs-private\n     */\n    // tslint:disable-next-line\n    onTouched: () => any = () => {};\n\n    checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on McRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the McRadioGroup.\n        this._isInitialized = true;\n    }\n\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n\n    /** Dispatch change event with current selection and group value. */\n    emitChangeEvent(): void {\n        if (this._isInitialized) {\n            this.change.emit(new McRadioChange(this._selected!, this._value));\n        }\n    }\n\n    markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach((radio) => radio.markForCheck());\n        }\n    }\n\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value\n     */\n    writeValue(value: any) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn: (value: any) => void) {\n        this.controlValueAccessorChangeFn = fn;\n    }\n\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n\n    private updateRadioButtonNames(): void {\n        if (this._radios) {\n            this._radios.forEach((radio) => {\n                radio.name = this.name;\n            });\n        }\n    }\n\n    /** Updates the `selected` radio button from the internal _value state. */\n    private updateSelectedRadioFromValue(): void {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n\n        if (this._radios != null && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach((radio) => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n}\n\n\n// Boilerplate for applying mixins to McRadioButton.\n/** @docs-private */\nexport class McRadioButtonBase {\n    // Since the disabled property is manually defined for the McRadioButton and isn't set up in\n    // the mixin base class. To be able to use the tabindex mixin, a disabled property must be\n    // defined to properly work.\n    disabled: boolean;\n\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McRadioButtonMixinBase =\n    mixinColor(mixinTabIndex(McRadioButtonBase));\n\n\n@Component({\n    selector: 'mc-radio-button',\n    templateUrl: 'radio.component.html',\n    styleUrls: ['radio.css'],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    exportAs: 'mcRadioButton',\n    host: {\n        class: 'mc-radio-button',\n        '[attr.id]': 'id',\n        '[class.mc-radio-checked]': 'checked',\n        '[class.mc-radio-disabled]': 'disabled',\n        '(focus)': '_inputElement.nativeElement.focus()'\n    }\n})\nexport class McRadioButton extends _McRadioButtonMixinBase\n    implements OnInit, OnDestroy, CanColor, HasTabIndex {\n\n    private readonly _uniqueId: string = `mc-radio-${++nextUniqueId}`;\n\n    /* tslint:disable:member-ordering */\n\n    /** The unique ID for the radio button. */\n    @Input() id: string = this._uniqueId;\n\n    /** Analog to HTML 'name' attribute used to group radios for unique selection. */\n    @Input() name: string;\n\n    /** Used to set the 'aria-label' attribute on the underlying input element. */\n    @Input('aria-label') ariaLabel: string;\n\n    /** The 'aria-labelledby' attribute takes precedence as the element's text alternative. */\n    @Input('aria-labelledby') ariaLabelledby: string;\n\n    /** The 'aria-describedby' attribute is read after the element's label and field type. */\n    @Input('aria-describedby') ariaDescribedby: string;\n\n    /** Whether this radio button is checked. */\n    @Input()\n    get checked(): boolean { return this._checked; }\n    set checked(value: boolean) {\n        const newCheckedState = toBoolean(value);\n\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            } else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** The value of this radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(value: any) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup != null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n\n    /** Whether the radio button is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled || (this.radioGroup != null && this.radioGroup.disabled);\n    }\n    set disabled(value: boolean) {\n        const newDisabledState = toBoolean(value);\n\n        if (this._disabled !== newDisabledState) {\n\n            this._disabled = newDisabledState;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** Whether the radio button is required. */\n    @Input()\n    get required(): boolean {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    private _labelPosition: 'before' | 'after';\n\n    /** The native `<input type=radio>` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Event emitted when the checked state of this radio button changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * the radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** The parent radio group. May or may not be present. */\n    radioGroup: McRadioGroup;\n\n    @Input()\n    isFocused: boolean = false;\n\n    /** ID of the native input element inside `<mc-radio-button>` */\n    get inputId(): string { return `${this.id || this._uniqueId}-input`; }\n\n    /** Whether this radio is checked. */\n    private _checked: boolean = false;\n\n    /** Whether this radio is disabled. */\n    private _disabled: boolean;\n\n    /** Whether this radio is required. */\n    private _required: boolean;\n\n    /** Value assigned to this radio. */\n    private _value: any = null;\n\n    /** Unregister function for _radioDispatcher */\n    // tslint:disable-next-line\n    private readonly removeUniqueSelectionListener: () => void = () => {};\n\n    constructor(\n        @Optional() radioGroup: McRadioGroup,\n        elementRef: ElementRef,\n        private readonly _changeDetector: ChangeDetectorRef,\n        private readonly _radioDispatcher: UniqueSelectionDispatcher\n    ) {\n\n        super(elementRef);\n\n        this.radioGroup = radioGroup;\n\n        this.removeUniqueSelectionListener =\n            _radioDispatcher.listen((id: string, name: string) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            });\n    }\n\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n\n    ngOnDestroy() {\n        this.removeUniqueSelectionListener();\n    }\n\n    /** Focuses the radio button. */\n    // tslint:disable-next-line\n    focus(): void {}\n\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n\n    onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n\n    onInputChange(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this.emitChangeEvent();\n\n        if (this.radioGroup) {\n            this.radioGroup.controlValueAccessorChangeFn(this.value);\n            this.radioGroup.touch();\n            if (groupValueChanged) {\n                this.radioGroup.emitChangeEvent();\n            }\n        }\n    }\n\n    /** Dispatch change event with current value. */\n    private emitChangeEvent(): void {\n        this.change.emit(new McRadioChange(this, this._value));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McProgressSpinner } from './progress-spinner.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressSpinner\n    ],\n    declarations: [\n        McProgressSpinner\n    ]\n})\nexport class McProgressSpinnerModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressSpinnerMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressSpinnerBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressPinnerMixinBase = mixinColor(McProgressSpinnerBase);\n\nconst MAX_DASH_ARRAY = 273;\n\n@Component({\n    selector: 'mc-progress-spinner',\n    templateUrl: './progress-spinner.component.html',\n    styleUrls: ['./progress-spinner.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-spinner',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressSpinner extends _McProgressPinnerMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-spinner-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressSpinnerMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n\n    get dashOffsetPercent(): string {\n        return `${MAX_DASH_ARRAY - this.percentage * MAX_DASH_ARRAY}%`;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McProgressBar\n} from './progress-bar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressBar\n    ],\n    declarations: [\n        McProgressBar\n    ]\n})\nexport class McProgressBarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressBarMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressBarBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressBarMixinBase = mixinColor(McProgressBarBase);\n\n@Component({\n    selector: 'mc-progress-bar',\n    templateUrl: './progress-bar.component.html',\n    styleUrls: ['./progress-bar.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-bar',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressBar extends _McProgressBarMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-bar-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressBarMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport {\n    McNavbar,\n    McNavbarContainer,\n    McNavbarItem,\n    McNavbarTitle,\n    McNavbarBrand,\n    McNavbarLogo\n} from './navbar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        McIconModule\n    ],\n    exports: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ],\n    declarations: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ]\n})\nexport class McNavbarModule {}\n","import { fromEvent, Observable, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport {\n    AfterViewInit,\n    Component, Directive,\n    ElementRef,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    ViewEncapsulation,\n    ContentChild,\n    TemplateRef,\n    ChangeDetectorRef,\n    ChangeDetectionStrategy,\n    ViewChild\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Platform } from '@ptsecurity/cdk/platform';\nimport { CanDisable, mixinDisabled } from '@ptsecurity/mosaic/core';\n\n\nconst COLLAPSED_CLASS: string = 'mc-navbar-collapsed-title';\nconst MC_ICON = 'mc-icon';\nconst MC_NAVBAR = 'mc-navbar';\nconst MC_NAVBAR_CONTAINER = 'mc-navbar-container';\nconst MC_NAVBAR_ITEM = 'mc-navbar-item';\nconst MC_NAVBAR_BRAND = 'mc-navbar-brand';\nconst MC_NAVBAR_TITLE = 'mc-navbar-title';\nconst MC_NAVBAR_LOGO = 'mc-navbar-logo';\n\nexport type McNavbarContainerPositionType = 'left' | 'right';\n\nexport interface IMcNavbarDropdownItem {\n    link?: string;\n    text: string;\n}\n\n@Directive({\n    selector: MC_NAVBAR_LOGO,\n    host: {\n        class: MC_NAVBAR_LOGO\n    }\n})\nexport class McNavbarLogo {}\n\n@Directive({\n    selector: MC_NAVBAR_BRAND,\n    host: {\n        class: MC_NAVBAR_BRAND\n    }\n})\nexport class McNavbarBrand {}\n\n@Directive({\n    selector: MC_NAVBAR_TITLE,\n    host: {\n        class: MC_NAVBAR_TITLE\n    }\n})\nexport class McNavbarTitle {}\n\nexport class McNavbarItemBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McNavbarMixinBase = mixinDisabled(McNavbarItemBase);\n\n@Component({\n    selector: MC_NAVBAR_ITEM,\n    template: `\n        <a\n            [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\n            (click)=\"handleClickByItem()\"\n            (keydown)=\"handleKeydown($event)\"\n            class=\"mc-navbar-item\"\n        >\n            <ng-content></ng-content>\n            <i *ngIf=\"hasDropdownContent\" mc-icon=\"mc-angle-M_16\"></i>\n        </a>\n        <ul\n            #dropdownContent\n            *ngIf=\"hasDropdownContent\"\n            [ngClass]=\"{ 'is-collapsed': isCollapsed }\"\n            class=\"mc-navbar-dropdown\"\n        >\n            <li\n                *ngFor=\"let item of dropdownItems\"\n                (click)=\"handleClickByDropdownItem()\"\n                class=\"mc-navbar-dropdown-item\"\n            >\n                <ng-container *ngIf=\"dropdownItemTmpl\">\n                    <ng-container *ngTemplateOutlet=\"dropdownItemTmpl; context: { $implicit: item }\"></ng-container>\n                </ng-container>\n                <a\n                    *ngIf=\"!dropdownItemTmpl\"\n                    [attr.href]=\"item.link\"\n                    [ngClass]=\"{ 'is-active': isActiveDropdownLink(item.link) }\"\n                    class=\"mc-navbar-dropdown-link\"\n                >{{ item.text }}</a>\n            </li>\n        </ul>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': '-1'\n    }\n})\nexport class McNavbarItem extends _McNavbarMixinBase implements OnInit, AfterViewInit, OnDestroy, CanDisable {\n\n    @Input()\n    tabIndex: number = 0;\n\n    @Input()\n    dropdownItems: IMcNavbarDropdownItem[] = [];\n\n    @Input()\n    set collapsedTitle(value: string) {\n        this.elementRef.nativeElement.setAttribute('computedTitle', encodeURI(value));\n    }\n\n    @ContentChild('dropdownItemTmpl', { read: TemplateRef })\n    dropdownItemTmpl: TemplateRef<IMcNavbarDropdownItem>;\n\n    @ViewChild('dropdownContent', { read: ElementRef })\n    dropdownContent: ElementRef;\n\n    get hasDropdownContent() {\n        return this.dropdownItems.length > 0;\n    }\n\n    isCollapsed: boolean = true;\n\n    private _subscription: Subscription = new Subscription();\n    private _focusMonitor$: Observable<FocusOrigin>;\n\n    private get _dropdownElements(): HTMLElement[] {\n        return this.dropdownContent ? this.dropdownContent.nativeElement.querySelectorAll('li > *') : [];\n    }\n\n    constructor(\n        public  elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _platform: Platform,\n        private _cdRef: ChangeDetectorRef\n    ) {\n        super(elementRef);\n    }\n\n    ngOnInit() {\n        this.denyClickIfDisabled();\n\n        this._focusMonitor$ = this._focusMonitor.monitor(this.elementRef.nativeElement, true);\n\n        if (this.hasDropdownContent) {\n            this.listenClickOutside();\n        }\n    }\n\n    ngAfterViewInit() {\n        if (!this.hasDropdownContent) {\n            return;\n        }\n\n        this.startListenFocusDropdownItems();\n    }\n\n    ngOnDestroy() {\n        this._subscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n        this.stopListenFocusDropdownItems();\n    }\n\n    isActiveDropdownLink(link: string): boolean {\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n\n        return window.location.href.indexOf(link) >= 0;\n    }\n\n    handleClickByItem() {\n        this.toggleDropdown();\n    }\n\n    handleKeydown($event: KeyboardEvent) {\n        const isNavbarItem = ($event.target as HTMLElement).classList.contains(MC_NAVBAR_ITEM);\n\n        // tslint:disable-next-line\n        if (this.hasDropdownContent && $event.keyCode === SPACE && isNavbarItem) {\n            this.toggleDropdown();\n        }\n    }\n\n    handleClickByDropdownItem() {\n        this.forceCloseDropdown();\n    }\n\n    private listenClickOutside() {\n        this._subscription.add(\n            this._focusMonitor$.subscribe((origin) => {\n                if (origin === null) {\n                    this.forceCloseDropdown();\n                }\n            })\n        );\n    }\n\n    private toggleDropdown() {\n        this.isCollapsed = !this.isCollapsed;\n    }\n\n    private forceCloseDropdown() {\n        this.isCollapsed = true;\n        this._cdRef.detectChanges();\n    }\n\n    private startListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.monitor(el, true);\n        });\n    }\n\n    private stopListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.stopMonitoring(el);\n        });\n    }\n\n    // This method is required due to angular 2 issue https://github.com/angular/angular/issues/11200\n    private denyClickIfDisabled() {\n        const events: Event[] = this.elementRef.nativeElement.eventListeners('click');\n\n        events.forEach((event) => this.elementRef.nativeElement.removeEventListener('click', event));\n\n        this.elementRef.nativeElement.addEventListener('click', (event: MouseEvent) => {\n            if (this.elementRef.nativeElement.hasAttribute('disabled')) {\n                event.stopImmediatePropagation();\n            }\n        }, true);\n\n        events.forEach((event) => this.elementRef.nativeElement.addEventListener('click', event));\n    }\n}\n\n@Directive({\n    selector: MC_NAVBAR_CONTAINER\n})\nexport class McNavbarContainer {\n    @Input()\n    position: McNavbarContainerPositionType = 'left';\n\n    @HostBinding('class')\n    get cssClasses(): string {\n        return this.position === 'left' ? 'mc-navbar-left' : 'mc-navbar-right';\n    }\n}\n\nclass CollapsibleItem {\n    private _collapsed: boolean = false;\n\n    constructor(\n        public element: HTMLElement,\n        public width: number\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        this._collapsed = collapsed;\n\n        this.updateCollapsedClass();\n    }\n\n    private updateCollapsedClass() {\n        if (this._collapsed) {\n            this.element.classList.add(COLLAPSED_CLASS);\n        } else {\n            this.element.classList.remove(COLLAPSED_CLASS);\n        }\n\n    }\n}\n\nclass CachedItemWidth {\n\n    get canCollapse(): boolean {\n        return this.itemsForCollapse.length > 0;\n    }\n\n    private _collapsedItemsWidth: number;\n\n    get collapsedItemsWidth(): number {\n        if (this._collapsedItemsWidth !== undefined) {\n            return this._collapsedItemsWidth;\n        }\n\n        this.calculateAndCacheCollapsedItemsWidth();\n\n        return this._collapsedItemsWidth;\n    }\n\n    constructor(\n        public element: HTMLElement,\n        public width: number,\n        public itemsForCollapse: CollapsibleItem[] = []\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        if (this.itemsForCollapse.length > 0) {\n            this.updateTitle(collapsed);\n        }\n\n        this.itemsForCollapse.forEach((item) => item.processCollapsed(collapsed));\n    }\n\n    private calculateAndCacheCollapsedItemsWidth() {\n        this._collapsedItemsWidth = this.itemsForCollapse\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getTitle(): string {\n        const computedTitle = this.element.getAttribute('computedTitle');\n\n        return computedTitle\n            ? decodeURI(computedTitle)\n            : (this.itemsForCollapse.length > 0 ? this.itemsForCollapse[0].element.innerText : '');\n    }\n\n    private updateTitle(collapsed: boolean) {\n        if (collapsed) {\n            this.element.setAttribute('title', this.getTitle());\n        } else {\n            this.element.removeAttribute('title');\n        }\n    }\n}\n\n\n@Component({\n    selector: MC_NAVBAR,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <nav class=\"mc-navbar\">\n            <ng-content select=\"[${MC_NAVBAR_CONTAINER}],${MC_NAVBAR_CONTAINER}\"></ng-content>\n        </nav>\n    `,\n    styleUrls: ['./navbar.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class McNavbar implements AfterViewInit, OnDestroy {\n\n    private readonly forceRecalculateItemsWidth: boolean = false;\n    private readonly resizeDebounceInterval: number = 100;\n    private readonly firstLevelElement: string = MC_NAVBAR_CONTAINER;\n    private readonly secondLevelElements: string[] = [\n        MC_NAVBAR_ITEM,\n        MC_NAVBAR_BRAND,\n        MC_NAVBAR_TITLE\n    ];\n\n    private _totalItemsWidths: number;\n    private _itemsWidths: CachedItemWidth[];\n\n    private get maxAllowedWidth(): number {\n        return this._elementRef.nativeElement.querySelector('nav').getBoundingClientRect().width;\n    }\n\n    private get itemsWidths(): CachedItemWidth[] {\n        if (this._itemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._itemsWidths;\n        }\n\n        this.calculateAndCacheItemsWidth();\n\n        return this._itemsWidths;\n    }\n\n    private get totalItemsWidth(): number {\n        if (this._totalItemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._totalItemsWidths;\n        }\n\n        this.calculateAndCacheTotalItemsWidth();\n\n        return this._totalItemsWidths;\n    }\n\n    private _resizeSubscription: Subscription;\n\n    constructor(\n        private _elementRef: ElementRef\n    ) {\n        const resizeObserver = fromEvent(window, 'resize')\n            .pipe(debounceTime(this.resizeDebounceInterval));\n\n        this._resizeSubscription = resizeObserver.subscribe(this.updateCollapsed.bind(this));\n    }\n\n    updateCollapsed(): void {\n        let collapseDelta = this.totalItemsWidth - this.maxAllowedWidth;\n\n        for (let i = this.itemsWidths.length - 1; i >= 0; i--) {\n            const item = this.itemsWidths[i];\n\n            if (!item.canCollapse) {\n                continue;\n            }\n\n            item.processCollapsed(collapseDelta > 0);\n            collapseDelta -= item.collapsedItemsWidth;\n        }\n    }\n\n    ngAfterViewInit(): void {\n        // Note: this wait is required for loading and rendering fonts for icons;\n        // unfortunately we cannot control font rendering\n        setTimeout(() => this.updateCollapsed(), 0);\n    }\n\n    ngOnDestroy() {\n        this._resizeSubscription.unsubscribe();\n    }\n\n    private calculateAndCacheTotalItemsWidth() {\n        this._totalItemsWidths = this.itemsWidths\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getOuterElementWidth(element: HTMLElement): number {\n        const baseWidth  = element.getBoundingClientRect().width;\n        const marginRight = parseInt(getComputedStyle(element).getPropertyValue('margin-right'));\n        const marginLeft = parseInt(getComputedStyle(element).getPropertyValue('margin-left'));\n\n        return baseWidth + marginRight + marginLeft;\n    }\n\n    private calculateAndCacheItemsWidth() {\n        const allItemsSelector = this.secondLevelElements\n            .map((e: string) => `${this.firstLevelElement}>${e}`);\n        const allItems: HTMLElement[] = Array.from(this._elementRef.nativeElement.querySelectorAll(allItemsSelector));\n\n        this._itemsWidths = allItems\n            .map((el) => new CachedItemWidth(el, this.getOuterElementWidth(el), this.getItemsForCollapse(el)));\n    }\n\n    private getItemsForCollapse(element: HTMLElement): CollapsibleItem[] {\n        const icon = element.querySelector(`[${MC_ICON}],${MC_NAVBAR_LOGO},[${MC_NAVBAR_LOGO}]`);\n\n        if (!icon) {\n            return [];\n        }\n\n        return Array.from(element.querySelectorAll(MC_NAVBAR_TITLE))\n            .map((el) => new CollapsibleItem(<HTMLElement> el, el.getBoundingClientRect().width));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLink } from './link.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule\n    ],\n    declarations: [\n        McLink\n    ],\n    exports: [\n        McLink\n    ]\n})\nexport class McLinkModule {}\n","import { Component, ElementRef, OnDestroy, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\n\n\n@Component({\n    selector: 'a.mc-link',\n    template: `<ng-content></ng-content>`,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./link.css'],\n    inputs: ['disabled', 'tabindex'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': 'disabled ? -1 : tabindex ? tabindex : 0'\n    }\n})\n\nexport class McLink implements OnDestroy {\n    disabled: boolean;\n    tabindex: number;\n\n    constructor(private elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n\n        this._focusMonitor.monitor(elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this.elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLineModule } from '@ptsecurity/mosaic/core';\n\nimport { McListSelection, McListOption } from './list-selection.component';\nimport { McList, McListItem, McListSubheaderCssStyler } from './list.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        McLineModule\n    ],\n    exports: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ],\n    declarations: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ]\n})\nexport class McListModule {}\n","// todo пока не делаем, перенесено из материала, но у нас в доках таких простых списков нет.\nimport {\n    AfterContentInit, ChangeDetectionStrategy, Component, ContentChildren, Directive, ElementRef, QueryList,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { McLine, McLineSetter } from '@ptsecurity/mosaic/core';\n\n\nexport class McListBase {}\n\n@Component({\n    selector: 'mc-list',\n    host: { class: 'mc-list' },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McList extends McListBase {}\n\n\n/**\n * Directive whose purpose is to add the mc- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n    selector: '[mc-subheader], [mcSubheader]',\n    host: { class: 'mc-subheader' }\n})\nexport class McListSubheaderCssStyler {}\n\n\n// Boilerplate for applying mixins to McListItem.\nexport class McListItemBase {}\n\n@Component({\n    selector: 'mc-list-item, a[mc-list-item]',\n    host: {\n        class: 'mc-list-item',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()'\n    },\n    templateUrl: './list-item.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListItem extends McListItemBase implements AfterContentInit {\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    private _lineSetter: McLineSetter;\n\n    constructor(private _element: ElementRef) {\n        super();\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    _handleFocus() {\n        this._element.nativeElement.classList.add('mc-focused');\n    }\n\n    _handleBlur() {\n        this._element.nativeElement.classList.remove('mc-focused');\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n    QueryList,\n    ViewEncapsulation,\n    ChangeDetectorRef,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\n\nimport { FocusKeyManager, IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { END, ENTER, HOME, PAGE_DOWN, PAGE_UP, SPACE } from '@ptsecurity/cdk/keycodes';\n\nimport {\n    McLine,\n    McLineSetter,\n    CanDisable,\n    mixinDisabled,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\n@Component({\n    exportAs: 'mcListOption',\n    selector: 'mc-list-option',\n    host: {\n        tabindex: '-1',\n\n        class: 'mc-list-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n        '(click)': '_handleClick()'\n    },\n    templateUrl: 'list-option.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListOption implements AfterContentInit, OnDestroy, OnInit, IFocusableOption {\n    _hasFocus: boolean = false;\n\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    @ViewChild('text') _text: ElementRef;\n\n    // Whether the label should appear before or after the checkbox. Defaults to 'after'\n    @Input() checkboxPosition: 'before' | 'after' = 'after';\n\n    @Input() value: any;\n\n    private _focusHandlerInProgress: boolean;\n\n    @Input()\n    get disabled() {\n        return this._disabled || (this.listSelection && this.listSelection.disabled);\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.listSelection.selectedOptions && this.listSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            this.listSelection._reportValueChange();\n        }\n    }\n\n    private _lineSetter: McLineSetter;\n    private _selected = false;\n    private _disabled = false;\n\n    constructor(\n        private _element: ElementRef,\n        private _changeDetector: ChangeDetectorRef,\n        @Inject(forwardRef(() => McListSelection))\n        public listSelection: McListSelection\n    ) {}\n\n    ngOnInit() {\n        if (this._selected) {\n            // List options that are selected at initialization can't be reported properly to the form\n            // control. This is because it takes some time until the selection-list knows about all\n            // available options. Also it can happen that the ControlValueAccessor has an initial value\n            // that should be used instead. Deferring the value change report to the next tick ensures\n            // that the form control value is not being overwritten.\n            const wasSelected = this._selected;\n\n            Promise.resolve().then(() => {\n                if (this._selected || wasSelected) {\n                    this.selected = true;\n                    this._changeDetector.markForCheck();\n                }\n            });\n        }\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    ngOnDestroy(): void {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => this.selected = false);\n        }\n\n        this.listSelection._removeOptionFromList(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    focus(): void {\n        this._element.nativeElement.focus();\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    getLabel() {\n        return this._text ? this._text.nativeElement.textContent : '';\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.listSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.listSelection.selectedOptions.select(this);\n        } else {\n            this.listSelection.selectedOptions.deselect(this);\n        }\n\n        this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleClick() {\n        if (this.disabled) { return; }\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    _handleFocus() {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur() {\n        this._hasFocus = false;\n\n        this.listSelection._onTouched();\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n\n\nexport const MC_SELECTION_LIST_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McListSelection),\n    multi: true\n};\n\n// Change event that is being fired whenever the selected state of an option changes. */\nexport class McListSelectionChange {\n    constructor(\n        // Reference to the selection list that emitted the event.\n        public source: McListSelection,\n        // Reference to the option that has been changed.\n        public option: McListOption\n    ) {}\n}\n\n\nexport class McListSelectionBase {}\n\nexport const _McListSelectionMixinBase = mixinDisabled(McListSelectionBase);\n\n@Component({\n    exportAs: 'mcListSelection',\n    selector: 'mc-list-selection',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-list-selection',\n        '[tabIndex]': 'tabIndex',\n        '(focus)': 'focus()',\n        '(blur)': '_onTouched()',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    providers: [MC_SELECTION_LIST_VALUE_ACCESSOR],\n    preserveWhitespaces: false\n})\nexport class McListSelection extends _McListSelectionMixinBase implements\n    IFocusableOption, CanDisable, AfterContentInit, ControlValueAccessor {\n\n    _keyManager: FocusKeyManager<McListOption>;\n\n    // The option components contained within this selection-list.\n    @ContentChildren(McListOption) options: QueryList<McListOption>;\n\n    tabIndex: number;\n\n    autoSelect: boolean;\n    noUnselect: boolean;\n    multiple: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input() horizontal: boolean = false;\n\n    // Emits a change event whenever the selected state of an option changes.\n    @Output() readonly selectionChange: EventEmitter<McListSelectionChange> = new EventEmitter<McListSelectionChange>();\n\n    selectedOptions: SelectionModel<McListOption>;\n\n    // Used for storing the values that were assigned before the options were initialized.\n    private _tempValues: string[] | null;\n\n    private _modelChanges = Subscription.EMPTY;\n\n    constructor(\n        private _element: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string,\n        @Attribute('multiple') multiple: string\n    ) {\n        super();\n\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.selectedOptions = new SelectionModel<McListOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.horizontal = toBoolean(this.horizontal);\n\n        this._keyManager = new FocusKeyManager<McListOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(!this.horizontal)\n            .withHorizontalOrientation(this.horizontal ? 'ltr' : null);\n\n        if (this._tempValues) {\n            this._setOptionsFromValues(this._tempValues);\n            this._tempValues = null;\n        }\n\n        // Sync external changes to the model back to the options.\n        this._modelChanges = this.selectedOptions.onChange!.subscribe((event) => {\n            for (const item of event.added) {\n                item.selected = true;\n            }\n\n            for (const item of event.removed) {\n                item.selected = false;\n            }\n        });\n\n        this.updateScrollSize();\n    }\n\n    ngOnDestroy() {\n        this._modelChanges.unsubscribe();\n    }\n\n    focus() {\n        this._element.nativeElement.focus();\n    }\n\n    selectAll() {\n        this.options.forEach((option) => option.setSelected(true));\n\n        this._reportValueChange();\n    }\n\n    deselectAll() {\n        this.options.forEach((option) => option.setSelected(false));\n\n        this._reportValueChange();\n    }\n\n    updateScrollSize(): void {\n        if (this.horizontal || !this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    // Sets the focused option of the selection-list.\n    setFocusedOption(option: McListOption): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitChangeEvent(option);\n        this._reportValueChange();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(values: string[]): void {\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        } else {\n            this._tempValues = values;\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this._onTouched = fn;\n    }\n\n    // Implemented as a part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        if (this.options) {\n            this.options.forEach((option) => option.disabled = isDisabled);\n        }\n    }\n\n    getSelectedOptionValues(): string[] {\n        return this.options.filter((option) => option.selected).map((option) => option.value);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McListOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    _canDeselectLast(listOption: McListOption): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && listOption.selected);\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    // View to model callback that should be called if the list or its options lost focus.\n    _onTouched: () => void = () => {};\n\n    // Removes an option from the selection list and updates the active item.\n    _removeOptionFromList(option: McListOption) {\n        if (option._hasFocus) {\n            const optionIndex = this._getOptionIndex(option);\n\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.setPreviousItemActive();\n            } else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.setNextItemActive();\n            }\n        }\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                if (!this.horizontal) { this._keyManager.setPreviousPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                if (!this.horizontal) { this._keyManager.setNextPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    // Reports a value change to the ControlValueAccessor\n    _reportValueChange() {\n        if (this.options) {\n            this._onChange(this.getSelectedOptionValues());\n        }\n    }\n\n    // Emits a change event if the selected state of an option changed.\n    _emitChangeEvent(option: McListOption) {\n        this.selectionChange.emit(new McListSelectionChange(this, option));\n    }\n\n    // Returns the option with the specified value.\n    private _getOptionByValue(value: string): McListOption | undefined {\n        return this.options.find((option) => option.value === value);\n    }\n\n    // Sets the selected options based on the specified values.\n    private _setOptionsFromValues(values: string[]) {\n        this.options.forEach((option) => option.setSelected(false));\n\n        values\n            .map((value) => this._getOptionByValue(value))\n            .filter(Boolean)\n            .forEach((option) => option!.setSelected(true));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    // Returns the index of the specified list option.\n    private _getOptionIndex(option: McListOption): number {\n        return this.options.toArray().indexOf(option);\n    }\n\n    // View to model callback that should be called whenever the selected options change.\n    private _onChange: (value: any) => void = (_: any) => {};\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McInput, McInputMono } from './input';\n\n\n@NgModule({\n    imports: [ CommonModule, A11yModule, McCommonModule, FormsModule ],\n    exports: [ McInput, McInputMono ],\n    declarations: [ McInput, McInputMono ]\n})\nexport class McInputModule {}\n","import {\n    Directive, DoCheck, ElementRef, Inject, Input, OnChanges,\n    OnDestroy, OnInit, Optional, Self\n} from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { getSupportedInputTypes, Platform } from '@ptsecurity/cdk/platform';\nimport { CanUpdateErrorState, ErrorStateMatcher, mixinErrorState } from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\n\nimport { getMcInputUnsupportedTypeError } from './input-errors';\nimport { MC_INPUT_VALUE_ACCESSOR } from './input-value-accessor';\n\n\nconst MC_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n\nlet nextUniqueId = 0;\n\nexport class McInputBase {\n    constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n                public _parentForm: NgForm,\n                public _parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\nexport const _McInputMixinBase = mixinErrorState(McInputBase);\n\n\n@Directive({\n    selector: `input[mcInput]`,\n    exportAs: 'mcInput',\n    host: {\n        'class': 'mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(input)': '_onInput()'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McInput }]\n})\nexport class McInput extends _McInputMixinBase implements McFormFieldControl<any>, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-input';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    // tslint:disable no-reserved-keywords\n    /** Input type of the element. */\n    @Input()\n    get type(): string {\n        return this._type;\n    }\n\n    set type(value: string) {\n        this._type = value || 'text';\n        this._validateType();\n\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    // tslint:enable no-reserved-keywords\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this._inputValueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected _uid = `mc-input-${nextUniqueId++}`;\n    protected _previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n    protected _type = 'text';\n    protected _neverEmptyInputTypes = [\n        'date',\n        'datetime',\n        'datetime-local',\n        'month',\n        'time',\n        'week'\n    ].filter((t) => getSupportedInputTypes().has(t));\n\n    private _inputValueAccessor: { value: any };\n\n    constructor(protected _elementRef: ElementRef,\n                protected _platform: Platform,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || this._elementRef.nativeElement;\n\n        this._previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n\n    /** Focuses the input. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the input changes. */\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    protected _dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Make sure the input is a supported type. */\n    protected _validateType() {\n        if (MC_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMcInputUnsupportedTypeError(this._type);\n        }\n    }\n\n    /** Checks whether the input type is one of the types that are never empty. */\n    protected _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    protected _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this._elementRef.nativeElement as HTMLInputElement).validity;\n\n        return validity && validity.badInput;\n    }\n}\n\n@Directive({\n    selector: 'input[mcInputMonospace]',\n    exportAs: 'McInputMonospace',\n    host: { class: 'mc-input_monospace' }\n})\nexport class McInputMono {\n}\n","import { InjectionToken } from '@angular/core';\n\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n","export function getMcInputUnsupportedTypeError(inputType: string): Error {\n    return Error(`Input type \"${inputType}\" isn't supported by mcInput.`);\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCleaner } from './cleaner';\nimport { McFormField, McFormFieldWithoutBorders } from './form-field';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McSuffix } from './suffix';\n\n\n@NgModule({\n    declarations: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner\n    ],\n    imports: [CommonModule, McIconModule],\n    exports: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner\n    ]\n})\nexport class McFormFieldModule {\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren, Directive,\n    ElementRef,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { EMPTY, merge } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\n\nimport { McCleaner } from './cleaner';\nimport { McFormFieldControl } from './form-field-control';\nimport { getMcFormFieldMissingControlError } from './form-field-errors';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McSuffix } from './suffix';\n\n\nexport class McFormFieldBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\n@Component({\n    selector: 'mc-form-field',\n    exportAs: 'mcFormField',\n    templateUrl: 'form-field.html',\n    // McInput is a directive and can't have styles, so we need to include its styles here.\n    // The McInput styles are fairly minimal so it shouldn't be a big deal for people who\n    // aren't using McInput.\n    styleUrls: [\n        'form-field.css',\n        '../input/input.css'\n    ],\n    host: {\n        class: 'mc-form-field',\n        '[class.mc-form-field_invalid]': '_control.errorState',\n        '[class.mc-form-field_disabled]': '_control.disabled',\n        '[class.mc-form-field_has-prefix]': 'hasPrefix',\n        '[class.mc-form-field_has-suffix]': 'hasSuffix',\n        '[class.mc-form-field_has-cleaner]': 'canShowCleaner',\n        '[class.mc-focused]': '_control.focused',\n        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n        '[class.ng-touched]': '_shouldForward(\"touched\")',\n        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n        '[class.ng-valid]': '_shouldForward(\"valid\")',\n        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n        '[class.ng-pending]': '_shouldForward(\"pending\")',\n        '(keydown)': 'onKeyDown($event)'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class McFormField extends McFormFieldBase\n    implements AfterContentInit, AfterContentChecked, AfterViewInit {\n\n    @ContentChild(McFormFieldControl) _control: McFormFieldControl<any>;\n    @ContentChildren(McHint) _hint: QueryList<McHint>;\n    @ContentChildren(McSuffix) _suffix: QueryList<McSuffix>;\n    @ContentChildren(McPrefix) _prefix: QueryList<McPrefix>;\n    @ContentChildren(McCleaner) _cleaner: QueryList<McCleaner>;\n\n\n    constructor(\n        public _elementRef: ElementRef,\n        private _changeDetectorRef: ChangeDetectorRef) {\n        super(_elementRef);\n    }\n\n    ngAfterContentInit() {\n        this._validateControlChild();\n        if (this._control.controlType) {\n            this._elementRef.nativeElement.classList\n                .add(`mc-form-field-type-${this._control.controlType}`);\n        }\n\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        this._control.stateChanges.pipe(startWith()).subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n        });\n\n        // Run change detection if the value changes.\n        const valueChanges = this._control.ngControl && this._control.ngControl.valueChanges || EMPTY;\n        merge(valueChanges)\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n\n    ngAfterContentChecked() {\n        this._validateControlChild();\n    }\n\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._changeDetectorRef.detectChanges();\n    }\n\n    clearValue($event) {\n        $event.stopPropagation();\n\n        if (this._control && this._control.ngControl) {\n            this._control.ngControl.reset();\n        }\n    }\n\n    onContainerClick($event) {\n        return this._control.onContainerClick && this._control.onContainerClick($event);\n    }\n\n    onKeyDown(e: KeyboardEvent): void {\n        if (e.keyCode === ESCAPE &&\n            this._control.focused &&\n            this.hasCleaner) {\n            if (this._control && this._control.ngControl) {\n                this._control.ngControl.reset();\n            }\n            e.preventDefault();\n        }\n    }\n\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop: string): boolean {\n        const ngControl = this._control ? this._control.ngControl : null;\n\n        return ngControl && ngControl[prop];\n    }\n\n    /** Throws an error if the form field's control is missing. */\n    protected _validateControlChild() {\n        if (!this._control) {\n            throw getMcFormFieldMissingControlError();\n        }\n    }\n\n    get hasHint() {\n        return this._hint && this._hint.length > 0;\n    }\n\n    get hasSuffix() {\n        return this._suffix && this._suffix.length > 0;\n    }\n\n    get hasPrefix() {\n        return this._prefix && this._prefix.length > 0;\n    }\n\n    get hasCleaner() {\n        return this._cleaner && this._cleaner.length > 0;\n    }\n\n    get canShowCleaner() {\n        return  this.hasCleaner &&\n        this._control && this._control.ngControl\n            ? this._control.ngControl.value && !this._control.disabled\n            : false;\n    }\n}\n\n@Directive({\n    selector: 'mc-form-field[mcFormFieldWithoutBorders]',\n    exportAs: 'mcFormFieldWithoutBorders',\n    host: { class: 'mc-form-field_without-borders' }\n})\nexport class McFormFieldWithoutBorders {\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcSuffix]'\n})\nexport class McSuffix {\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcPrefix]'\n})\nexport class McPrefix {\n}\n","import { Directive, Input } from '@angular/core';\n\n\nlet nextUniqueId = 0;\n\n@Directive({\n    selector: 'mc-hint',\n    host: {\n        class: 'mc-hint',\n        '[attr.id]': 'id'\n    }\n})\nexport class McHint {\n    @Input() id: string = `mc-hint-${nextUniqueId++}`;\n}\n","export function getMcFormFieldMissingControlError(): Error {\n  return Error('mc-form-field must contain a McFormFieldControl.');\n}\n","import { NgControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** The element ID for this control. */\n    readonly id: string;\n\n    /** The placeholder for this control. */\n    readonly placeholder: string;\n\n    /** Gets the NgControl for this control. */\n    readonly ngControl: NgControl | null;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Whether the control is empty. */\n    readonly empty: boolean;\n\n    /** Whether the control is required. */\n    readonly required: boolean;\n\n    /** Whether the control is disabled. */\n    readonly disabled: boolean;\n\n    /** Whether the control is in an error state. */\n    readonly errorState: boolean;\n\n    /**\n     * An optional name for the control type that can be used to distinguish `mat-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mat-form-field-type-{{controlType}}` to its root element.\n     */\n    readonly controlType?: string;\n\n    /** Handles a click on the control's container. */\n    abstract onContainerClick(event: MouseEvent): void;\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-cleaner',\n    template: '<i mc-icon=\"mc-close-M_16\" class=\"mc-cleaner__icon\"></i>'\n})\nexport class McCleaner {\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {McCommonModule} from '@ptsecurity/mosaic/core';\n\nimport {McDivider} from './divider.component';\n\n\n@NgModule({\n    imports: [\n        McCommonModule,\n        CommonModule\n    ],\n    exports: [\n        McDivider,\n        McCommonModule\n    ],\n    declarations: [\n        McDivider\n    ]\n})\nexport class McDividerModule {}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { toBoolean } from '@ptsecurity/mosaic/core';\n\n\n@Component({\n    selector: 'mc-divider',\n    host: {\n        class: 'mc-divider',\n        role: 'separator',\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n        '[class.mc-divider-vertical]': 'vertical',\n        '[class.mc-divider-inset]': 'inset'\n    },\n    template: '',\n    styleUrls: ['divider.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false\n})\nexport class McDivider {\n    // Whether the divider is vertically aligned.\n    @Input()\n    get vertical(): boolean {\n        return this._vertical;\n    }\n\n    set vertical(value: boolean) {\n        this._vertical = toBoolean(value);\n    }\n\n    private _vertical: boolean = false;\n\n    // Whether the divider is an inset divider.\n    @Input()\n    get inset(): boolean {\n        return this._inset;\n    }\n\n    set inset(value: boolean) {\n        this._inset = toBoolean(value);\n    }\n\n    private _inset: boolean = false;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McCheckbox } from './checkbox';\nimport { McCheckboxRequiredValidator } from './checkbox-required-validator';\n\n\n@NgModule({\n    imports: [CommonModule, McCommonModule],\n    exports: [McCheckbox, McCheckboxRequiredValidator, McCommonModule],\n    declarations: [McCheckbox, McCheckboxRequiredValidator]\n})\nexport class McCheckboxModule {\n}\n","import {\n    Directive,\n    forwardRef,\n    Provider\n} from '@angular/core';\nimport {\n    CheckboxRequiredValidator,\n    NG_VALIDATORS\n} from '@angular/forms';\n\n\nexport const MC_CHECKBOX_REQUIRED_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => McCheckboxRequiredValidator),\n    multi: true\n};\n\n/**\n * Validator for Mosaic checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mc-checkbox`.\n */\n@Directive({\n    selector: `mc-checkbox[required][formControlName],\n             mc-checkbox[required][formControl], mc-checkbox[required][ngModel]`,\n    providers: [MC_CHECKBOX_REQUIRED_VALIDATOR],\n    host: { '[attr.required]': 'required ? \"\" : null' }\n})\nexport class McCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\n","import {\n    AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanColor,\n    CanDisable,\n    HasTabIndex,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_CHECKBOX_CLICK_ACTION, McCheckboxClickAction } from './checkbox-config';\n\n\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n\n/**\n * Provider Expression that allows mc-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nexport const MC_CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McCheckbox),\n    multi: true\n};\n\n/**\n * Represents the different states that require custom transitions between them.\n * @docs-private\n */\nexport enum TransitionCheckState {\n    /** The initial state of the component before any user interaction. */\n    Init,\n    /** The state representing the component when it's becoming checked. */\n    Checked,\n    /** The state representing the component when it's becoming unchecked. */\n    Unchecked,\n    /** The state representing the component when it's becoming indeterminate. */\n    Indeterminate\n}\n\n/** Change event object emitted by McCheckbox. */\nexport class McCheckboxChange {\n    /** The source McCheckbox of the event. */\n    source: McCheckbox;\n    /** The new `checked` value of the checkbox. */\n    checked: boolean;\n}\n\n// Boilerplate for applying mixins to McCheckbox.\n/** @docs-private */\nexport class McCheckboxBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McCheckboxMixinBase =\n    mixinTabIndex(mixinColor(mixinDisabled(McCheckboxBase)));\n\n\n/**\n * A mosaic checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A McCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n */\n@Component({\n    selector: 'mc-checkbox',\n    templateUrl: 'checkbox.html',\n    styleUrls: ['checkbox.css'],\n    exportAs: 'mcCheckbox',\n    host: {\n        class: 'mc-checkbox',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-checkbox-indeterminate]': 'indeterminate',\n        '[class.mc-checkbox-checked]': 'checked',\n        '[class.mc-checkbox-disabled]': 'disabled',\n        '[class.mc-checkbox-label-before]': 'labelPosition == \"before\"'\n    },\n    providers: [MC_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCheckbox extends _McCheckboxMixinBase implements ControlValueAccessor,\n    AfterViewInit, OnDestroy, CanColor, CanDisable, HasTabIndex {\n\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\n     * take precedence so this may be omitted.\n     */\n    @Input('aria-label') ariaLabel: string = '';\n\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     */\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-checkbox-${++nextUniqueId}`;\n\n    /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n    @Input() id: string = this._uniqueId;\n\n    /** Returns the unique id for the visual hidden input. */\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    /** Whether the checkbox is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    private _required: boolean;\n\n    /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n    @Input() labelPosition: 'before' | 'after' = 'after';\n\n    /** Name value will be applied to the input element if present */\n    @Input() name: string | null = null;\n\n    /** Event emitted when the checkbox's `checked` value changes. */\n    @Output() readonly change: EventEmitter<McCheckboxChange> =\n        new EventEmitter<McCheckboxChange>();\n\n    /** Event emitted when the checkbox's `indeterminate` value changes. */\n    @Output() readonly indeterminateChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** The value attribute of the native input element */\n    @Input() value: string;\n\n    /** The native `<input type=\"checkbox\">` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n     * @docs-private\n     */\n    _onTouched: () => any = () => {\n    }\n\n    private _currentAnimationClass: string = '';\n\n    private _currentCheckState: TransitionCheckState = TransitionCheckState.Init;\n\n    private _controlValueAccessorChangeFn: (value: any) => void = () => {\n    }\n\n    constructor(elementRef: ElementRef,\n                private _changeDetectorRef: ChangeDetectorRef,\n                private _focusMonitor: FocusMonitor,\n                @Attribute('tabindex') tabIndex: string,\n                @Optional() @Inject(MC_CHECKBOX_CLICK_ACTION)\n                private _clickAction: McCheckboxClickAction) {\n        super(elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._inputElement.nativeElement)\n            .subscribe((focusOrigin) => this._onInputFocusChange(focusOrigin));\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._inputElement.nativeElement);\n    }\n\n    /**\n     * Whether the checkbox is checked.\n     */\n    @Input()\n    get checked(): boolean {\n        return this._checked;\n    }\n\n    set checked(value: boolean) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     */\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value != this.disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    @Input()\n    get indeterminate(): boolean {\n        return this._indeterminate;\n    }\n\n    set indeterminate(value: boolean) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = value;\n\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(TransitionCheckState.Indeterminate);\n            } else {\n                this._transitionCheckState(\n                    this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n    }\n\n    private _indeterminate: boolean = false;\n\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // This method is getting called whenever the label of the checkbox changes.\n        // Since the checkbox uses the OnPush strategy we need to notify it about the change\n        // that has been recognized by the cdkObserveContent directive.\n        this._changeDetectorRef.markForCheck();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: any) {\n        this._onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    _getAriaChecked(): 'true' | 'false' | 'mixed' {\n        return this.checked ? 'true' : (this.indeterminate ? 'mixed' : 'false');\n    }\n\n    private _transitionCheckState(newState: TransitionCheckState) {\n        const oldState = this._currentCheckState;\n        const element: HTMLElement = this._elementRef.nativeElement;\n\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n\n        this._currentCheckState = newState;\n\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n        }\n    }\n\n    private _emitChangeEvent() {\n        const event = new McCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    }\n\n    /** Function is called whenever the focus changes for the input element. */\n    private _onInputFocusChange(focusOrigin: FocusOrigin) {\n        if (focusOrigin) {\n            this._onTouched();\n        }\n    }\n\n    /** Toggles the `checked` state of the checkbox. */\n    toggle(): void {\n        this.checked = !this.checked;\n    }\n\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param event\n     */\n    _onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && this._clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && this._clickAction !== 'check') {\n\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n\n            this.toggle();\n            this._transitionCheckState(\n                this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        } else if (!this.disabled && this._clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mc-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n\n    /** Focuses the checkbox. */\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _onInteractionEvent(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n}\n","import { InjectionToken } from '@angular/core';\n\n\n/**\n * Checkbox click action when user click on input element.\n * noop: Do not toggle checked or indeterminate.\n * check: Only toggle checked status, ignore indeterminate.\n * check-indeterminate: Toggle checked status, set indeterminate to false. Default behavior.\n * undefined: Same as `check-indeterminate`.\n */\nexport type McCheckboxClickAction = 'noop' | 'check' | 'check-indeterminate' | undefined;\n\n/**\n * Injection token that can be used to specify the checkbox click behavior.\n */\nexport const MC_CHECKBOX_CLICK_ACTION =\n    new InjectionToken<McCheckboxClickAction>('mc-checkbox-click-action');\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McButton,\n    McAnchor,\n    McIconButton,\n    McButtonCSSStyler,\n    McXSButtonCSSStyler,\n    McSMButtonCSSStyler,\n    McLGButtonCSSStyler,\n    McXLButtonCSSStyler,\n    McIconButtonCSSStyler\n} from './button.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McXSButtonCSSStyler,\n        McSMButtonCSSStyler,\n        McLGButtonCSSStyler,\n        McXLButtonCSSStyler,\n        McIconButtonCSSStyler\n    ],\n    declarations: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McXSButtonCSSStyler,\n        McSMButtonCSSStyler,\n        McLGButtonCSSStyler,\n        McXLButtonCSSStyler,\n        McIconButtonCSSStyler\n    ]\n})\nexport class McButtonModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    OnDestroy,\n    QueryList,\n    ViewEncapsulation,\n    ContentChildren\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport { Platform } from '@ptsecurity/cdk/platform';\n\nimport { mixinColor, mixinDisabled, CanColor, CanDisable } from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\n@Directive({\n    selector: 'button[mc-button], a[mc-button]',\n    host: { class: 'mc-button' }\n})\nexport class McButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-xs-button], a[mc-xs-button]',\n    host: { class: 'mc-button mc-button_xs' }\n})\nexport class McXSButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-sm-button], a[mc-sm-button]',\n    host: { class: 'mc-button mc-button_sm' }\n})\nexport class McSMButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-lg-button], a[mc-lg-button]',\n    host: { class: 'mc-button mc-button_lg' }\n})\nexport class McLGButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-xl-button], a[mc-xl-button]',\n    host: { class: 'mc-button mc-button_xl' }\n})\nexport class McXLButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-icon-button], a[mc-icon-button]',\n    queries: {\n        contentChildren: new ContentChildren(McIcon)\n    },\n    host: { class: 'mc-icon-button' }\n})\nexport class McIconButtonCSSStyler {\n    nativeElement: Element;\n\n    contentChildren: QueryList<McIcon>;\n\n    constructor(elementRef: ElementRef) {\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const twoIcons = 2;\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-icon-button_left');\n                }\n\n                if (iconElement.previousSibling) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-icon-button_right');\n                }\n            }\n        } else if (icons.length === twoIcons) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n\n\nexport class McButtonBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McButtonMixinBase = mixinColor(mixinDisabled(McButtonBase));\n\n\n@Component({\n    selector: `\n        button[mc-button],\n        button[mc-xs-button],\n        button[mc-sm-button],\n        button[mc-lg-button],\n        button[mc-xl-button]\n    `,\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[disabled]': 'disabled || null'\n    }\n})\nexport class McButton extends _McButtonMixinBase implements OnDestroy, CanDisable, CanColor {\n    constructor(elementRef: ElementRef, private _platform: Platform, private _focusMonitor: FocusMonitor) {\n        super(elementRef);\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n\n\n@Component({\n    selector: 'a[mc-button], a[mc-xs-button], a[mc-sm-button], a[mc-lg-button], a[mc-xl-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_haltDisabledEvents($event)'\n    }\n})\nexport class McAnchor extends McButton {\n    constructor(platform: Platform, focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, platform, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n\n\n@Component({\n    selector: 'button[mc-icon-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null'\n    }\n})\nexport class McIconButton extends McButton {\n    constructor(platform: Platform, focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, platform, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McIcon,\n    McIconCSSStyler\n} from './icon.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McIcon,\n        McIconCSSStyler\n    ],\n    declarations: [\n        McIcon,\n        McIconCSSStyler\n    ]\n})\nexport class McIconModule {}\n","import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { mixinColor, CanColor } from '@ptsecurity/mosaic/core';\n\n\n@Directive({\n    selector: '[mc-icon]',\n    host: { class: 'mc mc-icon' }\n})\nexport class McIconCSSStyler {}\n\n\nexport class McIconBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McIconMixinBase = mixinColor(McIconBase);\n\n\n@Component({\n    selector: `[mc-icon]`,\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./icon.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McIcon extends _McIconMixinBase implements CanColor {\n    constructor(elementRef: ElementRef, @Attribute('mc-icon') iconName: string) {\n        super(elementRef);\n\n        elementRef.nativeElement.classList.add(iconName);\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n","import { NgModule } from '@angular/core';\n\nimport { McPseudoCheckbox } from './pseudo-checkbox/pseudo-checkbox';\n\n\n@NgModule({\n    exports: [McPseudoCheckbox],\n    declarations: [McPseudoCheckbox]\n})\nexport class McPseudoCheckboxModule {}\n\n\nexport * from './pseudo-checkbox/pseudo-checkbox';\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\n\nexport type McPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mc-primary .mc-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mc-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n@Component({\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'mc-pseudo-checkbox',\n    styleUrls: ['pseudo-checkbox.css'],\n    template: '',\n    host: {\n        class: 'mc-pseudo-checkbox',\n        '[class.mc-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n        '[class.mc-pseudo-checkbox-checked]': 'state === \"checked\"',\n        '[class.mc-pseudo-checkbox-disabled]': 'disabled'\n    }\n})\nexport class McPseudoCheckbox {\n    // Display state of the checkbox.\n    @Input() state: McPseudoCheckboxState = 'unchecked';\n\n    // Whether the checkbox is disabled.\n    @Input() disabled: boolean = false;\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroupDirective, NgForm, FormControl } from '@angular/forms';\n\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n@Injectable()\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\n\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n@Injectable({ providedIn: 'root' })\nexport class ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\n","import { NgModule, Directive, ElementRef, QueryList } from '@angular/core';\n\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(McLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({\n    selector: '[mc-line], [mcLine]',\n    host: { class: 'mc-line' }\n})\nexport class McLine {}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nexport class McLineSetter {\n    constructor(private _lines: QueryList<McLine>, private _element: ElementRef) {\n        this._setLineClass(this._lines.length);\n\n        this._lines.changes.subscribe(() => {\n            this._setLineClass(this._lines.length);\n        });\n    }\n\n    private _setLineClass(count: number): void {\n        this._resetClasses();\n        if (count === 2 || count === 3) {\n            this._setClass(`mc-${count}-line`, true);\n        } else if (count > 3) {\n            this._setClass(`mc-multi-line`, true);\n        }\n    }\n\n    private _resetClasses(): void {\n        this._setClass('mc-2-line', false);\n        this._setClass('mc-3-line', false);\n        this._setClass('mc-multi-line', false);\n    }\n\n    private _setClass(className: string, isAdd: boolean): void {\n        if (isAdd) {\n            this._element.nativeElement.classList.add(className);\n        } else {\n            this._element.nativeElement.classList.remove(className);\n        }\n    }\n}\n\n@NgModule({\n    imports: [],\n    exports: [McLine],\n    declarations: [McLine]\n})\nexport class McLineModule {}\n","import { FormControl, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { ErrorStateMatcher } from '../error/error-options';\nimport { Constructor } from './constructor';\n\n/** @docs-private */\nexport interface CanUpdateErrorState {\n    readonly stateChanges: Subject<void>;\n    errorState: boolean;\n    errorStateMatcher: ErrorStateMatcher;\n\n    updateErrorState();\n}\n\n/** @docs-private */\nexport interface HasErrorState {\n    _parentFormGroup: FormGroupDirective;\n    _parentForm: NgForm;\n    _defaultErrorStateMatcher: ErrorStateMatcher;\n    ngControl: NgControl;\n}\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T)\n    : Constructor<CanUpdateErrorState> & T {\n    return class extends base {\n        /** Whether the component is in an error state. */\n        errorState: boolean = false;\n\n        /**\n         * Stream that emits whenever the state of the input changes such that the wrapping\n         * `MсFormField` needs to run change detection.\n         */\n        readonly stateChanges = new Subject<void>();\n\n        errorStateMatcher: ErrorStateMatcher;\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this._parentFormGroup || this._parentForm;\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control as FormControl : null;\n            const newState = matcher.isErrorState(control, parent);\n\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n","import { Constructor } from './constructor';\nimport { CanDisable } from './disabled';\n\n\nexport interface HasTabIndex {\n    tabIndex: number;\n}\n\n// Mixin to augment a directive with a `tabIndex` property.\nexport function mixinTabIndex<\n        T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0): Constructor<HasTabIndex\n    > & T {\n    return class extends base {\n        private _tabIndex: number = defaultTabIndex;\n\n        get tabIndex(): number {\n            return this.disabled ? -1 : this._tabIndex;\n        }\n\n        set tabIndex(value: number) {\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n    };\n}\n","import { ElementRef } from '@angular/core';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanColor {\n    color: ThemePalette;\n}\n\nexport interface HasElementRef {\n    _elementRef: ElementRef;\n}\n\nexport enum ThemePalette {\n    Primary = 'primary',\n    Second = 'second',\n    Warn = 'warn',\n    Default = 'second'\n}\n\n/** Mixin to augment a directive with a `color` property. */\nexport function mixinColor<T extends Constructor<HasElementRef>>(base: T, defaultColor: ThemePalette = ThemePalette.Default): Constructor<CanColor> & T {\n    return class extends base {\n        private _color: ThemePalette;\n\n        get color(): ThemePalette {\n            return this._color;\n        }\n\n        set color(value: ThemePalette) {\n            const colorPalette = value || defaultColor;\n\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mc-${this._color}`);\n                }\n\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mc-${colorPalette}`);\n                }\n\n                this._color = colorPalette;\n            }\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n\n            // Set the default color that can be specified from the mixin.\n            this.color = defaultColor;\n        }\n    };\n}\n\n","import { toBoolean } from '../utils/index';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanDisable {\n    disabled: boolean;\n}\n\n// Mixin to augment a directive with a `disabled` property.\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): Constructor<CanDisable> & T {\n    return class extends base {\n        private _disabled: boolean = false;\n\n        get disabled() {\n            return this._disabled;\n        }\n\n        set disabled(value: any) {\n            this._disabled = toBoolean(value);\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n    };\n}\n","import { NgModule, InjectionToken, Optional, Inject, isDevMode } from '@angular/core';\nimport { BidiModule } from '@ptsecurity/cdk/bidi';\n\n\n// Injection token that configures whether the Mosaic sanity checks are enabled.\nexport const MC_SANITY_CHECKS = new InjectionToken<boolean>('mc-sanity-checks', {\n    providedIn: 'root',\n    factory: MC_SANITY_CHECKS_FACTORY\n});\n\nexport function MC_SANITY_CHECKS_FACTORY(): boolean {\n    return true;\n}\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Mosaic\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\n@NgModule({\n    imports: [ BidiModule ],\n    exports: [ BidiModule ]\n})\nexport class McCommonModule {\n    // Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n    private _hasDoneGlobalChecks = false;\n\n    // Reference to the global `document` object.\n    private _document = typeof document === 'object' && document ? document : null;\n\n    // Reference to the global 'window' object.\n    private _window = typeof window === 'object' && window ? window : null;\n\n    constructor(@Optional() @Inject(MC_SANITY_CHECKS) private _sanityChecksEnabled: boolean) {\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n\n    // Whether any sanity checks are enabled\n    private _areChecksEnabled(): boolean {\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    }\n\n    // Whether the code is running in tests.\n    private _isTestEnv() {\n        return this._window && (this._window['__karma__'] || this._window['jasmine']);\n    }\n\n    private _checkDoctypeIsDefined(): void {\n        if (this._document && !this._document.doctype) {\n            console.warn(\n                'Current document does not have a doctype. This may cause ' +\n                'some Mosaic components not to behave as expected.'\n            );\n        }\n    }\n\n    private _checkThemeIsPresent(): void {\n        if (this._document && typeof getComputedStyle === 'function') {\n            const testElement = this._document.createElement('div');\n\n            testElement.classList.add('mc-theme-loaded-marker');\n            this._document.body.appendChild(testElement);\n\n            const computedStyle = getComputedStyle(testElement);\n\n            // In some situations, the computed style of the test element can be null. For example in\n            // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n            if (computedStyle && computedStyle.display !== 'none') {\n                console.warn(\n                    'Could not find Mosaic core theme. Most Mosaic ' +\n                    'components may not work as expected. For more info refer ' +\n                    'to the theming guide: link there'\n                );\n            }\n\n            this._document.body.removeChild(testElement);\n        }\n    }\n}\n","\nexport function isBoolean(val: any): val is boolean { return typeof val === 'boolean'; }\n\nexport function toBoolean(value: any): boolean {\n    return value != null && `${value}` !== 'false';\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n"],"names":["Version","DataSource","merge","map","BehaviorSubject","tslib_1.__extends","take","CommonModule","CdkTreeModule","NgModule","tslib_1.__decorate","ChangeDetectorRef","IterableDiffers","tslib_1.__metadata","ElementRef","tslib_1.__param","Attribute","CdkTree","ChangeDetectionStrategy","ViewEncapsulation","Component","Output","Input","QueryList","ContentChildren","forwardRef","CdkTreeNodeOutlet","ViewChild","FocusKeyManager","PAGE_DOWN","PAGE_UP","END","HOME","ENTER","SPACE","RIGHT_ARROW","LEFT_ARROW","SelectionModel","EventEmitter","CdkTreeNode","Inject","Directive","CdkTreeNodePadding","CdkTreeNodeDef","A11yModule","UniqueSelectionDispatcher","Optional","nextUniqueId","NG_VALUE_ACCESSOR","PlatformModule","MIN_PERCENT","MAX_PERCENT","ThemePalette","idIterator","debounceTime","fromEvent","HostBinding","Platform","FocusMonitor","TemplateRef","ContentChild","Subscription","FormsModule","FormGroupDirective","NgForm","NgControl","Self","getSupportedInputTypes","coerceBooleanProperty","Subject","InjectionToken","ESCAPE","EMPTY","startWith","CheckboxRequiredValidator","NG_VALIDATORS","TransitionCheckState","platform","Injectable","BidiModule","isDevMode"],"mappings":"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"}