{"version":3,"file":"mosaic.umd.js","sources":["../../src/lib/version.ts","../../src/lib/tooltip/tooltip.module.ts","../../src/lib/tooltip/tooltip.component.ts","../../src/lib/toggle/toggle.module.ts","../../src/lib/toggle/toggle.component.ts","../../src/lib/splitter/splitter.module.ts","../../src/lib/splitter/splitter.component.ts","../../src/lib/sidepanel/sidepanel.module.ts","../../src/lib/sidepanel/sidepanel-directives.ts","../../src/lib/sidepanel/sidepanel.service.ts","../../src/lib/sidepanel/sidepanel-ref.ts","../../src/lib/sidepanel/sidepanel-container.component.ts","../../src/lib/sidepanel/sidepanel-animations.ts","../../src/lib/sidepanel/sidepanel-config.ts","../../src/lib/timepicker/timepicker.module.ts","../../src/lib/timepicker/timepicker.ts","../../src/lib/timepicker/timepicker.constants.ts","../../src/lib/textarea/textarea.module.ts","../../src/lib/textarea/textarea.component.ts","../../src/lib/tree-select/tree-select.module.ts","../../src/lib/tree-select/tree-select.component.ts","../../src/lib/select/select.module.ts","../../src/lib/select/select.component.ts","../../src/lib/tags/tag.module.ts","../../src/lib/tags/tag-input.ts","../../src/lib/tags/tag-list.component.ts","../../src/lib/tags/tag.component.ts","../../src/lib/tags/tag-default-options.ts","../../src/lib/tabs/tabs.module.ts","../../src/lib/tabs/tab-nav-bar/tab-nav-bar.ts","../../src/lib/tabs/tab-group.ts","../../src/lib/tabs/tab-header.ts","../../src/lib/tabs/tab-label-wrapper.ts","../../src/lib/tabs/tab-body.ts","../../src/lib/tabs/tabs-animations.ts","../../src/lib/tabs/tab.ts","../../src/lib/tabs/tab-label.ts","../../src/lib/tabs/tab-content.ts","../../src/lib/tree/data-source/nested-data-source.ts","../../src/lib/tree/data-source/flat-data-source.ts","../../src/lib/tree/tree.module.ts","../../src/lib/tree/tree-selection.ts","../../src/lib/tree/tree-option.ts","../../src/lib/tree/toggle.ts","../../src/lib/tree/padding.ts","../../src/lib/tree/node.ts","../../src/lib/radio/radio.module.ts","../../src/lib/radio/radio.component.ts","../../src/lib/progress-spinner/progress-spinner.module.ts","../../src/lib/progress-spinner/progress-spinner.component.ts","../../src/lib/progress-bar/progress-bar.module.ts","../../src/lib/progress-bar/progress-bar.component.ts","../../src/lib/navbar/navbar.module.ts","../../src/lib/navbar/navbar.component.ts","../../src/lib/modal/modal.module.ts","../../src/lib/modal/modal.service.ts","../../src/lib/modal/css-unit.pipe.ts","../../src/lib/modal/modal.component.ts","../../src/lib/modal/modal-util.ts","../../src/lib/modal/modal-ref.class.ts","../../src/lib/modal/modal-control.service.ts","../../src/lib/link/link.module.ts","../../src/lib/link/link.component.ts","../../src/lib/list/list.module.ts","../../src/lib/list/list.component.ts","../../src/lib/list/list-selection.component.ts","../../src/lib/layout/layout.module.ts","../../src/lib/layout/sidebar.component.ts","../../src/lib/layout/layout.component.ts","../../src/lib/layout/header.component.ts","../../src/lib/layout/footer.component.ts","../../src/lib/layout/content.component.ts","../../src/lib/dropdown/dropdown.module.ts","../../src/lib/dropdown/dropdown-trigger.ts","../../src/lib/dropdown/dropdown.component.ts","../../src/lib/dropdown/dropdown-animations.ts","../../src/lib/dropdown/dropdown-errors.ts","../../src/lib/dropdown/dropdown-item.ts","../../src/lib/dropdown/dropdown-panel.ts","../../src/lib/dropdown/dropdown-content.ts","../../src/lib/divider/divider.module.ts","../../src/lib/divider/divider.component.ts","../../src/lib/datepicker/datepicker-module.ts","../../src/lib/datepicker/datepicker-toggle.ts","../../src/lib/datepicker/datepicker-input.ts","../../src/lib/datepicker/datepicker.ts","../../src/lib/datepicker/datepicker-animations.ts","../../src/lib/datepicker/calendar.ts","../../src/lib/datepicker/year-view.ts","../../src/lib/datepicker/multi-year-view.ts","../../src/lib/datepicker/month-view.ts","../../src/lib/datepicker/calendar-body.ts","../../src/lib/datepicker/datepicker-intl.ts","../../src/lib/datepicker/datepicker-errors.ts","../../src/lib/input/input.module.ts","../../src/lib/input/input-number-validators.ts","../../src/lib/input/input.ts","../../src/lib/input/stepperUtils.ts","../../src/lib/input/input-value-accessor.ts","../../src/lib/input/input-errors.ts","../../src/lib/checkbox/checkbox-module.ts","../../src/lib/checkbox/checkbox-required-validator.ts","../../src/lib/checkbox/checkbox.ts","../../src/lib/checkbox/checkbox-config.ts","../../src/lib/card/card.module.ts","../../src/lib/card/card.component.ts","../../src/lib/button-toggle/button-toggle.module.ts","../../src/lib/button-toggle/button-toggle.component.ts","../../src/lib/button/button.module.ts","../../src/lib/button/button.component.ts","../../src/lib/autocomplete/autocomplete.module.ts","../../src/lib/autocomplete/autocomplete-trigger.directive.ts","../../src/lib/autocomplete/autocomplete-origin.directive.ts","../../src/lib/autocomplete/autocomplete.component.ts","../../src/lib/form-field/form-field.module.ts","../../src/lib/form-field/form-field.ts","../../src/lib/form-field/suffix.ts","../../src/lib/form-field/stepper.ts","../../src/lib/form-field/prefix.ts","../../src/lib/form-field/hint.ts","../../src/lib/form-field/form-field-number-control.ts","../../src/lib/form-field/form-field-errors.ts","../../src/lib/form-field/form-field-control.ts","../../src/lib/form-field/cleaner.ts","../../src/lib/icon/icon.module.ts","../../src/lib/icon/icon.component.ts","../../src/lib/core/select/animations.ts","../../src/lib/core/select/constants.ts","../../src/lib/core/select/errors.ts","../../src/lib/core/select/events.ts","../../src/lib/core/overlay/overlay-position-map.ts","../../src/lib/core/animation/animation.ts","../../src/lib/core/animation/fade-animations.ts","../../src/lib/core/label/label-options.ts","../../src/lib/core/option/index.ts","../../src/lib/core/option/option.ts","../../src/lib/core/option/optgroup.ts","../../src/lib/core/services/measure-scrollbar.service.ts","../../src/lib/core/selection/index.ts","../../src/lib/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../src/lib/core/error/error-options.ts","../../src/lib/core/line/line.ts","../../src/lib/core/common-behaviors/error-state.ts","../../src/lib/core/common-behaviors/tabindex.ts","../../src/lib/core/common-behaviors/color.ts","../../src/lib/core/common-behaviors/disabled.ts","../../src/lib/core/common-behaviors/common-module.ts","../../src/lib/core/utils/utils.ts","../../node_modules/tslib/tslib.es6.js"],"sourcesContent":["import { Version } from '@angular/core';\n\n\nexport const VERSION = new Version('1.0.0-beta.5-b05d86e');\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport {\n    McTooltipComponent,\n    McTooltip,\n    MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER\n} from './tooltip.component';\n\n\n@NgModule({\n    declarations: [McTooltipComponent, McTooltip],\n    exports: [McTooltipComponent, McTooltip],\n    imports: [CommonModule, OverlayModule],\n    providers: [MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n    entryComponents: [McTooltipComponent]\n})\nexport class McToolTipModule {\n}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    TemplateRef,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport {\n    ConnectedOverlayPositionChange,\n    ConnectionPositionPair,\n    Overlay,\n    OverlayRef,\n    ScrollDispatcher,\n    IScrollStrategy,\n    FlexibleConnectedPositionStrategy,\n    IOverlayConnectionPosition,\n    IOriginConnectionPosition,\n    HorizontalConnectionPos,\n    VerticalConnectionPos\n} from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\nimport {\n    fadeAnimation,\n    DEFAULT_4_POSITIONS,\n    POSITION_MAP\n} from '@ptsecurity/mosaic/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\n\n@Component({\n    selector: 'mc-tooltip-component',\n    inputs: [\n        'mcMouseEnterDelay',\n        'mcMouseLeaveDelay',\n        'mcTitle',\n        'mcVisible',\n        'mcTrigger',\n        'mcPlacement'\n    ],\n    outputs: ['mcVisibleChange'],\n    animations: [ fadeAnimation ],\n    templateUrl: './tooltip.component.html',\n    preserveWhitespaces: false,\n    styleUrls: ['./tooltip.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '(body:click)': 'this.handleBodyInteraction()'\n    }\n})\nexport class McTooltipComponent {\n    prefix = 'mc-tooltip_placement';\n    positions: ConnectionPositionPair[] = [ ...DEFAULT_4_POSITIONS ];\n    classMap = {};\n    isTitleString: boolean;\n    showTid: number;\n    hideTid: number;\n    availablePositions: any;\n    $visible: Observable<boolean>;\n\n    @Output() mcVisibleChange: EventEmitter<boolean> = new EventEmitter();\n\n    @Input() mcMouseEnterDelay = 400;\n\n    @Input() mcMouseLeaveDelay = 0;\n\n    @Input()\n    get mcTitle(): string | TemplateRef<void> {\n        return this._mcTitle;\n    }\n    set mcTitle(value: string | TemplateRef<void>) {\n        this.isTitleString = !(value instanceof TemplateRef);\n\n        if (this.isTitleString) {\n            this._mcTitle = value;\n        }\n    }\n    private _mcTitle: string | TemplateRef<void>;\n\n    @Input()\n    get mcTrigger(): string {\n        return this._mcTrigger;\n    }\n    set mcTrigger(value: string) {\n        this._mcTrigger = value;\n    }\n    private _mcTrigger: string = 'hover';\n\n    @Input()\n    get mcPlacement(): string {\n        return this._mcPlacement;\n    }\n    set mcPlacement(value: string) {\n        if (value !== this._mcPlacement) {\n            this._mcPlacement = value;\n            this.positions.unshift(POSITION_MAP[ this.mcPlacement ]);\n        } else if (!value) {\n            this._mcPlacement = 'top';\n        }\n    }\n    private _mcPlacement: string = 'top';\n\n    @Input()\n    get mcVisible(): boolean {\n        return this._mcVisible.value;\n    }\n    set mcVisible(value: boolean) {\n        const visible = coerceBooleanProperty(value);\n\n        if (this._mcVisible.value !== visible) {\n            this._mcVisible.next(visible);\n            this.mcVisibleChange.emit(visible);\n        }\n    }\n    private _mcVisible: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n    /** Subject for notifying that the tooltip has been hidden from the view */\n    private readonly onHideSubject: Subject<any> = new Subject();\n    private closeOnInteraction: boolean = false;\n\n    constructor(public cdr: ChangeDetectorRef) {\n        this.availablePositions = POSITION_MAP;\n        this.$visible = this._mcVisible.asObservable();\n    }\n\n    show(): void {\n        if (this.hideTid) {\n            clearTimeout(this.hideTid);\n        }\n\n        if (!this.isContentEmpty()) {\n            if (this.mcTrigger !== 'manual') {\n                this.closeOnInteraction = true;\n            }\n            this.showTid = setTimeout(() => {\n                this.mcVisible = true;\n                this.mcVisibleChange.emit(true);\n\n                // Mark for check so if any parent component has set the\n                // ChangeDetectionStrategy to OnPush it will be checked anyways\n                this.markForCheck();\n            }, this.mcMouseEnterDelay);\n        }\n    }\n\n    hide(): void {\n        if (this.showTid) {\n            clearTimeout(this.showTid);\n        }\n\n        this.hideTid = setTimeout(() => {\n            this.mcVisible = false;\n            this.mcVisibleChange.emit(false);\n            this.onHideSubject.next();\n\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this.markForCheck();\n        }, this.mcMouseLeaveDelay);\n    }\n\n    setClassMap(): void {\n        this.classMap = `${this.prefix}-${this.mcPlacement}`;\n    }\n\n    isContentEmpty(): boolean {\n        return this.isTitleString ? (this.mcTitle === '' || !this.mcTitle) : false;\n    }\n\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden(): Observable<void> {\n        return this.onHideSubject.asObservable();\n    }\n\n    markForCheck(): void {\n        this.cdr.markForCheck();\n    }\n\n    handleBodyInteraction(): void {\n        if (this.closeOnInteraction) {\n            this.hide();\n        }\n    }\n}\n\nexport const MC_TOOLTIP_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-tooltip-scroll-strategy');\n\n/** @docs-private */\nexport function mcTooltipScrollStrategyFactory(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition({scrollThrottle: 20});\n}\n\n/** @docs-private */\nexport const MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: mcTooltipScrollStrategyFactory\n};\n\n/** Creates an error to be thrown if the user supplied an invalid tooltip position. */\nexport function getMcTooltipInvalidPositionError(position: string) {\n    return Error(`McTooltip position \"${position}\" is invalid.`);\n}\n\nconst VIEWPORT_MARGIN: number = 8;\n\n@Directive({\n    selector: '[mcTooltip], [attribute^=\"mcTooltip\"]',\n    exportAs: 'mcTooltip',\n    host: {\n        '(keydown)': 'handleKeydown($event)',\n        '(touchend)': 'handleTouchend()'\n    }\n})\nexport class McTooltip implements OnInit, OnDestroy {\n    isTooltipOpen: boolean = false;\n    isDynamicTooltip = false;\n    parentDisabled: boolean = false;\n    overlayRef: OverlayRef | null;\n    portal: ComponentPortal<McTooltipComponent>;\n    availablePositions: any;\n    tooltip: McTooltipComponent | null;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n    private $unsubscribe = new Subject<void>();\n\n    @Input('mcTooltip')\n    get mcTitle(): string {\n        return this._mcTitle;\n    }\n    set mcTitle(title: string) {\n        this._mcTitle = title;\n        this.updateCompValue('mcTitle', title);\n    }\n    private _mcTitle: string;\n\n    @Input('mcTitle')\n    set setTitle(title: string) {\n        this.mcTitle = title;\n    }\n\n    @Input('mcTooltipDisabled')\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    private _disabled: boolean = false;\n\n    @Input('mcMouseEnterDelay')\n    get mcMouseEnterDelay(): number {\n        return this._mcMouseEnterDelay;\n    }\n    set mcMouseEnterDelay(value: number) {\n        this._mcMouseEnterDelay = value;\n        this.updateCompValue('mcMouseEnterDelay', value);\n    }\n    private _mcMouseEnterDelay: number;\n\n    @Input('mcMouseLeaveDelay')\n    get mcMouseLeaveDelay(): number {\n        return this._mcMouseLeaveDelay;\n    }\n    set mcMouseLeaveDelay(value: number) {\n        this._mcMouseLeaveDelay = value;\n        this.updateCompValue('mcMouseLeaveDelay', value);\n    }\n    private _mcMouseLeaveDelay: number;\n\n    @Input('mcTrigger')\n    get mcTrigger(): string {\n        return this._mcTrigger;\n    }\n    set mcTrigger(value: string) {\n        if (value) {\n            this._mcTrigger = value;\n            this.updateCompValue('mcTrigger', value);\n        } else {\n            this._mcTrigger = 'hover';\n        }\n    }\n    private _mcTrigger: string = 'hover';\n\n    @Input('mcPlacement')\n    get mcPlacement(): string {\n        return this._mcPlacement;\n    }\n    set mcPlacement(value: string) {\n        if (value) {\n            this._mcPlacement = value;\n            this.updateCompValue('mcPlacement', value);\n        } else {\n            this._mcPlacement = 'top';\n        }\n    }\n    private _mcPlacement: string = 'top';\n\n    @Input('mcTooltipClass')\n    get mcTooltipClass() { return this._mcTooltipClass; }\n    set mсTooltipClass(value: string | string[] | Set<string> | {[key: string]: any}) {\n        this._mcTooltipClass = value;\n\n        if (this.tooltip) {\n            this.tooltip.setClassMap();\n        }\n    }\n    private _mcTooltipClass: string | string[] | Set<string> | {[key: string]: any};\n\n    @Input('mcVisible')\n    get mcVisible(): boolean {\n        return this._mcVisible;\n    }\n    set mcVisible(externalValue: boolean) {\n        const value = coerceBooleanProperty(externalValue);\n        this._mcVisible = value;\n        this.updateCompValue('mcVisible', value);\n\n        if (value) {\n            this.show();\n        }\n    }\n    private _mcVisible: boolean;\n\n    @HostBinding('class.mc-tooltip-open')\n    get isOpen(): boolean {\n        return this.isTooltipOpen;\n    }\n\n    @HostBinding('class.disabled')\n    get isParentDisabled(): boolean {\n        return this.parentDisabled;\n    }\n\n    private manualListeners = new Map<string, EventListenerOrEventListenerObject>();\n    private readonly destroyed = new Subject<void>();\n\n    constructor(\n        private overlay: Overlay,\n        private elementRef: ElementRef,\n        private ngZone: NgZone,\n        private scrollDispatcher: ScrollDispatcher,\n        private hostView: ViewContainerRef,\n        @Inject(MC_TOOLTIP_SCROLL_STRATEGY) private scrollStrategy,\n        @Optional() private direction: Directionality) {\n            this.availablePositions = POSITION_MAP;\n        }\n\n    /** Create the overlay config and position strategy */\n    createOverlay(): OverlayRef {\n        if (this.overlayRef) {\n            return this.overlayRef;\n        }\n\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this.overlay.position()\n            .flexibleConnectedTo(this.elementRef)\n            .withTransformOriginOn('.mc-tooltip')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(VIEWPORT_MARGIN)\n            .withPositions([ ...DEFAULT_4_POSITIONS ]);\n\n        const scrollableAncestors = this.scrollDispatcher\n            .getAncestorScrollContainers(this.elementRef);\n\n        strategy.withScrollableContainers(scrollableAncestors);\n\n        strategy.positionChanges.pipe(takeUntil(this.destroyed)).subscribe((change) => {\n            if (this.tooltip) {\n                this.onPositionChange(change);\n                if (change.scrollableViewProperties.isOverlayClipped && this.tooltip.mcVisible) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this.ngZone.run(() => this.hide());\n                }\n            }\n        });\n\n        this.overlayRef = this.overlay.create({\n            direction: this.direction,\n            positionStrategy: strategy,\n            panelClass: 'mc-tooltip-panel',\n            scrollStrategy: this.scrollStrategy()\n        });\n\n        this.updatePosition();\n\n        this.overlayRef.detachments()\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(() => this.detach());\n\n        return this.overlayRef;\n    }\n\n    detach() {\n        if (this.overlayRef && this.overlayRef.hasAttached()) {\n            this.overlayRef.detach();\n        }\n\n        this.tooltip = null;\n    }\n\n    onPositionChange($event: ConnectedOverlayPositionChange): void {\n        let updatedPlacement = this.mcPlacement;\n        Object.keys(this.availablePositions).some((key) => {\n            if ($event.connectionPair.originX === this.availablePositions[key].originX &&\n                $event.connectionPair.originY === this.availablePositions[key].originY &&\n                $event.connectionPair.overlayX === this.availablePositions[key].overlayX &&\n                $event.connectionPair.overlayY === this.availablePositions[key].overlayY) {\n                updatedPlacement = key;\n\n                return true;\n            }\n\n            return false;\n        });\n        this.updateCompValue('mcPlacement', updatedPlacement);\n\n        if (this.tooltip) {\n            this.tooltip.setClassMap();\n            this.tooltip.markForCheck();\n        }\n\n        this.handlePositioningUpdate();\n    }\n\n    handlePositioningUpdate() {\n        if (!this.overlayRef) {\n            this.overlayRef = this.createOverlay();\n        }\n        if (this.mcPlacement === 'right' || this.mcPlacement === 'left') {\n            const pos =\n                (this.overlayRef.overlayElement.clientHeight -\n                    this.hostView.element.nativeElement.clientHeight) / 2; // tslint:disable-line\n            const currentContainer = this.overlayRef.overlayElement.style.top || '0px';\n            this.overlayRef.overlayElement.style.top =\n                `${parseInt(currentContainer.split('px')[0], 10) + pos - 1}px`;\n            // TODO: обновлять положение стрелки\\указателя\\\"дятла\"\n        }\n    }\n\n    // tslint:disable-next-line:no-any\n    updateCompValue(key: string, value: any): void {\n        if (this.isDynamicTooltip && value) {\n            if (this.tooltip) {\n                this.tooltip[key] = value;\n            }\n        }\n    }\n\n    ngOnInit(): void {\n        this.initElementRefListeners();\n    }\n\n    ngOnDestroy(): void {\n        if (this.overlayRef) {\n            this.overlayRef.dispose();\n        }\n        this.manualListeners.forEach((listener, event) =>\n            this.elementRef.nativeElement.removeEventListener(event, listener));\n        this.manualListeners.clear();\n\n        this.$unsubscribe.next();\n        this.$unsubscribe.complete();\n    }\n\n    handleKeydown(e: KeyboardEvent) {\n        if (this.isTooltipOpen && e.keyCode === ESCAPE) { // tslint:disable-line\n            this.hide();\n        }\n    }\n\n    handleTouchend() {\n        this.hide();\n    }\n\n    initElementRefListeners() {\n        if (this.mcTrigger === 'hover') {\n\n            this.manualListeners\n                .set('mouseenter', () => this.show())\n                .set('mouseleave', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n\n        if (this.mcTrigger === 'focus') {\n\n            this.manualListeners\n                .set('focus', () => this.show())\n                .set('blur', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n    }\n\n    show(): void {\n        if (!this.disabled) {\n            if (!this.tooltip) {\n                const overlayRef = this.createOverlay();\n                this.detach();\n\n                this.portal = this.portal || new ComponentPortal(McTooltipComponent, this.hostView);\n\n                this.tooltip = overlayRef.attach(this.portal).instance;\n                this.tooltip.afterHidden()\n                    .pipe(takeUntil(this.destroyed))\n                    .subscribe(() => this.detach());\n                this.isDynamicTooltip = true;\n                const properties = [\n                    'mcTitle',\n                    'mcPlacement',\n                    'mcTrigger',\n                    'mcTooltipDisabled',\n                    'mcMouseEnterDelay',\n                    'mcMouseLeaveDelay',\n                    'mсTooltipClass',\n                    'mcVisible'\n                ];\n                properties.forEach((property) => this.updateCompValue(property, this[ property ]));\n                this.tooltip.mcVisibleChange.pipe(takeUntil(this.$unsubscribe), distinctUntilChanged())\n                    .subscribe((data) => {\n                        this.mcVisible = data;\n                        this.mcVisibleChange.emit(data);\n                        this.isTooltipOpen = data;\n                    });\n            }\n            this.updatePosition();\n            this.tooltip.show();\n        }\n    }\n\n    hide(): void {\n        if (this.tooltip) {\n            this.tooltip.hide();\n        }\n    }\n\n    /** Updates the position of the current tooltip. */\n    updatePosition() {\n        if (!this.overlayRef) {\n            this.overlayRef = this.createOverlay();\n        }\n        const position =\n            this.overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\n        const origin = this.getOrigin();\n        const overlay = this.getOverlayPosition();\n\n        position.withPositions([\n            {...origin.main, ...overlay.main},\n            {...origin.fallback, ...overlay.fallback}\n        ]);\n    }\n\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    getOrigin(): {main: IOriginConnectionPosition; fallback: IOriginConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this.direction || this.direction.value === 'ltr';\n        let originPosition: IOriginConnectionPosition;\n\n        if (position === 'top' || position === 'bottom') {\n            originPosition = {originX: 'center', originY: position === 'top' ? 'top' : 'bottom'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            originPosition = {originX: 'start', originY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            originPosition = {originX: 'end', originY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this.invertPosition(originPosition.originX, originPosition.originY);\n\n        return {\n            main: originPosition,\n            fallback: {originX: x, originY: y}\n        };\n    }\n\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    getOverlayPosition(): {main: IOverlayConnectionPosition; fallback: IOverlayConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this.direction || this.direction.value === 'ltr';\n        let overlayPosition: IOverlayConnectionPosition;\n\n        if (position === 'top') {\n            overlayPosition = {overlayX: 'center', overlayY: 'bottom'};\n        } else if (position === 'bottom') {\n            overlayPosition = {overlayX: 'center', overlayY: 'top'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            overlayPosition = {overlayX: 'end', overlayY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            overlayPosition = {overlayX: 'start', overlayY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this.invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n\n        return {\n            main: overlayPosition,\n            fallback: {overlayX: x, overlayY: y}\n        };\n    }\n\n    /** Inverts an overlay position. */\n    private invertPosition(x: HorizontalConnectionPos, y: VerticalConnectionPos) {\n        let newX: HorizontalConnectionPos = x;\n        let newY: VerticalConnectionPos = y;\n        if (this.mcPlacement === 'top' || this.mcPlacement === 'bottom') {\n            if (y === 'top') {\n                newY = 'bottom';\n            } else if (y === 'bottom') {\n                newY = 'top';\n            }\n        } else {\n            if (x === 'end') {\n                newX = 'start';\n            } else if (x === 'start') {\n                newX = 'end';\n            }\n        }\n\n        return {x: newX, y: newY};\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McToggleComponent } from './toggle.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule],\n    exports: [McToggleComponent],\n    declarations: [McToggleComponent]\n})\nexport class McToggleModule {\n}\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport {\n    Attribute,\n    ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ElementRef, EventEmitter, forwardRef,\n    Input, Output, ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    ThemePalette,\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\nlet nextUniqueId = 0;\n\ntype ToggleLabelPositionType = 'left' | 'right';\n\nexport class McToggleBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McToggleMixinBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McToggleBase = mixinTabIndex(mixinColor(mixinDisabled(McToggleBase), ThemePalette.Primary));\n\nexport class McToggleChange {\n    source: McToggleComponent;\n    checked: boolean;\n}\n\n@Component({\n    selector: 'mc-toggle',\n    exportAs: 'mcToggle',\n    templateUrl: './toggle.component.html',\n    styleUrls: ['./toggle.css'],\n    providers: [\n        {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => McToggleComponent), multi: true}\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color', 'tabIndex'],\n    host: {\n        class: 'mc-toggle',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-toggle_off]': '!checked'\n    },\n    animations: [\n        trigger('switch', [\n            state('true' , style({ left: '50%' })),\n            state('false', style({ left: '1px' })),\n            transition('true <=> false', animate('150ms'))\n        ])\n    ]\n})\nexport class McToggleComponent extends _McToggleMixinBase\n    implements ControlValueAccessor, CanColor, CanDisable, HasTabIndex {\n\n    @ViewChild('input') _inputElement: ElementRef;\n\n    @Input() labelPosition: ToggleLabelPositionType = 'right';\n\n    @Input('aria-label') ariaLabel: string = '';\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-toggle-${++nextUniqueId}`;\n\n    // tslint:disable:member-ordering\n    @Input() id: string = this._uniqueId;\n\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    @Input() name: string | null = null;\n\n    @Input() value: string;\n\n    private _disabled: boolean = false;\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this._disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    get checked() {\n        return this._checked;\n    }\n\n    @Input()\n    set checked(value: boolean) {\n        if (value !== this._checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    @Output() readonly change: EventEmitter<McToggleChange> =\n        new EventEmitter<McToggleChange>();\n\n    constructor(public _elementRef: ElementRef,\n                private _focusMonitor: FocusMonitor,\n                private _changeDetectorRef: ChangeDetectorRef,\n                @Attribute('tabindex') tabIndex: string\n    ) {\n        super(_elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _getAriaChecked(): boolean {\n        return this.checked;\n    }\n\n    _onInteractionEvent(event: Event) {\n        event.stopPropagation();\n    }\n\n    _onLabelTextChange() {\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onInputClick(event: MouseEvent) {\n        event.stopPropagation();\n        this._updateModelValue();\n        this._emitChangeEvent();\n    }\n\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    registerOnChange(fn: any) {\n        this._onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this._onTouchedCallback = fn;\n    }\n\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    // tslint:disable-next-line:no-empty\n    private _onTouchedCallback = () => {};\n\n    // tslint:disable-next-line:no-empty\n    private _onChangeCallback = (_: any) => {};\n\n    private _updateModelValue() {\n        this._checked = !this.checked;\n        this._onChangeCallback(this.checked);\n        this._onTouchedCallback();\n    }\n\n    private _emitChangeEvent() {\n        const event = new McToggleChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._onChangeCallback(this.checked);\n        this.change.emit(event);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McGutterDirective, McSplitterAreaDirective, McSplitterComponent } from './splitter.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McIconModule\n    ],\n    exports: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ],\n    declarations: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ]\n})\nexport class McSplitterModule {\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    NgZone, OnDestroy,\n    OnInit,\n    Renderer2,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { coerceBooleanProperty, coerceCssPixelValue, coerceNumberProperty } from '@ptsecurity/cdk/coercion';\n\n\ninterface IArea {\n    area: McSplitterAreaDirective;\n    index: number;\n    order: number;\n    initialSize: number;\n}\n\ninterface IPoint {\n    x: number;\n    y: number;\n}\n\n\nconst enum AttributeProperty {\n    Disabled = 'disabled'\n}\n\nconst enum Cursor {\n    Default = 'default',\n    ResizeColumn = 'col-resize',\n    ResizeRow = 'row-resize'\n}\n\nconst enum StyleProperty {\n    Cursor = 'cursor',\n    Flex = 'flex',\n    FlexBasis = 'flex-basis',\n    FlexDirection = 'flex-direction',\n    Height = 'height',\n    MaxWidth = 'max-width',\n    MinHeight = 'min-height',\n    MinWidth = 'minWidth',\n    OffsetHeight = 'offsetHeight',\n    OffsetWidth = 'offsetWidth',\n    Order = 'order',\n    Width = 'width'\n}\n\nconst enum State {\n    Disabled = 'disabled',\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\nexport const enum Direction {\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\n@Component({\n    selector: 'mc-splitter',\n    preserveWhitespaces: false,\n    styleUrls: ['splitter.css'],\n    templateUrl: './splitter.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSplitterComponent implements OnInit {\n    readonly areas: IArea[] = [];\n\n    private _direction: Direction;\n    private _disabled: boolean = false;\n    private _gutterSize: number = 6;\n\n    private isDragging: boolean = false;\n\n    private readonly areaPositionDivider: number = 2;\n    private readonly listeners: (() => void)[] = [];\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set gutterSize(gutterSize: number) {\n        const size = coerceNumberProperty(gutterSize);\n        this._gutterSize = size > 0 ? size : this.gutterSize;\n    }\n\n    get gutterSize(): number {\n        return this._gutterSize;\n    }\n\n    constructor(private elementRef: ElementRef,\n                private ngZone: NgZone,\n                private renderer: Renderer2) {}\n\n    addArea(area: McSplitterAreaDirective): void {\n        const index: number = this.areas.length;\n        const order: number = index * this.areaPositionDivider;\n        const size: number = area.getSize();\n\n        area.setOrder(order);\n\n        this.areas.push({\n            area,\n            index,\n            order,\n            initialSize: size\n        });\n    }\n\n    ngOnInit(): void {\n        if (!this.direction) {\n            this.direction = Direction.Horizontal;\n        }\n\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'column' : 'row');\n    }\n\n    onMouseDown(event: MouseEvent, leftAreaIndex: number, rightAreaIndex: number) {\n        if (this.disabled) {\n            return;\n        }\n\n        const leftArea = this.areas[leftAreaIndex];\n        const rightArea = this.areas[rightAreaIndex];\n\n        const startPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        leftArea.initialSize = leftArea.area.getSize();\n        rightArea.initialSize = rightArea.area.getSize();\n\n        this.areas.forEach((item) => {\n            const size = item.area.getSize();\n            item.area.disableFlex();\n            item.area.setSize(size);\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mouseup',\n                    () => this.onMouseUp()\n                )\n            );\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mousemove',\n                    (e: MouseEvent) => this.onMouseMove(e, startPoint, leftArea, rightArea)\n                )\n            );\n        });\n\n        this.isDragging = true;\n    }\n\n    removeArea(area: McSplitterAreaDirective): void {\n        let indexToRemove: number = -1;\n\n        this.areas.some((item, index) => {\n            if (item.area === area) {\n                indexToRemove = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        if (indexToRemove === -1) {\n            return;\n        }\n\n        this.areas.splice(indexToRemove, 1);\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private onMouseMove(event: MouseEvent, startPoint: IPoint, leftArea: IArea, rightArea: IArea) {\n        if (!this.isDragging || this.disabled) {\n            return;\n        }\n\n        const endPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        const offset = this.isVertical()\n            ? startPoint.y - endPoint.y\n            : startPoint.x - endPoint.x;\n\n        const newLeftAreaSize = leftArea.initialSize - offset;\n        const newRightAreaSize = rightArea.initialSize + offset;\n\n        const minLeftAreaSize = leftArea.area.getMinSize();\n        const minRightAreaSize = rightArea.area.getMinSize();\n\n        if (newLeftAreaSize <= minLeftAreaSize || newRightAreaSize <= minRightAreaSize) {\n            const rightAreaOffset = leftArea.initialSize - minLeftAreaSize;\n\n            leftArea.area.setSize(minLeftAreaSize);\n            rightArea.area.setSize(rightArea.initialSize + rightAreaOffset);\n        } else if (newLeftAreaSize <= 0) {\n            leftArea.area.setSize(0);\n            rightArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n        } else if (newRightAreaSize <= 0) {\n            leftArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n            rightArea.area.setSize(0);\n        } else {\n            leftArea.area.setSize(newLeftAreaSize);\n            rightArea.area.setSize(newRightAreaSize);\n        }\n    }\n\n    private onMouseUp() {\n        while (this.listeners.length > 0) {\n            const unsubscribe = this.listeners.pop();\n\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        }\n\n        this.isDragging = false;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-gutter'\n})\nexport class McGutterDirective implements OnInit {\n    private _direction: Direction = Direction.Vertical;\n    private _disabled: boolean = false;\n    private _order: number = 0;\n    private _size: number = 6;\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set order(order: number) {\n        this._order = coerceNumberProperty(order);\n    }\n\n    get order(): number {\n        return this._order;\n    }\n\n    @Input()\n    set size(size: number) {\n        this._size = coerceNumberProperty(size);\n    }\n\n    get size(): number {\n        return this._size;\n    }\n\n    constructor(private renderer: Renderer2,\n                private elementRef: ElementRef) {\n    }\n\n    ngOnInit(): void {\n        this.setStyle(StyleProperty.Cursor, this.getCursor(this.getState()));\n        this.setStyle(StyleProperty.FlexBasis, coerceCssPixelValue(this.size));\n        this.setStyle(this.isVertical() ? StyleProperty.Height : StyleProperty.Width, coerceCssPixelValue(this.size));\n        this.setStyle(StyleProperty.Order, this.order);\n\n        if (!this.isVertical()) {\n            this.setStyle(StyleProperty.Height, '100%');\n        }\n\n        if (this.disabled) {\n            this.setAttr(AttributeProperty.Disabled, 'true');\n        }\n\n        // fix IE issue with gutter icon. flex-direction is requied for flex alignment options\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'row' : 'column');\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private getCursor(state: State): string {\n        switch (state) {\n            case State.Disabled:\n                return Cursor.Default;\n            case State.Vertical:\n                return  Cursor.ResizeRow;\n            case State.Horizontal:\n                return Cursor.ResizeColumn;\n            default:\n                throw Error(`Unknown gutter state for cursor: ${state}`);\n        }\n    }\n\n    private getState(): State {\n        return this.disabled\n            ? State.Disabled\n            : this.direction === Direction.Vertical\n                ? State.Vertical\n                : State.Horizontal;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n\n    private setAttr(attribute: AttributeProperty, value: string) {\n        this.renderer.setAttribute(this.elementRef.nativeElement, attribute, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-splitter-area'\n})\nexport class McSplitterAreaDirective implements OnInit, OnDestroy {\n    constructor(private elementRef: ElementRef,\n                private renderer: Renderer2,\n                private splitter: McSplitterComponent) {}\n\n    disableFlex(): void {\n        this.renderer.removeStyle(this.elementRef.nativeElement, 'flex');\n    }\n\n    ngOnInit(): void {\n        this.splitter.addArea(this);\n\n        this.removeStyle(StyleProperty.MaxWidth);\n        this.setStyle(StyleProperty.Flex, '1');\n\n        if (this.splitter.direction === Direction.Vertical) {\n            this.setStyle(StyleProperty.Width, '100%');\n            this.removeStyle(StyleProperty.Height);\n        } else {\n            this.setStyle(StyleProperty.Height, '100%');\n            this.removeStyle(StyleProperty.Width);\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.splitter.removeArea(this);\n    }\n\n    setOrder(order: number): void {\n        this.setStyle(StyleProperty.Order, order);\n    }\n\n    setSize(size: number): void {\n        const sz = coerceNumberProperty(size);\n        this.setStyle(this.getSizeProperty(), coerceCssPixelValue(sz));\n    }\n\n    getSize(): number {\n        return this.elementRef.nativeElement[this.getOffsetSizeProperty()];\n    }\n\n    getMinSize(): number {\n        const styles = getComputedStyle(this.elementRef.nativeElement);\n\n        return parseFloat(styles[this.getMinSizeProperty()]);\n    }\n\n    private isVertical(): boolean {\n        return this.splitter.direction === Direction.Vertical;\n    }\n\n    private getMinSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.MinHeight\n            : StyleProperty.MinWidth;\n    }\n\n    private getOffsetSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.OffsetHeight\n            : StyleProperty.OffsetWidth;\n    }\n\n    private getSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.Height\n            : StyleProperty.Width;\n    }\n\n    private setStyle(style: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, style, value);\n    }\n\n    private removeStyle(style: StyleProperty) {\n        this.renderer.removeStyle(this.elementRef.nativeElement, style);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { PortalModule } from '@ptsecurity/cdk/portal';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McSidepanelContainerComponent } from './sidepanel-container.component';\nimport {\n    McSidepanelActions,\n    McSidepanelBody,\n    McSidepanelClose,\n    McSidepanelFooter,\n    McSidepanelHeader\n} from './sidepanel-directives';\nimport { McSidepanelService } from './sidepanel.service';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        PortalModule,\n        McCommonModule,\n        McIconModule\n    ],\n    providers: [McSidepanelService],\n    declarations: [\n        McSidepanelContainerComponent,\n        McSidepanelClose,\n        McSidepanelHeader,\n        McSidepanelBody,\n        McSidepanelFooter,\n        McSidepanelActions\n    ],\n    entryComponents: [McSidepanelContainerComponent],\n    exports: [\n        McSidepanelContainerComponent,\n        McSidepanelClose,\n        McSidepanelHeader,\n        McSidepanelBody,\n        McSidepanelFooter,\n        McSidepanelActions\n    ]\n})\nexport class McSidepanelModule {}\n","import { Component, Directive, ElementRef, Input, OnChanges, OnInit, Optional, SimpleChanges } from '@angular/core';\n\nimport { McSidepanelRef } from './sidepanel-ref';\nimport { McSidepanelService } from './sidepanel.service';\n\n\n/**\n * Button that will close the current sidepanel.\n */\n@Directive({\n    selector: 'button[mc-sidepanel-close], button[mcSidepanelClose]',\n    host: {\n        '(click)': 'sidepanelRef.close(sidepanelResult)',\n        class: 'mc-sidepanel-close',\n        type: 'button'\n    }\n})\nexport class McSidepanelClose implements OnInit, OnChanges {\n    @Input('mc-sidepanel-close') sidepanelResult: any;\n\n    @Input('mcSidepanelClose') mcSidepanelClose: any;\n\n    constructor(\n        @Optional() public sidepanelRef: McSidepanelRef,\n        private elementRef: ElementRef<HTMLElement>,\n        private sidepanelService: McSidepanelService\n    ) {}\n\n    ngOnInit() {\n        if (!this.sidepanelRef) {\n            // When this directive is included in a sidepanel via TemplateRef (rather than being\n            // in a Component), the SidepanelRef isn't available via injection because embedded\n            // views cannot be given a custom injector. Instead, we look up the SidepanelRef by\n            // ID.\n            // This must occur in `onInit`, as the ID binding for the sidepanel container won't\n            // be resolved at constructor time. We use setTimeout by same reason.\n            setTimeout(() => {\n                this.sidepanelRef = getClosestSidepanel(this.elementRef, this.sidepanelService.openedSidepanels)!;\n            });\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const proxiedChange = changes.mcSidepanelClose || changes.sidepanelResult;\n\n        if (proxiedChange) {\n            this.sidepanelResult = proxiedChange.currentValue;\n        }\n    }\n}\n\n/**\n * Header of a sidepanel.\n */\n@Component({\n    selector: 'mc-sidepanel-header',\n    template: `\n        <div class=\"mc-sidepanel-title\">\n            <ng-content></ng-content>\n        </div>\n        <button *ngIf=\"closeable\" mc-sidepanel-close>\n            <span class=\"mc-sidepanel-close-x\">\n                <i mc-icon=\"mc-close-L_16\" class=\"mc-icon mc-icon_light\" color=\"second\"></i>\n            </span>\n        </button>\n    `,\n    host: {\n        class: 'mc-sidepanel-header'\n    }\n})\nexport class McSidepanelHeader {\n    @Input() closeable: boolean;\n}\n\n/**\n * Scrollable content container of a sidepanel.\n */\n@Directive({\n    selector: 'mc-sidepanel-body, [mc-sidepanel-body], mcSidepanelBody',\n    host: {\n        class: 'mc-sidepanel-body'\n    }\n})\nexport class McSidepanelBody {}\n\n/**\n * Footer of a sidepanel.\n */\n@Directive({\n    selector: 'mc-sidepanel-footer, [mc-sidepanel-footer], mcSidepanelFooter',\n    host: {\n        class: 'mc-sidepanel-footer'\n    }\n})\nexport class McSidepanelFooter {}\n\n/**\n * Actions block of a sidepanel footer.\n */\n@Directive({\n    selector: 'mc-sidepanel-actions, [mc-sidepanel-actions], mcSidepanelActions',\n    host: {\n        class: 'mc-sidepanel-actions'\n    }\n})\nexport class McSidepanelActions {}\n\n/**\n * Finds the closest McSidepanelRef to an element by looking at the DOM.\n * @param element Element relative to which to look for a sidepanel.\n * @param openSidepanels References to the currently-open sidepanels.\n */\nfunction getClosestSidepanel(element: ElementRef<HTMLElement>, openSidepanels: McSidepanelRef[]) {\n    let parent: HTMLElement | null = element.nativeElement.parentElement;\n\n    while (parent && !parent.classList.contains('mc-sidepanel-container')) {\n        parent = parent.parentElement;\n    }\n\n    return parent ? openSidepanels.find((sidepanel) => sidepanel.id === parent!.id) : null;\n}\n","import {\n    ComponentRef,\n    Inject,\n    Injectable,\n    InjectionToken,\n    Injector, OnDestroy,\n    Optional,\n    SkipSelf,\n    TemplateRef\n} from '@angular/core';\nimport { Overlay, OverlayConfig, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal, IComponentType, PortalInjector, TemplatePortal } from '@ptsecurity/cdk/portal';\n\nimport { MC_SIDEPANEL_DATA, McSidepanelConfig } from './sidepanel-config';\nimport {\n    McSidepanelContainerComponent,\n    MC_SIDEPANEL_WITH_INDENT,\n    MC_SIDEPANEL_WITH_SHADOW\n} from './sidepanel-container.component';\nimport { McSidepanelRef } from './sidepanel-ref';\n\n\n/** Injection token that can be used to specify default sidepanel options. */\nexport const MC_SIDEPANEL_DEFAULT_OPTIONS =\n    new InjectionToken<McSidepanelConfig>('mc-sidepanel-default-options');\n\n@Injectable()\nexport class McSidepanelService implements OnDestroy {\n    private openedSidepanelsAtThisLevel: McSidepanelRef[] = [];\n\n    /** Keeps track of the currently-open sidepanels. */\n    get openedSidepanels(): McSidepanelRef[] {\n        return this.parentSidepanelService ? this.parentSidepanelService.openedSidepanels :\n            this.openedSidepanelsAtThisLevel;\n    }\n\n    constructor(\n        private overlay: Overlay,\n        private injector: Injector,\n        @Optional() @Inject(MC_SIDEPANEL_DEFAULT_OPTIONS) private defaultOptions: McSidepanelConfig,\n        @Optional() @SkipSelf() private parentSidepanelService: McSidepanelService) {\n    }\n\n    ngOnDestroy() {\n        // Only close the sidepanels at this level on destroy\n        // since the parent service may still be active.\n        this.closeSidepanels(this.openedSidepanelsAtThisLevel);\n    }\n\n    open<T, D = any>(componentOrTemplateRef: IComponentType<T> | TemplateRef<T>,\n                     config?: McSidepanelConfig<D>): McSidepanelRef<T> {\n        const fullConfig = {\n            ...(this.defaultOptions || new McSidepanelConfig()),\n            ...config\n        };\n\n        if (fullConfig.id && this.getSidepanelById(fullConfig.id)) {\n            throw Error(`Sidepanel with id \"${fullConfig.id}\" exists already. The sidepanel id must be unique.`);\n        }\n\n        const overlayRef = this.createOverlay(fullConfig);\n        const container = this.attachContainer(overlayRef, fullConfig);\n        const ref = new McSidepanelRef(container, overlayRef, fullConfig);\n\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            container.attachTemplatePortal(new TemplatePortal<T>(componentOrTemplateRef, null!, {\n                $implicit: fullConfig.data,\n                sidepanelRef: ref\n            } as any));\n        } else {\n            const injector = this.createInjector(fullConfig, ref, container);\n            const portal = new ComponentPortal(componentOrTemplateRef, undefined, injector);\n            const contentRef = container.attachComponentPortal(portal);\n\n            ref.instance = contentRef.instance;\n        }\n\n        this.openedSidepanels.push(ref);\n        ref.afterClosed().subscribe(() => this.removeOpenSidepanel(ref));\n        container.enter();\n\n        return ref;\n    }\n\n    /**\n     * Closes all of the currently-open sidepanels.\n     */\n    closeAll(): void {\n        this.closeSidepanels(this.openedSidepanels);\n    }\n\n    /**\n     * Finds an open sidepanel by its id.\n     * @param id ID to use when looking up the sidepanel.\n     */\n    getSidepanelById(id: string): McSidepanelRef | undefined {\n        return this.openedSidepanels.find((sidepanel) => sidepanel.id === id);\n    }\n\n    /**\n     * Attaches the sidepanel container component to the overlay.\n     */\n    private attachContainer(overlayRef: OverlayRef, config: McSidepanelConfig): McSidepanelContainerComponent {\n        const openedSidepanelsWithSamePosition = this.getOpenedSidepanelsWithSamePosition(config);\n\n        const injector = new PortalInjector(this.injector, new WeakMap<any>([\n            [McSidepanelConfig, config],\n            [MC_SIDEPANEL_WITH_INDENT, openedSidepanelsWithSamePosition.length >= 1],\n            [MC_SIDEPANEL_WITH_SHADOW, openedSidepanelsWithSamePosition.length < 2] // tslint:disable-line\n        ]));\n\n        const containerPortal = new ComponentPortal(McSidepanelContainerComponent, undefined, injector);\n        const containerRef: ComponentRef<McSidepanelContainerComponent> = overlayRef.attach(containerPortal);\n\n        return containerRef.instance;\n    }\n\n    /**\n     * Creates a custom injector to be used inside the sidepanel. This allows a component loaded inside\n     * of a sidepanel to close itself and, optionally, to return a value.\n     * @param config Config object that is used to construct the sidepanel.\n     * @param sidepanelRef Reference to the sidepanel.\n     * @param sidepanelContainer Sidepanel container element that wraps all of the contents.\n     * @returns The custom injector that can be used inside the sidepanel.\n     */\n    private createInjector<T>(\n        config: McSidepanelConfig,\n        sidepanelRef: McSidepanelRef<T>,\n        sidepanelContainer: McSidepanelContainerComponent): PortalInjector {\n\n        // The McSidepanelContainerComponent is injected in the portal as the McSidepanelContainerComponent and\n        // the sidepanel's content are created out of the same ViewContainerRef and as such, are siblings for injector\n        // purposes. To allow the hierarchy that is expected, the McSidepanelContainerComponent is explicitly\n        // added to the injection tokens.\n        const injectionTokens = new WeakMap<any>([\n            [McSidepanelContainerComponent, sidepanelContainer],\n            [MC_SIDEPANEL_DATA, config.data],\n            [McSidepanelRef, sidepanelRef]\n        ]);\n\n        return new PortalInjector(this.injector, injectionTokens);\n    }\n\n    /**\n     * Creates a new overlay and places it in the correct location.\n     * @param config The user-specified sidepanel config.\n     */\n    private createOverlay(config: McSidepanelConfig): OverlayRef {\n        const overlayConfig = new OverlayConfig({\n            hasBackdrop: config.hasBackdrop,\n            backdropClass: this.getBackdropClass(config),\n            maxWidth: '100%',\n            panelClass: config.overlayPanelClass,\n            scrollStrategy: this.overlay.scrollStrategies.block(),\n            positionStrategy: this.overlay.position().global()\n        });\n\n        return this.overlay.create(overlayConfig);\n    }\n\n    private closeSidepanels(sidepanels: McSidepanelRef[]) {\n        const reversedOpenedSidepanels = [...sidepanels.reverse()];\n\n        reversedOpenedSidepanels.forEach((sidepanelRef: McSidepanelRef) => {\n            sidepanelRef.close();\n        });\n    }\n\n    private getBackdropClass(config: McSidepanelConfig): string {\n        const hasOpenedSidepanelWithBackdrop =\n            this.openedSidepanels.some((sidepanelRef) => sidepanelRef.config.hasBackdrop!);\n\n        return config.requiredBackdrop || !hasOpenedSidepanelWithBackdrop ? 'cdk-overlay-dark-backdrop' :\n            'cdk-overlay-transparent-backdrop';\n    }\n\n    private getOpenedSidepanelsWithSamePosition(config: McSidepanelConfig): McSidepanelRef[] {\n        return this.openedSidepanels.filter((sidepanelRef) => sidepanelRef.config.position === config.position);\n    }\n\n    /**\n     * Removes a sidepanel from the array of open sidepanels.\n     * @param sidepanelRef Sidepanel to be removed.\n     */\n    private removeOpenSidepanel(sidepanelRef: McSidepanelRef) {\n        const index = this.openedSidepanels.indexOf(sidepanelRef);\n\n        if (index > -1) {\n            this.openedSidepanels.splice(index, 1);\n        }\n    }\n}\n","import { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { merge, Observable, Subject } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\n\nimport { McSidepanelAnimationState } from './sidepanel-animations';\nimport { McSidepanelConfig } from './sidepanel-config';\nimport { McSidepanelContainerComponent } from './sidepanel-container.component';\n\n\n// Counter for unique sidepanel ids.\nlet uniqueId = 0;\n\nexport class McSidepanelRef<T = any, R = any> {\n    readonly id: string;\n\n    /** Instance of the component making up the content of the sidepanel. */\n    instance: T;\n\n    /** Subject for notifying the user that the sidepanel has been closed and dismissed. */\n    private readonly afterClosed$ = new Subject<R | undefined>();\n\n    /** Subject for notifying the user that the sidepanel has opened and appeared. */\n    private readonly afterOpened$ = new Subject<void>();\n\n    /** Result to be passed down to the `afterDismissed` stream. */\n    private result: R | undefined;\n\n    constructor(\n        public containerInstance: McSidepanelContainerComponent,\n        private overlayRef: OverlayRef,\n        public config: McSidepanelConfig) {\n\n        this.id = this.config.id || `mc-sidepanel-${uniqueId++}`;\n        this.containerInstance.id = this.id;\n\n        // Emit when opening animation completes\n        containerInstance.animationStateChanged.pipe(\n            filter(\n                (event) => event.phaseName === 'done' && event.toState === McSidepanelAnimationState.Visible\n            ),\n            take(1)\n        ).subscribe(() => {\n            this.afterOpened$.next();\n            this.afterOpened$.complete();\n        });\n\n        // Dispose overlay when closing animation is complete\n        containerInstance.animationStateChanged.pipe(\n            filter(\n                (event) => event.phaseName === 'done' && event.toState === McSidepanelAnimationState.Hidden\n            ),\n            take(1)\n        ).subscribe(() => {\n            overlayRef.dispose();\n            this.afterClosed$.next(this.result);\n            this.afterClosed$.complete();\n        });\n\n        if (!containerInstance.sidepanelConfig.disableClose) {\n            merge(\n                overlayRef.backdropClick(),\n                overlayRef.keydownEvents().pipe(\n                    // tslint:disable:deprecation\n                    // keyCode is deprecated, but IE11 and Edge don't support code property, which we need use instead\n                    filter((event) => event.keyCode === ESCAPE)\n                )\n            ).subscribe(() => this.close());\n        }\n    }\n\n    close(result?: R): void {\n        if (!this.afterClosed$.closed) {\n            // Transition the backdrop in parallel to the sidepanel.\n            this.containerInstance.animationStateChanged.pipe(\n                filter((event) => event.phaseName === 'done'),\n                take(1)\n            ).subscribe(() => this.overlayRef.detachBackdrop());\n\n            this.result = result;\n            this.containerInstance.exit();\n        }\n    }\n\n    /** Gets an observable that is notified when the sidepanel is finished closing. */\n    afterClosed(): Observable<R | undefined> {\n        return this.afterClosed$.asObservable();\n    }\n\n    /** Gets an observable that is notified when the sidepanel has opened and appeared. */\n    afterOpened(): Observable<void> {\n        return this.afterOpened$.asObservable();\n    }\n}\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ComponentRef,\n    ElementRef,\n    EmbeddedViewRef,\n    EventEmitter, Inject, InjectionToken,\n    OnDestroy,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal } from '@ptsecurity/cdk/portal';\n\nimport {\n    mcSidepanelAnimations,\n    McSidepanelAnimationState,\n    mcSidepanelTransformAnimation\n} from './sidepanel-animations';\n\nimport { McSidepanelConfig, McSidepanelPosition } from './sidepanel-config';\n\n\nexport const MC_SIDEPANEL_WITH_INDENT =\n    new InjectionToken<boolean>('mc-sidepanel-with-indent');\n\nexport const MC_SIDEPANEL_WITH_SHADOW =\n    new InjectionToken<boolean>('mc-sidepanel-with-shadow');\n\n@Component({\n    selector: 'mc-sidepanel-container',\n    templateUrl: './sidepanel-container.component.html',\n    styleUrls: ['./sidepanel.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    animations: [mcSidepanelAnimations.sidepanelState],\n    host: {\n        class: 'mc-sidepanel-container',\n        tabindex: '-1',\n        role: 'dialog',\n        'aria-modal': 'true',\n        '[attr.id]': 'id',\n        '[@state]': `{\n            value: animationState,\n            params: animationTransform\n        }`,\n        '(@state.start)': 'onAnimation($event)',\n        '(@state.done)': 'onAnimation($event)'\n    }\n})\nexport class McSidepanelContainerComponent extends BasePortalOutlet implements OnDestroy {\n    /** ID for the container DOM element. */\n    id: string;\n\n    /** The portal outlet inside of this container into which the content will be loaded. */\n    @ViewChild(CdkPortalOutlet) portalOutlet: CdkPortalOutlet;\n\n    /** The state of the sidepanel animations. */\n    animationState: McSidepanelAnimationState = McSidepanelAnimationState.Void;\n\n    animationTransform: { transformIn: string; transformOut: string };\n\n    /** Emits whenever the state of the animation changes. */\n    animationStateChanged = new EventEmitter<AnimationEvent>();\n\n    /** Whether the component has been destroyed. */\n    private destroyed: boolean;\n\n    constructor(\n        private elementRef: ElementRef<HTMLElement>,\n        private changeDetectorRef: ChangeDetectorRef,\n        public sidepanelConfig: McSidepanelConfig,\n        @Inject(MC_SIDEPANEL_WITH_INDENT) public withIndent: boolean,\n        @Inject(MC_SIDEPANEL_WITH_SHADOW) public withShadow: boolean) {\n        super();\n    }\n\n    ngOnDestroy(): void {\n        this.destroyed = true;\n    }\n\n    /** Attach a component portal as content to this sidepanel container. */\n    attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n        this.validatePortalAttached();\n        this.setAnimation();\n        this.setPanelClass();\n\n        return this.portalOutlet.attachComponentPortal(portal);\n    }\n\n    /** Attach a template portal as content to this sidepanel container. */\n    attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n        this.validatePortalAttached();\n        this.setAnimation();\n        this.setPanelClass();\n\n        return this.portalOutlet.attachTemplatePortal(portal);\n    }\n\n    /** Begin animation of the sidepanel entrance into view. */\n    enter(): void {\n        if (!this.destroyed) {\n            this.animationState = McSidepanelAnimationState.Visible;\n            this.changeDetectorRef.detectChanges();\n        }\n    }\n\n    /** Begin animation of the sidepanel exiting from view. */\n    exit(): void {\n        if (!this.destroyed) {\n            this.animationState = McSidepanelAnimationState.Hidden;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    onAnimation(event: AnimationEvent) {\n        this.animationStateChanged.emit(event);\n    }\n\n    private setAnimation() {\n        const position: McSidepanelPosition = this.sidepanelConfig.position!;\n\n        this.animationTransform = {\n            transformIn: mcSidepanelTransformAnimation[position].in,\n            transformOut: mcSidepanelTransformAnimation[position].out\n        };\n    }\n\n    private setPanelClass() {\n        const element: HTMLElement = this.elementRef.nativeElement;\n        const position: McSidepanelPosition = this.sidepanelConfig.position!;\n\n        element.classList.add(`mc-sidepanel-container_${position}`);\n\n        if (this.withShadow) {\n            element.classList.add('mc-sidepanel-container_shadowed');\n        }\n    }\n\n    private validatePortalAttached() {\n        if (this.portalOutlet.hasAttached()) {\n            throw Error('Attempting to attach sidepanel content after content is already attached');\n        }\n    }\n}\n","import { animate, AnimationTriggerMetadata, state, style, transition, trigger } from '@angular/animations';\nimport { AnimationCurves } from '@ptsecurity/mosaic/core';\n\nimport { McSidepanelPosition } from './sidepanel-config';\n\n\nexport enum McSidepanelAnimationState {\n    Void = 'void',\n    Visible = 'visible',\n    Hidden = 'hidden'\n}\n\n// TODO Find a way to use dynamic keys and avoid error \"Expression form not supported.\"\n// tslint:disable-next-line\nexport const mcSidepanelTransformAnimation: Record<McSidepanelPosition, { in: string; out: string }> = {\n    right: { in: 'translateX(100%)', out: 'translateX(0%)' },\n    left: { in: 'translateX(-100%)', out: 'translateX(0%)' },\n    top: { in: 'translateY(-100%)', out: 'translateY(0%)' },\n    bottom: { in: 'translateY(100%)', out: 'translateY(0%)' }\n};\n\nexport const mcSidepanelAnimations: {\n    readonly sidepanelState: AnimationTriggerMetadata;\n} = {\n    sidepanelState: trigger('state', [\n        state('hidden',\n            style({ transform: '{{transformIn}}' }),\n            { params: { transformIn: mcSidepanelTransformAnimation[McSidepanelPosition.Right].in }}\n        ),\n        state('visible',\n            style({ transform: '{{transformOut}}' }),\n            { params: { transformOut: mcSidepanelTransformAnimation[McSidepanelPosition.Right].out }}\n        ),\n        transition('visible => void, visible => hidden',\n            animate(`200ms ${AnimationCurves.AccelerationCurve}`)),\n        transition('void => visible',\n            animate(`200ms ${AnimationCurves.DecelerationCurve}`))\n    ])\n};\n","import { InjectionToken } from '@angular/core';\n\n\n/** Injection token that can be used to access the data that was passed in to a sidepanel. */\nexport const MC_SIDEPANEL_DATA = new InjectionToken<any>('McSidepanelData');\n\nexport enum McSidepanelPosition {\n    Right = 'right',\n    Left = 'left',\n    Top = 'top',\n    Bottom = 'bottom'\n}\n\nexport class McSidepanelConfig<D = any> {\n    /** ID for the sidepanel. If omitted, a unique one will be generated. */\n    id?: string;\n\n    /** Data being injected into the child component. */\n    data?: D | null = null;\n\n    position?: McSidepanelPosition = McSidepanelPosition.Right;\n\n    /** Whether the sidepanel has a backdrop. */\n    hasBackdrop?: boolean = true;\n\n    /** When we open multiple sidepanels, backdrop appears only once, except cases then this flag is true. */\n    requiredBackdrop?: boolean = false;\n\n    /** Whether the user can use escape or clicking outside to close the sidepanel. */\n    disableClose?: boolean = false;\n\n    /** Custom class for the overlay pane. */\n    overlayPanelClass?: string | string[] = '';\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTimepicker } from './timepicker';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        FormsModule\n    ],\n    declarations: [\n        McTimepicker\n    ],\n    exports: [\n        McTimepicker\n    ]\n})\nexport class McTimepickerModule {}\n","import {\n    Directive,\n    DoCheck,\n    ElementRef,\n    forwardRef,\n    Inject,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Renderer2,\n    Self\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroupDirective,\n    NG_VALIDATORS,\n    NgControl,\n    NgForm,\n    ValidationErrors,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { MC_INPUT_VALUE_ACCESSOR } from '@ptsecurity/mosaic/input';\nimport {\n    noop,\n    Subject\n} from 'rxjs';\n\nimport {\n    ARROW_DOWN_KEYCODE,\n    ARROW_LEFT_KEYCODE,\n    ARROW_RIGHT_KEYCODE,\n    ARROW_UP_KEYCODE,\n    DEFAULT_TIME_FORMAT,\n    HOURS_PER_DAY,\n    HOURS_MINUTES_REGEXP,\n    HOURS_MINUTES_SECONDS_REGEXP,\n    HOURS_ONLY_REGEXP,\n    MINUTES_PER_HOUR,\n    SECONDS_PER_MINUTE,\n    TIMEFORMAT_PLACEHOLDERS,\n    TimeFormats,\n    TimeParts\n} from './timepicker.constants';\n\n\nlet uniqueComponentIdSuffix: number = 0;\n\nconst formValidators: WeakMap<FormControl, ValidatorFn | null> = new WeakMap();\nconst formValidatorOnChangeRegistrators: WeakMap<FormControl, () => void> = new WeakMap();\nconst validatorOnChange = (c: FormControl) => {\n    const validatorOnChangeHandler = formValidatorOnChangeRegistrators.get(c);\n\n    if (validatorOnChangeHandler !== undefined) { validatorOnChangeHandler(); }\n};\n\nexport class McTimepickerBase {\n    constructor(\n        public defaultErrorStateMatcher: ErrorStateMatcher,\n        public parentForm: NgForm,\n        public parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl) { }\n}\n\n// tslint:disable-next-line naming-convention\nexport const McTimepickerMixinBase:\n    CanUpdateErrorStateCtor &\n    typeof McTimepickerBase = mixinErrorState(McTimepickerBase);\n\n@Directive({\n    selector: 'input[mcTimepicker]',\n    exportAs: 'mcTimepickerInput',\n    host: {\n        class: 'mc-timepicker mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '[attr.time-format]': 'timeFormat',\n        '[attr.min-time]': 'minTime',\n        '[attr.max-time]': 'maxTime',\n        '[attr.value]': 'value',\n        '[attr.aria-invalid]': 'errorState',\n        '(blur)': 'onBlur()',\n        '(focus)': 'focusChanged(true)',\n        '(input)': 'onInput()',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    },\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useValue: {\n                validate(c: FormControl) {\n                    // TODO This is `workaround` to bind singleton-like Validator implementation to\n                    // context of each validated component. This MUST be realized in proper way!\n                    if (this.__validatorOnChangeHandler !== undefined) {\n                        formValidatorOnChangeRegistrators.set(c, this.__validatorOnChangeHandler);\n                        this.__validatorOnChangeHandler = undefined;\n                    }\n                    const validator = formValidators.get(c);\n\n                    return validator ? validator(c) : null;\n                },\n                registerOnValidatorChange(fn: () => void): void {\n                    this.__validatorOnChangeHandler = fn;\n                }\n            },\n            multi: true\n        },\n        {\n            provide: McFormFieldControl,\n            useExisting: forwardRef(() => McTimepicker)\n        }\n    ]\n\n})\nexport class McTimepicker extends McTimepickerMixinBase\n    implements McFormFieldControl<any>,\n        OnChanges,\n        OnDestroy,\n        DoCheck,\n        CanUpdateErrorState,\n        ControlValueAccessor {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-timepicker';\n\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) { return this.ngControl.disabled; }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n        }\n\n        this.stateChanges.next();\n    }\n\n    @Input()\n    get id(): string { return this._id; }\n\n    set id(value: string) { this._id = value || this.uid; }\n\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean { return this._required; }\n\n    set required(value: boolean) { this._required = coerceBooleanProperty(value); }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string { return this.inputValueAccessor.value; }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this.inputValueAccessor.value = value;\n            this.applyInputChanges();\n        }\n    }\n\n    @Input('time-format')\n    get timeFormat(): TimeFormats { return this._timeFormat; }\n\n    set timeFormat(formatValue: TimeFormats) {\n        this._timeFormat = Object\n            .keys(TimeFormats)\n            .map((timeFormatKey) => TimeFormats[timeFormatKey])\n            .indexOf(formatValue) > -1 ? formatValue : DEFAULT_TIME_FORMAT;\n\n        validatorOnChange(<FormControl> this.ngControl.control);\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[this._timeFormat];\n    }\n\n    @Input('min-time')\n    get minTime(): string | null { return this._minTime; }\n\n    set minTime(minValue: string | null) {\n        this._minTime = minValue;\n        this.minDateTime = minValue !== null ? this.getDateFromTimeString(minValue) : undefined;\n        validatorOnChange(<FormControl> this.ngControl.control);\n    }\n\n    @Input('max-time')\n    get maxTime(): string | null { return this._maxTime; }\n\n    set maxTime(maxValue: string | null) {\n        this._maxTime = maxValue;\n        this.maxDateTime = maxValue !== null ? this.getDateFromTimeString(maxValue) : undefined;\n        validatorOnChange(<FormControl> this.ngControl.control);\n    }\n\n    private _id: string;\n    private readonly uid = `mc-timepicker-${uniqueComponentIdSuffix++}`;\n    private _disabled: boolean;\n    private _required: boolean;\n    private previousNativeValue: any;\n    private readonly inputValueAccessor: { value: any };\n    private onChange: (value: any) => void;\n    private onTouched: () => void;\n    private _timeFormat: TimeFormats;\n    private _minTime: string | null = null;\n    private minDateTime: Date | undefined;\n    private _maxTime: string | null = null;\n    private maxDateTime: Date | undefined;\n    private currentDateTimeInput: Date | undefined;\n\n    constructor(private readonly elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() parentForm: NgForm,\n                @Optional() parentFormGroup: FormGroupDirective,\n                defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any,\n                private readonly renderer: Renderer2) {\n        super(defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\n\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this.inputValueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n        this.onChange = noop;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[DEFAULT_TIME_FORMAT];\n\n        // Instead of NG_VALUE_ACCESSOR (https://github.com/angular/material2/issues/8158#issuecomment-344618103)\n        if (this.ngControl) { this.ngControl.valueAccessor = this; }\n\n        // Substitute initial empty validator with validator linked to directive object instance (workaround)\n\n        formValidators.set(\n            <FormControl> this.ngControl.control,\n            Validators.compose([\n                () => this.parseValidator(),\n                () => this.minTimeValidator(),\n                () => this.maxTimeValidator()\n            ])\n        );\n    }\n\n    ngOnChanges(): void {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck(): void {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    focusChanged(isFocused: boolean): void {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.onTouched();\n            this.stateChanges.next();\n        }\n    }\n\n    onBlur() {\n        this.applyInputChanges();\n        this.focusChanged(false);\n    }\n\n    onPaste($event) {\n        $event.preventDefault();\n        const clipboardUserInput: string = $event.clipboardData.getData('text');\n\n        if (this.getDateFromTimeString(clipboardUserInput) === undefined) { return; }\n\n        this.elementRef.nativeElement.value = clipboardUserInput;\n        this.onInput();\n    }\n\n    onInput() {\n        const initialCursorStart: number = this.elementRef.nativeElement.selectionStart;\n        const initialCursorEnd: number = this.elementRef.nativeElement.selectionEnd;\n        let isAutocompleteTriggered: boolean = false;\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(this.elementRef.nativeElement.value);\n\n        // tslint:disable no-magic-numbers\n        if (hoursOnly &&\n            hoursOnly[1] &&\n            hoursOnly[1].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutes &&\n            hoursAndMinutes[1].length === 1 &&\n            hoursAndMinutes[2] &&\n            hoursAndMinutes[2].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutesAndSeconds &&\n            hoursAndMinutesAndSeconds[1].length === 2 &&\n            hoursAndMinutesAndSeconds[2].length === 2 &&\n            hoursAndMinutesAndSeconds[3] &&\n            hoursAndMinutesAndSeconds[3].length === 2) {\n            isAutocompleteTriggered = true;\n        }\n        // tslint:enable no-magic-numbers\n\n        this.applyInputChanges({ doTimestringReformat: isAutocompleteTriggered });\n\n        this.elementRef.nativeElement.selectionStart = initialCursorStart;\n        this.elementRef.nativeElement.selectionEnd = initialCursorEnd;\n\n        if (isAutocompleteTriggered && this.ngControl.errors === null) {\n            this.createSelectionOfTimeComponentInInput(initialCursorStart + 1);\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    writeValue(value: Date | null): void {\n        if (value !== null) {\n            this.renderer.setProperty(this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(value, this.timeFormat)\n            );\n        }\n        this.onChange(value || null);\n        this.applyInputChanges();\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        const keyCode: string = this.getKeyCode(event);\n\n        if (keyCode === ARROW_UP_KEYCODE || keyCode === ARROW_DOWN_KEYCODE) {\n            this.upDownTimeByArrowKeys(event);\n        }\n        if (keyCode === ARROW_LEFT_KEYCODE || keyCode === ARROW_RIGHT_KEYCODE) {\n            this.switchSelectionBetweenTimeparts(event);\n        }\n    }\n\n    registerOnChange(fn: (value: Date) => void): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    private dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    private isBadInput(): boolean {\n        const validity = (<HTMLInputElement> this.elementRef.nativeElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private applyInputChanges(applyParams: {\n        changedTime?: Date;\n        doTimestringReformat?: boolean;\n    } = {}): void {\n        const { changedTime, doTimestringReformat = true } = applyParams;\n        const timeToApply: Date | undefined = changedTime ||\n            this.getDateFromTimeString(this.elementRef.nativeElement.value);\n        this.currentDateTimeInput = timeToApply;\n\n        if (doTimestringReformat && timeToApply !== undefined) {\n            const selectionStart: number = this.elementRef.nativeElement.selectionStart;\n            const selectionEnd: number = this.elementRef.nativeElement.selectionEnd;\n            this.renderer.setProperty(\n                this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(timeToApply, this.timeFormat));\n            this.elementRef.nativeElement.selectionStart = selectionStart;\n            this.elementRef.nativeElement.selectionEnd = selectionEnd;\n        }\n\n        (<FormControl> this.ngControl.control).updateValueAndValidity();\n        const result = this.ngControl.errors === null && timeToApply !== undefined ? timeToApply : null;\n        this.onChange(result);\n        this.stateChanges.next();\n    }\n\n    private upDownTimeByArrowKeys(event: KeyboardEvent): void {\n        event.preventDefault();\n\n        let changedTime: Date | undefined = this.currentDateTimeInput;\n        if (changedTime !== undefined) {\n            const cursorPos = this.elementRef.nativeElement.selectionStart;\n\n            const modifiedTimePart = this.getTimeEditMetrics(cursorPos)\n                .modifiedTimePart;\n            const keyCode: string = this.getKeyCode(event);\n            if (keyCode === ARROW_UP_KEYCODE) { changedTime = this.incrementTime(changedTime, modifiedTimePart); }\n            if (keyCode === ARROW_DOWN_KEYCODE) { changedTime = this.decrementTime(changedTime, modifiedTimePart); }\n            this.applyInputChanges({ changedTime });\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    private switchSelectionBetweenTimeparts(event: KeyboardEvent): void {\n        const changedTime: Date | undefined = this.currentDateTimeInput;\n        const keyCode: string = this.getKeyCode(event);\n\n        if (changedTime !== undefined) {\n            let cursorPos: number = this.elementRef.nativeElement.selectionStart;\n            if (keyCode === ARROW_LEFT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfPrevTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            } else if (keyCode === ARROW_RIGHT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfNextTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            }\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    /**\n     * @description Microsoft EDGE doesn't support KeyboaedEvent.code thus we need this helper\n     */\n    private getKeyCode(event: KeyboardEvent): string {\n        return event.code || event.key;\n    }\n\n    private createSelectionOfTimeComponentInInput(cursorPos: number): void {\n        setTimeout(() => {\n            const newEditParams = this.getTimeEditMetrics(cursorPos);\n            this.elementRef.nativeElement.selectionStart = newEditParams.cursorStartPosition;\n            this.elementRef.nativeElement.selectionEnd = newEditParams.cursorEndPosition;\n        });\n    }\n\n    private incrementTime(dateVal: Date,\n                          whatToIncrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToIncrement) {\n            case TimeParts.hours:\n                hours++;\n                break;\n            case TimeParts.minutes:\n                minutes++;\n                break;\n            case TimeParts.seconds:\n                seconds++;\n                break;\n            default:\n        }\n\n        if (seconds > SECONDS_PER_MINUTE) { seconds = 0; }\n\n        if (minutes > MINUTES_PER_HOUR) { minutes = 0; }\n\n        if (hours > HOURS_PER_DAY) { hours = 0; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    /**\n     * @description Decrement part of time\n     */\n    private decrementTime(dateVal: Date,\n                          whatToDecrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToDecrement) {\n            case TimeParts.hours:\n                hours--;\n                break;\n            case TimeParts.minutes:\n                minutes--;\n                break;\n            case TimeParts.seconds:\n                seconds--;\n                break;\n            default:\n        }\n\n        if (seconds < 0) { seconds = SECONDS_PER_MINUTE; }\n\n        if (minutes < 0) { minutes = MINUTES_PER_HOUR; }\n\n        if (hours < 0) { hours = HOURS_PER_DAY; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    private getCursorPositionOfPrevTimePartStart(cursorPos: number, timeString: string): number {\n        return cursorPos === 0 ? timeString.length : cursorPos - 1;\n    }\n\n    private getCursorPositionOfNextTimePartStart(cursorPos: number,\n                                                 timeString: string,\n                                                 timeDevider: string = ':'): number {\n        const nextDividerPos: number = timeString.indexOf(timeDevider, cursorPos);\n\n        return nextDividerPos !== undefined ? nextDividerPos + 1 : 0;\n    }\n\n    /**\n     * @description Get params for arrow-keys (up/down) time valie edit.\n     * @param cursorPosition Current cursor position in timeString\n     */\n    private getTimeEditMetrics(cursorPosition: number): {\n        modifiedTimePart: TimeParts;\n        cursorStartPosition: number;\n        cursorEndPosition: number;\n    } {\n        const timeString: string = this.elementRef.nativeElement.value;\n        let modifiedTimePart: TimeParts;\n        let cursorStartPosition: number;\n        let cursorEndPosition: number;\n        const hoursIndex = 0;\n        const minutesIndex = timeString.indexOf(':', hoursIndex + 1);\n        const secondsIndex = minutesIndex !== -1 ? timeString.indexOf(':', minutesIndex + 1) : -1;\n\n        if (secondsIndex !== -1 && cursorPosition > secondsIndex) {\n            modifiedTimePart = TimeParts.seconds;\n            cursorStartPosition = secondsIndex + 1;\n            cursorEndPosition = timeString.length;\n        } else if (minutesIndex !== -1 && cursorPosition > minutesIndex) {\n            modifiedTimePart = TimeParts.minutes;\n            cursorStartPosition = minutesIndex + 1;\n            cursorEndPosition = secondsIndex > -1 ? secondsIndex : timeString.length;\n        } else {\n            modifiedTimePart = TimeParts.hours;\n            cursorStartPosition = hoursIndex;\n            cursorEndPosition = minutesIndex !== -1 ? minutesIndex : timeString.length;\n        }\n\n        return {\n            modifiedTimePart,\n            cursorStartPosition,\n            cursorEndPosition\n        };\n    }\n\n    /**\n     * @description Create time string for displaying inside input element of UI\n     */\n    private getTimeStringFromDate(tempVal: Date,\n                                  timeFormat: TimeFormats = DEFAULT_TIME_FORMAT): string {\n        const hours: string = this.getNumberWithLeadingZero(tempVal.getHours());\n        const minutes: string = this.getNumberWithLeadingZero(tempVal.getMinutes());\n        const seconds: string = this.getNumberWithLeadingZero(tempVal.getSeconds());\n\n        const formattedTimeGenerators = {\n            [TimeFormats.HHmm]: () => `${hours}:${minutes}`,\n            [TimeFormats.HHmmss]: () => `${hours}:${minutes}:${seconds}`\n        };\n\n        return formattedTimeGenerators[timeFormat]();\n    }\n\n    private getParsedTimeParts(timeString: string): {\n        hoursOnly: any;\n        hoursAndMinutes: any;\n        hoursAndMinutesAndSeconds: any;\n    } {\n        const hoursAndMinutesAndSeconds = timeString.match(HOURS_MINUTES_SECONDS_REGEXP);\n        const hoursAndMinutes = timeString.match(HOURS_MINUTES_REGEXP);\n        const hoursOnly = timeString.match(HOURS_ONLY_REGEXP);\n\n        return {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        };\n    }\n\n    /**\n     * @description Create Date object from separate parts of time\n     */\n    private getDateFromTimeDigits(hours: number, minutes: number, seconds: number = 0): Date | undefined {\n        return this.getDateFromTimeString(`${hours}:${minutes}:${seconds}`);\n    }\n\n    private getDateFromTimeString(timeString: string | undefined): Date | undefined {\n        // TODO Use moment-js\n        if (timeString === undefined) { return; }\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(timeString);\n\n        if (timeString.trim().length === 0 ||\n            hoursOnly === null && hoursAndMinutes === null && hoursAndMinutesAndSeconds === null) {\n            return;\n        }\n\n        // tslint:disable no-magic-numbers\n        let hours: number = 0;\n        let minutes: number = 0;\n        let seconds: number = 0;\n\n        if (hoursOnly) {\n            hours = Number(hoursOnly[1]);\n        } else if (hoursAndMinutes) {\n            hours = Number(hoursAndMinutes[1]);\n            minutes = Number(hoursAndMinutes[2]);\n        } else if (hoursAndMinutesAndSeconds) {\n            hours = Number(hoursAndMinutesAndSeconds[1]);\n            minutes = Number(hoursAndMinutesAndSeconds[2]);\n            seconds = Number(hoursAndMinutesAndSeconds[3]);\n        }\n        // const timestamp: number = Date.parse(fullDateString);\n        const resultDate: Date = new Date(1970, 0, 1, hours, minutes, seconds);\n        // tslint:enable no-magic-numbers\n\n        return isNaN(resultDate.getTime()) ? undefined : resultDate;\n    }\n\n    private getNumberWithLeadingZero(digit: number): string {\n        const MAX_DIGIT_WITH_LEADING_ZERO: number = 9;\n\n        return digit > MAX_DIGIT_WITH_LEADING_ZERO ? `${digit}` : `0${digit}`;\n    }\n\n    private getTimeDigitsFromDate(dateVal: Date): { hours: number; minutes: number; seconds: number } {\n        return {\n            hours: dateVal.getHours(),\n            minutes: dateVal.getMinutes(),\n            seconds: dateVal.getSeconds()\n        };\n    }\n\n    private parseValidator(): ValidationErrors | null {\n        return this.currentDateTimeInput === undefined ?\n            { mcTimepickerParse: { text: this.elementRef.nativeElement.value } } :\n            null;\n    }\n\n    private minTimeValidator(): ValidationErrors | null {\n\n        if (this.currentDateTimeInput !== undefined &&\n            this.minDateTime !== undefined &&\n            this.isTimeLowerThenMin(this.currentDateTimeInput)) {\n            return { mcTimepickerLowerThenMintime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private maxTimeValidator(): ValidationErrors | null {\n        if (this.currentDateTimeInput !== undefined &&\n            this.maxDateTime !== undefined &&\n            this.isTimeGreaterThenMax(this.currentDateTimeInput)) {\n            return { mcTimepickerHigherThenMaxtime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private isTimeLowerThenMin(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.minDateTime).getTime() < 0;\n    }\n\n    private isTimeGreaterThenMax(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.maxDateTime).getTime() >= 0;\n    }\n}\n","export enum TimeParts {\n    hours,\n    minutes,\n    seconds\n}\n\nexport enum TimeFormats {\n    HHmmss = 'HH:mm:ss',\n    HHmm = 'HH:mm'\n}\n\nexport const TIMEFORMAT_PLACEHOLDERS: { [timeFormat: string]: string } = {\n    [TimeFormats.HHmmss]: '  :  :  ',\n    [TimeFormats.HHmm]: '  :  '\n};\n\nexport const DEFAULT_TIME_FORMAT: TimeFormats = TimeFormats.HHmm;\n\nexport const HOURS_MINUTES_SECONDS_REGEXP =\n    new RegExp(/^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9]):([0-5][0-9]|[0-9])?$/);\nexport const HOURS_MINUTES_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9])?$/;\nexport const HOURS_ONLY_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):?$/;\n\nexport const SECONDS_PER_MINUTE: number = 59;\nexport const MINUTES_PER_HOUR: number = 59;\nexport const HOURS_PER_DAY: number = 23;\n\n// TODO Move it to common CDK\nexport const ARROW_UP_KEYCODE: string = 'ArrowUp';\nexport const ARROW_DOWN_KEYCODE: string = 'ArrowDown';\nexport const ARROW_LEFT_KEYCODE: string = 'ArrowLeft';\nexport const ARROW_RIGHT_KEYCODE: string = 'ArrowRight';\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McTextarea } from './textarea.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McTextarea],\n    declarations: [McTextarea]\n})\nexport class McTextareaModule {\n}\n","import {\n    Directive, DoCheck, ElementRef, Inject,\n    Input, OnChanges, OnDestroy, Optional,\n    Self, InjectionToken, NgZone, OnInit\n} from '@angular/core';\nimport { FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { fromEvent, Subscription, Subject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\n\nexport const MC_TEXTAREA_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_TEXTAREA_VALUE_ACCESSOR');\n\nlet nextUniqueId = 0;\n\nconst ROW_SEPARATOR = '\\n';\n\nexport class McTextareaBase {\n    constructor(public defaultErrorStateMatcher: ErrorStateMatcher,\n                public parentForm: NgForm,\n                public parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McTextareaMixinBase: CanUpdateErrorStateCtor & typeof McTextareaBase = mixinErrorState(McTextareaBase);\n\n@Directive({\n    selector: 'textarea[mcTextarea]',\n    exportAs: 'mcTextarea',\n    host: {\n        class: 'mc-textarea',\n        '[class.mc-textarea-resizable]': '!canGrow',\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[attr.aria-invalid]': 'errorState',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': 'focusChanged(false)',\n        '(focus)': 'focusChanged(true)'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McTextarea }]\n})\nexport class McTextarea extends McTextareaMixinBase implements McFormFieldControl<any>, OnInit, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    @Input() canGrow: boolean = true;\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-textarea';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this.uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this.valueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this.valueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected uid = `mc-textsrea-${nextUniqueId++}`;\n    protected previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n\n    private valueAccessor: { value: any };\n    private growSubscription: Subscription;\n\n    private lineHeight: number = 0;\n    private freeRowsHeight: number = 0;\n    private minHeight: number = 0;\n\n    constructor(protected elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() parentForm: NgForm,\n                @Optional() parentFormGroup: FormGroupDirective,\n                defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_TEXTAREA_VALUE_ACCESSOR) inputValueAccessor: any,\n                private ngZone: NgZone) {\n        super(defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the textarea value\n        // accessor.\n        this.valueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        const growObserver = fromEvent(elementRef.nativeElement, 'input')\n            /*.pipe(\n                map((event: any) => this.getGrowHeight()),\n                // map((event: any) => event.target.scrollHeight),\n                distinctUntilChanged()\n            )*/;\n        this.growSubscription = growObserver.subscribe(this.grow.bind(this));\n    }\n\n    ngOnInit() {\n        setTimeout(() => this.grow(), 0);\n        this.lineHeight = parseInt(getComputedStyle(this.elementRef.nativeElement).lineHeight!, 10);\n\n        const paddingTop = parseInt(getComputedStyle(this.elementRef.nativeElement).paddingTop!, 10);\n        const paddingBottom = parseInt(getComputedStyle(this.elementRef.nativeElement).paddingBottom!, 10);\n\n        // tslint:disable-next-line:no-magic-numbers\n        this.minHeight = this.lineHeight * 2 + paddingTop + paddingBottom;\n        this.freeRowsHeight = this.lineHeight;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        this.growSubscription.unsubscribe();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    /** Grow textarea height to avoid vertical scroll  */\n    grow() {\n        if (!this.canGrow) {\n            return;\n        }\n\n        this.ngZone.runOutsideAngular(() => {\n            const textarea = this.elementRef.nativeElement;\n\n            const outerHeight = parseInt(window.getComputedStyle(textarea).height!, 10);\n            const diff = outerHeight - textarea.clientHeight;\n\n            textarea.style.height = 0; // this line is important to height recalculation\n\n            const height = Math.max(this.minHeight, textarea.scrollHeight + diff + this.freeRowsHeight);\n            textarea.style.height = `${height}px`;\n        });\n    }\n\n    /** Focuses the textarea. */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the textarea changes. */\n    focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native textarea `value` property. */\n    protected dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the textarea is invalid based on the native validation. */\n    protected isBadInput(): boolean {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this.elementRef.nativeElement as HTMLTextAreaElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private getGrowHeight(): number {\n        const textarea = this.elementRef.nativeElement;\n        const outerHeight = parseInt(window.getComputedStyle(textarea).height!.toString(), 10);\n        const diff = outerHeight - textarea.clientHeight;\n\n        return Math.max(this.minHeight, textarea.scrollHeight + diff);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\nimport { MC_SELECT_SCROLL_STRATEGY_PROVIDER, McPseudoCheckboxModule } from '@ptsecurity/mosaic/core';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport { McTagsModule } from '@ptsecurity/mosaic/tags';\nimport { McTreeModule } from '@ptsecurity/mosaic/tree';\n\nimport { McTreeSelect, McTreeSelectTrigger } from './tree-select.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        CdkTreeModule,\n        McTreeModule,\n        McIconModule,\n        McTagsModule,\n        McPseudoCheckboxModule\n    ],\n    exports: [McTreeSelect, McTreeSelectTrigger, CommonModule],\n    declarations: [McTreeSelect, McTreeSelectTrigger],\n    providers: [MC_SELECT_SCROLL_STRATEGY_PROVIDER]\n})\nexport class McTreeSelectModule {}\n","/* tslint:disable:no-empty */\n\nimport {\n    AfterContentInit,\n    AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    Directive,\n    DoCheck,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Input,\n    isDevMode,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    QueryList,\n    Renderer2,\n    Self,\n    SimpleChanges,\n    ViewChild,\n    ViewChildren,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    RIGHT_ARROW,\n    SPACE,\n    UP_ARROW,\n    A\n} from '@ptsecurity/cdk/keycodes';\nimport {\n    CdkConnectedOverlay,\n    ViewportRuler\n} from '@ptsecurity/cdk/overlay';\nimport { CdkTree } from '@ptsecurity/cdk/tree';\nimport {\n    getOptionScrollPosition,\n    CanDisable,\n    CanUpdateErrorState,\n    ErrorStateMatcher,\n    HasTabIndex,\n    CanDisableCtor,\n    HasTabIndexCtor,\n    CanUpdateErrorStateCtor,\n    mixinTabIndex,\n    mixinDisabled,\n    mixinErrorState,\n    mcSelectAnimations,\n\n    SELECT_PANEL_MAX_HEIGHT,\n    SELECT_PANEL_PADDING_X,\n    SELECT_PANEL_VIEWPORT_PADDING,\n\n    getMcSelectDynamicMultipleError,\n    getMcSelectNonFunctionValueError,\n    getMcSelectNonArrayValueError,\n    MC_SELECT_SCROLL_STRATEGY\n} from '@ptsecurity/mosaic/core';\nimport { McFormField, McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { McTag } from '@ptsecurity/mosaic/tags';\nimport { McTreeSelection, McTreeOption } from '@ptsecurity/mosaic/tree';\nimport { defer, merge, Observable, Subject } from 'rxjs';\nimport {\n    filter,\n    map,\n    startWith,\n    switchMap,\n    take,\n    takeUntil,\n    distinctUntilChanged\n} from 'rxjs/operators';\n\n\nlet nextUniqueId = 0;\n\n/** Change event object that is emitted when the select value has changed. */\nexport class McTreeSelectChange {\n    constructor(public source: McTreeOption, public value: any, public isUserInput = false) {}\n}\n\n\n@Directive({ selector: 'mc-tree-select-trigger' })\nexport class McTreeSelectTrigger {}\n\n\nclass McTreeSelectBase {\n    constructor(\n        public elementRef: ElementRef,\n        public defaultErrorStateMatcher: ErrorStateMatcher,\n        public parentForm: NgForm,\n        public parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl\n    ) {}\n}\n\n// tslint:disable-next-line:naming-convention\nconst McTreeSelectMixinBase: CanDisableCtor & HasTabIndexCtor & CanUpdateErrorStateCtor &\n    typeof McTreeSelectBase = mixinTabIndex(mixinDisabled(mixinErrorState(McTreeSelectBase)));\n\n\n@Component({\n    selector: 'mc-tree-select',\n    exportAs: 'mcTreeSelect',\n    templateUrl: 'tree-select.html',\n    styleUrls: ['./tree-select.css'],\n    inputs: ['disabled', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'tabIndex',\n\n        class: 'mc-tree-select',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-select-invalid]': 'errorState',\n        '[class.mc-select-required]': 'required',\n\n        '(keydown)': 'handleKeydown($event)',\n        '(focus)': 'onFocus()',\n        '(blur)': 'onBlur()',\n        '(window:resize)': 'calculateHiddenItems()'\n    },\n    animations: [\n        mcSelectAnimations.transformPanel,\n        mcSelectAnimations.fadeInContent\n    ],\n    providers: [\n        { provide: McFormFieldControl, useExisting: McTreeSelect },\n        { provide: CdkTree, useExisting: McTreeSelect }\n    ]\n})\nexport class McTreeSelect extends McTreeSelectMixinBase implements\n    AfterContentInit, AfterViewInit, OnChanges, OnDestroy, OnInit, DoCheck, ControlValueAccessor,\n    CanDisable, HasTabIndex, McFormFieldControl<any>, CanUpdateErrorState {\n\n    /** A name for this control that can be used by `mc-form-field`. */\n    controlType = 'mc-select';\n\n    hiddenItems: number = 0;\n    oneMoreText: string = '...ещё';\n\n    /** The last measured value for the trigger's client bounding rect. */\n    triggerRect: ClientRect;\n\n    /** The cached font-size of the trigger element. */\n    triggerFontSize = 0;\n\n    /** Deals with the selection logic. */\n    selectionModel: SelectionModel<McTreeOption>;\n\n    /** The IDs of child options to be passed to the aria-owns attribute. */\n    optionIds: string = '';\n\n    /** The value of the select panel's transform-origin property. */\n    transformOrigin: string = 'top';\n\n    /** Whether the panel's animation is done. */\n    panelDoneAnimating: boolean = false;\n\n    /** Emits when the panel element is finished transforming in. */\n    panelDoneAnimatingStream = new Subject<string>();\n\n    /** Strategy that will be used to handle scrolling while the select panel is open. */\n    scrollStrategy = this.scrollStrategyFactory();\n\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     */\n    offsetY = 0;\n\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     */\n    positions = [\n        {\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top'\n        },\n        {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'bottom'\n        }\n    ];\n\n    @ViewChild('trigger') trigger: ElementRef;\n\n    @ViewChild('panel') panel: ElementRef;\n\n    @ViewChild(CdkConnectedOverlay) overlayDir: CdkConnectedOverlay;\n\n    @ViewChildren(McTag) tags: QueryList<McTag>;\n\n    /** User-supplied override of the trigger element. */\n    @ContentChild(McTreeSelectTrigger) customTrigger: McTreeSelectTrigger;\n\n    @ContentChild(McTreeSelection) tree: McTreeSelection;\n\n    /** Event emitted when the select panel has been toggled. */\n    @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the select has been opened. */\n    @Output('opened') readonly openedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => o), map(() => {}));\n\n    /** Event emitted when the select has been closed. */\n    @Output('closed') readonly closedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => !o), map(() => {}));\n\n    /** Event emitted when the selected value has been changed by the user. */\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectChange>();\n\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Classes to be passed to the select panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[] | Set<string> | { [key: string]: any };\n\n    /** Object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     */\n    @Input() sortComparator: (\n        a: McTreeOption, b: McTreeOption, options: McTreeOption[]\n    ) => number;\n\n    /** Combined stream of all of the child options' change events. */\n    readonly optionSelectionChanges: Observable<McTreeSelectChange> = defer(() => {\n        if (this.options) {\n            return merge(...this.options.map((option) => option.onSelectionChange));\n        }\n\n        return this.ngZone.onStable\n            .asObservable()\n            .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n    }) as Observable<McTreeSelectChange>;\n\n    options: QueryList<McTreeOption>;\n\n    private originalOnKeyDown: (event: KeyboardEvent) => void;\n\n    @Input()\n    get placeholder(): string {\n        return this._placeholder;\n    }\n\n    set placeholder(value: string) {\n        this._placeholder = value;\n\n        this.stateChanges.next();\n    }\n\n    private _placeholder: string;\n\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n\n        this.stateChanges.next();\n    }\n\n    private _required: boolean = false;\n\n    @Input()\n    get multiple(): boolean {\n        return this._multiple;\n    }\n\n    set multiple(value: boolean) {\n        if (this.selectionModel) {\n            throw getMcSelectDynamicMultipleError();\n        }\n\n        this._multiple = coerceBooleanProperty(value);\n    }\n\n    private _multiple: boolean = false;\n\n    @Input()\n    get autoSelect(): boolean {\n        if (this.multiple) { return false; }\n\n        return this._autoSelect;\n    }\n\n    set autoSelect(value: boolean) {\n        this._autoSelect = coerceBooleanProperty(value);\n    }\n\n    private _autoSelect: boolean = true;\n\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    @Input()\n    get compareWith() {\n        return this._compareWith;\n    }\n\n    set compareWith(fn: (o1: any, o2: any) => boolean) {\n        /* tslint:disable-next-line:strict-type-predicates */\n        if (typeof fn !== 'function') {\n            throw getMcSelectNonFunctionValueError();\n        }\n\n        this._compareWith = fn;\n\n        if (this.selectionModel) {\n            // A different comparator means the selection could change.\n            this.initializeSelection();\n        }\n    }\n\n    /** Value of the select control. */\n    @Input()\n    get value(): any {\n        return this._value;\n    }\n\n    set value(newValue: any) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n\n    private _value: any;\n\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this.uid;\n        this.stateChanges.next();\n    }\n\n    private _id: string;\n\n    /** Whether the select is focused. */\n    get focused(): boolean {\n        return this._focused || this._panelOpen;\n    }\n\n    /**\n     * @deprecated Setter to be removed as this property is intended to be readonly.\n     * @breaking-change 8.0.0\n     */\n    set focused(value: boolean) {\n        this._focused = value;\n    }\n\n    private _focused = false;\n\n    get panelOpen(): boolean {\n        return this._panelOpen;\n    }\n\n    private _panelOpen = false;\n\n    /** The scroll position of the overlay panel, calculated to center the selected option. */\n    private scrollTop = 0;\n\n    /** Unique id for this input. */\n    private readonly uid = `mc-select-${nextUniqueId++}`;\n\n    /** Emits whenever the component is destroyed. */\n    private readonly destroy = new Subject<void>();\n\n    constructor(\n        private readonly viewportRuler: ViewportRuler,\n        readonly changeDetectorRef: ChangeDetectorRef,\n        private readonly ngZone: NgZone,\n        private readonly renderer: Renderer2,\n        defaultErrorStateMatcher: ErrorStateMatcher,\n        public elementRef: ElementRef,\n        @Optional() private readonly dir: Directionality,\n        @Optional() parentForm: NgForm,\n        @Optional() parentFormGroup: FormGroupDirective,\n        @Optional() private readonly parentFormField: McFormField,\n        @Self() @Optional() public ngControl: NgControl,\n        @Attribute('tabindex') tabIndex: string,\n        @Inject(MC_SELECT_SCROLL_STRATEGY) private readonly scrollStrategyFactory\n    ) {\n        super(elementRef, defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\n\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnInit() {\n        if (this.tree) {\n            this.tree.multiple = this.multiple;\n        }\n\n        this.stateChanges.next();\n\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this.panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this.destroy))\n            .subscribe(() => {\n                if (this.panelOpen) {\n                    this.scrollTop = 0;\n                    this.openedChange.emit(true);\n                } else {\n                    this.openedChange.emit(false);\n                    this.panelDoneAnimating = false;\n                    this.overlayDir.offsetX = 0;\n                    this.changeDetectorRef.markForCheck();\n                }\n            });\n    }\n\n    ngAfterContentInit() {\n        if (!this.tree) { return; }\n\n        this.initKeyManager();\n\n        this.selectionModel = this.tree.selectionModel = new SelectionModel<McTreeOption>(this.multiple);\n        this.options = this.tree.options;\n        this.tree.autoSelect = this.autoSelect;\n\n        this.selectionModel.changed\n            .pipe(takeUntil(this.destroy))\n            .subscribe((event) => {\n                event.added.forEach((option) => option.select());\n                event.removed.forEach((option) => option.deselect());\n            });\n    }\n\n    ngAfterViewInit() {\n        if (!this.tree) { return; }\n\n        this.tags.changes\n            .subscribe(() => {\n                setTimeout(() => this.calculateHiddenItems(), 0);\n            });\n\n        this.options.changes\n            .pipe(startWith(null), takeUntil(this.destroy))\n            .subscribe(() => {\n                this.updateSelectedOptions();\n\n                this.resetOptions();\n            });\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) { this.updateErrorState(); }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes.disabled) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy() {\n        this.destroy.next();\n\n        this.destroy.complete();\n        this.stateChanges.complete();\n    }\n\n    /** `View -> model callback called when value changes` */\n    onChange: (value: any) => void = () => {};\n\n    /** `View -> model callback called when select has been touched` */\n    onTouched = () => {};\n\n    toggle() {\n        if (this.panelOpen) {\n            this.close();\n        } else {\n            this.open();\n        }\n    }\n\n    open() {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) { return; }\n\n        this.triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this.triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement)['font-size']);\n\n        this._panelOpen = true;\n        // this.tree.keyManager.withHorizontalOrientation(null);\n        this.calculateOverlayPosition();\n        this.highlightCorrectOption();\n        this.changeDetectorRef.markForCheck();\n\n        // Set the font size on the panel element once it exists.\n        this.ngZone.onStable.asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                if (this.triggerFontSize && this.overlayDir.overlayRef &&\n                    this.overlayDir.overlayRef.overlayElement) {\n                    this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this.triggerFontSize}px`;\n                }\n            });\n    }\n\n    /** Closes the overlay panel and focuses the host element. */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n\n            // this.tree.keyManager.setActiveItem(-1);\n\n            // this.tree.keyManager.withHorizontalOrientation(this.isRtl() ? 'rtl' : 'ltr');\n            this.changeDetectorRef.markForCheck();\n            this.onTouched();\n        }\n    }\n\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    // todo нужно доделать!\n    writeValue(value: any) {\n        if (this.options) {\n            this.setSelectionByValue(value);\n        }\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn: (value: any) => void) {\n        this.onChange = fn;\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn: () => {}) {\n        this.onTouched = fn;\n    }\n\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n        this.changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n\n    get selected(): McTreeOption | McTreeOption[] {\n        return this.multiple ? this.selectionModel.selected : this.selectionModel.selected[0];\n    }\n\n    get triggerValue(): string {\n        if (this.empty) { return ''; }\n\n        return (this.selected as McTreeOption).viewValue;\n    }\n\n    get triggerValues(): McTreeOption[] {\n        if (this.empty) { return []; }\n\n        const selectedOptions = this.selectionModel.selected;\n\n        if (this.isRtl()) { selectedOptions.reverse(); }\n\n        return selectedOptions;\n    }\n\n    get empty(): boolean {\n        return !this.selectionModel || this.selectionModel.isEmpty();\n    }\n\n    isRtl(): boolean {\n        return this.dir ? this.dir.value === 'rtl' : false;\n    }\n\n    handleKeydown(event: KeyboardEvent) {\n        if (!this.disabled) {\n            if (this.panelOpen) {\n                this.handleOpenKeydown(event);\n            } else {\n                this.handleClosedKeydown(event);\n            }\n        }\n    }\n\n    /**\n     * When the panel content is done fading in, the panelDoneAnimating property is\n     * set so the proper class can be added to the panel.\n     */\n    onFadeInDone() {\n        this.panelDoneAnimating = this.panelOpen;\n        this.changeDetectorRef.markForCheck();\n    }\n\n    onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    onBlur() {\n        this._focused = false;\n\n        if (!this.disabled && !this.panelOpen) {\n            this.onTouched();\n            this.changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n\n    /** Callback that is invoked when the overlay panel has been attached. */\n    onAttached() {\n        this.overlayDir.positionChange\n            .pipe(take(1))\n            .subscribe(() => {\n                this.changeDetectorRef.detectChanges();\n                this.calculateOverlayOffsetX();\n                this.panel.nativeElement.scrollTop = this.scrollTop;\n            });\n    }\n\n    /** Returns the theme to be used on the panel. */\n    getPanelTheme(): string {\n        return this.parentFormField ? `mc-${this.parentFormField.color}` : '';\n    }\n\n    /** Focuses the select element. */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    calculateOverlayScroll(selectedIndex: number, scrollBuffer: number, maxScroll: number): number {\n        const itemHeight = this.getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n\n        /* tslint:disable-next-line:no-magic-numbers */\n        const halfOptionHeight = itemHeight / 2;\n\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n\n    /** Invoked when an option is clicked. */\n    onRemoveSelectedOption(selectedOption: McTreeOption, $event) {\n        $event.stopPropagation();\n\n        this.options.forEach((option) => {\n            if (option.data === selectedOption.data) { option.deselect(); }\n        });\n\n        this.selectionModel.deselect(selectedOption);\n    }\n\n    calculateHiddenItems() {\n        if (this.empty || !this.multiple) { return; }\n\n        let visibleItems: number = 0;\n        const totalItemsWidth = this.getTotalItemsWidthInMatcher();\n        let totalVisibleItemsWidth: number = 0;\n        const itemMargin: number = 4;\n\n        this.tags.forEach((tag) => {\n            if (tag.nativeElement.offsetTop < tag.nativeElement.offsetHeight) {\n                totalVisibleItemsWidth += tag.nativeElement.getBoundingClientRect().width + itemMargin;\n                visibleItems++;\n            }\n        });\n\n        this.hiddenItems = this.selectionModel.selected.length - visibleItems;\n\n        if (this.hiddenItems) {\n            const itemsCounter = this.trigger.nativeElement.querySelector('.mc-tree-select__match-hidden-text');\n            const matcherList = this.trigger.nativeElement.querySelector('.mc-tree-select__match-list');\n\n            const itemsCounterShowed = itemsCounter.offsetTop < itemsCounter.offsetHeight;\n            // const itemsCounterWidth: number = itemsCounter.getBoundingClientRect().width;\n            const itemsCounterWidth: number = 86;\n\n            const matcherListWidth: number = matcherList.getBoundingClientRect().width;\n            const matcherWidth: number = matcherListWidth + itemsCounterWidth;\n\n            if (itemsCounterShowed && (totalItemsWidth < matcherWidth)) { this.hiddenItems = 0; }\n\n            if (\n                totalVisibleItemsWidth === matcherListWidth ||\n                (totalVisibleItemsWidth + itemsCounterWidth) < matcherListWidth\n            ) {\n                this.changeDetectorRef.markForCheck();\n\n                return ;\n            } else if (!itemsCounterShowed && (totalItemsWidth + itemsCounterWidth) > matcherWidth) {\n                this.hiddenItems++;\n            }\n        }\n\n        this.changeDetectorRef.markForCheck();\n    }\n\n    private updateSelectedOptions(): void {\n        this.selectionModel.selected.forEach((selectedOption) => {\n            this.options.forEach((option) => {\n                if (option.data === selectedOption.data) {\n                    this.selectionModel.deselect(selectedOption);\n                    this.selectionModel.select(option);\n\n                    option.select();\n                }\n            });\n        });\n    }\n\n    private getTotalItemsWidthInMatcher(): number {\n        const triggerClone = this.trigger.nativeElement.cloneNode(true);\n        triggerClone.querySelector('.mc-tree-select__match-hidden-text').remove();\n\n        this.renderer.setStyle(triggerClone, 'position', 'absolute');\n        this.renderer.setStyle(triggerClone, 'visibility', 'hidden');\n        this.renderer.setStyle(triggerClone, 'top', '-100%');\n        this.renderer.setStyle(triggerClone, 'left', '0');\n\n        this.renderer.appendChild(this.trigger.nativeElement, triggerClone);\n\n        let totalItemsWidth: number = 0;\n        const itemMargin: number = 4;\n        triggerClone.querySelectorAll('mc-tag').forEach((item) => {\n            totalItemsWidth += item.getBoundingClientRect().width as number + itemMargin;\n        });\n\n        triggerClone.remove();\n\n        return totalItemsWidth;\n    }\n\n    private handleClosedKeydown(event: KeyboardEvent) {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n\n        // Open the select on ALT + arrow key to match the native <select>\n        if (isOpenKey || ((this.multiple || event.altKey) && isArrowKey)) {\n            // prevents the page from scrolling down when pressing space\n            event.preventDefault();\n\n            this.open();\n        } else if (!this.multiple && this.tree.keyManager && this.tree.keyManager.onKeydown) {\n            this.tree.keyManager.onKeydown(event);\n        }\n    }\n\n    private handleOpenKeydown(event: KeyboardEvent) {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n\n        if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n\n            this.close();\n        } else if (keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW) {\n            return this.originalOnKeyDown.call(this.tree, event);\n        } else if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n\n            if (keyCode === HOME) {\n                this.tree.keyManager.setFirstItemActive();\n            } else {\n                this.tree.keyManager.setLastItemActive();\n            }\n        } else if ((keyCode === ENTER || keyCode === SPACE) && this.tree.keyManager.activeItem) {\n            event.preventDefault();\n\n            this.tree.keyManager.activeItem.selectViaInteraction();\n        } else if (this.multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n\n            const hasDeselectedOptions = this.options.some((option) => !option.selected);\n\n            this.options.forEach((option) => {\n                if (hasDeselectedOptions && !option.disabled) {\n                    option.select();\n                } else {\n                    option.deselect();\n                }\n            });\n        } else {\n            const previouslyFocusedIndex = this.tree.keyManager.activeItemIndex;\n\n            this.tree.keyManager.onKeydown(event);\n\n            if (this.multiple && isArrowKey && event.shiftKey && this.tree.keyManager.activeItem &&\n                this.tree.keyManager.activeItemIndex !== previouslyFocusedIndex) {\n                this.tree.keyManager.activeItem.selectViaInteraction();\n            }\n        }\n    }\n\n    private initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this.setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n        });\n    }\n\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    private setSelectionByValue(value: any | any[]) {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) { throw getMcSelectNonArrayValueError(); }\n\n            this.selectionModel.clear();\n            value.forEach((currentValue: any) => this.selectValue(currentValue));\n            this.sortValues();\n        } else {\n            this.selectionModel.clear();\n            const correspondingOption = this.selectValue(value);\n\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this.tree.keyManager.setActiveItem(correspondingOption);\n            }\n        }\n\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    private selectValue(value: any): McTreeOption | undefined {\n        const correspondingOption = this.options.find((option: McTreeOption) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            } catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n\n                return false;\n            }\n        });\n\n        if (correspondingOption) {\n            this.selectionModel.select(correspondingOption);\n        }\n\n        return correspondingOption;\n    }\n\n    private initKeyManager() {\n        this.originalOnKeyDown = this.tree.onKeyDown;\n\n        this.tree.onKeyDown = () => {};\n\n        this.tree.keyManager.tabOut\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => {\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            });\n\n        this.tree.keyManager.change\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => {\n                if (this._panelOpen && this.panel) {\n                    this.scrollActiveOptionIntoView();\n                } else if (!this._panelOpen && !this.multiple && this.tree.keyManager.activeItem) {\n                    this.tree.keyManager.activeItem.selectViaInteraction();\n                }\n            });\n    }\n\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    private resetOptions() {\n        const changedOrDestroyed = merge(this.options.changes, this.destroy);\n\n        this.optionSelectionChanges\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((event) => {\n                this.onSelect(event.source, event.isUserInput);\n\n                if (event.isUserInput && !this.multiple && this._panelOpen) {\n                    this.close();\n                    this.focus();\n                }\n            });\n\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        // merge(...this.options.map((option) => option.stateChanges))\n        //     .pipe(takeUntil(changedOrDestroyed))\n        //     .subscribe(() => {\n        //         this.changeDetectorRef.markForCheck();\n        //         this.stateChanges.next();\n        //     });\n\n        this.setOptionIds();\n    }\n\n    /** Invoked when an option is clicked. */\n    private onSelect(option: McTreeOption, isUserInput: boolean) {\n        const wasSelected = this.selectionModel.isSelected(option);\n\n        if (option.value == null && !this.multiple) {\n            option.deselect();\n            this.selectionModel.clear();\n            this.propagateChanges(option.value);\n        } else {\n            if (option.selected) {\n                this.selectionModel.select(option);\n            } else {\n                this.selectionModel.deselect(option);\n            }\n\n            if (isUserInput) {\n                this.tree.keyManager.setActiveItem(option);\n            }\n\n            if (this.multiple) {\n                this.sortValues();\n\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mc-option`.\n                    this.focus();\n                }\n            }\n        }\n\n        if (wasSelected !== this.selectionModel.isSelected(option)) {\n            this.propagateChanges();\n        }\n\n        this.stateChanges.next();\n    }\n\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    private sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n\n            this.selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n\n    /** Emits change event to set the model value. */\n    private propagateChanges(fallbackValue?: any) {\n        let valueToEmit: any = null;\n\n        if (this.multiple) {\n            valueToEmit = (this.selected as any).map((option) => option.value);\n        } else {\n            valueToEmit = this.selected ? (this.selected as any).value : fallbackValue;\n        }\n\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this.onChange(valueToEmit);\n        this.selectionChange.emit(new McTreeSelectChange(this as any, valueToEmit));\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** Records option IDs to pass to the aria-owns property. */\n    private setOptionIds() {\n        this.optionIds = this.options.map((option) => option.id).join(' ');\n    }\n\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    private highlightCorrectOption() {\n        if (this.tree.keyManager) {\n            if (this.empty) {\n                this.tree.keyManager.setFirstItemActive();\n            } else {\n                this.tree.keyManager.setActiveItem(this.selectionModel.selected[0]);\n            }\n        }\n    }\n\n    /** Scrolls the active option into view. */\n    private scrollActiveOptionIntoView() {\n        const activeOptionIndex = this.tree.keyManager.activeItemIndex || 0;\n\n        this.panel.nativeElement.scrollTop = getOptionScrollPosition(\n            activeOptionIndex,\n            this.getItemHeight(),\n            this.panel.nativeElement.scrollTop,\n            SELECT_PANEL_MAX_HEIGHT\n        );\n    }\n\n    /** Gets the index of the provided option in the option list. */\n    private getOptionIndex(option: McTreeOption): number | undefined {\n        // todo разобраться с этим срачем!\n        return this.options.reduce((result: number, current: McTreeOption, index: number) => {\n            /* tslint:disable-next-line:strict-type-predicates */\n            return result === undefined ? (option === current ? index : undefined) : result;\n        }, undefined);\n    }\n\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    private calculateOverlayPosition() {\n        const itemHeight = this.getItemHeight();\n        const items = this.getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n\n        // If no value is selected we open the popup to the first item.\n        const selectedOptionOffset =\n            this.empty ? 0 : this.getOptionIndex(this.selectionModel.selected[0])!;\n\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /* tslint:disable-next-line:no-magic-numbers */\n        const scrollBuffer = panelHeight / 2;\n        this.scrollTop = this.calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this.offsetY = this.calculateOverlayOffsetY();\n\n        this.checkOverlayWithinViewport(maxScroll);\n    }\n\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    private calculateOverlayOffsetX() {\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this.viewportRuler.getViewportSize();\n        const isRtl = this.isRtl();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const paddingWidth = SELECT_PANEL_PADDING_X * 2;\n        let offsetX: number = SELECT_PANEL_PADDING_X;\n\n        // Invert the offset in LTR.\n        if (!isRtl) { offsetX *= -1; }\n\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        } else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    private calculateOverlayOffsetY(): number {\n        // const itemHeight = this.getItemHeight();\n        // const optionHeightAdjustment = (itemHeight - this.triggerRect.height) / 2;\n\n        // todo I'm not sure that we will use it\n        return 0;\n        // return Math.round(-optionHeightAdjustment);\n    }\n\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    private checkOverlayWithinViewport(maxScroll: number) {\n        const itemHeight = this.getItemHeight();\n        const viewportSize = this.viewportRuler.getViewportSize();\n\n        const topSpaceAvailable = this.triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable =\n            viewportSize.height - this.triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n\n        const panelHeightTop = Math.abs(this.offsetY);\n        const totalPanelHeight =\n            Math.min(this.getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this.triggerRect.height;\n\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this.adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        } else if (panelHeightTop > topSpaceAvailable) {\n            this.adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        } else {\n            this.transformOrigin = this.getOriginBasedOnOption();\n        }\n    }\n\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    private adjustPanelUp(panelHeightBottom: number, bottomSpaceAvailable: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this.scrollTop -= distanceBelowViewport;\n        this.offsetY -= distanceBelowViewport;\n        this.transformOrigin = this.getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this.scrollTop <= 0) {\n            this.scrollTop = 0;\n            this.offsetY = 0;\n            this.transformOrigin = `50% bottom 0px`;\n        }\n    }\n\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    private adjustPanelDown(panelHeightTop: number, topSpaceAvailable: number, maxScroll: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this.scrollTop += distanceAboveViewport;\n        this.offsetY += distanceAboveViewport;\n        this.transformOrigin = this.getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this.scrollTop >= maxScroll) {\n            this.scrollTop = maxScroll;\n            this.offsetY = 0;\n            this.transformOrigin = `50% top 0px`;\n\n            return;\n        }\n    }\n\n    /** Sets the transform origin point based on the selected option. */\n    private getOriginBasedOnOption(): string {\n        const itemHeight = this.getItemHeight();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const optionHeightAdjustment = (itemHeight - this.triggerRect.height) / 2;\n        /* tslint:disable-next-line:no-magic-numbers */\n        const originY = Math.abs(this.offsetY) - optionHeightAdjustment + itemHeight / 2;\n\n        return `50% ${originY}px 0px`;\n    }\n\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    private getItemCount(): number {\n        return this.options.length;\n    }\n\n    /** Calculates the height of the select's options. */\n    private getItemHeight(): number {\n        // todo доделать\n        /* tslint:disable-next-line:no-magic-numbers */\n        return 32;\n        // return this.triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n\n    /** Comparison function to specify which option is displayed. Defaults to object equality. */\n    private _compareWith = (o1: any, o2: any) => o1 === o2;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { MC_SELECT_SCROLL_STRATEGY_PROVIDER, McOptionModule } from '@ptsecurity/mosaic/core';\nimport { McFormFieldModule } from '@ptsecurity/mosaic/form-field';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport { McTagsModule } from '@ptsecurity/mosaic/tags';\n\nimport { McSelect, McSelectTrigger } from './select.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        McOptionModule,\n        McIconModule,\n        McTagsModule\n    ],\n    exports: [McFormFieldModule, McSelect, McSelectTrigger, McOptionModule, CommonModule],\n    declarations: [McSelect, McSelectTrigger],\n    providers: [MC_SELECT_SCROLL_STRATEGY_PROVIDER]\n})\nexport class McSelectModule {}\n","/* tslint:disable:no-empty */\n\nimport {\n    AfterContentInit, AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren,\n    Directive,\n    DoCheck,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Input,\n    isDevMode,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    QueryList, Renderer2,\n    Self,\n    SimpleChanges,\n    ViewChild, ViewChildren,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { ActiveDescendantKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    RIGHT_ARROW,\n    SPACE,\n    UP_ARROW,\n    A\n} from '@ptsecurity/cdk/keycodes';\nimport {\n    CdkConnectedOverlay,\n    ViewportRuler\n} from '@ptsecurity/cdk/overlay';\nimport {\n    countGroupLabelsBeforeOption,\n    getOptionScrollPosition,\n    CanDisable,\n    CanDisableCtor,\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    HasTabIndex,\n    HasTabIndexCtor,\n    MC_OPTION_PARENT_COMPONENT,\n    McOptgroup,\n    McOption,\n    McOptionSelectionChange,\n    mixinDisabled,\n    mixinErrorState,\n    mixinTabIndex,\n    mcSelectAnimations,\n\n    SELECT_PANEL_INDENT_PADDING_X,\n    SELECT_PANEL_MAX_HEIGHT,\n    SELECT_PANEL_PADDING_X,\n    SELECT_PANEL_VIEWPORT_PADDING,\n\n    getMcSelectDynamicMultipleError,\n    getMcSelectNonFunctionValueError,\n    getMcSelectNonArrayValueError,\n    MC_SELECT_SCROLL_STRATEGY\n} from '@ptsecurity/mosaic/core';\nimport { McFormField, McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { McTag } from '@ptsecurity/mosaic/tags';\nimport { defer, merge, Observable, Subject } from 'rxjs';\nimport {\n    filter,\n    map,\n    startWith,\n    switchMap,\n    take,\n    takeUntil,\n    distinctUntilChanged\n} from 'rxjs/operators';\n\n\nlet nextUniqueId = 0;\n\n/** The height of the select items in `em` units. */\nexport const SELECT_ITEM_HEIGHT_EM = 2;\n\n/** Change event object that is emitted when the select value has changed. */\nexport class McSelectChange {\n    constructor(public source: McSelect, public value: any) {}\n}\n\nexport class McSelectBase {\n    constructor(\n        public elementRef: ElementRef,\n        public defaultErrorStateMatcher: ErrorStateMatcher,\n        public parentForm: NgForm,\n        public parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl\n    ) {}\n}\n\nconst McSelectMixinBase: CanDisableCtor & HasTabIndexCtor & CanUpdateErrorStateCtor &\n    typeof McSelectBase = mixinTabIndex(mixinDisabled(mixinErrorState(McSelectBase)));\n\n\n@Directive({ selector: 'mc-select-trigger' })\nexport class McSelectTrigger {}\n\n\n@Component({\n    selector: 'mc-select',\n    exportAs: 'mcSelect',\n    templateUrl: 'select.html',\n    styleUrls: ['./select.css'],\n    inputs: ['disabled', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'tabIndex',\n        class: 'mc-select',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-select-invalid]': 'errorState',\n        '[class.mc-select-required]': 'required',\n        '(keydown)': 'handleKeydown($event)',\n        '(focus)': 'onFocus()',\n        '(blur)': 'onBlur()',\n        '(window:resize)': 'calculateHiddenItems()'\n    },\n    animations: [\n        mcSelectAnimations.transformPanel,\n        mcSelectAnimations.fadeInContent\n    ],\n    providers: [\n        { provide: McFormFieldControl, useExisting: McSelect },\n        { provide: MC_OPTION_PARENT_COMPONENT, useExisting: McSelect }\n    ]\n})\nexport class McSelect extends McSelectMixinBase implements\n    AfterContentInit, AfterViewInit, OnChanges, OnDestroy, OnInit, DoCheck, ControlValueAccessor, CanDisable,\n    HasTabIndex, McFormFieldControl<any>, CanUpdateErrorState {\n\n    /** A name for this control that can be used by `mc-form-field`. */\n    controlType = 'mc-select';\n\n    hiddenItems: number = 0;\n    oneMoreText: string = '...ещё';\n\n    /** The last measured value for the trigger's client bounding rect. */\n    triggerRect: ClientRect;\n\n    /** The cached font-size of the trigger element. */\n    triggerFontSize = 0;\n\n    /** Deals with the selection logic. */\n    selectionModel: SelectionModel<McOption>;\n\n    /** Manages keyboard events for options in the panel. */\n    keyManager: ActiveDescendantKeyManager<McOption>;\n\n    /** The IDs of child options to be passed to the aria-owns attribute. */\n    optionIds: string = '';\n\n    /** The value of the select panel's transform-origin property. */\n    transformOrigin: string = 'top';\n\n    /** Whether the panel's animation is done. */\n    panelDoneAnimating: boolean = false;\n\n    /** Emits when the panel element is finished transforming in. */\n    panelDoneAnimatingStream = new Subject<string>();\n\n    /** Strategy that will be used to handle scrolling while the select panel is open. */\n    scrollStrategy = this._scrollStrategyFactory();\n\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     */\n    offsetY = 0;\n\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     */\n    positions = [\n        {\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top'\n        },\n        {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'bottom'\n        }\n    ];\n\n    @ViewChild('trigger') trigger: ElementRef;\n\n    @ViewChild('panel') panel: ElementRef;\n\n    @ViewChild(CdkConnectedOverlay) overlayDir: CdkConnectedOverlay;\n\n    @ViewChildren(McTag) tags: QueryList<McTag>;\n\n    /** User-supplied override of the trigger element. */\n    @ContentChild(McSelectTrigger) customTrigger: McSelectTrigger;\n\n    /** All of the defined select options. */\n    @ContentChildren(McOption, { descendants: true }) options: QueryList<McOption>;\n\n    /** All of the defined groups of options. */\n    @ContentChildren(McOptgroup) optionGroups: QueryList<McOptgroup>;\n\n    /** Classes to be passed to the select panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[] | Set<string> | { [key: string]: any };\n\n    /** Object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     */\n    @Input() sortComparator: (a: McOption, b: McOption, options: McOption[]) => number;\n\n    /** Combined stream of all of the child options' change events. */\n    readonly optionSelectionChanges: Observable<McOptionSelectionChange> = defer(() => {\n        if (this.options) {\n            return merge(...this.options.map((option) => option.onSelectionChange));\n        }\n\n        return this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n    }) as Observable<McOptionSelectionChange>;\n\n    /** Event emitted when the select panel has been toggled. */\n    @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the select has been opened. */\n    @Output('opened') readonly openedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => o), map(() => {}));\n\n    /** Event emitted when the select has been closed. */\n    @Output('closed') readonly closedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => !o), map(() => {}));\n\n    /** Event emitted when the selected value has been changed by the user. */\n    @Output() readonly selectionChange: EventEmitter<McSelectChange> = new EventEmitter<McSelectChange>();\n\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n    @Input()\n    get placeholder(): string {\n        return this._placeholder;\n    }\n\n    set placeholder(value: string) {\n        this._placeholder = value;\n\n        this.stateChanges.next();\n    }\n\n    private _placeholder: string;\n\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n\n        this.stateChanges.next();\n    }\n\n    private _required: boolean = false;\n\n    @Input()\n    get multiple(): boolean {\n        return this._multiple;\n    }\n\n    set multiple(value: boolean) {\n        if (this.selectionModel) {\n            throw getMcSelectDynamicMultipleError();\n        }\n\n        this._multiple = coerceBooleanProperty(value);\n    }\n\n    private _multiple: boolean = false;\n\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    @Input()\n    get compareWith() {\n        return this._compareWith;\n    }\n\n    set compareWith(fn: (o1: any, o2: any) => boolean) {\n        /* tslint:disable-next-line:strict-type-predicates */\n        if (typeof fn !== 'function') {\n            throw getMcSelectNonFunctionValueError();\n        }\n\n        this._compareWith = fn;\n\n        if (this.selectionModel) {\n            // A different comparator means the selection could change.\n            this.initializeSelection();\n        }\n    }\n\n    /** Value of the select control. */\n    @Input()\n    get value(): any {\n        return this._value;\n    }\n\n    set value(newValue: any) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n\n    private _value: any;\n\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this.uid;\n        this.stateChanges.next();\n    }\n\n    private _id: string;\n\n    /** Whether the select is focused. */\n    get focused(): boolean {\n        return this._focused || this._panelOpen;\n    }\n\n    /**\n     * @deprecated Setter to be removed as this property is intended to be readonly.\n     * @breaking-change 8.0.0\n     */\n    set focused(value: boolean) {\n        this._focused = value;\n    }\n\n    private _focused = false;\n\n    get panelOpen(): boolean {\n        return this._panelOpen;\n    }\n\n    private _panelOpen = false;\n\n    /** The scroll position of the overlay panel, calculated to center the selected option. */\n    private scrollTop = 0;\n\n    /** Unique id for this input. */\n    private readonly uid = `mc-select-${nextUniqueId++}`;\n\n    /** Emits whenever the component is destroyed. */\n    private readonly destroy = new Subject<void>();\n\n    constructor(\n        private readonly _viewportRuler: ViewportRuler,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        private readonly _ngZone: NgZone,\n        private readonly _renderer: Renderer2,\n        defaultErrorStateMatcher: ErrorStateMatcher,\n        elementRef: ElementRef,\n        @Optional() private readonly _dir: Directionality,\n        @Optional() parentForm: NgForm,\n        @Optional() parentFormGroup: FormGroupDirective,\n        @Optional() private readonly _parentFormField: McFormField,\n        @Self() @Optional() public ngControl: NgControl,\n        @Attribute('tabindex') tabIndex: string,\n        @Inject(MC_SELECT_SCROLL_STRATEGY) private readonly _scrollStrategyFactory\n    ) {\n        super(elementRef, defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\n\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnInit() {\n        this.selectionModel = new SelectionModel<McOption>(this.multiple);\n        this.stateChanges.next();\n\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this.panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this.destroy))\n            .subscribe(() => {\n                if (this.panelOpen) {\n                    this.scrollTop = 0;\n                    this.openedChange.emit(true);\n                } else {\n                    this.openedChange.emit(false);\n                    this.panelDoneAnimating = false;\n                    this.overlayDir.offsetX = 0;\n                    this._changeDetectorRef.markForCheck();\n                }\n            });\n    }\n\n    ngAfterContentInit() {\n        this.initKeyManager();\n\n        this.selectionModel.changed\n            .pipe(takeUntil(this.destroy))\n            .subscribe((event) => {\n                event.added.forEach((option) => option.select());\n                event.removed.forEach((option) => option.deselect());\n            });\n\n        this.options.changes\n            .pipe(startWith(null), takeUntil(this.destroy))\n            .subscribe(() => {\n                this.resetOptions();\n                this.initializeSelection();\n            });\n    }\n\n    ngAfterViewInit(): void {\n        this.tags.changes\n            .subscribe(() => {\n                setTimeout(() => this.calculateHiddenItems(), 0);\n            });\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) { this.updateErrorState(); }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes.disabled) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy() {\n        this.destroy.next();\n        this.destroy.complete();\n        this.stateChanges.complete();\n    }\n\n    /** `View -> model callback called when value changes` */\n    _onChange: (value: any) => void = () => {};\n\n    /** `View -> model callback called when select has been touched` */\n    _onTouched = () => {};\n\n    /** Toggles the overlay panel open or closed. */\n    toggle(): void {\n        if (this.panelOpen) {\n            this.close();\n        } else {\n            this.open();\n        }\n    }\n\n    /** Opens the overlay panel. */\n    open(): void {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) { return; }\n\n        this.triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this.triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement)['font-size']);\n\n        this._panelOpen = true;\n        this.keyManager.withHorizontalOrientation(null);\n        this.calculateOverlayPosition();\n        this.highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                if (this.triggerFontSize && this.overlayDir.overlayRef && this.overlayDir.overlayRef.overlayElement) {\n                    this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this.triggerFontSize}px`;\n                }\n            });\n    }\n\n    /** Closes the overlay panel and focuses the host element. */\n    close(): void {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this.keyManager.withHorizontalOrientation(this.isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value: any): void {\n        if (this.options) {\n            this.setSelectionByValue(value);\n        }\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn: () => {}): void {\n        this._onTouched = fn;\n    }\n\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n\n    get selected(): McOption | McOption[] {\n        return this.multiple ? this.selectionModel.selected : this.selectionModel.selected[0];\n    }\n\n    get triggerValue(): string {\n        if (this.empty) { return ''; }\n\n        if (this._multiple) {\n            const selectedOptions = this.selectionModel.selected.map((option) => option.viewValue);\n\n            if (this.isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions.join(', ');\n        }\n\n        return this.selectionModel.selected[0].viewValue;\n    }\n\n    get triggerValues(): McOption[] {\n        if (this.empty) { return []; }\n\n        if (this._multiple) {\n            const selectedOptions = this.selectionModel.selected;\n\n            if (this.isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions;\n        }\n\n        return [this.selectionModel.selected[0]];\n    }\n\n    get empty(): boolean {\n        return !this.selectionModel || this.selectionModel.isEmpty();\n    }\n\n    isRtl(): boolean {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n\n    handleKeydown(event: KeyboardEvent): void {\n        if (!this.disabled) {\n            if (this.panelOpen) {\n                this.handleOpenKeydown(event);\n            } else {\n                this.handleClosedKeydown(event);\n            }\n        }\n    }\n\n    /**\n     * When the panel content is done fading in, the panelDoneAnimating property is\n     * set so the proper class can be added to the panel.\n     */\n    onFadeInDone(): void {\n        this.panelDoneAnimating = this.panelOpen;\n        this._changeDetectorRef.markForCheck();\n    }\n\n    onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    onBlur() {\n        this._focused = false;\n\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    onAttached(): void {\n        this.overlayDir.positionChange\n            .pipe(take(1))\n            .subscribe(() => {\n                this._changeDetectorRef.detectChanges();\n                this.calculateOverlayOffsetX();\n                this.panel.nativeElement.scrollTop = this.scrollTop;\n            });\n    }\n\n    /** Returns the theme to be used on the panel. */\n    getPanelTheme(): string {\n        return this._parentFormField ? `mc-${this._parentFormField.color}` : '';\n    }\n\n    /** Focuses the select element. */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    calculateOverlayScroll(selectedIndex: number, scrollBuffer: number, maxScroll: number): number {\n        const itemHeight = this.getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n\n        /* tslint:disable-next-line:no-magic-numbers */\n        const halfOptionHeight = itemHeight / 2;\n\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n\n    /** Invoked when an option is clicked. */\n    onRemoveMatcherItem(option: McOption, $event): void {\n        $event.stopPropagation();\n\n        option.deselect();\n    }\n\n    calculateHiddenItems(): void {\n        if (this.empty || !this.multiple) { return; }\n\n        let visibleItems: number = 0;\n        const totalItemsWidth = this.getTotalItemsWidthInMatcher();\n        let totalVisibleItemsWidth: number = 0;\n        const itemMargin: number = 4;\n\n        this.tags.forEach((tag) => {\n            if (tag.nativeElement.offsetTop < tag.nativeElement.offsetHeight) {\n                totalVisibleItemsWidth += tag.nativeElement.getBoundingClientRect().width + itemMargin;\n                visibleItems++;\n            }\n        });\n\n        this.hiddenItems = (this.selected as ArrayLike<McOption>).length - visibleItems;\n\n        if (this.hiddenItems) {\n            const itemsCounter = this.trigger.nativeElement.querySelector('.mc-select__match-hidden-text');\n            const matcherList = this.trigger.nativeElement.querySelector('.mc-select__match-list');\n\n            const itemsCounterShowed = itemsCounter.offsetTop < itemsCounter.offsetHeight;\n            // const itemsCounterWidth: number = itemsCounter.getBoundingClientRect().width;\n            const itemsCounterWidth: number = 86;\n\n            const matcherListWidth: number = matcherList.getBoundingClientRect().width;\n            const matcherWidth: number = matcherListWidth + itemsCounterWidth;\n\n            if (itemsCounterShowed && (totalItemsWidth < matcherWidth)) { this.hiddenItems = 0; }\n\n            if (\n                totalVisibleItemsWidth === matcherListWidth ||\n                (totalVisibleItemsWidth + itemsCounterWidth) < matcherListWidth\n            ) {\n                this._changeDetectorRef.markForCheck();\n\n                return ;\n            } else if (!itemsCounterShowed && (totalItemsWidth + itemsCounterWidth) > matcherWidth) {\n                this.hiddenItems++;\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    private getTotalItemsWidthInMatcher(): number {\n        const triggerClone = this.trigger.nativeElement.cloneNode(true);\n        triggerClone.querySelector('.mc-select__match-hidden-text').remove();\n\n        this._renderer.setStyle(triggerClone, 'position', 'absolute');\n        this._renderer.setStyle(triggerClone, 'visibility', 'hidden');\n        this._renderer.setStyle(triggerClone, 'top', '-100%');\n        this._renderer.setStyle(triggerClone, 'left', '0');\n\n        this._renderer.appendChild(this.trigger.nativeElement, triggerClone);\n\n        let totalItemsWidth: number = 0;\n        const itemMargin: number = 4;\n        triggerClone.querySelectorAll('mc-tag').forEach((item) => {\n            totalItemsWidth += item.getBoundingClientRect().width as number + itemMargin;\n        });\n\n        triggerClone.remove();\n\n        return totalItemsWidth;\n    }\n\n    /** Handles keyboard events while the select is closed. */\n    private handleClosedKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n\n        // Open the select on ALT + arrow key to match the native <select>\n        if (isOpenKey || ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        } else if (!this.multiple) {\n            this.keyManager.onKeydown(event);\n        }\n    }\n\n    /** Handles keyboard events when the selected is open. */\n    private handleOpenKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const manager = this.keyManager;\n\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n\n            if (keyCode === HOME) {\n                manager.setFirstItemActive();\n            } else {\n                manager.setLastItemActive();\n            }\n\n        } else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n        } else if ((keyCode === ENTER || keyCode === SPACE) && manager.activeItem) {\n            event.preventDefault();\n            manager.activeItem.selectViaInteraction();\n        } else if (this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some((option) => !option.selected);\n            this.options.forEach((option) => {\n                if (hasDeselectedOptions && !option.disabled) {\n                    option.select();\n                } else {\n                    option.deselect();\n                }\n            });\n        } else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n\n            manager.onKeydown(event);\n\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem.selectViaInteraction();\n            }\n        }\n    }\n\n    private initializeSelection(): void {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this.setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n        });\n    }\n\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    private setSelectionByValue(value: any | any[]): void {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMcSelectNonArrayValueError();\n            }\n\n            this.selectionModel.clear();\n            value.forEach((currentValue: any) => this.selectValue(currentValue));\n            this.sortValues();\n        } else {\n            this.selectionModel.clear();\n            const correspondingOption = this.selectValue(value);\n\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this.keyManager.setActiveItem(correspondingOption);\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    private selectValue(value: any): McOption | undefined {\n        const correspondingOption = this.options.find((option: McOption) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            } catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n\n                return false;\n            }\n        });\n\n        if (correspondingOption) {\n            this.selectionModel.select(correspondingOption);\n        }\n\n        return correspondingOption;\n    }\n\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    private initKeyManager() {\n        this.keyManager = new ActiveDescendantKeyManager<McOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this.isRtl() ? 'rtl' : 'ltr');\n\n        this.keyManager.tabOut\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => {\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            });\n\n        this.keyManager.change\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => {\n                if (this._panelOpen && this.panel) {\n                    this.scrollActiveOptionIntoView();\n                } else if (!this._panelOpen && !this.multiple && this.keyManager.activeItem) {\n                    this.keyManager.activeItem.selectViaInteraction();\n                }\n            });\n    }\n\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    private resetOptions(): void {\n        const changedOrDestroyed = merge(this.options.changes, this.destroy);\n\n        this.optionSelectionChanges\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((event) => {\n                this.onSelect(event.source, event.isUserInput);\n\n                if (event.isUserInput && !this.multiple && this._panelOpen) {\n                    this.close();\n                    this.focus();\n                }\n            });\n\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((option) => option.stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n                this.stateChanges.next();\n            });\n\n        this.setOptionIds();\n    }\n\n    /** Invoked when an option is clicked. */\n    private onSelect(option: McOption, isUserInput: boolean): void {\n        const wasSelected = this.selectionModel.isSelected(option);\n\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this.selectionModel.clear();\n            this.propagateChanges(option.value);\n        } else {\n            if (option.selected) {\n                this.selectionModel.select(option);\n            } else {\n                this.selectionModel.deselect(option);\n            }\n\n            if (isUserInput) {\n                this.keyManager.setActiveItem(option);\n            }\n\n            if (this.multiple) {\n                this.sortValues();\n\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mc-option`.\n                    this.focus();\n                }\n            }\n        }\n\n        if (wasSelected !== this.selectionModel.isSelected(option)) {\n            this.propagateChanges();\n        }\n\n        this.stateChanges.next();\n    }\n\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    private sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n\n            this.selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n\n    /** Emits change event to set the model value. */\n    private propagateChanges(fallbackValue?: any): void {\n        let valueToEmit: any = null;\n\n        if (this.multiple) {\n            valueToEmit = (this.selected as McOption[]).map((option) => option.value);\n        } else {\n            valueToEmit = this.selected ? (this.selected as McOption).value : fallbackValue;\n        }\n\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new McSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /** Records option IDs to pass to the aria-owns property. */\n    private setOptionIds() {\n        this.optionIds = this.options.map((option) => option.id).join(' ');\n    }\n\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    private highlightCorrectOption(): void {\n        if (this.keyManager) {\n            if (this.empty) {\n                this.keyManager.setFirstItemActive();\n            } else {\n                this.keyManager.setActiveItem(this.selectionModel.selected[0]);\n            }\n        }\n    }\n\n    /** Scrolls the active option into view. */\n    private scrollActiveOptionIntoView(): void {\n        const activeOptionIndex = this.keyManager.activeItemIndex || 0;\n        const labelCount = countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n\n        this.panel.nativeElement.scrollTop = getOptionScrollPosition(\n            activeOptionIndex + labelCount,\n            this.getItemHeight(),\n            this.panel.nativeElement.scrollTop,\n            SELECT_PANEL_MAX_HEIGHT\n        );\n    }\n\n    /** Gets the index of the provided option in the option list. */\n    private getOptionIndex(option: McOption): number | undefined {\n        /* tslint:disable-next-line */\n        return this.options.reduce((result: number, current: McOption, index: number) => {\n            /* tslint:disable-next-line:strict-type-predicates */\n            return result === undefined ? (option === current ? index : undefined) : result;\n        }, undefined);\n    }\n\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    private calculateOverlayPosition(): void {\n        const itemHeight = this.getItemHeight();\n        const items = this.getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset =\n            this.empty ? 0 : this.getOptionIndex(this.selectionModel.selected[0])!;\n\n        selectedOptionOffset += countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /* tslint:disable-next-line:no-magic-numbers */\n        const scrollBuffer = panelHeight / 2;\n        this.scrollTop = this.calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this.offsetY = this.calculateOverlayOffsetY();\n\n        this.checkOverlayWithinViewport(maxScroll);\n    }\n\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    private calculateOverlayOffsetX(): void {\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this.isRtl();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const paddingWidth = SELECT_PANEL_PADDING_X * 2;\n        let offsetX: number;\n\n        const selected = this.selectionModel.selected[0] || this.options.first;\n        offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n\n        // Invert the offset in LTR.\n        if (!isRtl) { offsetX *= -1; }\n\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        } else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    private calculateOverlayOffsetY(): number {\n        // const itemHeight = this.getItemHeight();\n        // const optionHeightAdjustment = (itemHeight - this.triggerRect.height) / 2;\n\n        // todo I'm not sure that we will use it\n        return 0;\n        // return Math.round(-optionHeightAdjustment);\n    }\n\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    private checkOverlayWithinViewport(maxScroll: number): void {\n        const itemHeight = this.getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n\n        const topSpaceAvailable = this.triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable =\n            viewportSize.height - this.triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n\n        const panelHeightTop = Math.abs(this.offsetY);\n        const totalPanelHeight =\n            Math.min(this.getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this.triggerRect.height;\n\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this.adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        } else if (panelHeightTop > topSpaceAvailable) {\n            this.adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        } else {\n            this.transformOrigin = this.getOriginBasedOnOption();\n        }\n    }\n\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    private adjustPanelUp(panelHeightBottom: number, bottomSpaceAvailable: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this.scrollTop -= distanceBelowViewport;\n        this.offsetY -= distanceBelowViewport;\n        this.transformOrigin = this.getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this.scrollTop <= 0) {\n            this.scrollTop = 0;\n            this.offsetY = 0;\n            this.transformOrigin = `50% bottom 0px`;\n        }\n    }\n\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    private adjustPanelDown(panelHeightTop: number, topSpaceAvailable: number, maxScroll: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this.scrollTop += distanceAboveViewport;\n        this.offsetY += distanceAboveViewport;\n        this.transformOrigin = this.getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this.scrollTop >= maxScroll) {\n            this.scrollTop = maxScroll;\n            this.offsetY = 0;\n            this.transformOrigin = `50% top 0px`;\n\n            return;\n        }\n    }\n\n    /** Sets the transform origin point based on the selected option. */\n    private getOriginBasedOnOption(): string {\n        const itemHeight = this.getItemHeight();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const optionHeightAdjustment = (itemHeight - this.triggerRect.height) / 2;\n        /* tslint:disable-next-line:no-magic-numbers */\n        const originY = Math.abs(this.offsetY) - optionHeightAdjustment + itemHeight / 2;\n\n        return `50% ${originY}px 0px`;\n    }\n\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    private getItemCount(): number {\n        return this.options.length + this.optionGroups.length;\n    }\n\n    /** Calculates the height of the select's options. */\n    private getItemHeight(): number {\n        // todo доделать\n        /* tslint:disable-next-line:no-magic-numbers */\n        return 32;\n        // return this.triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n\n    /** Comparison function to specify which option is displayed. Defaults to object equality. */\n    private _compareWith = (o1: any, o2: any) => o1 === o2;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ENTER } from '@ptsecurity/cdk/keycodes';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { MC_TAGS_DEFAULT_OPTIONS, McTagsDefaultOptions } from './tag-default-options';\nimport { McTagInput } from './tag-input';\nimport { McTagList } from './tag-list.component';\nimport { McTag, McTagAvatar, McTagRemove, McTagTrailingIcon } from './tag.component';\n\n\n@NgModule({\n    imports: [CommonModule, PlatformModule],\n    exports: [\n        McTagList,\n        McTag,\n        McTagInput,\n        McTagTrailingIcon,\n        McTagAvatar,\n        McTagRemove\n    ],\n    declarations: [\n        McTagList,\n        McTag,\n        McTagInput,\n        McTagTrailingIcon,\n        McTagAvatar,\n        McTagRemove\n    ],\n    providers: [{\n        provide: MC_TAGS_DEFAULT_OPTIONS,\n        // tslint:disable-next-line: no-object-literal-type-assertion\n        useValue: { separatorKeyCodes: [ENTER] } as McTagsDefaultOptions\n    }]\n})\nexport class McTagsModule {}\n","import { Directive, ElementRef, EventEmitter, Inject, Input, OnChanges, Output } from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { hasModifierKey } from '@ptsecurity/cdk/keycodes';\n\nimport { MC_TAGS_DEFAULT_OPTIONS, McTagsDefaultOptions } from './tag-default-options';\nimport { McTagList } from './tag-list.component';\nimport { McTagTextControl } from './tag-text-control';\n\n\n/** Represents an input event on a `mcTagInput`. */\n// tslint:disable-next-line: naming-convention\nexport interface McTagInputEvent {\n    /** The native `<input>` element that the event is being fired for. */\n    input: HTMLInputElement;\n\n    /** The value of the input. */\n    value: string;\n}\n\n// Increasing integer for generating unique ids.\nlet nextUniqueId = 0;\n\n/**\n * Directive that adds tag-specific behaviors to an input element inside `<mc-form-field>`.\n * May be placed inside or outside of an `<mc-tag-list>`.\n */\n@Directive({\n    selector: 'input[mcTagInputFor]',\n    exportAs: 'mcTagInput, mcTagInputFor',\n    host: {\n        class: 'mc-tag-input mc-input-element',\n        '[id]': 'id',\n        '[attr.disabled]': 'disabled || null',\n        '[attr.placeholder]': 'placeholder || null',\n        '[attr.aria-invalid]': '_tagList && _tagList.ngControl ? _tagList.ngControl.invalid : null',\n        '(keydown)': 'keydown($event)',\n        '(blur)': 'blur()',\n        '(focus)': 'onFocus()',\n        '(input)': 'onInput()'\n    }\n})\nexport class McTagInput implements McTagTextControl, OnChanges {\n    /** Whether the control is focused. */\n    focused: boolean = false;\n\n    /**\n     * The list of key codes that will trigger a tagEnd event.\n     *\n     * Defaults to `[ENTER]`.\n     */\n    @Input('mcTagInputSeparatorKeyCodes')\n    separatorKeyCodes: number[] | Set<number> = this.defaultOptions.separatorKeyCodes;\n\n    /** Emitted when a tag is to be added. */\n    @Output('mcTagInputTokenEnd')\n    tagEnd: EventEmitter<McTagInputEvent> = new EventEmitter<McTagInputEvent>();\n\n    /** The input's placeholder text. */\n    @Input() placeholder: string = '';\n\n    /** Unique id for the input. */\n    @Input() id: string = `mc-tag-list-input-${nextUniqueId++}`;\n\n    /** Register input for tag list */\n    @Input('mcTagInputFor')\n    set tagList(value: McTagList) {\n        if (value) {\n            this._tagList = value;\n            this._tagList.registerInput(this);\n        }\n    }\n\n    // tslint:disable-next-line: naming-convention\n    _tagList: McTagList;\n\n    /**\n     * Whether or not the tagEnd event will be emitted when the input is blurred.\n     */\n    @Input('mcTagInputAddOnBlur')\n    get addOnBlur(): boolean {\n        return this._addOnBlur;\n    }\n\n    set addOnBlur(value: boolean) {\n        this._addOnBlur = coerceBooleanProperty(value);\n    }\n\n    private _addOnBlur: boolean = false;\n\n    /** Whether the input is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled || (this._tagList && this._tagList.disabled);\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    private _disabled: boolean = false;\n\n    /** Whether the input is empty. */\n    get empty(): boolean {\n        return !this.inputElement.value;\n    }\n\n    /** The native input element to which this directive is attached. */\n    private inputElement: HTMLInputElement;\n\n    constructor(\n        private elementRef: ElementRef<HTMLInputElement>,\n        @Inject(MC_TAGS_DEFAULT_OPTIONS) private defaultOptions: McTagsDefaultOptions\n    ) {\n        // tslint:disable-next-line: no-unnecessary-type-assertion\n        this.inputElement = this.elementRef.nativeElement as HTMLInputElement;\n    }\n\n    ngOnChanges() {\n        this._tagList.stateChanges.next();\n    }\n\n    /** Utility method to make host definition/tests more clear. */\n    keydown(event?: KeyboardEvent) {\n        this.emittagEnd(event);\n    }\n\n    /** Checks to see if the blur should emit the (tagEnd) event. */\n    blur() {\n        if (this.addOnBlur) {\n            this.emittagEnd();\n        }\n\n        this.focused = false;\n        // Blur the tag list if it is not focused\n        if (!this._tagList.focused) {\n            this._tagList.blur();\n        }\n\n        this._tagList.stateChanges.next();\n    }\n\n    /** Checks to see if the (tagEnd) event needs to be emitted. */\n    emittagEnd(event?: KeyboardEvent) {\n        if (!this.inputElement.value && !!event) {\n            this._tagList.keydown(event);\n        }\n\n        if (!event || this.isSeparatorKey(event)) {\n            this.tagEnd.emit({ input: this.inputElement, value: this.inputElement.value });\n\n            if (event) {\n                event.preventDefault();\n            }\n        }\n    }\n\n    onInput() {\n        // Let tag list know whenever the value changes.\n        this._tagList.stateChanges.next();\n    }\n\n    onFocus() {\n        this.focused = true;\n        this._tagList.stateChanges.next();\n    }\n\n    /** Focuses the input. */\n    focus(): void {\n        this.inputElement.focus();\n    }\n\n    /** Checks whether a keycode is one of the configured separators. */\n    private isSeparatorKey(event: KeyboardEvent) {\n        if (hasModifierKey(event)) { return false; }\n\n        const separators = this.separatorKeyCodes;\n        // tslint:disable-next-line: deprecation\n        const keyCode = event.keyCode;\n\n        return Array.isArray(separators) ? separators.indexOf(keyCode) > -1 : separators.has(keyCode);\n    }\n}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    DoCheck,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    QueryList,\n    Self,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { BACKSPACE, END, HOME } from '@ptsecurity/cdk/keycodes';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { merge, Observable, Subject, Subscription } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\n\nimport { McTagTextControl } from './tag-text-control';\nimport { McTag, McTagEvent, McTagSelectionChange } from './tag.component';\n\n\nexport class McTagListBase {\n    constructor(\n        public defaultErrorStateMatcher: ErrorStateMatcher,\n        public parentForm: NgForm,\n        public parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl\n    ) {\n    }\n}\n\n// tslint:disable-next-line:naming-convention\nexport const _McTagListMixinBase: CanUpdateErrorStateCtor & typeof McTagListBase = mixinErrorState(McTagListBase);\n\n\n// Increasing integer for generating unique ids for tag-list components.\nlet nextUniqueId = 0;\n\n/** Change event object that is emitted when the tag list value has changed. */\nexport class McTagListChange {\n    constructor(public source: McTagList, public value: any) {}\n}\n\n\n@Component({\n    selector: 'mc-tag-list',\n    exportAs: 'mcTagList',\n    template: '<ng-content></ng-content>',\n    host: {\n        class: 'mc-tag-list',\n        '[attr.tabindex]': 'disabled ? null : _tabIndex',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-invalid]': 'errorState',\n        '[class.mc-required]': 'required',\n        '(focus)': 'focus()',\n        '(blur)': 'blur()',\n        '(keydown)': 'keydown($event)',\n        '[id]': 'uid'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McTagList }],\n    styleUrls: ['tag-list.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McTagList extends _McTagListMixinBase implements McFormFieldControl<any>,\n    ControlValueAccessor, AfterContentInit, DoCheck, OnInit, OnDestroy, CanUpdateErrorState {\n\n    readonly controlType: string = 'mc-tag-list';\n\n    /** Combined stream of all of the child tags' selection change events. */\n    get tagSelectionChanges(): Observable<McTagSelectionChange> {\n        return merge(...this.tags.map((tag) => tag.selectionChange));\n    }\n\n    /** Combined stream of all of the child tags' focus change events. */\n    get tagFocusChanges(): Observable<McTagEvent> {\n        return merge(...this.tags.map((tag) => tag.onFocus));\n    }\n\n    /** Combined stream of all of the child tags' blur change events. */\n    get tagBlurChanges(): Observable<McTagEvent> {\n        return merge(...this.tags.map((tag) => tag.onBlur));\n    }\n\n    /** Combined stream of all of the child tags' remove change events. */\n    get tagRemoveChanges(): Observable<McTagEvent> {\n        return merge(...this.tags.map((tag) => tag.destroyed));\n    }\n\n    /** The array of selected tags inside tag list. */\n    get selected(): McTag[] | McTag {\n        return this.multiple ? this.selectionModel.selected : this.selectionModel.selected[0];\n    }\n\n    /** Whether the user should be allowed to select multiple tags. */\n    @Input()\n    get multiple(): boolean {\n        return this._multiple;\n    }\n\n    set multiple(value: boolean) {\n        this._multiple = coerceBooleanProperty(value);\n    }\n\n    /**\n     * A function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    @Input()\n    get compareWith(): (o1: any, o2: any) => boolean {\n        return this._compareWith;\n    }\n\n    set compareWith(fn: (o1: any, o2: any) => boolean) {\n        this._compareWith = fn;\n\n        if (this.selectionModel) {\n            // A different comparator means the selection could change.\n            this.initializeSelection();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): any {\n        return this._value;\n    }\n\n    set value(value: any) {\n        this.writeValue(value);\n        this._value = value;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get id(): string {\n        return this.tagInput ? this.tagInput.id : this.uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get placeholder(): string {\n        return this.tagInput ? this.tagInput.placeholder : this._placeholder;\n    }\n\n    set placeholder(value: string) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n\n    /** Whether any tags or the mcTagInput inside of this tag-list has focus. */\n    get focused(): boolean {\n        return (this.tagInput && this.tagInput.focused) || this.hasFocusedTag();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return (!this.tagInput || this.tagInput.empty) && this.tags.length === 0;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat(): boolean {\n        return !this.empty || this.focused;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        return this.ngControl ? !!this.ngControl.disabled : this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n        this.syncTagsDisabledState();\n    }\n\n    /**\n     * Whether or not this tag list is selectable. When a tag list is not selectable,\n     * the selected states for all the tags inside the tag list are always ignored.\n     */\n    @Input()\n    get selectable(): boolean {\n        return this._selectable;\n    }\n\n    set selectable(value: boolean) {\n        this._selectable = coerceBooleanProperty(value);\n\n        if (this.tags) {\n            this.tags.forEach((tag) => tag.tagListSelectable = this._selectable);\n        }\n    }\n\n    @Input()\n    set tabIndex(value: number) {\n        this.userTabIndex = value;\n        this._tabIndex = value;\n    }\n\n    /**\n     * Event that emits whenever the raw value of the tag-list changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n    uid: string = `mc-tag-list-${nextUniqueId++}`;\n\n    /**\n     * User defined tab index.\n     * When it is not null, use user defined tab index. Otherwise use tabIndex\n     */\n    userTabIndex: number | null = null;\n\n    keyManager: FocusKeyManager<McTag>;\n\n    selectionModel: SelectionModel<McTag>;\n\n    tagChanges = new EventEmitter<any>();\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /** Orientation of the tag list. */\n    @Input('orientation') orientation: 'horizontal' | 'vertical' = 'horizontal';\n\n    /** Event emitted when the selected tag list value has been changed by the user. */\n    @Output() readonly change: EventEmitter<McTagListChange> = new EventEmitter<McTagListChange>();\n\n    /** The tag components contained within this tag list. */\n    @ContentChildren(McTag) tags: QueryList<McTag>;\n\n    _tabIndex = 0;\n\n    private _value: any;\n\n    private _required: boolean = false;\n\n    private _placeholder: string;\n\n    private _disabled: boolean = false;\n\n    private _selectable: boolean = true;\n\n    /** The tag input to add more tags */\n    private tagInput: McTagTextControl;\n\n    private _multiple: boolean = false;\n\n    /**\n     * When a tag is destroyed, we store the index of the destroyed tag until the tags\n     * query list notifies about the update. This is necessary because we cannot determine an\n     * appropriate tag that should receive focus until the array of tags updated completely.\n     */\n    private lastDestroyedTagIndex: number | null = null;\n\n    /** Subject that emits when the component has been destroyed. */\n    private destroyed = new Subject<void>();\n\n    /** Subscription to focus changes in the tags. */\n    private tagFocusSubscription: Subscription | null;\n\n    /** Subscription to blur changes in the tags. */\n    private tagBlurSubscription: Subscription | null;\n\n    /** Subscription to selection changes in tags. */\n    private tagSelectionSubscription: Subscription | null;\n\n    /** Subscription to remove changes in tags. */\n    private tagRemoveSubscription: Subscription | null;\n\n    constructor(\n        protected elementRef: ElementRef<HTMLElement>,\n        private changeDetectorRef: ChangeDetectorRef,\n        defaultErrorStateMatcher: ErrorStateMatcher,\n        @Optional() private dir: Directionality,\n        @Optional() parentForm: NgForm,\n        @Optional() parentFormGroup: FormGroupDirective,\n        @Optional() @Self() public ngControl: NgControl\n    ) {\n        super(defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\n\n        if (this.ngControl) {\n            this.ngControl.valueAccessor = this;\n        }\n    }\n\n    ngAfterContentInit() {\n        this.keyManager = new FocusKeyManager<McTag>(this.tags)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this.dir ? this.dir.value : 'ltr');\n\n        if (this.dir) {\n            this.dir.change\n                .pipe(takeUntil(this.destroyed))\n                .subscribe((dir) => this.keyManager.withHorizontalOrientation(dir));\n        }\n\n        // Prevents the tag list from capturing focus and redirecting\n        // it back to the first tag when the user tabs out.\n        this.keyManager.tabOut\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(() => {\n                this._tabIndex = -1;\n\n                setTimeout(() => {\n                    this._tabIndex = this.userTabIndex || 0;\n                    this.changeDetectorRef.markForCheck();\n                });\n            });\n\n        // When the list changes, re-subscribe\n        this.tags.changes\n            .pipe(startWith(null), takeUntil(this.destroyed))\n            .subscribe(() => {\n                if (this.disabled) {\n                    // Since this happens after the content has been\n                    // checked, we need to defer it to the next tick.\n                    Promise.resolve().then(() => { this.syncTagsDisabledState(); });\n                }\n\n                this.resetTags();\n\n                // Reset tags selected/deselected status\n                this.initializeSelection();\n\n                // Check to see if we need to update our tab index\n                this.updateTabIndex();\n\n                // Check to see if we have a destroyed tag and need to refocus\n                this.updateFocusForDestroyedTags();\n\n                // Defer setting the value in order to avoid the \"Expression\n                // has changed after it was checked\" errors from Angular.\n                Promise.resolve().then(() => { this.tagChanges.emit(this.tags.toArray()); });\n\n                this.stateChanges.next();\n            });\n    }\n\n    ngOnInit() {\n        this.selectionModel = new SelectionModel<McTag>(this.multiple, undefined, false);\n        this.stateChanges.next();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n    }\n\n    ngOnDestroy() {\n        this.destroyed.next();\n        this.destroyed.complete();\n        this.stateChanges.complete();\n\n        this.dropSubscriptions();\n    }\n\n    // tslint:disable-next-line:no-empty\n    onTouched = () => {};\n\n    // tslint:disable-next-line:no-empty\n    onChange: (value: any) => void = () => {};\n\n    /** Associates an HTML input element with this tag list. */\n    registerInput(inputElement: McTagTextControl): void {\n        this.tagInput = inputElement;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value: any): void {\n        if (this.tags) {\n            this.setSelectionByValue(value, false);\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this.onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this.stateChanges.next();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick(event: MouseEvent) {\n        if (!this.originatesFromTag(event)) {\n            this.focus();\n        }\n    }\n\n    /**\n     * Focuses the first non-disabled tag in this tag list, or the associated input when there\n     * are no eligible tags.\n     */\n    focus(): void {\n        if (this.disabled) { return; }\n\n        // TODO: ARIA says this should focus the first `selected` tag if any are selected.\n        // Focus on first element if there's no tagInput inside tag-list\n        if (this.tagInput && this.tagInput.focused) {\n            // do nothing\n        } else if (this.tags.length > 0) {\n            this.keyManager.setFirstItemActive();\n            this.stateChanges.next();\n        } else {\n            this.focusInput();\n            this.stateChanges.next();\n        }\n    }\n\n    /** Attempt to focus an input if we have one. */\n    focusInput() {\n        if (this.tagInput) {\n            this.tagInput.focus();\n        }\n    }\n\n    /**\n     * Pass events to the keyboard manager. Available here for tests.\n     */\n    keydown(event: KeyboardEvent) {\n        const target = event.target as HTMLElement;\n\n        // If they are on an empty input and hit backspace, focus the last tag\n        // tslint:disable-next-line: deprecation\n        if (event.keyCode === BACKSPACE && this.isInputEmpty(target)) {\n            this.keyManager.setLastItemActive();\n            event.preventDefault();\n        } else if (target && target.classList.contains('mc-tag')) {\n            // tslint:disable-next-line: deprecation\n            if (event.keyCode === HOME) {\n                this.keyManager.setFirstItemActive();\n                event.preventDefault();\n            // tslint:disable-next-line: deprecation\n            } else if (event.keyCode === END) {\n                this.keyManager.setLastItemActive();\n                event.preventDefault();\n            } else {\n                this.keyManager.onKeydown(event);\n            }\n\n            this.stateChanges.next();\n        }\n    }\n\n    setSelectionByValue(value: any, isUserInput: boolean = true) {\n        this.clearSelection();\n        this.tags.forEach((tag) => tag.deselect());\n\n        if (Array.isArray(value)) {\n            value.forEach((currentValue) => this.selectValue(currentValue, isUserInput));\n            this.sortValues();\n        } else {\n            const correspondingTag = this.selectValue(value, isUserInput);\n\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what tag the user interacted with last.\n            if (correspondingTag && isUserInput) {\n                this.keyManager.setActiveItem(correspondingTag);\n            }\n        }\n    }\n\n    /** When blurred, mark the field as touched when focus moved outside the tag list. */\n    blur() {\n        if (!this.hasFocusedTag()) {\n            this.keyManager.setActiveItem(-1);\n        }\n\n        if (!this.disabled) {\n            if (this.tagInput) {\n                // If there's a tag input, we should check whether the focus moved to tag input.\n                // If the focus is not moved to tag input, mark the field as touched. If the focus moved\n                // to tag input, do nothing.\n                // Timeout is needed to wait for the focus() event trigger on tag input.\n                setTimeout(() => {\n                    if (!this.focused) {\n                        this.markAsTouched();\n                    }\n                });\n            } else {\n                // If there's no tag input, then mark the field as touched.\n                this.markAsTouched();\n            }\n        }\n    }\n\n    /** Mark the field as touched */\n    markAsTouched() {\n        this.onTouched();\n        this.changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n\n    /**\n     * Check the tab index as you should not be allowed to focus an empty list.\n     */\n    protected updateTabIndex(): void {\n        // If we have 0 tags, we should not allow keyboard focus\n        this._tabIndex = this.userTabIndex || (this.tags.length === 0 ? -1 : 0);\n    }\n\n    /**\n     * If the amount of tags changed, we need to update the\n     * key manager state and focus the next closest tag.\n     */\n    protected updateFocusForDestroyedTags() {\n        if (this.lastDestroyedTagIndex != null && this.tags.length) {\n            const newTagIndex = Math.min(this.lastDestroyedTagIndex, this.tags.length - 1);\n            this.keyManager.setActiveItem(newTagIndex);\n        } else if (this.tags.length === 0) {\n            this.focusInput();\n        }\n\n        this.lastDestroyedTagIndex = null;\n    }\n\n    private _compareWith = (o1: any, o2: any) => o1 === o2;\n\n    /**\n     * Utility to ensure all indexes are valid.\n     *\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of tags.\n     */\n    private isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.tags.length;\n    }\n\n    private isInputEmpty(element: HTMLElement): boolean {\n        if (element && element.nodeName.toLowerCase() === 'input') {\n            const input = element as HTMLInputElement;\n\n            return !input.value;\n        }\n\n        return false;\n    }\n\n    /**\n     * Finds and selects the tag based on its value.\n     * @returns Tag that has the corresponding value.\n     */\n    private selectValue(value: any, isUserInput: boolean = true): McTag | undefined {\n\n        const correspondingTag = this.tags.find((tag) => {\n            return tag.value != null && this._compareWith(tag.value, value);\n        });\n\n        if (correspondingTag) {\n            if (isUserInput) {\n                correspondingTag.selectViaInteraction();\n            } else {\n                correspondingTag.select();\n            }\n\n            this.selectionModel.select(correspondingTag);\n        }\n\n        return correspondingTag;\n    }\n\n    private initializeSelection(): void {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            if (this.ngControl || this._value) {\n                this.setSelectionByValue(this.ngControl ? this.ngControl.value : this._value, false);\n                this.stateChanges.next();\n            }\n        });\n    }\n\n    /**\n     * Deselects every tag in the list.\n     * @param skip Tag that should not be deselected.\n     */\n    private clearSelection(skip?: McTag): void {\n        this.selectionModel.clear();\n        this.tags.forEach((tag) => {\n            if (tag !== skip) {\n                tag.deselect();\n            }\n        });\n        this.stateChanges.next();\n    }\n\n    /**\n     * Sorts the model values, ensuring that they keep the same\n     * order that they have in the panel.\n     */\n    private sortValues(): void {\n        if (this._multiple) {\n            this.selectionModel.clear();\n\n            this.tags.forEach((tag) => {\n                if (tag.selected) {\n                    this.selectionModel.select(tag);\n                }\n            });\n            this.stateChanges.next();\n        }\n    }\n\n    /** Emits change event to set the model value. */\n    private propagateChanges(fallbackValue?: any): void {\n        let valueToEmit: any = null;\n\n        if (Array.isArray(this.selected)) {\n            valueToEmit = this.selected.map((tag) => tag.value);\n        } else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.change.emit(new McTagListChange(this, valueToEmit));\n        this.valueChange.emit(valueToEmit);\n        this.onChange(valueToEmit);\n        this.changeDetectorRef.markForCheck();\n    }\n\n    private resetTags() {\n        this.dropSubscriptions();\n        this.listenToTagsFocus();\n        this.listenToTagsSelection();\n        this.listenToTagsRemoved();\n    }\n\n    private dropSubscriptions() {\n        if (this.tagFocusSubscription) {\n            this.tagFocusSubscription.unsubscribe();\n            this.tagFocusSubscription = null;\n        }\n\n        if (this.tagBlurSubscription) {\n            this.tagBlurSubscription.unsubscribe();\n            this.tagBlurSubscription = null;\n        }\n\n        if (this.tagSelectionSubscription) {\n            this.tagSelectionSubscription.unsubscribe();\n            this.tagSelectionSubscription = null;\n        }\n\n        if (this.tagRemoveSubscription) {\n            this.tagRemoveSubscription.unsubscribe();\n            this.tagRemoveSubscription = null;\n        }\n    }\n\n    /** Listens to user-generated selection events on each tag. */\n    private listenToTagsSelection(): void {\n        this.tagSelectionSubscription = this.tagSelectionChanges.subscribe((event) => {\n            if (event.source.selected) {\n                this.selectionModel.select(event.source);\n            } else {\n                this.selectionModel.deselect(event.source);\n            }\n\n            // For single selection tag list, make sure the deselected value is unselected.\n            if (!this.multiple) {\n                this.tags.forEach((tag) => {\n                    if (!this.selectionModel.isSelected(tag) && tag.selected) {\n                        tag.deselect();\n                    }\n                });\n            }\n\n            if (event.isUserInput) {\n                this.propagateChanges();\n            }\n        });\n    }\n\n    /** Listens to user-generated selection events on each tag. */\n    private listenToTagsFocus(): void {\n        this.tagFocusSubscription = this.tagFocusChanges.subscribe((event) => {\n            const tagIndex: number = this.tags.toArray().indexOf(event.tag);\n\n            if (this.isValidIndex(tagIndex)) {\n                this.keyManager.updateActiveItem(tagIndex);\n            }\n            this.stateChanges.next();\n        });\n\n        this.tagBlurSubscription = this.tagBlurChanges.subscribe(() => {\n            this.blur();\n            this.stateChanges.next();\n        });\n    }\n\n    private listenToTagsRemoved(): void {\n        this.tagRemoveSubscription = this.tagRemoveChanges.subscribe((event) => {\n            const tag = event.tag;\n            const tagIndex = this.tags.toArray().indexOf(event.tag);\n\n            // In case the tag that will be removed is currently focused, we temporarily store\n            // the index in order to be able to determine an appropriate sibling tag that will\n            // receive focus.\n            if (this.isValidIndex(tagIndex) && tag.hasFocus) {\n                this.lastDestroyedTagIndex = tagIndex;\n            }\n        });\n    }\n\n    /** Checks whether an event comes from inside a tag element. */\n    private originatesFromTag(event: Event): boolean {\n        let currentElement = event.target as HTMLElement | null;\n\n        while (currentElement && currentElement !== this.elementRef.nativeElement) {\n            if (currentElement.classList.contains('mc-tag')) {\n                return true;\n            }\n\n            currentElement = currentElement.parentElement;\n        }\n\n        return false;\n    }\n\n    /** Checks whether any of the tags is focused. */\n    private hasFocusedTag() {\n        return this.tags.some((tag) => tag.hasFocus);\n    }\n\n    /** Syncs the list's disabled state with the individual tags. */\n    private syncTagsDisabledState() {\n        if (this.tags) {\n            this.tags.forEach((tag) => {\n                tag.disabled = this._disabled;\n            });\n        }\n    }\n}\n\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    ContentChildren,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    NgZone,\n    OnDestroy,\n    Output,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { BACKSPACE, DELETE, SPACE } from '@ptsecurity/cdk/keycodes';\nimport {\n    CanColor,\n    CanColorCtor,\n    CanDisable,\n    CanDisableCtor,\n    mixinColor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\nimport { Subject } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\n\n// tslint:disable-next-line:naming-convention\nexport interface McTagEvent {\n    tag: McTag;\n}\n\n/** Event object emitted by McTag when selected or deselected. */\nexport class McTagSelectionChange {\n    constructor(public source: McTag, public selected: boolean, public isUserInput = false) {}\n}\n\n\nconst TAG_ATTRIBUTE_NAMES = ['mc-basic-tag'];\n\n/**\n * Dummy directive to add CSS class to tag avatar.\n * @docs-private\n */\n@Directive({\n    selector: 'mc-tag-avatar, [mcTagAvatar]',\n    host: { class: 'mc-tag-avatar' }\n})\nexport class McTagAvatar {}\n\n/**\n * Dummy directive to add CSS class to tag trailing icon.\n * @docs-private\n */\n@Directive({\n    selector: 'mc-tag-trailing-icon, [mcTagTrailingIcon]',\n    host: { class: 'mc-tag-trailing-icon' }\n})\nexport class McTagTrailingIcon {}\n\nexport class McTagBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\n// tslint:disable-next-line:naming-convention\nexport const _McTagMixinBase: CanColorCtor & CanDisableCtor & typeof McTagBase = mixinColor(mixinDisabled(McTagBase));\n\n\n@Component({\n    selector: 'mc-tag, [mc-tag], mc-basic-tag, [mc-basic-tag]',\n    exportAs: 'mcTag',\n    templateUrl: 'tag.partial.html',\n    styleUrls: ['./tag.css'],\n    inputs: ['color', 'disabled'],\n    host: {\n        class: 'mc-tag',\n        '[attr.tabindex]': 'disabled ? null : -1',\n        '[class.mc-tag-selected]': 'selected',\n        '[class.mc-tag-with-avatar]': 'avatar',\n        '[class.mc-tag-with-trailing-icon]': 'trailingIcon || removeIcon',\n        '[class.mc-tag-disabled]': 'disabled',\n        '[class.mc-disabled]': 'disabled',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': 'handleClick($event)',\n        '(keydown)': 'handleKeydown($event)',\n        '(focus)': 'focus()',\n        '(blur)': 'blur()'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McTag extends _McTagMixinBase implements IFocusableOption, OnDestroy, CanColor, CanDisable {\n    /** Emits when the tag is focused. */\n    readonly onFocus = new Subject<McTagEvent>();\n\n    /** Emits when the tag is blured. */\n    readonly onBlur = new Subject<McTagEvent>();\n\n    nativeElement: HTMLElement;\n\n    /** Whether the tag has focus. */\n    hasFocus: boolean = false;\n\n    /** Whether the tag list is selectable */\n    tagListSelectable: boolean = true;\n\n    @ContentChildren(McIcon) contentChildren: QueryList<McIcon>;\n\n    /** The tag avatar */\n    @ContentChild(McTagAvatar) avatar: McTagAvatar;\n\n    /** The tag's trailing icon. */\n    @ContentChild(McTagTrailingIcon) trailingIcon: McTagTrailingIcon;\n\n    /** The tag's remove toggler. */\n    @ContentChild(forwardRef(() => McTagRemove)) removeIcon: McTagRemove;\n\n    /** Emitted when the tag is selected or deselected. */\n    @Output() readonly selectionChange: EventEmitter<McTagSelectionChange> =\n        new EventEmitter<McTagSelectionChange>();\n\n    /** Emitted when the tag is destroyed. */\n    @Output() readonly destroyed: EventEmitter<McTagEvent> = new EventEmitter<McTagEvent>();\n\n    /** Emitted when a tag is to be removed. */\n    @Output() readonly removed: EventEmitter<McTagEvent> = new EventEmitter<McTagEvent>();\n\n    /** Whether the tag is selected. */\n    @Input()\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    set selected(value: boolean) {\n        const coercedValue = coerceBooleanProperty(value);\n\n        if (coercedValue !== this._selected) {\n            this._selected = coercedValue;\n            this.dispatchSelectionChange();\n        }\n    }\n\n    private _selected: boolean = false;\n\n    /** The value of the tag. Defaults to the content inside `<mc-tag>` tags. */\n    @Input()\n    get value(): any {\n        return this._value !== undefined\n            ? this._value\n            : this.elementRef.nativeElement.textContent;\n    }\n\n    set value(value: any) {\n        this._value = value;\n    }\n\n    private _value: any;\n\n    /**\n     * Whether or not the tag is selectable. When a tag is not selectable,\n     * changes to its selected state are always ignored. By default a tag is\n     * selectable, and it becomes non-selectable if its parent tag list is\n     * not selectable.\n     */\n    @Input()\n    get selectable(): boolean {\n        return this._selectable && this.tagListSelectable;\n    }\n\n    set selectable(value: boolean) {\n        this._selectable = coerceBooleanProperty(value);\n    }\n\n    private _selectable: boolean = true;\n\n    /**\n     * Determines whether or not the tag displays the remove styling and emits (removed) events.\n     */\n    @Input()\n    get removable(): boolean {\n        return this._removable;\n    }\n\n    set removable(value: boolean) {\n        this._removable = coerceBooleanProperty(value);\n    }\n\n    private _removable: boolean = true;\n\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this.disabled) {\n            this._disabled = value;\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    constructor(public elementRef: ElementRef, private _ngZone: NgZone) {\n        super(elementRef);\n\n        this.addHostClassName();\n\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this.addClassModificatorForIcons();\n    }\n\n    addClassModificatorForIcons() {\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-left-icon');\n                }\n\n                if (iconElement.previousSibling) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-right-icon');\n                }\n            }\n        } else if (icons.length > 1) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n\n    addHostClassName() {\n        // Add class for the different tags\n        for (const attr of TAG_ATTRIBUTE_NAMES) {\n            if (\n                this.elementRef.nativeElement.hasAttribute(attr) ||\n                this.elementRef.nativeElement.tagName.toLowerCase() === attr\n            ) {\n                    (this.elementRef.nativeElement as HTMLElement).classList.add(attr);\n\n                    return;\n            }\n        }\n        (this.elementRef.nativeElement as HTMLElement).classList.add('mc-standard-tag');\n    }\n\n    ngOnDestroy() {\n        this.destroyed.emit({ tag: this });\n    }\n\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n            this.dispatchSelectionChange();\n        }\n    }\n\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n            this.dispatchSelectionChange();\n        }\n    }\n\n    selectViaInteraction(): void {\n        if (!this._selected) {\n            this._selected = true;\n            this.dispatchSelectionChange(true);\n        }\n    }\n\n    toggleSelected(isUserInput: boolean = false): boolean {\n        this._selected = !this.selected;\n        this.dispatchSelectionChange(isUserInput);\n\n        return this.selected;\n    }\n\n    /** Allows for programmatic focusing of the tag. */\n    focus(): void {\n        if (!this.hasFocus) {\n            this.elementRef.nativeElement.focus();\n            this.onFocus.next({ tag: this });\n        }\n        this.hasFocus = true;\n    }\n\n    /**\n     * Allows for programmatic removal of the tag. Called by the McTagList when the DELETE or\n     * BACKSPACE keys are pressed.\n     *\n     * Informs any listeners of the removal request. Does not remove the tag from the DOM.\n     */\n    remove(): void {\n        if (this.removable) {\n            this.removed.emit({ tag: this });\n        }\n    }\n\n    handleClick(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n        } else {\n            event.stopPropagation();\n        }\n    }\n\n    handleKeydown(event: KeyboardEvent): void {\n        if (this.disabled) { return; }\n\n        // tslint:disable-next-line: deprecation\n        switch (event.keyCode) {\n            case DELETE:\n            case BACKSPACE:\n                // If we are removable, remove the focused tag\n                this.remove();\n                // Always prevent so page navigation does not occur\n                event.preventDefault();\n                break;\n            case SPACE:\n                // If we are selectable, toggle the focused tag\n                if (this.selectable) {\n                    this.toggleSelected(true);\n                }\n\n                // Always prevent space from scrolling the page since the list has focus\n                event.preventDefault();\n                break;\n            default:\n        }\n    }\n\n    blur(): void {\n        // When animations are enabled, Angular may end up removing the tag from the DOM a little\n        // earlier than usual, causing it to be blurred and throwing off the logic in the tag list\n        // that moves focus not the next item. To work around the issue, we defer marking the tag\n        // as not focused until the next time the zone stabilizes.\n        this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                this._ngZone.run(() => {\n                    this.hasFocus = false;\n                    this.onBlur.next({ tag: this });\n                });\n            });\n    }\n\n    private dispatchSelectionChange(isUserInput = false) {\n        this.selectionChange.emit({\n            source: this,\n            isUserInput,\n            selected: this._selected\n        });\n    }\n}\n\n\n/**\n * Applies proper (click) support and adds styling for use with the Material Design \"cancel\" icon\n * available at https://material.io/icons/#ic_cancel.\n *\n * Example:\n *\n *     `<mc-tag>\n *       <mc-icon mcTagRemove>cancel</mc-icon>\n *     </mc-tag>`\n *\n * You *may* use a custom icon, but you may need to override the `mc-tag-remove` positioning\n * styles to properly center the icon within the tag.\n */\n@Directive({\n    selector: '[mcTagRemove]',\n    host: {\n        class: 'mc-tag-remove mc-tag-trailing-icon',\n        '(click)': 'handleClick($event)'\n    }\n})\nexport class McTagRemove {\n    constructor(protected parentTag: McTag) {}\n\n    /** Calls the parent tag's public `remove()` method if applicable. */\n    handleClick(event: Event): void {\n        if (this.parentTag.removable) {\n            this.parentTag.remove();\n        }\n\n        // We need to stop event propagation because otherwise the event will bubble up to the\n        // form field and cause the `onContainerClick` method to be invoked. This method would then\n        // reset the focused tag that has been focused after tag removal. Usually the parent\n        // the parent click listener of the `McTag` would prevent propagation, but it can happen\n        // that the tag is being removed before the event bubbles up.\n        event.stopPropagation();\n    }\n}\n","import { InjectionToken } from '@angular/core';\n\n\n/** Default options, for the chips module, that can be overridden. */\n// tslint:disable-next-line: naming-convention\nexport interface McTagsDefaultOptions {\n    /** The list of key codes that will trigger a chipEnd event. */\n    separatorKeyCodes: number[] | Set<number>;\n}\n\n/** Injection token to be used to override the default options for the chips module. */\nexport const MC_TAGS_DEFAULT_OPTIONS = new InjectionToken<McTagsDefaultOptions>('mc-tags-default-options');\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PortalModule } from '@ptsecurity/cdk/portal';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McTab } from './tab';\nimport { McTabBody, McTabBodyPortal } from './tab-body';\nimport { McTabContent } from './tab-content';\nimport {\n    McTabGroup,\n    McLightTabsCssStyler,\n    McAlignTabsCenterCssStyler,\n    McAlignTabsEndCssStyler,\n    McStretchTabsCssStyler\n} from './tab-group';\nimport { McTabHeader } from './tab-header';\nimport { McTabLabel } from './tab-label';\nimport { McTabLabelWrapper } from './tab-label-wrapper';\nimport { McTabLink, McTabNav } from './tab-nav-bar/tab-nav-bar';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McCommonModule,\n        PortalModule,\n        A11yModule\n    ],\n    // Don't export all components because some are only to be used internally.\n    exports: [\n        McCommonModule,\n        McTabGroup,\n        McTabLabel,\n        McTab,\n        McTabNav,\n        McTabLink,\n        McTabContent,\n        McLightTabsCssStyler,\n        McAlignTabsCenterCssStyler,\n        McAlignTabsEndCssStyler,\n        McStretchTabsCssStyler\n    ],\n    declarations: [\n        McTabGroup,\n        McTabLabel,\n        McTab,\n        McTabLabelWrapper,\n        McTabNav,\n        McTabLink,\n        McTabBody,\n        McTabBodyPortal,\n        McTabHeader,\n        McTabContent,\n        McLightTabsCssStyler,\n        McAlignTabsCenterCssStyler,\n        McAlignTabsEndCssStyler,\n        McStretchTabsCssStyler\n    ]\n})\nexport class McTabsModule {}\n","import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    OnDestroy,\n    ViewEncapsulation\n} from '@angular/core';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    CanColor,\n    CanColorCtor,\n    CanDisable,\n    CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\n// Boilerplate for applying mixins to McTabNav.\n/** @docs-private */\nexport class McTabNavBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {}\n}\nexport const mcTabNavMixinBase: CanColorCtor &\n    typeof McTabNavBase = mixinColor(McTabNavBase);\n\n/**\n * Navigation component matching the styles of the tab group header.\n */\n@Component({\n    selector: '[mc-tab-nav-bar]',\n    exportAs: 'mcTabNavBar, mcTabNav',\n    inputs: ['color'],\n    templateUrl: 'tab-nav-bar.html',\n    styleUrls: ['tab-nav-bar.css'],\n    host: { class: 'mc-tab-nav-bar' },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McTabNav extends mcTabNavMixinBase\n    implements CanColor {\n        constructor(elementRef: ElementRef) {\n            super(elementRef);\n        }\n     }\n\n// Boilerplate for applying mixins to McTabLink.\nexport class McTabLinkBase {}\nexport const mcTabLinkMixinBase: HasTabIndexCtor & CanDisableCtor &\n    typeof McTabLinkBase = mixinTabIndex(mixinDisabled(McTabLinkBase));\n\n/**\n * Link inside of a `mc-tab-nav-bar`.\n */\n@Directive({\n    selector: '[mc-tab-link], [mcTabLink]',\n    exportAs: 'mcTabLink',\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-tab-link',\n        '[attr.aria-current]': 'active',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.tabIndex]': 'tabIndex',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-active]': 'active'\n    }\n})\nexport class McTabLink extends mcTabLinkMixinBase\n    implements OnDestroy, CanDisable, HasTabIndex {\n    /** Whether the link is active. */\n    @Input()\n    get active(): boolean {\n        return this.isActive;\n    }\n    set active(value: boolean) {\n        if (value !== this.isActive) {\n            this.isActive = value;\n        }\n    }\n\n    /** Whether the tab link is active or not. */\n    protected isActive: boolean = false;\n\n    constructor(\n        public elementRef: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        private focusMonitor: FocusMonitor\n    ) {\n        super();\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this.focusMonitor.monitor(this.elementRef.nativeElement);\n    }\n\n    ngOnDestroy() {\n        this.focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    InjectionToken,\n    Inject,\n    Optional,\n    Directive, Attribute\n} from '@angular/core';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanColor,\n    CanColorCtor,\n    mixinColor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { merge, Subscription } from 'rxjs';\n\nimport { McTab } from './tab';\nimport { McTabHeader } from './tab-header';\n\n\n@Directive({\n    selector: 'mc-tab-group[mc-light-tabs], [mc-tab-nav-bar][mc-light-tabs]',\n    host: { class: 'mc-tab-group_light' }\n})\nexport class McLightTabsCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-align-tabs-center], [mc-tab-nav-bar][mc-align-tabs-center]',\n    host: { class: 'mc-tab-group_align-labels-center' }\n})\nexport class McAlignTabsCenterCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-align-tabs-end], [mc-tab-nav-bar][mc-align-tabs-end]',\n    host: { class: 'mc-tab-group_align-labels-end' }\n})\nexport class McAlignTabsEndCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-stretch-tabs], [mc-tab-nav-bar][mc-stretch-tabs]',\n    host: { class: 'mc-tab-group_stretch-labels' }\n})\nexport class McStretchTabsCssStyler { }\n\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n\n/** A simple change event emitted on focus or selection changes. */\nexport class McTabChangeEvent {\n    /** Index of the currently-selected tab. */\n    index: number;\n    /** Reference to the currently-selected tab. */\n    tab: McTab;\n}\n\n/** Possible positions for the tab header. */\nexport type McTabHeaderPosition = 'above' | 'below';\n\n/** Object that can be used to configure the default options for the tabs module. */\nexport interface IMcTabsConfig {\n    /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n    animationDuration?: string;\n}\n\n/** Injection token that can be used to provide the default options the tabs module. */\nexport const MC_TABS_CONFIG = new InjectionToken('MC_TABS_CONFIG');\n\n// Boilerplate for applying mixins to McTabGroup.\n/** @docs-private */\nexport class McTabGroupBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) { }\n}\nexport const mcTabGroupMixinBase:\n    CanColorCtor &\n    typeof McTabGroupBase =\n    mixinColor(mixinDisabled(McTabGroupBase));\n\n/**\n * Tab-group component.  Supports basic tab pairs (label + content) and includes\n * keyboard navigation.\n */\n@Component({\n    selector: 'mc-tab-group',\n    exportAs: 'mcTabGroup',\n    templateUrl: 'tab-group.html',\n    styleUrls: ['tab-group.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['color'],\n    host: {\n        class: 'mc-tab-group',\n        '[class.mc-tab-group_dynamic-height]': 'dynamicHeight',\n        '[class.mc-tab-group_inverted-header]': 'headerPosition === \"below\"'\n    }\n})\nexport class McTabGroup extends mcTabGroupMixinBase implements AfterContentInit,\n    AfterContentChecked, OnDestroy, CanColor {\n    lightTab: boolean;\n\n    /** Whether the tab group should grow to the size of the active tab. */\n    @Input()\n    get dynamicHeight(): boolean { return this._dynamicHeight; }\n    set dynamicHeight(value: boolean) { this._dynamicHeight = coerceBooleanProperty(value); }\n\n    /** The index of the active tab. */\n    @Input()\n    get selectedIndex(): number | null { return this._selectedIndex; }\n    set selectedIndex(value: number | null) {\n        this.indexToSelect = coerceNumberProperty(value, null);\n    }\n\n    @ContentChildren(McTab) tabs: QueryList<McTab>;\n\n    @ViewChild('tabBodyWrapper') tabBodyWrapper: ElementRef;\n\n    @ViewChild('tabHeader') tabHeader: McTabHeader;\n\n    /** Position of the tab header. */\n    @Input() headerPosition: McTabHeaderPosition = 'above';\n\n    /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n    @Input() animationDuration: string;\n\n    /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n    @Output() readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted when focus has changed within a tab group. */\n    @Output() readonly focusChange: EventEmitter<McTabChangeEvent> =\n        new EventEmitter<McTabChangeEvent>();\n\n    /** Event emitted when the body animation has completed */\n    @Output() readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the tab selection has changed. */\n    @Output() readonly selectedTabChange: EventEmitter<McTabChangeEvent> =\n        new EventEmitter<McTabChangeEvent>(true);\n\n    /** The tab index that should be selected after the content has been checked. */\n    private indexToSelect: number | null = 0;\n\n    /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n    private tabBodyWrapperHeight: number = 0;\n\n    /** Subscription to tabs being added/removed. */\n    private tabsSubscription = Subscription.EMPTY;\n\n    /** Subscription to changes in the tab labels. */\n    private tabLabelSubscription = Subscription.EMPTY;\n    private _dynamicHeight: boolean = false;\n    private _selectedIndex: number | null = null;\n\n    private groupId: number;\n\n    constructor(\n        elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        @Attribute('mc-light-tabs') lightTabs: string,\n        @Inject(MC_TABS_CONFIG) @Optional() defaultConfig?: IMcTabsConfig\n    ) {\n        super(elementRef);\n\n        this.lightTab = coerceBooleanProperty(lightTabs);\n\n        this.groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '0ms';\n    }\n\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = this.indexToSelect = this.clampTabIndex(this.indexToSelect);\n\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex !== indexToSelect) {\n            const isFirstRun = this._selectedIndex == null;\n\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this.createChangeEvent(indexToSelect));\n            }\n\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this.tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            });\n        }\n\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this.tabs.forEach((tab: McTab, index: number) => {\n            tab.position = index - indexToSelect;\n\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position === 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    ngAfterContentInit() {\n        this.subscribeToTabLabels();\n\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this.tabsSubscription = this.tabs.changes.subscribe(() => {\n            const indexToSelect = this.clampTabIndex(this.indexToSelect);\n\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                const tabs = this.tabs.toArray();\n\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this.indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n\n            this.subscribeToTabLabels();\n            this.changeDetectorRef.markForCheck();\n        });\n    }\n\n    ngOnDestroy() {\n        this.tabsSubscription.unsubscribe();\n        this.tabLabelSubscription.unsubscribe();\n    }\n\n    focusChanged(index: number) {\n        this.focusChange.emit(this.createChangeEvent(index));\n    }\n\n    /** Returns a unique id for each tab label element */\n    getTabLabelId(i: number): string {\n        return `mc-tab-label-${this.groupId}-${i}`;\n    }\n\n    /** Returns a unique id for each tab content element */\n    getTabContentId(i: number): string {\n        return `mc-tab-content-${this.groupId}-${i}`;\n    }\n\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    setTabBodyWrapperHeight(tabHeight: number): void {\n        if (!this._dynamicHeight || !this.tabBodyWrapperHeight) { return; }\n\n        const wrapper: HTMLElement = this.tabBodyWrapper.nativeElement;\n\n        wrapper.style.height = `${this.tabBodyWrapperHeight}px`;\n\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this.tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = `${tabHeight}px`;\n        }\n    }\n\n    /** Removes the height of the tab body wrapper. */\n    removeTabBodyWrapperHeight(): void {\n        this.tabBodyWrapperHeight = this.tabBodyWrapper.nativeElement.clientHeight;\n        this.tabBodyWrapper.nativeElement.style.height = '';\n        this.animationDone.emit();\n    }\n\n    /** Handle click events, setting new selected index if appropriate. */\n    handleClick(tab: McTab, tabHeader: McTabHeader, index: number) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n\n    /** Retrieves the tabindex for the tab. */\n    getTabIndex(tab: McTab, index: number): number | null {\n        if (tab.disabled) {\n            return null;\n        }\n\n        return this.selectedIndex === index ? 0 : -1;\n    }\n\n    private createChangeEvent(index: number): McTabChangeEvent {\n        const event = new McTabChangeEvent();\n        event.index = index;\n        if (this.tabs && this.tabs.length) {\n            event.tab = this.tabs.toArray()[index];\n        }\n\n        return event;\n    }\n\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the McTab component, whereas the data binding is inside the McTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    private subscribeToTabLabels() {\n        if (this.tabLabelSubscription) {\n            this.tabLabelSubscription.unsubscribe();\n        }\n\n        this.tabLabelSubscription = merge(...this.tabs.map((tab) => tab.stateChanges))\n            .subscribe(() => this.changeDetectorRef.markForCheck());\n    }\n\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    private clampTabIndex(index: number | null): number {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Mch.max(NaN, 0) === NaN).\n        return Math.min(this.tabs.length - 1, Math.max(index || 0, 0));\n    }\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Input,\n    NgZone,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Direction, Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceNumberProperty } from '@ptsecurity/cdk/coercion';\nimport { END, ENTER, HOME, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { ViewportRuler } from '@ptsecurity/cdk/scrolling';\nimport { merge, of as observableOf, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { McTabLabelWrapper } from './tab-label-wrapper';\n\n\nconst VIEWPORT_THROTTLE_TIME = 150;\nconst SCROLL_DISTANCE_DELIMITER = 3;\n\n\n/**\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n\n// Boilerplate for applying mixins to McTabHeader.\n/** @docs-private */\nexport class McTabHeaderBase {}\n\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group.\n * When the tabs list's width exceeds the width of the header container,\n * then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\n@Component({\n    selector: 'mc-tab-header',\n    templateUrl: 'tab-header.html',\n    styleUrls: ['tab-header.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        class: 'mc-tab-header',\n        '[class.mc-tab-header__pagination-controls_enabled]':\n            'showPaginationControls',\n        '[class.mc-tab-header_rtl]': 'getLayoutDirection() == \\'rtl\\''\n    }\n})\nexport class McTabHeader extends McTabHeaderBase\n    implements AfterContentChecked, AfterContentInit, OnDestroy {\n    /** The index of the active tab. */\n    @Input()\n    get selectedIndex(): number {\n        return this._selectedIndex;\n    }\n    set selectedIndex(value: number) {\n        const coercedValue = coerceNumberProperty(value);\n        this.selectedIndexChanged = this._selectedIndex !== coercedValue;\n        this._selectedIndex = coercedValue;\n\n        if (this.keyManager) {\n            this.keyManager.updateActiveItem(coercedValue);\n        }\n    }\n\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex(): number {\n        return this.keyManager ? this.keyManager.activeItemIndex! : 0;\n    }\n\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value: number) {\n        if (\n            !this.isValidIndex(value) ||\n            this.focusIndex === value ||\n            !this.keyManager\n        ) {\n            return;\n        }\n\n        this.keyManager.setActiveItem(value);\n    }\n\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance(): number {\n        return this._scrollDistance;\n    }\n    set scrollDistance(v: number) {\n        this._scrollDistance = Math.max(\n            0,\n            Math.min(this.getMaxScrollDistance(), v)\n        );\n\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this.scrollDistanceChanged = true;\n        this.checkScrollingControls();\n    }\n\n    @ContentChildren(McTabLabelWrapper)\n    labelWrappers: QueryList<McTabLabelWrapper>;\n    @ViewChild('tabListContainer')\n    tabListContainer: ElementRef;\n    @ViewChild('tabList')\n    tabList: ElementRef;\n\n    /** Whether the controls for pagination should be displayed */\n    showPaginationControls = false;\n\n    /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n    disableScrollAfter = true;\n\n    /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n    disableScrollBefore = true;\n\n    /** Event emitted when the option is selected. */\n    @Output()\n    readonly selectFocusedIndex: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted when a label is focused. */\n    @Output()\n    readonly indexFocused: EventEmitter<number> = new EventEmitter<number>();\n\n    /** The distance in pixels that the tab labels should be translated to the left. */\n    private _scrollDistance = 0;\n\n    /** Whether the header should scroll to the selected index after the view has been checked. */\n    private selectedIndexChanged = false;\n\n    /** Emits when the component is destroyed. */\n    private readonly destroyed = new Subject<void>();\n\n    /**\n     * The number of tab labels that are displayed on the header. When this changes, the header\n     * should re-evaluate the scroll position.\n     */\n    private tabLabelCount: number;\n\n    /** Whether the scroll distance has changed and should be applied after the view is checked. */\n    private scrollDistanceChanged: boolean;\n\n    /** Used to manage focus between the tabs. */\n    private keyManager: FocusKeyManager<McTabLabelWrapper>;\n\n    /** Cached text content of the header. */\n    private currentTextContent: string;\n\n    private _selectedIndex: number = 0;\n\n    constructor(\n        private elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        private viewportRuler: ViewportRuler,\n        @Optional() private dir: Directionality,\n        private ngZone: NgZone\n    ) {\n        super();\n    }\n\n    ngAfterContentChecked(): void {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this.tabLabelCount !== this.labelWrappers.length) {\n            this.updatePagination();\n            this.tabLabelCount = this.labelWrappers.length;\n            this.changeDetectorRef.markForCheck();\n        }\n\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this.selectedIndexChanged) {\n            this.scrollToLabel(this._selectedIndex);\n            this.checkScrollingControls();\n            this.selectedIndexChanged = false;\n            this.changeDetectorRef.markForCheck();\n        }\n\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this.scrollDistanceChanged) {\n            this.updateTabScrollPosition();\n            this.scrollDistanceChanged = false;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    handleKeydown(event: KeyboardEvent) {\n        switch (event.keyCode) {\n            case HOME:\n                this.keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case END:\n                this.keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case ENTER:\n            case SPACE:\n                this.selectFocusedIndex.emit(this.focusIndex);\n                event.preventDefault();\n                break;\n            default:\n                this.keyManager.onKeydown(event);\n        }\n    }\n\n    ngAfterContentInit() {\n        const dirChange = this.dir ? this.dir.change : observableOf(null);\n        const resize = this.viewportRuler.change(VIEWPORT_THROTTLE_TIME);\n        const realign = () => {\n            this.updatePagination();\n        };\n\n        this.keyManager = new FocusKeyManager(this.labelWrappers)\n            .withHorizontalOrientation(this.getLayoutDirection())\n            .withWrap();\n\n        this.keyManager.updateActiveItem(0);\n\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame === undefined\n            ? realign()\n            : requestAnimationFrame(realign);\n\n        // On dir change or window resize, update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize)\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(() => {\n                realign();\n                this.keyManager.withHorizontalOrientation(\n                    this.getLayoutDirection()\n                );\n            });\n\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this.keyManager.change\n            .pipe(takeUntil(this.destroyed))\n            .subscribe((newFocusIndex) => {\n                this.indexFocused.emit(newFocusIndex);\n                this.setTabFocus(newFocusIndex);\n            });\n    }\n\n    ngOnDestroy() {\n        this.destroyed.next();\n        this.destroyed.complete();\n    }\n\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    onContentChanges() {\n        const textContent = this.elementRef.nativeElement.textContent;\n\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in.\n\n        if (textContent !== this.currentTextContent) {\n            this.currentTextContent = textContent;\n\n            const zoneCallback = () => {\n                this.updatePagination();\n                this.changeDetectorRef.markForCheck();\n            };\n\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            // TODO: Remove null check for `_ngZone` once it's a required parameter.\n            this.ngZone ? this.ngZone.run(zoneCallback) : zoneCallback();\n        }\n    }\n\n    /**\n     * Updating the view whether pagination should be enabled or not\n     *\n     * WARNING: Calling this method can be very costly in terms of performance.  It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        this.checkPaginationEnabled();\n        this.checkScrollingControls();\n        this.updateTabScrollPosition();\n    }\n\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    isValidIndex(index: number): boolean {\n        if (!this.labelWrappers) {\n            return true;\n        }\n\n        const tab = this.labelWrappers\n            ? this.labelWrappers.toArray()[index]\n            : null;\n\n        return !!tab && !tab.disabled;\n    }\n\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    setTabFocus(tabIndex: number) {\n        if (this.showPaginationControls) {\n            this.scrollToLabel(tabIndex);\n        }\n\n        if (this.labelWrappers && this.labelWrappers.length) {\n            this.labelWrappers.toArray()[tabIndex].focus();\n\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            const containerEl = this.tabListContainer.nativeElement;\n            const dir = this.getLayoutDirection();\n\n            if (dir === 'ltr') {\n                containerEl.scrollLeft = 0;\n            } else {\n                containerEl.scrollLeft =\n                    containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n\n    /** The layout direction of the containing app. */\n    getLayoutDirection(): Direction {\n        return this.dir && this.dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    updateTabScrollPosition() {\n        const scrollDistance = this.scrollDistance;\n        const translateX =\n            this.getLayoutDirection() === 'ltr'\n                ? -scrollDistance\n                : scrollDistance;\n\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer.\n        // See: https://github.com/angular/material2/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this.tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off.\n        this.tabList.nativeElement.scrollLeft = 0;\n    }\n\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    scrollHeader(scrollDir: ScrollDirection) {\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        this.scrollDistance +=\n            ((scrollDir === 'before' ? -1 : 1) * viewLength) / SCROLL_DISTANCE_DELIMITER;\n    }\n\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    scrollToLabel(labelIndex: number) {\n        const selectedLabel = this.labelWrappers\n            ? this.labelWrappers.toArray()[labelIndex]\n            : null;\n\n        if (!selectedLabel) {\n            return;\n        }\n\n        // The view length is the visible width of the tab labels.\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        let labelBeforePos: number;\n        let labelAfterPos: number;\n\n        if (this.getLayoutDirection() === 'ltr') {\n            labelBeforePos = selectedLabel.getOffsetLeft();\n            labelAfterPos = labelBeforePos + selectedLabel.getOffsetWidth();\n        } else {\n            labelAfterPos =\n                this.tabList.nativeElement.offsetWidth -\n                selectedLabel.getOffsetLeft();\n            labelBeforePos = labelAfterPos - selectedLabel.getOffsetWidth();\n        }\n\n        const beforeVisiblePos = this.scrollDistance;\n        const afterVisiblePos = this.scrollDistance + viewLength;\n\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -=\n                beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        } else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance +=\n                labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    checkPaginationEnabled() {\n        const isEnabled =\n            this.tabList.nativeElement.scrollWidth >\n            this.elementRef.nativeElement.offsetWidth;\n\n        if (!isEnabled) {\n            this.scrollDistance = 0;\n        }\n\n        if (isEnabled !== this.showPaginationControls) {\n            this.changeDetectorRef.markForCheck();\n        }\n\n        this.showPaginationControls = isEnabled;\n    }\n\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    checkScrollingControls() {\n        // Check if the pagination arrows should be activated.\n        this.disableScrollBefore = this.scrollDistance === 0;\n        this.disableScrollAfter =\n            this.scrollDistance === this.getMaxScrollDistance();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    getMaxScrollDistance(): number {\n        const lengthOfTabList = this.tabList.nativeElement.scrollWidth;\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        return lengthOfTabList - viewLength || 0;\n    }\n}\n","import { Directive, ElementRef } from '@angular/core';\nimport {\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\n\n\n// Boilerplate for applying mixins to McTabLabelWrapper.\n/** @docs-private */\nexport class McTabLabelWrapperBase {}\nexport const mcTabLabelWrapperMixinBase: CanDisableCtor &\n    typeof McTabLabelWrapperBase = mixinDisabled(McTabLabelWrapperBase);\n\n/**\n * Used in the `mc-tab-group` view to display tab labels.\n * @docs-private\n */\n@Directive({\n    selector: '[mcTabLabelWrapper]',\n    inputs: ['disabled'],\n    host: {\n        '[class.mc-disabled]': 'disabled',\n        '[attr.aria-disabled]': '!!disabled'\n    }\n})\nexport class McTabLabelWrapper extends mcTabLabelWrapperMixinBase implements CanDisable {\n    constructor(public elementRef: ElementRef) {\n        super();\n    }\n\n    /** Sets focus on the wrapper element */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    getOffsetLeft(): number {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n\n    getOffsetWidth(): number {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    Component,\n    ChangeDetectorRef,\n    Input,\n    Inject,\n    Output,\n    EventEmitter,\n    OnDestroy,\n    OnInit,\n    ElementRef,\n    Directive,\n    Optional,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ComponentFactoryResolver,\n    ViewContainerRef,\n    forwardRef,\n    ViewChild\n} from '@angular/core';\nimport { Directionality, Direction } from '@ptsecurity/cdk/bidi';\nimport { TemplatePortal, CdkPortalOutlet, PortalHostDirective } from '@ptsecurity/cdk/portal';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\nimport { mcTabsAnimations } from './tabs-animations';\n\n\n/**\n * These position states are used internally as animation states for the tab body. Setting the\n * position state to left, right, or center will transition the tab body from its current\n * position to its respective state. If there is not current position (void, in the case of a new\n * tab body), then there will be no transition animation to its state.\n *\n * In the case of a new tab body that should immediately be centered with an animating transition,\n * then left-origin-center or right-origin-center can be used, which will use left or right as its\n * psuedo-prior state.\n */\nexport type McTabBodyPositionState =\n    'left' | 'center' | 'right' | 'left-origin-center' | 'right-origin-center';\n\n/**\n * The origin state is an internally used state that is set on a new tab body indicating if it\n * began to the left or right of the prior selected index. For example, if the selected index was\n * set to 1, and a new tab is created and selected at index 2, then the tab body would have an\n * origin of right because its index was greater than the prior selected index.\n */\nexport type McTabBodyOriginState = 'left' | 'right';\n\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\n@Component({\n    selector: 'mc-tab-body',\n    templateUrl: 'tab-body.html',\n    styleUrls: ['tab-body.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [mcTabsAnimations.translateTab],\n    host: {\n        class: 'mc-tab-body'\n    }\n})\nexport class McTabBody implements OnInit, OnDestroy {\n\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    @Input()\n    set position(position: number) {\n        this.positionIndex = position;\n        this.computePositionAnimationState();\n    }\n\n    /** Tab body position state. Used by the animation trigger for the current state. */\n    bodyPosition: McTabBodyPositionState;\n\n    /** Event emitted when the tab begins to animate towards the center as the active tab. */\n    @Output() readonly onCentering: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted before the centering of the tab begins. */\n    @Output() readonly beforeCentering: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted before the centering of the tab begins. */\n    @Output() readonly afterLeavingCenter: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the tab completes its animation towards the center. */\n    @Output() readonly onCentered: EventEmitter<void> = new EventEmitter<void>(true);\n\n    /** The portal host inside of this container into which the tab body content will be loaded. */\n    @ViewChild(PortalHostDirective) portalHost: PortalHostDirective;\n\n    /** The tab body content to display. */\n    @Input('content') content: TemplatePortal;\n\n    /** Position that will be used when the tab is immediately becoming visible after creation. */\n    @Input() origin: number;\n\n    // Note that the default value will always be overwritten by `McTabBody`, but we need one\n    // anyway to prevent the animations module from throwing an error if the body is used on its own.\n    /** Duration for the tab's animation. */\n    @Input() animationDuration: string = '0ms';\n\n    /** Current position of the tab-body in the tab-group. Zero means that the tab is visible. */\n    private positionIndex: number;\n\n    /** Subscription to the directionality change observable. */\n    private dirChangeSubscription = Subscription.EMPTY;\n\n    constructor(private elementRef: ElementRef<HTMLElement>,\n                @Optional() private dir: Directionality,\n                changeDetectorRef: ChangeDetectorRef) {\n\n        if (this.dir && changeDetectorRef) {\n            this.dirChangeSubscription = this.dir.change.subscribe((direction: Direction) => {\n                this.computePositionAnimationState(direction);\n                changeDetectorRef.markForCheck();\n            });\n        }\n    }\n\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n        if (this.bodyPosition === 'center' && this.origin != null) {\n            this.bodyPosition = this.computePositionFromOrigin();\n        }\n    }\n\n    ngOnDestroy() {\n        this.dirChangeSubscription.unsubscribe();\n    }\n\n    onTranslateTabStarted(e: AnimationEvent): void {\n        const isCentering = this.isCenterPosition(e.toState);\n        this.beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this.onCentering.emit(this.elementRef.nativeElement.clientHeight);\n        }\n    }\n\n    onTranslateTabComplete(e: AnimationEvent): void {\n        // If the transition to the center is complete, emit an event.\n        if (this.isCenterPosition(e.toState) && this.isCenterPosition(this.bodyPosition)) {\n            this.onCentered.emit();\n        }\n\n        if (this.isCenterPosition(e.fromState) && !this.isCenterPosition(this.bodyPosition)) {\n            this.afterLeavingCenter.emit();\n        }\n    }\n\n    /** The text direction of the containing app. */\n    getLayoutDirection(): Direction {\n        return this.dir && this.dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    /** Whether the provided position state is considered center, regardless of origin. */\n    isCenterPosition(position: McTabBodyPositionState | string): boolean {\n        return position === 'center' ||\n            position === 'left-origin-center' ||\n            position === 'right-origin-center';\n    }\n\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    private computePositionAnimationState(dir: Direction = this.getLayoutDirection()) {\n        if (this.positionIndex < 0) {\n            this.bodyPosition = dir === 'ltr' ? 'left' : 'right';\n        } else if (this.positionIndex > 0) {\n            this.bodyPosition = dir === 'ltr' ? 'right' : 'left';\n        } else {\n            this.bodyPosition = 'center';\n        }\n    }\n\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    private computePositionFromOrigin(): McTabBodyPositionState {\n        const dir = this.getLayoutDirection();\n\n        if ((dir === 'ltr' && this.origin <= 0) || (dir === 'rtl' && this.origin > 0)) {\n            return 'left-origin-center';\n        }\n\n        return 'right-origin-center';\n    }\n}\n\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\n@Directive({\n    selector: '[mcTabBodyHost]'\n})\nexport class McTabBodyPortal extends CdkPortalOutlet implements OnInit, OnDestroy {\n    /** Subscription to events for when the tab body begins centering. */\n    private centeringSub = Subscription.EMPTY;\n    /** Subscription to events for when the tab body finishes leaving from center position. */\n    private leavingSub = Subscription.EMPTY;\n\n    constructor(\n        componentFactoryResolver: ComponentFactoryResolver,\n        viewContainerRef: ViewContainerRef,\n        @Inject(forwardRef(() => McTabBody)) private host: McTabBody) {\n        super(componentFactoryResolver, viewContainerRef);\n    }\n\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit(): void {\n        super.ngOnInit();\n\n        this.centeringSub = this.host.beforeCentering\n            .pipe(startWith(this.host.isCenterPosition(this.host.bodyPosition)))\n            .subscribe((isCentering: boolean) => {\n                if (isCentering && !this.hasAttached()) {\n                    this.attach(this.host.content);\n                }\n            });\n\n        this.leavingSub = this.host.afterLeavingCenter.subscribe(() => {\n            this.detach();\n        });\n    }\n\n    /** Clean up centering subscription. */\n    ngOnDestroy(): void {\n        super.ngOnDestroy();\n        this.centeringSub.unsubscribe();\n        this.leavingSub.unsubscribe();\n    }\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\nexport const mcTabsAnimations: {\n    readonly translateTab: AnimationTriggerMetadata;\n} = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state(\n            'center, void, left-origin-center, right-origin-center',\n            style({ transform: 'none' })\n        ),\n\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state(\n            'left',\n            style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })\n        ),\n        state(\n            'right',\n            style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })\n        ),\n\n        transition(\n            '* => left, * => right, left => center, right => center',\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { TemplatePortal } from '@ptsecurity/cdk/portal';\nimport {\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { Subject } from 'rxjs';\n\nimport { McTabContent } from './tab-content';\nimport { McTabLabel } from './tab-label';\n\n\nexport class McTabBase {}\nexport const mcTabMixinBase: CanDisableCtor & typeof McTabBase = mixinDisabled(\n    McTabBase\n);\n\n@Component({\n    selector: 'mc-tab',\n    // Create a template for the content of the <mc-tab> so that we can grab a reference to this\n    // TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\n    // tab-group.\n    template: '<ng-template><ng-content></ng-content></ng-template>',\n    inputs: ['disabled'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcTab'\n})\nexport class McTab extends mcTabMixinBase\n    implements OnInit, CanDisable, OnChanges, OnDestroy {\n    /** @docs-private */\n    get content(): TemplatePortal | null {\n        return this.contentPortal;\n    }\n    /** Content for the tab label given by `<ng-template mc-tab-label>`. */\n    @ContentChild(McTabLabel)\n    templateLabel: McTabLabel;\n\n    /**\n     * Template provided in the tab content that will be used if present, used to enable lazy-loading\n     */\n    @ContentChild(McTabContent, { read: TemplateRef })\n    explicitContent: TemplateRef<any>;\n\n    /** Template inside the McTab view that contains an `<ng-content>`. */\n    @ViewChild(TemplateRef)\n    implicitContent: TemplateRef<any>;\n\n    /** Plain text label for the tab, used when there is no template label. */\n    @Input('label')\n    textLabel: string = '';\n\n    /** Aria label for the tab. */\n    @Input('aria-label')\n    ariaLabel: string;\n\n    /**\n     * Reference to the element that the tab is labelled by.\n     * Will be cleared if `aria-label` is set at the same time.\n     */\n    @Input('aria-labelledby')\n    ariaLabelledby: string;\n\n    /** Emits whenever the internal state of the tab changes. */\n    readonly stateChanges = new Subject<void>();\n\n    /**\n     * The relatively indexed position where 0 represents the center, negative is left, and positive\n     * represents the right.\n     */\n    position: number | null = null;\n\n    /**\n     * The initial relatively index origin of the tab if it was created and selected after there\n     * was already a selected tab. Provides context of what position the tab should originate from.\n     */\n    origin: number | null = null;\n\n    /**\n     * Whether the tab is currently active.\n     */\n    isActive = false;\n\n    /** Portal that will be the hosted content of the tab */\n    private contentPortal: TemplatePortal | null = null;\n\n    constructor(private viewContainerRef: ViewContainerRef) {\n        super();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (\n            changes.hasOwnProperty('textLabel') ||\n            changes.hasOwnProperty('disabled')\n        ) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngOnInit(): void {\n        this.contentPortal = new TemplatePortal(\n            this.explicitContent || this.implicitContent,\n            this.viewContainerRef\n        );\n    }\n}\n","import { Directive } from '@angular/core';\nimport { CdkPortal } from '@ptsecurity/cdk/portal';\n\n\n/** Used to flag tab labels for use with the portal directive */\n@Directive({\n    selector: '[mc-tab-label], [mcTabLabel]'\n})\nexport class McTabLabel extends CdkPortal {}\n\n// TODO: workaround for https://github.com/angular/material2/issues/12760\n(McTabLabel as any).ctorParameters = () => (CdkPortal as any).ctorParameters;\n","import { Directive, TemplateRef } from '@angular/core';\n\n\n/** Decorates the `ng-template` tags and reads out the template from it. */\n@Directive({ selector: '[mcTabContent]' })\nexport class McTabContent {\n    constructor(public template: TemplateRef<any>) { }\n}\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by ITreeControl and each non-leaf node.\n */\nexport class McTreeNestedDataSource<T> extends DataSource<T> {\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n    }\n\n    /* tslint:disable-next-line:naming-convention */\n    private _data = new BehaviorSubject<T[]>([]);\n\n    connect(collectionViewer: ICollectionViewer): Observable<T[]> {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map(() => this.data));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { FlatTreeControl, ITreeControl } from '@ptsecurity/cdk/tree';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nexport class McTreeFlattener<T, F> {\n    constructor(\n        public transformFunction: (node: T, level: number) => F,\n        public getLevel: (node: F) => number,\n        public isExpandable: (node: F) => boolean,\n        public getChildren: (node: T) => Observable<T[]>\n    ) {}\n\n    flattenNode(node: T, level: number, resultNodes: F[], parentMap: boolean[]): F[] {\n        const flatNode = this.transformFunction(node, level);\n        resultNodes.push(flatNode);\n\n        if (this.isExpandable(flatNode)) {\n            this.getChildren(node)\n                .pipe(take(1))\n                .subscribe((children) => {\n                    children.forEach((child, index) => {\n                        const childParentMap: boolean[] = parentMap.slice();\n                        childParentMap.push(index !== children.length - 1);\n\n                        this.flattenNode(child, level + 1, resultNodes, childParentMap);\n                    });\n                });\n        }\n\n        return resultNodes;\n    }\n\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData: T[]): F[] {\n        const resultNodes: F[] = [];\n        structuredData.forEach((node) => this.flattenNode(node, 0, resultNodes, []));\n\n        return resultNodes;\n    }\n\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes: F[], treeControl: ITreeControl<F>): F[] {\n        const results: F[] = [];\n        const currentExpand: boolean[] = [];\n        currentExpand[0] = true;\n\n        nodes.forEach((node) => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n\n            if (expand) { results.push(node); }\n\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n\n        return results;\n    }\n}\n\n\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `McTree`.\n * The nested tree nodes of type `T` are flattened through `MсTreeFlattener`, and converted\n * to type `F` for `McTree` to consume.\n */\nexport class McTreeFlatDataSource<T, F> extends DataSource<F> {\n    flattenedData = new BehaviorSubject<F[]>([]);\n\n    expandedData = new BehaviorSubject<F[]>([]);\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n\n        this.flattenedData.next(this.treeFlattener.flattenNodes(this.data));\n        this.treeControl.dataNodes = this.flattenedData.value;\n    }\n\n    private _data: BehaviorSubject<T[]>;\n\n    constructor(\n        private treeControl: FlatTreeControl<F>,\n        private treeFlattener: McTreeFlattener<T, F>,\n        initialData: T[] = []\n    ) {\n        super();\n\n        this._data = new BehaviorSubject<T[]>(initialData);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<F[]> {\n        const changes = [\n            collectionViewer.viewChange,\n            this.treeControl.expansionModel.changed,\n            this.flattenedData\n        ];\n\n        return merge(...changes)\n            .pipe(map(() => {\n                this.expandedData.next(\n                    this.treeFlattener.expandFlattenedNodes(this.flattenedData.value, this.treeControl)\n                );\n\n                return this.expandedData.value;\n            }));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\nimport { McPseudoCheckboxModule } from '@ptsecurity/mosaic/core';\n\nimport { McTreeNodeDef } from './node';\nimport { McTreeNodePadding } from './padding';\nimport { McTreeNodeToggle } from './toggle';\nimport { McTreeOption } from './tree-option';\nimport { McTreeSelection } from './tree-selection';\n\n\nconst MC_TREE_DIRECTIVES = [\n    McTreeSelection,\n    McTreeOption,\n    McTreeNodeDef,\n    McTreeNodePadding,\n    McTreeNodeToggle\n];\n\n@NgModule({\n    imports: [CommonModule, CdkTreeModule, McPseudoCheckboxModule],\n    exports: MC_TREE_DIRECTIVES,\n    declarations: MC_TREE_DIRECTIVES\n})\nexport class McTreeModule {}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    EventEmitter,\n    Input,\n    IterableDiffer,\n    IterableDiffers,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    ElementRef\n} from '@angular/core';\nimport { NodeDef, ViewData } from '@angular/core/src/view';\nimport { ActiveDescendantKeyManager } from '@ptsecurity/cdk/a11y';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { CdkTree, CdkTreeNodeOutlet } from '@ptsecurity/cdk/tree';\nimport {\n    CanDisable,\n    CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\nimport { Subject } from 'rxjs';\n\nimport { MC_TREE_OPTION_PARENT_COMPONENT, McTreeOption } from './tree-option';\n\n\nexport class McTreeNavigationChange {\n    constructor(\n        public source: McTreeSelection,\n        public option: McTreeOption\n    ) {}\n}\n\nexport class McTreeSelectionChange {\n    constructor(public source: McTreeSelection, public option: McTreeOption) {}\n}\n\nclass McTreeSelectionBase<T> extends CdkTree<T> {\n    constructor(differs: IterableDiffers, changeDetectorRef: ChangeDetectorRef) {\n        super(differs, changeDetectorRef);\n    }\n}\n\n/* tslint:disable-next-line:naming-convention */\nconst McTreeSelectionBaseMixin: HasTabIndexCtor & CanDisableCtor &\n    typeof McTreeSelectionBase = mixinTabIndex(mixinDisabled(McTreeSelectionBase));\n\n\n@Component({\n    selector: 'mc-tree-selection',\n    exportAs: 'mcTreeSelection',\n    template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n    host: {\n        class: 'mc-tree-selection',\n\n        '[attr.tabindex]': 'tabIndex',\n\n        '(keydown)': 'onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    styleUrls: ['./tree.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        { provide: MC_TREE_OPTION_PARENT_COMPONENT, useExisting: McTreeSelection },\n        { provide: CdkTree, useExisting: McTreeSelection }\n    ]\n})\nexport class McTreeSelection extends McTreeSelectionBaseMixin<McTreeOption>\n    implements AfterContentInit, CanDisable, HasTabIndex {\n\n    @ViewChild(CdkTreeNodeOutlet) nodeOutlet: CdkTreeNodeOutlet;\n\n    @ContentChildren(McTreeOption) options: QueryList<McTreeOption>;\n\n    keyManager: ActiveDescendantKeyManager<McTreeOption>;\n\n    selectionModel: SelectionModel<McTreeOption>;\n\n    tabIndex: number;\n    multiple: boolean;\n    autoSelect: boolean;\n    noUnselect: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n\n    @Output() readonly navigationChange = new EventEmitter<McTreeNavigationChange>();\n\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectionChange>();\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(rawValue: boolean) {\n        const value = toBoolean(rawValue);\n\n        if (this._disabled !== value) {\n            this._disabled = value;\n\n            if (this._disabled) {\n                /* tslint:disable-next-line:no-console */\n                console.log('need disable all options');\n            } else {\n                /* tslint:disable-next-line:no-console */\n                console.log('need enable all options');\n            }\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    private readonly destroy = new Subject<void>();\n\n    constructor(\n        private elementRef: ElementRef,\n        differs: IterableDiffers,\n        changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('multiple') multiple: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string\n    ) {\n        super(differs, changeDetectorRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.multiple = multiple === null ? false : toBoolean(multiple);\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.selectionModel = new SelectionModel<McTreeOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.keyManager = new ActiveDescendantKeyManager<McTreeOption>(this.options)\n            .withVerticalOrientation(true)\n            .withHorizontalOrientation(null);\n    }\n\n    ngOnDestroy() {\n        this.destroy.next();\n\n        this.destroy.complete();\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        // tslint:disable-next-line: deprecation\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case LEFT_ARROW:\n                if (this.keyManager.activeItem) {\n                    this.treeControl.collapse(this.keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case RIGHT_ARROW:\n                if (this.keyManager.activeItem) {\n                    this.treeControl.expand(this.keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this.keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this.keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                this.keyManager.setPreviousPageItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                this.keyManager.setNextPageItemActive();\n                event.preventDefault();\n\n                break;\n            default:\n                this.keyManager.onKeydown(event);\n        }\n    }\n\n    updateScrollSize(): void {\n        if (!this.options.first) { return; }\n\n        this.keyManager.withScrollSize(Math.floor(this.getHeight() / this.options.first.getHeight()));\n    }\n\n    setFocusedOption(option: McTreeOption) {\n        this.keyManager.setActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this.keyManager.previousActiveItemIndex;\n            const activeIndex = this.keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this.canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this.emitNavigationEvent(option);\n    }\n\n    toggleFocusedOption(): void {\n        const focusedIndex = this.keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this.isValidIndex(focusedIndex)) {\n            const focusedOption: McTreeOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this.canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this.emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    renderNodeChanges(\n        data: McTreeOption[],\n        dataDiffer: IterableDiffer<McTreeOption> = this.dataDiffer,\n        viewContainer: any = this.nodeOutlet.viewContainer,\n        parentData?: McTreeOption\n    ): void {\n        super.renderNodeChanges(data, dataDiffer, viewContainer, parentData);\n\n        const arrayOfInstances = [];\n\n        viewContainer._embeddedViews.forEach((view: ViewData) => {\n            const viewDef = view.def;\n\n            viewDef.nodes.forEach((node: NodeDef) => {\n                if (viewDef.nodeMatchedQueries === node.matchedQueryIds) {\n                    const nodeData: any = view.nodes[node.nodeIndex];\n\n                    arrayOfInstances.push(nodeData.instance as never);\n                }\n            });\n        });\n\n        if (this.options) {\n            this.options.reset(arrayOfInstances);\n            this.options.notifyOnChanges();\n        }\n\n        this.updateScrollSize();\n    }\n\n    getHeight(): number {\n        const clientRects = this.elementRef.nativeElement.getClientRects();\n        if (clientRects.length) {\n            return clientRects[0].height;\n        }\n\n        return 0;\n    }\n\n    emitNavigationEvent(option: McTreeOption): void {\n        this.navigationChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    emitChangeEvent(option: McTreeOption): void {\n        this.selectionChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    private isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    private canDeselectLast(option: McTreeOption): boolean {\n        return !(this.noUnselect && this.selectionModel.selected.length === 1 && option.selected);\n    }\n}\n\n","import {\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ElementRef,\n    Inject,\n    Optional,\n    InjectionToken\n} from '@angular/core';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { CdkTreeNode } from '@ptsecurity/cdk/tree';\nimport { CanDisable, toBoolean } from '@ptsecurity/mosaic/core';\n\n\n/* tslint:disable-next-line:naming-convention */\nexport interface McTreeOptionParentComponent {\n    multiple: boolean;\n    selectionModel: SelectionModel<McTreeOption>;\n    setFocusedOption: any;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_TREE_OPTION_PARENT_COMPONENT =\n    new InjectionToken<McTreeOptionParentComponent>('MC_TREE_OPTION_PARENT_COMPONENT');\n\nexport class McTreeOptionChange {\n    constructor(public source: McTreeOption, public isUserInput = false) {}\n}\n\nlet uniqueIdCounter: number = 0;\n\n@Component({\n    selector: 'mc-tree-option',\n    exportAs: 'mcTreeOption',\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'getTabIndex()',\n\n        '[attr.disabled]': 'disabled || null',\n\n        class: 'mc-tree-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-active]': 'active',\n\n        '(click)': 'selectViaInteraction()'\n    },\n    templateUrl: './tree-option.html',\n    providers: [{ provide: CdkTreeNode, useExisting: McTreeOption }]\n})\nexport class McTreeOption extends CdkTreeNode<McTreeOption> implements CanDisable {\n    @Output() readonly onSelectionChange = new EventEmitter<McTreeOptionChange>();\n\n    @Input() value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    // @Input()\n    // get selected(): boolean {\n    //     return this.treeSelection.selectionModel && this.treeSelection.selectionModel.isSelected(this) || false;\n    // }\n\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            // this.treeSelection._reportValueChange();\n        }\n    }\n\n    private _selected: boolean = false;\n\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active(): boolean {\n        return this._active;\n    }\n\n    private _active = false;\n\n    get id(): string {\n        return this._id;\n    }\n\n    private _id = `mc-tree-option-${uniqueIdCounter++}`;\n\n    get multiple(): boolean {\n        return this.parent.multiple;\n    }\n\n    constructor(\n        protected elementRef: ElementRef,\n        protected changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_TREE_OPTION_PARENT_COMPONENT) private readonly parent: McTreeOptionParentComponent\n    ) {\n        // todo any\n        super(elementRef, parent as any);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.parent.selectionModel) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.parent.selectionModel.select(this);\n        } else {\n            this.parent.selectionModel.deselect(this);\n        }\n\n        // this._changeDetector.markForCheck();\n    }\n\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles(): void {\n        if (!this._active) {\n            this._active = true;\n\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles(): void {\n        if (this._active) {\n            this._active = false;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    getHeight(): number {\n        const clientRects = this.elementRef.nativeElement.getClientRects();\n        if (clientRects.length) {\n            return clientRects[0].height;\n        }\n\n        return 0;\n    }\n\n    focus(): void {\n        const element = this.getHostElement();\n\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n\n    // todo старая реализация, нужно восстановить tree-selection\n    // handleClick(): void {\n    //     if (this.disabled) { return; }\n    //\n    //     this.treeSelection.setFocusedOption(this);\n    // }\n\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue(): string {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this.getHostElement().textContent || '').trim();\n    }\n\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    selectViaInteraction(): void {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent(true);\n\n            if (this.parent.setFocusedOption) {\n                this.parent.setFocusedOption(this);\n            }\n        }\n    }\n\n    emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McTreeOptionChange(this, isUserInput));\n    }\n\n    getHostElement(): HTMLElement {\n        return this.elementRef.nativeElement;\n    }\n\n    getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n}\n","import { Directive } from '@angular/core';\nimport { CdkTreeNodeToggle } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeToggle]',\n    host: {\n        '(click)': 'toggle($event)'\n    },\n    providers: [{ provide: CdkTreeNodeToggle, useExisting: McTreeNodeToggle }]\n})\nexport class McTreeNodeToggle<T> extends CdkTreeNodeToggle<T> {}\n","import { Directive, Input, OnInit } from '@angular/core';\nimport { CdkTreeNodePadding } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodePadding]',\n    providers: [{ provide: CdkTreeNodePadding, useExisting: McTreeNodePadding }]\n})\nexport class McTreeNodePadding<T> extends CdkTreeNodePadding<T> implements OnInit {\n    @Input('mcTreeNodePadding') level: number;\n\n    @Input('mcTreeNodePaddingIndent') indent: number;\n\n    baseLeftPadding: number = 12;\n    /* tslint:disable-next-line:naming-convention */\n    _indent: number = 20;\n\n    withIcon: boolean;\n    iconWidth: number = 20;\n\n    get leftPadding(): number {\n        return (this.withIcon ? 0 : this.iconWidth) + this.baseLeftPadding;\n    }\n\n    paddingIndent(): string | null {\n        const nodeLevel = (this.treeNode.data && this.tree.treeControl.getLevel)\n            ? this.tree.treeControl.getLevel(this.treeNode.data)\n            : null;\n\n        const level = this.level || nodeLevel;\n\n        return level ? `${(level * this._indent) + this.leftPadding}px` : `${this.baseLeftPadding}px`;\n    }\n\n    ngOnInit(): void {\n        this.withIcon = this.tree.treeControl.isExpandable(this.treeNode.data);\n\n        this.setPadding();\n    }\n}\n","import { Directive, Input } from '@angular/core';\n\nimport { CdkTreeNodeDef } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeDef]',\n    inputs: ['when: mcTreeNodeDefWhen'],\n    providers: [{ provide: CdkTreeNodeDef, useExisting: McTreeNodeDef }]\n})\nexport class McTreeNodeDef<T> extends CdkTreeNodeDef<T> {\n    @Input('mcTreeNode') data: T;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McRadioButton, McRadioGroup } from './radio.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule],\n    exports: [McRadioGroup, McRadioButton],\n    declarations: [McRadioGroup, McRadioButton]\n})\nexport class McRadioModule {\n}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, Directive, ElementRef, EventEmitter, forwardRef,\n    Input, OnDestroy, OnInit, Optional, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { UniqueSelectionDispatcher } from '@ptsecurity/cdk/collections';\n\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n\n/** Change event object emitted by McRadio. */\nexport class McRadioChange {\n    constructor(\n        /** The McRadioButton that emits the change event. */\n        public source: McRadioButton,\n        /** The value of the McRadioButton. */\n        public value: any) {}\n}\n\n// Boilerplate for applying mixins to McRadioGroup.\n/** @docs-private */\nexport class McRadioGroupBase {}\nexport const _McRadioGroupMixinBase: CanDisableCtor & typeof McRadioGroupBase = mixinDisabled(McRadioGroupBase);\n\n/**\n * Provider Expression that allows mc-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nexport const MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McRadioGroup),\n    multi: true\n};\n\n@Directive({\n    selector: 'mc-radio-group',\n    exportAs: 'mcRadioGroup',\n    providers: [MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n    host: {\n        role: 'radiogroup',\n        class: 'mc-radio-group'\n    },\n    inputs: ['disabled']\n})\nexport class McRadioGroup extends _McRadioGroupMixinBase\n    implements AfterContentInit, ControlValueAccessor, CanDisable {\n\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    @Input()\n    get name(): string { return this._name; }\n    set name(value: string) {\n        this._name = value;\n        this.updateRadioButtonNames();\n    }\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this.markRadiosForCheck();\n    }\n\n    /** Value of the radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(newValue: any) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n\n            this.updateSelectedRadioFromValue();\n            this.checkSelectedRadioButton();\n        }\n    }\n\n    /** Whether the radio button is selected. */\n    @Input()\n    get selected() { return this._selected; }\n    set selected(selected: McRadioButton | null) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this.checkSelectedRadioButton();\n    }\n\n    /** Whether the radio group is disabled */\n    @Input()\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /** Whether the radio group is required */\n    @Input()\n    get required(): boolean { return this._required; }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /**\n     * Event emitted when the group value changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * a radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** Child radio buttons. */\n    @ContentChildren(forwardRef(() => McRadioButton), { descendants: true })\n    _radios: QueryList<McRadioButton>;\n\n    /**\n     * Selected value for group. Should equal the value of the selected radio button if there *is*\n     * a corresponding radio button with a matching value. If there is *not* such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    private _value: any = null;\n\n    /** The HTML name attribute applied to radio buttons in this group. */\n    private _name: string = `mc-radio-group-${nextUniqueId++}`;\n\n    /** The currently selected radio button. Should match value. */\n    private _selected: McRadioButton | null = null;\n\n    /** Whether the `value` has been set to its initial value. */\n    private _isInitialized: boolean = false;\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    private _labelPosition: 'before' | 'after' = 'after';\n\n    /** Whether the radio group is disabled. */\n    private _disabled: boolean = false;\n\n    /** Whether the radio group is required. */\n    private _required: boolean = false;\n\n    constructor(\n        private readonly _changeDetector: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    /** The method to be called in order to update ngModel */\n    // tslint:disable-next-line\n    controlValueAccessorChangeFn: (value: any) => void = () => {};\n\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * @docs-private\n     */\n    // tslint:disable-next-line\n    onTouched: () => any = () => {};\n\n    checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on McRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the McRadioGroup.\n        this._isInitialized = true;\n    }\n\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n\n    /** Dispatch change event with current selection and group value. */\n    emitChangeEvent(): void {\n        if (this._isInitialized) {\n            this.change.emit(new McRadioChange(this._selected!, this._value));\n        }\n    }\n\n    markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach((radio) => radio.markForCheck());\n        }\n    }\n\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     */\n    writeValue(value: any) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn: (value: any) => void) {\n        this.controlValueAccessorChangeFn = fn;\n    }\n\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n\n    private updateRadioButtonNames(): void {\n        if (this._radios) {\n            this._radios.forEach((radio) => {\n                radio.name = this.name;\n            });\n        }\n    }\n\n    /** Updates the `selected` radio button from the internal _value state. */\n    private updateSelectedRadioFromValue(): void {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n\n        if (this._radios != null && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach((radio) => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n}\n\n\n// Boilerplate for applying mixins to McRadioButton.\n/** @docs-private */\nexport class McRadioButtonBase {\n    // Since the disabled property is manually defined for the McRadioButton and isn't set up in\n    // the mixin base class. To be able to use the tabindex mixin, a disabled property must be\n    // defined to properly work.\n    disabled: boolean;\n\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McRadioButtonMixinBase:\n    CanColorCtor &\n    HasTabIndexCtor &\n    typeof McRadioButtonBase =\n        mixinColor(mixinTabIndex(McRadioButtonBase));\n\n\n@Component({\n    selector: 'mc-radio-button',\n    templateUrl: 'radio.component.html',\n    styleUrls: ['radio.css'],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    exportAs: 'mcRadioButton',\n    host: {\n        class: 'mc-radio-button',\n        '[attr.id]': 'id',\n        '[class.mc-checked]': 'checked',\n        '[class.mc-disabled]': 'disabled',\n        '(focus)': '_inputElement.nativeElement.focus()'\n    }\n})\nexport class McRadioButton extends _McRadioButtonMixinBase\n    implements OnInit, OnDestroy, CanColor, HasTabIndex {\n\n    private readonly _uniqueId: string = `mc-radio-${++nextUniqueId}`;\n\n    /* tslint:disable:member-ordering */\n\n    /** The unique ID for the radio button. */\n    @Input() id: string = this._uniqueId;\n\n    /** Analog to HTML 'name' attribute used to group radios for unique selection. */\n    @Input() name: string;\n\n    /** Used to set the 'aria-label' attribute on the underlying input element. */\n    @Input('aria-label') ariaLabel: string;\n\n    /** The 'aria-labelledby' attribute takes precedence as the element's text alternative. */\n    @Input('aria-labelledby') ariaLabelledby: string;\n\n    /** The 'aria-describedby' attribute is read after the element's label and field type. */\n    @Input('aria-describedby') ariaDescribedby: string;\n\n    /** Whether this radio button is checked. */\n    @Input()\n    get checked(): boolean { return this._checked; }\n    set checked(value: boolean) {\n        const newCheckedState = toBoolean(value);\n\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            } else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** The value of this radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(value: any) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup != null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n\n    /** Whether the radio button is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled || (this.radioGroup != null && this.radioGroup.disabled);\n    }\n    set disabled(value: boolean) {\n        const newDisabledState = toBoolean(value);\n\n        if (this._disabled !== newDisabledState) {\n\n            this._disabled = newDisabledState;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** Whether the radio button is required. */\n    @Input()\n    get required(): boolean {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    private _labelPosition: 'before' | 'after';\n\n    /** The native `<input type=radio>` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Event emitted when the checked state of this radio button changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * the radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** The parent radio group. May or may not be present. */\n    radioGroup: McRadioGroup;\n\n    @Input()\n    isFocused: boolean = false;\n\n    /** ID of the native input element inside `<mc-radio-button>` */\n    get inputId(): string { return `${this.id || this._uniqueId}-input`; }\n\n    /** Whether this radio is checked. */\n    private _checked: boolean = false;\n\n    /** Whether this radio is disabled. */\n    private _disabled: boolean;\n\n    /** Whether this radio is required. */\n    private _required: boolean;\n\n    /** Value assigned to this radio. */\n    private _value: any = null;\n\n    /** Unregister function for _radioDispatcher */\n    // tslint:disable-next-line\n    private readonly removeUniqueSelectionListener: () => void = () => {};\n\n    constructor(\n        @Optional() radioGroup: McRadioGroup,\n        elementRef: ElementRef,\n        private readonly _changeDetector: ChangeDetectorRef,\n        private readonly _radioDispatcher: UniqueSelectionDispatcher\n    ) {\n\n        super(elementRef);\n\n        this.radioGroup = radioGroup;\n\n        this.removeUniqueSelectionListener =\n            _radioDispatcher.listen((id: string, name: string) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            });\n    }\n\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n\n    ngOnDestroy() {\n        this.removeUniqueSelectionListener();\n    }\n\n    /** Focuses the radio button. */\n    // tslint:disable-next-line\n    focus(): void {}\n\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n\n    onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n\n    onInputChange(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this.emitChangeEvent();\n\n        if (this.radioGroup) {\n            this.radioGroup.controlValueAccessorChangeFn(this.value);\n            this.radioGroup.touch();\n            if (groupValueChanged) {\n                this.radioGroup.emitChangeEvent();\n            }\n        }\n    }\n\n    /** Dispatch change event with current value. */\n    private emitChangeEvent(): void {\n        this.change.emit(new McRadioChange(this, this._value));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McProgressSpinner } from './progress-spinner.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressSpinner\n    ],\n    declarations: [\n        McProgressSpinner\n    ]\n})\nexport class McProgressSpinnerModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressSpinnerMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressSpinnerBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressSpinnerMixinBase:\n    CanColorCtor &\n    typeof McProgressSpinnerBase =\n        mixinColor(McProgressSpinnerBase);\n\nconst MAX_DASH_ARRAY = 273;\n\n@Component({\n    selector: 'mc-progress-spinner',\n    templateUrl: './progress-spinner.component.html',\n    styleUrls: ['./progress-spinner.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-spinner',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressSpinner extends _McProgressSpinnerMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-spinner-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressSpinnerMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n\n    get dashOffsetPercent(): string {\n        return `${MAX_DASH_ARRAY - this.percentage * MAX_DASH_ARRAY}%`;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McProgressBar\n} from './progress-bar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressBar\n    ],\n    declarations: [\n        McProgressBar\n    ]\n})\nexport class McProgressBarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressBarMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressBarBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressBarMixinBase:\n    CanColorCtor &\n    typeof McProgressBarBase =\n        mixinColor(McProgressBarBase);\n\n@Component({\n    selector: 'mc-progress-bar',\n    templateUrl: './progress-bar.component.html',\n    styleUrls: ['./progress-bar.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-bar',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressBar extends _McProgressBarMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-bar-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressBarMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport {\n    McNavbar,\n    McNavbarContainer,\n    McNavbarItem,\n    McNavbarTitle,\n    McNavbarBrand,\n    McNavbarLogo\n} from './navbar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        McIconModule\n    ],\n    exports: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ],\n    declarations: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ]\n})\nexport class McNavbarModule {}\n","import { fromEvent, Observable, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport {\n    AfterViewInit,\n    Component, Directive,\n    ElementRef,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    ViewEncapsulation,\n    ContentChild,\n    TemplateRef,\n    ChangeDetectorRef,\n    ChangeDetectionStrategy,\n    ViewChild\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Platform } from '@ptsecurity/cdk/platform';\nimport { CanDisable, CanDisableCtor, mixinDisabled } from '@ptsecurity/mosaic/core';\n\n\nconst COLLAPSED_CLASS: string = 'mc-navbar-collapsed-title';\nconst MC_ICON = 'mc-icon';\nconst MC_NAVBAR = 'mc-navbar';\nconst MC_NAVBAR_CONTAINER = 'mc-navbar-container';\nconst MC_NAVBAR_ITEM = 'mc-navbar-item';\nconst MC_NAVBAR_BRAND = 'mc-navbar-brand';\nconst MC_NAVBAR_TITLE = 'mc-navbar-title';\nconst MC_NAVBAR_LOGO = 'mc-navbar-logo';\n\nexport type McNavbarContainerPositionType = 'left' | 'right';\n\nexport interface IMcNavbarDropdownItem {\n    link?: string;\n    text: string;\n}\n\n@Directive({\n    selector: MC_NAVBAR_LOGO,\n    host: {\n        class: MC_NAVBAR_LOGO\n    }\n})\nexport class McNavbarLogo {}\n\n@Directive({\n    selector: MC_NAVBAR_BRAND,\n    host: {\n        class: MC_NAVBAR_BRAND\n    }\n})\nexport class McNavbarBrand {}\n\n@Directive({\n    selector: MC_NAVBAR_TITLE,\n    host: {\n        class: MC_NAVBAR_TITLE\n    }\n})\nexport class McNavbarTitle {}\n\nexport class McNavbarItemBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McNavbarMixinBase: CanDisableCtor & typeof McNavbarItemBase = mixinDisabled(McNavbarItemBase);\n\n@Component({\n    selector: MC_NAVBAR_ITEM,\n    template: `\n        <a\n            [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\n            (click)=\"handleClickByItem()\"\n            (keydown)=\"handleKeydown($event)\"\n            class=\"mc-navbar-item\"\n        >\n            <ng-content></ng-content>\n            <i *ngIf=\"hasDropdownContent\" mc-icon=\"mc-angle-down-M_16\"></i>\n        </a>\n        <ul\n            #dropdownContent\n            *ngIf=\"hasDropdownContent\"\n            [ngClass]=\"{ 'is-collapsed': isCollapsed }\"\n            class=\"mc-navbar-dropdown\"\n        >\n            <li\n                *ngFor=\"let item of dropdownItems\"\n                (click)=\"handleClickByDropdownItem()\"\n                class=\"mc-navbar-dropdown-item\"\n            >\n                <ng-container *ngIf=\"dropdownItemTmpl\">\n                    <ng-container *ngTemplateOutlet=\"dropdownItemTmpl; context: { $implicit: item }\"></ng-container>\n                </ng-container>\n                <a\n                    *ngIf=\"!dropdownItemTmpl\"\n                    [attr.href]=\"item.link\"\n                    [ngClass]=\"{ 'is-active': isActiveDropdownLink(item.link) }\"\n                    class=\"mc-navbar-dropdown-link\"\n                >{{ item.text }}</a>\n            </li>\n        </ul>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': '-1'\n    }\n})\nexport class McNavbarItem extends _McNavbarMixinBase implements OnInit, AfterViewInit, OnDestroy, CanDisable {\n\n    @Input()\n    tabIndex: number = 0;\n\n    @Input()\n    dropdownItems: IMcNavbarDropdownItem[] = [];\n\n    @Input()\n    set collapsedTitle(value: string) {\n        this.elementRef.nativeElement.setAttribute('computedTitle', encodeURI(value));\n    }\n\n    @ContentChild('dropdownItemTmpl', { read: TemplateRef })\n    dropdownItemTmpl: TemplateRef<IMcNavbarDropdownItem>;\n\n    @ViewChild('dropdownContent', { read: ElementRef })\n    dropdownContent: ElementRef;\n\n    get hasDropdownContent() {\n        return this.dropdownItems.length > 0;\n    }\n\n    isCollapsed: boolean = true;\n\n    private _subscription: Subscription = new Subscription();\n    private _focusMonitor$: Observable<FocusOrigin>;\n\n    private get _dropdownElements(): HTMLElement[] {\n        return this.dropdownContent ? this.dropdownContent.nativeElement.querySelectorAll('li > *') : [];\n    }\n\n    constructor(\n        public  elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _platform: Platform,\n        private _cdRef: ChangeDetectorRef\n    ) {\n        super(elementRef);\n    }\n\n    ngOnInit() {\n        this.denyClickIfDisabled();\n\n        this._focusMonitor$ = this._focusMonitor.monitor(this.elementRef.nativeElement, true);\n\n        if (this.hasDropdownContent) {\n            this.listenClickOutside();\n        }\n    }\n\n    ngAfterViewInit() {\n        if (!this.hasDropdownContent) {\n            return;\n        }\n\n        this.startListenFocusDropdownItems();\n    }\n\n    ngOnDestroy() {\n        this._subscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n        this.stopListenFocusDropdownItems();\n    }\n\n    isActiveDropdownLink(link: string): boolean {\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n\n        return window.location.href.indexOf(link) >= 0;\n    }\n\n    handleClickByItem() {\n        this.toggleDropdown();\n    }\n\n    handleKeydown($event: KeyboardEvent) {\n        const isNavbarItem = ($event.target as HTMLElement).classList.contains(MC_NAVBAR_ITEM);\n\n        // tslint:disable-next-line\n        if (this.hasDropdownContent && $event.keyCode === SPACE && isNavbarItem) {\n            this.toggleDropdown();\n        }\n    }\n\n    handleClickByDropdownItem() {\n        this.forceCloseDropdown();\n    }\n\n    private listenClickOutside() {\n        this._subscription.add(\n            this._focusMonitor$.subscribe((origin) => {\n                if (origin === null) {\n                    this.forceCloseDropdown();\n                }\n            })\n        );\n    }\n\n    private toggleDropdown() {\n        this.isCollapsed = !this.isCollapsed;\n    }\n\n    private forceCloseDropdown() {\n        this.isCollapsed = true;\n        this._cdRef.detectChanges();\n    }\n\n    private startListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.monitor(el, true);\n        });\n    }\n\n    private stopListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.stopMonitoring(el);\n        });\n    }\n\n    // This method is required due to angular 2 issue https://github.com/angular/angular/issues/11200\n    private denyClickIfDisabled() {\n        const events: Event[] = this.elementRef.nativeElement.eventListeners('click');\n\n        events.forEach((event) => this.elementRef.nativeElement.removeEventListener('click', event));\n\n        this.elementRef.nativeElement.addEventListener('click', (event: MouseEvent) => {\n            if (this.elementRef.nativeElement.hasAttribute('disabled')) {\n                event.stopImmediatePropagation();\n            }\n        }, true);\n\n        events.forEach((event) => this.elementRef.nativeElement.addEventListener('click', event));\n    }\n}\n\n@Directive({\n    selector: MC_NAVBAR_CONTAINER\n})\nexport class McNavbarContainer {\n    @Input()\n    position: McNavbarContainerPositionType = 'left';\n\n    @HostBinding('class')\n    get cssClasses(): string {\n        return this.position === 'left' ? 'mc-navbar-left' : 'mc-navbar-right';\n    }\n}\n\nclass CollapsibleItem {\n    private _collapsed: boolean = false;\n\n    constructor(\n        public element: HTMLElement,\n        public width: number\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        this._collapsed = collapsed;\n\n        this.updateCollapsedClass();\n    }\n\n    private updateCollapsedClass() {\n        if (this._collapsed) {\n            this.element.classList.add(COLLAPSED_CLASS);\n        } else {\n            this.element.classList.remove(COLLAPSED_CLASS);\n        }\n\n    }\n}\n\nclass CachedItemWidth {\n\n    get canCollapse(): boolean {\n        return this.itemsForCollapse.length > 0;\n    }\n\n    private _collapsedItemsWidth: number;\n\n    get collapsedItemsWidth(): number {\n        if (this._collapsedItemsWidth !== undefined) {\n            return this._collapsedItemsWidth;\n        }\n\n        this.calculateAndCacheCollapsedItemsWidth();\n\n        return this._collapsedItemsWidth;\n    }\n\n    constructor(\n        public element: HTMLElement,\n        public width: number,\n        public itemsForCollapse: CollapsibleItem[] = []\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        if (this.itemsForCollapse.length > 0) {\n            this.updateTitle(collapsed);\n        }\n\n        this.itemsForCollapse.forEach((item) => item.processCollapsed(collapsed));\n    }\n\n    private calculateAndCacheCollapsedItemsWidth() {\n        this._collapsedItemsWidth = this.itemsForCollapse\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getTitle(): string {\n        const computedTitle = this.element.getAttribute('computedTitle');\n\n        return computedTitle\n            ? decodeURI(computedTitle)\n            : (this.itemsForCollapse.length > 0 ? this.itemsForCollapse[0].element.innerText : '');\n    }\n\n    private updateTitle(collapsed: boolean) {\n        if (collapsed) {\n            this.element.setAttribute('title', this.getTitle());\n        } else {\n            this.element.removeAttribute('title');\n        }\n    }\n}\n\n\n@Component({\n    selector: MC_NAVBAR,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <nav class=\"mc-navbar\">\n            <ng-content select=\"[${MC_NAVBAR_CONTAINER}],${MC_NAVBAR_CONTAINER}\"></ng-content>\n        </nav>\n    `,\n    styleUrls: ['./navbar.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class McNavbar implements AfterViewInit, OnDestroy {\n\n    private readonly forceRecalculateItemsWidth: boolean = false;\n    private readonly resizeDebounceInterval: number = 100;\n    private readonly firstLevelElement: string = MC_NAVBAR_CONTAINER;\n    private readonly secondLevelElements: string[] = [\n        MC_NAVBAR_ITEM,\n        MC_NAVBAR_BRAND,\n        MC_NAVBAR_TITLE\n    ];\n\n    private _totalItemsWidths: number;\n    private _itemsWidths: CachedItemWidth[];\n\n    private get maxAllowedWidth(): number {\n        return this._elementRef.nativeElement.querySelector('nav').getBoundingClientRect().width;\n    }\n\n    private get itemsWidths(): CachedItemWidth[] {\n        if (this._itemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._itemsWidths;\n        }\n\n        this.calculateAndCacheItemsWidth();\n\n        return this._itemsWidths;\n    }\n\n    private get totalItemsWidth(): number {\n        if (this._totalItemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._totalItemsWidths;\n        }\n\n        this.calculateAndCacheTotalItemsWidth();\n\n        return this._totalItemsWidths;\n    }\n\n    private _resizeSubscription: Subscription;\n\n    constructor(\n        private _elementRef: ElementRef\n    ) {\n        const resizeObserver = fromEvent(window, 'resize')\n            .pipe(debounceTime(this.resizeDebounceInterval));\n\n        this._resizeSubscription = resizeObserver.subscribe(this.updateCollapsed.bind(this));\n    }\n\n    updateCollapsed(): void {\n        let collapseDelta = this.totalItemsWidth - this.maxAllowedWidth;\n\n        for (let i = this.itemsWidths.length - 1; i >= 0; i--) {\n            const item = this.itemsWidths[i];\n\n            if (!item.canCollapse) {\n                continue;\n            }\n\n            item.processCollapsed(collapseDelta > 0);\n            collapseDelta -= item.collapsedItemsWidth;\n        }\n    }\n\n    ngAfterViewInit(): void {\n        // Note: this wait is required for loading and rendering fonts for icons;\n        // unfortunately we cannot control font rendering\n        setTimeout(() => this.updateCollapsed(), 0);\n    }\n\n    ngOnDestroy() {\n        this._resizeSubscription.unsubscribe();\n    }\n\n    private calculateAndCacheTotalItemsWidth() {\n        this._totalItemsWidths = this.itemsWidths\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getOuterElementWidth(element: HTMLElement): number {\n        const baseWidth  = element.getBoundingClientRect().width;\n        const marginRight = parseInt(getComputedStyle(element).getPropertyValue('margin-right'));\n        const marginLeft = parseInt(getComputedStyle(element).getPropertyValue('margin-left'));\n\n        return baseWidth + marginRight + marginLeft;\n    }\n\n    private calculateAndCacheItemsWidth() {\n        const allItemsSelector = this.secondLevelElements\n            .map((e: string) => `${this.firstLevelElement}>${e}`);\n        const allItems: HTMLElement[] = Array.from(this._elementRef.nativeElement.querySelectorAll(allItemsSelector));\n\n        this._itemsWidths = allItems\n            .map((el) => new CachedItemWidth(el, this.getOuterElementWidth(el), this.getItemsForCollapse(el)));\n    }\n\n    private getItemsForCollapse(element: HTMLElement): CollapsibleItem[] {\n        const icon = element.querySelector(`[${MC_ICON}],${MC_NAVBAR_LOGO},[${MC_NAVBAR_LOGO}]`);\n\n        if (!icon) {\n            return [];\n        }\n\n        return Array.from(element.querySelectorAll(MC_NAVBAR_TITLE))\n            .map((el) => new CollapsibleItem(<HTMLElement> el, el.getBoundingClientRect().width));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { CssUnitPipe } from './css-unit.pipe';\nimport { McModalControlService } from './modal-control.service';\nimport { McModalComponent } from './modal.component';\nimport { McModalService } from './modal.service';\n\n\n@NgModule({\n    imports: [ CommonModule, OverlayModule, McButtonModule, McIconModule ],\n    exports: [ McModalComponent ],\n    declarations: [ McModalComponent, CssUnitPipe ],\n    entryComponents: [ McModalComponent ],\n    providers: [ McModalControlService, McModalService ]\n})\nexport class McModalModule { }\n","import { ComponentRef, Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\nimport { McModalComponent } from './modal.component';\nimport { ConfirmType, IModalOptions, IModalOptionsForService } from './modal.type';\n\n\n// A builder used for managing service creating modals\nexport class ModalBuilderForService {\n\n    // Modal ComponentRef, \"null\" means it has been destroyed\n    private modalRef: ComponentRef<McModalComponent> | null;\n    private overlayRef: OverlayRef;\n\n    constructor(private overlay: Overlay, options: IModalOptionsForService = {}) {\n        this.createModal();\n\n        if (!('mcGetContainer' in options)) {\n            options.mcGetContainer = undefined;\n        }\n\n        this.changeProps(options);\n        this.modalRef!.instance.open();\n        this.modalRef!.instance.mcAfterClose.subscribe(() => this.destroyModal());\n\n        this.overlayRef.keydownEvents()\n            // @ts-ignore\n            .pipe(filter((event: KeyboardEvent) => {\n                return event.keyCode === ESCAPE && options.mcCloseByESC;\n            }))\n            .subscribe(() => this.modalRef!.instance.close());\n    }\n\n    getInstance(): McModalComponent | null {\n        return this.modalRef && this.modalRef.instance;\n    }\n\n    destroyModal(): void {\n        if (this.modalRef) {\n            this.overlayRef.dispose();\n            this.modalRef = null;\n        }\n    }\n\n    private changeProps(options: IModalOptions): void {\n        if (this.modalRef) {\n            // here not limit user's inputs at runtime\n            Object.assign(this.modalRef.instance, options);\n        }\n    }\n\n    // Create component to ApplicationRef\n    private createModal(): void {\n        this.overlayRef = this.overlay.create();\n        this.modalRef = this.overlayRef.attach(new ComponentPortal(McModalComponent));\n    }\n}\n\n@Injectable()\nexport class McModalService {\n    // Track of the current close modals (we assume invisible is close this time)\n    get openModals(): McModalRef[] {\n        return this.modalControl.openModals;\n    }\n\n    get afterAllClose(): Observable<void> {\n        return this.modalControl.afterAllClose.asObservable();\n    }\n\n    constructor(\n        private overlay: Overlay,\n        private modalControl: McModalControlService) {\n    }\n\n    // Closes all of the currently-open dialogs\n    closeAll(): void {\n        this.modalControl.closeAll();\n    }\n\n    create<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n\n        if (typeof options.mcOnCancel !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnCancel = () => {};\n        }\n\n        if (!('mcCloseByESC' in options)) {\n            options.mcCloseByESC = true;\n        }\n\n\n        if (!('mcWidth' in options)) {\n            // tslint:disable-next-line\n            options.mcWidth = 480;\n        }\n\n        return new ModalBuilderForService(this.overlay, options).getInstance()!;\n    }\n\n    confirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType = 'confirm'): McModalRef<T> {\n        if ('mcFooter' in options) {\n            console.warn(`The Confirm-Modal doesn't support \"mcFooter\", this property will be ignored.`);\n        }\n\n        // NOTE: only support function currently by calling confirm()\n        if (typeof options.mcOnOk !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnOk = () => {};\n        }\n\n        options.mcModalType = 'confirm';\n        options.mcClassName = `mc-confirm mc-confirm-${confirmType} ${options.mcClassName || ''}`;\n        options.mcMaskClosable = false;\n\n        return this.create(options);\n    }\n\n    success<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'success');\n    }\n\n    delete<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'warn');\n    }\n\n    private simpleConfirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType): McModalRef<T> {\n        // Remove the Cancel button if the user not specify a Cancel button\n        if (!('mcCancelText' in options)) {\n            // @ts-ignore\n            options.mcCancelText = null;\n        }\n\n        return this.confirm(options, confirmType);\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({\n    name: 'toCssUnit'\n})\nexport class CssUnitPipe implements PipeTransform {\n    transform(value: number | string, defaultUnit: string = 'px'): string {\n        const formatted = +value;\n\n        return isNaN(formatted) ? `${value}` : `${formatted}${defaultUnit}`;\n    }\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    Renderer2,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewContainerRef, ViewEncapsulation\n} from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { McMeasureScrollbarService } from '@ptsecurity/mosaic/core';\nimport { Observable } from 'rxjs';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\n// tslint:disable-next-line\nimport ModalUtil from './modal-util';\nimport { IModalButtonOptions, IModalOptions, ModalType, OnClickCallback } from './modal.type';\n\n\n// Duration when perform animations (ms)\nexport const MODAL_ANIMATE_DURATION = 200;\n\ntype AnimationState = 'enter' | 'leave' | null;\n\n@Component({\n    selector: 'mc-modal',\n    templateUrl: './modal.component.html',\n    styleUrls: ['./modal.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McModalComponent<T = any, R = any> extends McModalRef<T, R>\n    implements OnInit, OnChanges, AfterViewInit, OnDestroy, IModalOptions {\n\n    // tslint:disable-next-line:no-any\n    @Input() mcModalType: ModalType = 'default';\n    // If not specified, will use <ng-content>\n    @Input() mcContent: string | TemplateRef<{}> | Type<T>;\n    // available when mcContent is a component\n    @Input() mcComponentParams: T;\n    // Default Modal ONLY\n    @Input() mcFooter: string | TemplateRef<{}> | IModalButtonOptions<T>[];\n\n    @Input()\n    get mcVisible() { return this._mcVisible; }\n    set mcVisible(value) { this._mcVisible = value; }\n\n    _mcVisible = false;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n\n    @Input() mcZIndex: number = 1000;\n    @Input() mcWidth: number | string = 480;\n    @Input() mcWrapClassName: string;\n    @Input() mcClassName: string;\n    @Input() mcStyle: object;\n    @Input() mcTitle: string | TemplateRef<{}>;\n    @Input() mcCloseByESC: boolean = true;\n\n    @Input()\n    get mcClosable() { return this._mcClosable; }\n    set mcClosable(value) { this._mcClosable = value; }\n    _mcClosable = true;\n\n    @Input()\n    get mcMask() { return this._mcMask; }\n    set mcMask(value) { this._mcMask = value; }\n    _mcMask = true;\n\n    @Input()\n    get mcMaskClosable() { return this._mcMaskClosable; }\n    set mcMaskClosable(value) { this._mcMaskClosable = value; }\n    _mcMaskClosable = true;\n\n    @Input() mcMaskStyle: object;\n    @Input() mcBodyStyle: object;\n\n    // Trigger when modal open(visible) after animations\n    @Output() mcAfterOpen = new EventEmitter<void>();\n    // Trigger when modal leave-animation over\n    @Output() mcAfterClose = new EventEmitter<R>();\n\n    // --- Predefined OK & Cancel buttons\n    @Input() mcOkText: string;\n    @Input() mcOkType = 'primary';\n\n    @Input()\n    get mcOkLoading() { return this._mcOkLoading; }\n    set mcOkLoading(value) { this._mcOkLoading = value; }\n    _mcOkLoading = false;\n\n    @Input() @Output() mcOnOk: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    @Input() mcCancelText: string;\n\n    @Input()\n    get mcCancelLoading() { return this._mcCancelLoading; }\n    set mcCancelLoading(value) { this._mcCancelLoading = value; }\n    _mcCancelLoading = false;\n\n    @Input() @Output() mcOnCancel: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n\n    @ViewChild('modalContainer') modalContainer: ElementRef;\n    @ViewChild('bodyContainer', { read: ViewContainerRef }) bodyContainer: ViewContainerRef;\n    // Only aim to focus the ok button that needs to be auto focused\n    @ViewChild('autoFocusButtonOk', { read: ElementRef }) autoFocusButtonOk: ElementRef;\n\n    maskAnimationClassMap: object;\n    modalAnimationClassMap: object;\n    // The origin point that animation based on\n    transformOrigin = '0px 0px 0px';\n\n    // Observable alias for mcAfterOpen\n    get afterOpen(): Observable<void> {\n        return this.mcAfterOpen.asObservable();\n    }\n\n    // Observable alias for mcAfterClose\n    get afterClose(): Observable<R> {\n        return this.mcAfterClose.asObservable();\n    }\n\n    get okText(): string {\n        return this.mcOkText;\n    }\n\n    get cancelText(): string {\n        return this.mcCancelText;\n    }\n\n    // Indicate whether this dialog should hidden\n    get hidden(): boolean {\n        return !this.mcVisible && !this.animationState;\n    }\n\n    // Handle the reference when using mcContent as Component\n    private contentComponentRef: ComponentRef<T>;\n    // Current animation state\n    private animationState: AnimationState;\n    private container: HTMLElement | OverlayRef;\n\n    constructor(\n        private overlay: Overlay,\n        private renderer: Renderer2,\n        private cfr: ComponentFactoryResolver,\n        private elementRef: ElementRef,\n        private viewContainer: ViewContainerRef,\n        private mcMeasureScrollbarService: McMeasureScrollbarService,\n        private modalControl: McModalControlService,\n        private changeDetector: ChangeDetectorRef,\n        @Inject(DOCUMENT) private document: any) {\n\n        super();\n    }\n\n    @Input() mcGetContainer: HTMLElement | OverlayRef | (() => HTMLElement | OverlayRef) = () => this.overlay.create();\n\n    ngOnInit() {\n\n        // Create component along without View\n        if (this.isComponent(this.mcContent)) {\n            this.createDynamicComponent(this.mcContent as Type<T>);\n        }\n\n        // Setup default button options\n        if (this.isModalButtons(this.mcFooter)) {\n            this.mcFooter = this.formatModalButtons(this.mcFooter as IModalButtonOptions<T>[]);\n        }\n\n        // Place the modal dom to elsewhere\n        this.container = typeof this.mcGetContainer === 'function' ? this.mcGetContainer() : this.mcGetContainer;\n        if (this.container instanceof HTMLElement) {\n            this.container.appendChild(this.elementRef.nativeElement);\n        } else if (this.container instanceof OverlayRef) {\n            // NOTE: only attach the dom to overlay, the view container is not changed actually\n            this.container.overlayElement.appendChild(this.elementRef.nativeElement);\n        }\n\n        // Register modal when afterOpen/afterClose is stable\n        this.modalControl.registerModal(this);\n    }\n\n    // [NOTE] NOT available when using by service!\n    // Because ngOnChanges never be called when using by service,\n    // here we can't support \"mcContent\"(Component) etc. as inputs that initialized dynamically.\n    // BUT: User also can change \"mcContent\" dynamically to trigger UI changes\n    // (provided you don't use \bComponent that needs initializations)\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.mcVisible) {\n            // Do not trigger animation while initializing\n            this.handleVisibleStateChange(this.mcVisible, !changes.mcVisible.firstChange);\n        }\n    }\n\n    ngAfterViewInit() {\n        // If using Component, it is the time to attach View while bodyContainer is ready\n        if (this.contentComponentRef) {\n            this.bodyContainer.insert(this.contentComponentRef.hostView);\n        }\n\n        if (this.autoFocusButtonOk) {\n            (this.autoFocusButtonOk.nativeElement as HTMLButtonElement).focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.container instanceof OverlayRef) {\n            this.container.dispose();\n        }\n    }\n\n    open() {\n        this.changeVisibleFromInside(true);\n    }\n\n    close(result?: R) {\n        this.changeVisibleFromInside(false, result);\n    }\n\n    // Destroy equals Close\n    destroy(result?: R) {\n        this.close(result);\n    }\n\n    triggerOk() {\n        this.onClickOkCancel('ok');\n    }\n\n    triggerCancel() {\n        this.onClickOkCancel('cancel');\n    }\n\n    getInstance(): McModalComponent {\n        return this;\n    }\n\n    getContentComponentRef(): ComponentRef<T> {\n        return this.contentComponentRef;\n    }\n\n    getContentComponent(): T {\n        return this.contentComponentRef && this.contentComponentRef.instance;\n    }\n\n    getElement(): HTMLElement {\n        return this.elementRef && this.elementRef.nativeElement;\n    }\n\n    onClickMask($event: MouseEvent) {\n        if (\n            this.mcMask &&\n            this.mcMaskClosable &&\n            ($event.target as HTMLElement).classList.contains('mc-modal-wrap') &&\n            this.mcVisible\n        ) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // tslint:disable-next-line\n    isModalType(type: ModalType): boolean {\n        return this.mcModalType === type;\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        if (event.keyCode === ESCAPE && this.container && (this.container instanceof OverlayRef)) {\n\n            this.close();\n            event.preventDefault();\n        }\n    }\n\n    // AoT\n    onClickCloseBtn() {\n        if (this.mcVisible) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // AoT\n    // tslint:disable-next-line\n    onClickOkCancel(type: 'ok' | 'cancel') {\n        const trigger = { ok: this.mcOnOk, cancel: this.mcOnCancel }[type];\n        const loadingKey = { ok: 'mcOkLoading', cancel: 'mcCancelLoading' }[type];\n\n        if (trigger instanceof EventEmitter) {\n            trigger.emit(this.getContentComponent());\n        } else if (typeof trigger === 'function') {\n\n            const result = trigger(this.getContentComponent());\n            // Users can return \"false\" to prevent closing by default\n            const caseClose = (doClose: boolean | void | {}) => (doClose !== false) && this.close(doClose as R);\n\n            if (isPromise(result)) {\n                this[loadingKey] = true;\n                const handleThen = (doClose) => {\n                    this[loadingKey] = false;\n                    caseClose(doClose);\n                };\n                (result as Promise<void>).then(handleThen).catch(handleThen);\n            } else {\n                caseClose(result);\n            }\n        }\n    }\n\n    // AoT\n    isNonEmptyString(value: {}): boolean {\n        return typeof value === 'string' && value !== '';\n    }\n\n    // AoT\n    isTemplateRef(value: {}): boolean {\n        return value instanceof TemplateRef;\n    }\n\n    // AoT\n    isComponent(value: {}): boolean {\n        return value instanceof Type;\n    }\n\n    // AoT\n    isModalButtons(value: {}): boolean {\n        return Array.isArray(value) && value.length > 0;\n    }\n\n    // Do rest things when visible state changed\n    private handleVisibleStateChange(visible: boolean, animation: boolean = true, closeResult?: R): Promise<any> {\n        // Hide scrollbar at the first time when shown up\n        if (visible) {\n            this.changeBodyOverflow(1);\n        }\n\n        return Promise\n            .resolve(animation && this.animateTo(visible))\n            // Emit open/close event after animations over\n            .then(() => {\n                if (visible) {\n                    this.mcAfterOpen.emit();\n                } else {\n                    this.mcAfterClose.emit(closeResult);\n                    // Show/hide scrollbar when animation is over\n                    this.changeBodyOverflow();\n                }\n            });\n    }\n\n    // Lookup a button's property, if the prop is a function, call & then return the result, otherwise, return itself.\n    // AoT\n    // tslint:disable-next-line\n    getButtonCallableProp(options: IModalButtonOptions<T>, prop: string): {} {\n        const value = options[prop];\n        const args: any[] = [];\n        if (this.contentComponentRef) {\n            args.push(this.contentComponentRef.instance);\n        }\n\n        return typeof value === 'function' ? value.apply(options, args) : value;\n    }\n\n    // On mcFooter's modal button click\n    // AoT\n    // tslint:disable-next-line\n    onButtonClick(button: IModalButtonOptions<T>) {\n        // Call onClick directly\n        const result = this.getButtonCallableProp(button, 'onClick');\n        if (isPromise(result)) {\n            button.loading = true;\n            (result as Promise<{}>).then(() => button.loading = false).catch(() => button.loading = false);\n        }\n    }\n\n    // Change mcVisible from inside\n    private changeVisibleFromInside(visible: boolean, closeResult?: R): Promise<void> {\n        if (this.mcVisible !== visible) {\n            // Change mcVisible value immediately\n            this.mcVisible = visible;\n            this.mcVisibleChange.emit(visible);\n\n            return this.handleVisibleStateChange(visible, true, closeResult);\n        }\n\n        return Promise.resolve();\n    }\n\n    private changeAnimationState(state: AnimationState) {\n        this.animationState = state;\n        if (state) {\n            this.maskAnimationClassMap = {\n                [`fade-${state}`]: true,\n                [`fade-${state}-active`]: true\n            };\n            this.modalAnimationClassMap = {\n                [`zoom-${state}`]: true,\n                [`zoom-${state}-active`]: true\n            };\n        } else {\n            // @ts-ignore\n            this.maskAnimationClassMap = this.modalAnimationClassMap = null;\n        }\n\n        if (this.contentComponentRef) {\n            this.contentComponentRef.changeDetectorRef.markForCheck();\n        } else {\n            this.changeDetector.markForCheck();\n        }\n    }\n\n    private animateTo(isVisible: boolean): Promise<any> {\n        // Figure out the lastest click position when shows up\n        if (isVisible) {\n            // [NOTE] Using timeout due to the document.click event is fired later than visible change,\n            // so if not postponed to next event-loop, we can't get the lastest click position\n            window.setTimeout(() => this.updateTransformOrigin());\n        }\n\n        this.changeAnimationState(isVisible ? 'enter' : 'leave');\n\n        // Return when animation is over\n        return new Promise((resolve) => window.setTimeout(() => {\n            this.changeAnimationState(null);\n            resolve();\n        }, MODAL_ANIMATE_DURATION));\n    }\n\n    private formatModalButtons(buttons: IModalButtonOptions<T>[]): IModalButtonOptions<T>[] {\n        return buttons.map((button) => {\n\n            return {\n                ...{\n                    type: 'default',\n                    size: 'default',\n                    autoLoading: true,\n                    show: true,\n                    loading: false,\n                    disabled: false\n                },\n                ...button\n            };\n        });\n    }\n\n    /**\n     * Create a component dynamically but not attach to any View\n     * (this action will be executed when bodyContainer is ready)\n     * @param component Component class\n     */\n    private createDynamicComponent(component: Type<T>) {\n        const factory = this.cfr.resolveComponentFactory(component);\n        const childInjector = Injector.create({\n            providers: [{provide: McModalRef, useValue: this}],\n            parent: this.viewContainer.parentInjector\n        });\n\n        this.contentComponentRef = factory.create(childInjector);\n\n        if (this.mcComponentParams) {\n            Object.assign(this.contentComponentRef.instance, this.mcComponentParams);\n        }\n\n        // Do the first change detection immediately\n        // (or we do detection at ngAfterViewInit, multi-changes error will be thrown)\n        this.contentComponentRef.changeDetectorRef.detectChanges();\n\n\n    }\n\n    // Update transform-origin to the last click position on document\n    private updateTransformOrigin() {\n        const modalElement = this.modalContainer.nativeElement as HTMLElement;\n        const lastPosition = ModalUtil.getLastClickPosition();\n\n        if (lastPosition) {\n            // tslint:disable-next-line\n            this.transformOrigin = `${lastPosition.x - modalElement.offsetLeft}px ${lastPosition.y - modalElement.offsetTop}px 0px`;\n        }\n    }\n\n    /**\n     * Take care of the body's overflow to decide the existense of scrollbar\n     * @param plusNum The number that the openModals.length will increase soon\n     */\n    private changeBodyOverflow(plusNum: number = 0) {\n        const openModals = this.modalControl.openModals;\n\n        if (openModals.length + plusNum > 0) {\n            // tslint:disable-next-line\n            this.renderer.setStyle(this.document.body, 'padding-right', `${this.mcMeasureScrollbarService.scrollBarWidth}px`);\n            this.renderer.setStyle(this.document.body, 'overflow', 'hidden');\n        } else {\n            this.renderer.removeStyle(this.document.body, 'padding-right');\n            this.renderer.removeStyle(this.document.body, 'overflow');\n        }\n    }\n}\n\n////////////\n\nfunction isPromise(obj: {} | void): boolean {\n    // tslint:disable-next-line\n    return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof (obj as Promise<{}>).then === 'function' && typeof (obj as Promise<{}>).catch === 'function';\n}\n","export interface IClickPosition {\n    x: number;\n    y: number;\n}\n\nexport class ModalUtil {\n    private lastPosition: IClickPosition;\n\n    constructor(private document: Document) {\n        this.lastPosition = {x: -1, y: -1};\n        this.listenDocumentClick();\n    }\n\n    getLastClickPosition(): IClickPosition {\n        return this.lastPosition;\n    }\n\n    listenDocumentClick(): void {\n        this.document.addEventListener('click', (event: MouseEvent) => {\n            this.lastPosition = {x: event.clientX, y: event.clientY};\n        });\n    }\n}\n\nexport default new ModalUtil(document);\n","import { Observable } from 'rxjs';\n\nimport { McModalComponent } from './modal.component';\n\n\n/**\n * API class that public to users to handle the modal instance.\n * McModalRef is aim to avoid accessing to the modal instance directly by users.\n */\nexport abstract class McModalRef<T = any, R = any> {\n    abstract afterOpen: Observable<void>;\n    abstract afterClose: Observable<R>;\n\n    abstract open(): void;\n\n    abstract close(result?: R): void;\n\n    abstract destroy(result?: R): void;\n\n    /**\n     * Trigger the mcOnOk/mcOnCancel by manual\n     */\n    abstract triggerOk(): void;\n\n    abstract triggerCancel(): void;\n\n    // /**\n    //  * Return the ComponentRef of mcContent when specify mcContent as a Component\n    //  * Note: this method may return undefined if the Component has not ready yet.\n    //    (it only available after Modal's ngOnInit)\n    //  */\n    // abstract getContentComponentRef(): ComponentRef<{}>;\n\n    /**\n     * Return the component instance of mcContent when specify mcContent as a Component\n     * Note: this method may return undefined if the Component has not ready yet.\n     * (it only available after Modal's ngOnInit)\n     */\n    abstract getContentComponent(): T;\n\n    /**\n     * Get the dom element of this Modal\n     */\n    abstract getElement(): HTMLElement;\n\n    /**\n     * Get the instance of the Modal itself\n     */\n    abstract getInstance(): McModalComponent;\n}\n","import { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { McModalRef } from './modal-ref.class';\n\n\ninterface IRegisteredMeta {\n    modalRef: McModalRef;\n    afterOpenSubscription: Subscription;\n    afterCloseSubscription: Subscription;\n}\n\n@Injectable()\nexport class McModalControlService {\n\n    // Track singleton afterAllClose through over the injection tree\n    get afterAllClose(): Subject<void> {\n        return this.parentService ? this.parentService.afterAllClose : this.rootAfterAllClose!;\n    }\n\n    // Track singleton openModals array through over the injection tree\n    get openModals(): McModalRef[] {\n        return this.parentService ? this.parentService.openModals : this.rootOpenModals!;\n    }\n\n    // @ts-ignore\n    private rootOpenModals: McModalRef[] = this.parentService ? null : [];\n    // @ts-ignore\n    private rootAfterAllClose: Subject<void> = this.parentService ? null : new Subject<void>();\n    // @ts-ignore\n    private rootRegisteredMetaMap: Map<McModalRef, IRegisteredMeta> = this.parentService ? null : new Map();\n\n    // Registered modal for later usage\n    private get registeredMetaMap(): Map<McModalRef, IRegisteredMeta> {\n        return this.parentService ? this.parentService.registeredMetaMap : this.rootRegisteredMetaMap;\n    }\n\n    constructor(\n        @Optional() @SkipSelf() private parentService: McModalControlService) {\n    }\n\n    // Register a modal to listen its open/close\n    registerModal(modalRef: McModalRef): void {\n        if (!this.hasRegistered(modalRef)) {\n            const afterOpenSubscription = modalRef.afterOpen.subscribe(() => this.openModals.push(modalRef));\n            const afterCloseSubscription = modalRef.afterClose.subscribe(() => this.removeOpenModal(modalRef));\n\n            this.registeredMetaMap.set(modalRef, {modalRef, afterOpenSubscription, afterCloseSubscription});\n        }\n    }\n\n    hasRegistered(modalRef: McModalRef): boolean {\n        return this.registeredMetaMap.has(modalRef);\n    }\n\n    // Close all registered opened modals\n    closeAll(): void {\n        let i = this.openModals.length;\n\n        while (i--) {\n            this.openModals[i].close();\n        }\n    }\n\n    private removeOpenModal(modalRef: McModalRef): void {\n        const index = this.openModals.indexOf(modalRef);\n\n        if (index > -1) {\n            this.openModals.splice(index, 1);\n\n            if (!this.openModals.length) {\n                this.afterAllClose.next();\n            }\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLink } from './link.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule\n    ],\n    declarations: [McLink],\n    exports: [McLink]\n})\nexport class McLinkModule {}\n","import {\n    Input,\n    Attribute,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\nexport class McLinkBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McLinkBase: HasTabIndexCtor & CanDisableCtor & typeof McLinkBase\n    = mixinTabIndex(mixinDisabled(McLinkBase));\n\n@Component({\n    selector: 'a.mc-link',\n    template: `<ng-content></ng-content>`,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcLink',\n    styleUrls: ['./link.css'],\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': 'tabIndex'\n    }\n})\n\nexport class McLink extends _McLinkBase implements OnDestroy, HasTabIndex, CanDisable {\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    private _disabled = false;\n\n    constructor(\n        @Attribute('tabindex') tabIndex: string,\n        public elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _changeDetector: ChangeDetectorRef) {\n\n        super(elementRef);\n        this._focusMonitor.monitor(elementRef.nativeElement, true);\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this.elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLineModule } from '@ptsecurity/mosaic/core';\n\nimport { McListSelection, McListOption } from './list-selection.component';\nimport { McList, McListItem, McListSubheaderCssStyler } from './list.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        McLineModule\n    ],\n    exports: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ],\n    declarations: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ]\n})\nexport class McListModule {}\n","// todo пока не делаем, перенесено из материала, но у нас в доках таких простых списков нет.\nimport {\n    AfterContentInit, ChangeDetectionStrategy, Component, ContentChildren, Directive, ElementRef, QueryList,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { McLine, McLineSetter } from '@ptsecurity/mosaic/core';\n\n\nexport class McListBase {}\n\n@Component({\n    selector: 'mc-list',\n    host: { class: 'mc-list' },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McList extends McListBase {}\n\n\n/**\n * Directive whose purpose is to add the mc- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n    selector: '[mc-subheader], [mcSubheader]',\n    host: { class: 'mc-subheader' }\n})\nexport class McListSubheaderCssStyler {}\n\n\n// Boilerplate for applying mixins to McListItem.\nexport class McListItemBase {}\n\n@Component({\n    selector: 'mc-list-item, a[mc-list-item]',\n    host: {\n        class: 'mc-list-item',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()'\n    },\n    templateUrl: './list-item.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListItem extends McListItemBase implements AfterContentInit {\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    private _lineSetter: McLineSetter;\n\n    constructor(private _element: ElementRef) {\n        super();\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    _handleFocus() {\n        this._element.nativeElement.classList.add('mc-focused');\n    }\n\n    _handleBlur() {\n        this._element.nativeElement.classList.remove('mc-focused');\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n    QueryList,\n    ViewEncapsulation,\n    ChangeDetectorRef,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\n\nimport { FocusKeyManager, IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { END, ENTER, HOME, PAGE_DOWN, PAGE_UP, SPACE } from '@ptsecurity/cdk/keycodes';\n\nimport {\n    McLine,\n    McLineSetter,\n    CanDisable,\n    mixinDisabled,\n    toBoolean, CanDisableCtor\n} from '@ptsecurity/mosaic/core';\n\n\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\n@Component({\n    exportAs: 'mcListOption',\n    selector: 'mc-list-option',\n    host: {\n        tabindex: '-1',\n\n        class: 'mc-list-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n        '(click)': '_handleClick()'\n    },\n    templateUrl: 'list-option.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListOption implements AfterContentInit, OnDestroy, OnInit, IFocusableOption {\n    _hasFocus: boolean = false;\n\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    @ViewChild('text') _text: ElementRef;\n\n    // Whether the label should appear before or after the checkbox. Defaults to 'after'\n    @Input() checkboxPosition: 'before' | 'after' = 'after';\n\n    @Input() value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled || (this.listSelection && this.listSelection.disabled);\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.listSelection.selectedOptions && this.listSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            this.listSelection._reportValueChange();\n        }\n    }\n\n    private _lineSetter: McLineSetter;\n    private _selected = false;\n    private _disabled = false;\n\n    constructor(\n        private _element: ElementRef,\n        private _changeDetector: ChangeDetectorRef,\n        @Inject(forwardRef(() => McListSelection))\n        public listSelection: McListSelection\n    ) {}\n\n    ngOnInit() {\n        if (this._selected) {\n            // List options that are selected at initialization can't be reported properly to the form\n            // control. This is because it takes some time until the selection-list knows about all\n            // available options. Also it can happen that the ControlValueAccessor has an initial value\n            // that should be used instead. Deferring the value change report to the next tick ensures\n            // that the form control value is not being overwritten.\n            const wasSelected = this._selected;\n\n            Promise.resolve().then(() => {\n                if (this._selected || wasSelected) {\n                    this.selected = true;\n                    this._changeDetector.markForCheck();\n                }\n            });\n        }\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    ngOnDestroy(): void {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => this.selected = false);\n        }\n\n        this.listSelection._removeOptionFromList(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    focus(): void {\n        this._element.nativeElement.focus();\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    getLabel() {\n        return this._text ? this._text.nativeElement.textContent : '';\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.listSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.listSelection.selectedOptions.select(this);\n        } else {\n            this.listSelection.selectedOptions.deselect(this);\n        }\n\n        this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleClick() {\n        if (this.disabled) { return; }\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    _handleFocus() {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur() {\n        this._hasFocus = false;\n\n        this.listSelection._onTouched();\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n\n\nexport const MC_SELECTION_LIST_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McListSelection),\n    multi: true\n};\n\n// Change event that is being fired whenever the selected state of an option changes. */\nexport class McListSelectionChange {\n    constructor(\n        // Reference to the selection list that emitted the event.\n        public source: McListSelection,\n        // Reference to the option that has been changed.\n        public option: McListOption\n    ) {}\n}\n\n\nexport class McListSelectionBase {}\n\nexport const _McListSelectionMixinBase: CanDisableCtor & typeof McListSelectionBase\n    = mixinDisabled(McListSelectionBase);\n\n@Component({\n    exportAs: 'mcListSelection',\n    selector: 'mc-list-selection',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-list-selection',\n        '[tabIndex]': 'tabIndex',\n        '(focus)': 'focus()',\n        '(blur)': '_onTouched()',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    providers: [MC_SELECTION_LIST_VALUE_ACCESSOR],\n    preserveWhitespaces: false\n})\nexport class McListSelection extends _McListSelectionMixinBase implements\n    IFocusableOption, CanDisable, AfterContentInit, ControlValueAccessor {\n\n    _keyManager: FocusKeyManager<McListOption>;\n\n    // The option components contained within this selection-list.\n    @ContentChildren(McListOption) options: QueryList<McListOption>;\n\n    tabIndex: number;\n\n    autoSelect: boolean;\n    noUnselect: boolean;\n    multiple: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input() horizontal: boolean = false;\n\n    // Emits a change event whenever the selected state of an option changes.\n    @Output() readonly selectionChange: EventEmitter<McListSelectionChange> = new EventEmitter<McListSelectionChange>();\n\n    selectedOptions: SelectionModel<McListOption>;\n\n    // Used for storing the values that were assigned before the options were initialized.\n    private _tempValues: string[] | null;\n\n    private _modelChanges = Subscription.EMPTY;\n\n    constructor(\n        private _element: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string,\n        @Attribute('multiple') multiple: string\n    ) {\n        super();\n\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.selectedOptions = new SelectionModel<McListOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.horizontal = toBoolean(this.horizontal);\n\n        this._keyManager = new FocusKeyManager<McListOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(!this.horizontal)\n            .withHorizontalOrientation(this.horizontal ? 'ltr' : null);\n\n        if (this._tempValues) {\n            this._setOptionsFromValues(this._tempValues);\n            this._tempValues = null;\n        }\n\n        // Sync external changes to the model back to the options.\n        this._modelChanges = this.selectedOptions.onChange!.subscribe((event) => {\n            for (const item of event.added) {\n                item.selected = true;\n            }\n\n            for (const item of event.removed) {\n                item.selected = false;\n            }\n        });\n\n        this.updateScrollSize();\n    }\n\n    ngOnDestroy() {\n        this._modelChanges.unsubscribe();\n    }\n\n    focus() {\n        this._element.nativeElement.focus();\n    }\n\n    selectAll() {\n        this.options.forEach((option) => option.setSelected(true));\n\n        this._reportValueChange();\n    }\n\n    deselectAll() {\n        this.options.forEach((option) => option.setSelected(false));\n\n        this._reportValueChange();\n    }\n\n    updateScrollSize(): void {\n        if (this.horizontal || !this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    // Sets the focused option of the selection-list.\n    setFocusedOption(option: McListOption): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitChangeEvent(option);\n        this._reportValueChange();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(values: string[]): void {\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        } else {\n            this._tempValues = values;\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this._onTouched = fn;\n    }\n\n    // Implemented as a part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        if (this.options) {\n            this.options.forEach((option) => option.disabled = isDisabled);\n        }\n    }\n\n    getSelectedOptionValues(): string[] {\n        return this.options.filter((option) => option.selected).map((option) => option.value);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McListOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    _canDeselectLast(listOption: McListOption): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && listOption.selected);\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    // View to model callback that should be called if the list or its options lost focus.\n    _onTouched: () => void = () => {};\n\n    // Removes an option from the selection list and updates the active item.\n    _removeOptionFromList(option: McListOption) {\n        if (option._hasFocus) {\n            const optionIndex = this._getOptionIndex(option);\n\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.setPreviousItemActive();\n            } else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.setNextItemActive();\n            }\n        }\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                if (!this.horizontal) { this._keyManager.setPreviousPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                if (!this.horizontal) { this._keyManager.setNextPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    // Reports a value change to the ControlValueAccessor\n    _reportValueChange() {\n        if (this.options) {\n            this._onChange(this.getSelectedOptionValues());\n        }\n    }\n\n    // Emits a change event if the selected state of an option changed.\n    _emitChangeEvent(option: McListOption) {\n        this.selectionChange.emit(new McListSelectionChange(this, option));\n    }\n\n    // Returns the option with the specified value.\n    private _getOptionByValue(value: string): McListOption | undefined {\n        return this.options.find((option) => option.value === value);\n    }\n\n    // Sets the selected options based on the specified values.\n    private _setOptionsFromValues(values: string[]) {\n        this.options.forEach((option) => option.setSelected(false));\n\n        values\n            .map((value) => this._getOptionByValue(value))\n            .filter(Boolean)\n            .forEach((option) => option!.setSelected(true));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    // Returns the index of the specified list option.\n    private _getOptionIndex(option: McListOption): number {\n        return this.options.toArray().indexOf(option);\n    }\n\n    // View to model callback that should be called whenever the selected options change.\n    private _onChange: (value: any) => void = (_: any) => {};\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McContentComponent } from './content.component';\nimport { McFooterComponent } from './footer.component';\nimport { McHeaderComponent } from './header.component';\nimport { McLayoutComponent } from './layout.component';\nimport { McSidebarComponent } from './sidebar.component';\n\n\n@NgModule({\n    imports: [ CommonModule ],\n    exports: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ],\n    declarations: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ]\n})\nexport class McLayoutModule {\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Host,\n    Input,\n    OnInit,\n    Optional,\n    Output\n} from '@angular/core';\nimport { toBoolean } from '@ptsecurity/mosaic/core';\n\nimport { McLayoutComponent } from './layout.component';\n\n\n@Component({\n    selector: 'mc-sidebar',\n    preserveWhitespaces: false,\n    templateUrl: './sidebar.component.html',\n    host: {\n        '[class.mc-layout-sidebar]': 'true',\n        '[class.mc-layout-sidebar-collapsed]': 'mcCollapsed',\n        '[style.flex]': 'mcFlex',\n        '[style.max-width.px]': 'mcWidth',\n        '[style.min-width.px]': 'mcWidth',\n        '[style.width.px]': 'mcWidth'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSidebarComponent implements OnInit {\n\n    @Input() _mcWidth = 200;\n    @Input() mcCollapsedWidth = 80;\n\n    @Input()\n    set mcCollapsible(value: boolean) {\n        this.collapsible = toBoolean(value);\n    }\n\n    get mcCollapsible(): boolean {\n        return this.collapsible;\n    }\n\n    @Input()\n    set mcCollapsed(value: boolean) {\n        this.collapsed = toBoolean(value);\n    }\n\n    get mcCollapsed(): boolean {\n        return this.collapsed;\n    }\n\n    // tslint:disable-next-line\n    @Output() mcCollapsedChange = new EventEmitter();\n\n    private collapsed = false;\n    private collapsible = false;\n\n    get mcFlex(): string {\n        if (this.mcCollapsed) {\n            return `0 0 ${this.mcCollapsedWidth}px`;\n        } else {\n            return `0 0 ${this.mcWidth}px`;\n        }\n    }\n\n    get mcWidth(): number {\n        if (this.mcCollapsed) {\n            return this.mcCollapsedWidth;\n        } else {\n            return this._mcWidth;\n        }\n    }\n\n    constructor(\n        @Optional() @Host() private mcLayoutComponent: McLayoutComponent) {\n    }\n\n    ngOnInit() {\n        if (this.mcLayoutComponent) {\n            this.mcLayoutComponent.hasSidebar = true;\n        }\n    }\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-layout',\n    preserveWhitespaces: false,\n    styleUrls: ['layout.css'],\n    templateUrl: './layout.component.html',\n    host: {\n        '[class.mc-layout]': 'true',\n        '[class.mc-layout-has-sidebar]': 'hasSidebar'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McLayoutComponent {\n    hasSidebar = false;\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector : 'mc-header',\n    preserveWhitespaces: false,\n    templateUrl: './header.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-header]': 'true'\n    }\n})\nexport class McHeaderComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-footer',\n    preserveWhitespaces: false,\n    templateUrl: './footer.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-footer]': 'true'\n    }\n})\nexport class McFooterComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-content',\n    preserveWhitespaces: false,\n    templateUrl: './content.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-content]': 'true'\n    }\n})\nexport class McContentComponent {\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER, McDropdownTrigger } from './dropdown-trigger';\nimport { McDropdown } from './dropdown.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule\n    ],\n    exports: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    declarations: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    providers: [MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER]\n})\nexport class McDropdownModule {}\n","import {\n    AfterContentInit,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy, OnInit,\n    Optional,\n    Output,\n    ViewContainerRef\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction, Directionality } from '@ptsecurity/cdk/bidi';\nimport {\n    FlexibleConnectedPositionStrategy,\n    HorizontalConnectionPos,\n    Overlay,\n    OverlayConfig,\n    OverlayRef,\n    VerticalConnectionPos,\n    IScrollStrategy\n} from '@ptsecurity/cdk/overlay';\nimport { TemplatePortal } from '@ptsecurity/cdk/portal';\nimport { merge, Subscription } from 'rxjs';\nimport { filter, take, takeUntil } from 'rxjs/operators';\n\nimport { throwMcDropdownMissingError } from './dropdown-errors';\nimport { McDropdownPanel } from './dropdown-panel';\nimport { McDropdown } from './dropdown.component';\n\n\n/** Injection token that determines the scroll handling while the dropdown is open. */\nexport const MC_DROPDOWN_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-dropdown-scroll-strategy');\n\n/** @docs-private */\nexport function MC_DROPDOWN_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_DROPDOWN_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_DROPDOWN_SCROLL_STRATEGY_FACTORY\n};\n\n/**\n * This directive is intended to be used in conjunction with an mc-dropdown tag.  It is\n * responsible for toggling the display of the provided dropdown instance.\n */\n@Directive({\n    selector: `[mcDropdownTriggerFor]`,\n    host: {\n        '(touchstart)': '_openedBy = \"touch\"',\n        '(click)': 'toggle()'\n    },\n    exportAs: 'mcDropdownTrigger'\n})\nexport class McDropdownTrigger implements OnInit, AfterContentInit, OnDestroy {\n\n    /** Whether the dropdown is open. */\n    get opened(): boolean {\n        return this._opened;\n    }\n\n    /** The text direction of the containing app. */\n    get dir(): Direction {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    // Tracking input type is necessary so it's possible to only auto-focus\n    // the first item of the list when the dropdown is opened via the keyboard\n    _openedBy: 'mouse' | 'touch' | null = null;\n\n    /** References the dropdown instance that the trigger is associated with. */\n    @Input('mcDropdownTriggerFor') dropdown: McDropdownPanel;\n\n    /** Data to be passed along to any lazily-rendered content. */\n    @Input('mcDropdownTriggerData') data: any;\n\n    /** Event emitted when the associated dropdown is opened. */\n    @Output() readonly dropdownOpened: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the associated dropdown is closed. */\n    @Output() readonly dropdownClosed: EventEmitter<void> = new EventEmitter<void>();\n\n    private _portal: TemplatePortal;\n    private _overlayRef: OverlayRef | null = null;\n    private _opened: boolean = false;\n    private _closeSubscription = Subscription.EMPTY;\n    private _hoverSubscription = Subscription.EMPTY;\n\n    constructor(private _overlay: Overlay,\n                private _element: ElementRef<HTMLElement>,\n                private _viewContainerRef: ViewContainerRef,\n                @Inject(MC_DROPDOWN_SCROLL_STRATEGY) private _scrollStrategy: any,\n                @Optional() private _dir: Directionality,\n                private _focusMonitor?: FocusMonitor) {}\n\n    ngOnInit(): void {\n        this.dropdown.closed = this.dropdown.closed || new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n    }\n\n    ngAfterContentInit() {\n        this._check();\n\n        this.dropdown.closed.asObservable().subscribe(() => {\n            this._destroy();\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n\n        this._cleanUpSubscriptions();\n    }\n\n    /** Toggles the dropdown between the open and closed states. */\n    toggle(): void {\n        // tslint:disable-next-line:no-void-expression\n        return this._opened ? this.close() : this.open();\n    }\n\n    /** Opens the dropdown. */\n    open(): void {\n        if (this._opened) {\n            return;\n        }\n\n        this._check();\n\n        const overlayRef = this._createOverlay();\n        this._setPosition(overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy);\n        overlayRef.attach(this._portal);\n\n        if (this.dropdown.lazyContent) {\n            this.dropdown.lazyContent.attach(this.data);\n        }\n\n        this._closeSubscription = this._closingActions().subscribe(() => this.close());\n        this._init();\n\n        if (this.dropdown instanceof McDropdown) {\n            this.dropdown._startAnimation();\n        }\n    }\n\n    /** Closes the dropdown. */\n    close(): void {\n        this.dropdown.closed.emit();\n    }\n\n    /**\n     * Focuses the dropdown trigger.\n     * @param origin Source of the dropdown trigger's focus.\n     */\n    focus(origin: FocusOrigin = 'program') {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._element.nativeElement, origin);\n        } else {\n            this._element.nativeElement.focus();\n        }\n    }\n\n    /** Closes the dropdown and does the necessary cleanup. */\n    private _destroy() {\n        if (!this._overlayRef || !this.opened) {\n            return;\n        }\n\n        const dropdown = this.dropdown;\n\n        this._closeSubscription.unsubscribe();\n        this._overlayRef.detach();\n\n        if (dropdown instanceof McDropdown) {\n            dropdown._resetAnimation();\n\n            if (dropdown.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                dropdown._animationDone\n                    .pipe(\n                        filter((event) => event.toState === 'void'),\n                        take(1),\n                        // Interrupt if the content got re-attached.\n                        takeUntil(dropdown.lazyContent._attached)\n                    )\n                    .subscribe(() => dropdown.lazyContent.detach(), undefined, () => {\n                        // No matter whether the content got re-attached, reset the dropdown.\n                        this._reset();\n                    });\n            } else {\n                this._reset();\n            }\n        } else {\n            this._reset();\n\n            if (dropdown.lazyContent) {\n                dropdown.lazyContent.detach();\n            }\n        }\n    }\n\n    /**\n     * This method sets the dropdown state to open and focuses the first item if\n     * the dropdown was opened via the keyboard.\n     */\n    private _init(): void {\n        this.dropdown.direction = this.dir;\n        this._setIsOpened(true);\n        this.dropdown.focusFirstItem(this._openedBy || 'program');\n    }\n\n    /**\n     * This method resets the dropdown when it's closed, most importantly restoring\n     * focus to the dropdown trigger if the dropdown was opened via the keyboard.\n     */\n    private _reset(): void {\n        this._setIsOpened(false);\n\n        // We should reset focus if the user is navigating using a keyboard or\n        // if we have a top-level trigger which might cause focus to be lost\n        // when clicking on the backdrop.\n        if (!this._openedBy) {\n            // Note that the focus style will show up both for `program` and\n            // `keyboard` so we don't have to specify which one it is.\n            this.focus();\n        } else {\n            this.focus(this._openedBy);\n        }\n\n        this._openedBy = null;\n    }\n\n    // set state rather than toggle to support triggers sharing a dropdown\n    private _setIsOpened(isOpen: boolean): void {\n        this._opened = isOpen;\n        // tslint:disable-next-line:no-void-expression\n        this._opened ? this.dropdownOpened.emit() : this.dropdownClosed.emit();\n    }\n\n    /**\n     * This method checks that a valid instance of Dropdown has been passed into\n     * mcDropdownTriggerFor. If not, an exception is thrown.\n     */\n    private _check() {\n        if (!this.dropdown) {\n            throwMcDropdownMissingError();\n        }\n    }\n\n    /**\n     * This method creates the overlay from the provided dropdown's template and saves its\n     * OverlayRef so that it can be attached to the DOM when open is called.\n     */\n    private _createOverlay(): OverlayRef {\n        if (!this._overlayRef) {\n            this._portal = new TemplatePortal(this.dropdown.templateRef, this._viewContainerRef);\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions(config.positionStrategy as FlexibleConnectedPositionStrategy);\n            this._overlayRef = this._overlay.create(config);\n\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `McDropdownPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n\n        return this._overlayRef;\n    }\n\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    private _getOverlayConfig(): OverlayConfig {\n        return new OverlayConfig({\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withTransformOriginOn('.mc-dropdown__panel'),\n            hasBackdrop: this.dropdown.hasBackdrop === null || this.dropdown.hasBackdrop === undefined\n                ? true\n                : this.dropdown.hasBackdrop,\n            backdropClass: this.dropdown.backdropClass || 'cdk-overlay-transparent-backdrop',\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir\n        });\n    }\n\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the dropdown based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    private _subscribeToPositions(position: FlexibleConnectedPositionStrategy): void {\n        if (this.dropdown.setPositionClasses) {\n            // todo possibly we should not recompute positions there\n            /*position.positionChanges.subscribe((change) => {\n                const posX: DropdownPositionX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                const posY: DropdownPositionY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n\n                this.dropdown.setPositionClasses!(posX, posY);\n            });*/\n            position.positionChanges.subscribe(() => {\n                this.dropdown.setPositionClasses!(this.dropdown.xPosition, this.dropdown.yPosition);\n            });\n        }\n    }\n\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    private _setPosition(positionStrategy: FlexibleConnectedPositionStrategy) {\n        const [originX, originFallbackX]: HorizontalConnectionPos[] =\n            this.dropdown.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n\n        const [overlayY, overlayFallbackY]: VerticalConnectionPos[] =\n            this.dropdown.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        const [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        const offsetY = 0;\n\n        if (!this.dropdown.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n\n        positionStrategy.withPositions([\n            {originX, originY, overlayX, overlayY, offsetY},\n            {originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY},\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            }\n        ]);\n    }\n\n    /** Cleans up the active subscriptions. */\n    private _cleanUpSubscriptions(): void {\n        this._closeSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n\n    /** Returns a stream that emits whenever an action that should close the dropdown occurs. */\n    private _closingActions() {\n        const backdrop = this._overlayRef!.backdropClick();\n        const detachments = this._overlayRef!.detachments();\n\n        return merge(backdrop, detachments);\n    }\n}\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    Output,\n    TemplateRef,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    OnInit\n} from '@angular/core';\nimport { FocusKeyManager, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE, DOWN_ARROW, UP_ARROW } from '@ptsecurity/cdk/keycodes';\nimport { Subject, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { mcDropdownAnimations } from './dropdown-animations';\nimport { McDropdownContent } from './dropdown-content';\nimport { throwMcDropdownInvalidPositionX, throwMcDropdownInvalidPositionY } from './dropdown-errors';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/** Default `mc-dropdown` options that can be overridden. */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownDefaultOptions {\n    /** The x-axis position of the dropdown. */\n    xPosition: DropdownPositionX;\n\n    /** The y-axis position of the dropdown. */\n    yPosition: DropdownPositionY;\n\n    /** Whether the dropdown should overlap the dropdown trigger. */\n    overlapTrigger: boolean;\n\n    /** Class to be applied to the dropdown's backdrop. */\n    backdropClass: string;\n\n    /** Whether the dropdown has a backdrop. */\n    hasBackdrop?: boolean;\n}\n\n/** Injection token to be used to override the default options for `mc-dropdown`. */\nexport const MC_DROPDOWN_DEFAULT_OPTIONS =\n    new InjectionToken<McDropdownDefaultOptions>('mc-dropdown-default-options', {\n        providedIn: 'root',\n        factory: MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY\n    });\n\n/** @docs-private */\nexport function MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY(): McDropdownDefaultOptions {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop'\n    };\n}\n\n@Component({\n    selector: 'mc-dropdown',\n    templateUrl: 'dropdown.html',\n    styleUrls: ['dropdown.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcDropdown',\n    animations: [\n        mcDropdownAnimations.transformDropdown,\n        mcDropdownAnimations.fadeInItems\n    ],\n    providers: [\n        { provide: MC_DROPDOWN_PANEL, useExisting: McDropdown }\n    ]\n})\nexport class McDropdown implements AfterContentInit, McDropdownPanel<McDropdownItem>, OnInit, OnDestroy {\n\n    /** Position of the dropdown in the X axis. */\n    @Input()\n    get xPosition(): DropdownPositionX { return this._xPosition; }\n    set xPosition(value: DropdownPositionX) {\n        if (value !== 'before' && value !== 'after') {\n            throwMcDropdownInvalidPositionX();\n        }\n\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Position of the dropdown in the Y axis. */\n    @Input()\n    get yPosition(): DropdownPositionY { return this._yPosition; }\n    set yPosition(value: DropdownPositionY) {\n        if (value !== 'above' && value !== 'below') {\n            throwMcDropdownInvalidPositionY();\n        }\n\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Whether the dropdown should overlap its trigger. */\n    @Input()\n    get overlapTrigger(): boolean { return this._overlapTrigger; }\n    set overlapTrigger(value: boolean) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n\n    /** Whether the dropdown has a backdrop. */\n    @Input()\n    get hasBackdrop(): boolean | undefined { return this._hasBackdrop; }\n    set hasBackdrop(value: boolean | undefined) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n\n    /**\n     * This method takes classes set on the host mc-dropdown element and applies them on the\n     * dropdown template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing dropdown from outside the component.\n     * @param classes list of class names\n     */\n    @Input('class')\n    set panelClass(classes: string) {\n        if (classes && classes.length) {\n            this._classList = classes.split(' ').reduce((obj: any, className: string) => {\n                obj[className] = true;\n\n                return obj;\n            }, {});\n\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n\n    /** Config object to be passed into the dropdown's ngClass */\n    _classList: {[key: string]: boolean} = {};\n\n    /** Current state of the panel animation. */\n    _panelAnimationState: 'void' | 'enter' = 'void';\n\n    /** Emits whenever an animation on the dropdown completes. */\n    _animationDone = new Subject<AnimationEvent>();\n\n    /** Whether the dropdown is animating. */\n    _isAnimating: boolean;\n\n    /** Layout direction of the dropdown. */\n    direction: Direction;\n\n    /** Class to be added to the backdrop element. */\n    @Input() backdropClass: string = this._defaultOptions.backdropClass;\n\n    /** @docs-private */\n    @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n\n    /**\n     * List of the items inside of a dropdown.\n     */\n    @ContentChildren(McDropdownItem) items: QueryList<McDropdownItem>;\n\n    /**\n     * Dropdown content that will be rendered lazily.\n     * @docs-private\n     */\n    @ContentChild(McDropdownContent) lazyContent: McDropdownContent;\n\n    /** Event emitted when the dropdown is closed. */\n    @Output() readonly closed: EventEmitter<void | 'click' | 'keydown' | 'tab'> =\n        new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n\n    private _keyManager: FocusKeyManager<McDropdownItem>;\n    private _xPosition: DropdownPositionX = this._defaultOptions.xPosition;\n    private _yPosition: DropdownPositionY = this._defaultOptions.yPosition;\n\n    /** Dropdown items inside the current dropdown. */\n    private _items: McDropdownItem[] = [];\n\n    /** Emits whenever the amount of dropdown items changes. */\n    private _itemChanges = new Subject<McDropdownItem[]>();\n\n    /** Subscription to tab events on the dropdown panel */\n    private _tabSubscription = Subscription.EMPTY;\n    private _overlapTrigger: boolean = this._defaultOptions.overlapTrigger;\n    private _hasBackdrop: boolean | undefined = this._defaultOptions.hasBackdrop;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        private _ngZone: NgZone,\n        @Inject(MC_DROPDOWN_DEFAULT_OPTIONS) private _defaultOptions: McDropdownDefaultOptions) { }\n\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager<McDropdownItem>(this.items).withWrap().withTypeAhead();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n    }\n\n    ngOnDestroy() {\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n\n    /** Handle a keyboard event from the dropdown, delegating to the appropriate action. */\n    _handleKeydown(event: KeyboardEvent) {\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case ESCAPE:\n                this.closed.emit('keydown');\n                break;\n            case UP_ARROW:\n            case DOWN_ARROW:\n                this._keyManager.setFocusOrigin('keyboard');\n                this._keyManager.onKeydown(event);\n                break;\n            default:\n                // todo зачем обрабатывать лишние события ?\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    /**\n     * Focus the first item in the dropdown.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin: FocusOrigin = 'program'): void {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable.asObservable()\n                .pipe(take(1))\n                .subscribe(() => this._keyManager.setFocusOrigin(origin).setFirstItemActive());\n        } else {\n            this._keyManager.setFocusOrigin(origin).setFirstItemActive();\n        }\n    }\n\n    /**\n     * Resets the active item in the dropdown. This is used when the dropdown is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n\n    /**\n     * Registers a dropdown item with the dropdown.\n     * @docs-private\n     */\n    addItem(item: McDropdownItem) {\n        // We register the items through this method, rather than picking them up through\n        // `ContentChildren`, because we need the items to be picked up by their closest\n        // `mc-dropdown` ancestor. If we used `@ContentChildren(McDropdownItem, {descendants: true})`,\n        // all descendant items will bleed into the top-level dropdown in the case where the consumer\n        // has `mc-dropdown` instances nested inside each other.\n        if (this._items.indexOf(item) === -1) {\n            this._items.push(item);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Removes an item from the dropdown.\n     * @docs-private\n     */\n    removeItem(item: McDropdownItem) {\n        const index = this._items.indexOf(item);\n\n        if (this._items.indexOf(item) > -1) {\n            this._items.splice(index, 1);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Adds classes to the dropdown panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the dropdown along the x axis.\n     * @param posY Position of the dropdown along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX: DropdownPositionX = this.xPosition, posY: DropdownPositionY = this.yPosition) {\n        const classes = this._classList;\n        classes['mc-dropdown-before'] = posX === 'before';\n        classes['mc-dropdown-after'] = posX === 'after';\n        classes['mc-dropdown-above'] = posY === 'above';\n        classes['mc-dropdown-below'] = posY === 'below';\n    }\n\n    /** Starts the enter animation. */\n    _startAnimation() {\n        this._panelAnimationState = 'enter';\n    }\n\n    /** Resets the panel animation to its initial state. */\n    _resetAnimation() {\n        this._panelAnimationState = 'void';\n    }\n\n    /** Callback that is invoked when the panel animation completes. */\n    _onAnimationDone(event: AnimationEvent) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n\n        // Scroll the content element to the top once the animation is done. This is necessary, because\n        // we move focus to the first item while it's still being animated, which can throw the browser\n        // off when it determines the scroll position. Alternatively we can move focus when the\n        // animation is done, however moving focus asynchronously will interrupt screen readers\n        // which are in the process of reading out the dropdown already. We take the `element` from\n        // the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n}\n","import {\n    trigger,\n    state,\n    style,\n    animate,\n    transition,\n    query,\n    group,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\n/**\n * Animations used by the mc-dropdown component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nexport const mcDropdownAnimations: {\n    readonly transformDropdown: AnimationTriggerMetadata;\n    readonly fadeInItems: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation controls the dropdown panel's entry and exit from the page.\n     *\n     * When the dropdown panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the dropdown panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformDropdown: trigger('transformDropdown', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        })),\n        transition('void => enter', group([\n            query('.mc-dropdown__content', animate('50ms linear', style({opacity: 1}))),\n            animate('50ms cubic-bezier(0, 0, 0.2, 1)', style({transform: 'scale(1)'}))\n        ])),\n        transition('* => void', animate('50ms 25ms linear', style({opacity: 0})))\n    ]),\n\n\n    /**\n     * This animation fades in the background color and content of the dropdown panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // now. Remove next time we do breaking changes.\n        state('showing', style({opacity: 1})),\n        transition('void => *', [\n            style({opacity: 0}),\n            animate('200ms 60ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\nexport const fadeInItems = mcDropdownAnimations.fadeInItems;\n\nexport const transformDropdown = mcDropdownAnimations.transformDropdown;\n","export function throwMcDropdownMissingError() {\n    throw Error(`mcDropdownTriggerFor: must pass in an mc-dropdown instance.\n    Example:\n      <mc-dropdown #dropdown=\"mcDropdown\"></mc-dropdown>\n      <button [mcDropdownTriggerFor]=\"dropdown\"></button>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mc-dropdown xPosition=\"before\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mc-dropdown yPosition=\"above\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    Inject,\n    Optional\n} from '@angular/core';\nimport { IFocusableOption, FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\n\n\n// Boilerplate for applying mixins to McDropdownItem.\n/** @docs-private */\nexport class McDropdownItemBase {}\nexport const _McDropdownItemMixinBase: CanDisableCtor & typeof McDropdownItemBase =\n    mixinDisabled(McDropdownItemBase);\n\n/**\n * This directive is intended to be used inside an mc-dropdown tag.\n * It exists mostly to set the role attribute.\n */\n@Component({\n    selector: 'mc-dropdown-item, [mc-dropdown-item]',\n    exportAs: 'mcDropdownItem',\n    inputs: ['disabled'],\n    host: {\n        role: 'dropdown-item',\n        class: 'mc-dropdown__item',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_checkDisabled($event)'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    template: `<ng-content></ng-content>`\n})\nexport class McDropdownItem extends _McDropdownItemMixinBase\n    implements IFocusableOption, CanDisable, OnDestroy {\n\n    private _document: Document;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        @Inject(DOCUMENT) document: any,\n        private _focusMonitor: FocusMonitor,\n        @Inject(MC_DROPDOWN_PANEL) @Optional() private _parentDropdownPanel?: McDropdownPanel<McDropdownItem>) {\n        super();\n\n        if (_focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for dropdown items only when the focus was not caused by a\n            // mouse or touch interaction.\n            _focusMonitor.monitor(this._elementRef.nativeElement, false);\n        }\n\n        if (_parentDropdownPanel && _parentDropdownPanel.addItem) {\n            _parentDropdownPanel.addItem(this);\n        }\n\n        this._document = document;\n    }\n\n    /** Focuses the dropdown item. */\n    focus(origin: FocusOrigin = 'program'): void {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin);\n        } else {\n            this._getHostElement().focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n\n        if (this._parentDropdownPanel && this._parentDropdownPanel.removeItem) {\n            this._parentDropdownPanel.removeItem(this);\n        }\n    }\n\n    /** Used to set the `tabindex`. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Returns the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._elementRef.nativeElement;\n    }\n\n    /** Prevents the default element actions if it is disabled. */\n    _checkDisabled(event: Event): void {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        const element: HTMLElement = this._elementRef.nativeElement;\n        // tslint:disable-next-line:no-magic-numbers\n        const textNodeType = this._document ? this._document.TEXT_NODE : 3;\n        let output = '';\n\n        if (element.childNodes) {\n            const length = element.childNodes.length;\n\n            // Go through all the top-level text nodes and extract their text.\n            // We skip anything that's not a text node to prevent the text from\n            // being thrown off by something like an icon.\n            for (let i = 0; i < length; i++) {\n                if (element.childNodes[i].nodeType === textNodeType) {\n                    output += element.childNodes[i].textContent;\n                }\n            }\n        }\n\n        return output.trim();\n    }\n}\n","import { EventEmitter, TemplateRef, InjectionToken } from '@angular/core';\nimport { FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/**\n * Injection token used to provide the parent dropdown to dropdown-specific components.\n * @docs-private\n */\nexport const MC_DROPDOWN_PANEL = new InjectionToken<McDropdownPanel>('MC_DROPDOWN_PANEL');\n\n/**\n * Interface for a custom dropdown panel that can be used with `mcDropdownTriggerFor`.\n * @docs-private\n */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownPanel<T = any> {\n    xPosition: DropdownPositionX;\n    yPosition: DropdownPositionY;\n    overlapTrigger: boolean;\n    templateRef: TemplateRef<any>;\n    closed: EventEmitter<void | 'click' | 'keydown' | 'tab'>;\n    direction?: Direction;\n    lazyContent?: McDropdownContent;\n    backdropClass?: string;\n    hasBackdrop?: boolean;\n    focusFirstItem(origin?: FocusOrigin): void;\n    resetActiveItem(): void;\n    setPositionClasses?(x: DropdownPositionX, y: DropdownPositionY): void;\n    addItem?(item: T): void;\n    removeItem?(item: T): void;\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    Directive,\n    TemplateRef,\n    ComponentFactoryResolver,\n    ApplicationRef,\n    Injector,\n    ViewContainerRef,\n    Inject,\n    OnDestroy\n} from '@angular/core';\nimport { TemplatePortal, DomPortalOutlet } from '@ptsecurity/cdk/portal';\nimport { Subject } from 'rxjs';\n\n\n/**\n * Dropdown content that will be rendered lazily once the dropdown is opened.\n */\n@Directive({\n    selector: 'ng-template[mcDropdownContent]'\n})\nexport class McDropdownContent implements OnDestroy {\n\n    /** Emits when the dropdown content has been attached. */\n    _attached = new Subject<void>();\n    private _portal: TemplatePortal;\n    private _outlet: DomPortalOutlet;\n\n    constructor(\n        private _template: TemplateRef<any>,\n        private _componentFactoryResolver: ComponentFactoryResolver,\n        private _appRef: ApplicationRef,\n        private _injector: Injector,\n        private _viewContainerRef: ViewContainerRef,\n        @Inject(DOCUMENT) private _document: any) {}\n\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context: any = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n\n        this.detach();\n\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'),\n                this._componentFactoryResolver, this._appRef, this._injector);\n        }\n\n        const element: HTMLElement = this._template.elementRef.nativeElement;\n\n        // Because we support opening the same dropdown from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode!.insertBefore(this._outlet.outletElement, element);\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McDivider } from './divider.component';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McDivider],\n    declarations: [McDivider]\n})\nexport class McDividerModule {\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\n\n@Component({\n    selector: 'mc-divider',\n    host: {\n        class: 'mc-divider',\n        role: 'separator',\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n        '[class.mc-divider-vertical]': 'vertical',\n        '[class.mc-divider-inset]': 'inset'\n    },\n    template: '',\n    styleUrls: ['divider.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false\n})\nexport class McDivider {\n    // Whether the divider is vertically aligned.\n    @Input()\n    get vertical(): boolean {\n        return this._vertical;\n    }\n\n    set vertical(value: boolean) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n\n    private _vertical: boolean = false;\n\n    // Whether the divider is an inset divider.\n    @Input()\n    get inset(): boolean {\n        return this._inset;\n    }\n\n    set inset(value: boolean) {\n        this._inset = coerceBooleanProperty(value);\n    }\n\n    private _inset: boolean = false;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { PortalModule } from '@ptsecurity/cdk/portal';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCalendar, McCalendarHeader } from './calendar';\nimport { McCalendarBody } from './calendar-body';\nimport {\n    McDatepicker,\n    McDatepickerContent,\n    MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER\n} from './datepicker';\nimport { McDatepickerInput } from './datepicker-input';\nimport { McDatepickerIntl } from './datepicker-intl';\nimport { McDatepickerToggle, McDatepickerToggleIcon } from './datepicker-toggle';\nimport { McMonthView } from './month-view';\nimport { McMultiYearView } from './multi-year-view';\nimport { McYearView } from './year-view';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McButtonModule,\n        OverlayModule,\n        A11yModule,\n        PortalModule,\n        McIconModule\n    ],\n    exports: [\n        McCalendar,\n        McCalendarBody,\n        McDatepicker,\n        McDatepickerContent,\n        McDatepickerInput,\n        McDatepickerToggle,\n        McDatepickerToggleIcon,\n        McMonthView,\n        McYearView,\n        McMultiYearView,\n        McCalendarHeader,\n        McButtonModule\n    ],\n    declarations: [\n        McCalendar,\n        McCalendarBody,\n        McDatepicker,\n        McDatepickerContent,\n        McDatepickerInput,\n        McDatepickerToggle,\n        McDatepickerToggleIcon,\n        McMonthView,\n        McYearView,\n        McMultiYearView,\n        McCalendarHeader\n    ],\n    providers: [\n        McDatepickerIntl,\n        MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER\n    ],\n    entryComponents: [\n        McDatepickerContent,\n        McCalendarHeader\n    ]\n})\nexport class McDatepickerModule {\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    Directive,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    ViewEncapsulation,\n    ViewChild\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { McButton } from '@ptsecurity/mosaic/button';\nimport { merge, of as observableOf, Subscription } from 'rxjs';\n\nimport { McDatepicker } from './datepicker';\nimport { McDatepickerIntl } from './datepicker-intl';\n\n\n/** Can be used to override the icon of a `mcDatepickerToggle`. */\n@Directive({\n    selector: '[mcDatepickerToggleIcon]'\n})\nexport class McDatepickerToggleIcon {\n}\n\n\n@Component({\n    selector: 'mc-datepicker-toggle',\n    templateUrl: 'datepicker-toggle.html',\n    styleUrls: ['datepicker-toggle.css'],\n    host: {\n        class: 'mc-datepicker-toggle',\n        // Always set the tabindex to -1 so that it doesn't overlap with any custom tabindex the\n        // consumer may have provided, while still being able to receive focus.\n        '[attr.tabindex]': '-1',\n        '[class.mc-datepicker-toggle_active]': 'datepicker && datepicker.opened',\n        '[class.mc-warn]': 'datepicker && datepicker.color === \"error\"',\n        '(focus)': 'button.focus()'\n    },\n    exportAs: 'mcDatepickerToggle',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McDatepickerToggle<D> implements AfterContentInit, OnChanges, OnDestroy {\n\n    /** Whether the toggle button is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled === undefined ? this.datepicker.disabled : !!this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    /** Datepicker instance that the button will toggle. */\n    @Input('for') datepicker: McDatepicker<D>;\n\n    /** Tabindex for the toggle. */\n    @Input() tabIndex: number | null;\n\n    /** Custom icon set by the consumer. */\n    @ContentChild(McDatepickerToggleIcon) customIcon: McDatepickerToggleIcon;\n\n    /** Underlying button element. */\n    @ViewChild('button') button: McButton;\n    private stateChanges = Subscription.EMPTY;\n\n    private _disabled: boolean;\n\n    constructor(\n        public intl: McDatepickerIntl,\n        private changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') defaultTabIndex: string\n    ) {\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.datepicker) {\n            this.watchStateChanges();\n        }\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.unsubscribe();\n    }\n\n    ngAfterContentInit() {\n        this.watchStateChanges();\n    }\n\n    open(event: Event): void {\n        if (this.datepicker && !this.disabled) {\n            this.datepicker.open();\n            event.stopPropagation();\n        }\n    }\n\n    private watchStateChanges() {\n        const datepickerDisabled = this.datepicker ? this.datepicker.disabledChange : observableOf();\n        const inputDisabled = this.datepicker && this.datepicker.datepickerInput ?\n            this.datepicker.datepickerInput.disabledChange : observableOf();\n        const datepickerToggled = this.datepicker ?\n            merge(this.datepicker.openedStream, this.datepicker.closedStream) :\n            observableOf();\n\n        this.stateChanges.unsubscribe();\n        this.stateChanges = merge(\n            this.intl.changes,\n            datepickerDisabled,\n            inputDisabled,\n            datepickerToggled\n        ).subscribe(() => this.changeDetectorRef.markForCheck());\n    }\n}\n","// tslint:disable:no-empty\nimport {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Output\n} from '@angular/core';\nimport {\n    AbstractControl,\n    ControlValueAccessor,\n    NG_VALIDATORS,\n    NG_VALUE_ACCESSOR,\n    ValidationErrors,\n    Validator,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport { DOWN_ARROW } from '@ptsecurity/cdk/keycodes';\nimport { ThemePalette } from '@ptsecurity/mosaic/core';\nimport { McFormField } from '@ptsecurity/mosaic/form-field';\nimport { MC_INPUT_VALUE_ACCESSOR } from '@ptsecurity/mosaic/input';\nimport { Subscription } from 'rxjs';\n\nimport { McDatepicker } from './datepicker';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\n/** @docs-private */\nexport const MC_DATEPICKER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McDatepickerInput),\n    multi: true\n};\n\n/** @docs-private */\nexport const MC_DATEPICKER_VALIDATORS: any = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => McDatepickerInput),\n    multi: true\n};\n\n\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use McDatepickerInputEvent instead.\n */\nexport class McDatepickerInputEvent<D> {\n    /** The new value for the target datepicker input. */\n    value: D | null;\n\n    constructor(\n        /** Reference to the datepicker input component that emitted the event. */\n        public target: McDatepickerInput<D>,\n        /** Reference to the native input element associated with the datepicker input. */\n        public targetElement: HTMLElement) {\n        this.value = this.target.value;\n    }\n}\n\n\n/** Directive used to connect an input to a McDatepicker. */\n@Directive({\n    selector: 'input[mcDatepicker]',\n    providers: [\n        MC_DATEPICKER_VALUE_ACCESSOR,\n        MC_DATEPICKER_VALIDATORS,\n        { provide: MC_INPUT_VALUE_ACCESSOR, useExisting: McDatepickerInput }\n    ],\n    host: {\n        '[attr.aria-haspopup]': 'true',\n        '[attr.aria-owns]': '(datepicker?.opened && datepicker.id) || null',\n        '[attr.min]': 'min ? dateAdapter.toIso8601(min) : null',\n        '[attr.max]': 'max ? dateAdapter.toIso8601(max) : null',\n        '[disabled]': 'disabled',\n        '(input)': 'onInput($event.target.value)',\n        '(change)': 'onChange()',\n        '(blur)': 'onBlur()',\n        '(keydown)': 'onKeydown($event)'\n    },\n    exportAs: 'mcDatepickerInput'\n})\nexport class McDatepickerInput<D> implements ControlValueAccessor, OnDestroy, Validator {\n    /** The datepicker that this input is associated with. */\n    @Input()\n    set mcDatepicker(value: McDatepicker<D>) {\n        if (!value) {\n            return;\n        }\n\n        this.datepicker = value;\n        this.datepicker.registerInput(this);\n        this.datepickerSubscription.unsubscribe();\n\n        this.datepickerSubscription = this.datepicker.selectedChanged.subscribe((selected: D) => {\n            this.value = selected;\n            this.cvaOnChange(selected);\n            this.onTouched();\n            this.dateInput.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n            this.dateChange.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n        });\n    }\n\n    /** Function that can be used to filter out dates within the datepicker. */\n    @Input()\n    set mcDatepickerFilter(value: (date: D | null) => boolean) {\n        this.dateFilter = value;\n        this.validatorOnChange();\n    }\n\n    /** The value of the input. */\n    @Input()\n    get value(): D | null {\n        return this._value;\n    }\n\n    set value(value: D | null) {\n        // tslint:disable-next-line:no-parameter-reassignment\n        value = this.dateAdapter.deserialize(value);\n        this.lastValueValid = !value || this.dateAdapter.isValid(value);\n        // tslint:disable-next-line:no-parameter-reassignment\n        value = this.getValidDateOrNull(value);\n        const oldDate = this.value;\n        this._value = value;\n        this.formatValue(value);\n\n        if (!this.dateAdapter.sameDate(oldDate, value)) {\n            this.valueChange.emit(value);\n        }\n    }\n\n    /** The minimum valid date. */\n    @Input()\n    get min(): D | null {\n        return this._min;\n    }\n\n    set min(value: D | null) {\n        this._min = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.validatorOnChange();\n    }\n\n    /** The maximum valid date. */\n    @Input()\n    get max(): D | null {\n        return this._max;\n    }\n\n    set max(value: D | null) {\n        this._max = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.validatorOnChange();\n    }\n\n    /** Whether the datepicker-input is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return !!this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        const newValue = coerceBooleanProperty(value);\n        const element = this.elementRef.nativeElement;\n\n        if (this._disabled !== newValue) {\n            this._disabled = newValue;\n            this.disabledChange.emit(newValue);\n        }\n\n        // We need to null check the `blur` method, because it's undefined during SSR.\n        if (newValue && element.blur) {\n            // Normally, native input elements automatically blur if they turn disabled. This behavior\n            // is problematic, because it would mean that it triggers another change detection cycle,\n            // which then causes a changed after checked error if the input element was focused before.\n            element.blur();\n        }\n    }\n\n    datepicker: McDatepicker<D>;\n    dateFilter: (date: D | null) => boolean;\n\n    /** Emits when a `change` event is fired on this `<input>`. */\n    @Output() readonly dateChange: EventEmitter<McDatepickerInputEvent<D>> =\n        new EventEmitter<McDatepickerInputEvent<D>>();\n\n    /** Emits when an `input` event is fired on this `<input>`. */\n    @Output() readonly dateInput: EventEmitter<McDatepickerInputEvent<D>> =\n        new EventEmitter<McDatepickerInputEvent<D>>();\n\n    /** Emits when the value changes (either due to user input or programmatic change). */\n    valueChange = new EventEmitter<D | null>();\n\n    /** Emits when the disabled state has changed */\n    disabledChange = new EventEmitter<boolean>();\n    private _value: D | null;\n    private _min: D | null;\n    private _max: D | null;\n    private _disabled: boolean;\n\n    private datepickerSubscription = Subscription.EMPTY;\n\n    private localeSubscription = Subscription.EMPTY;\n\n    /** Whether the last value set on the input was valid. */\n    private lastValueValid = false;\n\n    constructor(\n        public elementRef: ElementRef<HTMLInputElement>,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        @Optional() private formField: McFormField\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        // Update the displayed date when the locale changes.\n        this.localeSubscription = dateAdapter.localeChanges.subscribe(() => {\n            this.value = this.value;\n        });\n    }\n\n    onTouched = () => {\n    }\n\n    ngOnDestroy() {\n        this.datepickerSubscription.unsubscribe();\n        this.localeSubscription.unsubscribe();\n        this.valueChange.complete();\n        this.disabledChange.complete();\n    }\n\n    /** @docs-private */\n    registerOnValidatorChange(fn: () => void): void {\n        this.validatorOnChange = fn;\n    }\n\n    /** @docs-private */\n    validate(c: AbstractControl): ValidationErrors | null {\n        return this.validator ? this.validator(c) : null;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value: D): void {\n        this.value = value;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this.cvaOnChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    onKeydown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n\n        if (this.datepicker && isAltDownArrow && !this.elementRef.nativeElement.readOnly) {\n            this.datepicker.open();\n            event.preventDefault();\n        }\n    }\n\n    onInput(value: string) {\n        let date = this.dateAdapter.parse(value, this.dateFormats.parse.dateInput);\n        this.lastValueValid = !date || this.dateAdapter.isValid(date);\n        date = this.getValidDateOrNull(date);\n\n        if (!this.dateAdapter.sameDate(date, this._value)) {\n            this._value = date;\n            this.cvaOnChange(date);\n            this.valueChange.emit(date);\n            this.dateInput.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n        }\n    }\n\n    onChange() {\n        this.dateChange.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n    }\n\n    /** Returns the palette used by the input's form field, if any. */\n    getThemePalette(): ThemePalette | undefined {\n        return this.formField ? this.formField.color : undefined;\n    }\n\n    /** Handles blur events on the input. */\n    onBlur() {\n        // Reformat the input only if we have a valid value.\n        if (this.value) {\n            this.formatValue(this.value);\n        }\n\n        this.onTouched();\n    }\n\n    private cvaOnChange: (value: any) => void = () => {\n    }\n\n    private validatorOnChange = () => {\n    }\n\n    /** The form control validator for whether the input parses. */\n    private parseValidator: ValidatorFn = (): ValidationErrors | null => {\n        return this.lastValueValid ?\n            null : { mcDatepickerParse: { text: this.elementRef.nativeElement.value } };\n    }\n\n    /** The form control validator for the min date. */\n    private minValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n        const controlValue = this.getValidDateOrNull(this.dateAdapter.deserialize(control.value));\n\n        return (!this.min || !controlValue ||\n            this.dateAdapter.compareDate(this.min, controlValue) <= 0) ?\n            null : { mcDatepickerMin: { min: this.min, actual: controlValue } };\n    }\n\n    /** The form control validator for the max date. */\n    private maxValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n        const controlValue = this.getValidDateOrNull(this.dateAdapter.deserialize(control.value));\n\n        return (!this.max || !controlValue ||\n            this.dateAdapter.compareDate(this.max, controlValue) >= 0) ?\n            null : { mcDatepickerMax: { max: this.max, actual: controlValue } };\n    }\n\n    /** The form control validator for the date filter. */\n    private filterValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n        const controlValue = this.getValidDateOrNull(this.dateAdapter.deserialize(control.value));\n\n        return !this.dateFilter || !controlValue || this.dateFilter(controlValue) ?\n            null : { mcDatepickerFilter: true };\n    }\n\n    /** Formats a value and sets it on the input element. */\n    private formatValue(value: D | null) {\n        this.elementRef.nativeElement.value =\n            value ? this.dateAdapter.format(value, this.dateFormats.display.dateInput) : '';\n    }\n\n    /** The combined form control validator for this input. */\n        // tslint:disable:member-ordering\n    private validator: ValidatorFn | null =\n        Validators.compose([\n            this.parseValidator,\n            this.minValidator,\n            this.maxValidator,\n            this.filterValidator\n        ]);\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n}\n","// tslint:disable:no-unbound-method\n// tslint:disable:no-magic-numbers\nimport { DOCUMENT } from '@angular/common';\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    Component,\n    ComponentRef,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    Optional,\n    Output,\n    ViewChild,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { DateAdapter } from '@ptsecurity/cdk/datetime';\nimport { ESCAPE, UP_ARROW } from '@ptsecurity/cdk/keycodes';\nimport {\n    Overlay,\n    OverlayConfig,\n    OverlayRef,\n    IPositionStrategy,\n    IScrollStrategy\n} from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal, IComponentType } from '@ptsecurity/cdk/portal';\nimport {\n    CanColor,\n    CanColorCtor,\n    mixinColor,\n    ThemePalette\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { merge, Observable, Subject, Subscription } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\n\nimport { McCalendar } from './calendar';\nimport { McCalendarCellCssClasses } from './calendar-body';\nimport { mcDatepickerAnimations } from './datepicker-animations';\nimport { createMissingDateImplError } from './datepicker-errors';\nimport { McDatepickerInput } from './datepicker-input';\n\n\n/** Used to generate a unique ID for each datepicker instance. */\nlet datepickerUid = 0;\n\n/** Injection token that determines the scroll handling while the calendar is open. */\nexport const MC_DATEPICKER_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-datepicker-scroll-strategy');\n\n/** @docs-private */\n// tslint:disable-next-line:naming-convention\nexport function MC_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_DATEPICKER_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_DATEPICKER_SCROLL_STRATEGY_FACTORY\n};\n\n// Boilerplate for applying mixins to McDatepickerContent.\n/** @docs-private */\nexport class McDatepickerContentBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McDatepickerContentMixinBase: CanColorCtor & typeof McDatepickerContentBase =\n    mixinColor(McDatepickerContentBase);\n\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * McCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * @docs-private\n */\n@Component({\n    selector: 'mc-datepicker__content',\n    templateUrl: 'datepicker-content.html',\n    styleUrls: ['datepicker-content.css'],\n    host: {\n        class: 'mc-datepicker__content',\n        '[@transformPanel]': '\"enter\"'\n    },\n    animations: [\n        mcDatepickerAnimations.transformPanel,\n        mcDatepickerAnimations.fadeInCalendar\n    ],\n    exportAs: 'mcDatepickerContent',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['color']\n})\nexport class McDatepickerContent<D> extends McDatepickerContentMixinBase\n    implements AfterViewInit, CanColor {\n\n    /** Reference to the internal calendar component. */\n    @ViewChild(McCalendar) calendar: McCalendar<D>;\n\n    /** Reference to the datepicker that created the overlay. */\n    datepicker: McDatepicker<D>;\n\n    /** Whether the datepicker is above or below the input. */\n    isAbove: boolean;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    ngAfterViewInit() {\n        this.calendar.focusActiveCell();\n    }\n}\n\n\n// TODO: We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"mcDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the datepicker popup/dialog. */\n@Component({\n    selector: 'mc-datepicker',\n    template: '',\n    exportAs: 'mcDatepicker',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    providers: [{ provide: McFormFieldControl, useExisting: McDatepicker }]\n})\nexport class McDatepicker<D> implements OnDestroy, CanColor {\n\n    /** The date to open the calendar to initially. */\n    @Input()\n    get startAt(): D | null {\n        // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n        // selected value is.\n        return this._startAt || (this.datepickerInput ? this.datepickerInput.value : null);\n    }\n\n    set startAt(value: D | null) {\n        this._startAt = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** Color palette to use on the datepicker's calendar. */\n    @Input()\n    get color(): ThemePalette {\n        // @ts-ignore:next-line\n        return this._color ||\n            (this.datepickerInput ? this.datepickerInput.getThemePalette() : undefined);\n    }\n\n    set color(value: ThemePalette) {\n        this._color = value;\n    }\n\n    /** Whether the datepicker pop-up should be disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled === undefined && this.datepickerInput ?\n            this.datepickerInput.disabled : !!this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        const newValue = coerceBooleanProperty(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this.disabledChange.next(newValue);\n        }\n    }\n\n    /** Whether the calendar is open. */\n    @Input()\n    get opened(): boolean {\n        return this._opened;\n    }\n\n    set opened(value: boolean) {\n        if (value) {\n            this.open();\n        } else {\n            this.close();\n        }\n    }\n\n    /** The currently selected date. */\n    get selected(): D | null {\n        return this.validSelected;\n    }\n\n    set selected(value: D | null) {\n        this.validSelected = value;\n    }\n\n    /** The minimum selectable date. */\n    get minDate(): D | null {\n        return this.datepickerInput && this.datepickerInput.min;\n    }\n\n    /** The maximum selectable date. */\n    get maxDate(): D | null {\n        return this.datepickerInput && this.datepickerInput.max;\n    }\n\n    get dateFilter(): (date: D | null) => boolean {\n        return this.datepickerInput && this.datepickerInput.dateFilter;\n    }\n\n\n    get value(): D | null {\n        return this.selected;\n    }\n\n    /** An input indicating the type of the custom header component for the calendar, if set. */\n    @Input() calendarHeaderComponent: IComponentType<any>;\n\n    /** The view that the calendar should start in. */\n    @Input() startView: 'month' | 'year' | 'multi-year' = 'month';\n\n    /**\n     * Emits selected year in multiyear view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /**\n     * Emits selected month in year view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Classes to be passed to the date picker panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[];\n\n    /** Function that can be used to add custom CSS classes to dates. */\n    @Input() dateClass: (date: D) => McCalendarCellCssClasses;\n\n    /** Emits when the datepicker has been opened. */\n    @Output('opened') openedStream: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emits when the datepicker has been closed. */\n    @Output('closed') closedStream: EventEmitter<void> = new EventEmitter<void>();\n\n    /** The id for the datepicker calendar. */\n    id: string = `mc-datepicker-${datepickerUid++}`;\n\n    /** A reference to the overlay when the calendar is opened as a popup. */\n    popupRef: OverlayRef;\n\n    /** The input element this datepicker is associated with. */\n    datepickerInput: McDatepickerInput<D>;\n\n    readonly stateChanges: Observable<void> = new Subject<void>();\n\n    /** Emits when the datepicker is disabled. */\n    readonly disabledChange = new Subject<boolean>();\n\n    /** Emits new selected date when selected date changes. */\n    readonly selectedChanged = new Subject<D>();\n    private scrollStrategy: () => IScrollStrategy;\n    private _startAt: D | null;\n    private _disabled: boolean;\n    private _opened = false;\n    private validSelected: D | null = null;\n    private _color: ThemePalette;\n\n    /** A portal containing the calendar for this datepicker. */\n    private calendarPortal: ComponentPortal<McDatepickerContent<D>>;\n\n    /** Reference to the component instantiated in popup mode. */\n    private popupComponentRef: ComponentRef<McDatepickerContent<D>> | null;\n\n    /** The element that was focused before the datepicker was opened. */\n    private focusedElementBeforeOpen: HTMLElement | null = null;\n\n    /** Subscription to value changes in the associated input element. */\n    private inputSubscription = Subscription.EMPTY;\n\n    constructor(private overlay: Overlay,\n                private ngZone: NgZone,\n                private viewContainerRef: ViewContainerRef,\n                @Inject(MC_DATEPICKER_SCROLL_STRATEGY) scrollStrategy: any,\n                @Optional() private dateAdapter: DateAdapter<D>,\n                @Optional() private dir: Directionality,\n                @Optional() @Inject(DOCUMENT) private document: any) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        this.scrollStrategy = scrollStrategy;\n    }\n\n    ngOnDestroy() {\n        this.close();\n        this.inputSubscription.unsubscribe();\n        this.disabledChange.complete();\n\n        if (this.popupRef) {\n            this.popupRef.dispose();\n            this.popupComponentRef = null;\n        }\n    }\n\n    /** Selects the given date */\n    select(date: D): void {\n        const oldValue = this.selected;\n        this.selected = date;\n        if (!this.dateAdapter.sameDate(oldValue, this.selected)) {\n            this.selectedChanged.next(date);\n        }\n    }\n\n    /** Emits the selected year in multiyear view */\n    selectYear(normalizedYear: D): void {\n        this.yearSelected.emit(normalizedYear);\n    }\n\n    /** Emits selected month in year view */\n    selectMonth(normalizedMonth: D): void {\n        this.monthSelected.emit(normalizedMonth);\n    }\n\n    /**\n     * Register an input with this datepicker.\n     * @param input The datepicker input to register with this datepicker.\n     */\n    registerInput(input: McDatepickerInput<D>): void {\n        if (this.datepickerInput) {\n            throw Error('A McDatepicker can only be associated with a single input.');\n        }\n        this.datepickerInput = input;\n        this.inputSubscription =\n            this.datepickerInput.valueChange.subscribe((value: D | null) => this.selected = value);\n    }\n\n    /** Open the calendar. */\n    open(): void {\n        if (this._opened || this.disabled) {\n            return;\n        }\n        if (!this.datepickerInput) {\n            throw Error('Attempted to open an McDatepicker with no associated input.');\n        }\n        if (this.document) {\n            this.focusedElementBeforeOpen = this.document.activeElement;\n        }\n\n        this.openAsPopup();\n\n        this._opened = true;\n        this.openedStream.emit();\n    }\n\n    /** Close the calendar. */\n    close(): void {\n        if (!this._opened) {\n            return;\n        }\n\n        if (this.popupRef && this.popupRef.hasAttached()) {\n            this.popupRef.detach();\n        }\n\n        if (this.calendarPortal && this.calendarPortal.isAttached) {\n            this.calendarPortal.detach();\n        }\n\n        const completeClose = () => {\n            // The `_opened` could've been reset already if\n            // we got two events in quick succession.\n            if (this._opened) {\n                this._opened = false;\n                this.closedStream.emit();\n                this.focusedElementBeforeOpen = null;\n            }\n        };\n\n        if (this.focusedElementBeforeOpen &&\n            typeof this.focusedElementBeforeOpen.focus === 'function') {\n            // Because IE moves focus asynchronously, we can't count on it being restored before we've\n            // marked the datepicker as closed. If the event fires out of sequence and the element that\n            // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n            // able to close the calendar at all. We work around it by making the logic, that marks\n            // the datepicker as closed, async as well.\n            this.focusedElementBeforeOpen.focus();\n            setTimeout(completeClose);\n        } else {\n            completeClose();\n        }\n    }\n\n    /** Open the calendar as a popup. */\n    private openAsPopup(): void {\n        if (!this.calendarPortal) {\n            this.calendarPortal = new ComponentPortal<McDatepickerContent<D>>(McDatepickerContent,\n                this.viewContainerRef);\n        }\n\n        if (!this.popupRef) {\n            this.createPopup();\n        }\n\n        if (!this.popupRef.hasAttached()) {\n            this.popupComponentRef = this.popupRef.attach(this.calendarPortal);\n            this.popupComponentRef.instance.datepicker = this;\n            this.setColor();\n\n            // Update the position once the calendar has rendered.\n            this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n                this.popupRef.updatePosition();\n            });\n        }\n    }\n\n    /** Create the popup. */\n    private createPopup(): void {\n        const overlayConfig = new OverlayConfig({\n            positionStrategy: this.createPopupPositionStrategy(),\n            hasBackdrop: true,\n            backdropClass: 'mc-overlay-transparent-backdrop',\n            direction: this.dir,\n            scrollStrategy: this.scrollStrategy(),\n            panelClass: 'mc-datepicker__popup'\n        });\n\n        this.popupRef = this.overlay.create(overlayConfig);\n        this.popupRef.overlayElement.setAttribute('role', 'dialog');\n\n        merge(\n            this.popupRef.backdropClick(),\n            this.popupRef.detachments(),\n            this.popupRef.keydownEvents().pipe(filter((event) => {\n                // Closing on alt + up is only valid when there's an input associated with the datepicker.\n                // tslint:disable-next-line:deprecation\n                return event.keyCode === ESCAPE || (this.datepickerInput && event.altKey && event.keyCode === UP_ARROW);\n            }))\n        ).subscribe(() => this.close());\n    }\n\n    /** Create the popup PositionStrategy. */\n    private createPopupPositionStrategy(): IPositionStrategy {\n        return this.overlay.position()\n            .flexibleConnectedTo(this.datepickerInput.elementRef)\n            .withTransformOriginOn('.mc-datepicker__content')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withLockedPosition()\n            .withPositions([\n                {\n                    originX: 'start',\n                    originY: 'bottom',\n                    overlayX: 'start',\n                    overlayY: 'top'\n                },\n                {\n                    originX: 'start',\n                    originY: 'top',\n                    overlayX: 'start',\n                    overlayY: 'bottom'\n                },\n                {\n                    originX: 'end',\n                    originY: 'bottom',\n                    overlayX: 'end',\n                    overlayY: 'top'\n                },\n                {\n                    originX: 'end',\n                    originY: 'top',\n                    overlayX: 'end',\n                    overlayY: 'bottom'\n                }\n            ]);\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Passes the current theme color along to the calendar overlay. */\n    private setColor(): void {\n        const color = this.color;\n        if (this.popupComponentRef) {\n            this.popupComponentRef.instance.color = color;\n        }\n    }\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\n/**\n * Animations used by the mosaic datepicker.\n * @docs-private\n */\nexport const mcDatepickerAnimations: {\n    readonly transformPanel: AnimationTriggerMetadata;\n    readonly fadeInCalendar: AnimationTriggerMetadata;\n} = {\n    /** Transforms the height of the datepicker's calendar. */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(1, 0.8)'\n        })),\n        transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1, 1)'\n        }))),\n        transition('* => void', animate('100ms linear', style({ opacity: 0 })))\n    ]),\n\n    /** Fades in the content of the calendar. */\n    fadeInCalendar: trigger('fadeInCalendar', [\n        state('void', style({ opacity: 0 })),\n        state('enter', style({ opacity: 1 })),\n\n        // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n        transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n    ])\n};\n\n// todo should be put into polyfils\n// https://github.com/angular/angular/issues/24769\nif (!Element.prototype.matches) {\n    Element.prototype.matches = (Element.prototype as any).msMatchesSelector;\n}\n","import {\n    AfterContentInit,\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Output,\n    SimpleChanges,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport { ComponentPortal, IComponentType, Portal } from '@ptsecurity/cdk/portal';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { McCalendarCellCssClasses } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\nimport { McDatepickerIntl } from './datepicker-intl';\nimport { McMonthView } from './month-view';\nimport { McMultiYearView, yearsPerPage } from './multi-year-view';\nimport { McYearView } from './year-view';\n\n\n/**\n * Possible views for the calendar.\n * @docs-private\n */\nexport type McCalendarView = 'month' | 'year' | 'multi-year';\n\n/** Default header for McCalendar */\n@Component({\n    selector: 'mc-calendar-header',\n    templateUrl: 'calendar-header.html',\n    exportAs: 'mcCalendarHeader',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCalendarHeader<D> {\n    constructor(private intl: McDatepickerIntl,\n                @Inject(forwardRef(() => McCalendar)) public calendar: McCalendar<D>,\n                @Optional() private dateAdapter: DateAdapter<D>,\n                @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n                changeDetectorRef: ChangeDetectorRef) {\n\n        this.calendar.stateChanges.subscribe(() => changeDetectorRef.markForCheck());\n    }\n\n    /** The label for the current calendar view. */\n    get periodButtonText(): string {\n        if (this.calendar.currentView === 'month') {\n            const label = this.dateAdapter\n                .format(this.calendar.activeDate, this.dateFormats.display.monthYearLabel);\n\n            return label[0].toLocaleUpperCase() + label.substr(1);\n        }\n\n        if (this.calendar.currentView === 'year') {\n            return this.dateAdapter.getYearName(this.calendar.activeDate);\n        }\n\n        const activeYear = this.dateAdapter.getYear(this.calendar.activeDate);\n        const firstYearInView = this.dateAdapter.getYearName(\n            // tslint:disable-next-line:no-magic-numbers\n            this.dateAdapter.createDate(activeYear - activeYear % 24, 0, 1));\n        const lastYearInView = this.dateAdapter.getYearName(\n            // tslint:disable-next-line:no-magic-numbers\n            this.dateAdapter.createDate(activeYear + yearsPerPage - 1 - activeYear % 24, 0, 1));\n\n        return `${firstYearInView} \\u2013 ${lastYearInView}`;\n    }\n\n    get periodButtonLabel(): string {\n        return this.calendar.currentView === 'month' ?\n            this.intl.switchToMultiYearViewLabel : this.intl.switchToMonthViewLabel;\n    }\n\n    /** The label for the previous button. */\n    get prevButtonLabel(): string {\n        return {\n            month: this.intl.prevMonthLabel,\n            year: this.intl.prevYearLabel,\n            'multi-year': this.intl.prevMultiYearLabel\n        }[this.calendar.currentView];\n    }\n\n    /** The label for the next button. */\n    get nextButtonLabel(): string {\n        return {\n            month: this.intl.nextMonthLabel,\n            year: this.intl.nextYearLabel,\n            'multi-year': this.intl.nextMultiYearLabel\n        }[this.calendar.currentView];\n    }\n\n    /** Handles user clicks on the period label. */\n    currentPeriodClicked(): void {\n        this.calendar.currentView = this.calendar.currentView === 'month' ? 'multi-year' : 'month';\n    }\n\n    /** Handles user clicks on the previous button. */\n    previousClicked(): void {\n        this.calendar.activeDate = this.calendar.currentView === 'month' ?\n            this.dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) :\n            this.dateAdapter.addCalendarYears(\n                this.calendar.activeDate, this.calendar.currentView === 'year' ? -1 : -yearsPerPage\n            );\n    }\n\n    /** Handles user clicks on the next button. */\n    nextClicked(): void {\n        this.calendar.activeDate = this.calendar.currentView === 'month' ?\n            this.dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) :\n            this.dateAdapter.addCalendarYears(\n                this.calendar.activeDate,\n                this.calendar.currentView === 'year' ? 1 : yearsPerPage\n            );\n    }\n\n    /** Whether the previous period button is enabled. */\n    previousEnabled(): boolean {\n        if (!this.calendar.minDate) {\n            return true;\n        }\n\n        return !this.calendar.minDate ||\n            !this.isSameView(this.calendar.activeDate, this.calendar.minDate);\n    }\n\n    /** Whether the next period button is enabled. */\n    nextEnabled(): boolean {\n        return !this.calendar.maxDate ||\n            !this.isSameView(this.calendar.activeDate, this.calendar.maxDate);\n    }\n\n    /** Whether the two dates represent the same view in the current view mode (month or year). */\n    private isSameView(date1: D, date2: D): boolean {\n        if (this.calendar.currentView === 'month') {\n            return this.dateAdapter.getYear(date1) === this.dateAdapter.getYear(date2) &&\n                this.dateAdapter.getMonth(date1) === this.dateAdapter.getMonth(date2);\n        }\n        if (this.calendar.currentView === 'year') {\n            return this.dateAdapter.getYear(date1) === this.dateAdapter.getYear(date2);\n        }\n\n        // Otherwise we are in 'multi-year' view.\n        return Math.floor(this.dateAdapter.getYear(date1) / yearsPerPage) ===\n            Math.floor(this.dateAdapter.getYear(date2) / yearsPerPage);\n    }\n}\n\n/**\n * A calendar that is used as part of the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-calendar',\n    templateUrl: 'calendar.html',\n    styleUrls: ['calendar.css'],\n    host: {\n        class: 'mc-calendar'\n    },\n    exportAs: 'mcCalendar',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCalendar<D> implements AfterContentInit, AfterViewChecked, OnDestroy, OnChanges {\n\n    /** A date representing the period (month or year) to start the calendar in. */\n    @Input()\n    get startAt(): D | null {\n        return this._startAt;\n    }\n\n    set startAt(value: D | null) {\n        this._startAt = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /**\n     * The current active date. This determines which time period is shown and which date is\n     * highlighted when using keyboard navigation.\n     */\n    get activeDate(): D {\n        return this.clampedActiveDate;\n    }\n\n    set activeDate(value: D) {\n        this.clampedActiveDate = this.dateAdapter.clampDate(value, this.minDate, this.maxDate);\n        this.stateChanges.next();\n    }\n\n    /** Whether the calendar is in month view. */\n    get currentView(): McCalendarView {\n        return this._currentView;\n    }\n\n    set currentView(value: McCalendarView) {\n        this._currentView = value;\n        this.moveFocusOnNextTick = true;\n    }\n\n    /** An input indicating the type of the header component, if set. */\n    @Input() headerComponent: IComponentType<any>;\n\n    /** A portal containing the header component type for this calendar. */\n    calendarHeaderPortal: Portal<any>;\n\n    /** Whether the calendar should be started in month or year view. */\n    @Input() startView: McCalendarView = 'month';\n\n    /** Function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Function that can be used to add custom CSS classes to dates. */\n    @Input() dateClass: (date: D) => McCalendarCellCssClasses;\n\n    /** Emits when the currently selected date changes. */\n    @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /**\n     * Emits the year chosen in multiyear view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /**\n     * Emits the month chosen in year view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits when any date is selected. */\n    @Output() readonly userSelection: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Reference to the current month view component. */\n    @ViewChild(McMonthView) monthView: McMonthView<D>;\n\n    /** Reference to the current year view component. */\n    @ViewChild(McYearView) yearView: McYearView<D>;\n\n    /** Reference to the current multi-year view component. */\n    @ViewChild(McMultiYearView) multiYearView: McMultiYearView<D>;\n\n    /**\n     * Emits whenever there is a state change that the header may need to respond to.\n     */\n    stateChanges = new Subject<void>();\n\n    private intlChanges: Subscription;\n\n    /**\n     * Used for scheduling that focus should be moved to the active cell on the next tick.\n     * We need to schedule it, rather than do it immediately, because we have to wait\n     * for Angular to re-evaluate the view children.\n     */\n    private moveFocusOnNextTick = false;\n    private _startAt: D | null;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n    private clampedActiveDate: D;\n    private _currentView: McCalendarView;\n\n    constructor(\n        intl: McDatepickerIntl,\n        @Optional() private dateAdapter: DateAdapter<D>,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        this.intlChanges = intl.changes.subscribe(() => {\n            changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        });\n    }\n\n    ngAfterContentInit() {\n        this.calendarHeaderPortal = new ComponentPortal(this.headerComponent || McCalendarHeader);\n        this.activeDate = this.startAt || this.dateAdapter.today();\n\n        // Assign to the private property since we don't want to move focus on init.\n        this._currentView = this.startView;\n    }\n\n    ngAfterViewChecked() {\n        if (this.moveFocusOnNextTick) {\n            this.moveFocusOnNextTick = false;\n            this.focusActiveCell();\n        }\n    }\n\n    ngOnDestroy() {\n        this.intlChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const change = changes.minDate || changes.maxDate || changes.dateFilter;\n\n        if (change && !change.firstChange) {\n            const view = this.getCurrentViewComponent();\n\n            if (view) {\n                // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n                // passed down to the view via data bindings which won't be up-to-date when we call `init`.\n                this.changeDetectorRef.detectChanges();\n                view.init();\n            }\n        }\n\n        this.stateChanges.next();\n    }\n\n    focusActiveCell() {\n        this.getCurrentViewComponent().focusActiveCell();\n    }\n\n    /** Updates today's date after an update of the active date */\n    updateTodaysDate() {\n        const view = this.currentView === 'month' ? this.monthView :\n            (this.currentView === 'year' ? this.yearView : this.multiYearView);\n\n        view.ngAfterContentInit();\n    }\n\n    /** Handles date selection in the month view. */\n    dateSelected(date: D): void {\n        if (!this.dateAdapter.sameDate(date, this.selected)) {\n            this.selectedChange.emit(date);\n        }\n    }\n\n    /** Handles year selection in the multiyear view. */\n    yearSelectedInMultiYearView(normalizedYear: D) {\n        this.yearSelected.emit(normalizedYear);\n    }\n\n    /** Handles month selection in the year view. */\n    monthSelectedInYearView(normalizedMonth: D) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n\n    userSelected(): void {\n        this.userSelection.emit();\n    }\n\n    /** Handles year/month selection in the multi-year/year views. */\n    goToDateInView(date: D, view: 'month' | 'year' | 'multi-year'): void {\n        this.activeDate = date;\n        this.currentView = view;\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Returns the component instance that corresponds to the current calendar view. */\n    private getCurrentViewComponent() {\n        return this.monthView || this.yearView || this.multiYearView;\n    }\n}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    UP_ARROW,\n    SPACE\n} from '@ptsecurity/cdk/keycodes';\n\nimport { McCalendarBody, McCalendarCell } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\n/**\n * An internal component used to display a single year in the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-year-view',\n    templateUrl: 'year-view.html',\n    exportAs: 'mcYearView',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McYearView<D> implements AfterContentInit {\n    /** The date to display in this year view (everything other than the year is ignored). */\n    @Input()\n    get activeDate(): D {\n        return this._activeDate;\n    }\n\n    set activeDate(value: D) {\n        const oldActiveDate = this._activeDate;\n        const validDate =\n            this.getValidDateOrNull(this.dateAdapter.deserialize(value)) || this.dateAdapter.today();\n        this._activeDate = this.dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n        if (this.dateAdapter.getYear(oldActiveDate) !== this.dateAdapter.getYear(this._activeDate)) {\n            this.init();\n        }\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.selectedMonth = this.getMonthInCurrentYear(this._selected);\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** A function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Emits when a new month is selected. */\n    @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits the selected month. This doesn't imply a change on the selected date */\n    @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits when any date is activated. */\n    @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** The body of calendar table */\n    @ViewChild(McCalendarBody) mcCalendarBody: McCalendarBody;\n\n    /** Grid of calendar cells representing the months of the year. */\n    months: McCalendarCell[][];\n\n    /** The label for this year (e.g. \"2017\"). */\n    yearLabel: string;\n\n    /** The month in this year that today falls on. Null if today is in a different year. */\n    todayMonth: number | null;\n\n    /**\n     * The month in this year that the selected Date falls on.\n     * Null if the selected Date is in a different year.\n     */\n    selectedMonth: number | null;\n    private _activeDate: D;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() private dir?: Directionality\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        this._activeDate = this.dateAdapter.today();\n    }\n\n    ngAfterContentInit() {\n        this.init();\n    }\n\n    /** Handles when a new month is selected. */\n    onMonthSelected(month: number) {\n        const normalizedDate =\n            this.dateAdapter.createDate(this.dateAdapter.getYear(this.activeDate), month, 1);\n\n        this.monthSelected.emit(normalizedDate);\n\n        const daysInMonth = this.dateAdapter.getNumDaysInMonth(normalizedDate);\n\n        this.selectedChange.emit(this.dateAdapter.createDate(\n            this.dateAdapter.getYear(this.activeDate), month,\n            Math.min(this.dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n\n    /** Handles keydown events on the calendar body when calendar is in year view. */\n    handleCalendarBodyKeydown(event: KeyboardEvent): void {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n        const oldActiveDate = this._activeDate;\n        const isRtl = this.isRtl();\n\n        const VERTICAL_SHIFT = 4;\n        const PAGE_SHIFT = 10;\n        const MAX_MONTH_INDEX = 11;\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, -VERTICAL_SHIFT);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, VERTICAL_SHIFT);\n                break;\n            case HOME:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate,\n                    -this.dateAdapter.getMonth(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate,\n                    MAX_MONTH_INDEX - this.dateAdapter.getMonth(this._activeDate));\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -PAGE_SHIFT : -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(this._activeDate, event.altKey ? PAGE_SHIFT : 1);\n                break;\n            case ENTER:\n            case SPACE:\n                this.onMonthSelected(this.dateAdapter.getMonth(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n\n        if (this.dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n\n        this.focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n\n    /** Initializes this year view. */\n    init() {\n        this.selectedMonth = this.getMonthInCurrentYear(this.selected);\n        this.todayMonth = this.getMonthInCurrentYear(this.dateAdapter.today());\n        this.yearLabel = this.dateAdapter.getYearName(this.activeDate);\n\n        const monthNames = this.dateAdapter.getMonthNames('short');\n\n        // First row of months only contains 5 elements so we can fit the year label on the same row.\n        // tslint:disable-next-line:no-magic-numbers\n        this.months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map((row) => row.map(\n            (month) => this.createCellForMonth(month, monthNames[month])));\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.mcCalendarBody.focusActiveCell();\n    }\n\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     */\n    private getMonthInCurrentYear(date: D | null) {\n        return date && this.dateAdapter.getYear(date) === this.dateAdapter.getYear(this.activeDate) ?\n            this.dateAdapter.getMonth(date) : null;\n    }\n\n    /** Creates an McCalendarCell for the given month. */\n    private createCellForMonth(month: number, monthName: string) {\n        const ariaLabel = this.dateAdapter.format(\n            this.dateAdapter.createDate(this.dateAdapter.getYear(this.activeDate), month, 1),\n            this.dateFormats.display.monthYearA11yLabel);\n\n        const newMonthName = monthName[0].toLocaleUpperCase() + monthName.substr(1);\n\n        return new McCalendarCell(\n            month, newMonthName, ariaLabel, this.shouldEnableMonth(month));\n    }\n\n    /** Whether the given month is enabled. */\n    private shouldEnableMonth(month: number) {\n\n        const activeYear = this.dateAdapter.getYear(this.activeDate);\n\n        if (month === undefined || month === null ||\n            this.isYearAndMonthAfterMaxDate(activeYear, month) ||\n            this.isYearAndMonthBeforeMinDate(activeYear, month)) {\n            return false;\n        }\n\n        if (!this.dateFilter) {\n            return true;\n        }\n\n        const firstOfMonth = this.dateAdapter.createDate(activeYear, month, 1);\n\n        // If any date in the month is enabled count the month as enabled.\n        for (let date = firstOfMonth; this.dateAdapter.getMonth(date) === month;\n             date = this.dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Tests whether the combination month/year is after this.maxDate, considering\n     * just the month and year of this.maxDate\n     */\n    private isYearAndMonthAfterMaxDate(year: number, month: number) {\n        if (this.maxDate) {\n            const maxYear = this.dateAdapter.getYear(this.maxDate);\n            const maxMonth = this.dateAdapter.getMonth(this.maxDate);\n\n            return year > maxYear || (year === maxYear && month > maxMonth);\n        }\n\n        return false;\n    }\n\n    /**\n     * Tests whether the combination month/year is before this.minDate, considering\n     * just the month and year of this.minDate\n     */\n    private isYearAndMonthBeforeMinDate(year: number, month: number) {\n        if (this.minDate) {\n            const minYear = this.dateAdapter.getYear(this.minDate);\n            const minMonth = this.dateAdapter.getMonth(this.minDate);\n\n            return year < minYear || (year === minYear && month < minMonth);\n        }\n\n        return false;\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Determines whether the user has the RTL layout direction. */\n    private isRtl() {\n        return this.dir && this.dir.value === 'rtl';\n    }\n}\n","// tslint:disable:no-magic-numbers\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { DateAdapter } from '@ptsecurity/cdk/datetime';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    UP_ARROW,\n    SPACE\n} from '@ptsecurity/cdk/keycodes';\n\nimport { McCalendarBody, McCalendarCell } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\nexport const yearsPerPage = 24;\n\nexport const yearsPerRow = 4;\n\n\n/**\n * An internal component used to display a year selector in the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-multi-year-view',\n    templateUrl: 'multi-year-view.html',\n    exportAs: 'mcMultiYearView',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McMultiYearView<D> implements AfterContentInit {\n    /** The date to display in this multi-year view (everything other than the year is ignored). */\n    @Input()\n    get activeDate(): D {\n        return this._activeDate;\n    }\n\n    set activeDate(value: D) {\n        const oldActiveDate = this._activeDate;\n        const validDate =\n            this.getValidDateOrNull(this.dateAdapter.deserialize(value)) || this.dateAdapter.today();\n        this._activeDate = this.dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n        if (Math.floor(this.dateAdapter.getYear(oldActiveDate) / yearsPerPage) !==\n            Math.floor(this.dateAdapter.getYear(this._activeDate) / yearsPerPage)) {\n            this.init();\n        }\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.selectedYear = this._selected && this.dateAdapter.getYear(this._selected);\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** A function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Emits when a new year is selected. */\n    @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits the selected year. This doesn't imply a change on the selected date */\n    @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits when any date is activated. */\n    @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** The body of calendar table */\n    @ViewChild(McCalendarBody) mcCalendarBody: McCalendarBody;\n\n    /** Grid of calendar cells representing the currently displayed years. */\n    years: McCalendarCell[][];\n\n    /** The year that today falls on. */\n    todayYear: number;\n\n    /** The year of the selected date. Null if the selected date is null. */\n    selectedYear: number | null;\n    private _activeDate: D;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() private dir?: Directionality\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        this._activeDate = this.dateAdapter.today();\n    }\n\n    ngAfterContentInit() {\n        this.init();\n    }\n\n    /** Initializes this multi-year view. */\n    init() {\n        this.todayYear = this.dateAdapter.getYear(this.dateAdapter.today());\n        const activeYear = this.dateAdapter.getYear(this._activeDate);\n        const activeOffset = activeYear % yearsPerPage;\n        this.years = [];\n        for (let i = 0, row: number[] = []; i < yearsPerPage; i++) {\n            row.push(activeYear - activeOffset + i);\n            if (row.length === yearsPerRow) {\n                this.years.push(row.map((year) => this.createCellForYear(year)));\n                row = [];\n            }\n        }\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** Handles when a new year is selected. */\n    onYearSelected(year: number) {\n        this.yearSelected.emit(this.dateAdapter.createDate(year, 0, 1));\n        const month = this.dateAdapter.getMonth(this.activeDate);\n        const daysInMonth =\n            this.dateAdapter.getNumDaysInMonth(this.dateAdapter.createDate(year, month, 1));\n        this.selectedChange.emit(this.dateAdapter.createDate(year, month,\n            Math.min(this.dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n\n    /** Handles keydown events on the calendar body when calendar is in multi-year view. */\n    handleCalendarBodyKeydown(event: KeyboardEvent): void {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n        const oldActiveDate = this._activeDate;\n        const isRtl = this.isRtl();\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n                break;\n            case HOME:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate,\n                    -this.dateAdapter.getYear(this._activeDate) % yearsPerPage);\n                break;\n            case END:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate,\n                    yearsPerPage - this.dateAdapter.getYear(this._activeDate) % yearsPerPage - 1);\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(\n                        this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(\n                        this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n                break;\n            case ENTER:\n            case SPACE:\n                this.onYearSelected(this.dateAdapter.getYear(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n\n        if (this.dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n\n        this.focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n\n    getActiveCell(): number {\n        return this.dateAdapter.getYear(this.activeDate) % yearsPerPage;\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.mcCalendarBody.focusActiveCell();\n    }\n\n    /** Creates an McCalendarCell for the given year. */\n    private createCellForYear(year: number) {\n        const yearName = this.dateAdapter.getYearName(this.dateAdapter.createDate(year, 0, 1));\n\n        return new McCalendarCell(year, yearName, yearName, this.shouldEnableYear(year));\n    }\n\n    /** Whether the given year is enabled. */\n    private shouldEnableYear(year: number) {\n        // disable if the year is greater than maxDate lower than minDate\n        if (year === undefined || year === null ||\n            (this.maxDate && year > this.dateAdapter.getYear(this.maxDate)) ||\n            (this.minDate && year < this.dateAdapter.getYear(this.minDate))) {\n            return false;\n        }\n\n        // enable if it reaches here and there's no filter defined\n        if (!this.dateFilter) {\n            return true;\n        }\n\n        const firstOfYear = this.dateAdapter.createDate(year, 0, 1);\n\n        // If any date in the year is enabled count the year as enabled.\n        for (let date = firstOfYear; this.dateAdapter.getYear(date) === year;\n             date = this.dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Determines whether the user has the RTL layout direction. */\n    private isRtl() {\n        return this.dir && this.dir.value === 'rtl';\n    }\n}\n","// tslint:disable:no-magic-numbers\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Optional,\n    Output,\n    ViewEncapsulation,\n    ViewChild\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    UP_ARROW,\n    SPACE\n} from '@ptsecurity/cdk/keycodes';\n\nimport { McCalendarBody, McCalendarCell, McCalendarCellCssClasses } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\nconst DAYS_PER_WEEK = 7;\n\n\n/**\n * An internal component used to display a single month in the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-month-view',\n    templateUrl: 'month-view.html',\n    exportAs: 'mcMonthView',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McMonthView<D> implements AfterContentInit {\n    /**\n     * The date to display in this month view (everything other than the month and year is ignored).\n     */\n    @Input()\n    get activeDate(): D {\n        return this._activeDate;\n    }\n\n    set activeDate(value: D) {\n        const oldActiveDate = this._activeDate;\n        const validDate =\n            this.getValidDateOrNull(this.dateAdapter.deserialize(value)) || this.dateAdapter.today();\n        this._activeDate = this.dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n        if (!this.hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n            this.init();\n        }\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.selectedDate = this.getDateInCurrentMonth(this._selected);\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** Function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Function that can be used to add custom CSS classes to dates. */\n    @Input() dateClass: (date: D) => McCalendarCellCssClasses;\n\n    /** Emits when a new date is selected. */\n    @Output() readonly selectedChange: EventEmitter<D | null> = new EventEmitter<D | null>();\n\n    /** Emits when any date is selected. */\n    @Output() readonly userSelection: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emits when any date is activated. */\n    @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** The body of calendar table */\n    @ViewChild(McCalendarBody) mcCalendarBody: McCalendarBody;\n\n    /** The label for this month (e.g. \"January 2017\"). */\n    monthLabel: string;\n\n    /** Grid of calendar cells representing the dates of the month. */\n    weeks: McCalendarCell[][];\n\n    /** The number of blank cells in the first row before the 1st of the month. */\n    firstWeekOffset: number;\n\n    /**\n     * The date of the month that the currently selected Date falls on.\n     * Null if the currently selected Date is in another month.\n     */\n    selectedDate: number | null;\n\n    /** The date of the month that today falls on. Null if today is in another month. */\n    todayDate: number | null;\n\n    /** The names of the weekdays. */\n    weekdays: { long: string; narrow: string }[];\n    private _activeDate: D;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() private dir?: Directionality\n    ) {\n\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        const firstDayOfWeek = this.dateAdapter.getFirstDayOfWeek();\n        const narrowWeekdays = this.dateAdapter.getDayOfWeekNames('narrow');\n        const longWeekdays = this.dateAdapter.getDayOfWeekNames('long');\n\n        // Rotate the labels for days of the week based on the configured first day of the week.\n        const weekdays = longWeekdays.map((long, i) => {\n            return { long, narrow: narrowWeekdays[i] };\n        });\n        this.weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n\n        this._activeDate = this.dateAdapter.today();\n    }\n\n    ngAfterContentInit() {\n        this.init();\n    }\n\n    /** Handles when a new date is selected. */\n    dateSelected(date: number) {\n        if (this.selectedDate !== date) {\n            const selectedYear = this.dateAdapter.getYear(this.activeDate);\n            const selectedMonth = this.dateAdapter.getMonth(this.activeDate);\n            const selectedDate = this.dateAdapter.createDate(selectedYear, selectedMonth, date);\n\n            this.selectedChange.emit(selectedDate);\n        }\n\n        this.userSelection.emit();\n    }\n\n    /** Handles keydown events on the calendar body when calendar is in month view. */\n    handleCalendarBodyKeydown(event: KeyboardEvent): void {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n        const oldActiveDate = this._activeDate;\n        const isRtl = this.isRtl();\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, -7);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, 7);\n                break;\n            case HOME:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate,\n                    1 - this.dateAdapter.getDate(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate,\n                    (this.dateAdapter.getNumDaysInMonth(this._activeDate) -\n                        this.dateAdapter.getDate(this._activeDate)));\n                break;\n            case PAGE_UP:\n                this.activeDate = event.altKey ?\n                    this.dateAdapter.addCalendarYears(this._activeDate, -1) :\n                    this.dateAdapter.addCalendarMonths(this._activeDate, -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = event.altKey ?\n                    this.dateAdapter.addCalendarYears(this._activeDate, 1) :\n                    this.dateAdapter.addCalendarMonths(this._activeDate, 1);\n                break;\n            case ENTER:\n            case SPACE:\n                if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n                    this.dateSelected(this.dateAdapter.getDate(this._activeDate));\n                    this.userSelection.emit();\n                    // Prevent unexpected default actions such as form submission.\n                    event.preventDefault();\n                }\n\n                return;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n\n        if (this.dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n\n        this.focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n\n    /** Initializes this month view. */\n    init() {\n        this.selectedDate = this.getDateInCurrentMonth(this.selected);\n        this.todayDate = this.getDateInCurrentMonth(this.dateAdapter.today());\n        this.monthLabel =\n            this.dateAdapter.getMonthNames('short')[this.dateAdapter.getMonth(this.activeDate)];\n\n        this.monthLabel = this.monthLabel[0].toLocaleUpperCase() + this.monthLabel.substr(1);\n\n        const firstOfMonth = this.dateAdapter.createDate(this.dateAdapter.getYear(this.activeDate),\n            this.dateAdapter.getMonth(this.activeDate), 1);\n        this.firstWeekOffset =\n            (DAYS_PER_WEEK + this.dateAdapter.getDayOfWeek(firstOfMonth) -\n                this.dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n\n        this.createWeekCells();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.mcCalendarBody.focusActiveCell();\n    }\n\n    /** Creates McCalendarCells for the dates in this month. */\n    private createWeekCells() {\n        const daysInMonth = this.dateAdapter.getNumDaysInMonth(this.activeDate);\n        const dateNames = this.dateAdapter.getDateNames();\n\n        this.weeks = [[]];\n\n        for (let i = 0, cell = this.firstWeekOffset; i < daysInMonth; i++, cell++) {\n            if (cell === DAYS_PER_WEEK) {\n                this.weeks.push([]);\n                cell = 0;\n            }\n            const date = this.dateAdapter.createDate(\n                this.dateAdapter.getYear(this.activeDate),\n                this.dateAdapter.getMonth(this.activeDate), i + 1);\n            const enabled = this.shouldEnableDate(date);\n            const ariaLabel = this.dateAdapter.format(date, this.dateFormats.display.dateA11yLabel);\n            const cellClasses = this.dateClass ? this.dateClass(date) : undefined;\n\n            this.weeks[this.weeks.length - 1]\n                .push(new McCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses));\n        }\n    }\n\n    /** Date filter for the month */\n    private shouldEnableDate(date: D): boolean {\n        return !!date &&\n            (!this.dateFilter || this.dateFilter(date)) &&\n            (!this.minDate || this.dateAdapter.compareDate(date, this.minDate) >= 0) &&\n            (!this.maxDate || this.dateAdapter.compareDate(date, this.maxDate) <= 0);\n    }\n\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     */\n    private getDateInCurrentMonth(date: D | null): number | null {\n        return date && this.hasSameMonthAndYear(date, this.activeDate) ?\n            this.dateAdapter.getDate(date) : null;\n    }\n\n    /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\n    private hasSameMonthAndYear(d1: D | null, d2: D | null): boolean {\n        return !!(d1 && d2 && this.dateAdapter.getMonth(d1) === this.dateAdapter.getMonth(d2) &&\n            this.dateAdapter.getYear(d1) === this.dateAdapter.getYear(d2));\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Determines whether the user has the RTL layout direction. */\n    private isRtl() {\n        return this.dir && this.dir.value === 'rtl';\n    }\n}\n","// tslint:disable:no-magic-numbers\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    Output,\n    ViewEncapsulation,\n    NgZone,\n    OnChanges,\n    SimpleChanges\n} from '@angular/core';\nimport { take } from 'rxjs/operators';\n\n\n/**\n * Extra CSS classes that can be associated with a calendar cell.\n */\nexport type McCalendarCellCssClasses = string | string[] | Set<string> | { [key: string]: any };\n\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * @docs-private\n */\nexport class McCalendarCell {\n    constructor(\n        public value: number,\n        public displayValue: string,\n        public ariaLabel: string,\n        public enabled: boolean,\n        public cssClasses?: McCalendarCellCssClasses\n    ) {\n    }\n}\n\n\n/**\n * An internal component used to display calendar data in a table.\n * @docs-private\n */\n@Component({\n    selector: '[mc-calendar-body]',\n    templateUrl: 'calendar-body.html',\n    styleUrls: ['calendar-body.css'],\n    host: {\n        class: 'mc-calendar__body',\n        role: 'grid',\n        'aria-readonly': 'true'\n    },\n    exportAs: 'mcCalendarBody',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCalendarBody implements OnChanges {\n    /** The label for the table. (e.g. \"Jan 2017\"). */\n    @Input() label: string;\n\n    /** The cells to display in the table. */\n    @Input() rows: McCalendarCell[][];\n\n    /** The value in the table that corresponds to today. */\n    @Input() todayValue: number;\n\n    /** The value in the table that is currently selected. */\n    @Input() selectedValue: number;\n\n    /** The minimum number of free cells needed to fit the label in the first row. */\n    @Input() labelMinRequiredCells: number;\n\n    /** The number of columns in the table. */\n    @Input() numCols = 7;\n\n    /** The cell number of the active cell in the table. */\n    @Input() activeCell = 0;\n\n    /**\n     * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n     * maintained even as the table resizes.\n     */\n    @Input() cellAspectRatio = 1;\n\n    /** Emits when a new value is selected. */\n    @Output() readonly selectedValueChange: EventEmitter<number> = new EventEmitter<number>();\n\n    /** The number of blank cells to put at the beginning for the first row. */\n    firstRowOffset: number;\n\n    /** Padding for the individual date cells. */\n    cellPadding: string;\n\n    /** Width of an individual cell. */\n    cellWidth: string;\n\n    constructor(private elementRef: ElementRef<HTMLElement>, private ngZone: NgZone) {\n    }\n\n    cellClicked(cell: McCalendarCell): void {\n        if (cell.enabled) {\n            this.selectedValueChange.emit(cell.value);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const columnChanges = changes.numCols;\n        // tslint:disable-next-line:no-this-assignment\n        const { rows, numCols } = this;\n\n        if (changes.rows || columnChanges) {\n            this.firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n        }\n\n        if (changes.cellAspectRatio || columnChanges || !this.cellPadding) {\n            this.cellPadding = `${this.cellAspectRatio * 50 / numCols}%`;\n        }\n\n        if (columnChanges || !this.cellWidth) {\n            this.cellWidth = `${100 / numCols}%`;\n        }\n    }\n\n    isActiveCell(rowIndex: number, colIndex: number): boolean {\n        let cellNumber = rowIndex * this.numCols + colIndex;\n\n        // Account for the fact that the first row may not have as many cells.\n        if (rowIndex) {\n            cellNumber -= this.firstRowOffset;\n        }\n\n        return cellNumber === this.activeCell;\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.ngZone.runOutsideAngular(() => {\n            this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n                const activeCell: HTMLElement | null =\n                    this.elementRef.nativeElement.querySelector('.mc-calendar__body_active');\n\n                if (activeCell) {\n                    activeCell.focus();\n                }\n            });\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n\n/** Datepicker data that requires internationalization. */\n@Injectable({ providedIn: 'root' })\nexport class McDatepickerIntl {\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     */\n    readonly changes: Subject<void> = new Subject<void>();\n\n    /** A label for the calendar popup (used by screen readers). */\n    calendarLabel: string = 'Calendar';\n\n    /** A label for the button used to open the calendar popup (used by screen readers). */\n    openCalendarLabel: string = 'Open calendar';\n\n    /** A label for the previous month button (used by screen readers). */\n    prevMonthLabel: string = 'Previous month';\n\n    /** A label for the next month button (used by screen readers). */\n    nextMonthLabel: string = 'Next month';\n\n    /** A label for the previous year button (used by screen readers). */\n    prevYearLabel: string = 'Previous year';\n\n    /** A label for the next year button (used by screen readers). */\n    nextYearLabel: string = 'Next year';\n\n    /** A label for the previous multi-year button (used by screen readers). */\n    prevMultiYearLabel: string = 'Previous 20 years';\n\n    /** A label for the next multi-year button (used by screen readers). */\n    nextMultiYearLabel: string = 'Next 20 years';\n\n    /** A label for the 'switch to month view' button (used by screen readers). */\n    switchToMonthViewLabel: string = 'Choose date';\n\n    /** A label for the 'switch to year view' button (used by screen readers). */\n    switchToMultiYearViewLabel: string = 'Choose month and year';\n}\n","/** @docs-private */\nexport function createMissingDateImplError(provider: string) {\n    return Error(\n        `McDatepicker: No provider found for ${provider}. You must import one of the existing ` +\n        `modules at your application root or provide a custom implementation or use exists ones.`);\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McInput, McInputMono, McNumberInput } from './input';\nimport { MaxValidator, MinValidator } from './input-number-validators';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator],\n    declarations: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator ]\n})\nexport class McInputModule {\n}\n","import { Directive, forwardRef, Input, OnChanges, Provider, SimpleChanges } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, ValidatorFn, Validators } from '@angular/forms';\n\n\nexport const MIN_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MinValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[min][formControlName],[min][formControl],[min][ngModel]',\n    providers: [MIN_VALIDATOR],\n    host: {'[attr.min]': 'min ? min : null'}\n})\nexport class MinValidator implements Validator, OnChanges {\n\n    @Input() min: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('min' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.min(parseInt(this.min, 10)); }\n}\n\n\nexport const MAX_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MaxValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[max][formControlName],[max][formControl],[max][ngModel]',\n    providers: [MAX_VALIDATOR],\n    host: {\n        '[attr.max]': 'max ? max : null'\n    }\n})\nexport class MaxValidator implements Validator,\n    OnChanges {\n\n    @Input() max: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('max' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.max(parseInt(this.max, 10)); }\n}\n","import {\n    Attribute,\n    Directive, DoCheck, ElementRef, Inject, Input, OnChanges,\n    OnDestroy, Optional, Self\n} from '@angular/core';\nimport {\n    FormGroupDirective,\n    NgControl,\n    NgForm, NgModel\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    END, C, V, X, A, DELETE, BACKSPACE, TAB, ENTER,\n    ESCAPE, ZERO, NINE, NUMPAD_ZERO, NUMPAD_NINE, NUMPAD_MINUS, DASH,\n    FF_MINUS, LEFT_ARROW, RIGHT_ARROW, HOME, UP_ARROW, DOWN_ARROW, F1, F12\n} from '@ptsecurity/cdk/keycodes';\nimport { getSupportedInputTypes, Platform } from '@ptsecurity/cdk/platform';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl, McFormFieldNumberControl } from '@ptsecurity/mosaic/form-field';\nimport { Subject } from 'rxjs';\n\nimport { getMcInputUnsupportedTypeError } from './input-errors';\nimport { MC_INPUT_VALUE_ACCESSOR } from './input-value-accessor';\nimport { stepDown, stepUp } from './stepperUtils';\n\n\nconst MC_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n\nexport const BIG_STEP = 10;\nexport const SMALL_STEP = 1;\n\nlet nextUniqueId = 0;\n\nexport class McInputBase {\n    constructor(public defaultErrorStateMatcher: ErrorStateMatcher,\n                public parentForm: NgForm,\n                public parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\nexport const _McInputMixinBase: CanUpdateErrorStateCtor & typeof McInputBase = mixinErrorState(McInputBase);\n\n\n@Directive({\n    selector: `input[mcInput][type=\"number\"]`,\n    exportAs: 'mcNumericalInput',\n    providers: [NgModel, { provide: McFormFieldNumberControl, useExisting: McNumberInput }],\n    host: {\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McNumberInput implements McFormFieldNumberControl<any> {\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    bigStep: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    step: number;\n\n    @Input()\n    min: number;\n\n    @Input()\n    max: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    value: any;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    private readonly _host: HTMLInputElement;\n\n    constructor(\n        private _platform: Platform ,\n        private _elementRef: ElementRef,\n        private _model: NgModel,\n        @Attribute('step') step: string,\n        @Attribute('big-step') bigStep: string,\n        @Attribute('min') min: string,\n        @Attribute('max') max: string\n    ) {\n        this.step = this.isDigit(step) ? parseFloat(step) : SMALL_STEP;\n        this.bigStep = this.isDigit(bigStep) ? parseFloat(bigStep) : BIG_STEP;\n        this.min = this.isDigit(min) ? parseFloat(min) : -Infinity;\n        this.max = this.isDigit(max) ? parseFloat(max) : Infinity;\n\n        this._host = this._elementRef.nativeElement;\n\n        const self = this;\n\n        if ('valueAsNumber' in this._host) {\n            Object.defineProperty(Object.getPrototypeOf(this._host), 'valueAsNumber', {\n                // tslint:disable-next-line:no-reserved-keywords\n                get() {\n                    const res = parseFloat(self.normalizeSplitter(this.value));\n\n                    return isNaN(res) ? null : res;\n                }\n            });\n        }\n    }\n\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const keyCode = event.keyCode;\n\n        const isCtrlA = (e) => e.keyCode === A && (e.ctrlKey || e.metaKey);\n        const isCtrlC = (e) => e.keyCode === C && (e.ctrlKey || e.metaKey);\n        const isCtrlV = (e) => e.keyCode === V && (e.ctrlKey || e.metaKey);\n        const isCtrlX = (e) => e.keyCode === X && (e.ctrlKey || e.metaKey);\n\n        const isFKey = (e) => e.keyCode >= F1 && e.keyCode <= F12;\n\n        const isNumber = (e) => (e.keyCode >= ZERO && e.keyCode <= NINE) ||\n            (e.keyCode >= NUMPAD_ZERO && e.keyCode <= NUMPAD_NINE);\n\n        const minuses = [NUMPAD_MINUS, DASH, FF_MINUS];\n        const serviceKeys = [DELETE, BACKSPACE, TAB, ESCAPE, ENTER];\n        const arrows = [LEFT_ARROW, RIGHT_ARROW];\n        const allowedKeys =  [HOME, END].concat(arrows).concat(serviceKeys).concat(minuses);\n\n        const isIEPeriod = (e) => e.key === '.' || e.key === 'Decimal';\n        const isNotIEPeriod = (e) => e.key === '.' || e.key === ',';\n\n        // Decimal is for IE\n        const isPeriod = (e) => this._platform.EDGE || this._platform.TRIDENT\n            ? isIEPeriod(e)\n            : isNotIEPeriod(e);\n\n        if (allowedKeys.indexOf(keyCode) !== -1 ||\n            isCtrlA(event) ||\n            isCtrlC(event) ||\n            isCtrlV(event) ||\n            isCtrlX(event) ||\n            isFKey(event) ||\n            isPeriod(event)\n        ) {\n            // let it happen, don't do anything\n            return;\n        }\n        // Ensure that it is not a number and stop the keypress\n        if (event.shiftKey || !isNumber(event)) {\n            event.preventDefault();\n\n            // process steps\n            const step = event.shiftKey ? this.bigStep : this.step;\n\n            if (keyCode === UP_ARROW) {\n                this.stepUp(step);\n            }\n\n            if (keyCode === DOWN_ARROW) {\n                this.stepDown(step);\n            }\n        }\n    }\n\n    onPaste(event) {\n        let value = event.clipboardData.getData('text');\n        value = this.normalizeSplitter(value);\n\n        if (!this.isDigit(value)) {\n            event.preventDefault();\n        }\n    }\n\n    stepUp(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepUp(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    stepDown(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepDown(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    private normalizeSplitter(value: string): string {\n        return value ? value.replace(/,/g, '.') : value;\n    }\n\n    private isDigit(value: string): boolean {\n        return this.isFloat(value) || this.isInt(value);\n    }\n\n    private isFloat(value: string): boolean {\n        return /^-?\\d+\\.\\d+$/.test(value);\n    }\n\n    private isInt(value: string): boolean {\n        return /^-?\\d+$/.test(value);\n    }\n}\n\n@Directive({\n    selector: `input[mcInput]`,\n    exportAs: 'mcInput',\n    host: {\n        class: 'mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(input)': '_onInput()'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McInput }]\n})\nexport class McInput extends _McInputMixinBase implements McFormFieldControl<any>, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-input';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    // tslint:disable no-reserved-keywords\n    /** Input type of the element. */\n    @Input()\n    get type(): string {\n        return this._type;\n    }\n\n    set type(value: string) {\n        this._type = value || 'text';\n        this._validateType();\n\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    // tslint:enable no-reserved-keywords\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this._inputValueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected _uid = `mc-input-${nextUniqueId++}`;\n    protected _previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n    protected _type = 'text';\n    protected _neverEmptyInputTypes = [\n        'date',\n        'datetime',\n        'datetime-local',\n        'month',\n        'time',\n        'week'\n    ].filter((t) => getSupportedInputTypes().has(t));\n\n    private _inputValueAccessor: { value: any };\n\n    constructor(protected _elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() parentForm: NgForm,\n                @Optional() parentFormGroup: FormGroupDirective,\n                defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any) {\n        super(defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || this._elementRef.nativeElement;\n\n        this._previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n\n    /** Focuses the input. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the input changes. */\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    protected _dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Make sure the input is a supported type. */\n    protected _validateType() {\n        if (MC_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMcInputUnsupportedTypeError(this._type);\n        }\n    }\n\n    /** Checks whether the input type is one of the types that are never empty. */\n    protected _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    protected _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this._elementRef.nativeElement as HTMLInputElement).validity;\n\n        return validity && validity.badInput;\n    }\n}\n\n@Directive({\n    selector: 'input[mcInputMonospace]',\n    exportAs: 'McInputMonospace',\n    host: { class: 'mc-input_monospace' }\n})\nexport class McInputMono {\n}\n","function sanitizeNumber(value: number): number | null {\n    return !isFinite(value) || isNaN(value)\n        ? null\n        : value;\n}\n\nfunction getPrecision(value: number): number {\n    const arr = value.toString().split('.');\n\n    return arr.length === 1\n        ? 1\n        // tslint:disable-next-line:no-magic-numbers\n        :  Math.pow(10, arr[1].length);\n}\n\nfunction add(value1: number, value2: number) {\n    const precision = Math.max(getPrecision(value1), getPrecision(value2));\n\n    const res = (value1 * precision + value2 * precision) / precision;\n\n    return sanitizeNumber(res);\n}\n\nexport const stepUp = (value: number | null,\n                       max: number,\n                       min: number,\n                       step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(min, step);\n\n        return res === null ? null : Math.min(res, max);\n    }\n\n    res = add(value, step);\n\n    return res === null ? null : Math.max(Math.min(res, max), min);\n};\n\nexport const stepDown = (value: number | null,\n                         max: number,\n                         min: number,\n                         step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(max, -step);\n\n        return res === null ? null : Math.max(res, min);\n    }\n\n    res = add(value, -step);\n\n    return res === null ? null : Math.min(Math.max(res, min), max);\n};\n","import { InjectionToken } from '@angular/core';\n\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n","export function getMcInputUnsupportedTypeError(inputType: string): Error {\n    return Error(`Input type \"${inputType}\" isn't supported by mcInput.`);\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McCheckbox } from './checkbox';\nimport { McCheckboxRequiredValidator } from './checkbox-required-validator';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McCheckbox, McCheckboxRequiredValidator],\n    declarations: [McCheckbox, McCheckboxRequiredValidator]\n})\nexport class McCheckboxModule {\n}\n","import {\n    Directive,\n    forwardRef,\n    Provider\n} from '@angular/core';\nimport {\n    CheckboxRequiredValidator,\n    NG_VALIDATORS\n} from '@angular/forms';\n\n\nexport const MC_CHECKBOX_REQUIRED_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => McCheckboxRequiredValidator),\n    multi: true\n};\n\n/**\n * Validator for Mosaic checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mc-checkbox`.\n */\n@Directive({\n    selector: `mc-checkbox[required][formControlName],\n             mc-checkbox[required][formControl], mc-checkbox[required][ngModel]`,\n    providers: [MC_CHECKBOX_REQUIRED_VALIDATOR],\n    host: { '[attr.required]': 'required ? \"\" : null' }\n})\nexport class McCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\n","import {\n    AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_CHECKBOX_CLICK_ACTION, McCheckboxClickAction } from './checkbox-config';\n\n\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n\n/**\n * Provider Expression that allows mc-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nexport const MC_CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McCheckbox),\n    multi: true\n};\n\n/**\n * Represents the different states that require custom transitions between them.\n * @docs-private\n */\nexport enum TransitionCheckState {\n    /** The initial state of the component before any user interaction. */\n    Init,\n    /** The state representing the component when it's becoming checked. */\n    Checked,\n    /** The state representing the component when it's becoming unchecked. */\n    Unchecked,\n    /** The state representing the component when it's becoming indeterminate. */\n    Indeterminate\n}\n\n/** Change event object emitted by McCheckbox. */\nexport class McCheckboxChange {\n    /** The source McCheckbox of the event. */\n    source: McCheckbox;\n    /** The new `checked` value of the checkbox. */\n    checked: boolean;\n}\n\n// Boilerplate for applying mixins to McCheckbox.\n/** @docs-private */\nexport class McCheckboxBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McCheckboxMixinBase:\n    HasTabIndexCtor &\n    CanColorCtor &\n    CanDisableCtor &\n    typeof McCheckboxBase =\n        mixinTabIndex(mixinColor(mixinDisabled(McCheckboxBase)));\n\n\n/**\n * A mosaic checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A McCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n */\n@Component({\n    selector: 'mc-checkbox',\n    templateUrl: 'checkbox.html',\n    styleUrls: ['checkbox.css'],\n    exportAs: 'mcCheckbox',\n    host: {\n        class: 'mc-checkbox',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-indeterminate]': 'indeterminate',\n        '[class.mc-checked]': 'checked',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-checkbox-label-before]': 'labelPosition == \"before\"'\n    },\n    providers: [MC_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCheckbox extends _McCheckboxMixinBase implements ControlValueAccessor,\n    AfterViewInit, OnDestroy, CanColor, CanDisable, HasTabIndex {\n\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\n     * take precedence so this may be omitted.\n     */\n    @Input('aria-label') ariaLabel: string = '';\n\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     */\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-checkbox-${++nextUniqueId}`;\n\n    /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n    @Input() id: string = this._uniqueId;\n\n    /** Returns the unique id for the visual hidden input. */\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    /** Whether the checkbox is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    private _required: boolean;\n\n    /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n    @Input() labelPosition: 'before' | 'after' = 'after';\n\n    /** Name value will be applied to the input element if present */\n    @Input() name: string | null = null;\n\n    /** Event emitted when the checkbox's `checked` value changes. */\n    @Output() readonly change: EventEmitter<McCheckboxChange> =\n        new EventEmitter<McCheckboxChange>();\n\n    /** Event emitted when the checkbox's `indeterminate` value changes. */\n    @Output() readonly indeterminateChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** The value attribute of the native input element */\n    @Input() value: string;\n\n    /** The native `<input type=\"checkbox\">` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n     * @docs-private\n     */\n    _onTouched: () => any = () => {\n    }\n\n    private _currentAnimationClass: string = '';\n\n    private _currentCheckState: TransitionCheckState = TransitionCheckState.Init;\n\n    private _controlValueAccessorChangeFn: (value: any) => void = () => {\n    }\n\n    constructor(elementRef: ElementRef,\n                private _changeDetectorRef: ChangeDetectorRef,\n                private _focusMonitor: FocusMonitor,\n                @Attribute('tabindex') tabIndex: string,\n                @Optional() @Inject(MC_CHECKBOX_CLICK_ACTION)\n                private _clickAction: McCheckboxClickAction) {\n        super(elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._inputElement.nativeElement)\n            .subscribe((focusOrigin) => this._onInputFocusChange(focusOrigin));\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._inputElement.nativeElement);\n    }\n\n    /**\n     * Whether the checkbox is checked.\n     */\n    @Input()\n    get checked(): boolean {\n        return this._checked;\n    }\n\n    set checked(value: boolean) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     */\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value != this.disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    @Input()\n    get indeterminate(): boolean {\n        return this._indeterminate;\n    }\n\n    set indeterminate(value: boolean) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = value;\n\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(TransitionCheckState.Indeterminate);\n            } else {\n                this._transitionCheckState(\n                    this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n    }\n\n    private _indeterminate: boolean = false;\n\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // This method is getting called whenever the label of the checkbox changes.\n        // Since the checkbox uses the OnPush strategy we need to notify it about the change\n        // that has been recognized by the cdkObserveContent directive.\n        this._changeDetectorRef.markForCheck();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: any) {\n        this._onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    _getAriaChecked(): 'true' | 'false' | 'mixed' {\n        return this.checked ? 'true' : (this.indeterminate ? 'mixed' : 'false');\n    }\n\n    private _transitionCheckState(newState: TransitionCheckState) {\n        const oldState = this._currentCheckState;\n        const element: HTMLElement = this._elementRef.nativeElement;\n\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n\n        this._currentCheckState = newState;\n\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n        }\n    }\n\n    private _emitChangeEvent() {\n        const event = new McCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    }\n\n    /** Function is called whenever the focus changes for the input element. */\n    private _onInputFocusChange(focusOrigin: FocusOrigin) {\n        if (focusOrigin) {\n            this._onTouched();\n        }\n    }\n\n    /** Toggles the `checked` state of the checkbox. */\n    toggle(): void {\n        this.checked = !this.checked;\n    }\n\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param event\n     */\n    _onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && this._clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && this._clickAction !== 'check') {\n\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n\n            this.toggle();\n            this._transitionCheckState(\n                this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        } else if (!this.disabled && this._clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mc-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n\n    /** Focuses the checkbox. */\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _onInteractionEvent(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n}\n","import { InjectionToken } from '@angular/core';\n\n\n/**\n * Checkbox click action when user click on input element.\n * noop: Do not toggle checked or indeterminate.\n * check: Only toggle checked status, ignore indeterminate.\n * check-indeterminate: Toggle checked status, set indeterminate to false. Default behavior.\n * undefined: Same as `check-indeterminate`.\n */\nexport type McCheckboxClickAction = 'noop' | 'check' | 'check-indeterminate' | undefined;\n\n/**\n * Injection token that can be used to specify the checkbox click behavior.\n */\nexport const MC_CHECKBOX_CLICK_ACTION =\n    new InjectionToken<McCheckboxClickAction>('mc-checkbox-click-action');\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McCard\n} from './card.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [McCard],\n    declarations: [McCard]\n})\nexport class McCardModule {}\n","import {\n    Output,\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef, Input,\n    OnDestroy, EventEmitter,\n    ViewEncapsulation, HostBinding\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n@Component({\n    selector: 'mc-card',\n    templateUrl: './card.component.html',\n    styleUrls: ['./card.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color'],\n    host: {\n        class: 'mc-card',\n        '[class.mc-card_readonly]': 'readonly',\n        '[class.mc-card_selected]': 'selected',\n        '(keydown)': 'onKeyDown($event)',\n        '(click)': 'onClick($event)'\n    }\n})\nexport class McCard implements OnDestroy {\n    get tabIndex(): number | null {\n        return this.readonly ? null : this._tabIndex;\n    }\n\n    @HostBinding('attr.tabIndex')\n    @Input()\n    set tabIndex(value: number | null) {\n        this._tabIndex = value;\n    }\n\n    @Input()\n    readonly = false;\n\n    @Input()\n    selected = false;\n\n    @Output()\n    selectedChange = new EventEmitter<boolean>();\n\n    private _tabIndex: number | null = 0;\n\n    constructor(private _elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        this._focusMonitor.monitor(this._elementRef.nativeElement, false);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this.hostElement.focus();\n    }\n\n    onClick($event: MouseEvent) {\n        if (!this.readonly) {\n            $event.stopPropagation();\n\n            this.selectedChange.emit(!this.selected);\n        }\n    }\n\n    private get hostElement() {\n        return this._elementRef.nativeElement;\n    }\n\n    onKeyDown($event: KeyboardEvent) {\n        switch ($event.keyCode) {\n            case SPACE:\n                if (!this.readonly) {\n                    $event.preventDefault();\n                    this.selectedChange.emit(!this.selected);\n                }\n                break;\n            default:\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McButtonToggle, McButtonToggleGroup } from './button-toggle.component';\n\n\n@NgModule({\n    imports: [McCommonModule, McButtonModule],\n    exports: [McCommonModule, McButtonToggleGroup, McButtonToggle],\n    declarations: [McButtonToggleGroup, McButtonToggle]\n})\nexport class McButtonToggleModule {}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    QueryList,\n    ViewEncapsulation,\n    ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { McButton } from '@ptsecurity/mosaic/button';\n\n\n/** Acceptable types for a button toggle. */\nexport type ToggleType = 'checkbox' | 'radio';\n\n/**\n * Provider Expression that allows mc-button-toggle-group to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nexport const MC_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McButtonToggleGroup),\n    multi: true\n};\n\n/** Change event object emitted by MсButtonToggle. */\nexport class McButtonToggleChange {\n    constructor(\n        /** The MсButtonToggle that emits the event. */\n        public source: McButtonToggle,\n        /** The value assigned to the MсButtonToggle. */\n        public value: any) {\n    }\n}\n\n/** Exclusive selection button toggle group that behaves like a radio-button group. */\n@Directive({\n    selector: 'mc-button-toggle-group',\n    providers: [MC_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR],\n    host: {\n        role: 'group',\n        class: 'mc-button-toggle-group',\n        '[class.mc-button-toggle-vertical]': 'vertical'\n    },\n    exportAs: 'mcButtonToggleGroup'\n})\nexport class McButtonToggleGroup implements ControlValueAccessor, OnInit, AfterContentInit {\n\n    /** Whether the toggle group is vertical. */\n    @Input()\n    get vertical(): boolean {\n        return this._vertical;\n    }\n\n    set vertical(value: boolean) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n\n    /** Value of the toggle group. */\n    @Input()\n    get value(): any {\n        const selected = this.selectionModel ? this.selectionModel.selected : [];\n\n        if (this.multiple) {\n            return selected.map((toggle) => toggle.value);\n        }\n\n        return selected[0] ? selected[0].value : undefined;\n    }\n\n    set value(newValue: any) {\n        this.setSelectionByValue(newValue);\n        this.valueChange.emit(this.value);\n    }\n\n    /** Selected button toggles in the group. */\n    get selected(): any {\n        const selected = this.selectionModel.selected;\n\n        return this.multiple ? selected : (selected[0] || null);\n    }\n\n    /** Whether multiple button toggles can be selected. */\n    @Input()\n    get multiple(): boolean {\n        return this._multiple;\n    }\n\n    set multiple(value: boolean) {\n        this._multiple = coerceBooleanProperty(value);\n    }\n\n    /** Child button toggle buttons. */\n    @ContentChildren(forwardRef(() => McButtonToggle)) buttonToggles: QueryList<McButtonToggle>;\n\n    /** Whether multiple button toggle group is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        if (!this.buttonToggles) {\n            return;\n        }\n\n        this.buttonToggles.forEach((toggle) => toggle.markForCheck());\n    }\n\n    /**\n     * Event that emits whenever the value of the group changes.\n     * Used to facilitate two-way data binding.\n     * @docs-private\n     */\n    @Output() readonly valueChange = new EventEmitter<any>();\n\n    /** Event emitted when the group's value changes. */\n    @Output() readonly change: EventEmitter<McButtonToggleChange> =\n        new EventEmitter<McButtonToggleChange>();\n    private _vertical = false;\n    private _multiple = false;\n    private _disabled = false;\n    private selectionModel: SelectionModel<McButtonToggle>;\n\n    /**\n     * Reference to the raw value that the consumer tried to assign. The real\n     * value will exclude any values from this one that don't correspond to a\n     * toggle. Useful for the cases where the value is assigned before the toggles\n     * have been initialized or at the same that they're being swapped out.\n     */\n    private rawValue: any;\n\n    constructor(private _changeDetector: ChangeDetectorRef) {}\n\n    /**\n     * The method to be called in order to update ngModel.\n     * Now `ngModel` binding is not supported in multiple selection mode.\n     */\n    // tslint:disable-next-line:no-empty\n    controlValueAccessorChangeFn: (value: any) => void = () => {};\n\n    /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n    // tslint:disable-next-line:no-empty\n    onTouched: () => any = () => {};\n\n    ngOnInit() {\n        this.selectionModel = new SelectionModel<McButtonToggle>(this.multiple, undefined, false);\n    }\n\n    ngAfterContentInit() {\n        this.selectionModel.select(...this.buttonToggles.filter((toggle) => toggle.checked));\n        this.disabled = this._disabled;\n    }\n\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value Value to be set to the model.\n     */\n    writeValue(value: any) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void) {\n        this.controlValueAccessorChangeFn = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    /** Dispatch change event with current selection and group value. */\n    emitChangeEvent(): void {\n        const selected = this.selected;\n        const source = Array.isArray(selected) ? selected[selected.length - 1] : selected;\n        const event = new McButtonToggleChange(source, this.value);\n        this.controlValueAccessorChangeFn(event.value);\n        this.change.emit(event);\n    }\n\n    /**\n     * Syncs a button toggle's selected state with the model value.\n     * @param toggle Toggle to be synced.\n     * @param select Whether the toggle should be selected.\n     * @param isUserInput Whether the change was a result of a user interaction.\n     */\n    syncButtonToggle(toggle: McButtonToggle, select: boolean, isUserInput = false) {\n        // Deselect the currently-selected toggle, if we're in single-selection\n        // mode and the button being toggled isn't selected at the moment.\n        if (!this.multiple && this.selected && !toggle.checked) {\n            (this.selected as McButtonToggle).checked = false;\n        }\n\n        if (select) {\n            this.selectionModel.select(toggle);\n        } else {\n            this.selectionModel.deselect(toggle);\n        }\n\n        // Only emit the change event for user input.\n        if (isUserInput) {\n            this.emitChangeEvent();\n        }\n\n        // Note: we emit this one no matter whether it was a user interaction, because\n        // it is used by Angular to sync up the two-way data binding.\n        this.valueChange.emit(this.value);\n    }\n\n    /** Checks whether a button toggle is selected. */\n    isSelected(toggle: McButtonToggle) {\n        return this.selectionModel.isSelected(toggle);\n    }\n\n    /** Determines whether a button toggle should be checked on init. */\n    isPrechecked(toggle: McButtonToggle) {\n        if (this.rawValue === undefined) {\n            return false;\n        }\n\n        if (this.multiple && Array.isArray(this.rawValue)) {\n            return this.rawValue.some((value) => toggle.value != null && value === toggle.value);\n        }\n\n        return toggle.value === this.rawValue;\n    }\n\n    /** Updates the selection state of the toggles in the group based on a value. */\n    private setSelectionByValue(value: any | any[]) {\n        this.rawValue = value;\n\n        if (!this.buttonToggles) {\n            return;\n        }\n\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw Error('Value must be an array in multiple-selection mode.');\n            }\n\n            this.clearSelection();\n            value.forEach((currentValue: any) => this.selectValue(currentValue));\n        } else {\n            this.clearSelection();\n            this.selectValue(value);\n        }\n    }\n\n    /** Clears the selected toggles. */\n    private clearSelection() {\n        this.selectionModel.clear();\n        this.buttonToggles.forEach((toggle) => toggle.checked = false);\n    }\n\n    /** Selects a value if there's a toggle that corresponds to it. */\n    private selectValue(value: any) {\n        const correspondingOption = this.buttonToggles.find((toggle) => {\n            return toggle.value != null && toggle.value === value;\n        });\n\n        if (correspondingOption) {\n            correspondingOption.checked = true;\n            this.selectionModel.select(correspondingOption);\n        }\n    }\n}\n\n/** Single button inside of a toggle group. */\n@Component({\n    selector: 'mc-button-toggle',\n    template: `\n        <button\n            mc-button\n            type=\"button\"\n            [disabled]=\"disabled\"\n            [attr.tabindex]=\"disabled ? -1 : tabIndex\"\n            (click)=\"onToggleClick()\">\n            <ng-content></ng-content>\n        </button>\n    `,\n    styleUrls: ['button-toggle.css'],\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcButtonToggle',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[class.mc-button-toggle-standalone]': '!buttonToggleGroup',\n        '[class.mc-button-toggle-checked]': 'checked',\n        class: 'mc-button-toggle',\n        // Always reset the tabindex to -1 so it doesn't conflict with the one on the `button`,\n        // but can still receive focus from things like cdkFocusInitial.\n        '[attr.tabindex]': '-1',\n        '[attr.disabled]': 'disabled || null',\n        '(focus)': 'focus()'\n    }\n})\nexport class McButtonToggle implements OnInit, OnDestroy {\n\n    /** Whether the button is checked. */\n    @Input()\n    get checked(): boolean {\n        return this.buttonToggleGroup ? this.buttonToggleGroup.isSelected(this) : this._checked;\n    }\n\n    set checked(value: boolean) {\n        const newValue = coerceBooleanProperty(value);\n\n        if (newValue !== this._checked) {\n            this._checked = newValue;\n\n            if (this.buttonToggleGroup) {\n                this.buttonToggleGroup.syncButtonToggle(this, this._checked);\n            }\n\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    // tslint:disable-next-line:no-reserved-keywords\n    type: ToggleType;\n\n    @ViewChild(McButton) mcButton: McButton;\n\n    /** McButtonToggleGroup reads this to assign its own value. */\n    @Input() value: any;\n\n    /** Tabindex for the toggle. */\n    @Input() tabIndex: number | null;\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled || (this.buttonToggleGroup && this.buttonToggleGroup.disabled);\n    }\n    set disabled(value: boolean) { this._disabled = coerceBooleanProperty(value); }\n\n    /** Event emitted when the group value changes. */\n    @Output() readonly change: EventEmitter<McButtonToggleChange> =\n        new EventEmitter<McButtonToggleChange>();\n\n    private isSingleSelector = false;\n    private _checked = false;\n    private _disabled: boolean = false;\n\n    constructor(\n        @Optional() public buttonToggleGroup: McButtonToggleGroup,\n        private changeDetectorRef: ChangeDetectorRef,\n        private focusMonitor: FocusMonitor,\n        private element: ElementRef\n    ) {}\n\n    ngOnInit() {\n        this.isSingleSelector = this.buttonToggleGroup && !this.buttonToggleGroup.multiple;\n        this.type = this.isSingleSelector ? 'radio' : 'checkbox';\n\n        if (this.buttonToggleGroup && this.buttonToggleGroup.isPrechecked(this)) {\n            this.checked = true;\n        }\n\n        this.focusMonitor.monitor(this.element.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        const group = this.buttonToggleGroup;\n\n        this.focusMonitor.stopMonitoring(this.element.nativeElement);\n\n        // Remove the toggle from the selection once it's destroyed. Needs to happen\n        // on the next tick in order to avoid \"changed after checked\" errors.\n        if (group && group.isSelected(this)) {\n            Promise.resolve().then(() => group.syncButtonToggle(this, false));\n        }\n    }\n\n    /** Focuses the button. */\n    focus(): void {\n        this.element.nativeElement.focus();\n    }\n\n    /** Checks the button toggle due to an interaction with the underlying native button. */\n    onToggleClick() {\n        if (this.disabled) {\n            return;\n        }\n\n        const newChecked = this.isSingleSelector ? true : !this._checked;\n\n        if (newChecked !== this._checked) {\n            this._checked = newChecked;\n            if (this.buttonToggleGroup) {\n                this.buttonToggleGroup.syncButtonToggle(this, this._checked, true);\n                this.buttonToggleGroup.onTouched();\n            }\n        }\n        // Emit a change event when it's the single selector\n        this.change.emit(new McButtonToggleChange(this, this.value));\n    }\n\n    /**\n     * Marks the button toggle as needing checking for change detection.\n     * This method is exposed because the parent button toggle group will directly\n     * update bound properties of the radio button.\n     */\n    markForCheck() {\n        // When the group value changes, the button will not be notified.\n        // Use `markForCheck` to explicit update button toggle's status.\n        this.changeDetectorRef.markForCheck();\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McButton,\n    McAnchor,\n    McButtonCssStyler\n} from './button.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McButton,\n        McAnchor,\n        McButtonCssStyler\n    ],\n    declarations: [\n        McButton,\n        McAnchor,\n        McButtonCssStyler\n    ]\n})\nexport class McButtonModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation\n} from '@angular/core';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport { mixinColor, mixinDisabled, CanColor, CanDisable, CanDisableCtor, CanColorCtor } from '@ptsecurity/mosaic/core';\n\n\n@Directive({\n    selector: 'button[mc-button], a[mc-button]',\n    host: {\n        '[class.mc-button]': '!isIconButton',\n        '[class.mc-icon-button]': 'isIconButton'\n    }\n})\nexport class McButtonCssStyler {\n    nativeElement: Element;\n\n    get isIconButton(): boolean {\n        return this.icons.length > 0;\n    }\n\n    private icons: HTMLElement[] = [];\n\n    constructor(elementRef: ElementRef) {\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        /**\n         * Here we had to use native selectors due to number of angular issues about ContentChildren limitations\n         * https://github.com/angular/angular/issues/16299\n         * https://github.com/angular/angular/issues/8563\n         * https://github.com/angular/angular/issues/14769\n         */\n        this.icons = Array.from(this.nativeElement.querySelectorAll('.mc-icon'));\n        this.addClassModificatorForIcons();\n    }\n\n    private addClassModificatorForIcons() {\n        const twoIcons = 2;\n\n        if (this.icons.length === 1) {\n            const iconElement = this.icons[0];\n            const COMMENT_NODE = 8;\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling && iconElement.nextSibling.nodeType !== COMMENT_NODE) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-icon-button_left');\n                }\n\n                if (iconElement.previousSibling && iconElement.previousSibling.nodeType !== COMMENT_NODE) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-icon-button_right');\n                }\n            }\n        } else if (this.icons.length === twoIcons) {\n            const firstIconElement = this.icons[0];\n            const secondIconElement = this.icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n\nexport class McButtonBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {}\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McButtonMixinBase:\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McButtonBase =\n        mixinColor(mixinDisabled(McButtonBase));\n\n\n@Component({\n    selector: 'button[mc-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[disabled]': 'disabled || null'\n    }\n})\nexport class McButton extends McButtonMixinBase implements OnDestroy, CanDisable, CanColor {\n    constructor(elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        super(elementRef);\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this.getHostElement().focus();\n    }\n\n    getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n\n\n@Component({\n    selector: 'a[mc-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': 'haltDisabledEvents($event)'\n    }\n})\nexport class McAnchor extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McOptionModule, McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McAutocompleteOrigin } from './autocomplete-origin.directive';\nimport {\n    McAutocompleteTrigger,\n    MC_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER\n} from './autocomplete-trigger.directive';\nimport { McAutocomplete } from './autocomplete.component';\n\n\n@NgModule({\n    imports: [McOptionModule, OverlayModule, McCommonModule, CommonModule],\n    exports: [\n        McAutocomplete,\n        McOptionModule,\n        McAutocompleteTrigger,\n        McAutocompleteOrigin,\n        McCommonModule\n    ],\n    declarations: [McAutocomplete, McAutocompleteTrigger, McAutocompleteOrigin],\n    providers: [MC_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER]\n})\nexport class McAutocompleteModule {}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    ChangeDetectorRef,\n    Directive,\n    ElementRef,\n    forwardRef,\n    Host,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    Optional,\n    ViewContainerRef\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { DOWN_ARROW, ENTER, ESCAPE, TAB, UP_ARROW } from '@ptsecurity/cdk/keycodes';\nimport {\n    FlexibleConnectedPositionStrategy,\n    Overlay,\n    OverlayConfig,\n    OverlayRef,\n    IPositionStrategy,\n    IScrollStrategy, IConnectedPosition\n} from '@ptsecurity/cdk/overlay';\nimport { TemplatePortal } from '@ptsecurity/cdk/portal';\nimport { ViewportRuler } from '@ptsecurity/cdk/scrolling';\nimport {\n    countGroupLabelsBeforeOption,\n    getOptionScrollPosition,\n    McOption,\n    McOptionSelectionChange\n} from '@ptsecurity/mosaic/core';\nimport { McFormField } from '@ptsecurity/mosaic/form-field';\nimport { Subscription, defer, fromEvent, merge, of as observableOf, Subject, Observable } from 'rxjs';\nimport { filter, take, switchMap, delay, tap, map } from 'rxjs/operators';\n\nimport { McAutocompleteOrigin } from './autocomplete-origin.directive';\nimport { McAutocomplete } from './autocomplete.component';\n\n\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the scrollTop of the panel. Because we are not\n * actually focusing the active item, scroll must be handled manually.\n */\n\n/** The height of each autocomplete option. */\nexport const AUTOCOMPLETE_OPTION_HEIGHT = 32;\n\n/** The total height of the autocomplete panel. */\nexport const AUTOCOMPLETE_PANEL_HEIGHT = 256;\n\nexport const AUTOCOMPLETE_BORDER_WIDTH: number = 2;\n\n/** Injection token that determines the scroll handling while the autocomplete panel is open. */\nexport const MC_AUTOCOMPLETE_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-autocomplete-scroll-strategy');\n\n// tslint:disable-next-line naming-convention\nexport function MC_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\nexport const MC_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_AUTOCOMPLETE_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY\n};\n\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * @docs-private\n */\nexport const MAT_AUTOCOMPLETE_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McAutocompleteTrigger),\n    multi: true\n};\n\n/**\n * Creates an error to be thrown when attempting to use an autocomplete trigger without a panel.\n * @docs-private\n */\nexport function getMcAutocompleteMissingPanelError(): Error {\n    return Error('Attempting to open an undefined instance of `mc-autocomplete`. ' +\n        'Make sure that the id passed to the `mcAutocomplete` is correct and that ' +\n        'you\\'re attempting to open it after the ngAfterContentInit hook.');\n}\n\n\n@Directive({\n    selector: `input[mcAutocomplete], textarea[mcAutocomplete]`,\n    host: {\n        class: 'mc-autocomplete-trigger',\n        '[attr.autocomplete]': 'autocompleteAttribute',\n        // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n        // a little earlier. This avoids issues where IE delays the focusing of the input.\n        '(focusin)': 'handleFocus()',\n        '(blur)': 'onTouched()',\n        '(input)': 'handleInput($event)',\n        '(keydown)': 'handleKeydown($event)',\n        '(click)': 'handleClick($event)'\n    },\n    exportAs: 'mcAutocompleteTrigger',\n    providers: [MAT_AUTOCOMPLETE_VALUE_ACCESSOR]\n})\nexport class McAutocompleteTrigger implements ControlValueAccessor, OnDestroy {\n    // @ts-ignore\n    readonly optionSelections: Observable<McOptionSelectionChange> = defer(() => {\n        if (this.autocomplete && this.autocomplete.options) {\n            return merge(...this.autocomplete.options.map((option) => option.onSelectionChange));\n        }\n\n        // If there are any subscribers before `ngAfterViewInit`, the `autocomplete` will be undefined.\n        // Return a stream that we'll replace with the real one once everything is in place.\n        return this.zone.onStable\n            .asObservable()\n            .pipe(take(1), switchMap(() => this.optionSelections));\n    });\n\n    /** The currently active option, coerced to MatOption type. */\n    get activeOption(): McOption | null {\n        if (this.autocomplete && this.autocomplete.keyManager) {\n            return this.autocomplete.keyManager.activeItem;\n        }\n\n        return null;\n    }\n\n    get panelOpen(): boolean {\n        return this.overlayAttached && this.autocomplete.showPanel;\n    }\n\n    /** The autocomplete panel to be attached to this trigger. */\n    @Input('mcAutocomplete') autocomplete: McAutocomplete;\n\n    /**\n     * Reference relative to which to position the autocomplete panel.\n     * Defaults to the autocomplete trigger element.\n     */\n    @Input('mcAutocompleteConnectedTo') connectedTo: McAutocompleteOrigin;\n\n    /**\n     * `autocomplete` attribute to be set on the input element.\n     * @docs-private\n     */\n    @Input('autocomplete') autocompleteAttribute: string = 'off';\n\n    /**\n     * Whether the autocomplete is disabled. When disabled, the element will\n     * act as a regular input and the user won't be able to open the panel.\n     */\n    @Input('mcAutocompleteDisabled')\n    get autocompleteDisabled(): boolean {\n        return this._autocompleteDisabled;\n    }\n\n    set autocompleteDisabled(value: boolean) {\n        this._autocompleteDisabled = coerceBooleanProperty(value);\n    }\n\n    private _autocompleteDisabled = false;\n\n    private overlayAttached: boolean = false;\n\n    private overlayRef: OverlayRef | null;\n\n    private portal: TemplatePortal;\n\n    private componentDestroyed = false;\n\n    private scrollStrategy: () => IScrollStrategy;\n\n    /** Old value of the native input. Used to work around issues with the `input` event on IE. */\n    private previousValue: string | number | null;\n\n    /** Strategy that is used to position the panel. */\n    private positionStrategy: FlexibleConnectedPositionStrategy;\n\n    /** The subscription for closing actions (some are bound to document). */\n    private closingActionsSubscription: Subscription;\n\n    /** Subscription to viewport size changes. */\n    private viewportSubscription = Subscription.EMPTY;\n\n    /**\n     * Whether the autocomplete can open the next time it is focused. Used to prevent a focused,\n     * closed autocomplete from being reopened if the user switches to another browser tab and then\n     * comes back.\n     */\n    private canOpenOnNextFocus = true;\n\n    /** Stream of keyboard events that can close the panel. */\n    private readonly closeKeyEventStream = new Subject<void>();\n\n    constructor(\n        private elementRef: ElementRef<HTMLInputElement>,\n        private viewContainerRef: ViewContainerRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        private overlay: Overlay,\n        private zone: NgZone,\n        @Inject(MC_AUTOCOMPLETE_SCROLL_STRATEGY) scrollStrategy: any,\n        @Optional() private dir: Directionality,\n        @Optional() @Host() private formField: McFormField,\n        @Optional() @Inject(DOCUMENT) private document: any,\n        // @breaking-change 8.0.0 Make `_viewportRuler` required.\n        private viewportRuler?: ViewportRuler\n    ) {\n        // tslint:disable-next-line no-typeof-undefined\n        if (typeof window !== 'undefined') {\n            zone.runOutsideAngular(() => {\n                window.addEventListener('blur', this.windowBlurHandler);\n            });\n        }\n\n        this.scrollStrategy = scrollStrategy;\n    }\n\n    ngOnDestroy() {\n        // tslint:disable-next-line no-typeof-undefined\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('blur', this.windowBlurHandler);\n        }\n\n        this.viewportSubscription.unsubscribe();\n        this.componentDestroyed = true;\n        this.destroyPanel();\n        this.closeKeyEventStream.complete();\n    }\n\n    /** `View -> model callback called when value changes` */\n    // tslint:disable-next-line no-empty\n    onChange: (value: any) => void = () => {};\n\n    /** `View -> model callback called when autocomplete has been touched` */\n    // tslint:disable-next-line no-empty\n    onTouched: () => void = () => {};\n\n    /** Opens the autocomplete suggestion panel. */\n    openPanel(): void {\n        this.attachOverlay();\n    }\n\n    closePanel(): void {\n        if (!this.overlayAttached) { return; }\n\n        if (this.panelOpen) {\n            this.autocomplete.closed.emit();\n        }\n\n        this.autocomplete.isOpen = this.overlayAttached = false;\n\n        if (this.overlayRef && this.overlayRef.hasAttached()) {\n            this.overlayRef.detach();\n            this.closingActionsSubscription.unsubscribe();\n        }\n\n        // Note that in some cases this can end up being called after the component is destroyed.\n        // Add a check to ensure that we don't try to run change detection on a destroyed view.\n        if (!this.componentDestroyed) {\n            // We need to trigger change detection manually, because\n            // `fromEvent` doesn't seem to do it at the proper time.\n            // This ensures that the label is reset when the\n            // user clicks outside.\n            this.changeDetectorRef.detectChanges();\n        }\n    }\n\n    /**\n     * Updates the position of the autocomplete suggestion panel to ensure that it fits all options\n     * within the viewport.\n     */\n    updatePosition(): void {\n        if (this.overlayAttached) {\n            this.overlayRef!.updatePosition();\n        }\n    }\n\n    /**\n     * A stream of actions that should close the autocomplete panel, including\n     * when an option is selected, on blur, and when TAB is pressed.\n     */\n    get panelClosingActions(): Observable<McOptionSelectionChange | null> {\n        return merge(\n            this.optionSelections,\n            this.autocomplete.keyManager.tabOut.pipe(filter(() => this.overlayAttached)),\n            this.closeKeyEventStream,\n            this.getOutsideClickStream(),\n            this.overlayRef ?\n                this.overlayRef.detachments().pipe(filter(() => this.overlayAttached)) :\n                observableOf()\n        ).pipe(\n            // Normalize the output so we return a consistent type.\n            map((event) => event instanceof McOptionSelectionChange ? event : null)\n        );\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value: any): void {\n        Promise.resolve(null).then(() => this.setTriggerValue(value));\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => {}): void {\n        this.onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => {}) {\n        this.onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean) {\n        this.elementRef.nativeElement.disabled = isDisabled;\n    }\n\n    handleKeydown(event: KeyboardEvent): void {\n        // tslint:disable-next-line deprecation\n        const keyCode = event.keyCode;\n\n        // Prevent the default action on all escape key presses. This is here primarily to bring IE\n        // in line with other browsers. By default, pressing escape on IE will cause it to revert\n        // the input value to the one that it had on focus, however it won't dispatch any events\n        // which means that the model value will be out of sync with the view.\n        if (keyCode === ESCAPE) {\n            event.preventDefault();\n        }\n\n        if (this.activeOption && keyCode === ENTER && this.panelOpen) {\n            this.activeOption.selectViaInteraction();\n            this.resetActiveItem();\n            event.preventDefault();\n        } else if (this.autocomplete) {\n            const prevActiveItem = this.autocomplete.keyManager.activeItem;\n\n            if (this.panelOpen || keyCode === TAB) {\n                this.autocomplete.onKeydown(event);\n            } else if (keyCode === DOWN_ARROW && this.canOpen()) {\n                this.openPanel();\n            }\n\n            const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n\n            if (isArrowKey || this.autocomplete.keyManager.activeItem !== prevActiveItem) {\n                this.scrollToOption();\n            }\n        }\n    }\n\n    handleInput(event: KeyboardEvent): void {\n        const target = event.target as HTMLInputElement;\n        let value: number | string | null = target.value;\n\n        // Based on `NumberValueAccessor` from forms.\n        if (target.type === 'number') {\n            value = value === '' ? null : parseFloat(value);\n        }\n\n        // If the input has a placeholder, IE will fire the `input` event on page load,\n        // focus and blur, in addition to when the user actually changed the value. To\n        // filter out all of the extra events, we save the value on focus and between\n        // `input` events, and we check whether it changed.\n        // See: https://connect.microsoft.com/IE/feedback/details/885747/\n        if (this.previousValue !== value) {\n            this.previousValue = value;\n            this.onChange(value);\n\n            if (this.canOpen() && this.document.activeElement === event.target) {\n                this.openPanel();\n            }\n        }\n    }\n\n    handleFocus(): void {\n        if (!this.canOpenOnNextFocus) {\n            this.canOpenOnNextFocus = true;\n        } else if (this.canOpen()) {\n            this.previousValue = this.elementRef.nativeElement.value;\n            this.attachOverlay();\n        }\n    }\n\n    handleClick($event: MouseEvent) {\n        if (this.canOpen() && this.document.activeElement === $event.target) {\n            this.openPanel();\n        }\n    }\n\n    /** Stream of clicks outside of the autocomplete panel. */\n    private getOutsideClickStream(): Observable<any> {\n        if (!this.document) { return observableOf(null); }\n\n        return fromEvent<MouseEvent>(this.document, 'click')\n            .pipe(filter((event) => {\n                const clickTarget = event.target as HTMLElement;\n                const formField = this.formField ?\n                    this.formField._elementRef.nativeElement : null;\n\n                return this.overlayAttached &&\n                    clickTarget !== this.elementRef.nativeElement &&\n                    (!formField || !formField.contains(clickTarget)) &&\n                    (!!this.overlayRef && !this.overlayRef.overlayElement.contains(clickTarget));\n            }));\n    }\n\n    /**\n     * Event handler for when the window is blurred. Needs to be an\n     * arrow function in order to preserve the context.\n     */\n    private windowBlurHandler = () => {\n        // If the user blurred the window while the autocomplete is focused, it means that it'll be\n        // refocused when they come back. In this case we want to skip the first focus event, if the\n        // pane was closed, in order to avoid reopening it unintentionally.\n        this.canOpenOnNextFocus = this.document.activeElement !== this.elementRef.nativeElement || this.panelOpen;\n    }\n\n    /**\n     * Given that we are not actually focusing active options, we must manually adjust scroll\n     * to reveal options below the fold. First, we find the offset of the option from the top\n     * of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n     * the panel height + the option height, so the active option will be just visible at the\n     * bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n     * will become the offset. If that offset is visible within the panel already, the scrollTop is\n     * not adjusted.\n     */\n    private scrollToOption(): void {\n        const index = this.autocomplete.keyManager.activeItemIndex || 0;\n        const labelCount = countGroupLabelsBeforeOption(index,\n            this.autocomplete.options, this.autocomplete.optionGroups);\n\n        const newScrollPosition = getOptionScrollPosition(\n            index + labelCount,\n            AUTOCOMPLETE_OPTION_HEIGHT,\n            this.autocomplete.getScrollTop(),\n            AUTOCOMPLETE_PANEL_HEIGHT\n        );\n\n        this.autocomplete.setScrollTop(newScrollPosition);\n    }\n\n    /**\n     * This method listens to a stream of panel closing actions and resets the\n     * stream every time the option list changes.\n     */\n    private subscribeToClosingActions(): Subscription {\n        const firstStable = this.zone.onStable.asObservable()\n            .pipe(take(1));\n        const optionChanges = this.autocomplete.options.changes\n            .pipe(\n                tap(() => this.positionStrategy.reapplyLastPosition()),\n                // Defer emitting to the stream until the next tick, because changing\n                // bindings in here will cause \"changed after checked\" errors.\n                delay(0)\n            );\n\n        // When the zone is stable initially, and when the option list changes...\n        return merge(firstStable, optionChanges)\n            .pipe(\n                // create a new stream of panelClosingActions, replacing any previous streams\n                // that were created, and flatten it so our stream only emits closing events...\n                switchMap(() => {\n                    this.resetActiveItem();\n                    this.autocomplete.setVisibility();\n\n                    if (this.panelOpen) {\n                        this.overlayRef!.updatePosition();\n                    }\n\n                    return this.panelClosingActions;\n                }),\n                // when the first closing event occurs...\n                take(1)\n            )\n            // set the value, close the panel, and complete.\n            .subscribe((event) => this.setValueAndClose(event));\n    }\n\n    /** Destroys the autocomplete suggestion panel. */\n    private destroyPanel(): void {\n        if (this.overlayRef) {\n            this.closePanel();\n            this.overlayRef.dispose();\n            this.overlayRef = null;\n        }\n    }\n\n    private setTriggerValue(value: any): void {\n        const toDisplay = this.autocomplete && this.autocomplete.displayWith ?\n            this.autocomplete.displayWith(value) :\n            value;\n\n        // Simply falling back to an empty string if the display value is falsy does not work properly.\n        // The display value can also be the number zero and shouldn't fall back to an empty string.\n        const inputValue = toDisplay != null ? toDisplay : '';\n\n        // If it's used within a `MatFormField`, we should set it through the property so it can go\n        // through change detection.\n        if (this.formField) {\n            this.formField._control.value = inputValue;\n        } else {\n            this.elementRef.nativeElement.value = inputValue;\n        }\n\n        this.previousValue = inputValue;\n    }\n\n    /** This method closes the panel, and if a value is specified, also sets the associated\n     * control to that value. It will also mark the control as dirty if this interaction\n     * stemmed from the user.\n     */\n    private setValueAndClose(event: McOptionSelectionChange | null): void {\n        if (event && event.source) {\n            this.clearPreviousSelectedOption(event.source);\n            this.setTriggerValue(event.source.value);\n            this.onChange(event.source.value);\n            this.elementRef.nativeElement.focus();\n\n            this.autocomplete.emitSelectEvent(event.source);\n        }\n\n        this.closePanel();\n    }\n\n    /** Clear any previous selected option and emit a selection change event for this option */\n    private clearPreviousSelectedOption(skip: McOption) {\n        this.autocomplete.options.forEach((option) => {\n            if (option !== skip && option.selected) {\n                option.deselect();\n            }\n        });\n    }\n\n    private attachOverlay(): void {\n        if (!this.autocomplete) {\n            throw getMcAutocompleteMissingPanelError();\n        }\n\n        let overlayRef = this.overlayRef;\n\n        if (!overlayRef) {\n            this.portal = new TemplatePortal(this.autocomplete.template, this.viewContainerRef);\n            overlayRef = this.overlay.create(this.getOverlayConfig());\n            this.overlayRef = overlayRef;\n\n            // Use the `keydownEvents` in order to take advantage of\n            // the overlay event targeting provided by the CDK overlay.\n            overlayRef.keydownEvents().subscribe((event) => {\n                // Close when pressing ESCAPE or ALT + UP_ARROW, based on the a11y guidelines.\n                // See: https://www.w3.org/TR/wai-aria-practices-1.1/#textbox-keyboard-interaction\n                // tslint:disable-next-line deprecation\n                if (event.keyCode === ESCAPE || (event.keyCode === UP_ARROW && event.altKey)) {\n                    this.resetActiveItem();\n                    this.closeKeyEventStream.next();\n                }\n            });\n\n            if (this.viewportRuler) {\n                this.viewportSubscription = this.viewportRuler.change().subscribe(() => {\n                    if (this.panelOpen && overlayRef) {\n                        overlayRef.updateSize({ width: this.getPanelWidth() });\n                    }\n                });\n            }\n        } else {\n            const position = overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\n\n            // Update the trigger, panel width and direction, in case anything has changed.\n            position.setOrigin(this.getConnectedElement());\n            overlayRef.updateSize({ width: this.getPanelWidth() });\n        }\n\n        if (overlayRef && !overlayRef.hasAttached()) {\n            overlayRef.attach(this.portal);\n            this.closingActionsSubscription = this.subscribeToClosingActions();\n        }\n\n        const wasOpen = this.panelOpen;\n\n        this.autocomplete.setVisibility();\n        this.autocomplete.isOpen = this.overlayAttached = true;\n\n        // We need to do an extra `panelOpen` check in here, because the\n        // autocomplete won't be shown if there are no options.\n        if (this.panelOpen && wasOpen !== this.panelOpen) {\n            this.autocomplete.opened.emit();\n        }\n    }\n\n    private getOverlayConfig(): OverlayConfig {\n        return new OverlayConfig({\n            positionStrategy: this.getOverlayPosition(),\n            scrollStrategy: this.scrollStrategy(),\n            width: this.getPanelWidth(),\n            direction: this.dir\n        });\n    }\n\n    private getOverlayPosition(): IPositionStrategy {\n        this.positionStrategy = this.overlay.position()\n            .flexibleConnectedTo(this.getConnectedElement())\n            .withFlexibleDimensions(false)\n            .withPush(false)\n            .withPositions([\n                {\n                    originX: 'start',\n                    originY: 'bottom',\n                    overlayX: 'start',\n                    overlayY: 'top'\n                },\n                {\n                    originX: 'start',\n                    originY: 'top',\n                    overlayX: 'start',\n                    overlayY: 'bottom',\n\n                    // The overlay edge connected to the trigger should have squared corners, while\n                    // the opposite end has rounded corners. We apply a CSS class to swap the\n                    // border-radius based on the overlay position.\n                    panelClass: 'mc-autocomplete-panel-above'\n                }\n            ] as IConnectedPosition[]);\n\n        return this.positionStrategy;\n    }\n\n    private getConnectedElement(): ElementRef {\n        if (this.connectedTo) {\n            return this.connectedTo.elementRef;\n        }\n\n        return this.formField ? this.formField.getConnectedOverlayOrigin() : this.elementRef;\n    }\n\n    private getPanelWidth(): number | string {\n        return this.autocomplete.panelWidth || this.getHostWidth() - AUTOCOMPLETE_BORDER_WIDTH;\n    }\n\n    private getHostWidth(): number {\n        return this.getConnectedElement().nativeElement.getBoundingClientRect().width;\n    }\n\n    /**\n     * Resets the active item to -1 so arrow events will activate the\n     * correct options, or to 0 if the consumer opted into it.\n     */\n    private resetActiveItem(): void {\n        this.autocomplete.keyManager.setActiveItem(this.autocomplete.autoActiveFirstOption ? 0 : -1);\n    }\n\n    private canOpen(): boolean {\n        const element = this.elementRef.nativeElement;\n\n        return !element.readOnly && !element.disabled && !this._autocompleteDisabled;\n    }\n}\n","import { Directive, ElementRef } from '@angular/core';\n\n\n/**\n * Directive applied to an element to make it usable\n * as a connection point for an autocomplete panel.\n */\n@Directive({\n    selector: '[mcAutocompleteOrigin]',\n    exportAs: 'mcAutocompleteOrigin'\n})\nexport class McAutocompleteOrigin {\n    constructor(public elementRef: ElementRef<HTMLElement>) {}\n}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    Output,\n    QueryList,\n    TemplateRef,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ActiveDescendantKeyManager } from '@ptsecurity/cdk/a11y';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { MC_OPTION_PARENT_COMPONENT, McOptgroup, McOption } from '@ptsecurity/mosaic/core';\n\n\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet uniqueAutocompleteIdCounter = 0;\n\nexport class McAutocompleteSelectedEvent {\n    constructor(public source: McAutocomplete, public option: McOption) {}\n}\n\n/** Default `mc-autocomplete` options that can be overridden. */\n// tslint:disable-next-line naming-convention\nexport interface McAutocompleteDefaultOptions {\n    /** Whether the first option should be highlighted when an autocomplete panel is opened. */\n    autoActiveFirstOption?: boolean;\n}\n\n/** Injection token to be used to override the default options for `mc-autocomplete`. */\nexport const MC_AUTOCOMPLETE_DEFAULT_OPTIONS =\n    new InjectionToken<McAutocompleteDefaultOptions>('mc-autocomplete-default-options', {\n        providedIn: 'root',\n        factory: MC_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY\n    });\n\n// tslint:disable-next-line naming-convention\nexport function MC_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY(): McAutocompleteDefaultOptions {\n    return { autoActiveFirstOption: true };\n}\n\n@Component({\n    selector: 'mc-autocomplete',\n    exportAs: 'mcAutocomplete',\n    templateUrl: 'autocomplete.html',\n    styleUrls: ['autocomplete.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: { class: 'mc-autocomplete' },\n    providers: [\n        { provide: MC_OPTION_PARENT_COMPONENT, useExisting: McAutocomplete }\n    ]\n})\nexport class McAutocomplete implements AfterContentInit {\n    /** Unique ID to be used by autocomplete trigger's \"aria-owns\" property. */\n    id: string = `mc-autocomplete-${uniqueAutocompleteIdCounter++}`;\n\n    /** Manages active item in option list based on key events. */\n    keyManager: ActiveDescendantKeyManager<McOption>;\n\n    /** Whether the autocomplete panel should be visible, depending on option length. */\n    showPanel: boolean = false;\n\n    @ViewChild(TemplateRef) template: TemplateRef<any>;\n\n    @ViewChild('panel') panel: ElementRef;\n\n    @ContentChildren(McOption, { descendants: true }) options: QueryList<McOption>;\n\n    @ContentChildren(McOptgroup) optionGroups: QueryList<McOptgroup>;\n\n    /** Function that maps an option's control value to its display value in the trigger. */\n    @Input() displayWith: ((value: any) => string) | null = null;\n\n    /**\n     * Specify the width of the autocomplete panel.  Can be any CSS sizing value, otherwise it will\n     * match the width of its host.\n     */\n    @Input() panelWidth: string | number;\n\n    /** Event that is emitted whenever an option from the list is selected. */\n    @Output() readonly optionSelected: EventEmitter<McAutocompleteSelectedEvent> =\n        new EventEmitter<McAutocompleteSelectedEvent>();\n\n    /** Event that is emitted when the autocomplete panel is opened. */\n    @Output() readonly opened: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event that is emitted when the autocomplete panel is closed. */\n    @Output() readonly closed: EventEmitter<void> = new EventEmitter<void>();\n\n    /**\n     * Takes classes set on the host mc-autocomplete element and applies them to the panel\n     * inside the overlay container to allow for easy styling.\n     */\n    get classList() {\n        return this._classList;\n    }\n\n    @Input('class')\n    set classList(value: string) {\n        if (value && value.length) {\n            value.split(' ')\n                .forEach((className) => this._classList[className.trim()] = true);\n\n            this.elementRef.nativeElement.className = '';\n        }\n    }\n\n    private _classList: any = {};\n\n    /**\n     * Whether the first option should be highlighted when the autocomplete panel is opened.\n     * Can be configured globally through the `MC_AUTOCOMPLETE_DEFAULT_OPTIONS` token.\n     */\n    @Input()\n    get autoActiveFirstOption(): boolean {\n        return this._autoActiveFirstOption;\n    }\n\n    set autoActiveFirstOption(value: boolean) {\n        this._autoActiveFirstOption = coerceBooleanProperty(value);\n    }\n\n    private _autoActiveFirstOption: boolean;\n\n    get isOpen(): boolean {\n        return this._isOpen && this.showPanel;\n    }\n\n    set isOpen(value: boolean) {\n        this._isOpen = value;\n    }\n\n    private _isOpen: boolean = false;\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        private elementRef: ElementRef<HTMLElement>,\n        @Inject(MC_AUTOCOMPLETE_DEFAULT_OPTIONS) defaults: McAutocompleteDefaultOptions\n    ) {\n        this._autoActiveFirstOption = !!defaults.autoActiveFirstOption;\n    }\n\n    ngAfterContentInit() {\n        this.keyManager = new ActiveDescendantKeyManager<McOption>(this.options);\n        this.setVisibility();\n    }\n\n    setScrollTop(scrollTop: number): void {\n        if (this.panel) {\n            this.panel.nativeElement.scrollTop = scrollTop;\n        }\n    }\n\n    getScrollTop(): number {\n        return this.panel ? this.panel.nativeElement.scrollTop : 0;\n    }\n\n    setVisibility() {\n        this.showPanel = !!this.options.length;\n        this._classList['mc-autocomplete_visible'] = this.showPanel;\n        this._classList['mc-autocomplete_hidden'] = !this.showPanel;\n\n        this.changeDetectorRef.markForCheck();\n    }\n\n    emitSelectEvent(option: McOption): void {\n        const event = new McAutocompleteSelectedEvent(this, option);\n\n        this.optionSelected.emit(event);\n    }\n\n    onKeydown(event: KeyboardEvent): any {\n        this.keyManager.onKeydown(event);\n    }\n}\n\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCleaner } from './cleaner';\nimport { McFormField, McFormFieldWithoutBorders } from './form-field';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\n@NgModule({\n    declarations: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ],\n    imports: [CommonModule, McIconModule],\n    exports: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ]\n})\nexport class McFormFieldModule {\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren, Directive,\n    ElementRef,\n    QueryList, ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { CanColor, CanColorCtor, mixinColor } from '@ptsecurity/mosaic/core';\nimport { EMPTY, merge } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\n\nimport { McCleaner } from './cleaner';\nimport { McFormFieldControl } from './form-field-control';\nimport { getMcFormFieldMissingControlError } from './form-field-errors';\nimport { McFormFieldNumberControl } from './form-field-number-control';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\nlet nextUniqueId = 0;\n\nexport class McFormFieldBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McFormFieldMixinBase: CanColorCtor & typeof McFormFieldBase = mixinColor(McFormFieldBase);\n\n@Component({\n    selector: 'mc-form-field',\n    exportAs: 'mcFormField',\n    templateUrl: 'form-field.html',\n    // McInput is a directive and can't have styles, so we need to include its styles here.\n    // The McInput styles are fairly minimal so it shouldn't be a big deal for people who\n    // aren't using McInput.\n    styleUrls: [\n        'form-field.css',\n        '../input/input.css',\n        '../textarea/textarea.css'\n    ],\n    host: {\n        class: 'mc-form-field',\n        '[class.mc-form-field_invalid]': '_control.errorState',\n        '[class.mc-disabled]': '_control.disabled',\n        '[class.mc-form-field_has-prefix]': 'hasPrefix',\n        '[class.mc-form-field_has-suffix]': 'hasSuffix',\n        '[class.mc-form-field_has-cleaner]': 'canShowCleaner',\n        '[class.mc-form-field_has-stepper]': 'canShowStepper',\n        '[class.mc-focused]': '_control.focused',\n        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n        '[class.ng-touched]': '_shouldForward(\"touched\")',\n        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n        '[class.ng-valid]': '_shouldForward(\"valid\")',\n        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n        '[class.ng-pending]': '_shouldForward(\"pending\")',\n        '(keydown)': 'onKeyDown($event)',\n        '(mouseenter)': 'onHoverChanged(true)',\n        '(mouseleave)': 'onHoverChanged(false)'\n    },\n    inputs: ['color'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class McFormField extends _McFormFieldMixinBase implements\n    AfterContentInit, AfterContentChecked, AfterViewInit, CanColor {\n\n    @ContentChild(McFormFieldControl) _control: McFormFieldControl<any>;\n    @ContentChild(McFormFieldNumberControl) _numberControl: McFormFieldNumberControl<any>;\n    @ContentChild(McStepper) _stepper: McStepper;\n\n    @ContentChildren(McHint) _hint: QueryList<McHint>;\n    @ContentChildren(McSuffix) _suffix: QueryList<McSuffix>;\n    @ContentChildren(McPrefix) _prefix: QueryList<McPrefix>;\n    @ContentChildren(McCleaner) _cleaner: QueryList<McCleaner>;\n\n    @ViewChild('connectionContainer') connectionContainerRef: ElementRef;\n\n    // Unique id for the internal form field label.\n    _labelId = `mc-form-field-label-${nextUniqueId++}`;\n\n    hovered: boolean = false;\n\n    constructor(public _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {\n        super(_elementRef);\n    }\n\n    ngAfterContentInit() {\n        this._validateControlChild();\n\n        if (this._control.controlType) {\n            this._elementRef.nativeElement.classList\n                .add(`mc-form-field-type-${this._control.controlType}`);\n\n            if (this._numberControl && this.hasStepper) {\n                this._stepper.stepUp.subscribe(this.onStepUp.bind(this));\n                this._stepper.stepDown.subscribe(this.onStepDown.bind(this));\n            }\n        }\n\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        this._control.stateChanges.pipe(startWith())\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n\n        if (this._numberControl) {\n            this._numberControl.stateChanges.pipe(startWith())\n                .subscribe(() => {\n                    this._changeDetectorRef.markForCheck();\n                });\n        }\n\n        // Run change detection if the value changes.\n        const valueChanges = this._control.ngControl && this._control.ngControl.valueChanges || EMPTY;\n\n        merge(valueChanges)\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n\n    ngAfterContentChecked() {\n        this._validateControlChild();\n    }\n\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._changeDetectorRef.detectChanges();\n    }\n\n    clearValue($event) {\n        $event.stopPropagation();\n\n        if (this._control && this._control.ngControl) {\n            this._control.ngControl.reset();\n        }\n    }\n\n    onContainerClick($event) {\n        if (this._control.onContainerClick) {\n            this._control.onContainerClick($event);\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === ESCAPE && this._control.focused && this.hasCleaner) {\n            if (this._control && this._control.ngControl) {\n                this._control.ngControl.reset();\n            }\n\n            event.preventDefault();\n        }\n    }\n\n    onHoverChanged(isHovered: boolean) {\n        if (isHovered !== this.hovered) {\n            this.hovered  = isHovered;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    onStepUp() {\n        if (this._numberControl) {\n            this._numberControl.stepUp(this._numberControl.step);\n        }\n    }\n\n    onStepDown() {\n        if (this._numberControl) {\n            this._numberControl.stepDown(this._numberControl.step);\n        }\n    }\n\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     */\n    getConnectedOverlayOrigin(): ElementRef {\n        return this.connectionContainerRef || this._elementRef;\n    }\n\n        /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop: keyof NgControl): boolean {\n        const ngControl = this._control ? this._control.ngControl : null;\n\n        return ngControl && ngControl[prop];\n    }\n\n    /** Throws an error if the form field's control is missing. */\n    protected _validateControlChild() {\n        if (!this._control) {\n            throw getMcFormFieldMissingControlError();\n        }\n    }\n\n    get hasHint(): boolean {\n        return this._hint && this._hint.length > 0;\n    }\n\n    get hasSuffix(): boolean {\n        return this._suffix && this._suffix.length > 0;\n    }\n\n    get hasPrefix(): boolean {\n        return this._prefix && this._prefix.length > 0;\n    }\n\n    get hasCleaner(): boolean {\n        return this._cleaner && this._cleaner.length > 0;\n    }\n\n    get hasStepper(): boolean {\n        return !!this._stepper;\n    }\n\n    get canShowCleaner(): boolean {\n        return this.hasCleaner &&\n            this._control &&\n            this._control.ngControl\n                ? this._control.ngControl.value && !this._control.disabled\n                : false;\n    }\n\n\n    get disabled(): boolean {\n        return this._control && this._control.disabled;\n    }\n\n    get canShowStepper(): boolean {\n        return this._numberControl &&\n            !this.disabled &&\n            (\n                this._numberControl.focused ||\n                this.hovered\n            );\n    }\n}\n\n@Directive({\n    selector: 'mc-form-field[mcFormFieldWithoutBorders]',\n    exportAs: 'mcFormFieldWithoutBorders',\n    host: { class: 'mc-form-field_without-borders' }\n})\nexport class McFormFieldWithoutBorders {}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcSuffix]'\n})\nexport class McSuffix {\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-stepper',\n    template: `\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-up mc-angle-down-L_16\"\n           (mousedown)=\"onStepUp($event)\">\n        </i>\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-down mc-angle-down-L_16\"\n           (mousedown)=\"onStepDown($event)\">\n        </i>\n    `\n})\nexport class McStepper {\n    @Output()\n    readonly stepUp: EventEmitter<void> = new EventEmitter<void>();\n    @Output()\n    readonly stepDown: EventEmitter<void> = new EventEmitter<void>();\n\n    onStepUp($event: MouseEvent) {\n        this.stepUp.emit();\n        $event.preventDefault();\n    }\n\n    onStepDown($event: MouseEvent) {\n        this.stepDown.emit();\n        $event.preventDefault();\n    }\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcPrefix]'\n})\nexport class McPrefix {\n}\n","import { Directive, Input } from '@angular/core';\n\n\nlet nextUniqueId = 0;\n\n@Directive({\n    selector: 'mc-hint',\n    host: {\n        class: 'mc-hint',\n        '[attr.id]': 'id'\n    }\n})\nexport class McHint {\n    @Input() id: string = `mc-hint-${nextUniqueId++}`;\n}\n","import { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldNumberControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** the number step */\n    step: number;\n\n    /** the number big step */\n    bigStep: number;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Handles step up and down */\n    abstract stepUp(step: number): void;\n\n    abstract stepDown(step: number): void;\n}\n","export function getMcFormFieldMissingControlError(): Error {\n  return Error('mc-form-field must contain a McFormFieldControl.');\n}\n","import { NgControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** The element ID for this control. */\n    readonly id: string;\n\n    /** The placeholder for this control. */\n    readonly placeholder: string;\n\n    /** Gets the NgControl for this control. */\n    readonly ngControl: NgControl | null;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Whether the control is empty. */\n    readonly empty: boolean;\n\n    /** Whether the control is required. */\n    readonly required: boolean;\n\n    /** Whether the control is disabled. */\n    readonly disabled: boolean;\n\n    /** Whether the control is in an error state. */\n    readonly errorState: boolean;\n\n    /**\n     * An optional name for the control type that can be used to distinguish `mc-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mc-form-field-type-{{controlType}}` to its root element.\n     */\n    readonly controlType?: string;\n\n    /** Handles a click on the control's container. */\n    abstract onContainerClick(event: MouseEvent): void;\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-cleaner',\n    template: '<i class=\"mc-icon_light\" mc-icon=\"mc-close-M_16\" color=\"second\"></i>'\n})\nexport class McCleaner {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McIcon,\n    McIconCSSStyler\n} from './icon.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McIcon,\n        McIconCSSStyler\n    ],\n    declarations: [\n        McIcon,\n        McIconCSSStyler\n    ]\n})\nexport class McIconModule {}\n","import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { mixinColor, CanColor, CanColorCtor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\n@Directive({\n    selector: '[mc-icon]',\n    host: { class: 'mc mc-icon' }\n})\nexport class McIconCSSStyler {}\n\n\nexport class McIconBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McIconMixinBase: CanColorCtor & typeof McIconBase = mixinColor(McIconBase, ThemePalette.Empty);\n\n\n@Component({\n    selector: `[mc-icon]`,\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./icon.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color']\n})\nexport class McIcon extends _McIconMixinBase implements CanColor {\n    constructor(elementRef: ElementRef, @Attribute('mc-icon') iconName: string) {\n        super(elementRef);\n\n        elementRef.nativeElement.classList.add(iconName);\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n","import {\n    animate,\n    AnimationTriggerMetadata,\n    state,\n    style,\n    transition,\n    trigger,\n    query,\n    animateChild,\n    group\n} from '@angular/animations';\n\n\n/**\n * The following are all the animations for the mc-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mc-select animation.\n */\nexport const mcSelectAnimations: {\n    readonly transformPanel: AnimationTriggerMetadata;\n    readonly fadeInContent: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        transition('void => *', group([\n            query('@fadeInContent', animateChild()),\n            animate('150ms cubic-bezier(0.25, 0.8, 0.25, 1)')\n        ])),\n        transition('* => void', [\n            animate('250ms 100ms linear', style({ opacity: 0 }))\n        ])\n    ]),\n\n    /**\n     * This animation fades in the background color and text content of the\n     * select's options. It is time delayed to occur 100ms after the overlay\n     * panel has transformed in.\n     */\n    fadeInContent: trigger('fadeInContent', [\n        state('showing', style({ opacity: 1 })),\n        transition('void => showing', [\n            style({ opacity: 0 }),\n            animate('150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const transformPanel = mcSelectAnimations.transformPanel;\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const fadeInContent = mcSelectAnimations.fadeInContent;\n","import { InjectionToken } from '@angular/core';\nimport { IScrollStrategy, Overlay, RepositionScrollStrategy } from '@ptsecurity/cdk/overlay';\n\n\n/** The max height of the select's overlay panel */\nexport const SELECT_PANEL_MAX_HEIGHT = 224;\n\n/** The panel's padding on the x-axis */\nexport const SELECT_PANEL_PADDING_X = 1;\n\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\n/* tslint:disable-next-line:no-magic-numbers */\nexport const SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nexport const SELECT_PANEL_VIEWPORT_PADDING = 8;\n\n\n/** Injection token that determines the scroll handling while a select is open. */\nexport const MC_SELECT_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-select-scroll-strategy');\n\n/** @docs-private */\nexport function mcSelectScrollStrategyProviderFactory(overlay: Overlay):\n    () => RepositionScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MC_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: mcSelectScrollStrategyProviderFactory\n};\n","/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nexport function getMcSelectDynamicMultipleError(): Error {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nexport function getMcSelectNonArrayValueError(): Error {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nexport function getMcSelectNonFunctionValueError(): Error {\n    return Error('`compareWith` must be a function.');\n}\n","export const selectEvents = 'selectEvents';\n","import { ConnectionPositionPair } from '@ptsecurity/cdk/overlay';\n\n\nexport const POSITION_MAP: { [key: string]: ConnectionPositionPair } = {\n    top         : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom'\n    },\n    topCenter   : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topLeft     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topRight    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    right       : {\n        originX : 'end',\n        originY : 'center',\n        overlayX: 'start',\n        overlayY: 'center'\n    },\n    rightTop    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'top',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    rightBottom : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    bottom      : {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomCenter: {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomLeft  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    bottomRight : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    left        : {\n        originX : 'start',\n        originY : 'center',\n        overlayX: 'end',\n        overlayY: 'center'\n    },\n    leftTop     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    leftBottom  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    }\n};\n\nexport const DEFAULT_4_POSITIONS = _objectValues([\n    POSITION_MAP.top, POSITION_MAP.right, POSITION_MAP.bottom, POSITION_MAP.left\n]);\n\nfunction arrayMap<T, S>(array: T[], iteratee: (item: T, index: number, arr: T[]) => S): S[] {\n    let index = -1;\n    const length = array == null ? 0 : array.length;\n    const result = Array(length);\n\n    while (++index < length) {\n        result[ index ] = iteratee(array[ index ], index, array);\n    }\n\n    return result;\n}\nfunction baseValues<T>(object: { [key: string]: T } | T[], props: string[]): T[] {\n    return arrayMap(props,  (key) => {\n        return object[ key ];\n    });\n}\nfunction _objectValues<T>(object: { [key: string]: T } | T[]): T[] {\n    return object == null ? [] : baseValues(object, Object.keys(object));\n}\n","export enum AnimationCurves {\n    StandardCurve = 'cubic-bezier(0.4,0.0,0.2,1)',\n    DecelerationCurve = 'cubic-bezier(0.0,0.0,0.2,1)',\n    AccelerationCurve = 'cubic-bezier(0.4,0.0,1,1)',\n    SharpCurve = 'cubic-bezier(0.4,0.0,0.6,1)'\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\nexport const fadeAnimation: AnimationTriggerMetadata =  trigger('fadeAnimation', [\n    state('void', style({ opacity: 0 })),\n    state('true', style({ opacity: 1 })),\n    state('false', style({ opacity: 0 })),\n    transition('* => true', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n    transition('* => void', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)'))\n]);\n","import { InjectionToken } from '@angular/core';\n\n\n/** InjectionToken that can be used to specify the global label options. */\nexport const MC_LABEL_GLOBAL_OPTIONS =\n    new InjectionToken<LabelOptions>('mc-label-global-options');\n\n/** Type for the available floatLabel values. */\nexport type FloatLabelType = 'always' | 'never' | 'auto';\n\n/** Configurable options for floating labels. */\nexport interface LabelOptions {\n    /**\n     * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n     * Default behavior is assumed to be `auto`.\n     */\n    float?: FloatLabelType;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McPseudoCheckboxModule } from '../selection/index';\n\nimport { McOptgroup } from './optgroup';\nimport { McOption } from './option';\n\n\n@NgModule({\n    imports: [CommonModule, McPseudoCheckboxModule],\n    exports: [McOption, McOptgroup],\n    declarations: [McOption, McOptgroup]\n})\nexport class McOptionModule {}\n\n\nexport * from './option';\nexport * from './optgroup';\n","import {\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ENTER, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Subject } from 'rxjs';\n\nimport { McOptgroup } from './optgroup';\n\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet uniqueIdCounter = 0;\n\n/** Event object emitted by McOption when selected or deselected. */\nexport class McOptionSelectionChange {\n    constructor(public source: McOption, public isUserInput = false) {}\n}\n\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * @docs-private\n */\n// tslint:disable-next-line: naming-convention\nexport interface McOptionParentComponent {\n    multiple?: boolean;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_OPTION_PARENT_COMPONENT =\n    new InjectionToken<McOptionParentComponent>('MC_OPTION_PARENT_COMPONENT');\n\n/**\n * Single option inside of a `<mc-select>` element.\n */\n@Component({\n    selector: 'mc-option',\n    exportAs: 'mcOption',\n    host: {\n        '[attr.tabindex]': 'getTabIndex()',\n        class: 'mc-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-option-multiple]': 'multiple',\n        '[class.mc-active]': 'active',\n        '[class.mc-disabled]': 'disabled',\n        '[id]': 'id',\n\n        '(click)': 'selectViaInteraction()',\n        '(keydown)': 'handleKeydown($event)'\n    },\n    styleUrls: ['./option.css'],\n    templateUrl: './option.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McOption implements AfterViewChecked, OnDestroy {\n    /** The form value of the option. */\n    @Input() value: any;\n\n    /** Event emitted when the option is selected or deselected. */\n    // tslint:disable-next-line:no-output-on-prefix\n    @Output() readonly onSelectionChange = new EventEmitter<McOptionSelectionChange>();\n\n    /** Emits when the state of the option changes and any parents have to be notified. */\n    readonly stateChanges = new Subject<void>();\n\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue(): string {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this.getHostElement().textContent || '').trim();\n    }\n\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n        return this.parent && this.parent.multiple;\n    }\n\n    get id(): string {\n        return this._id;\n    }\n\n    private _id = `mc-option-${uniqueIdCounter++}`;\n\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    private _selected = false;\n\n    @Input()\n    get disabled() {\n        return (this.group && this.group.disabled) || this._disabled;\n    }\n\n    set disabled(value: any) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    private _disabled = false;\n\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active(): boolean {\n        return this._active;\n    }\n\n    private _active = false;\n\n    private mostRecentViewValue = '';\n\n    constructor(\n        private readonly element: ElementRef,\n        private readonly changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_OPTION_PARENT_COMPONENT) private readonly parent: McOptionParentComponent,\n        @Optional() readonly group: McOptgroup\n    ) {}\n\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mc-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n\n            if (viewValue !== this.mostRecentViewValue) {\n                this.mostRecentViewValue = viewValue;\n                this.stateChanges.next();\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n    }\n\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent();\n        }\n    }\n\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent();\n        }\n    }\n\n    focus(): void {\n        const element = this.getHostElement();\n\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles(): void {\n        if (!this._active) {\n            this._active = true;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles(): void {\n        if (this._active) {\n            this._active = false;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        return this.viewValue;\n    }\n\n    /** Ensures the option is selected when activated from the keyboard. */\n    handleKeydown(event: KeyboardEvent): void {\n        // tslint:disable-next-line\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\n            this.selectViaInteraction();\n\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    selectViaInteraction(): void {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent(true);\n        }\n    }\n\n    getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    getHostElement(): HTMLElement {\n        return this.element.nativeElement;\n    }\n\n    /** Emits the selection change event. */\n    private emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McOptionSelectionChange(this, isUserInput));\n    }\n}\n\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nexport function countGroupLabelsBeforeOption(\n    optionIndex: number,\n    options: QueryList<McOption>,\n    optionGroups: QueryList<McOptgroup>\n): number {\n\n    if (optionGroups.length) {\n        const optionsArray = options.toArray();\n        const groups = optionGroups.toArray();\n\n        let groupCounter = 0;\n\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n\n        return groupCounter;\n    }\n\n    return 0;\n}\n\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionIndex Index of the option to be scrolled into the view.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nexport function getOptionScrollPosition(\n    optionIndex: number,\n    optionHeight: number,\n    currentScrollPosition: number,\n    panelHeight: number\n): number {\n    const optionOffset = optionIndex * optionHeight;\n\n    if (optionOffset < currentScrollPosition) { return optionOffset; }\n\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n\n    return currentScrollPosition;\n}\n\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\nimport { mixinDisabled, CanDisable, CanDisableCtor } from '../common-behaviors/index';\n\n\n// Boilerplate for applying mixins to McOptgroup.\n/** @docs-private */\nexport class McOptgroupBase {}\n\nexport const McOptgroupMixinBase: CanDisableCtor & typeof McOptgroupBase = mixinDisabled(McOptgroupBase);\n\n// Counter for unique group ids.\nlet uniqueOptgroupIdCounter = 0;\n\n/**\n * Component that is used to group instances of `mc-option`.\n */\n@Component({\n    selector: 'mc-optgroup',\n    exportAs: 'mcOptgroup',\n    templateUrl: 'optgroup.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    styleUrls: ['optgroup.css'],\n    host: {\n        class: 'mc-optgroup',\n        role: 'group',\n        '[class.mc-optgroup-disabled]': 'disabled',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-labelledby]': 'labelId'\n    }\n})\nexport class McOptgroup extends McOptgroupMixinBase implements CanDisable {\n    /** Label for the option group. */\n    @Input() label: string;\n\n    /** Unique id for the underlying label. */\n    labelId: string = `mc-optgroup-label-${uniqueOptgroupIdCounter++}`;\n}\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class McMeasureScrollbarService {\n\n    get scrollBarWidth(): number {\n        if (this._scrollbarWidth) {\n            return this._scrollbarWidth;\n        }\n        this.initScrollBarWidth();\n\n        return this._scrollbarWidth;\n    }\n\n    private _scrollbarWidth: number;\n    private scrollbarMeasure = {\n        position: 'absolute',\n        top: '-9999px',\n        width: '50px',\n        height: '50px',\n        overflow: 'scroll'\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private document: any\n    ) {\n        this.initScrollBarWidth();\n    }\n\n    initScrollBarWidth() {\n        const scrollDiv = this.document.createElement('div');\n\n        // tslint:disable-next-line\n        for (const scrollProp in this.scrollbarMeasure) {\n            if (this.scrollbarMeasure.hasOwnProperty(scrollProp)) {\n                scrollDiv.style[scrollProp] = this.scrollbarMeasure[scrollProp];\n            }\n        }\n\n        this.document.body.appendChild(scrollDiv);\n\n        const width = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n        this.document.body.removeChild(scrollDiv);\n        this._scrollbarWidth = width;\n    }\n}\n","import { NgModule } from '@angular/core';\n\nimport { McPseudoCheckbox } from './pseudo-checkbox/pseudo-checkbox';\n\n\n@NgModule({\n    exports: [McPseudoCheckbox],\n    declarations: [McPseudoCheckbox]\n})\nexport class McPseudoCheckboxModule {}\n\n\nexport * from './pseudo-checkbox/pseudo-checkbox';\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\n\nexport type McPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mc-primary .mc-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mc-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n@Component({\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'mc-pseudo-checkbox',\n    styleUrls: ['pseudo-checkbox.css'],\n    templateUrl: 'pseudo-checkbox.partial.html',\n    host: {\n        class: 'mc-pseudo-checkbox',\n        '[class.mc-indeterminate]': 'state === \"indeterminate\"',\n        '[class.mc-checked]': 'state === \"checked\"',\n        '[class.mc-disabled]': 'disabled'\n    }\n})\nexport class McPseudoCheckbox {\n    @Input() state: McPseudoCheckboxState = 'unchecked';\n\n    @Input() disabled: boolean = false;\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroupDirective, NgForm, FormControl } from '@angular/forms';\n\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n@Injectable()\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\n\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n@Injectable({ providedIn: 'root' })\nexport class ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\n","import { NgModule, Directive, ElementRef, QueryList } from '@angular/core';\n\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(McLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({\n    selector: '[mc-line], [mcLine]',\n    host: { class: 'mc-line' }\n})\nexport class McLine {}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nexport class McLineSetter {\n    constructor(private _lines: QueryList<McLine>, private _element: ElementRef) {\n        this._setLineClass(this._lines.length);\n\n        this._lines.changes.subscribe(() => {\n            this._setLineClass(this._lines.length);\n        });\n    }\n\n    private _setLineClass(count: number): void {\n        this._resetClasses();\n        if (count === 2 || count === 3) {\n            this._setClass(`mc-${count}-line`, true);\n        } else if (count > 3) {\n            this._setClass(`mc-multi-line`, true);\n        }\n    }\n\n    private _resetClasses(): void {\n        this._setClass('mc-2-line', false);\n        this._setClass('mc-3-line', false);\n        this._setClass('mc-multi-line', false);\n    }\n\n    private _setClass(className: string, isAdd: boolean): void {\n        if (isAdd) {\n            this._element.nativeElement.classList.add(className);\n        } else {\n            this._element.nativeElement.classList.remove(className);\n        }\n    }\n}\n\n@NgModule({\n    imports: [],\n    exports: [McLine],\n    declarations: [McLine]\n})\nexport class McLineModule {}\n","import { FormControl, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\nimport { ErrorStateMatcher } from '../error/error-options';\n\nimport { Constructor } from './constructor';\n\n\n/** @docs-private */\nexport interface CanUpdateErrorState {\n\n    readonly stateChanges: Subject<void>;\n\n    errorState: boolean;\n    errorStateMatcher: ErrorStateMatcher;\n\n    updateErrorState();\n}\n\n/** @docs-private */\nexport type CanUpdateErrorStateCtor = Constructor<CanUpdateErrorState>;\n\n/** @docs-private */\nexport interface HasErrorState {\n    parentFormGroup: FormGroupDirective;\n    parentForm: NgForm;\n    defaultErrorStateMatcher: ErrorStateMatcher;\n    ngControl: NgControl;\n}\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T): CanUpdateErrorStateCtor & T {\n    return class extends base {\n        /** Whether the component is in an error state. */\n        errorState: boolean = false;\n\n        /**\n         * Stream that emits whenever the state of the input changes such that the wrapping\n         * `MatFormField` needs to run change detection.\n         */\n        readonly stateChanges = new Subject<void>();\n\n        errorStateMatcher: ErrorStateMatcher;\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this.parentFormGroup || this.parentForm;\n            const matcher = this.errorStateMatcher || this.defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control as FormControl : null;\n            const newState = matcher.isErrorState(control, parent);\n\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n","import { Constructor } from './constructor';\nimport { CanDisable } from './disabled';\n\n\nexport interface HasTabIndex {\n    tabIndex: number;\n}\n\nexport type HasTabIndexCtor = Constructor<HasTabIndex>;\n\n// Mixin to augment a directive with a `tabIndex` property.\nexport function mixinTabIndex<T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0): HasTabIndexCtor & T {\n    return class extends base {\n        get tabIndex(): number {\n            return this.disabled ? -1 : this._tabIndex;\n        }\n\n        set tabIndex(value: number) {\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n\n        private _tabIndex: number = defaultTabIndex;\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n    };\n}\n","import { ElementRef } from '@angular/core';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanColor {\n    color: ThemePalette;\n}\n\n/** @docs-private */\nexport type CanColorCtor = Constructor<CanColor>;\n\nexport interface HasElementRef {\n    _elementRef: ElementRef;\n}\n\nexport enum ThemePalette {\n    Primary = 'primary',\n    Second = 'second',\n    Error = 'error',\n    Default = 'second',\n    Empty = ''\n}\n\n/** Mixin to augment a directive with a `color` property. */\nexport function mixinColor<T extends Constructor<HasElementRef>>(\n    base: T,\n    defaultColor: ThemePalette = ThemePalette.Default\n): CanColorCtor & T {\n    return class extends base {\n\n        private _color: ThemePalette;\n\n        get color(): ThemePalette {\n            return this._color;\n        }\n\n        set color(value: ThemePalette) {\n            const colorPalette = value || defaultColor;\n\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mc-${this._color}`);\n                }\n\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mc-${colorPalette}`);\n                }\n\n                this._color = colorPalette;\n            }\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n\n            this.color = defaultColor;\n        }\n    };\n}\n\n","import { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanDisable {\n    disabled: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableCtor = Constructor<CanDisable>;\n\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): CanDisableCtor & T {\n    return class extends base {\n        get disabled() {\n            return this._disabled;\n        }\n\n        set disabled(value: any) {\n            this._disabled = coerceBooleanProperty(value);\n        }\n\n        private _disabled: boolean = false;\n\n        constructor(...args: any[]) {\n            // tslint:disable-next-line\n            super(...args);\n        }\n    };\n}\n","import { NgModule, InjectionToken, Optional, Inject, isDevMode } from '@angular/core';\nimport { BidiModule } from '@ptsecurity/cdk/bidi';\n\n\n// Injection token that configures whether the Mosaic sanity checks are enabled.\nexport const MC_SANITY_CHECKS = new InjectionToken<boolean>('mc-sanity-checks', {\n    providedIn: 'root',\n    factory: MC_SANITY_CHECKS_FACTORY\n});\n\nexport function MC_SANITY_CHECKS_FACTORY(): boolean {\n    return true;\n}\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Mosaic\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., McTabsModule).\n */\n@NgModule({\n    imports: [ BidiModule ],\n    exports: [ BidiModule ]\n})\nexport class McCommonModule {\n    // Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n    private _hasDoneGlobalChecks = false;\n\n    // Reference to the global `document` object.\n    private _document = typeof document === 'object' && document ? document : null;\n\n    // Reference to the global 'window' object.\n    private _window = typeof window === 'object' && window ? window : null;\n\n    constructor(@Optional() @Inject(MC_SANITY_CHECKS) private _sanityChecksEnabled: boolean) {\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n\n    // Whether any sanity checks are enabled\n    private _areChecksEnabled(): boolean {\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    }\n\n    // Whether the code is running in tests.\n    private _isTestEnv() {\n        // tslint:disable-next-line\n        return this._window && (this._window['__karma__'] || this._window['jasmine']);\n    }\n\n    private _checkDoctypeIsDefined(): void {\n        if (this._document && !this._document.doctype) {\n            console.warn(\n                'Current document does not have a doctype. This may cause ' +\n                'some Mosaic components not to behave as expected.'\n            );\n        }\n    }\n\n    private _checkThemeIsPresent(): void {\n        if (this._document && typeof getComputedStyle === 'function') {\n            const testElement = this._document.createElement('div');\n\n            testElement.classList.add('mc-theme-loaded-marker');\n            this._document.body.appendChild(testElement);\n\n            const computedStyle = getComputedStyle(testElement);\n\n            // In some situations, the computed style of the test element can be null. For example in\n            // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n            if (computedStyle && computedStyle.display !== 'none') {\n                console.warn(\n                    'Could not find Mosaic core theme. Most Mosaic ' +\n                    'components may not work as expected. For more info refer ' +\n                    'to the theming guide: link there'\n                );\n            }\n\n            this._document.body.removeChild(testElement);\n        }\n    }\n}\n","\nexport function isBoolean(val: any): val is boolean { return typeof val === 'boolean'; }\n\nexport function toBoolean(value: any): boolean {\n    return value != null && `${value}` !== 'false';\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n"],"names":["Version","CommonModule","OverlayModule","NgModule","HostBinding","Input","Output","Directionality","Optional","Inject","ViewContainerRef","ScrollDispatcher","NgZone","ElementRef","Overlay","Directive","tslib_1.__assign","overlay","takeUntil","distinctUntilChanged","ComponentPortal","ESCAPE","coerceBooleanProperty","Subject","EventEmitter","InjectionToken","ChangeDetectorRef","ChangeDetectionStrategy","ViewEncapsulation","Component","TemplateRef","BehaviorSubject","A11yModule","ViewChild","Attribute","FocusMonitor","transition","animate","state","style","trigger","NG_VALUE_ACCESSOR","forwardRef","nextUniqueId","tslib_1.__extends","Renderer2","coerceCssPixelValue","coerceNumberProperty","PortalModule","SkipSelf","Injector","Injectable","OverlayConfig","PortalInjector","portal","TemplatePortal","filter","take","merge","BasePortalOutlet","CdkPortalOutlet","FormsModule","PlatformModule","Self","FormGroupDirective","NgForm","NgControl","NG_VALIDATORS","Validators","noop","fromEvent","CdkTreeModule","ContentChild","ViewChildren","CdkConnectedOverlay","ViewportRuler","CdkTree","isDevMode","A","ENTER","SPACE","HOME","END","LEFT_ARROW","RIGHT_ARROW","DOWN_ARROW","UP_ARROW","startWith","SelectionModel","switchMap","defer","map","ContentChildren","ActiveDescendantKeyManager","hasModifierKey","BACKSPACE","FocusKeyManager","DELETE","Subscription","observableOf","ComponentFactoryResolver","PortalHostDirective","CdkPortal","DataSource","CdkTreeNodeOutlet","IterableDiffers","PAGE_DOWN","PAGE_UP","CdkTreeNode","uniqueIdCounter","CdkTreeNodeToggle","CdkTreeNodePadding","CdkTreeNodeDef","UniqueSelectionDispatcher","MIN_PERCENT","MAX_PERCENT","idIterator","debounceTime","Platform","Pipe","DOCUMENT","ModalUtil","Type","OverlayRef","Host","query","group","ApplicationRef","DomPortalOutlet","MC_DATE_FORMATS","DateAdapter","getSupportedInputTypes","NgModel","TAB","NUMPAD_MINUS","DASH","FF_MINUS","NUMPAD_ZERO","NUMPAD_NINE","ZERO","NINE","F1","F12","X","V","C","CheckboxRequiredValidator","delay","tap","EMPTY","animateChild","BidiModule"],"mappings":"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"}