{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@ptsecurity/mosaic/form-field/cleaner.ts","ng://@ptsecurity/mosaic/form-field/form-field-control.ts","ng://@ptsecurity/mosaic/form-field/form-field-errors.ts","ng://@ptsecurity/mosaic/form-field/hint.ts","ng://@ptsecurity/mosaic/form-field/prefix.ts","ng://@ptsecurity/mosaic/form-field/stepper.ts","ng://@ptsecurity/mosaic/form-field/suffix.ts","ng://@ptsecurity/mosaic/form-field/form-field.ts","ng://@ptsecurity/mosaic/form-field/form-field.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","McCleaner","Component","args","selector","exportAs","template","host","class","getMcFormFieldMissingControlError","Error","getMcFormFieldYouCanNotUseCleanerInNumberInputError","nextUniqueId","McHint","this","id","Directive","[attr.id]","Input","McPrefix","McStepper","stepUp","EventEmitter","stepDown","prototype","connectTo","numberInput","subscribe","step","onStepUp","$event","emit","preventDefault","onStepDown","Output","McSuffix","_elementRef","McFormFieldMixinBase","mixinColor","McFormFieldBase","McFormField","_changeDetectorRef","_this","_super","call","labelId","hovered","canCleanerClearByEsc","__","constructor","create","__extends","defineProperty","hint","length","suffix","prefix","cleaner","stepper","hasCleaner","control","ngControl","value","disabled","focused","ngAfterContentInit","validateControlChild","controlType","nativeElement","classList","add","stateChanges","pipe","startWith","markForCheck","hasStepper","valueChanges","EMPTY","merge","ngAfterContentChecked","ngAfterViewInit","detectChanges","clearValue","stopPropagation","reset","focus","onContainerClick","onKeyDown","event","keyCode","ESCAPE","onHoverChanged","isHovered","getConnectedOverlayOrigin","connectionContainerRef","shouldForward","prop","[class.mc-form-field_invalid]","[class.mc-form-field_has-prefix]","[class.mc-form-field_has-suffix]","[class.mc-form-field_has-cleaner]","[class.mc-form-field_has-stepper]","[class.mc-disabled]","[class.mc-focused]","[class.ng-untouched]","[class.ng-touched]","[class.ng-pristine]","[class.ng-dirty]","[class.ng-valid]","[class.ng-invalid]","[class.ng-pending]","(keydown)","(mouseenter)","(mouseleave)","inputs","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","ElementRef","ChangeDetectorRef","ContentChild","McFormFieldControl","static","ContentChildren","ViewChild","McFormFieldWithoutBorders","McFormFieldModule","NgModule","declarations","imports","CommonModule","McIconModule","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-cleaner',\n    exportAs: 'mcCleaner',\n    template: '<i class=\"mc-icon_light\" mc-icon=\"mc-close-M_16\" color=\"second\"></i>',\n    host: {\n        class: 'mc-cleaner'\n    }\n})\nexport class McCleaner {}\n","import { NgControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\n// tslint:disable-next-line:naming-convention\nexport abstract class McFormFieldControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** The element ID for this control. */\n    readonly id: string;\n\n    /** The placeholder for this control. */\n    readonly placeholder: string;\n\n    /** Gets the NgControl for this control. */\n    readonly ngControl: NgControl | null;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Whether the control is empty. */\n    readonly empty: boolean;\n\n    /** Whether the control is required. */\n    readonly required: boolean;\n\n    /** Whether the control is disabled. */\n    readonly disabled: boolean;\n\n    /** Whether the control is in an error state. */\n    readonly errorState: boolean;\n\n    /**\n     * An optional name for the control type that can be used to distinguish `mc-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mc-form-field-type-{{controlType}}` to its root element.\n     */\n    readonly controlType?: string;\n\n    /** Handles a click on the control's container. */\n    abstract onContainerClick(event: MouseEvent): void;\n\n    abstract focus(): void;\n}\n","export function getMcFormFieldMissingControlError(): Error {\n  return Error('mc-form-field must contain a McFormFieldControl.');\n}\n\nexport function getMcFormFieldYouCanNotUseCleanerInNumberInputError(): Error {\n  return Error(`You can't use mc-cleaner with input that have type=\"number\"`);\n}\n","import { Directive, Input } from '@angular/core';\n\n\nlet nextUniqueId = 0;\n\n@Directive({\n    selector: 'mc-hint',\n    host: {\n        class: 'mc-hint',\n        '[attr.id]': 'id'\n    }\n})\nexport class McHint {\n    @Input() id: string = `mc-hint-${nextUniqueId++}`;\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcPrefix]'\n})\nexport class McPrefix {}\n","import { Component, EventEmitter, Output } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-stepper',\n    template: `\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-up mc-angle-down-L_16\"\n           (mousedown)=\"onStepUp($event)\">\n        </i>\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-down mc-angle-down-L_16\"\n           (mousedown)=\"onStepDown($event)\">\n        </i>\n    `\n})\nexport class McStepper {\n    @Output()\n    readonly stepUp: EventEmitter<void> = new EventEmitter<void>();\n    @Output()\n    readonly stepDown: EventEmitter<void> = new EventEmitter<void>();\n\n    connectTo(numberInput: any) {\n        if (!numberInput) { return; }\n\n        this.stepUp.subscribe(() => {\n            numberInput.stepUp(numberInput.step);\n        });\n\n        this.stepDown.subscribe(() => {\n            numberInput.stepDown(numberInput.step);\n        });\n    }\n\n    onStepUp($event: MouseEvent) {\n        this.stepUp.emit();\n        $event.preventDefault();\n    }\n\n    onStepDown($event: MouseEvent) {\n        this.stepDown.emit();\n        $event.preventDefault();\n    }\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcSuffix]'\n})\nexport class McSuffix {}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren,\n    Directive,\n    ElementRef,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { CanColor, CanColorCtor, mixinColor } from '@ptsecurity/mosaic/core';\nimport { EMPTY, merge } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\nimport { McCleaner } from './cleaner';\nimport { McFormFieldControl } from './form-field-control';\nimport {\n    getMcFormFieldMissingControlError,\n    getMcFormFieldYouCanNotUseCleanerInNumberInputError\n} from './form-field-errors';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\nlet nextUniqueId = 0;\n\nexport class McFormFieldBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {}\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McFormFieldMixinBase: CanColorCtor & typeof McFormFieldBase = mixinColor(McFormFieldBase);\n\n@Component({\n    selector: 'mc-form-field',\n    exportAs: 'mcFormField',\n    templateUrl: 'form-field.html',\n    // McInput is a directive and can't have styles, so we need to include its styles here.\n    // The McInput styles are fairly minimal so it shouldn't be a big deal for people who\n    // aren't using McInput.\n    styleUrls: [\n        'form-field.scss',\n        '../input/input.scss',\n        '../textarea/textarea.scss'\n    ],\n    host: {\n        class: 'mc-form-field',\n        '[class.mc-form-field_invalid]': 'control.errorState',\n        '[class.mc-form-field_has-prefix]': 'hasPrefix',\n        '[class.mc-form-field_has-suffix]': 'hasSuffix',\n        '[class.mc-form-field_has-cleaner]': 'canShowCleaner',\n        '[class.mc-form-field_has-stepper]': 'canShowStepper',\n        '[class.mc-disabled]': 'control.disabled',\n        '[class.mc-focused]': 'control.focused',\n        '[class.ng-untouched]': 'shouldForward(\"untouched\")',\n        '[class.ng-touched]': 'shouldForward(\"touched\")',\n        '[class.ng-pristine]': 'shouldForward(\"pristine\")',\n        '[class.ng-dirty]': 'shouldForward(\"dirty\")',\n        '[class.ng-valid]': 'shouldForward(\"valid\")',\n        '[class.ng-invalid]': 'shouldForward(\"invalid\")',\n        '[class.ng-pending]': 'shouldForward(\"pending\")',\n        '(keydown)': 'onKeyDown($event)',\n        '(mouseenter)': 'onHoverChanged(true)',\n        '(mouseleave)': 'onHoverChanged(false)'\n    },\n    inputs: ['color'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McFormField extends McFormFieldMixinBase implements\n    AfterContentInit, AfterContentChecked, AfterViewInit, CanColor {\n\n    @ContentChild(McFormFieldControl, { static: false }) control: McFormFieldControl<any>;\n    @ContentChild(McStepper, { static: false }) stepper: McStepper;\n    @ContentChild(McCleaner, { static: false }) cleaner: McCleaner | null;\n\n    @ContentChildren(McHint) hint: QueryList<McHint>;\n    @ContentChildren(McSuffix) suffix: QueryList<McSuffix>;\n    @ContentChildren(McPrefix) prefix: QueryList<McPrefix>;\n\n    @ViewChild('connectionContainer', { static: true }) connectionContainerRef: ElementRef;\n\n    // Unique id for the internal form field label.\n    labelId = `mc-form-field-label-${nextUniqueId++}`;\n\n    hovered: boolean = false;\n\n    canCleanerClearByEsc: boolean = true;\n\n    get hasHint(): boolean {\n        return this.hint && this.hint.length > 0;\n    }\n\n    get hasSuffix(): boolean {\n        return this.suffix && this.suffix.length > 0;\n    }\n\n    get hasPrefix(): boolean {\n        return this.prefix && this.prefix.length > 0;\n    }\n\n    get hasCleaner(): boolean {\n        return !!this.cleaner;\n    }\n\n    get hasStepper(): boolean {\n        return !!this.stepper;\n    }\n\n    get canShowCleaner(): boolean {\n        return this.hasCleaner &&\n        this.control &&\n        this.control.ngControl\n            ? this.control.ngControl.value && !this.control.disabled\n            : false;\n    }\n\n    get disabled(): boolean {\n        return this.control && this.control.disabled;\n    }\n\n    get canShowStepper(): boolean {\n        return this.control && !this.disabled && (this.control.focused || this.hovered);\n    }\n\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {\n        super(_elementRef);\n    }\n\n    ngAfterContentInit() {\n        if ((this.control as any).numberInput && this.hasCleaner) {\n            this.cleaner = null;\n            throw getMcFormFieldYouCanNotUseCleanerInNumberInputError();\n        }\n\n        this.validateControlChild();\n\n        if (this.control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mc-form-field-type-${this.control.controlType}`);\n        }\n\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        this.control.stateChanges\n            .pipe(startWith())\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n\n        if (this.hasStepper) {\n            this.stepper.connectTo((this.control as any).numberInput);\n        }\n\n        // Run change detection if the value changes.\n        const valueChanges = this.control.ngControl && this.control.ngControl.valueChanges || EMPTY;\n\n        merge(valueChanges)\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n\n    ngAfterContentChecked() {\n        this.validateControlChild();\n    }\n\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._changeDetectorRef.detectChanges();\n    }\n\n    clearValue($event) {\n        $event.stopPropagation();\n\n        if (this.control && this.control.ngControl) {\n            this.control.ngControl.reset();\n            this.control.focus();\n        }\n    }\n\n    onContainerClick($event) {\n        if (this.control.onContainerClick) {\n            this.control.onContainerClick($event);\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n        // tslint:disable-next-line:deprecation\n        if (this.canCleanerClearByEsc && event.keyCode === ESCAPE && this.control.focused && this.hasCleaner) {\n            if (this.control && this.control.ngControl) {\n                this.control.ngControl.reset();\n            }\n\n            event.preventDefault();\n        }\n    }\n\n    onHoverChanged(isHovered: boolean) {\n        if (isHovered !== this.hovered) {\n            this.hovered = isHovered;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     */\n    getConnectedOverlayOrigin(): ElementRef {\n        return this.connectionContainerRef || this._elementRef;\n    }\n\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    shouldForward(prop: keyof NgControl): boolean {\n        const ngControl = this.control ? this.control.ngControl : null;\n\n        return ngControl && ngControl[prop];\n    }\n\n    /** Throws an error if the form field's control is missing. */\n    protected validateControlChild() {\n        if (!this.control) {\n            throw getMcFormFieldMissingControlError();\n        }\n    }\n}\n\n@Directive({\n    selector: 'mc-form-field[mcFormFieldWithoutBorders]',\n    exportAs: 'mcFormFieldWithoutBorders',\n    host: { class: 'mc-form-field_without-borders' }\n})\nexport class McFormFieldWithoutBorders {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCleaner } from './cleaner';\nimport { McFormField, McFormFieldWithoutBorders } from './form-field';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\n@NgModule({\n    declarations: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ],\n    imports: [CommonModule, McIconModule],\n    exports: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ]\n})\nexport class McFormFieldModule {\n}\n"]}