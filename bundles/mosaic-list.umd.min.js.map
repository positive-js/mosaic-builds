{"version":3,"file":"mosaic-list.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/lib/list/list-selection.component.ts","../../src/lib/list/list.component.ts","../../src/lib/list/list.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n    QueryList,\n    ViewEncapsulation,\n    ChangeDetectorRef,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\n\nimport { FocusKeyManager, IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { END, ENTER, HOME, PAGE_DOWN, PAGE_UP, SPACE } from '@ptsecurity/cdk/keycodes';\n\nimport {\n    McLine,\n    McLineSetter,\n    CanDisable,\n    mixinDisabled,\n    toBoolean, CanDisableCtor\n} from '@ptsecurity/mosaic/core';\n\n\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\n@Component({\n    exportAs: 'mcListOption',\n    selector: 'mc-list-option',\n    host: {\n        tabindex: '-1',\n\n        class: 'mc-list-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n        '(click)': '_handleClick()'\n    },\n    templateUrl: 'list-option.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListOption implements AfterContentInit, OnDestroy, OnInit, IFocusableOption {\n    _hasFocus: boolean = false;\n\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    @ViewChild('text') _text: ElementRef;\n\n    // Whether the label should appear before or after the checkbox. Defaults to 'after'\n    @Input() checkboxPosition: 'before' | 'after' = 'after';\n\n    @Input() value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled || (this.listSelection && this.listSelection.disabled);\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.listSelection.selectedOptions && this.listSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            this.listSelection._reportValueChange();\n        }\n    }\n\n    private _lineSetter: McLineSetter;\n    private _selected = false;\n    private _disabled = false;\n\n    constructor(\n        private _element: ElementRef,\n        private _changeDetector: ChangeDetectorRef,\n        @Inject(forwardRef(() => McListSelection))\n        public listSelection: McListSelection\n    ) {}\n\n    ngOnInit() {\n        if (this._selected) {\n            // List options that are selected at initialization can't be reported properly to the form\n            // control. This is because it takes some time until the selection-list knows about all\n            // available options. Also it can happen that the ControlValueAccessor has an initial value\n            // that should be used instead. Deferring the value change report to the next tick ensures\n            // that the form control value is not being overwritten.\n            const wasSelected = this._selected;\n\n            Promise.resolve().then(() => {\n                if (this._selected || wasSelected) {\n                    this.selected = true;\n                    this._changeDetector.markForCheck();\n                }\n            });\n        }\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    ngOnDestroy(): void {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => this.selected = false);\n        }\n\n        this.listSelection._removeOptionFromList(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    focus(): void {\n        this._element.nativeElement.focus();\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    getLabel() {\n        return this._text ? this._text.nativeElement.textContent : '';\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.listSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.listSelection.selectedOptions.select(this);\n        } else {\n            this.listSelection.selectedOptions.deselect(this);\n        }\n\n        this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleClick() {\n        if (this.disabled) { return; }\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    _handleFocus() {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur() {\n        this._hasFocus = false;\n\n        this.listSelection._onTouched();\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n\n\nexport const MC_SELECTION_LIST_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McListSelection),\n    multi: true\n};\n\n// Change event that is being fired whenever the selected state of an option changes. */\nexport class McListSelectionChange {\n    constructor(\n        // Reference to the selection list that emitted the event.\n        public source: McListSelection,\n        // Reference to the option that has been changed.\n        public option: McListOption\n    ) {}\n}\n\n\nexport class McListSelectionBase {}\n\nexport const _McListSelectionMixinBase: CanDisableCtor & typeof McListSelectionBase\n    = mixinDisabled(McListSelectionBase);\n\n@Component({\n    exportAs: 'mcListSelection',\n    selector: 'mc-list-selection',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-list-selection',\n        '[tabIndex]': 'tabIndex',\n        '(focus)': 'focus()',\n        '(blur)': '_onTouched()',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    providers: [MC_SELECTION_LIST_VALUE_ACCESSOR],\n    preserveWhitespaces: false\n})\nexport class McListSelection extends _McListSelectionMixinBase implements\n    IFocusableOption, CanDisable, AfterContentInit, ControlValueAccessor {\n\n    _keyManager: FocusKeyManager<McListOption>;\n\n    // The option components contained within this selection-list.\n    @ContentChildren(McListOption) options: QueryList<McListOption>;\n\n    tabIndex: number;\n\n    autoSelect: boolean;\n    noUnselect: boolean;\n    multiple: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input() horizontal: boolean = false;\n\n    // Emits a change event whenever the selected state of an option changes.\n    @Output() readonly selectionChange: EventEmitter<McListSelectionChange> = new EventEmitter<McListSelectionChange>();\n\n    selectedOptions: SelectionModel<McListOption>;\n\n    // Used for storing the values that were assigned before the options were initialized.\n    private _tempValues: string[] | null;\n\n    private _modelChanges = Subscription.EMPTY;\n\n    constructor(\n        private _element: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string,\n        @Attribute('multiple') multiple: string\n    ) {\n        super();\n\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.selectedOptions = new SelectionModel<McListOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.horizontal = toBoolean(this.horizontal);\n\n        this._keyManager = new FocusKeyManager<McListOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(!this.horizontal)\n            .withHorizontalOrientation(this.horizontal ? 'ltr' : null);\n\n        if (this._tempValues) {\n            this._setOptionsFromValues(this._tempValues);\n            this._tempValues = null;\n        }\n\n        // Sync external changes to the model back to the options.\n        this._modelChanges = this.selectedOptions.onChange!.subscribe((event) => {\n            for (const item of event.added) {\n                item.selected = true;\n            }\n\n            for (const item of event.removed) {\n                item.selected = false;\n            }\n        });\n\n        this.updateScrollSize();\n    }\n\n    ngOnDestroy() {\n        this._modelChanges.unsubscribe();\n    }\n\n    focus() {\n        this._element.nativeElement.focus();\n    }\n\n    selectAll() {\n        this.options.forEach((option) => option.setSelected(true));\n\n        this._reportValueChange();\n    }\n\n    deselectAll() {\n        this.options.forEach((option) => option.setSelected(false));\n\n        this._reportValueChange();\n    }\n\n    updateScrollSize(): void {\n        if (this.horizontal || !this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    // Sets the focused option of the selection-list.\n    setFocusedOption(option: McListOption): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitChangeEvent(option);\n        this._reportValueChange();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(values: string[]): void {\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        } else {\n            this._tempValues = values;\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this._onTouched = fn;\n    }\n\n    // Implemented as a part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        if (this.options) {\n            this.options.forEach((option) => option.disabled = isDisabled);\n        }\n    }\n\n    getSelectedOptionValues(): string[] {\n        return this.options.filter((option) => option.selected).map((option) => option.value);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McListOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    _canDeselectLast(listOption: McListOption): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && listOption.selected);\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    // View to model callback that should be called if the list or its options lost focus.\n    _onTouched: () => void = () => {};\n\n    // Removes an option from the selection list and updates the active item.\n    _removeOptionFromList(option: McListOption) {\n        if (option._hasFocus) {\n            const optionIndex = this._getOptionIndex(option);\n\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.setPreviousItemActive();\n            } else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.setNextItemActive();\n            }\n        }\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                if (!this.horizontal) { this._keyManager.setPreviousPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                if (!this.horizontal) { this._keyManager.setNextPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    // Reports a value change to the ControlValueAccessor\n    _reportValueChange() {\n        if (this.options) {\n            this._onChange(this.getSelectedOptionValues());\n        }\n    }\n\n    // Emits a change event if the selected state of an option changed.\n    _emitChangeEvent(option: McListOption) {\n        this.selectionChange.emit(new McListSelectionChange(this, option));\n    }\n\n    // Returns the option with the specified value.\n    private _getOptionByValue(value: string): McListOption | undefined {\n        return this.options.find((option) => option.value === value);\n    }\n\n    // Sets the selected options based on the specified values.\n    private _setOptionsFromValues(values: string[]) {\n        this.options.forEach((option) => option.setSelected(false));\n\n        values\n            .map((value) => this._getOptionByValue(value))\n            .filter(Boolean)\n            .forEach((option) => option!.setSelected(true));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    // Returns the index of the specified list option.\n    private _getOptionIndex(option: McListOption): number {\n        return this.options.toArray().indexOf(option);\n    }\n\n    // View to model callback that should be called whenever the selected options change.\n    private _onChange: (value: any) => void = (_: any) => {};\n}\n","// todo пока не делаем, перенесено из материала, но у нас в доках таких простых списков нет.\nimport {\n    AfterContentInit, ChangeDetectionStrategy, Component, ContentChildren, Directive, ElementRef, QueryList,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { McLine, McLineSetter } from '@ptsecurity/mosaic/core';\n\n\nexport class McListBase {}\n\n@Component({\n    selector: 'mc-list',\n    host: { class: 'mc-list' },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McList extends McListBase {}\n\n\n/**\n * Directive whose purpose is to add the mc- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n    selector: '[mc-subheader], [mcSubheader]',\n    host: { class: 'mc-subheader' }\n})\nexport class McListSubheaderCssStyler {}\n\n\n// Boilerplate for applying mixins to McListItem.\nexport class McListItemBase {}\n\n@Component({\n    selector: 'mc-list-item, a[mc-list-item]',\n    host: {\n        class: 'mc-list-item',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()'\n    },\n    templateUrl: './list-item.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListItem extends McListItemBase implements AfterContentInit {\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    private _lineSetter: McLineSetter;\n\n    constructor(private _element: ElementRef) {\n        super();\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    _handleFocus() {\n        this._element.nativeElement.classList.add('mc-focused');\n    }\n\n    _handleBlur() {\n        this._element.nativeElement.classList.remove('mc-focused');\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLineModule } from '@ptsecurity/mosaic/core';\n\nimport { McListSelection, McListOption } from './list-selection.component';\nimport { McList, McListItem, McListSubheaderCssStyler } from './list.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        McLineModule\n    ],\n    exports: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ],\n    declarations: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ]\n})\nexport class McListModule {}\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","setPrototypeOf","__proto__","Array","p","hasOwnProperty","McListOption","_element","_changeDetector","listSelection","_hasFocus","checkboxPosition","_selected","_disabled","get","disabled","set","value","newValue","toBoolean","markForCheck","selectedOptions","isSelected","setSelected","_reportValueChange","ngOnInit","_this","wasSelected_1","Promise","resolve","then","selected","ngAfterContentInit","_lineSetter","McLineSetter","_lines","ngOnDestroy","_removeOptionFromList","toggle","focus","nativeElement","setFocusedOption","getLabel","_text","textContent","select","deselect","_getHeight","getClientRects","height","_handleClick","_handleFocus","_handleBlur","_onTouched","_getHostElement","tslib_1.__decorate","ContentChildren","McLine","tslib_1.__metadata","QueryList","ViewChild","ElementRef","Input","Component","exportAs","selector","host","tabindex","class","[class.mc-selected]","[class.mc-focused]","(focus)","(blur)","(click)","template","encapsulation","ViewEncapsulation","None","preserveWhitespaces","changeDetection","ChangeDetectionStrategy","OnPush","tslib_1.__param","Inject","forwardRef","McListSelection","ChangeDetectorRef","MC_SELECTION_LIST_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","multi","McListSelectionChange","source","option","McListSelectionBase","_McListSelectionMixinBase","mixinDisabled","_super","tabIndex","autoSelect","noUnselect","multiple","call","horizontal","selectionChange","EventEmitter","_modelChanges","Subscription","EMPTY","_onChange","_","parseInt","SelectionModel","tslib_1.__extends","_keyManager","FocusKeyManager","options","withTypeAhead","withVerticalOrientation","withHorizontalOrientation","_tempValues","_setOptionsFromValues","onChange","subscribe","event","_i","_a","added","item","_b","_c","removed","updateScrollSize","unsubscribe","selectAll","forEach","deselectAll","first","withScrollSize","Math","floor","updateActiveItem","withShift","previousIndex_1","previousActiveItemIndex","activeIndex_1","activeItemIndex","index","withCtrl","_canDeselectLast","_emitChangeEvent","writeValue","values","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","getSelectedOptionValues","filter","map","toggleFocusedOption","focusedIndex","_isValidIndex","focusedOption","toArray","listOption","optionIndex","_getOptionIndex","setPreviousItemActive","setNextItemActive","_onKeyDown","keyCode","shiftKey","ctrlKey","SPACE","ENTER","preventDefault","HOME","setFirstItemActive","END","setLastItemActive","PAGE_UP","setPreviousPageItemActive","PAGE_DOWN","setNextPageItemActive","onKeydown","emit","_getOptionByValue","find","Boolean","indexOf","Output","styles","inputs","[tabIndex]","(keydown)","(window:resize)","providers","Attribute","String","McListBase","McList","McListSubheaderCssStyler","Directive","McListItemBase","McListItem","classList","add","remove","McListModule","NgModule","imports","CommonModule","A11yModule","McLineModule","exports","declarations"],"mappings":"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"}