{"version":3,"file":"mosaic-list.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/lib/list/list-selection.component.ts","../../src/lib/list/list.component.ts","../../src/lib/list/list.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy, ChangeDetectorRef,\n    Component, ContentChildren,\n    ElementRef, EventEmitter, forwardRef, Inject, Input,\n    OnDestroy, OnInit, Optional, Output, QueryList, ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { FocusKeyManager, IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { END, ENTER, HOME, SPACE } from '@ptsecurity/cdk/keycodes';\n\nimport { CanDisable, mixinDisabled, HasTabIndex,\n    mixinTabIndex, McLine, McLineSetter, toBoolean } from '@ptsecurity/mosaic/core';\n\n\nexport class McListOptionBase {}\n\nexport const MAT_SELECTION_LIST_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McListSelection),\n    multi: true\n};\n\n/**\n * Change event object emitted by McListOption whenever the selected state changes.\n * @deprecated Use the `McListSelectionChange` event on the selection list instead.\n * @deletion-target 6.0.0\n */\nexport class McListOptionChange {\n    constructor(\n        // Reference to the list option that changed.\n        public source: McListOption,\n        // The new selected state of the option.\n        public selected: boolean\n    ) {}\n}\n\n// Change event that is being fired whenever the selected state of an option changes. */\nexport class McListSelectionChange {\n    constructor(\n        // Reference to the selection list that emitted the event.\n        public source: McListSelection,\n        // Reference to the option that has been changed.\n        public option: McListOption\n    ) {}\n}\n\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\n@Component({\n    selector: 'mc-list-option',\n    host: {\n        role: 'option',\n        tabindex: '-1',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n        '(click)': '_handleClick()',\n\n        class: 'mc-list-option',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-selected]': '_selected',\n        '[class.mc-focused]': '_hasFocus',\n        '[attr.disabled]': 'disabled'\n    },\n    templateUrl: 'list-option.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListOption extends McListOptionBase\n    implements AfterContentInit, OnDestroy, OnInit, IFocusableOption {\n\n    // Whether the option has focus.\n    _hasFocus: boolean = false;\n\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    // DOM element containing the item's text.\n    @ViewChild('text') _text: ElementRef;\n\n    // Whether the label should appear before or after the checkbox. Defaults to 'after'\n    @Input() checkboxPosition: 'before' | 'after' = 'after';\n\n    // Value of the option\n    @Input() value: any;\n\n    // Whether the option is disabled.\n    @Input()\n    get disabled() {\n        return this._disabled || (this.selectionList && this.selectionList.disabled);\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    // Whether the option is selected.\n    @Input()\n    get selected(): boolean {\n        return this.selectionList.selectedOptions.isSelected(this);\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this._setSelected(isSelected);\n            this.selectionList._reportValueChange();\n        }\n    }\n\n    /**\n     * Emits a change event whenever the selected state of an option changes.\n     * @deprecated Use the `selectionChange` event on the `<mc-selection-list>` instead.\n     * @deletion-target 6.0.0\n     */\n    @Output() readonly selectionChange: EventEmitter<McListOptionChange> =\n        new EventEmitter<McListOptionChange>();\n\n    _selected: boolean = false;\n\n    private _lineSetter: McLineSetter;\n    private _disabled: boolean = false;\n\n    constructor(\n        private _element: ElementRef,\n        private _changeDetector: ChangeDetectorRef,\n        @Optional() @Inject(forwardRef(() => McListSelection))\n        public selectionList: McListSelection\n    ) {\n        super();\n    }\n\n    ngOnInit() {\n        if (this._selected) {\n            // List options that are selected at initialization can't be reported properly to the form\n            // control. This is because it takes some time until the selection-list knows about all\n            // available options. Also it can happen that the ControlValueAccessor has an initial value\n            // that should be used instead. Deferring the value change report to the next tick ensures\n            // that the form control value is not being overwritten.\n            Promise.resolve().then(() => this.selected = true);\n        }\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    ngOnDestroy(): void {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => this.selected = false);\n        }\n\n        this.selectionList._removeOptionFromList(this);\n    }\n\n    // Toggles the selection state of the option.\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    // Allows for programmatic focusing of the option.\n    focus(): void {\n        this._element.nativeElement.focus();\n    }\n\n    /**\n     * Returns the list item's text label. Implemented as a part of the FocusKeyManager.\n     * @docs-private\n     */\n    getLabel() {\n        return this._text ? this._text.nativeElement.textContent : '';\n    }\n\n    _handleClick() {\n        if (!this.disabled) {\n            this.toggle();\n\n            // Emit a change event if the selected state of the option changed through user interaction.\n            this.selectionList._emitChangeEvent(this);\n\n            // TODO: the `selectionChange` event on the option is deprecated. Remove that in the future.\n            this._emitDeprecatedChangeEvent();\n        }\n    }\n\n    _handleFocus() {\n        if (this.disabled) { return; }\n\n        this._hasFocus = true;\n        this.selectionList._setFocusedOption(this);\n    }\n\n    _handleBlur() {\n        this._hasFocus = false;\n        this.selectionList._onTouched();\n    }\n\n    // Retrieves the DOM element of the component host.\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n\n    // Sets the selected state of the option.\n    _setSelected(selected: boolean) {\n        if (selected === this._selected) {\n            return;\n        }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.selectionList.selectedOptions.select(this);\n        } else {\n            this.selectionList.selectedOptions.deselect(this);\n        }\n\n        this._changeDetector.markForCheck();\n    }\n\n    // Emits a selectionChange event for this option.\n    _emitDeprecatedChangeEvent() {\n        // TODO: the `selectionChange` event on the option is deprecated. Remove that in the future.\n        this.selectionChange.emit(new McListOptionChange(this, this.selected));\n    }\n}\n\n\nexport class McListSelectionBase {}\n\nexport const _McListSelectionMixinBase = mixinTabIndex(mixinDisabled(McListSelectionBase));\n\n@Component({\n    selector: 'mc-list-selection',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-list-selection',\n        '[tabIndex]': 'tabIndex',\n        '(focus)': 'focus()',\n        '(blur)': '_onTouched()',\n        '(keydown)': '_keydown($event)'\n    },\n    providers: [MAT_SELECTION_LIST_VALUE_ACCESSOR],\n    preserveWhitespaces: false\n})\nexport class McListSelection extends _McListSelectionMixinBase implements\n    IFocusableOption, CanDisable, HasTabIndex, AfterContentInit, ControlValueAccessor {\n\n    // The FocusKeyManager which handles focus.\n    _keyManager: FocusKeyManager<McListOption>;\n\n    // The option components contained within this selection-list.\n    @ContentChildren(McListOption) options: QueryList<McListOption>;\n\n    // Emits a change event whenever the selected state of an option changes.\n    @Output() readonly selectionChange: EventEmitter<McListSelectionChange> =\n        new EventEmitter<McListSelectionChange>();\n\n    // The currently selected options.\n    selectedOptions: SelectionModel<McListOption> = new SelectionModel<McListOption>(true);\n\n    // Used for storing the values that were assigned before the options were initialized.\n    private _tempValues: string[]|null;\n\n    constructor(private _element: ElementRef, @Attribute('tabindex') tabIndex: string) {\n        super();\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngAfterContentInit(): void {\n        this._keyManager = new FocusKeyManager<McListOption>(this.options).withWrap().withTypeAhead();\n\n        if (this._tempValues) {\n            this._setOptionsFromValues(this._tempValues);\n            this._tempValues = null;\n        }\n    }\n\n    // Focus the selection-list.\n    focus() {\n        this._element.nativeElement.focus();\n    }\n\n    // Selects all of the options.\n    selectAll() {\n        this.options.forEach((option) => option._setSelected(true));\n        this._reportValueChange();\n    }\n\n    // Deselects all of the options.\n    deselectAll() {\n        this.options.forEach((option) => option._setSelected(false));\n        this._reportValueChange();\n    }\n\n    // View to model callback that should be called if the list or its options lost focus.\n    _onTouched: () => void = () => {};\n\n    // Sets the focused option of the selection-list.\n    _setFocusedOption(option: McListOption) {\n        this._keyManager.updateActiveItemIndex(this._getOptionIndex(option));\n    }\n\n    // Removes an option from the selection list and updates the active item.\n    _removeOptionFromList(option: McListOption) {\n        if (option._hasFocus) {\n            const optionIndex = this._getOptionIndex(option);\n\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.setPreviousItemActive();\n            } else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.setNextItemActive();\n            }\n        }\n    }\n\n    // Passes relevant key presses to our key manager.\n    _keydown(event: KeyboardEvent) {\n        switch (event.keyCode) {\n            case SPACE:\n            case ENTER:\n                this._toggleSelectOnFocusedOption();\n                // Always prevent space from scrolling the page since the list has focus\n                event.preventDefault();\n                break;\n            case HOME:\n            case END:\n                event.keyCode === HOME ? this._keyManager.setFirstItemActive() : this._keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    // Reports a value change to the ControlValueAccessor\n    _reportValueChange() {\n        if (this.options) {\n            this._onChange(this._getSelectedOptionValues());\n        }\n    }\n\n    // Emits a change event if the selected state of an option changed.\n    _emitChangeEvent(option: McListOption) {\n        this.selectionChange.emit(new McListSelectionChange(this, option));\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(values: string[]): void {\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        } else {\n            this._tempValues = values;\n        }\n    }\n\n    // Implemented as a part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        if (this.options) {\n            this.options.forEach((option) => option.disabled = isDisabled);\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this._onTouched = fn;\n    }\n\n    // Returns the option with the specified value.\n    private _getOptionByValue(value: string): McListOption | undefined {\n        return this.options.find((option) => option.value === value);\n    }\n\n    // Sets the selected options based on the specified values.\n    private _setOptionsFromValues(values: string[]) {\n        this.options.forEach((option) => option._setSelected(false));\n\n        values\n            .map((value) => this._getOptionByValue(value))\n            .filter(Boolean)\n            .forEach((option) => option!._setSelected(true));\n    }\n\n    // Returns the values of the selected options.\n    private _getSelectedOptionValues(): string[] {\n        return this.options.filter((option) => option.selected).map((option) => option.value);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    private _toggleSelectOnFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McListOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user\n                // interaction.\n                this._emitChangeEvent(focusedOption);\n\n                // TODO: the `selectionChange` event on the option is deprecated. Remove that in the future.\n                focusedOption._emitDeprecatedChangeEvent();\n            }\n        }\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    // Returns the index of the specified list option.\n    private _getOptionIndex(option: McListOption): number {\n        return this.options.toArray().indexOf(option);\n    }\n\n    // View to model callback that should be called whenever the selected options change.\n    private _onChange: (value: any) => void = (_: any) => {};\n\n}\n","// todo пока не делаем, перенесено из материала, но у нас в доках таких простых списков нет.\nimport {\n    AfterContentInit, ChangeDetectionStrategy, Component, ContentChildren, Directive, ElementRef, QueryList,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { McLine, McLineSetter } from '@ptsecurity/mosaic/core';\n\n\nexport class McListBase {}\n\n@Component({\n    selector: 'mc-list',\n    host: { class: 'mc-list' },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McList extends McListBase {}\n\n\n/**\n * Directive whose purpose is to add the mc- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n    selector: '[mc-subheader], [mcSubheader]',\n    host: { class: 'mc-subheader' }\n})\nexport class McListSubheaderCssStyler {}\n\n\n// Boilerplate for applying mixins to McListItem.\nexport class McListItemBase {}\n\n// An item within a Material Design list.\n@Component({\n    selector: 'mc-list-item, a[mc-list-item]',\n    host: {\n        class: 'mc-list-item',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()'\n    },\n    templateUrl: './list-item.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListItem extends McListItemBase implements AfterContentInit {\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    private _lineSetter: McLineSetter;\n\n    constructor(private _element: ElementRef) {\n        super();\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    _handleFocus() {\n        this._element.nativeElement.classList.add('mc-focused');\n    }\n\n    _handleBlur() {\n        this._element.nativeElement.classList.remove('mc-focused');\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McLineModule, McPseudoCheckboxModule } from '@ptsecurity/mosaic/core';\n\nimport { McListSelection, McListOption } from './list-selection.component';\nimport { McList, McListItem, McListSubheaderCssStyler} from './list.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule,\n        A11yModule,\n        McPseudoCheckboxModule,\n        McLineModule\n    ],\n    exports: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ],\n    declarations: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ]\n})\nexport class McListModule {}\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","setPrototypeOf","__proto__","Array","p","hasOwnProperty","McListOptionBase","MAT_SELECTION_LIST_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","McListSelection","multi","McListOptionChange","source","selected","McListSelectionChange","option","McListOption","_element","_changeDetector","selectionList","_this","_super","call","_hasFocus","checkboxPosition","selectionChange","EventEmitter","_selected","_disabled","tslib_1.__extends","defineProperty","disabled","value","newValue","toBoolean","markForCheck","selectedOptions","isSelected","_setSelected","_reportValueChange","ngOnInit","Promise","resolve","then","ngAfterContentInit","_lineSetter","McLineSetter","_lines","ngOnDestroy","_removeOptionFromList","toggle","focus","nativeElement","getLabel","_text","textContent","_handleClick","_emitChangeEvent","_emitDeprecatedChangeEvent","_handleFocus","_setFocusedOption","_handleBlur","_onTouched","_getHostElement","select","deselect","emit","type","Component","args","selector","host","role","tabindex","(focus)","(blur)","(click)","class","[class.mc-disabled]","[class.mc-selected]","[class.mc-focused]","[attr.disabled]","template","encapsulation","ViewEncapsulation","None","preserveWhitespaces","changeDetection","ChangeDetectionStrategy","OnPush","ElementRef","ChangeDetectorRef","decorators","Optional","Inject","ContentChildren","McLine","ViewChild","Input","Output","McListSelectionBase","_McListSelectionMixinBase","mixinTabIndex","mixinDisabled","tabIndex","SelectionModel","_onChange","_","parseInt","_keyManager","FocusKeyManager","options","withWrap","withTypeAhead","_tempValues","_setOptionsFromValues","selectAll","forEach","deselectAll","updateActiveItemIndex","_getOptionIndex","optionIndex","setPreviousItemActive","length","setNextItemActive","_keydown","event","keyCode","SPACE","ENTER","_toggleSelectOnFocusedOption","preventDefault","HOME","END","setFirstItemActive","setLastItemActive","onKeydown","_getSelectedOptionValues","writeValue","values","setDisabledState","isDisabled","registerOnChange","fn","registerOnTouched","_getOptionByValue","find","map","filter","Boolean","focusedIndex","activeItemIndex","_isValidIndex","focusedOption","toArray","index","indexOf","styles","inputs","[tabIndex]","(keydown)","providers","undefined","Attribute","McListBase","McList","Directive","McListSubheaderCssStyler","McListItemBase","McListItem","classList","add","remove","McListModule","NgModule","imports","CommonModule","PlatformModule","A11yModule","McPseudoCheckboxModule","McLineModule","exports","declarations"],"mappings":"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"}