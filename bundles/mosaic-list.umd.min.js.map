{"version":3,"file":"mosaic-list.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../packages/mosaic/list/list-selection.component.ts","../../packages/mosaic/list/list.component.ts","../../packages/mosaic/list/list.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/* tslint:disable:no-empty */\nimport { SelectionModel } from '@angular/cdk/collections';\nimport {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n    QueryList,\n    ViewEncapsulation,\n    ChangeDetectorRef,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    NgZone\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusKeyManager, IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    hasModifierKey,\n    HOME,\n    PAGE_DOWN,\n    PAGE_UP,\n    SPACE,\n    TAB,\n    UP_ARROW\n} from '@ptsecurity/cdk/keycodes';\nimport {\n    McLine,\n    CanDisable,\n    mixinDisabled,\n    toBoolean,\n    CanDisableCtor,\n    HasTabIndexCtor,\n    mixinTabIndex,\n    HasTabIndex\n} from '@ptsecurity/mosaic/core';\nimport { merge, Observable, Subject, Subscription } from 'rxjs';\nimport { startWith, take, takeUntil } from 'rxjs/operators';\n\n\n// tslint:disable-next-line:naming-convention\nexport interface McOptionEvent {\n    option: McListOption;\n}\n\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\n@Component({\n    exportAs: 'mcListOption',\n    selector: 'mc-list-option',\n    host: {\n        '[attr.tabindex]': 'tabIndex',\n\n        class: 'mc-list-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': 'hasFocus',\n\n        '(focus)': 'focus()',\n        '(blur)': 'blur()',\n        '(click)': 'handleClick($event)'\n    },\n    templateUrl: 'list-option.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListOption implements OnDestroy, OnInit, IFocusableOption {\n    hasFocus: boolean = false;\n\n    readonly onFocus = new Subject<McOptionEvent>();\n\n    readonly onBlur = new Subject<McOptionEvent>();\n\n    @ContentChildren(McLine) lines: QueryList<McLine>;\n\n    @ViewChild('text', {static: false}) text: ElementRef;\n\n    // Whether the label should appear before or after the checkbox. Defaults to 'after'\n    @Input() checkboxPosition: 'before' | 'after' = 'after';\n\n    @Input() value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled || (this.listSelection && this.listSelection.disabled);\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this.changeDetector.markForCheck();\n        }\n    }\n\n    private _disabled = false;\n\n    @Input()\n    get selected(): boolean {\n        return this.listSelection.selectionModel && this.listSelection.selectionModel.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            this.listSelection.reportValueChange();\n        }\n    }\n\n    private _selected = false;\n\n    get tabIndex(): any {\n        return this.disabled ? null : -1;\n    }\n\n    constructor(\n        private elementRef: ElementRef<HTMLElement>,\n        private changeDetector: ChangeDetectorRef,\n        private ngZone: NgZone,\n        @Inject(forwardRef(() => McListSelection)) public listSelection: McListSelection\n    ) {}\n\n    ngOnInit() {\n        if (this._selected) {\n            // List options that are selected at initialization can't be reported properly to the form\n            // control. This is because it takes some time until the selection-list knows about all\n            // available options. Also it can happen that the ControlValueAccessor has an initial value\n            // that should be used instead. Deferring the value change report to the next tick ensures\n            // that the form control value is not being overwritten.\n            const wasSelected = this._selected;\n\n            Promise.resolve().then(() => {\n                if (this._selected || wasSelected) {\n                    this.selected = true;\n                    this.changeDetector.markForCheck();\n                }\n            });\n        }\n    }\n\n    ngOnDestroy(): void {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => this.selected = false);\n        }\n\n        this.listSelection.removeOptionFromList(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    getLabel() {\n        return this.text ? this.text.nativeElement.textContent : '';\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.listSelection.selectionModel) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.listSelection.selectionModel.select(this);\n        } else {\n            this.listSelection.selectionModel.deselect(this);\n        }\n\n        this.changeDetector.markForCheck();\n    }\n\n    getHeight(): number {\n        return this.elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    handleClick($event) {\n        if (this.disabled) { return; }\n\n        this.listSelection.setFocusedOption(this, $event);\n    }\n\n    focus() {\n        if (!this.hasFocus) {\n            this.elementRef.nativeElement.focus();\n\n            this.onFocus.next({ option: this });\n\n            Promise.resolve().then(() => {\n                this.hasFocus = true;\n\n                this.changeDetector.markForCheck();\n            });\n        }\n    }\n\n    blur(): void {\n        // When animations are enabled, Angular may end up removing the option from the DOM a little\n        // earlier than usual, causing it to be blurred and throwing off the logic in the list\n        // that moves focus not the next item. To work around the issue, we defer marking the option\n        // as not focused until the next time the zone stabilizes.\n        this.ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                this.ngZone.run(() => {\n                    this.hasFocus = false;\n\n                    this.onBlur.next({ option: this });\n                });\n            });\n    }\n\n    getHostElement(): HTMLElement {\n        return this.elementRef.nativeElement;\n    }\n}\n\n\nexport const MC_SELECTION_LIST_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McListSelection),\n    multi: true\n};\n\nexport class McListSelectionChange {\n    constructor(public source: McListSelection, public option: McListOption) {}\n}\n\n\nexport class McListSelectionBase {}\n\n// tslint:disable-next-line:naming-convention\nexport const McListSelectionMixinBase: CanDisableCtor & HasTabIndexCtor & typeof McListSelectionBase\n    = mixinTabIndex(mixinDisabled(McListSelectionBase));\n\n@Component({\n    exportAs: 'mcListSelection',\n    selector: 'mc-list-selection',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled'],\n    host: {\n        '[attr.tabindex]': 'tabIndex',\n\n        class: 'mc-list-selection',\n\n        '(focus)': 'focus()',\n        '(blur)': 'blur()',\n        '(keydown)': 'onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    providers: [MC_SELECTION_LIST_VALUE_ACCESSOR],\n    preserveWhitespaces: false\n})\nexport class McListSelection extends McListSelectionMixinBase implements CanDisable, HasTabIndex, AfterContentInit,\n    ControlValueAccessor {\n\n    keyManager: FocusKeyManager<McListOption>;\n\n    // The option components contained within this selection-list.\n    @ContentChildren(McListOption) options: QueryList<McListOption>;\n\n    autoSelect: boolean;\n    noUnselect: boolean;\n    multiple: boolean;\n\n    @Input() horizontal: boolean = false;\n\n    @Input()\n    get tabIndex(): any {\n        return this._tabIndex;\n    }\n\n    set tabIndex(value: any) {\n        this._tabIndex = value;\n    }\n\n    private _tabIndex = 0;\n\n    // Emits a change event whenever the selected state of an option changes.\n    @Output() readonly selectionChange: EventEmitter<McListSelectionChange> = new EventEmitter<McListSelectionChange>();\n\n    selectionModel: SelectionModel<McListOption>;\n\n    get optionFocusChanges(): Observable<McOptionEvent> {\n        return merge(...this.options.map((option) => option.onFocus));\n    }\n\n    get optionBlurChanges(): Observable<McOptionEvent> {\n        return merge(...this.options.map((option) => option.onBlur));\n    }\n\n    // Used for storing the values that were assigned before the options were initialized.\n    private tempValues: string[] | null;\n\n    /** Emits whenever the component is destroyed. */\n    private readonly destroyed = new Subject<void>();\n\n    private optionFocusSubscription: Subscription | null;\n\n    private optionBlurSubscription: Subscription | null;\n\n    constructor(\n        private element: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string,\n        @Attribute('multiple') multiple: string\n    ) {\n        super();\n\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this._tabIndex = parseInt(tabIndex) || 0;\n\n        this.selectionModel = new SelectionModel<McListOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.horizontal = toBoolean(this.horizontal);\n\n        this.keyManager = new FocusKeyManager<McListOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(!this.horizontal)\n            .withHorizontalOrientation(this.horizontal ? 'ltr' : null);\n\n        this.keyManager.tabOut\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(() => {\n                this._tabIndex = -1;\n\n                setTimeout(() => {\n                    this._tabIndex = 0;\n                    this.changeDetectorRef.markForCheck();\n                });\n            });\n\n        if (this.tempValues) {\n            this.setOptionsFromValues(this.tempValues);\n            this.tempValues = null;\n        }\n\n        this.selectionModel.changed\n            .pipe(takeUntil(this.destroyed))\n            .subscribe((event) => {\n                for (const item of event.added) { item.selected = true; }\n\n                for (const item of event.removed) { item.selected = false; }\n            });\n\n        this.options.changes\n            .pipe(startWith(null), takeUntil(this.destroyed))\n            .subscribe(() => {\n                this.resetOptions();\n\n                // Check to see if we need to update our tab index\n                this.updateTabIndex();\n            });\n\n        this.updateScrollSize();\n    }\n\n    ngOnDestroy() {\n        this.destroyed.next();\n\n        this.destroyed.complete();\n    }\n\n    focus(): void {\n        if (this.options.length === 0) { return; }\n\n        this.keyManager.setFirstItemActive();\n    }\n\n    blur() {\n        if (!this.hasFocusedOption()) {\n            this.keyManager.setActiveItem(-1);\n        }\n\n        this.onTouched();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    selectAll() {\n        this.options.forEach((option) => option.setSelected(true));\n\n        this.reportValueChange();\n    }\n\n    deselectAll() {\n        this.options.forEach((option) => option.setSelected(false));\n\n        this.reportValueChange();\n    }\n\n    updateScrollSize(): void {\n        if (this.horizontal || !this.options.first) { return; }\n\n        this.keyManager.withScrollSize(Math.floor(this.getHeight() / this.options.first.getHeight()));\n    }\n\n    // Sets the focused option of the selection-list.\n    setFocusedOption(option: McListOption, $event?: KeyboardEvent): void {\n        this.keyManager.setActiveItem(option);\n\n        const withShift = $event ? hasModifierKey($event, 'shiftKey') : false;\n        const withCtrl = $event ? hasModifierKey($event, 'ctrlKey') : false;\n\n        if (withShift && this.multiple) {\n            const previousIndex = this.keyManager.previousActiveItemIndex;\n            const activeIndex = this.keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n        } else if (withCtrl) {\n\n            if (!this.canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this.emitChangeEvent(option);\n        this.reportValueChange();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(values: string[]): void {\n        if (this.options) {\n            this.setOptionsFromValues(values || []);\n        } else {\n            this.tempValues = values;\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this.onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    // Implemented as a part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        if (this.options) {\n            this.options.forEach((option) => option.disabled = isDisabled);\n        }\n    }\n\n    getSelectedOptionValues(): string[] {\n        return this.options.filter((option) => option.selected).map((option) => option.value);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this.keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this.isValidIndex(focusedIndex)) {\n            const focusedOption: McListOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this.canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this.emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    canDeselectLast(listOption: McListOption): boolean {\n        return !(this.noUnselect && this.selectionModel.selected.length === 1 && listOption.selected);\n    }\n\n    getHeight(): number {\n        return this.element.nativeElement.getClientRects()[0].height;\n    }\n\n    // View to model callback that should be called if the list or its options lost focus.\n    // tslint:disable-next-line:no-empty\n    onTouched: () => void = () => {};\n\n    // Removes an option from the selection list and updates the active item.\n    removeOptionFromList(option: McListOption) {\n        if (option.hasFocus) {\n            const optionIndex = this.getOptionIndex(option);\n\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this.keyManager.setPreviousItemActive();\n            } else if (optionIndex === 0 && this.options.length > 1) {\n                this.keyManager.setNextItemActive();\n            }\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        // tslint:disable-next-line: deprecation\n        const keyCode = event.keyCode;\n\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n\n                break;\n\n            case TAB:\n                this.keyManager.tabOut.next();\n\n                return;\n\n            case DOWN_ARROW:\n                this.keyManager.setNextItemActive();\n\n                break;\n            case UP_ARROW:\n                this.keyManager.setPreviousItemActive();\n\n                break;\n            case HOME:\n                this.keyManager.setFirstItemActive();\n\n                break;\n            case END:\n                this.keyManager.setLastItemActive();\n\n                break;\n            case PAGE_UP:\n                this.keyManager.setPreviousPageItemActive();\n\n                break;\n            case PAGE_DOWN:\n                this.keyManager.setNextPageItemActive();\n\n                break;\n            default:\n                return;\n        }\n\n        event.preventDefault();\n\n        this.setFocusedOption(this.keyManager.activeItem as McListOption, event);\n    }\n\n    // Reports a value change to the ControlValueAccessor\n    reportValueChange() {\n        if (this.options) {\n            this.onChange(this.getSelectedOptionValues());\n        }\n    }\n\n    // Emits a change event if the selected state of an option changed.\n    emitChangeEvent(option: McListOption) {\n        this.selectionChange.emit(new McListSelectionChange(this, option));\n    }\n\n    protected updateTabIndex(): void {\n        this._tabIndex = this.options.length === 0 ? -1 : 0;\n    }\n\n    private resetOptions() {\n        this.dropSubscriptions();\n        this.listenToOptionsFocus();\n    }\n\n    private dropSubscriptions() {\n        if (this.optionFocusSubscription) {\n            this.optionFocusSubscription.unsubscribe();\n            this.optionFocusSubscription = null;\n        }\n\n        if (this.optionBlurSubscription) {\n            this.optionBlurSubscription.unsubscribe();\n            this.optionBlurSubscription = null;\n        }\n    }\n\n    private listenToOptionsFocus(): void {\n        this.optionFocusSubscription = this.optionFocusChanges\n            .subscribe((event) => {\n                const index: number = this.options.toArray().indexOf(event.option);\n\n                if (this.isValidIndex(index)) {\n                    this.keyManager.updateActiveItem(index);\n                }\n            });\n\n        this.optionBlurSubscription = this.optionBlurChanges\n            .subscribe(() => this.blur());\n    }\n\n    /** Checks whether any of the options is focused. */\n    private hasFocusedOption() {\n        return this.options.some((option) => option.hasFocus);\n    }\n\n    // Returns the option with the specified value.\n    private getOptionByValue(value: string): McListOption | undefined {\n        return this.options.find((option) => option.value === value);\n    }\n\n    // Sets the selected options based on the specified values.\n    private setOptionsFromValues(values: string[]) {\n        this.options.forEach((option) => option.setSelected(false));\n\n        values\n            .map((value) => this.getOptionByValue(value))\n            .filter(Boolean)\n            .forEach((option) => option!.setSelected(true));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    // Returns the index of the specified list option.\n    private getOptionIndex(option: McListOption): number {\n        return this.options.toArray().indexOf(option);\n    }\n\n    // View to model callback that should be called whenever the selected options change.\n    private onChange: (value: any) => void = (_: any) => {};\n}\n","// todo пока не делаем, перенесено из материала, но у нас в доках таких простых списков нет.\nimport {\n    AfterContentInit, ChangeDetectionStrategy, Component, ContentChildren, Directive, ElementRef, QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { McLine, McLineSetter } from '@ptsecurity/mosaic/core';\n\n\nexport class McListBase {}\n\n@Component({\n    selector: 'mc-list',\n    host: { class: 'mc-list' },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McList extends McListBase {}\n\n\n/**\n * Directive whose purpose is to add the mc- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n    selector: '[mc-subheader], [mcSubheader]',\n    host: { class: 'mc-subheader' }\n})\nexport class McListSubheaderCssStyler {}\n\n\n// Boilerplate for applying mixins to McListItem.\nexport class McListItemBase {}\n\n@Component({\n    selector: 'mc-list-item, a[mc-list-item]',\n    host: {\n        class: 'mc-list-item',\n        '(focus)': 'handleFocus()',\n        '(blur)': 'handleBlur()'\n    },\n    templateUrl: './list-item.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListItem extends McListItemBase implements AfterContentInit {\n    @ContentChildren(McLine) lines: QueryList<McLine>;\n\n    private lineSetter: McLineSetter;\n\n    constructor(private _element: ElementRef) {\n        super();\n    }\n\n    ngAfterContentInit() {\n        this.lineSetter = new McLineSetter(this.lines, this._element);\n    }\n\n    handleFocus() {\n        this._element.nativeElement.classList.add('mc-focused');\n    }\n\n    handleBlur() {\n        this._element.nativeElement.classList.remove('mc-focused');\n    }\n\n    getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McLineModule } from '@ptsecurity/mosaic/core';\n\nimport { McListSelection, McListOption } from './list-selection.component';\nimport { McList, McListItem, McListSubheaderCssStyler } from './list.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        McLineModule\n    ],\n    exports: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ],\n    declarations: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ]\n})\nexport class McListModule {}\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","setPrototypeOf","__proto__","Array","p","hasOwnProperty","McListOption","elementRef","changeDetector","ngZone","listSelection","hasFocus","onFocus","Subject","onBlur","checkboxPosition","_disabled","_selected","defineProperty","disabled","value","newValue","toBoolean","markForCheck","selectionModel","isSelected","setSelected","reportValueChange","ngOnInit","_this","wasSelected_1","Promise","resolve","then","selected","ngOnDestroy","removeOptionFromList","toggle","getLabel","text","nativeElement","textContent","select","deselect","getHeight","getClientRects","height","handleClick","$event","setFocusedOption","focus","next","option","blur","onStable","asObservable","pipe","take","subscribe","run","getHostElement","type","Component","args","exportAs","selector","host","[attr.tabindex]","class","[class.mc-selected]","[class.mc-focused]","(focus)","(blur)","(click)","template","encapsulation","ViewEncapsulation","None","preserveWhitespaces","changeDetection","ChangeDetectionStrategy","OnPush","ElementRef","ChangeDetectorRef","NgZone","McListSelection","decorators","Inject","forwardRef","lines","ContentChildren","McLine","ViewChild","static","Input","MC_SELECTION_LIST_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","multi","McListSelectionChange","source","McListSelectionBase","McListSelectionMixinBase","mixinTabIndex","mixinDisabled","_super","element","changeDetectorRef","tabIndex","autoSelect","noUnselect","multiple","call","horizontal","_tabIndex","selectionChange","EventEmitter","destroyed","onTouched","onChange","_","parseInt","SelectionModel","tslib_1.__extends","merge","apply","options","map","ngAfterContentInit","keyManager","FocusKeyManager","withTypeAhead","withVerticalOrientation","withHorizontalOrientation","tabOut","takeUntil","setTimeout","tempValues","setOptionsFromValues","changed","event","_i","_a","added","length","item","_b","_c","removed","changes","startWith","resetOptions","updateTabIndex","updateScrollSize","complete","setFirstItemActive","hasFocusedOption","setActiveItem","selectAll","forEach","deselectAll","first","withScrollSize","Math","floor","withShift","hasModifierKey","withCtrl","previousIndex_1","previousActiveItemIndex","activeIndex_1","activeItemIndex","index","canDeselectLast","emitChangeEvent","writeValue","values","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","getSelectedOptionValues","filter","toggleFocusedOption","focusedIndex","isValidIndex","focusedOption","toArray","listOption","optionIndex","getOptionIndex","setPreviousItemActive","setNextItemActive","onKeyDown","keyCode","SPACE","ENTER","TAB","DOWN_ARROW","UP_ARROW","HOME","END","setLastItemActive","PAGE_UP","setPreviousPageItemActive","PAGE_DOWN","setNextPageItemActive","preventDefault","emit","dropSubscriptions","listenToOptionsFocus","optionFocusSubscription","unsubscribe","optionBlurSubscription","optionFocusChanges","indexOf","updateActiveItem","optionBlurChanges","some","getOptionByValue","find","Boolean","styles","inputs","(keydown)","(window:resize)","providers","String","Attribute","Output","McListBase","McList","McListSubheaderCssStyler","Directive","McListItemBase","McListItem","_element","lineSetter","McLineSetter","handleFocus","classList","add","handleBlur","remove","McListModule","NgModule","imports","CommonModule","A11yModule","McLineModule","exports","declarations"],"mappings":"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"}