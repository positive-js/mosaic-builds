{"version":3,"file":"mosaic-list.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/lib/list/list-selection.component.ts","../../src/lib/list/list.component.ts","../../src/lib/list/list.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy, ChangeDetectorRef,\n    Component, ContentChildren,\n    ElementRef, EventEmitter, forwardRef, HostListener, Inject, Input,\n    OnDestroy, OnInit, Output, QueryList, ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { FocusKeyManager, IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { END, ENTER, HOME, PAGE_DOWN, PAGE_UP, SPACE } from '@ptsecurity/cdk/keycodes';\n\nimport {\n    CanDisable, mixinDisabled, HasTabIndex, mixinTabIndex, McLine, McLineSetter, toBoolean\n} from '@ptsecurity/mosaic/core';\nimport { Subscription } from 'rxjs';\n\n\nexport class McListOptionBase {}\n\nexport const MC_SELECTION_LIST_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McListSelection),\n    multi: true\n};\n\n// Change event that is being fired whenever the selected state of an option changes. */\nexport class McListSelectionChange {\n    constructor(\n        // Reference to the selection list that emitted the event.\n        public source: McListSelection,\n        // Reference to the option that has been changed.\n        public option: McListOption\n    ) {}\n}\n\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\n@Component({\n    exportAs: 'mcListOption',\n    selector: 'mc-list-option',\n    host: {\n        tabindex: '-1',\n\n        class: 'mc-list-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n        '(click)': '_handleClick()'\n    },\n    templateUrl: 'list-option.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListOption extends McListOptionBase\n    implements AfterContentInit, OnDestroy, OnInit, IFocusableOption {\n\n    _hasFocus: boolean = false;\n\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    @ViewChild('text') _text: ElementRef;\n\n    // Whether the label should appear before or after the checkbox. Defaults to 'after'\n    @Input() checkboxPosition: 'before' | 'after' = 'after';\n\n    @Input() value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled || (this.listSelection && this.listSelection.disabled);\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.listSelection.selectedOptions && this.listSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this._setSelected(isSelected);\n            this.listSelection._reportValueChange();\n        }\n    }\n\n    private _lineSetter: McLineSetter;\n    private _selected = false;\n    private _disabled = false;\n\n    constructor(\n        private _element: ElementRef,\n        private _changeDetector: ChangeDetectorRef,\n        @Inject(forwardRef(() => McListSelection))\n        public listSelection: McListSelection\n    ) {\n        super();\n    }\n\n    ngOnInit() {\n        if (this._selected) {\n            // List options that are selected at initialization can't be reported properly to the form\n            // control. This is because it takes some time until the selection-list knows about all\n            // available options. Also it can happen that the ControlValueAccessor has an initial value\n            // that should be used instead. Deferring the value change report to the next tick ensures\n            // that the form control value is not being overwritten.\n            const wasSelected = this._selected;\n\n            Promise.resolve().then(() => {\n                if (this._selected || wasSelected) {\n                    this.selected = true;\n                    this._changeDetector.markForCheck();\n                }\n            });\n        }\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    ngOnDestroy(): void {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => this.selected = false);\n        }\n\n        this.listSelection._removeOptionFromList(this);\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    focus(): void {\n        this._element.nativeElement.focus();\n    }\n\n    getLabel() {\n        return this._text ? this._text.nativeElement.textContent : '';\n    }\n\n    _handleClick() {\n        if (!this.disabled) {\n            this.toggle();\n\n            // Emit a change event if the selected state of the option changed through user interaction.\n            this.listSelection._emitChangeEvent(this);\n        }\n    }\n\n    _handleFocus() {\n        if (this.disabled) { return; }\n\n        this._hasFocus = true;\n        this.listSelection._setFocusedOption(this);\n    }\n\n    _handleBlur() {\n        this._hasFocus = false;\n        this.listSelection._onTouched();\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n\n    _setSelected(selected: boolean) {\n        if (this._selected === selected) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.listSelection.selectedOptions.select(this);\n        } else {\n            this.listSelection.selectedOptions.deselect(this);\n        }\n\n        this._changeDetector.markForCheck();\n    }\n}\n\n\nexport class McListSelectionBase {}\n\nexport const _McListSelectionMixinBase = mixinTabIndex(mixinDisabled(McListSelectionBase));\n\n@Component({\n    exportAs: 'mcListSelection',\n    selector: 'mc-list-selection',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-list-selection',\n        '[tabIndex]': 'tabIndex',\n        '(focus)': 'focus()',\n        '(blur)': '_onTouched()',\n        '(keydown)': '_keydown($event)'\n    },\n    providers: [MC_SELECTION_LIST_VALUE_ACCESSOR],\n    preserveWhitespaces: false\n})\nexport class McListSelection extends _McListSelectionMixinBase implements\n    IFocusableOption, CanDisable, HasTabIndex, AfterContentInit, ControlValueAccessor {\n\n    _keyManager: FocusKeyManager<McListOption>;\n\n    // The option components contained within this selection-list.\n    @ContentChildren(McListOption) options: QueryList<McListOption>;\n\n    @Input() horizontal: boolean = false;\n    @Input() multiple: boolean = false;\n\n    // Emits a change event whenever the selected state of an option changes.\n    @Output() readonly selectionChange: EventEmitter<McListSelectionChange> =\n        new EventEmitter<McListSelectionChange>();\n\n    selectedOptions: SelectionModel<McListOption>;\n\n    @HostListener('window:resize')\n    onResize() {\n        this._updateScrollSize();\n    }\n\n    // Used for storing the values that were assigned before the options were initialized.\n    private _tempValues: string[] | null;\n\n    private _modelChanges = Subscription.EMPTY;\n\n    constructor(private _element: ElementRef, @Attribute('tabindex') tabIndex: string) {\n        super();\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngAfterContentInit(): void {\n        this.horizontal = toBoolean(this.horizontal);\n        this.multiple = toBoolean(this.multiple);\n\n        this._keyManager = new FocusKeyManager<McListOption>(this.options)\n            .withTypeAhead()\n            .withHorizontalOrientation(this.horizontal ? 'ltr' : null)\n            .withVerticalOrientation(!this.horizontal);\n\n        if (this._tempValues) {\n            this._setOptionsFromValues(this._tempValues);\n            this._tempValues = null;\n        }\n\n        this.selectedOptions = new SelectionModel<McListOption>(this.multiple);\n\n        // Sync external changes to the model back to the options.\n        this._modelChanges = this.selectedOptions.onChange!.subscribe((event) => {\n            event.added.forEach((item) => { item.selected = true; });\n            event.removed.forEach((item) => { item.selected = false; });\n        });\n\n        this._updateScrollSize();\n    }\n\n    ngOnDestroy() {\n        this._modelChanges.unsubscribe();\n    }\n\n    // Focus the selection-list.\n    focus() {\n        this._element.nativeElement.focus();\n    }\n\n    // Selects all of the options.\n    selectAll() {\n        this.options.forEach((option) => option._setSelected(true));\n        this._reportValueChange();\n    }\n\n    // Deselects all of the options.\n    deselectAll() {\n        this.options.forEach((option) => option._setSelected(false));\n        this._reportValueChange();\n    }\n\n    _updateScrollSize(): void {\n        if (this.horizontal) { return; }\n\n        const scrollSize = Math.floor(this._getHeight() / this.options.first._getHeight());\n\n        this._keyManager.setScrollSize(scrollSize);\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    // View to model callback that should be called if the list or its options lost focus.\n    _onTouched: () => void = () => {};\n\n    // Sets the focused option of the selection-list.\n    _setFocusedOption(option: McListOption) {\n        this._keyManager.updateActiveItemIndex(this._getOptionIndex(option));\n    }\n\n    // Removes an option from the selection list and updates the active item.\n    _removeOptionFromList(option: McListOption) {\n        if (option._hasFocus) {\n            const optionIndex = this._getOptionIndex(option);\n\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.setPreviousItemActive();\n            } else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.setNextItemActive();\n            }\n        }\n    }\n\n    _keydown(event: KeyboardEvent) {\n        switch (event.keyCode) {\n            case SPACE:\n            case ENTER:\n                this._toggleSelectOnFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                if (!this.horizontal) { this._keyManager.setPreviousPageItemActive(); }\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                if (!this.horizontal) { this._keyManager.setNextPageItemActive(); }\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    // Reports a value change to the ControlValueAccessor\n    _reportValueChange() {\n        if (this.options) {\n            this._onChange(this._getSelectedOptionValues());\n        }\n    }\n\n    // Emits a change event if the selected state of an option changed.\n    _emitChangeEvent(option: McListOption) {\n        this.selectionChange.emit(new McListSelectionChange(this, option));\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(values: string[]): void {\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        } else {\n            this._tempValues = values;\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this._onTouched = fn;\n    }\n\n    // Implemented as a part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        if (this.options) {\n            this.options.forEach((option) => option.disabled = isDisabled);\n        }\n    }\n\n    // Returns the option with the specified value.\n    private _getOptionByValue(value: string): McListOption | undefined {\n        return this.options.find((option) => option.value === value);\n    }\n\n    // Sets the selected options based on the specified values.\n    private _setOptionsFromValues(values: string[]) {\n        this.options.forEach((option) => option._setSelected(false));\n\n        values\n            .map((value) => this._getOptionByValue(value))\n            .filter(Boolean)\n            .forEach((option) => option!._setSelected(true));\n    }\n\n    private _getSelectedOptionValues(): string[] {\n        return this.options.filter((option) => option.selected).map((option) => option.value);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    private _toggleSelectOnFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McListOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    // Returns the index of the specified list option.\n    private _getOptionIndex(option: McListOption): number {\n        return this.options.toArray().indexOf(option);\n    }\n\n    // View to model callback that should be called whenever the selected options change.\n    private _onChange: (value: any) => void = (_: any) => {};\n}\n","// todo пока не делаем, перенесено из материала, но у нас в доках таких простых списков нет.\nimport {\n    AfterContentInit, ChangeDetectionStrategy, Component, ContentChildren, Directive, ElementRef, QueryList,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { McLine, McLineSetter } from '@ptsecurity/mosaic/core';\n\n\nexport class McListBase {}\n\n@Component({\n    selector: 'mc-list',\n    host: { class: 'mc-list' },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McList extends McListBase {}\n\n\n/**\n * Directive whose purpose is to add the mc- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n    selector: '[mc-subheader], [mcSubheader]',\n    host: { class: 'mc-subheader' }\n})\nexport class McListSubheaderCssStyler {}\n\n\n// Boilerplate for applying mixins to McListItem.\nexport class McListItemBase {}\n\n// An item within a Material Design list.\n@Component({\n    selector: 'mc-list-item, a[mc-list-item]',\n    host: {\n        class: 'mc-list-item',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()'\n    },\n    templateUrl: './list-item.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListItem extends McListItemBase implements AfterContentInit {\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    private _lineSetter: McLineSetter;\n\n    constructor(private _element: ElementRef) {\n        super();\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    _handleFocus() {\n        this._element.nativeElement.classList.add('mc-focused');\n    }\n\n    _handleBlur() {\n        this._element.nativeElement.classList.remove('mc-focused');\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLineModule, McPseudoCheckboxModule } from '@ptsecurity/mosaic/core';\n\nimport { McListSelection, McListOption } from './list-selection.component';\nimport { McList, McListItem, McListSubheaderCssStyler} from './list.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        McPseudoCheckboxModule,\n        McLineModule\n    ],\n    exports: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ],\n    declarations: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ]\n})\nexport class McListModule {}\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","setPrototypeOf","__proto__","Array","p","hasOwnProperty","McListOptionBase","MC_SELECTION_LIST_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","McListSelection","multi","McListSelectionChange","source","option","McListOption","_element","_changeDetector","listSelection","_this","_super","call","_hasFocus","checkboxPosition","_selected","_disabled","tslib_1.__extends","defineProperty","disabled","value","newValue","toBoolean","markForCheck","selectedOptions","isSelected","_setSelected","_reportValueChange","ngOnInit","wasSelected_1","Promise","resolve","then","selected","ngAfterContentInit","_lineSetter","McLineSetter","_lines","ngOnDestroy","_removeOptionFromList","_getHeight","nativeElement","getClientRects","height","toggle","focus","getLabel","_text","textContent","_handleClick","_emitChangeEvent","_handleFocus","_setFocusedOption","_handleBlur","_onTouched","_getHostElement","select","deselect","type","Component","args","exportAs","selector","host","tabindex","class","[class.mc-selected]","[class.mc-focused]","(focus)","(blur)","(click)","template","encapsulation","ViewEncapsulation","None","preserveWhitespaces","changeDetection","ChangeDetectionStrategy","OnPush","ElementRef","ChangeDetectorRef","decorators","Inject","ContentChildren","McLine","ViewChild","Input","McListSelectionBase","_McListSelectionMixinBase","mixinTabIndex","mixinDisabled","tabIndex","horizontal","multiple","selectionChange","EventEmitter","_modelChanges","Subscription","EMPTY","_onChange","_","parseInt","onResize","_updateScrollSize","_keyManager","FocusKeyManager","options","withTypeAhead","withHorizontalOrientation","withVerticalOrientation","_tempValues","_setOptionsFromValues","SelectionModel","subscribe","event","added","forEach","item","removed","unsubscribe","selectAll","deselectAll","scrollSize","Math","floor","first","setScrollSize","updateActiveItemIndex","_getOptionIndex","optionIndex","setPreviousItemActive","length","setNextItemActive","_keydown","keyCode","SPACE","ENTER","_toggleSelectOnFocusedOption","preventDefault","HOME","setFirstItemActive","END","setLastItemActive","PAGE_UP","setPreviousPageItemActive","PAGE_DOWN","setNextPageItemActive","onKeydown","_getSelectedOptionValues","emit","writeValue","values","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","_getOptionByValue","find","map","filter","Boolean","focusedIndex","activeItemIndex","_isValidIndex","focusedOption","toArray","index","indexOf","styles","inputs","[tabIndex]","(keydown)","providers","undefined","Attribute","Output","HostListener","McListBase","McList","Directive","McListSubheaderCssStyler","McListItemBase","McListItem","classList","add","remove","McListModule","NgModule","imports","CommonModule","A11yModule","McPseudoCheckboxModule","McLineModule","exports","declarations"],"mappings":"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"}