{"version":3,"file":"mosaic-list.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../packages/mosaic/list/list-selection.component.ts","../../packages/mosaic/list/list.component.ts","../../packages/mosaic/list/list.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n    QueryList,\n    ViewEncapsulation,\n    ChangeDetectorRef,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusKeyManager, IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    hasModifierKey,\n    HOME,\n    PAGE_DOWN,\n    PAGE_UP,\n    SPACE,\n    TAB,\n    UP_ARROW\n} from '@ptsecurity/cdk/keycodes';\nimport {\n    McLine,\n    CanDisable,\n    mixinDisabled,\n    toBoolean, CanDisableCtor\n} from '@ptsecurity/mosaic/core';\nimport { Subscription } from 'rxjs';\n\n\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\n@Component({\n    exportAs: 'mcListOption',\n    selector: 'mc-list-option',\n    host: {\n        tabindex: '-1',\n\n        class: 'mc-list-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': 'hasFocus',\n        '(focus)': 'handleFocus()',\n        '(blur)': 'handleBlur()',\n        '(click)': 'handleClick($event)'\n    },\n    templateUrl: 'list-option.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListOption implements OnDestroy, OnInit, IFocusableOption {\n    hasFocus: boolean = false;\n\n    @ContentChildren(McLine) lines: QueryList<McLine>;\n\n    @ViewChild('text', {static: false}) text: ElementRef;\n\n    // Whether the label should appear before or after the checkbox. Defaults to 'after'\n    @Input() checkboxPosition: 'before' | 'after' = 'after';\n\n    @Input() value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled || (this.listSelection && this.listSelection.disabled);\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    private _disabled = false;\n\n    @Input()\n    get selected(): boolean {\n        return this.listSelection.selectedOptions && this.listSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            this.listSelection.reportValueChange();\n        }\n    }\n\n    private _selected = false;\n\n    constructor(\n        private _element: ElementRef,\n        private _changeDetector: ChangeDetectorRef,\n        @Inject(forwardRef(() => McListSelection))\n        public listSelection: McListSelection\n    ) {}\n\n    ngOnInit() {\n        if (this._selected) {\n            // List options that are selected at initialization can't be reported properly to the form\n            // control. This is because it takes some time until the selection-list knows about all\n            // available options. Also it can happen that the ControlValueAccessor has an initial value\n            // that should be used instead. Deferring the value change report to the next tick ensures\n            // that the form control value is not being overwritten.\n            const wasSelected = this._selected;\n\n            Promise.resolve().then(() => {\n                if (this._selected || wasSelected) {\n                    this.selected = true;\n                    this._changeDetector.markForCheck();\n                }\n            });\n        }\n    }\n\n    ngOnDestroy(): void {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => this.selected = false);\n        }\n\n        this.listSelection.removeOptionFromList(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    focus(): void {\n        this._element.nativeElement.focus();\n    }\n\n    getLabel() {\n        return this.text ? this.text.nativeElement.textContent : '';\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.listSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.listSelection.selectedOptions.select(this);\n        } else {\n            this.listSelection.selectedOptions.deselect(this);\n        }\n\n        this._changeDetector.markForCheck();\n    }\n\n    getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    handleClick($event) {\n        if (this.disabled) { return; }\n\n        this.listSelection.setFocusedOption(this, $event);\n    }\n\n    handleFocus() {\n        if (this.disabled || this.hasFocus) { return; }\n\n        this.hasFocus = true;\n    }\n\n    handleBlur() {\n        this.hasFocus = false;\n\n        this.listSelection.onTouched();\n    }\n\n    getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n\n\nexport const MC_SELECTION_LIST_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McListSelection),\n    multi: true\n};\n\nexport class McListSelectionChange {\n    constructor(\n        public source: McListSelection,\n        public option: McListOption\n    ) {}\n}\n\n\nexport class McListSelectionBase {}\n\n// tslint:disable-next-line:naming-convention\nexport const _McListSelectionMixinBase: CanDisableCtor & typeof McListSelectionBase\n    = mixinDisabled(McListSelectionBase);\n\n@Component({\n    exportAs: 'mcListSelection',\n    selector: 'mc-list-selection',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-list-selection',\n        '[tabIndex]': 'tabIndex',\n        '(focus)': 'focus()',\n        '(blur)': 'onTouched()',\n        '(keydown)': 'onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    providers: [MC_SELECTION_LIST_VALUE_ACCESSOR],\n    preserveWhitespaces: false\n})\nexport class McListSelection extends _McListSelectionMixinBase implements\n    IFocusableOption, CanDisable, AfterContentInit, ControlValueAccessor {\n\n    keyManager: FocusKeyManager<McListOption>;\n\n    // The option components contained within this selection-list.\n    @ContentChildren(McListOption) options: QueryList<McListOption>;\n\n    tabIndex: number;\n\n    autoSelect: boolean;\n    noUnselect: boolean;\n    multiple: boolean;\n\n    @Input() horizontal: boolean = false;\n\n    // Emits a change event whenever the selected state of an option changes.\n    @Output() readonly selectionChange: EventEmitter<McListSelectionChange> = new EventEmitter<McListSelectionChange>();\n\n    selectedOptions: SelectionModel<McListOption>;\n\n    // Used for storing the values that were assigned before the options were initialized.\n    private tempValues: string[] | null;\n\n    private modelChanges = Subscription.EMPTY;\n\n    constructor(\n        private element: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string,\n        @Attribute('multiple') multiple: string\n    ) {\n        super();\n\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.selectedOptions = new SelectionModel<McListOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.horizontal = toBoolean(this.horizontal);\n\n        this.keyManager = new FocusKeyManager<McListOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(!this.horizontal)\n            .withHorizontalOrientation(this.horizontal ? 'ltr' : null);\n\n        if (this.tempValues) {\n            this.setOptionsFromValues(this.tempValues);\n            this.tempValues = null;\n        }\n\n        // Sync external changes to the model back to the options.\n        this.modelChanges = this.selectedOptions.onChange!.subscribe((event) => {\n            for (const item of event.added) {\n                item.selected = true;\n            }\n\n            for (const item of event.removed) {\n                item.selected = false;\n            }\n        });\n\n        this.updateScrollSize();\n    }\n\n    ngOnDestroy() {\n        this.modelChanges.unsubscribe();\n    }\n\n    focus() {\n        this.element.nativeElement.focus();\n    }\n\n    selectAll() {\n        this.options.forEach((option) => option.setSelected(true));\n\n        this.reportValueChange();\n    }\n\n    deselectAll() {\n        this.options.forEach((option) => option.setSelected(false));\n\n        this.reportValueChange();\n    }\n\n    updateScrollSize(): void {\n        if (this.horizontal || !this.options.first) { return; }\n\n        this.keyManager.withScrollSize(Math.floor(this.getHeight() / this.options.first.getHeight()));\n    }\n\n    // Sets the focused option of the selection-list.\n    setFocusedOption(option: McListOption, $event?: KeyboardEvent): void {\n        this.keyManager.updateActiveItem(option);\n\n        const withShift = $event ? hasModifierKey($event, 'shiftKey') : false;\n        const withCtrl = $event ? hasModifierKey($event, 'ctrlKey') : false;\n\n        if (withShift && this.multiple) {\n            const previousIndex = this.keyManager.previousActiveItemIndex;\n            const activeIndex = this.keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n        } else if (withCtrl) {\n\n            if (!this.canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this.emitChangeEvent(option);\n        this.reportValueChange();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(values: string[]): void {\n        if (this.options) {\n            this.setOptionsFromValues(values || []);\n        } else {\n            this.tempValues = values;\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this.onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    // Implemented as a part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        if (this.options) {\n            this.options.forEach((option) => option.disabled = isDisabled);\n        }\n    }\n\n    getSelectedOptionValues(): string[] {\n        return this.options.filter((option) => option.selected).map((option) => option.value);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this.keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this.isValidIndex(focusedIndex)) {\n            const focusedOption: McListOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this.canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this.emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    canDeselectLast(listOption: McListOption): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && listOption.selected);\n    }\n\n    getHeight(): number {\n        return this.element.nativeElement.getClientRects()[0].height;\n    }\n\n    // View to model callback that should be called if the list or its options lost focus.\n    // tslint:disable-next-line:no-empty\n    onTouched: () => void = () => {};\n\n    // Removes an option from the selection list and updates the active item.\n    removeOptionFromList(option: McListOption) {\n        if (option.hasFocus) {\n            const optionIndex = this.getOptionIndex(option);\n\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this.keyManager.setPreviousItemActive();\n            } else if (optionIndex === 0 && this.options.length > 1) {\n                this.keyManager.setNextItemActive();\n            }\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n\n                break;\n\n            case TAB:\n                this.keyManager.tabOut.next();\n\n                return;\n\n            case DOWN_ARROW:\n                this.keyManager.setNextItemActive();\n\n                break;\n            case UP_ARROW:\n                this.keyManager.setPreviousItemActive();\n\n                break;\n            case HOME:\n                this.keyManager.setFirstItemActive();\n\n                break;\n            case END:\n                this.keyManager.setLastItemActive();\n\n                break;\n            case PAGE_UP:\n                this.keyManager.setPreviousPageItemActive();\n\n                break;\n            case PAGE_DOWN:\n                this.keyManager.setNextPageItemActive();\n\n                break;\n            default:\n                return;\n        }\n\n        event.preventDefault();\n\n        this.setFocusedOption(this.keyManager.activeItem as McListOption, event);\n    }\n\n    // Reports a value change to the ControlValueAccessor\n    reportValueChange() {\n        if (this.options) {\n            this.onChange(this.getSelectedOptionValues());\n        }\n    }\n\n    // Emits a change event if the selected state of an option changed.\n    emitChangeEvent(option: McListOption) {\n        this.selectionChange.emit(new McListSelectionChange(this, option));\n    }\n\n    // Returns the option with the specified value.\n    private getOptionByValue(value: string): McListOption | undefined {\n        return this.options.find((option) => option.value === value);\n    }\n\n    // Sets the selected options based on the specified values.\n    private setOptionsFromValues(values: string[]) {\n        this.options.forEach((option) => option.setSelected(false));\n\n        values\n            .map((value) => this.getOptionByValue(value))\n            .filter(Boolean)\n            .forEach((option) => option!.setSelected(true));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    // Returns the index of the specified list option.\n    private getOptionIndex(option: McListOption): number {\n        return this.options.toArray().indexOf(option);\n    }\n\n    // View to model callback that should be called whenever the selected options change.\n    private onChange: (value: any) => void = (_: any) => {};\n}\n","// todo пока не делаем, перенесено из материала, но у нас в доках таких простых списков нет.\nimport {\n    AfterContentInit, ChangeDetectionStrategy, Component, ContentChildren, Directive, ElementRef, QueryList,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { McLine, McLineSetter } from '@ptsecurity/mosaic/core';\n\n\nexport class McListBase {}\n\n@Component({\n    selector: 'mc-list',\n    host: { class: 'mc-list' },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McList extends McListBase {}\n\n\n/**\n * Directive whose purpose is to add the mc- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n    selector: '[mc-subheader], [mcSubheader]',\n    host: { class: 'mc-subheader' }\n})\nexport class McListSubheaderCssStyler {}\n\n\n// Boilerplate for applying mixins to McListItem.\nexport class McListItemBase {}\n\n@Component({\n    selector: 'mc-list-item, a[mc-list-item]',\n    host: {\n        class: 'mc-list-item',\n        '(focus)': 'handleFocus()',\n        '(blur)': 'handleBlur()'\n    },\n    templateUrl: './list-item.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListItem extends McListItemBase implements AfterContentInit {\n    @ContentChildren(McLine) lines: QueryList<McLine>;\n\n    private lineSetter: McLineSetter;\n\n    constructor(private _element: ElementRef) {\n        super();\n    }\n\n    ngAfterContentInit() {\n        this.lineSetter = new McLineSetter(this.lines, this._element);\n    }\n\n    handleFocus() {\n        this._element.nativeElement.classList.add('mc-focused');\n    }\n\n    handleBlur() {\n        this._element.nativeElement.classList.remove('mc-focused');\n    }\n\n    getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLineModule } from '@ptsecurity/mosaic/core';\n\nimport { McListSelection, McListOption } from './list-selection.component';\nimport { McList, McListItem, McListSubheaderCssStyler } from './list.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        McLineModule\n    ],\n    exports: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ],\n    declarations: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ]\n})\nexport class McListModule {}\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","setPrototypeOf","__proto__","Array","p","hasOwnProperty","McListOption","_element","_changeDetector","listSelection","hasFocus","checkboxPosition","_disabled","_selected","defineProperty","disabled","value","newValue","toBoolean","markForCheck","selectedOptions","isSelected","setSelected","reportValueChange","ngOnInit","_this","wasSelected_1","Promise","resolve","then","selected","ngOnDestroy","removeOptionFromList","toggle","focus","nativeElement","getLabel","text","textContent","select","deselect","getHeight","getClientRects","height","handleClick","$event","setFocusedOption","handleFocus","handleBlur","onTouched","getHostElement","type","Component","args","exportAs","selector","host","tabindex","class","[class.mc-selected]","[class.mc-focused]","(focus)","(blur)","(click)","template","encapsulation","ViewEncapsulation","None","preserveWhitespaces","changeDetection","ChangeDetectionStrategy","OnPush","ElementRef","ChangeDetectorRef","McListSelection","decorators","Inject","forwardRef","lines","ContentChildren","McLine","ViewChild","static","Input","MC_SELECTION_LIST_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","multi","McListSelectionChange","source","option","McListSelectionBase","_McListSelectionMixinBase","mixinDisabled","_super","element","tabIndex","autoSelect","noUnselect","multiple","call","horizontal","selectionChange","EventEmitter","modelChanges","Subscription","EMPTY","onChange","_","parseInt","SelectionModel","tslib_1.__extends","ngAfterContentInit","keyManager","FocusKeyManager","options","withTypeAhead","withVerticalOrientation","withHorizontalOrientation","tempValues","setOptionsFromValues","subscribe","event","_i","_a","added","length","item","_b","_c","removed","updateScrollSize","unsubscribe","selectAll","forEach","deselectAll","first","withScrollSize","Math","floor","updateActiveItem","withShift","hasModifierKey","withCtrl","previousIndex_1","previousActiveItemIndex","activeIndex_1","activeItemIndex","index","canDeselectLast","emitChangeEvent","writeValue","values","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","getSelectedOptionValues","filter","map","toggleFocusedOption","focusedIndex","isValidIndex","focusedOption","toArray","listOption","optionIndex","getOptionIndex","setPreviousItemActive","setNextItemActive","onKeyDown","keyCode","SPACE","ENTER","TAB","tabOut","next","DOWN_ARROW","UP_ARROW","HOME","setFirstItemActive","END","setLastItemActive","PAGE_UP","setPreviousPageItemActive","PAGE_DOWN","setNextPageItemActive","preventDefault","emit","getOptionByValue","find","Boolean","indexOf","styles","inputs","[tabIndex]","(keydown)","(window:resize)","providers","String","Attribute","Output","McListBase","McList","McListSubheaderCssStyler","Directive","McListItemBase","McListItem","lineSetter","McLineSetter","classList","add","remove","McListModule","NgModule","imports","CommonModule","A11yModule","McLineModule","exports","declarations"],"mappings":"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"}