{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../../packages/mosaic/sidepanel/sidepanel-config.ts","../../../packages/mosaic/sidepanel/sidepanel-animations.ts","../../../packages/mosaic/sidepanel/sidepanel-container.component.ts","../../../packages/mosaic/sidepanel/sidepanel-ref.ts","../../../packages/mosaic/sidepanel/sidepanel.service.ts","../../../packages/mosaic/sidepanel/sidepanel-directives.ts","../../../packages/mosaic/sidepanel/sidepanel.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","create","__read","o","n","m","Symbol","iterator","r","e","i","ar","next","done","push","value","error","McSidepanelPosition","MC_SIDEPANEL_DATA","InjectionToken","McSidepanelAnimationState","this","data","position","Right","hasBackdrop","requiredBackdrop","disableClose","overlayPanelClass","mcSidepanelTransformAnimation","right","in","out","left","top","bottom","mcSidepanelAnimations","sidepanelState","trigger","state","style","transform","params","transformIn","transformOut","transition","animate","AnimationCurves","AccelerationCurve","DecelerationCurve","MC_SIDEPANEL_WITH_INDENT","MC_SIDEPANEL_WITH_SHADOW","McSidepanelContainerComponent","elementRef","changeDetectorRef","sidepanelConfig","withIndent","withShadow","_this","_super","animationState","Void","animationStateChanged","EventEmitter","__","constructor","__extends","ngOnDestroy","destroyed","attachComponentPortal","portal","validatePortalAttached","setAnimation","setPanelClass","portalOutlet","attachTemplatePortal","enter","Visible","detectChanges","exit","Hidden","markForCheck","onAnimation","event","emit","animationTransform","element","nativeElement","classList","add","hasAttached","Error","BasePortalOutlet","Component","args","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","animations","host","class","role","aria-modal","[attr.id]","[attr.tabindex]","[@state]","(@state.start)","(@state.done)","ElementRef","ChangeDetectorRef","McSidepanelConfig","Inject","ViewChild","CdkPortalOutlet","static","uniqueId","McSidepanelRef","containerInstance","overlayRef","config","afterClosed$","Subject","afterOpened$","id","pipe","filter","phaseName","toState","take","subscribe","complete","dispose","result","merge","backdropClick","keydownEvents","keyCode","ESCAPE","close","closed","detachBackdrop","afterClosed","asObservable","afterOpened","MC_SIDEPANEL_DEFAULT_OPTIONS","McSidepanelService","overlay","injector","defaultOptions","parentSidepanelService","openedSidepanelsAtThisLevel","defineProperty","openedSidepanels","closeSidepanels","open","componentOrTemplateRef","fullConfig","assign","getSidepanelById","createOverlay","container","attachContainer","ref","TemplateRef","TemplatePortal","$implicit","sidepanelRef","createInjector","ComponentPortal","undefined","contentRef","instance","removeOpenSidepanel","closeAll","find","sidepanel","openedSidepanelsWithSamePosition","getOpenedSidepanelsWithSamePosition","PortalInjector","WeakMap","length","containerPortal","attach","sidepanelContainer","injectionTokens","overlayConfig","OverlayConfig","backdropClass","getBackdropClass","maxWidth","panelClass","scrollStrategy","scrollStrategies","block","positionStrategy","global","sidepanels","arguments","concat","__spread","reverse","forEach","hasOpenedSidepanelWithBackdrop","some","index","indexOf","splice","Injectable","Overlay","Injector","decorators","type","Optional","SkipSelf","McSidepanelClose","sidepanelService","ngOnInit","setTimeout","openSidepanels","parent","parentElement","contains","getClosestSidepanel","ngOnChanges","changes","proxiedChange","mcSidepanelClose","sidepanelResult","currentValue","Directive","(click)","Input","NgModule","imports","CommonModule","OverlayModule","PortalModule","McCommonModule","McIconModule","providers","declarations","McSidepanelHeader","McSidepanelBody","McSidepanelFooter","McSidepanelActions","entryComponents","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { InjectionToken } from '@angular/core';\n\n\n/** Injection token that can be used to access the data that was passed in to a sidepanel. */\nexport const MC_SIDEPANEL_DATA = new InjectionToken<any>('McSidepanelData');\n\nexport enum McSidepanelPosition {\n    Right = 'right',\n    Left = 'left',\n    Top = 'top',\n    Bottom = 'bottom'\n}\n\nexport class McSidepanelConfig<D = any> {\n    /** ID for the sidepanel. If omitted, a unique one will be generated. */\n    id?: string;\n\n    /** Data being injected into the child component. */\n    data?: D | null = null;\n\n    position?: McSidepanelPosition = McSidepanelPosition.Right;\n\n    /** Whether the sidepanel has a backdrop. */\n    hasBackdrop?: boolean = true;\n\n    /** When we open multiple sidepanels, backdrop appears only once, except cases then this flag is true. */\n    requiredBackdrop?: boolean = false;\n\n    /** Whether the user can use escape or clicking outside to close the sidepanel. */\n    disableClose?: boolean = false;\n\n    /** Custom class for the overlay pane. */\n    overlayPanelClass?: string | string[] = '';\n}\n","import { animate, AnimationTriggerMetadata, state, style, transition, trigger } from '@angular/animations';\nimport { AnimationCurves } from '@ptsecurity/mosaic/core';\n\nimport { McSidepanelPosition } from './sidepanel-config';\n\n\nexport enum McSidepanelAnimationState {\n    Void = 'void',\n    Visible = 'visible',\n    Hidden = 'hidden'\n}\n\n// TODO Find a way to use dynamic keys and avoid error \"Expression form not supported.\"\n// tslint:disable-next-line\nexport const mcSidepanelTransformAnimation: Record<McSidepanelPosition, { in: string; out: string }> = {\n    right: { in: 'translateX(100%)', out: 'translateX(0%)' },\n    left: { in: 'translateX(-100%)', out: 'translateX(0%)' },\n    top: { in: 'translateY(-100%)', out: 'translateY(0%)' },\n    bottom: { in: 'translateY(100%)', out: 'translateY(0%)' }\n};\n\nexport const mcSidepanelAnimations: { readonly sidepanelState: AnimationTriggerMetadata } = {\n    sidepanelState: trigger('state', [\n        state(\n            'hidden',\n            style({ transform: '{{transformIn}}' }),\n            { params: { transformIn: mcSidepanelTransformAnimation[McSidepanelPosition.Right].in }}\n        ),\n        state(\n            'visible',\n            style({ transform: '{{transformOut}}' }),\n            { params: { transformOut: mcSidepanelTransformAnimation[McSidepanelPosition.Right].out }}\n        ),\n        transition(\n            'visible => void, visible => hidden',\n            animate(`200ms ${AnimationCurves.AccelerationCurve}`)\n        ),\n        transition(\n            'void => visible',\n            animate(`200ms ${AnimationCurves.DecelerationCurve}`)\n        )\n    ])\n};\n","import { AnimationEvent } from '@angular/animations';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal } from '@angular/cdk/portal';\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ComponentRef,\n    ElementRef,\n    EmbeddedViewRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    OnDestroy,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport {\n    mcSidepanelAnimations,\n    McSidepanelAnimationState,\n    mcSidepanelTransformAnimation\n} from './sidepanel-animations';\nimport { McSidepanelConfig, McSidepanelPosition } from './sidepanel-config';\n\n\nexport const MC_SIDEPANEL_WITH_INDENT =\n    new InjectionToken<boolean>('mc-sidepanel-with-indent');\n\nexport const MC_SIDEPANEL_WITH_SHADOW =\n    new InjectionToken<boolean>('mc-sidepanel-with-shadow');\n\n@Component({\n    selector: 'mc-sidepanel-container',\n    templateUrl: './sidepanel-container.component.html',\n    styleUrls: ['./sidepanel.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    animations: [mcSidepanelAnimations.sidepanelState],\n    host: {\n        class: 'mc-sidepanel-container',\n        role: 'dialog',\n        'aria-modal': 'true',\n        '[attr.id]': 'id',\n        '[attr.tabindex]': '-1',\n        '[@state]': `{\n            value: animationState,\n            params: animationTransform\n        }`,\n        '(@state.start)': 'onAnimation($event)',\n        '(@state.done)': 'onAnimation($event)'\n    }\n})\nexport class McSidepanelContainerComponent extends BasePortalOutlet implements OnDestroy {\n    /** ID for the container DOM element. */\n    id: string;\n\n    /** The portal outlet inside of this container into which the content will be loaded. */\n    @ViewChild(CdkPortalOutlet, {static: true}) portalOutlet: CdkPortalOutlet;\n\n    /** The state of the sidepanel animations. */\n    animationState: McSidepanelAnimationState = McSidepanelAnimationState.Void;\n\n    animationTransform: { transformIn: string; transformOut: string };\n\n    /** Emits whenever the state of the animation changes. */\n    animationStateChanged = new EventEmitter<AnimationEvent>();\n\n    /** Whether the component has been destroyed. */\n    private destroyed: boolean;\n\n    constructor(\n        private elementRef: ElementRef<HTMLElement>,\n        private changeDetectorRef: ChangeDetectorRef,\n        public sidepanelConfig: McSidepanelConfig,\n        @Inject(MC_SIDEPANEL_WITH_INDENT) public withIndent: boolean,\n        @Inject(MC_SIDEPANEL_WITH_SHADOW) public withShadow: boolean\n    ) {\n        super();\n    }\n\n    ngOnDestroy(): void {\n        this.destroyed = true;\n    }\n\n    /** Attach a component portal as content to this sidepanel container. */\n    attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n        this.validatePortalAttached();\n        this.setAnimation();\n        this.setPanelClass();\n\n        return this.portalOutlet.attachComponentPortal(portal);\n    }\n\n    /** Attach a template portal as content to this sidepanel container. */\n    attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n        this.validatePortalAttached();\n        this.setAnimation();\n        this.setPanelClass();\n\n        return this.portalOutlet.attachTemplatePortal(portal);\n    }\n\n    /** Begin animation of the sidepanel entrance into view. */\n    enter(): void {\n        if (!this.destroyed) {\n            this.animationState = McSidepanelAnimationState.Visible;\n            this.changeDetectorRef.detectChanges();\n        }\n    }\n\n    /** Begin animation of the sidepanel exiting from view. */\n    exit(): void {\n        if (!this.destroyed) {\n            this.animationState = McSidepanelAnimationState.Hidden;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    onAnimation(event: AnimationEvent) {\n        this.animationStateChanged.emit(event);\n    }\n\n    private setAnimation() {\n        const position: McSidepanelPosition = this.sidepanelConfig.position!;\n\n        this.animationTransform = {\n            transformIn: mcSidepanelTransformAnimation[position].in,\n            transformOut: mcSidepanelTransformAnimation[position].out\n        };\n    }\n\n    private setPanelClass() {\n        const element: HTMLElement = this.elementRef.nativeElement;\n        const position: McSidepanelPosition = this.sidepanelConfig.position!;\n\n        element.classList.add(`mc-sidepanel-container_${position}`);\n\n        if (this.withShadow) {\n            element.classList.add('mc-sidepanel-container_shadowed');\n        }\n    }\n\n    private validatePortalAttached() {\n        if (this.portalOutlet.hasAttached()) {\n            throw Error('Attempting to attach sidepanel content after content is already attached');\n        }\n    }\n}\n","import { OverlayRef } from '@angular/cdk/overlay';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { merge, Observable, Subject } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\n\nimport { McSidepanelAnimationState } from './sidepanel-animations';\nimport { McSidepanelConfig } from './sidepanel-config';\nimport { McSidepanelContainerComponent } from './sidepanel-container.component';\n\n\n// Counter for unique sidepanel ids.\nlet uniqueId = 0;\n\nexport class McSidepanelRef<T = any, R = any> {\n    readonly id: string;\n\n    /** Instance of the component making up the content of the sidepanel. */\n    instance: T;\n\n    /** Subject for notifying the user that the sidepanel has been closed and dismissed. */\n    private readonly afterClosed$ = new Subject<R | undefined>();\n\n    /** Subject for notifying the user that the sidepanel has opened and appeared. */\n    private readonly afterOpened$ = new Subject<void>();\n\n    /** Result to be passed down to the `afterDismissed` stream. */\n    private result: R | undefined;\n\n    constructor(\n        public containerInstance: McSidepanelContainerComponent,\n        private overlayRef: OverlayRef,\n        public config: McSidepanelConfig) {\n\n        this.id = this.config.id || `mc-sidepanel-${uniqueId++}`;\n        this.containerInstance.id = this.id;\n\n        // Emit when opening animation completes\n        containerInstance.animationStateChanged.pipe(\n            filter(\n                (event) => event.phaseName === 'done' && event.toState === McSidepanelAnimationState.Visible\n            ),\n            take(1)\n        ).subscribe(() => {\n            this.afterOpened$.next();\n            this.afterOpened$.complete();\n        });\n\n        // Dispose overlay when closing animation is complete\n        containerInstance.animationStateChanged.pipe(\n            filter(\n                (event) => event.phaseName === 'done' && event.toState === McSidepanelAnimationState.Hidden\n            ),\n            take(1)\n        ).subscribe(() => {\n            overlayRef.dispose();\n            this.afterClosed$.next(this.result);\n            this.afterClosed$.complete();\n        });\n\n        if (!containerInstance.sidepanelConfig.disableClose) {\n            merge(\n                overlayRef.backdropClick(),\n                overlayRef.keydownEvents().pipe(\n                    // tslint:disable:deprecation\n                    // keyCode is deprecated, but IE11 and Edge don't support code property, which we need use instead\n                    filter((event) => event.keyCode === ESCAPE)\n                )\n            ).subscribe(() => this.close());\n        }\n    }\n\n    close(result?: R): void {\n        if (!this.afterClosed$.closed) {\n            // Transition the backdrop in parallel to the sidepanel.\n            this.containerInstance.animationStateChanged.pipe(\n                filter((event) => event.phaseName === 'done'),\n                take(1)\n            ).subscribe(() => this.overlayRef.detachBackdrop());\n\n            this.result = result;\n            this.containerInstance.exit();\n        }\n    }\n\n    /** Gets an observable that is notified when the sidepanel is finished closing. */\n    afterClosed(): Observable<R | undefined> {\n        return this.afterClosed$.asObservable();\n    }\n\n    /** Gets an observable that is notified when the sidepanel has opened and appeared. */\n    afterOpened(): Observable<void> {\n        return this.afterOpened$.asObservable();\n    }\n}\n","import { Overlay, OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\nimport { ComponentPortal, ComponentType, PortalInjector, TemplatePortal } from '@angular/cdk/portal';\nimport {\n    ComponentRef,\n    Inject,\n    Injectable,\n    InjectionToken,\n    Injector, OnDestroy,\n    Optional,\n    SkipSelf,\n    TemplateRef\n} from '@angular/core';\n\nimport { MC_SIDEPANEL_DATA, McSidepanelConfig } from './sidepanel-config';\nimport {\n    McSidepanelContainerComponent,\n    MC_SIDEPANEL_WITH_INDENT,\n    MC_SIDEPANEL_WITH_SHADOW\n} from './sidepanel-container.component';\nimport { McSidepanelRef } from './sidepanel-ref';\n\n\n/** Injection token that can be used to specify default sidepanel options. */\nexport const MC_SIDEPANEL_DEFAULT_OPTIONS =\n    new InjectionToken<McSidepanelConfig>('mc-sidepanel-default-options');\n\n@Injectable()\nexport class McSidepanelService implements OnDestroy {\n    private openedSidepanelsAtThisLevel: McSidepanelRef[] = [];\n\n    /** Keeps track of the currently-open sidepanels. */\n    get openedSidepanels(): McSidepanelRef[] {\n        return this.parentSidepanelService ? this.parentSidepanelService.openedSidepanels :\n            this.openedSidepanelsAtThisLevel;\n    }\n\n    constructor(\n        private overlay: Overlay,\n        private injector: Injector,\n        @Optional() @Inject(MC_SIDEPANEL_DEFAULT_OPTIONS) private defaultOptions: McSidepanelConfig,\n        @Optional() @SkipSelf() private parentSidepanelService: McSidepanelService) {\n    }\n\n    ngOnDestroy() {\n        // Only close the sidepanels at this level on destroy\n        // since the parent service may still be active.\n        this.closeSidepanels(this.openedSidepanelsAtThisLevel);\n    }\n\n    open<T, D = any>(componentOrTemplateRef: ComponentType<T> | TemplateRef<T>,\n                     config?: McSidepanelConfig<D>): McSidepanelRef<T> {\n        const fullConfig = {\n            ...(this.defaultOptions || new McSidepanelConfig()),\n            ...config\n        };\n\n        if (fullConfig.id && this.getSidepanelById(fullConfig.id)) {\n            throw Error(`Sidepanel with id \"${fullConfig.id}\" exists already. The sidepanel id must be unique.`);\n        }\n\n        const overlayRef = this.createOverlay(fullConfig);\n        const container = this.attachContainer(overlayRef, fullConfig);\n        const ref = new McSidepanelRef(container, overlayRef, fullConfig);\n\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            container.attachTemplatePortal(new TemplatePortal<T>(componentOrTemplateRef, null!, {\n                $implicit: fullConfig.data,\n                sidepanelRef: ref\n            } as any));\n        } else {\n            const injector = this.createInjector(fullConfig, ref, container);\n            const portal = new ComponentPortal(componentOrTemplateRef, undefined, injector);\n            const contentRef = container.attachComponentPortal(portal);\n\n            ref.instance = contentRef.instance;\n        }\n\n        this.openedSidepanels.push(ref);\n        ref.afterClosed().subscribe(() => this.removeOpenSidepanel(ref));\n        container.enter();\n\n        return ref;\n    }\n\n    /**\n     * Closes all of the currently-open sidepanels.\n     */\n    closeAll(): void {\n        this.closeSidepanels(this.openedSidepanels);\n    }\n\n    /**\n     * Finds an open sidepanel by its id.\n     * @param id ID to use when looking up the sidepanel.\n     */\n    getSidepanelById(id: string): McSidepanelRef | undefined {\n        return this.openedSidepanels.find((sidepanel) => sidepanel.id === id);\n    }\n\n    /**\n     * Attaches the sidepanel container component to the overlay.\n     */\n    private attachContainer(overlayRef: OverlayRef, config: McSidepanelConfig): McSidepanelContainerComponent {\n        const openedSidepanelsWithSamePosition = this.getOpenedSidepanelsWithSamePosition(config);\n\n        // tslint:disable-next-line:deprecation\n        const injector = new PortalInjector(this.injector, new WeakMap<any>([\n            [McSidepanelConfig, config],\n            [MC_SIDEPANEL_WITH_INDENT, openedSidepanelsWithSamePosition.length >= 1],\n            [MC_SIDEPANEL_WITH_SHADOW, openedSidepanelsWithSamePosition.length < 2] // tslint:disable-line\n        ]));\n\n        const containerPortal = new ComponentPortal(McSidepanelContainerComponent, undefined, injector);\n        const containerRef: ComponentRef<McSidepanelContainerComponent> = overlayRef.attach(containerPortal);\n\n        return containerRef.instance;\n    }\n\n    /**\n     * Creates a custom injector to be used inside the sidepanel. This allows a component loaded inside\n     * of a sidepanel to close itself and, optionally, to return a value.\n     * @param config Config object that is used to construct the sidepanel.\n     * @param sidepanelRef Reference to the sidepanel.\n     * @param sidepanelContainer Sidepanel container element that wraps all of the contents.\n     * @returns The custom injector that can be used inside the sidepanel.\n     */\n    private createInjector<T>(\n        config: McSidepanelConfig,\n        sidepanelRef: McSidepanelRef<T>,\n        // tslint:disable-next-line:deprecation\n        sidepanelContainer: McSidepanelContainerComponent): PortalInjector {\n\n        // The McSidepanelContainerComponent is injected in the portal as the McSidepanelContainerComponent and\n        // the sidepanel's content are created out of the same ViewContainerRef and as such, are siblings for injector\n        // purposes. To allow the hierarchy that is expected, the McSidepanelContainerComponent is explicitly\n        // added to the injection tokens.\n        const injectionTokens = new WeakMap<any>([\n            [McSidepanelContainerComponent, sidepanelContainer],\n            [MC_SIDEPANEL_DATA, config.data],\n            [McSidepanelRef, sidepanelRef]\n        ]);\n\n        // tslint:disable-next-line:deprecation\n        return new PortalInjector(this.injector, injectionTokens);\n    }\n\n    /**\n     * Creates a new overlay and places it in the correct location.\n     * @param config The user-specified sidepanel config.\n     */\n    private createOverlay(config: McSidepanelConfig): OverlayRef {\n        const overlayConfig = new OverlayConfig({\n            hasBackdrop: config.hasBackdrop,\n            backdropClass: this.getBackdropClass(config),\n            maxWidth: '100%',\n            panelClass: config.overlayPanelClass,\n            scrollStrategy: this.overlay.scrollStrategies.block(),\n            positionStrategy: this.overlay.position().global()\n        });\n\n        return this.overlay.create(overlayConfig);\n    }\n\n    private closeSidepanels(sidepanels: McSidepanelRef[]) {\n        const reversedOpenedSidepanels = [...sidepanels.reverse()];\n\n        reversedOpenedSidepanels.forEach((sidepanelRef: McSidepanelRef) => {\n            sidepanelRef.close();\n        });\n    }\n\n    private getBackdropClass(config: McSidepanelConfig): string {\n        const hasOpenedSidepanelWithBackdrop =\n            this.openedSidepanels.some((sidepanelRef) => sidepanelRef.config.hasBackdrop!);\n\n        return config.requiredBackdrop || !hasOpenedSidepanelWithBackdrop ? 'cdk-overlay-dark-backdrop' :\n            'cdk-overlay-transparent-backdrop';\n    }\n\n    private getOpenedSidepanelsWithSamePosition(config: McSidepanelConfig): McSidepanelRef[] {\n        return this.openedSidepanels.filter((sidepanelRef) => sidepanelRef.config.position === config.position);\n    }\n\n    /**\n     * Removes a sidepanel from the array of open sidepanels.\n     * @param sidepanelRef Sidepanel to be removed.\n     */\n    private removeOpenSidepanel(sidepanelRef: McSidepanelRef) {\n        const index = this.openedSidepanels.indexOf(sidepanelRef);\n\n        if (index > -1) {\n            this.openedSidepanels.splice(index, 1);\n        }\n    }\n}\n","import { Component, Directive, ElementRef, Input, OnChanges, OnInit, Optional, SimpleChanges } from '@angular/core';\n\nimport { McSidepanelRef } from './sidepanel-ref';\nimport { McSidepanelService } from './sidepanel.service';\n\n\n/**\n * Button that will close the current sidepanel.\n */\n@Directive({\n    selector: 'button[mc-sidepanel-close], button[mcSidepanelClose]',\n    host: {\n        '(click)': 'sidepanelRef.close(sidepanelResult)',\n        class: 'mc-sidepanel-close'\n    }\n})\nexport class McSidepanelClose implements OnInit, OnChanges {\n    @Input('mc-sidepanel-close') sidepanelResult: any;\n\n    @Input('mcSidepanelClose') mcSidepanelClose: any;\n\n    constructor(\n        @Optional() public sidepanelRef: McSidepanelRef,\n        private elementRef: ElementRef<HTMLElement>,\n        private sidepanelService: McSidepanelService\n    ) {}\n\n    ngOnInit() {\n        if (!this.sidepanelRef) {\n            // When this directive is included in a sidepanel via TemplateRef (rather than being\n            // in a Component), the SidepanelRef isn't available via injection because embedded\n            // views cannot be given a custom injector. Instead, we look up the SidepanelRef by\n            // ID.\n            // This must occur in `onInit`, as the ID binding for the sidepanel container won't\n            // be resolved at constructor time. We use setTimeout by same reason.\n            setTimeout(() => {\n                this.sidepanelRef = getClosestSidepanel(this.elementRef, this.sidepanelService.openedSidepanels)!;\n            });\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const proxiedChange = changes.mcSidepanelClose || changes.sidepanelResult;\n\n        if (proxiedChange) {\n            this.sidepanelResult = proxiedChange.currentValue;\n        }\n    }\n}\n\n/**\n * Header of a sidepanel.\n */\n@Component({\n    selector: 'mc-sidepanel-header',\n    template: `\n        <div class=\"mc-sidepanel-title\">\n            <ng-content></ng-content>\n        </div>\n        <button *ngIf=\"closeable\" mc-sidepanel-close>\n            <span class=\"mc-sidepanel-close-x\">\n                <i mc-icon=\"mc-close-L_16\" class=\"mc-icon mc-icon_light\" color=\"second\"></i>\n            </span>\n        </button>\n    `,\n    host: {\n        class: 'mc-sidepanel-header'\n    }\n})\nexport class McSidepanelHeader {\n    @Input() closeable: boolean;\n}\n\n/**\n * Scrollable content container of a sidepanel.\n */\n@Directive({\n    selector: 'mc-sidepanel-body, [mc-sidepanel-body], mcSidepanelBody',\n    host: {\n        class: 'mc-sidepanel-body'\n    }\n})\nexport class McSidepanelBody {}\n\n/**\n * Footer of a sidepanel.\n */\n@Directive({\n    selector: 'mc-sidepanel-footer, [mc-sidepanel-footer], mcSidepanelFooter',\n    host: {\n        class: 'mc-sidepanel-footer'\n    }\n})\nexport class McSidepanelFooter {}\n\n/**\n * Actions block of a sidepanel footer.\n */\n@Directive({\n    selector: 'mc-sidepanel-actions, [mc-sidepanel-actions], mcSidepanelActions',\n    host: {\n        class: 'mc-sidepanel-actions'\n    }\n})\nexport class McSidepanelActions {}\n\n/**\n * Finds the closest McSidepanelRef to an element by looking at the DOM.\n * @param element Element relative to which to look for a sidepanel.\n * @param openSidepanels References to the currently-open sidepanels.\n */\nfunction getClosestSidepanel(element: ElementRef<HTMLElement>, openSidepanels: McSidepanelRef[]) {\n    let parent: HTMLElement | null = element.nativeElement.parentElement;\n\n    while (parent && !parent.classList.contains('mc-sidepanel-container')) {\n        parent = parent.parentElement;\n    }\n\n    return parent ? openSidepanels.find((sidepanel) => sidepanel.id === parent!.id) : null;\n}\n","import { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McSidepanelContainerComponent } from './sidepanel-container.component';\nimport {\n    McSidepanelActions,\n    McSidepanelBody,\n    McSidepanelClose,\n    McSidepanelFooter,\n    McSidepanelHeader\n} from './sidepanel-directives';\nimport { McSidepanelService } from './sidepanel.service';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        PortalModule,\n        McCommonModule,\n        McIconModule\n    ],\n    providers: [McSidepanelService],\n    declarations: [\n        McSidepanelContainerComponent,\n        McSidepanelClose,\n        McSidepanelHeader,\n        McSidepanelBody,\n        McSidepanelFooter,\n        McSidepanelActions\n    ],\n    entryComponents: [McSidepanelContainerComponent],\n    exports: [\n        McSidepanelContainerComponent,\n        McSidepanelClose,\n        McSidepanelHeader,\n        McSidepanelBody,\n        McSidepanelFooter,\n        McSidepanelActions\n    ]\n})\nexport class McSidepanelModule {}\n"]}