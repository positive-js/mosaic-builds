{"version":3,"file":"mosaic-datepicker.umd.min.js","sources":["../../packages/mosaic/datepicker/calendar.ts","../../packages/mosaic/datepicker/datepicker-animations.ts","../../packages/mosaic/datepicker/datepicker.ts","../../packages/mosaic/datepicker/datepicker-input.ts","../../packages/mosaic/datepicker/datepicker-toggle.ts","../../packages/mosaic/datepicker/datepicker-module.ts","../../packages/mosaic/datepicker/multi-year-view.ts","../../node_modules/tslib/tslib.es6.js","../../packages/mosaic/datepicker/datepicker-errors.ts","../../packages/mosaic/datepicker/datepicker-intl.ts","../../packages/mosaic/datepicker/calendar-body.ts","../../packages/mosaic/datepicker/month-view.ts","../../packages/mosaic/datepicker/year-view.ts"],"sourcesContent":["import { ComponentPortal, ComponentType, Portal } from '@angular/cdk/portal';\nimport {\n    AfterContentInit,\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Output,\n    SimpleChanges,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { McCalendarCellCssClasses } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\nimport { McDatepickerIntl } from './datepicker-intl';\nimport { McMonthView } from './month-view';\nimport { McMultiYearView, yearsPerPage } from './multi-year-view';\nimport { McYearView } from './year-view';\n\n\n/**\n * Possible views for the calendar.\n * @docs-private\n */\nexport type McCalendarView = 'month' | 'year' | 'multi-year';\n\n/** Default header for McCalendar */\n@Component({\n    selector: 'mc-calendar-header',\n    templateUrl: 'calendar-header.html',\n    exportAs: 'mcCalendarHeader',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCalendarHeader<D> {\n    constructor(private intl: McDatepickerIntl,\n                @Inject(forwardRef(() => McCalendar)) public calendar: McCalendar<D>,\n                @Optional() private dateAdapter: DateAdapter<D>,\n                @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n                changeDetectorRef: ChangeDetectorRef) {\n\n        this.calendar.stateChanges.subscribe(() => changeDetectorRef.markForCheck());\n    }\n\n    /** The label for the current calendar view. */\n    get periodButtonText(): string {\n        if (this.calendar.currentView === 'month') {\n            const label = this.dateAdapter\n                .format(this.calendar.activeDate, this.dateFormats.display.monthYearLabel);\n\n            return label[0].toLocaleUpperCase() + label.substr(1);\n        }\n\n        if (this.calendar.currentView === 'year') {\n            return this.dateAdapter.getYearName(this.calendar.activeDate);\n        }\n\n        const activeYear = this.dateAdapter.getYear(this.calendar.activeDate);\n        const firstYearInView = this.dateAdapter.getYearName(\n            // tslint:disable-next-line:no-magic-numbers\n            this.dateAdapter.createDate(activeYear - activeYear % 24, 0, 1));\n        const lastYearInView = this.dateAdapter.getYearName(\n            // tslint:disable-next-line:no-magic-numbers\n            this.dateAdapter.createDate(activeYear + yearsPerPage - 1 - activeYear % 24, 0, 1));\n\n        return `${firstYearInView} \\u2013 ${lastYearInView}`;\n    }\n\n    get periodButtonLabel(): string {\n        return this.calendar.currentView === 'month' ?\n            this.intl.switchToMultiYearViewLabel : this.intl.switchToMonthViewLabel;\n    }\n\n    /** The label for the previous button. */\n    get prevButtonLabel(): string {\n        return {\n            month: this.intl.prevMonthLabel,\n            year: this.intl.prevYearLabel,\n            'multi-year': this.intl.prevMultiYearLabel\n        }[this.calendar.currentView];\n    }\n\n    /** The label for the next button. */\n    get nextButtonLabel(): string {\n        return {\n            month: this.intl.nextMonthLabel,\n            year: this.intl.nextYearLabel,\n            'multi-year': this.intl.nextMultiYearLabel\n        }[this.calendar.currentView];\n    }\n\n    /** Handles user clicks on the period label. */\n    currentPeriodClicked(): void {\n        this.calendar.currentView = this.calendar.currentView === 'month' ? 'multi-year' : 'month';\n    }\n\n    /** Handles user clicks on the previous button. */\n    previousClicked(): void {\n        this.calendar.activeDate = this.calendar.currentView === 'month' ?\n            this.dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) :\n            this.dateAdapter.addCalendarYears(\n                this.calendar.activeDate, this.calendar.currentView === 'year' ? -1 : -yearsPerPage\n            );\n    }\n\n    /** Handles user clicks on the next button. */\n    nextClicked(): void {\n        this.calendar.activeDate = this.calendar.currentView === 'month' ?\n            this.dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) :\n            this.dateAdapter.addCalendarYears(\n                this.calendar.activeDate,\n                this.calendar.currentView === 'year' ? 1 : yearsPerPage\n            );\n    }\n\n    /** Whether the previous period button is enabled. */\n    previousEnabled(): boolean {\n        if (!this.calendar.minDate) {\n            return true;\n        }\n\n        return !this.calendar.minDate ||\n            !this.isSameView(this.calendar.activeDate, this.calendar.minDate);\n    }\n\n    /** Whether the next period button is enabled. */\n    nextEnabled(): boolean {\n        return !this.calendar.maxDate ||\n            !this.isSameView(this.calendar.activeDate, this.calendar.maxDate);\n    }\n\n    /** Whether the two dates represent the same view in the current view mode (month or year). */\n    private isSameView(date1: D, date2: D): boolean {\n        if (this.calendar.currentView === 'month') {\n            return this.dateAdapter.getYear(date1) === this.dateAdapter.getYear(date2) &&\n                this.dateAdapter.getMonth(date1) === this.dateAdapter.getMonth(date2);\n        }\n        if (this.calendar.currentView === 'year') {\n            return this.dateAdapter.getYear(date1) === this.dateAdapter.getYear(date2);\n        }\n\n        // Otherwise we are in 'multi-year' view.\n        return Math.floor(this.dateAdapter.getYear(date1) / yearsPerPage) ===\n            Math.floor(this.dateAdapter.getYear(date2) / yearsPerPage);\n    }\n}\n\n/**\n * A calendar that is used as part of the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-calendar',\n    templateUrl: 'calendar.html',\n    styleUrls: ['calendar.css'],\n    host: {\n        class: 'mc-calendar'\n    },\n    exportAs: 'mcCalendar',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCalendar<D> implements AfterContentInit, AfterViewChecked, OnDestroy, OnChanges {\n\n    /** A date representing the period (month or year) to start the calendar in. */\n    @Input()\n    get startAt(): D | null {\n        return this._startAt;\n    }\n\n    set startAt(value: D | null) {\n        this._startAt = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /**\n     * The current active date. This determines which time period is shown and which date is\n     * highlighted when using keyboard navigation.\n     */\n    get activeDate(): D {\n        return this.clampedActiveDate;\n    }\n\n    set activeDate(value: D) {\n        this.clampedActiveDate = this.dateAdapter.clampDate(value, this.minDate, this.maxDate);\n        this.stateChanges.next();\n    }\n\n    /** Whether the calendar is in month view. */\n    get currentView(): McCalendarView {\n        return this._currentView;\n    }\n\n    set currentView(value: McCalendarView) {\n        this._currentView = value;\n        this.moveFocusOnNextTick = true;\n    }\n\n    /** An input indicating the type of the header component, if set. */\n    @Input() headerComponent: ComponentType<any>;\n\n    /** A portal containing the header component type for this calendar. */\n    calendarHeaderPortal: Portal<any>;\n\n    /** Whether the calendar should be started in month or year view. */\n    @Input() startView: McCalendarView = 'month';\n\n    /** Function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Function that can be used to add custom CSS classes to dates. */\n    @Input() dateClass: (date: D) => McCalendarCellCssClasses;\n\n    /** Emits when the currently selected date changes. */\n    @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /**\n     * Emits the year chosen in multiyear view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /**\n     * Emits the month chosen in year view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits when any date is selected. */\n    @Output() readonly userSelection: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Reference to the current month view component. */\n    @ViewChild(McMonthView, {static: false}) monthView: McMonthView<D>;\n\n    /** Reference to the current year view component. */\n    @ViewChild(McYearView, {static: false}) yearView: McYearView<D>;\n\n    /** Reference to the current multi-year view component. */\n    @ViewChild(McMultiYearView, {static: false}) multiYearView: McMultiYearView<D>;\n\n    /**\n     * Emits whenever there is a state change that the header may need to respond to.\n     */\n    stateChanges = new Subject<void>();\n\n    private intlChanges: Subscription;\n\n    /**\n     * Used for scheduling that focus should be moved to the active cell on the next tick.\n     * We need to schedule it, rather than do it immediately, because we have to wait\n     * for Angular to re-evaluate the view children.\n     */\n    private moveFocusOnNextTick = false;\n    private _startAt: D | null;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n    private clampedActiveDate: D;\n    private _currentView: McCalendarView;\n\n    constructor(\n        intl: McDatepickerIntl,\n        @Optional() private dateAdapter: DateAdapter<D>,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        this.intlChanges = intl.changes.subscribe(() => {\n            changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        });\n    }\n\n    ngAfterContentInit() {\n        this.calendarHeaderPortal = new ComponentPortal(this.headerComponent || McCalendarHeader);\n        this.activeDate = this.startAt || this.dateAdapter.today();\n\n        // Assign to the private property since we don't want to move focus on init.\n        this._currentView = this.startView;\n    }\n\n    ngAfterViewChecked() {\n        if (this.moveFocusOnNextTick) {\n            this.moveFocusOnNextTick = false;\n            this.focusActiveCell();\n        }\n    }\n\n    ngOnDestroy() {\n        this.intlChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const change = changes.minDate || changes.maxDate || changes.dateFilter;\n\n        if (change && !change.firstChange) {\n            const view = this.getCurrentViewComponent();\n\n            if (view) {\n                // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n                // passed down to the view via data bindings which won't be up-to-date when we call `init`.\n                this.changeDetectorRef.detectChanges();\n                view.init();\n            }\n        }\n\n        this.stateChanges.next();\n    }\n\n    focusActiveCell() {\n        this.getCurrentViewComponent().focusActiveCell();\n    }\n\n    /** Updates today's date after an update of the active date */\n    updateTodaysDate() {\n        const view = this.currentView === 'month' ? this.monthView :\n            (this.currentView === 'year' ? this.yearView : this.multiYearView);\n\n        view.ngAfterContentInit();\n    }\n\n    /** Handles date selection in the month view. */\n    dateSelected(date: D): void {\n        if (!this.dateAdapter.sameDate(date, this.selected)) {\n            this.selectedChange.emit(date);\n        }\n    }\n\n    /** Handles year selection in the multiyear view. */\n    yearSelectedInMultiYearView(normalizedYear: D) {\n        this.yearSelected.emit(normalizedYear);\n    }\n\n    /** Handles month selection in the year view. */\n    monthSelectedInYearView(normalizedMonth: D) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n\n    userSelected(): void {\n        this.userSelection.emit();\n    }\n\n    /** Handles year/month selection in the multi-year/year views. */\n    goToDateInView(date: D, view: 'month' | 'year' | 'multi-year'): void {\n        this.activeDate = date;\n        this.currentView = view;\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Returns the component instance that corresponds to the current calendar view. */\n    private getCurrentViewComponent() {\n        return this.monthView || this.yearView || this.multiYearView;\n    }\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\n/**\n * Animations used by the mosaic datepicker.\n * @docs-private\n */\nexport const mcDatepickerAnimations: {\n    readonly transformPanel: AnimationTriggerMetadata;\n    readonly fadeInCalendar: AnimationTriggerMetadata;\n} = {\n    /** Transforms the height of the datepicker's calendar. */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(1, 0.8)'\n        })),\n        transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1, 1)'\n        }))),\n        transition('* => void', animate('100ms linear', style({ opacity: 0 })))\n    ]),\n\n    /** Fades in the content of the calendar. */\n    fadeInCalendar: trigger('fadeInCalendar', [\n        state('void', style({ opacity: 0 })),\n        state('enter', style({ opacity: 1 })),\n\n        // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n        transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n    ])\n};\n\n// todo should be put into polyfils\n// https://github.com/angular/angular/issues/24769\nif (!Element.prototype.matches) {\n    Element.prototype.matches = (Element.prototype as any).msMatchesSelector;\n}\n","// tslint:disable:no-unbound-method\n// tslint:disable:no-magic-numbers\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n    Overlay,\n    OverlayConfig,\n    OverlayRef,\n    PositionStrategy,\n    ScrollStrategy\n} from '@angular/cdk/overlay';\nimport { ComponentPortal, ComponentType } from '@angular/cdk/portal';\nimport { DOCUMENT } from '@angular/common';\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    Component,\n    ComponentRef,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    Optional,\n    Output,\n    ViewChild,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { DateAdapter } from '@ptsecurity/cdk/datetime';\nimport { ESCAPE, UP_ARROW } from '@ptsecurity/cdk/keycodes';\nimport {\n    CanColor,\n    CanColorCtor,\n    mixinColor,\n    ThemePalette\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { merge, Observable, Subject, Subscription } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\n\nimport { McCalendar } from './calendar';\nimport { McCalendarCellCssClasses } from './calendar-body';\nimport { mcDatepickerAnimations } from './datepicker-animations';\nimport { createMissingDateImplError } from './datepicker-errors';\nimport { McDatepickerInput } from './datepicker-input';\n\n\n/** Used to generate a unique ID for each datepicker instance. */\nlet datepickerUid = 0;\n\n/** Injection token that determines the scroll handling while the calendar is open. */\nexport const MC_DATEPICKER_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('mc-datepicker-scroll-strategy');\n\n/** @docs-private */\n// tslint:disable-next-line:naming-convention\nexport function MC_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => ScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_DATEPICKER_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_DATEPICKER_SCROLL_STRATEGY_FACTORY\n};\n\n// Boilerplate for applying mixins to McDatepickerContent.\n/** @docs-private */\nexport class McDatepickerContentBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McDatepickerContentMixinBase: CanColorCtor & typeof McDatepickerContentBase =\n    mixinColor(McDatepickerContentBase);\n\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * McCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * @docs-private\n */\n@Component({\n    selector: 'mc-datepicker__content',\n    templateUrl: 'datepicker-content.html',\n    styleUrls: ['datepicker-content.css'],\n    host: {\n        class: 'mc-datepicker__content',\n        '[@transformPanel]': '\"enter\"'\n    },\n    animations: [\n        mcDatepickerAnimations.transformPanel,\n        mcDatepickerAnimations.fadeInCalendar\n    ],\n    exportAs: 'mcDatepickerContent',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['color']\n})\nexport class McDatepickerContent<D> extends McDatepickerContentMixinBase\n    implements AfterViewInit, CanColor {\n\n    /** Reference to the internal calendar component. */\n    @ViewChild(McCalendar, {static: false}) calendar: McCalendar<D>;\n\n    /** Reference to the datepicker that created the overlay. */\n    datepicker: McDatepicker<D>;\n\n    /** Whether the datepicker is above or below the input. */\n    isAbove: boolean;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    ngAfterViewInit() {\n        this.calendar.focusActiveCell();\n    }\n}\n\n\n// TODO: We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"mcDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the datepicker popup/dialog. */\n@Component({\n    selector: 'mc-datepicker',\n    template: '',\n    exportAs: 'mcDatepicker',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    providers: [{ provide: McFormFieldControl, useExisting: McDatepicker }]\n})\nexport class McDatepicker<D> implements OnDestroy, CanColor {\n\n    /** The date to open the calendar to initially. */\n    @Input()\n    get startAt(): D | null {\n        // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n        // selected value is.\n        return this._startAt || (this.datepickerInput ? this.datepickerInput.value : null);\n    }\n\n    set startAt(value: D | null) {\n        this._startAt = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** Color palette to use on the datepicker's calendar. */\n    @Input()\n    get color(): ThemePalette {\n        // @ts-ignore:next-line\n        return this._color ||\n            (this.datepickerInput ? this.datepickerInput.getThemePalette() : undefined);\n    }\n\n    set color(value: ThemePalette) {\n        this._color = value;\n    }\n\n    /** Whether the datepicker pop-up should be disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled === undefined && this.datepickerInput ?\n            this.datepickerInput.disabled : !!this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        const newValue = coerceBooleanProperty(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this.disabledChange.next(newValue);\n        }\n    }\n\n    /** Whether the calendar is open. */\n    @Input()\n    get opened(): boolean {\n        return this._opened;\n    }\n\n    set opened(value: boolean) {\n        if (value) {\n            this.open();\n        } else {\n            this.close();\n        }\n    }\n\n    /** The currently selected date. */\n    get selected(): D | null {\n        return this.validSelected;\n    }\n\n    set selected(value: D | null) {\n        this.validSelected = value;\n    }\n\n    /** The minimum selectable date. */\n    get minDate(): D | null {\n        return this.datepickerInput && this.datepickerInput.min;\n    }\n\n    /** The maximum selectable date. */\n    get maxDate(): D | null {\n        return this.datepickerInput && this.datepickerInput.max;\n    }\n\n    get dateFilter(): (date: D | null) => boolean {\n        return this.datepickerInput && this.datepickerInput.dateFilter;\n    }\n\n\n    get value(): D | null {\n        return this.selected;\n    }\n\n    /** An input indicating the type of the custom header component for the calendar, if set. */\n    @Input() calendarHeaderComponent: ComponentType<any>;\n\n    /** The view that the calendar should start in. */\n    @Input() startView: 'month' | 'year' | 'multi-year' = 'month';\n\n    /**\n     * Emits selected year in multiyear view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /**\n     * Emits selected month in year view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Classes to be passed to the date picker panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[];\n\n    /** Function that can be used to add custom CSS classes to dates. */\n    @Input() dateClass: (date: D) => McCalendarCellCssClasses;\n\n    /** Emits when the datepicker has been opened. */\n    @Output('opened') openedStream: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emits when the datepicker has been closed. */\n    @Output('closed') closedStream: EventEmitter<void> = new EventEmitter<void>();\n\n    /** The id for the datepicker calendar. */\n    id: string = `mc-datepicker-${datepickerUid++}`;\n\n    /** A reference to the overlay when the calendar is opened as a popup. */\n    popupRef: OverlayRef;\n\n    /** The input element this datepicker is associated with. */\n    datepickerInput: McDatepickerInput<D>;\n\n    readonly stateChanges: Observable<void> = new Subject<void>();\n\n    /** Emits when the datepicker is disabled. */\n    readonly disabledChange = new Subject<boolean>();\n\n    /** Emits new selected date when selected date changes. */\n    readonly selectedChanged = new Subject<D>();\n    private scrollStrategy: () => ScrollStrategy;\n    private _startAt: D | null;\n    private _disabled: boolean;\n    private _opened = false;\n    private validSelected: D | null = null;\n    private _color: ThemePalette;\n\n    /** A portal containing the calendar for this datepicker. */\n    private calendarPortal: ComponentPortal<McDatepickerContent<D>>;\n\n    /** Reference to the component instantiated in popup mode. */\n    private popupComponentRef: ComponentRef<McDatepickerContent<D>> | null;\n\n    /** The element that was focused before the datepicker was opened. */\n    private focusedElementBeforeOpen: HTMLElement | null = null;\n\n    /** Subscription to value changes in the associated input element. */\n    private inputSubscription = Subscription.EMPTY;\n\n    constructor(private overlay: Overlay,\n                private ngZone: NgZone,\n                private viewContainerRef: ViewContainerRef,\n                @Inject(MC_DATEPICKER_SCROLL_STRATEGY) scrollStrategy: any,\n                @Optional() private dateAdapter: DateAdapter<D>,\n                @Optional() private dir: Directionality,\n                @Optional() @Inject(DOCUMENT) private document: any) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        this.scrollStrategy = scrollStrategy;\n    }\n\n    ngOnDestroy() {\n        this.close();\n        this.inputSubscription.unsubscribe();\n        this.disabledChange.complete();\n\n        if (this.popupRef) {\n            this.popupRef.dispose();\n            this.popupComponentRef = null;\n        }\n    }\n\n    /** Selects the given date */\n    select(date: D): void {\n        const oldValue = this.selected;\n        this.selected = date;\n        if (!this.dateAdapter.sameDate(oldValue, this.selected)) {\n            this.selectedChanged.next(date);\n        }\n    }\n\n    /** Emits the selected year in multiyear view */\n    selectYear(normalizedYear: D): void {\n        this.yearSelected.emit(normalizedYear);\n    }\n\n    /** Emits selected month in year view */\n    selectMonth(normalizedMonth: D): void {\n        this.monthSelected.emit(normalizedMonth);\n    }\n\n    /**\n     * Register an input with this datepicker.\n     * @param input The datepicker input to register with this datepicker.\n     */\n    registerInput(input: McDatepickerInput<D>): void {\n        if (this.datepickerInput) {\n            throw Error('A McDatepicker can only be associated with a single input.');\n        }\n        this.datepickerInput = input;\n        this.inputSubscription =\n            this.datepickerInput.valueChange.subscribe((value: D | null) => this.selected = value);\n    }\n\n    /** Open the calendar. */\n    open(): void {\n        if (this._opened || this.disabled) {\n            return;\n        }\n        if (!this.datepickerInput) {\n            throw Error('Attempted to open an McDatepicker with no associated input.');\n        }\n        if (this.document) {\n            this.focusedElementBeforeOpen = this.document.activeElement;\n        }\n\n        this.openAsPopup();\n\n        this._opened = true;\n        this.openedStream.emit();\n    }\n\n    /** Close the calendar. */\n    close(): void {\n        if (!this._opened) {\n            return;\n        }\n\n        if (this.popupRef && this.popupRef.hasAttached()) {\n            this.popupRef.detach();\n        }\n\n        if (this.calendarPortal && this.calendarPortal.isAttached) {\n            this.calendarPortal.detach();\n        }\n\n        const completeClose = () => {\n            // The `_opened` could've been reset already if\n            // we got two events in quick succession.\n            if (this._opened) {\n                this._opened = false;\n                this.closedStream.emit();\n                this.focusedElementBeforeOpen = null;\n\n                this.datepickerInput.elementRef.nativeElement.focus();\n            }\n        };\n\n        if (this.focusedElementBeforeOpen &&\n            typeof this.focusedElementBeforeOpen.focus === 'function') {\n            // Because IE moves focus asynchronously, we can't count on it being restored before we've\n            // marked the datepicker as closed. If the event fires out of sequence and the element that\n            // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n            // able to close the calendar at all. We work around it by making the logic, that marks\n            // the datepicker as closed, async as well.\n            this.focusedElementBeforeOpen.focus();\n            setTimeout(completeClose);\n        } else {\n            completeClose();\n        }\n    }\n\n    /** Open the calendar as a popup. */\n    private openAsPopup(): void {\n        if (!this.calendarPortal) {\n            this.calendarPortal = new ComponentPortal<McDatepickerContent<D>>(McDatepickerContent,\n                this.viewContainerRef);\n        }\n\n        if (!this.popupRef) {\n            this.createPopup();\n        }\n\n        if (!this.popupRef.hasAttached()) {\n            this.popupComponentRef = this.popupRef.attach(this.calendarPortal);\n            this.popupComponentRef.instance.datepicker = this;\n            this.setColor();\n\n            // Update the position once the calendar has rendered.\n            this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n                this.popupRef.updatePosition();\n            });\n        }\n    }\n\n    /** Create the popup. */\n    private createPopup(): void {\n        const overlayConfig = new OverlayConfig({\n            positionStrategy: this.createPopupPositionStrategy(),\n            hasBackdrop: true,\n            backdropClass: 'mc-overlay-transparent-backdrop',\n            direction: this.dir,\n            scrollStrategy: this.scrollStrategy(),\n            panelClass: 'mc-datepicker__popup'\n        });\n\n        this.popupRef = this.overlay.create(overlayConfig);\n        this.popupRef.overlayElement.setAttribute('role', 'dialog');\n\n        merge(\n            this.popupRef.backdropClick(),\n            this.popupRef.detachments(),\n            this.popupRef.keydownEvents().pipe(filter((event) => {\n                // Closing on alt + up is only valid when there's an input associated with the datepicker.\n                // tslint:disable-next-line:deprecation\n                return event.keyCode === ESCAPE || (this.datepickerInput && event.altKey && event.keyCode === UP_ARROW);\n            }))\n        ).subscribe(() => this.close());\n    }\n\n    /** Create the popup PositionStrategy. */\n    private createPopupPositionStrategy(): PositionStrategy {\n        return this.overlay.position()\n            .flexibleConnectedTo(this.datepickerInput.elementRef)\n            .withTransformOriginOn('.mc-datepicker__content')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withLockedPosition()\n            .withPositions([\n                {\n                    originX: 'start',\n                    originY: 'bottom',\n                    overlayX: 'start',\n                    overlayY: 'top'\n                },\n                {\n                    originX: 'start',\n                    originY: 'top',\n                    overlayX: 'start',\n                    overlayY: 'bottom'\n                },\n                {\n                    originX: 'end',\n                    originY: 'bottom',\n                    overlayX: 'end',\n                    overlayY: 'top'\n                },\n                {\n                    originX: 'end',\n                    originY: 'top',\n                    overlayX: 'end',\n                    overlayY: 'bottom'\n                }\n            ]);\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Passes the current theme color along to the calendar overlay. */\n    private setColor(): void {\n        const color = this.color;\n        if (this.popupComponentRef) {\n            this.popupComponentRef.instance.color = color;\n        }\n    }\n}\n","// tslint:disable:no-empty\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Output\n} from '@angular/core';\nimport {\n    AbstractControl,\n    ControlValueAccessor,\n    NG_VALIDATORS,\n    NG_VALUE_ACCESSOR,\n    ValidationErrors,\n    Validator,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport { DOWN_ARROW } from '@ptsecurity/cdk/keycodes';\nimport { ThemePalette } from '@ptsecurity/mosaic/core';\nimport { McFormField } from '@ptsecurity/mosaic/form-field';\nimport { MC_INPUT_VALUE_ACCESSOR } from '@ptsecurity/mosaic/input';\nimport { Subscription } from 'rxjs';\n\nimport { McDatepicker } from './datepicker';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\n/** @docs-private */\nexport const MC_DATEPICKER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McDatepickerInput),\n    multi: true\n};\n\n/** @docs-private */\nexport const MC_DATEPICKER_VALIDATORS: any = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => McDatepickerInput),\n    multi: true\n};\n\n\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use McDatepickerInputEvent instead.\n */\nexport class McDatepickerInputEvent<D> {\n    /** The new value for the target datepicker input. */\n    value: D | null;\n\n    constructor(\n        /** Reference to the datepicker input component that emitted the event. */\n        public target: McDatepickerInput<D>,\n        /** Reference to the native input element associated with the datepicker input. */\n        public targetElement: HTMLElement) {\n        this.value = this.target.value;\n    }\n}\n\n\n/** Directive used to connect an input to a McDatepicker. */\n@Directive({\n    selector: 'input[mcDatepicker]',\n    providers: [\n        MC_DATEPICKER_VALUE_ACCESSOR,\n        MC_DATEPICKER_VALIDATORS,\n        { provide: MC_INPUT_VALUE_ACCESSOR, useExisting: McDatepickerInput }\n    ],\n    host: {\n        '[attr.aria-haspopup]': 'true',\n        '[attr.aria-owns]': '(datepicker?.opened && datepicker.id) || null',\n        '[attr.min]': 'min ? dateAdapter.toIso8601(min) : null',\n        '[attr.max]': 'max ? dateAdapter.toIso8601(max) : null',\n        '[disabled]': 'disabled',\n        '(input)': 'onInput($event.target.value)',\n        '(change)': 'onChange()',\n        '(blur)': 'onBlur()',\n        '(keydown)': 'onKeydown($event)'\n    },\n    exportAs: 'mcDatepickerInput'\n})\nexport class McDatepickerInput<D> implements ControlValueAccessor, OnDestroy, Validator {\n    /** The datepicker that this input is associated with. */\n    @Input()\n    set mcDatepicker(value: McDatepicker<D>) {\n        if (!value) {\n            return;\n        }\n\n        this.datepicker = value;\n        this.datepicker.registerInput(this);\n        this.datepickerSubscription.unsubscribe();\n\n        this.datepickerSubscription = this.datepicker.selectedChanged.subscribe((selected: D) => {\n            this.value = selected;\n            this.cvaOnChange(selected);\n            this.onTouched();\n            this.dateInput.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n            this.dateChange.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n        });\n    }\n\n    /** Function that can be used to filter out dates within the datepicker. */\n    @Input()\n    set mcDatepickerFilter(value: (date: D | null) => boolean) {\n        this.dateFilter = value;\n        this.validatorOnChange();\n    }\n\n    /** The value of the input. */\n    @Input()\n    get value(): D | null {\n        return this._value;\n    }\n\n    set value(value: D | null) {\n        // tslint:disable-next-line:no-parameter-reassignment\n        value = this.dateAdapter.deserialize(value);\n        this.lastValueValid = !value || this.dateAdapter.isValid(value);\n        // tslint:disable-next-line:no-parameter-reassignment\n        value = this.getValidDateOrNull(value);\n        const oldDate = this.value;\n        this._value = value;\n        this.formatValue(value);\n\n        if (!this.dateAdapter.sameDate(oldDate, value)) {\n            this.valueChange.emit(value);\n        }\n    }\n\n    /** The minimum valid date. */\n    @Input()\n    get min(): D | null {\n        return this._min;\n    }\n\n    set min(value: D | null) {\n        this._min = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.validatorOnChange();\n    }\n\n    /** The maximum valid date. */\n    @Input()\n    get max(): D | null {\n        return this._max;\n    }\n\n    set max(value: D | null) {\n        this._max = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.validatorOnChange();\n    }\n\n    /** Whether the datepicker-input is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return !!this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        const newValue = coerceBooleanProperty(value);\n        const element = this.elementRef.nativeElement;\n\n        if (this._disabled !== newValue) {\n            this._disabled = newValue;\n            this.disabledChange.emit(newValue);\n        }\n\n        // We need to null check the `blur` method, because it's undefined during SSR.\n        if (newValue && element.blur) {\n            // Normally, native input elements automatically blur if they turn disabled. This behavior\n            // is problematic, because it would mean that it triggers another change detection cycle,\n            // which then causes a changed after checked error if the input element was focused before.\n            element.blur();\n        }\n    }\n\n    datepicker: McDatepicker<D>;\n    dateFilter: (date: D | null) => boolean;\n\n    /** Emits when a `change` event is fired on this `<input>`. */\n    @Output() readonly dateChange: EventEmitter<McDatepickerInputEvent<D>> =\n        new EventEmitter<McDatepickerInputEvent<D>>();\n\n    /** Emits when an `input` event is fired on this `<input>`. */\n    @Output() readonly dateInput: EventEmitter<McDatepickerInputEvent<D>> =\n        new EventEmitter<McDatepickerInputEvent<D>>();\n\n    /** Emits when the value changes (either due to user input or programmatic change). */\n    valueChange = new EventEmitter<D | null>();\n\n    /** Emits when the disabled state has changed */\n    disabledChange = new EventEmitter<boolean>();\n    private _value: D | null;\n    private _min: D | null;\n    private _max: D | null;\n    private _disabled: boolean;\n\n    private datepickerSubscription = Subscription.EMPTY;\n\n    private localeSubscription = Subscription.EMPTY;\n\n    /** Whether the last value set on the input was valid. */\n    private lastValueValid = false;\n\n    /** The combined form control validator for this input. */\n    private validator: ValidatorFn | null;\n\n    constructor(\n        public elementRef: ElementRef<HTMLInputElement>,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        @Optional() private formField: McFormField\n    ) {\n        this.validator = Validators.compose([\n            this.parseValidator,\n            this.minValidator,\n            this.maxValidator,\n            this.filterValidator\n        ]);\n\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        // Update the displayed date when the locale changes.\n        this.localeSubscription = dateAdapter.localeChanges.subscribe(() => {\n            this.value = this.value;\n        });\n    }\n\n    onTouched = () => {\n    }\n\n    ngOnDestroy() {\n        this.datepickerSubscription.unsubscribe();\n        this.localeSubscription.unsubscribe();\n        this.valueChange.complete();\n        this.disabledChange.complete();\n    }\n\n    /** @docs-private */\n    registerOnValidatorChange(fn: () => void): void {\n        this.validatorOnChange = fn;\n    }\n\n    /** @docs-private */\n    validate(c: AbstractControl): ValidationErrors | null {\n        return this.validator ? this.validator(c) : null;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value: D): void {\n        this.value = value;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this.cvaOnChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    onKeydown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n\n        if (this.datepicker && isAltDownArrow && !this.elementRef.nativeElement.readOnly) {\n            this.datepicker.open();\n            event.preventDefault();\n        }\n    }\n\n    onInput(value: string) {\n        let date = this.dateAdapter.parse(value, this.dateFormats.parse.dateInput);\n        this.lastValueValid = !date || this.dateAdapter.isValid(date);\n        date = this.getValidDateOrNull(date);\n\n        if (!this.dateAdapter.sameDate(date, this._value)) {\n            this._value = date;\n            this.cvaOnChange(date);\n            this.valueChange.emit(date);\n            this.dateInput.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n        }\n    }\n\n    onChange() {\n        this.dateChange.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n    }\n\n    /** Returns the palette used by the input's form field, if any. */\n    getThemePalette(): ThemePalette | undefined {\n        return this.formField ? this.formField.color : undefined;\n    }\n\n    /** Handles blur events on the input. */\n    onBlur() {\n        // Reformat the input only if we have a valid value.\n        if (this.value) {\n            this.formatValue(this.value);\n        }\n\n        this.onTouched();\n    }\n\n    private cvaOnChange: (value: any) => void = () => {\n    }\n\n    private validatorOnChange = () => {\n    }\n\n    /** The form control validator for whether the input parses. */\n    private parseValidator: ValidatorFn = (): ValidationErrors | null => {\n        return this.lastValueValid ?\n            null : { mcDatepickerParse: { text: this.elementRef.nativeElement.value } };\n    }\n\n    /** The form control validator for the min date. */\n    private minValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n        const controlValue = this.getValidDateOrNull(this.dateAdapter.deserialize(control.value));\n\n        return (!this.min || !controlValue ||\n            this.dateAdapter.compareDate(this.min, controlValue) <= 0) ?\n            null : { mcDatepickerMin: { min: this.min, actual: controlValue } };\n    }\n\n    /** The form control validator for the max date. */\n    private maxValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n        const controlValue = this.getValidDateOrNull(this.dateAdapter.deserialize(control.value));\n\n        return (!this.max || !controlValue ||\n            this.dateAdapter.compareDate(this.max, controlValue) >= 0) ?\n            null : { mcDatepickerMax: { max: this.max, actual: controlValue } };\n    }\n\n    /** The form control validator for the date filter. */\n    private filterValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n        const controlValue = this.getValidDateOrNull(this.dateAdapter.deserialize(control.value));\n\n        return !this.dateFilter || !controlValue || this.dateFilter(controlValue) ?\n            null : { mcDatepickerFilter: true };\n    }\n\n    /** Formats a value and sets it on the input element. */\n    private formatValue(value: D | null) {\n        this.elementRef.nativeElement.value =\n            value ? this.dateAdapter.format(value, this.dateFormats.display.dateInput) : '';\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    Directive,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    ViewEncapsulation,\n    ViewChild\n} from '@angular/core';\nimport { McButton } from '@ptsecurity/mosaic/button';\nimport { merge, of as observableOf, Subscription } from 'rxjs';\n\nimport { McDatepicker } from './datepicker';\nimport { McDatepickerIntl } from './datepicker-intl';\n\n\n/** Can be used to override the icon of a `mcDatepickerToggle`. */\n@Directive({\n    selector: '[mcDatepickerToggleIcon]'\n})\nexport class McDatepickerToggleIcon {\n}\n\n\n@Component({\n    selector: 'mc-datepicker-toggle',\n    templateUrl: 'datepicker-toggle.html',\n    styleUrls: ['datepicker-toggle.css'],\n    host: {\n        class: 'mc-datepicker-toggle',\n        // Always set the tabindex to -1 so that it doesn't overlap with any custom tabindex the\n        // consumer may have provided, while still being able to receive focus.\n        '[attr.tabindex]': '-1',\n        '[class.mc-datepicker-toggle_active]': 'datepicker && datepicker.opened',\n        '[class.mc-warn]': 'datepicker && datepicker.color === \"error\"',\n        '(focus)': 'button.focus()'\n    },\n    exportAs: 'mcDatepickerToggle',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McDatepickerToggle<D> implements AfterContentInit, OnChanges, OnDestroy {\n\n    /** Whether the toggle button is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled === undefined ? this.datepicker.disabled : !!this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    /** Datepicker instance that the button will toggle. */\n    @Input('for') datepicker: McDatepicker<D>;\n\n    /** Tabindex for the toggle. */\n    @Input() tabIndex: number | null;\n\n    /** Custom icon set by the consumer. */\n    @ContentChild(McDatepickerToggleIcon, {static: false}) customIcon: McDatepickerToggleIcon;\n\n    /** Underlying button element. */\n    @ViewChild('button', {static: false}) button: McButton;\n    private stateChanges = Subscription.EMPTY;\n\n    private _disabled: boolean;\n\n    constructor(\n        public intl: McDatepickerIntl,\n        private changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') defaultTabIndex: string\n    ) {\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.datepicker) {\n            this.watchStateChanges();\n        }\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.unsubscribe();\n    }\n\n    ngAfterContentInit() {\n        this.watchStateChanges();\n    }\n\n    open(event: Event): void {\n        if (this.datepicker && !this.disabled) {\n            this.datepicker.open();\n            event.stopPropagation();\n        }\n    }\n\n    private watchStateChanges() {\n        const datepickerDisabled = this.datepicker ? this.datepicker.disabledChange : observableOf();\n        const inputDisabled = this.datepicker && this.datepicker.datepickerInput ?\n            this.datepicker.datepickerInput.disabledChange : observableOf();\n        const datepickerToggled = this.datepicker ?\n            merge(this.datepicker.openedStream, this.datepicker.closedStream) :\n            observableOf();\n\n        this.stateChanges.unsubscribe();\n        this.stateChanges = merge(\n            this.intl.changes,\n            datepickerDisabled,\n            inputDisabled,\n            datepickerToggled\n        ).subscribe(() => this.changeDetectorRef.markForCheck());\n    }\n}\n","import { A11yModule } from '@angular/cdk/a11y';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCalendar, McCalendarHeader } from './calendar';\nimport { McCalendarBody } from './calendar-body';\nimport {\n    McDatepicker,\n    McDatepickerContent,\n    MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER\n} from './datepicker';\nimport { McDatepickerInput } from './datepicker-input';\nimport { McDatepickerIntl } from './datepicker-intl';\nimport { McDatepickerToggle, McDatepickerToggleIcon } from './datepicker-toggle';\nimport { McMonthView } from './month-view';\nimport { McMultiYearView } from './multi-year-view';\nimport { McYearView } from './year-view';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McButtonModule,\n        OverlayModule,\n        A11yModule,\n        PortalModule,\n        McIconModule\n    ],\n    exports: [\n        McCalendar,\n        McCalendarBody,\n        McDatepicker,\n        McDatepickerContent,\n        McDatepickerInput,\n        McDatepickerToggle,\n        McDatepickerToggleIcon,\n        McMonthView,\n        McYearView,\n        McMultiYearView,\n        McCalendarHeader,\n        McButtonModule\n    ],\n    declarations: [\n        McCalendar,\n        McCalendarBody,\n        McDatepicker,\n        McDatepickerContent,\n        McDatepickerInput,\n        McDatepickerToggle,\n        McDatepickerToggleIcon,\n        McMonthView,\n        McYearView,\n        McMultiYearView,\n        McCalendarHeader\n    ],\n    providers: [\n        McDatepickerIntl,\n        MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER\n    ],\n    entryComponents: [\n        McDatepickerContent,\n        McCalendarHeader\n    ]\n})\nexport class McDatepickerModule {\n}\n","// tslint:disable:no-magic-numbers\nimport { Directionality } from '@angular/cdk/bidi';\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { DateAdapter } from '@ptsecurity/cdk/datetime';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    UP_ARROW,\n    SPACE\n} from '@ptsecurity/cdk/keycodes';\n\nimport { McCalendarBody, McCalendarCell } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\nexport const yearsPerPage = 24;\n\nexport const yearsPerRow = 4;\n\n\n/**\n * An internal component used to display a year selector in the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-multi-year-view',\n    templateUrl: 'multi-year-view.html',\n    exportAs: 'mcMultiYearView',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McMultiYearView<D> implements AfterContentInit {\n    /** The date to display in this multi-year view (everything other than the year is ignored). */\n    @Input()\n    get activeDate(): D {\n        return this._activeDate;\n    }\n\n    set activeDate(value: D) {\n        const oldActiveDate = this._activeDate;\n        const validDate =\n            this.getValidDateOrNull(this.dateAdapter.deserialize(value)) || this.dateAdapter.today();\n        this._activeDate = this.dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n        if (Math.floor(this.dateAdapter.getYear(oldActiveDate) / yearsPerPage) !==\n            Math.floor(this.dateAdapter.getYear(this._activeDate) / yearsPerPage)) {\n            this.init();\n        }\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.selectedYear = this._selected && this.dateAdapter.getYear(this._selected);\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** A function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Emits when a new year is selected. */\n    @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits the selected year. This doesn't imply a change on the selected date */\n    @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits when any date is activated. */\n    @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** The body of calendar table */\n    @ViewChild(McCalendarBody, {static: false}) mcCalendarBody: McCalendarBody;\n\n    /** Grid of calendar cells representing the currently displayed years. */\n    years: McCalendarCell[][];\n\n    /** The year that today falls on. */\n    todayYear: number;\n\n    /** The year of the selected date. Null if the selected date is null. */\n    selectedYear: number | null;\n    private _activeDate: D;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() private dir?: Directionality\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        this._activeDate = this.dateAdapter.today();\n    }\n\n    ngAfterContentInit() {\n        this.init();\n    }\n\n    /** Initializes this multi-year view. */\n    init() {\n        this.todayYear = this.dateAdapter.getYear(this.dateAdapter.today());\n        const activeYear = this.dateAdapter.getYear(this._activeDate);\n        const activeOffset = activeYear % yearsPerPage;\n        this.years = [];\n        for (let i = 0, row: number[] = []; i < yearsPerPage; i++) {\n            row.push(activeYear - activeOffset + i);\n            if (row.length === yearsPerRow) {\n                this.years.push(row.map((year) => this.createCellForYear(year)));\n                row = [];\n            }\n        }\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** Handles when a new year is selected. */\n    onYearSelected(year: number) {\n        this.yearSelected.emit(this.dateAdapter.createDate(year, 0, 1));\n        const month = this.dateAdapter.getMonth(this.activeDate);\n        const daysInMonth =\n            this.dateAdapter.getNumDaysInMonth(this.dateAdapter.createDate(year, month, 1));\n        this.selectedChange.emit(this.dateAdapter.createDate(year, month,\n            Math.min(this.dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n\n    /** Handles keydown events on the calendar body when calendar is in multi-year view. */\n    handleCalendarBodyKeydown(event: KeyboardEvent): void {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n        const oldActiveDate = this._activeDate;\n        const isRtl = this.isRtl();\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n                break;\n            case HOME:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate,\n                    -this.dateAdapter.getYear(this._activeDate) % yearsPerPage);\n                break;\n            case END:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate,\n                    yearsPerPage - this.dateAdapter.getYear(this._activeDate) % yearsPerPage - 1);\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(\n                        this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(\n                        this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n                break;\n            case ENTER:\n            case SPACE:\n                this.onYearSelected(this.dateAdapter.getYear(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n\n        if (this.dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n\n        this.focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n\n    getActiveCell(): number {\n        return this.dateAdapter.getYear(this.activeDate) % yearsPerPage;\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.mcCalendarBody.focusActiveCell();\n    }\n\n    /** Creates an McCalendarCell for the given year. */\n    private createCellForYear(year: number) {\n        const yearName = this.dateAdapter.getYearName(this.dateAdapter.createDate(year, 0, 1));\n\n        return new McCalendarCell(year, yearName, yearName, this.shouldEnableYear(year));\n    }\n\n    /** Whether the given year is enabled. */\n    private shouldEnableYear(year: number) {\n        // disable if the year is greater than maxDate lower than minDate\n        if (year === undefined || year === null ||\n            (this.maxDate && year > this.dateAdapter.getYear(this.maxDate)) ||\n            (this.minDate && year < this.dateAdapter.getYear(this.minDate))) {\n            return false;\n        }\n\n        // enable if it reaches here and there's no filter defined\n        if (!this.dateFilter) {\n            return true;\n        }\n\n        const firstOfYear = this.dateAdapter.createDate(year, 0, 1);\n\n        // If any date in the year is enabled count the year as enabled.\n        for (let date = firstOfYear; this.dateAdapter.getYear(date) === year;\n             date = this.dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Determines whether the user has the RTL layout direction. */\n    private isRtl() {\n        return this.dir && this.dir.value === 'rtl';\n    }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/** @docs-private */\nexport function createMissingDateImplError(provider: string) {\n    return Error(\n        `McDatepicker: No provider found for ${provider}. You must import one of the existing ` +\n        `modules at your application root or provide a custom implementation or use exists ones.`);\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n\n/** Datepicker data that requires internationalization. */\n@Injectable({ providedIn: 'root' })\nexport class McDatepickerIntl {\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     */\n    readonly changes: Subject<void> = new Subject<void>();\n\n    /** A label for the calendar popup (used by screen readers). */\n    calendarLabel: string = 'Calendar';\n\n    /** A label for the button used to open the calendar popup (used by screen readers). */\n    openCalendarLabel: string = 'Open calendar';\n\n    /** A label for the previous month button (used by screen readers). */\n    prevMonthLabel: string = 'Previous month';\n\n    /** A label for the next month button (used by screen readers). */\n    nextMonthLabel: string = 'Next month';\n\n    /** A label for the previous year button (used by screen readers). */\n    prevYearLabel: string = 'Previous year';\n\n    /** A label for the next year button (used by screen readers). */\n    nextYearLabel: string = 'Next year';\n\n    /** A label for the previous multi-year button (used by screen readers). */\n    prevMultiYearLabel: string = 'Previous 20 years';\n\n    /** A label for the next multi-year button (used by screen readers). */\n    nextMultiYearLabel: string = 'Next 20 years';\n\n    /** A label for the 'switch to month view' button (used by screen readers). */\n    switchToMonthViewLabel: string = 'Choose date';\n\n    /** A label for the 'switch to year view' button (used by screen readers). */\n    switchToMultiYearViewLabel: string = 'Choose month and year';\n}\n","// tslint:disable:no-magic-numbers\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    Output,\n    ViewEncapsulation,\n    NgZone,\n    OnChanges,\n    SimpleChanges\n} from '@angular/core';\nimport { take } from 'rxjs/operators';\n\n\n/**\n * Extra CSS classes that can be associated with a calendar cell.\n */\nexport type McCalendarCellCssClasses = string | string[] | Set<string> | { [key: string]: any };\n\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * @docs-private\n */\nexport class McCalendarCell {\n    constructor(\n        public value: number,\n        public displayValue: string,\n        public ariaLabel: string,\n        public enabled: boolean,\n        public cssClasses?: McCalendarCellCssClasses\n    ) {\n    }\n}\n\n\n/**\n * An internal component used to display calendar data in a table.\n * @docs-private\n */\n@Component({\n    selector: '[mc-calendar-body]',\n    templateUrl: 'calendar-body.html',\n    styleUrls: ['calendar-body.css'],\n    host: {\n        class: 'mc-calendar__body',\n        role: 'grid',\n        'aria-readonly': 'true'\n    },\n    exportAs: 'mcCalendarBody',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCalendarBody implements OnChanges {\n    /** The label for the table. (e.g. \"Jan 2017\"). */\n    @Input() label: string;\n\n    /** The cells to display in the table. */\n    @Input() rows: McCalendarCell[][];\n\n    /** The value in the table that corresponds to today. */\n    @Input() todayValue: number;\n\n    /** The value in the table that is currently selected. */\n    @Input() selectedValue: number;\n\n    /** The minimum number of free cells needed to fit the label in the first row. */\n    @Input() labelMinRequiredCells: number;\n\n    /** The number of columns in the table. */\n    @Input() numCols = 7;\n\n    /** The cell number of the active cell in the table. */\n    @Input() activeCell = 0;\n\n    /**\n     * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n     * maintained even as the table resizes.\n     */\n    @Input() cellAspectRatio = 1;\n\n    /** Emits when a new value is selected. */\n    @Output() readonly selectedValueChange: EventEmitter<number> = new EventEmitter<number>();\n\n    /** The number of blank cells to put at the beginning for the first row. */\n    firstRowOffset: number;\n\n    /** Padding for the individual date cells. */\n    cellPadding: string;\n\n    /** Width of an individual cell. */\n    cellWidth: string;\n\n    constructor(private elementRef: ElementRef<HTMLElement>, private ngZone: NgZone) {\n    }\n\n    cellClicked(cell: McCalendarCell): void {\n        if (cell.enabled) {\n            this.selectedValueChange.emit(cell.value);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const columnChanges = changes.numCols;\n        // tslint:disable-next-line:no-this-assignment\n        const { rows, numCols } = this;\n\n        if (changes.rows || columnChanges) {\n            this.firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n        }\n\n        if (changes.cellAspectRatio || columnChanges || !this.cellPadding) {\n            this.cellPadding = `${this.cellAspectRatio * 50 / numCols}%`;\n        }\n\n        if (columnChanges || !this.cellWidth) {\n            this.cellWidth = `${100 / numCols}%`;\n        }\n    }\n\n    isActiveCell(rowIndex: number, colIndex: number): boolean {\n        let cellNumber = rowIndex * this.numCols + colIndex;\n\n        // Account for the fact that the first row may not have as many cells.\n        if (rowIndex) {\n            cellNumber -= this.firstRowOffset;\n        }\n\n        return cellNumber === this.activeCell;\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.ngZone.runOutsideAngular(() => {\n            this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n                const activeCell: HTMLElement | null =\n                    this.elementRef.nativeElement.querySelector('.mc-calendar__body_active');\n\n                if (activeCell) {\n                    activeCell.focus();\n                }\n            });\n        });\n    }\n}\n","// tslint:disable:no-magic-numbers\nimport { Directionality } from '@angular/cdk/bidi';\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Optional,\n    Output,\n    ViewEncapsulation,\n    ViewChild\n} from '@angular/core';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    UP_ARROW,\n    SPACE\n} from '@ptsecurity/cdk/keycodes';\n\nimport { McCalendarBody, McCalendarCell, McCalendarCellCssClasses } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\nconst DAYS_PER_WEEK = 7;\n\n\n/**\n * An internal component used to display a single month in the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-month-view',\n    templateUrl: 'month-view.html',\n    exportAs: 'mcMonthView',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McMonthView<D> implements AfterContentInit {\n    /**\n     * The date to display in this month view (everything other than the month and year is ignored).\n     */\n    @Input()\n    get activeDate(): D {\n        return this._activeDate;\n    }\n\n    set activeDate(value: D) {\n        const oldActiveDate = this._activeDate;\n        const validDate =\n            this.getValidDateOrNull(this.dateAdapter.deserialize(value)) || this.dateAdapter.today();\n        this._activeDate = this.dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n        if (!this.hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n            this.init();\n        }\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.selectedDate = this.getDateInCurrentMonth(this._selected);\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** Function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Function that can be used to add custom CSS classes to dates. */\n    @Input() dateClass: (date: D) => McCalendarCellCssClasses;\n\n    /** Emits when a new date is selected. */\n    @Output() readonly selectedChange: EventEmitter<D | null> = new EventEmitter<D | null>();\n\n    /** Emits when any date is selected. */\n    @Output() readonly userSelection: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emits when any date is activated. */\n    @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** The body of calendar table */\n    @ViewChild(McCalendarBody, {static: false}) mcCalendarBody: McCalendarBody;\n\n    /** The label for this month (e.g. \"January 2017\"). */\n    monthLabel: string;\n\n    /** Grid of calendar cells representing the dates of the month. */\n    weeks: McCalendarCell[][];\n\n    /** The number of blank cells in the first row before the 1st of the month. */\n    firstWeekOffset: number;\n\n    /**\n     * The date of the month that the currently selected Date falls on.\n     * Null if the currently selected Date is in another month.\n     */\n    selectedDate: number | null;\n\n    /** The date of the month that today falls on. Null if today is in another month. */\n    todayDate: number | null;\n\n    /** The names of the weekdays. */\n    weekdays: { long: string; narrow: string }[];\n    private _activeDate: D;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() private dir?: Directionality\n    ) {\n\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        const firstDayOfWeek = this.dateAdapter.getFirstDayOfWeek();\n        const narrowWeekdays = this.dateAdapter.getDayOfWeekNames('narrow');\n        const longWeekdays = this.dateAdapter.getDayOfWeekNames('long');\n\n        // Rotate the labels for days of the week based on the configured first day of the week.\n        const weekdays = longWeekdays.map((long, i) => {\n            return { long, narrow: narrowWeekdays[i] };\n        });\n        this.weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n\n        this._activeDate = this.dateAdapter.today();\n    }\n\n    ngAfterContentInit() {\n        this.init();\n    }\n\n    /** Handles when a new date is selected. */\n    dateSelected(date: number) {\n        if (this.selectedDate !== date) {\n            const selectedYear = this.dateAdapter.getYear(this.activeDate);\n            const selectedMonth = this.dateAdapter.getMonth(this.activeDate);\n            const selectedDate = this.dateAdapter.createDate(selectedYear, selectedMonth, date);\n\n            this.selectedChange.emit(selectedDate);\n        }\n\n        this.userSelection.emit();\n    }\n\n    /** Handles keydown events on the calendar body when calendar is in month view. */\n    handleCalendarBodyKeydown(event: KeyboardEvent): void {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n        const oldActiveDate = this._activeDate;\n        const isRtl = this.isRtl();\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, -7);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, 7);\n                break;\n            case HOME:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate,\n                    1 - this.dateAdapter.getDate(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate,\n                    (this.dateAdapter.getNumDaysInMonth(this._activeDate) -\n                        this.dateAdapter.getDate(this._activeDate)));\n                break;\n            case PAGE_UP:\n                this.activeDate = event.altKey ?\n                    this.dateAdapter.addCalendarYears(this._activeDate, -1) :\n                    this.dateAdapter.addCalendarMonths(this._activeDate, -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = event.altKey ?\n                    this.dateAdapter.addCalendarYears(this._activeDate, 1) :\n                    this.dateAdapter.addCalendarMonths(this._activeDate, 1);\n                break;\n            case ENTER:\n            case SPACE:\n                if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n                    this.dateSelected(this.dateAdapter.getDate(this._activeDate));\n                    this.userSelection.emit();\n                    // Prevent unexpected default actions such as form submission.\n                    event.preventDefault();\n                }\n\n                return;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n\n        if (this.dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n\n        this.focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n\n    /** Initializes this month view. */\n    init() {\n        this.selectedDate = this.getDateInCurrentMonth(this.selected);\n        this.todayDate = this.getDateInCurrentMonth(this.dateAdapter.today());\n        this.monthLabel =\n            this.dateAdapter.getMonthNames('short')[this.dateAdapter.getMonth(this.activeDate)];\n\n        this.monthLabel = this.monthLabel[0].toLocaleUpperCase() + this.monthLabel.substr(1);\n\n        const firstOfMonth = this.dateAdapter.createDate(this.dateAdapter.getYear(this.activeDate),\n            this.dateAdapter.getMonth(this.activeDate), 1);\n        this.firstWeekOffset =\n            (DAYS_PER_WEEK + this.dateAdapter.getDayOfWeek(firstOfMonth) -\n                this.dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n\n        this.createWeekCells();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.mcCalendarBody.focusActiveCell();\n    }\n\n    /** Creates McCalendarCells for the dates in this month. */\n    private createWeekCells() {\n        const daysInMonth = this.dateAdapter.getNumDaysInMonth(this.activeDate);\n        const dateNames = this.dateAdapter.getDateNames();\n\n        this.weeks = [[]];\n\n        for (let i = 0, cell = this.firstWeekOffset; i < daysInMonth; i++, cell++) {\n            if (cell === DAYS_PER_WEEK) {\n                this.weeks.push([]);\n                cell = 0;\n            }\n            const date = this.dateAdapter.createDate(\n                this.dateAdapter.getYear(this.activeDate),\n                this.dateAdapter.getMonth(this.activeDate), i + 1);\n            const enabled = this.shouldEnableDate(date);\n            const ariaLabel = this.dateAdapter.format(date, this.dateFormats.display.dateA11yLabel);\n            const cellClasses = this.dateClass ? this.dateClass(date) : undefined;\n\n            this.weeks[this.weeks.length - 1]\n                .push(new McCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses));\n        }\n    }\n\n    /** Date filter for the month */\n    private shouldEnableDate(date: D): boolean {\n        return !!date &&\n            (!this.dateFilter || this.dateFilter(date)) &&\n            (!this.minDate || this.dateAdapter.compareDate(date, this.minDate) >= 0) &&\n            (!this.maxDate || this.dateAdapter.compareDate(date, this.maxDate) <= 0);\n    }\n\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     */\n    private getDateInCurrentMonth(date: D | null): number | null {\n        return date && this.hasSameMonthAndYear(date, this.activeDate) ?\n            this.dateAdapter.getDate(date) : null;\n    }\n\n    /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\n    private hasSameMonthAndYear(d1: D | null, d2: D | null): boolean {\n        return !!(d1 && d2 && this.dateAdapter.getMonth(d1) === this.dateAdapter.getMonth(d2) &&\n            this.dateAdapter.getYear(d1) === this.dateAdapter.getYear(d2));\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Determines whether the user has the RTL layout direction. */\n    private isRtl() {\n        return this.dir && this.dir.value === 'rtl';\n    }\n}\n","import { Directionality } from '@angular/cdk/bidi';\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    UP_ARROW,\n    SPACE\n} from '@ptsecurity/cdk/keycodes';\n\nimport { McCalendarBody, McCalendarCell } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\n/**\n * An internal component used to display a single year in the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-year-view',\n    templateUrl: 'year-view.html',\n    exportAs: 'mcYearView',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McYearView<D> implements AfterContentInit {\n    /** The date to display in this year view (everything other than the year is ignored). */\n    @Input()\n    get activeDate(): D {\n        return this._activeDate;\n    }\n\n    set activeDate(value: D) {\n        const oldActiveDate = this._activeDate;\n        const validDate =\n            this.getValidDateOrNull(this.dateAdapter.deserialize(value)) || this.dateAdapter.today();\n        this._activeDate = this.dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n        if (this.dateAdapter.getYear(oldActiveDate) !== this.dateAdapter.getYear(this._activeDate)) {\n            this.init();\n        }\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.selectedMonth = this.getMonthInCurrentYear(this._selected);\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** A function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Emits when a new month is selected. */\n    @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits the selected month. This doesn't imply a change on the selected date */\n    @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits when any date is activated. */\n    @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** The body of calendar table */\n    @ViewChild(McCalendarBody, {static: false}) mcCalendarBody: McCalendarBody;\n\n    /** Grid of calendar cells representing the months of the year. */\n    months: McCalendarCell[][];\n\n    /** The label for this year (e.g. \"2017\"). */\n    yearLabel: string;\n\n    /** The month in this year that today falls on. Null if today is in a different year. */\n    todayMonth: number | null;\n\n    /**\n     * The month in this year that the selected Date falls on.\n     * Null if the selected Date is in a different year.\n     */\n    selectedMonth: number | null;\n    private _activeDate: D;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() private dir?: Directionality\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        this._activeDate = this.dateAdapter.today();\n    }\n\n    ngAfterContentInit() {\n        this.init();\n    }\n\n    /** Handles when a new month is selected. */\n    onMonthSelected(month: number) {\n        const normalizedDate =\n            this.dateAdapter.createDate(this.dateAdapter.getYear(this.activeDate), month, 1);\n\n        this.monthSelected.emit(normalizedDate);\n\n        const daysInMonth = this.dateAdapter.getNumDaysInMonth(normalizedDate);\n\n        this.selectedChange.emit(this.dateAdapter.createDate(\n            this.dateAdapter.getYear(this.activeDate), month,\n            Math.min(this.dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n\n    /** Handles keydown events on the calendar body when calendar is in year view. */\n    handleCalendarBodyKeydown(event: KeyboardEvent): void {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n        const oldActiveDate = this._activeDate;\n        const isRtl = this.isRtl();\n\n        const VERTICAL_SHIFT = 4;\n        const PAGE_SHIFT = 10;\n        const MAX_MONTH_INDEX = 11;\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, -VERTICAL_SHIFT);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, VERTICAL_SHIFT);\n                break;\n            case HOME:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate,\n                    -this.dateAdapter.getMonth(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate,\n                    MAX_MONTH_INDEX - this.dateAdapter.getMonth(this._activeDate));\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -PAGE_SHIFT : -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(this._activeDate, event.altKey ? PAGE_SHIFT : 1);\n                break;\n            case ENTER:\n            case SPACE:\n                this.onMonthSelected(this.dateAdapter.getMonth(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n\n        if (this.dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n\n        this.focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n\n    /** Initializes this year view. */\n    init() {\n        this.selectedMonth = this.getMonthInCurrentYear(this.selected);\n        this.todayMonth = this.getMonthInCurrentYear(this.dateAdapter.today());\n        this.yearLabel = this.dateAdapter.getYearName(this.activeDate);\n\n        const monthNames = this.dateAdapter.getMonthNames('short');\n\n        // First row of months only contains 5 elements so we can fit the year label on the same row.\n        // tslint:disable-next-line:no-magic-numbers\n        this.months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map((row) => row.map(\n            (month) => this.createCellForMonth(month, monthNames[month])));\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.mcCalendarBody.focusActiveCell();\n    }\n\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     */\n    private getMonthInCurrentYear(date: D | null) {\n        return date && this.dateAdapter.getYear(date) === this.dateAdapter.getYear(this.activeDate) ?\n            this.dateAdapter.getMonth(date) : null;\n    }\n\n    /** Creates an McCalendarCell for the given month. */\n    private createCellForMonth(month: number, monthName: string) {\n        const ariaLabel = this.dateAdapter.format(\n            this.dateAdapter.createDate(this.dateAdapter.getYear(this.activeDate), month, 1),\n            this.dateFormats.display.monthYearA11yLabel);\n\n        const newMonthName = monthName[0].toLocaleUpperCase() + monthName.substr(1);\n\n        return new McCalendarCell(\n            month, newMonthName, ariaLabel, this.shouldEnableMonth(month));\n    }\n\n    /** Whether the given month is enabled. */\n    private shouldEnableMonth(month: number) {\n\n        const activeYear = this.dateAdapter.getYear(this.activeDate);\n\n        if (month === undefined || month === null ||\n            this.isYearAndMonthAfterMaxDate(activeYear, month) ||\n            this.isYearAndMonthBeforeMinDate(activeYear, month)) {\n            return false;\n        }\n\n        if (!this.dateFilter) {\n            return true;\n        }\n\n        const firstOfMonth = this.dateAdapter.createDate(activeYear, month, 1);\n\n        // If any date in the month is enabled count the month as enabled.\n        for (let date = firstOfMonth; this.dateAdapter.getMonth(date) === month;\n             date = this.dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Tests whether the combination month/year is after this.maxDate, considering\n     * just the month and year of this.maxDate\n     */\n    private isYearAndMonthAfterMaxDate(year: number, month: number) {\n        if (this.maxDate) {\n            const maxYear = this.dateAdapter.getYear(this.maxDate);\n            const maxMonth = this.dateAdapter.getMonth(this.maxDate);\n\n            return year > maxYear || (year === maxYear && month > maxMonth);\n        }\n\n        return false;\n    }\n\n    /**\n     * Tests whether the combination month/year is before this.minDate, considering\n     * just the month and year of this.minDate\n     */\n    private isYearAndMonthBeforeMinDate(year: number, month: number) {\n        if (this.minDate) {\n            const minYear = this.dateAdapter.getYear(this.minDate);\n            const minMonth = this.dateAdapter.getMonth(this.minDate);\n\n            return year < minYear || (year === minYear && month < minMonth);\n        }\n\n        return false;\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Determines whether the user has the RTL layout direction. */\n    private isRtl() {\n        return this.dir && this.dir.value === 'rtl';\n    }\n}\n"],"names":["McCalendar","prototype","yearSelectedInMultiYearView","normalizedYear","this","yearSelected","emit","monthSelectedInYearView","normalizedMonth","monthSelected","userSelected","userSelection","goToDateInView","date","view","activeDate","currentView","getValidDateOrNull","obj","dateAdapter","isDateInstance","isValid","getCurrentViewComponent","monthView","yearView","multiYearView","type","Component","args","selector","template","styles","host","class","exportAs","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","McDatepickerIntl","DateAdapter","decorators","Optional","undefined","Inject","MC_DATE_FORMATS","ChangeDetectorRef","startAt","Input","selected","minDate","maxDate","headerComponent","startView","dateFilter","dateClass","selectedChange","Output","ViewChild","McMonthView","static","McYearView","McMultiYearView","mcDatepickerAnimations","transformPanel","trigger","state","style","opacity","transform","transition","animate","fadeInCalendar","Element","matches","msMatchesSelector","datepickerUid","MC_DATEPICKER_SCROLL_STRATEGY","InjectionToken","MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER","provide","deps","Overlay","useFactory","MC_DATEPICKER_SCROLL_STRATEGY_FACTORY","McDatepickerContentBase","_elementRef","McDatepickerContentMixinBase","mixinColor","McDatepickerContent","_super","elementRef","call","tslib_1.__extends","ngAfterViewInit","calendar","focusActiveCell","[@transformPanel]","animations","inputs","ElementRef","McDatepicker","overlay","ngZone","viewContainerRef","scrollStrategy","dir","document","EventEmitter","openedStream","closedStream","id","stateChanges","Subject","disabledChange","selectedChanged","_opened","validSelected","focusedElementBeforeOpen","inputSubscription","Subscription","EMPTY","createMissingDateImplError","Object","defineProperty","_startAt","datepickerInput","value","deserialize","_color","getThemePalette","_disabled","disabled","newValue","coerceBooleanProperty","next","open","close","min","max","ngOnDestroy","unsubscribe","complete","popupRef","dispose","popupComponentRef","select","oldValue","sameDate","selectYear","selectMonth","registerInput","input","_this","Error","valueChange","subscribe","activeElement","openAsPopup","hasAttached","detach","calendarPortal","isAttached","completeClose","nativeElement","focus","setTimeout","ComponentPortal","createPopup","attach","instance","datepicker","setColor","onStable","asObservable","pipe","take","updatePosition","overlayConfig","OverlayConfig","positionStrategy","createPopupPositionStrategy","hasBackdrop","backdropClass","direction","panelClass","create","overlayElement","setAttribute","merge","backdropClick","detachments","keydownEvents","filter","event","keyCode","ESCAPE","altKey","UP_ARROW","position","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withLockedPosition","withPositions","originX","originY","overlayX","overlayY","color","providers","McFormFieldControl","useExisting","NgZone","ViewContainerRef","Directionality","DOCUMENT","opened","calendarHeaderComponent","MC_DATEPICKER_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","forwardRef","McDatepickerInput","multi","MC_DATEPICKER_VALIDATORS","NG_VALIDATORS","McDatepickerInputEvent","target","targetElement","dateFormats","formField","dateChange","dateInput","datepickerSubscription","localeSubscription","lastValueValid","onTouched","cvaOnChange","validatorOnChange","parseValidator","mcDatepickerParse","text","minValidator","control","controlValue","compareDate","mcDatepickerMin","actual","maxValidator","mcDatepickerMax","filterValidator","mcDatepickerFilter","validator","Validators","compose","localeChanges","_value","oldDate","formatValue","_min","_max","element","blur","registerOnValidatorChange","fn","validate","c","writeValue","registerOnChange","registerOnTouched","setDisabledState","isDisabled","onKeydown","isAltDownArrow","DOWN_ARROW","readOnly","preventDefault","onInput","parse","onChange","onBlur","format","display","Directive","MC_INPUT_VALUE_ACCESSOR","[attr.aria-haspopup]","[attr.aria-owns]","[attr.min]","[attr.max]","[disabled]","(input)","(change)","(blur)","(keydown)","McFormField","mcDatepicker","McDatepickerToggleIcon","McDatepickerToggle","intl","changeDetectorRef","defaultTabIndex","parsedTabIndex","Number","tabIndex","ngOnChanges","changes","watchStateChanges","ngAfterContentInit","stopPropagation","datepickerDisabled","observableOf","inputDisabled","datepickerToggled","markForCheck","[attr.tabindex]","[class.mc-datepicker-toggle_active]","[class.mc-warn]","(focus)","String","Attribute","customIcon","ContentChild","button","McDatepickerModule","NgModule","imports","CommonModule","McButtonModule","OverlayModule","A11yModule","PortalModule","McIconModule","exports","McCalendarBody","McCalendarHeader","declarations","entryComponents","__extends","d","b","__","constructor","extendStatics","provider","scrollStrategies","reposition","setPrototypeOf","__proto__","Array","p","hasOwnProperty","calendarLabel","openCalendarLabel","prevMonthLabel","nextMonthLabel","prevYearLabel","nextYearLabel","prevMultiYearLabel","nextMultiYearLabel","switchToMonthViewLabel","switchToMultiYearViewLabel","Injectable","providedIn","McCalendarCell","displayValue","ariaLabel","enabled","cssClasses","numCols","activeCell","cellAspectRatio","selectedValueChange","cellClicked","cell","columnChanges","_a","rows","firstRowOffset","length","cellPadding","cellWidth","isActiveCell","rowIndex","colIndex","cellNumber","runOutsideAngular","querySelector","role","aria-readonly","label","todayValue","selectedValue","labelMinRequiredCells","activeDateChange","firstDayOfWeek","getFirstDayOfWeek","narrowWeekdays","getDayOfWeekNames","longWeekdays","weekdays","map","long","i","narrow","slice","concat","_activeDate","today","oldActiveDate","validDate","clampDate","hasSameMonthAndYear","init","_selected","selectedDate","getDateInCurrentMonth","_minDate","_maxDate","dateSelected","selectedYear","getYear","selectedMonth","getMonth","createDate","handleCalendarBodyKeydown","isRtl","LEFT_ARROW","addCalendarDays","RIGHT_ARROW","HOME","getDate","END","getNumDaysInMonth","PAGE_UP","addCalendarYears","addCalendarMonths","PAGE_DOWN","ENTER","SPACE","todayDate","monthLabel","getMonthNames","toLocaleUpperCase","substr","firstOfMonth","firstWeekOffset","getDayOfWeek","createWeekCells","mcCalendarBody","daysInMonth","dateNames","getDateNames","weeks","push","shouldEnableDate","dateA11yLabel","cellClasses","d1","d2","Math","floor","todayYear","activeYear","activeOffset","years","row","year","createCellForYear","onYearSelected","month","yearsPerPage","getActiveCell","yearName","getYearName","shouldEnableYear","firstOfYear","getMonthInCurrentYear","onMonthSelected","normalizedDate","todayMonth","yearLabel","monthNames","months","createCellForMonth","monthName","monthYearA11yLabel","newMonthName","shouldEnableMonth","isYearAndMonthAfterMaxDate","isYearAndMonthBeforeMinDate","maxYear","maxMonth","minYear","minMonth","monthYearLabel","multi-year","currentPeriodClicked","previousClicked","nextClicked","previousEnabled","isSameView","nextEnabled","date1","date2","moveFocusOnNextTick","intlChanges","clampedActiveDate","_currentView","calendarHeaderPortal","ngAfterViewChecked","change","firstChange","detectChanges","updateTodaysDate"],"mappings":"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"}