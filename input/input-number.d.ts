import { ElementRef } from '@angular/core';
import { NgControl } from '@angular/forms';
import { Subject } from 'rxjs';
import * as i0 from "@angular/core";
export declare const BIG_STEP = 10;
export declare const SMALL_STEP = 1;
export declare function normalizeSplitter(value: string): string;
export declare function isFloat(value: string): boolean;
export declare function isInt(value: string): boolean;
export declare function isDigit(value: string): boolean;
export declare function getPrecision(value: number): number;
export declare function add(value1: number, value2: number): number;
export declare class McNumberInput {
    private elementRef;
    private ngControl;
    bigStep: number;
    step: number;
    min: number;
    max: number;
    value: any;
    focused: boolean;
    readonly stateChanges: Subject<void>;
    get nativeElement(): HTMLInputElement;
    constructor(elementRef: ElementRef, ngControl: NgControl, step: string, bigStep: string, min: string, max: string);
    focusChanged(isFocused: boolean): void;
    onKeyDown(event: KeyboardEvent): void;
    onPaste(event: any): void;
    stepUp(step: number): void;
    stepDown(step: number): void;
    private viewToModelUpdate;
    static ɵfac: i0.ɵɵFactoryDeclaration<McNumberInput, [null, { optional: true; self: true; }, { attribute: "step"; }, { attribute: "big-step"; }, { attribute: "min"; }, { attribute: "max"; }]>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<McNumberInput, "input[mcInput][type=\"number\"]", ["mcNumericalInput"], { "bigStep": "bigStep"; "step": "step"; "min": "min"; "max": "max"; }, {}, never>;
}
