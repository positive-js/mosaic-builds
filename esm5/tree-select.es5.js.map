{"version":3,"file":"tree-select.es5.js","sources":["../../../packages/mosaic/tree-select/tree-select.module.ts","../../../packages/mosaic/tree-select/tree-select.component.ts"],"sourcesContent":["import { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\nimport { MC_SELECT_SCROLL_STRATEGY_PROVIDER, McPseudoCheckboxModule } from '@ptsecurity/mosaic/core';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport { McTagsModule } from '@ptsecurity/mosaic/tags';\nimport { McTreeModule } from '@ptsecurity/mosaic/tree';\n\nimport { McTreeSelect, McTreeSelectTrigger } from './tree-select.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        CdkTreeModule,\n        McTreeModule,\n        McIconModule,\n        McTagsModule,\n        McPseudoCheckboxModule\n    ],\n    exports: [McTreeSelect, McTreeSelectTrigger, CommonModule],\n    declarations: [McTreeSelect, McTreeSelectTrigger],\n    providers: [MC_SELECT_SCROLL_STRATEGY_PROVIDER]\n})\nexport class McTreeSelectModule {}\n","/* tslint:disable:no-empty */\n\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport {\n    CdkConnectedOverlay,\n    ViewportRuler\n} from '@angular/cdk/overlay';\nimport {\n    AfterContentInit,\n    AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    Directive,\n    DoCheck,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Input,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    QueryList,\n    Renderer2,\n    Self,\n    SimpleChanges,\n    ViewChild,\n    ViewChildren,\n    ViewEncapsulation\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControlName,\n    FormGroupDirective,\n    NG_VALIDATORS,\n    NgControl,\n    NgForm,\n    NgModel,\n    Validator\n} from '@angular/forms';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    RIGHT_ARROW,\n    SPACE,\n    UP_ARROW,\n    A,\n    PAGE_UP,\n    PAGE_DOWN,\n    hasModifierKey\n} from '@ptsecurity/cdk/keycodes';\nimport { CdkTree } from '@ptsecurity/cdk/tree';\nimport {\n    getOptionScrollPosition,\n    CanDisable,\n    CanUpdateErrorState,\n    ErrorStateMatcher,\n    HasTabIndex,\n    CanDisableCtor,\n    HasTabIndexCtor,\n    CanUpdateErrorStateCtor,\n    mixinTabIndex,\n    mixinDisabled,\n    mixinErrorState,\n    mcSelectAnimations,\n\n    SELECT_PANEL_MAX_HEIGHT,\n    SELECT_PANEL_PADDING_X,\n    SELECT_PANEL_VIEWPORT_PADDING,\n    MC_SELECT_SCROLL_STRATEGY,\n\n    getMcSelectDynamicMultipleError,\n    getMcSelectNonFunctionValueError,\n    getMcSelectNonArrayValueError,\n    MultipleMode,\n\n    MC_VALIDATION,\n    setMosaicValidation,\n    McValidationOptions\n} from '@ptsecurity/mosaic/core';\nimport { McCleaner, McFormField, McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { McTag } from '@ptsecurity/mosaic/tags';\nimport { McTreeSelection, McTreeOption } from '@ptsecurity/mosaic/tree';\nimport { defer, merge, Observable, Subject } from 'rxjs';\nimport {\n    filter,\n    map,\n    switchMap,\n    take,\n    takeUntil,\n    distinctUntilChanged\n} from 'rxjs/operators';\n\n\nlet nextUniqueId = 0;\n\n/** Change event object that is emitted when the select value has changed. */\nexport class McTreeSelectChange {\n    constructor(public source: McTreeSelect, public value: any, public isUserInput = false) {}\n}\n\n\n@Directive({ selector: 'mc-tree-select-trigger' })\nexport class McTreeSelectTrigger {}\n\n\nclass McTreeSelectBase {\n    constructor(\n        public elementRef: ElementRef,\n        public defaultErrorStateMatcher: ErrorStateMatcher,\n        public parentForm: NgForm,\n        public parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl\n    ) {}\n}\n\n// tslint:disable-next-line:naming-convention\nconst McTreeSelectMixinBase: CanDisableCtor & HasTabIndexCtor & CanUpdateErrorStateCtor &\n    typeof McTreeSelectBase = mixinTabIndex(mixinDisabled(mixinErrorState(McTreeSelectBase)));\n\n\n@Component({\n    selector: 'mc-tree-select',\n    exportAs: 'mcTreeSelect',\n    templateUrl: 'tree-select.html',\n    styleUrls: ['./tree-select.css'],\n    inputs: ['disabled'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'tabIndex',\n\n        class: 'mc-tree-select',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-select-invalid]': 'errorState',\n\n        '(click)': 'toggle()',\n        '(keydown)': 'handleKeydown($event)',\n        '(focus)': 'onFocus()',\n        '(blur)': 'onBlur()',\n        '(window:resize)': 'calculateHiddenItems()'\n    },\n    animations: [\n        mcSelectAnimations.transformPanel,\n        mcSelectAnimations.fadeInContent\n    ],\n    providers: [\n        { provide: McFormFieldControl, useExisting: McTreeSelect },\n        { provide: CdkTree, useExisting: McTreeSelect }\n    ]\n})\nexport class McTreeSelect extends McTreeSelectMixinBase implements\n    AfterContentInit, AfterViewInit, OnChanges, OnDestroy, OnInit, DoCheck, ControlValueAccessor,\n    CanDisable, HasTabIndex, McFormFieldControl<McTreeOption>, CanUpdateErrorState {\n\n    /** A name for this control that can be used by `mc-form-field`. */\n    controlType = 'mc-select';\n\n    hiddenItems: number = 0;\n\n    /** The last measured value for the trigger's client bounding rect. */\n    triggerRect: ClientRect;\n\n    /** The cached font-size of the trigger element. */\n    triggerFontSize = 0;\n\n    /** Deals with the selection logic. */\n    selectionModel: SelectionModel<any>;\n\n    /** The value of the select panel's transform-origin property. */\n    transformOrigin: string = 'top';\n\n    /** Whether the panel's animation is done. */\n    panelDoneAnimating: boolean = false;\n\n    /** Emits when the panel element is finished transforming in. */\n    panelDoneAnimatingStream = new Subject<string>();\n\n    /** Strategy that will be used to handle scrolling while the select panel is open. */\n    scrollStrategy = this.scrollStrategyFactory();\n\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     */\n    offsetY = 0;\n\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     */\n    positions = [\n        {\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top'\n        },\n        {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'bottom'\n        }\n    ];\n\n    options: QueryList<McTreeOption>;\n\n    @ViewChild('trigger', { static: false }) trigger: ElementRef;\n\n    @ViewChild('panel', { static: false }) panel: ElementRef;\n\n    @ViewChild(CdkConnectedOverlay, { static: false }) overlayDir: CdkConnectedOverlay;\n\n    @ViewChild('hiddenItemsCounter', { static: false }) hiddenItemsCounter: ElementRef;\n\n    @ViewChildren(McTag) tags: QueryList<McTag>;\n\n    @ContentChild('mcSelectCleaner', { static: true }) cleaner: McCleaner;\n\n    /** User-supplied override of the trigger element. */\n    @ContentChild(McTreeSelectTrigger, { static: false }) customTrigger: McTreeSelectTrigger;\n\n    @ContentChild(McTreeSelection, { static: false }) tree: McTreeSelection<McTreeOption>;\n\n    @Input() hiddenItemsText: string = '...ещё';\n\n    /** Event emitted when the select panel has been toggled. */\n    @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the select has been opened. */\n    @Output('opened') readonly openedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => o), map(() => {}));\n\n    /** Event emitted when the select has been closed. */\n    @Output('closed') readonly closedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => !o), map(() => {}));\n\n    /** Event emitted when the selected value has been changed by the user. */\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectChange>();\n\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Classes to be passed to the select panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[] | Set<string> | { [key: string]: any };\n\n    /** Object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     */\n    @Input() sortComparator: (\n        a: McTreeOption, b: McTreeOption, options: McTreeOption[]\n    ) => number;\n\n    /** Combined stream of all of the child options' change events. */\n    readonly optionSelectionChanges: Observable<McTreeSelectChange> = defer(() => {\n        if (this.options) {\n            return merge(...this.options.map((option) => option.onSelectionChange));\n        }\n\n        return this.ngZone.onStable\n            .asObservable()\n            .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n    }) as Observable<McTreeSelectChange>;\n\n    @Input()\n    get placeholder(): string {\n        return this._placeholder;\n    }\n\n    set placeholder(value: string) {\n        this._placeholder = value;\n\n        this.stateChanges.next();\n    }\n\n    private _placeholder: string;\n\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n\n        this.stateChanges.next();\n    }\n\n    private _required: boolean = false;\n\n    @Input()\n    get multiple(): boolean {\n        return this._multiple;\n    }\n\n    set multiple(value: boolean) {\n        if (this.selectionModel) {\n            throw getMcSelectDynamicMultipleError();\n        }\n\n        this._multiple = coerceBooleanProperty(value);\n    }\n\n    private _multiple: boolean = false;\n\n    @Input()\n    get autoSelect(): boolean {\n        if (this.multiple) { return false; }\n\n        return this._autoSelect;\n    }\n\n    set autoSelect(value: boolean) {\n        this._autoSelect = coerceBooleanProperty(value);\n    }\n\n    private _autoSelect: boolean = true;\n\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    @Input()\n    get compareWith() {\n        return this._compareWith;\n    }\n\n    set compareWith(fn: (o1: any, o2: any) => boolean) {\n        /* tslint:disable-next-line:strict-type-predicates */\n        if (typeof fn !== 'function') {\n            throw getMcSelectNonFunctionValueError();\n        }\n\n        this._compareWith = fn;\n\n        if (this.selectionModel) {\n            // A different comparator means the selection could change.\n            this.initializeSelection();\n        }\n    }\n\n    get value(): any {\n        return this.multiple ? this.tree.getSelectedValues() : this.tree.getSelectedValues()[0];\n    }\n\n    private _value: any = null;\n\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this.uid;\n        this.stateChanges.next();\n    }\n\n    private _id: string;\n\n    /** Whether the select is focused. */\n    get focused(): boolean {\n        return this._focused || this._panelOpen;\n    }\n\n    /**\n     * @deprecated Setter to be removed as this property is intended to be readonly.\n     * @breaking-change 8.0.0\n     */\n    set focused(value: boolean) {\n        this._focused = value;\n    }\n\n    private _focused = false;\n\n    get panelOpen(): boolean {\n        return this._panelOpen;\n    }\n\n    get canShowCleaner(): boolean {\n        return this.cleaner && this.selectionModel.hasValue();\n    }\n\n    private _panelOpen = false;\n\n    private originalOnKeyDown: (event: KeyboardEvent) => void;\n\n    /** The scroll position of the overlay panel, calculated to center the selected option. */\n    private scrollTop = 0;\n\n    /** Unique id for this input. */\n    private readonly uid = `mc-select-${nextUniqueId++}`;\n\n    /** Emits whenever the component is destroyed. */\n    private readonly destroy = new Subject<void>();\n\n    // Used for storing the values that were assigned before the options were initialized.\n    private tempValues: string | string[] | null;\n\n    constructor(\n        elementRef: ElementRef,\n        readonly changeDetectorRef: ChangeDetectorRef,\n        private readonly viewportRuler: ViewportRuler,\n        private readonly ngZone: NgZone,\n        private readonly renderer: Renderer2,\n        defaultErrorStateMatcher: ErrorStateMatcher,\n        @Attribute('tabindex') tabIndex: string,\n        @Inject(MC_SELECT_SCROLL_STRATEGY) private readonly scrollStrategyFactory,\n        @Optional() @Inject(NG_VALIDATORS) public rawValidators: Validator[],\n        @Optional() @Inject(MC_VALIDATION) private mcValidation: McValidationOptions,\n        @Optional() private readonly dir: Directionality,\n        @Optional() parentForm: NgForm,\n        @Optional() parentFormGroup: FormGroupDirective,\n        @Optional() private readonly parentFormField: McFormField,\n        @Optional() @Self() ngControl: NgControl,\n        @Optional() @Self() public ngModel: NgModel,\n        @Optional() @Self() public formControlName: FormControlName\n    ) {\n        super(elementRef, defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\n\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnInit() {\n        this.stateChanges.next();\n\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this.panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this.destroy))\n            .subscribe(() => {\n                if (this.panelOpen) {\n                    this.scrollTop = 0;\n                    this.openedChange.emit(true);\n                } else {\n                    this.openedChange.emit(false);\n                    this.panelDoneAnimating = false;\n                    this.overlayDir.offsetX = 0;\n                    this.changeDetectorRef.markForCheck();\n                }\n            });\n    }\n\n    ngAfterContentInit() {\n        if (!this.tree) { return; }\n\n        if (this.mcValidation.useValidation) {\n            setMosaicValidation(this);\n        }\n\n        this.tree.resetFocusedItemOnBlur = false;\n\n        this.selectionModel = this.tree.selectionModel = new SelectionModel<any>(this.multiple);\n        this.tree.ngAfterContentInit();\n\n        this.initKeyManager();\n\n        this.options = this.tree.renderedOptions;\n        this.tree.autoSelect = this.autoSelect;\n\n        if (this.tree.multipleMode === null) {\n            this.tree.multipleMode = this.multiple ? MultipleMode.CHECKBOX : null;\n        }\n\n        if (this.multiple) {\n            this.tree.noUnselectLast = false;\n        }\n\n        if (this.tempValues) {\n            this.setSelectionByValue(this.tempValues);\n            this.tempValues = null;\n        }\n\n        this.optionSelectionChanges\n            .pipe(takeUntil(this.destroy))\n            .subscribe((event) => {\n                if (!this.multiple && this.panelOpen && event.isUserInput) {\n                    this.close();\n                }\n            });\n\n        this.tree.selectionChange\n            .pipe(takeUntil(this.destroy))\n            .subscribe((event) => {\n                this.onChange(this.selectedValues);\n\n                this.selectionChange.emit(new McTreeSelectChange(this, event.option));\n            });\n\n        this.selectionModel.changed\n            .pipe(takeUntil(this.destroy))\n            .subscribe((event) => {\n                if (event.added.length) {\n                    this.tree.keyManager.setFocusOrigin('program');\n                    this.tree.keyManager.setActiveItem(\n                        this.options.find((option) => option.data === event.added[0]) as any\n                    );\n                }\n            });\n    }\n\n    ngAfterViewInit() {\n        if (!this.tree) { return; }\n\n        this.tags.changes\n            .subscribe(() => {\n                setTimeout(() => this.calculateHiddenItems(), 0);\n            });\n\n        setTimeout(() => this.calculateHiddenItems(), 0);\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) { this.updateErrorState(); }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes.disabled) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy() {\n        this.destroy.next();\n\n        this.destroy.complete();\n        this.stateChanges.complete();\n    }\n\n    @Input()\n    hiddenItemsTextFormatter(hiddenItemsText: string, hiddenItems: number): string {\n        return `${hiddenItemsText} ${hiddenItems}`;\n    }\n\n    clearValue($event): void {\n        $event.stopPropagation();\n\n        this.selectionModel.clear();\n        this.tree.keyManager.setActiveItem(-1);\n\n        this.setSelectionByValue([]);\n\n        this.onChange(this.selectedValues);\n    }\n\n    /** `View -> model callback called when value changes` */\n    onChange: (value: any) => void = () => {};\n\n    /** `View -> model callback called when select has been touched` */\n    onTouched = () => {};\n\n    toggle(): void {\n        if (this.panelOpen) {\n            this.close();\n        } else {\n            this.open();\n        }\n    }\n\n    open(): void {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) { return; }\n\n        this.triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this.triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement)['font-size']);\n\n        this._panelOpen = true;\n\n        setTimeout(() => this.highlightCorrectOption());\n\n        this.changeDetectorRef.markForCheck();\n\n        // Set the font size on the panel element once it exists.\n        this.ngZone.onStable.asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                if (this.triggerFontSize && this.overlayDir.overlayRef && this.overlayDir.overlayRef.overlayElement) {\n                    this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this.triggerFontSize}px`;\n                }\n            });\n    }\n\n    /** Closes the overlay panel and focuses the host element. */\n    close(): void {\n        if (!this._panelOpen) { return; }\n\n        this._panelOpen = false;\n\n        this.changeDetectorRef.markForCheck();\n        this.onTouched();\n\n        setTimeout(() => this.focus(), 0);\n    }\n\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value: any): void {\n        if (this.tree) {\n            this.setSelectionByValue(value);\n        } else {\n            this.tempValues = value;\n        }\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn: (value: any) => void) {\n        this.onChange = fn;\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn: () => {}) {\n        this.onTouched = fn;\n    }\n\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n        this.changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n\n    get selected(): any {\n        return this.multiple ? this.selectionModel.selected : this.selectionModel.selected[0];\n    }\n\n    get selectedValues(): any {\n        const selectedValues = this.selectionModel.selected.map((value) => this.tree.treeControl.getValue(value));\n\n        return this.multiple ? selectedValues : selectedValues[0];\n    }\n\n    get triggerValue(): string {\n        if (this.empty) { return ''; }\n\n        return this.tree.treeControl.getViewValue(this.selected);\n    }\n\n    get triggerValues(): string[] {\n        if (this.empty) { return []; }\n\n        return this.selected;\n    }\n\n    get empty(): boolean {\n        return !this.selectionModel || this.selectionModel.isEmpty();\n    }\n\n    isRtl(): boolean {\n        return this.dir ? this.dir.value === 'rtl' : false;\n    }\n\n    handleKeydown(event: KeyboardEvent) {\n        if (!this.disabled) {\n            if (this.panelOpen) {\n                this.handleOpenKeydown(event);\n            } else {\n                this.handleClosedKeydown(event);\n            }\n        }\n    }\n\n    /**\n     * When the panel content is done fading in, the panelDoneAnimating property is\n     * set so the proper class can be added to the panel.\n     */\n    onFadeInDone() {\n        this.panelDoneAnimating = this.panelOpen;\n        this.changeDetectorRef.markForCheck();\n    }\n\n    onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    onBlur() {\n        this._focused = false;\n\n        if (!this.disabled && !this.panelOpen) {\n            this.onTouched();\n            this.changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n\n    /** Callback that is invoked when the overlay panel has been attached. */\n    onAttached() {\n        this.overlayDir.positionChange\n            .pipe(take(1))\n            .subscribe(() => {\n                this.changeDetectorRef.detectChanges();\n                this.calculateOverlayOffsetX();\n                this.panel.nativeElement.scrollTop = this.scrollTop;\n\n                this.tree.updateScrollSize();\n            });\n    }\n\n    /** Returns the theme to be used on the panel. */\n    getPanelTheme(): string {\n        return this.parentFormField ? `mc-${this.parentFormField.color}` : '';\n    }\n\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Invoked when an option is clicked. */\n    onRemoveSelectedOption(selectedOption: any, $event) {\n        $event.stopPropagation();\n\n        if (this.disabled) { return; }\n\n        this.selectionModel.deselect(selectedOption);\n\n        this.onChange(this.selectedValues);\n    }\n\n    calculateHiddenItems() {\n        if (this.customTrigger || this.empty || !this.multiple) { return; }\n\n        let visibleItems: number = 0;\n        const totalItemsWidth = this.getTotalItemsWidthInMatcher();\n        let totalVisibleItemsWidth: number = 0;\n\n        this.tags.forEach((tag) => {\n            if (tag.nativeElement.offsetTop < tag.nativeElement.offsetHeight) {\n                totalVisibleItemsWidth += this.getItemWidth(tag.nativeElement);\n                visibleItems++;\n            }\n        });\n\n        this.hiddenItems = this.selectionModel.selected.length - visibleItems;\n\n        if (this.hiddenItems) {\n            const itemsCounter = this.trigger.nativeElement.querySelector('.mc-tree-select__match-hidden-text');\n            const matcherList = this.trigger.nativeElement.querySelector('.mc-tree-select__match-list');\n\n            const itemsCounterShowed = itemsCounter.offsetTop < itemsCounter.offsetHeight;\n            // const itemsCounterWidth: number = itemsCounter.getBoundingClientRect().width;\n            const itemsCounterWidth: number = 86;\n\n            const matcherListWidth: number = matcherList.getBoundingClientRect().width;\n            const matcherWidth: number = matcherListWidth + itemsCounterWidth;\n\n            if (itemsCounterShowed && (totalItemsWidth < matcherWidth)) { this.hiddenItems = 0; }\n\n            if (\n                totalVisibleItemsWidth === matcherListWidth ||\n                (totalVisibleItemsWidth + itemsCounterWidth) < matcherListWidth\n            ) {\n                this.changeDetectorRef.markForCheck();\n\n                return ;\n            } else if (!itemsCounterShowed && (totalItemsWidth + itemsCounterWidth) > matcherWidth) {\n                this.hiddenItems++;\n            }\n        }\n\n        this.changeDetectorRef.markForCheck();\n    }\n\n    private getTotalItemsWidthInMatcher(): number {\n        const triggerClone = this.trigger.nativeElement.cloneNode(true);\n        triggerClone.querySelector('.mc-tree-select__match-hidden-text').remove();\n\n        this.renderer.setStyle(triggerClone, 'position', 'absolute');\n        this.renderer.setStyle(triggerClone, 'visibility', 'hidden');\n        this.renderer.setStyle(triggerClone, 'top', '-100%');\n        this.renderer.setStyle(triggerClone, 'left', '0');\n\n        this.renderer.appendChild(this.trigger.nativeElement, triggerClone);\n\n        let totalItemsWidth: number = 0;\n        triggerClone.querySelectorAll('mc-tag').forEach((item) => {\n            totalItemsWidth += this.getItemWidth(item);\n        });\n\n        triggerClone.remove();\n\n        return totalItemsWidth;\n    }\n\n    private getItemWidth(element: HTMLElement): number {\n        const computedStyle = window.getComputedStyle(element);\n\n        const width: number = parseInt(computedStyle.width as string);\n        const marginLeft: number = parseInt(computedStyle.marginLeft as string);\n        const marginRight: number = parseInt(computedStyle.marginRight as string);\n\n        return width + marginLeft + marginRight;\n    }\n\n    private handleClosedKeydown(event: KeyboardEvent) {\n        // tslint:disable-next-line: deprecation\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n\n        // Open the select on ALT + arrow key to match the native <select>\n        if (isOpenKey || ((this.multiple || event.altKey) && isArrowKey)) {\n            // prevents the page from scrolling down when pressing space\n            event.preventDefault();\n\n            this.open();\n        } else if (!this.multiple && this.tree.keyManager && this.tree.keyManager.onKeydown) {\n            this.tree.keyManager.onKeydown(event);\n        }\n    }\n\n    private handleOpenKeydown(event: KeyboardEvent) {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n\n        if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n\n            this.close();\n        } else if (keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW) {\n            return this.originalOnKeyDown.call(this.tree, event);\n        } else if (keyCode === HOME) {\n            event.preventDefault();\n\n            this.tree.keyManager.setFirstItemActive();\n        } else if (keyCode === END) {\n            event.preventDefault();\n\n            this.tree.keyManager.setLastItemActive();\n        } else if (keyCode === PAGE_UP) {\n            event.preventDefault();\n\n            this.tree.keyManager.setPreviousPageItemActive();\n        } else if (keyCode === PAGE_DOWN) {\n            event.preventDefault();\n\n            this.tree.keyManager.setNextPageItemActive();\n        } else if ((keyCode === ENTER || keyCode === SPACE) && this.tree.keyManager.activeItem) {\n            event.preventDefault();\n\n            if (!this.autoSelect) {\n                this.selectionModel.toggle(this.tree.keyManager.activeItem.data);\n            } else {\n                this.close();\n            }\n        } else if (this.multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n\n            const hasDeselectedOptions = this.options.some((option) => !option.selected);\n\n            this.options.forEach((option) => {\n                if (hasDeselectedOptions && !option.disabled) {\n                    option.select();\n                } else {\n                    option.deselect();\n                }\n            });\n        } else {\n            const previouslyFocusedIndex = this.tree.keyManager.activeItemIndex;\n\n            this.tree.keyManager.setFocusOrigin('keyboard');\n            this.tree.keyManager.onKeydown(event);\n\n            if (\n                this.multiple && isArrowKey && event.shiftKey && this.tree.keyManager.activeItem &&\n                this.tree.keyManager.activeItemIndex !== previouslyFocusedIndex\n            ) {\n                this.tree.keyManager.activeItem.selectViaInteraction(event);\n            }\n\n            if (this.autoSelect && this.tree.keyManager.activeItem) {\n                this.tree.setSelectedOptionsByKey(\n                    this.tree.keyManager.activeItem, hasModifierKey(event, 'shiftKey'), hasModifierKey(event, 'ctrlKey')\n                );\n            }\n        }\n    }\n\n    private initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this.setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n        });\n    }\n\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    private setSelectionByValue(value: any | any[]) {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) { throw getMcSelectNonArrayValueError(); }\n\n            this.tree.setOptionsFromValues(value);\n\n            this.sortValues();\n        } else {\n            this.tree.setOptionsFromValues([value]);\n        }\n\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private initKeyManager() {\n        this.originalOnKeyDown = this.tree.onKeyDown;\n\n        this.tree.onKeyDown = () => {};\n\n        this.tree.keyManager.tabOut\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => {\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            });\n\n        this.tree.keyManager.change\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => {\n                if (this._panelOpen && this.panel) {\n                    this.scrollActiveOptionIntoView();\n                } else if (!this._panelOpen && !this.multiple && this.tree.keyManager.activeItem) {\n                    this.tree.keyManager.activeItem.selectViaInteraction();\n                }\n            });\n    }\n\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    private sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n\n            this.selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    private highlightCorrectOption() {\n        if (this.empty || !this.tree.keyManager) { return; }\n\n        const firstSelectedValue = this.multiple ? this.selectedValues[0] : this.selectedValues;\n\n        const selectedOption = this.options.find((option) => option.value === firstSelectedValue);\n\n        if (selectedOption) {\n            this.tree.keyManager.setActiveItem(selectedOption);\n        }\n    }\n\n    /** Scrolls the active option into view. */\n    private scrollActiveOptionIntoView() {\n        const activeOptionIndex = this.tree.keyManager.activeItemIndex || 0;\n\n        this.panel.nativeElement.scrollTop = getOptionScrollPosition(\n            activeOptionIndex,\n            this.tree.getItemHeight(),\n            this.panel.nativeElement.scrollTop,\n            SELECT_PANEL_MAX_HEIGHT\n        );\n    }\n\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    private calculateOverlayOffsetX() {\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this.viewportRuler.getViewportSize();\n        const isRtl = this.isRtl();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const paddingWidth = SELECT_PANEL_PADDING_X * 2;\n        let offsetX: number = SELECT_PANEL_PADDING_X;\n\n        // Invert the offset in LTR.\n        if (!isRtl) { offsetX *= -1; }\n\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        } else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n\n    /** Comparison function to specify which option is displayed. Defaults to object equality. */\n    private _compareWith = (o1: any, o2: any) => o1 === o2;\n}\n"],"names":["tslib_1.__extends"],"mappings":"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"}