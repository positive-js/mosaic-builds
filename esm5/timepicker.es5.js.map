{"version":3,"file":"timepicker.es5.js","sources":["../../../src/lib/timepicker/index.ts","../../../src/lib/timepicker/timepicker.module.ts","../../../src/lib/timepicker/timepicker.ts","../../../src/lib/timepicker/timepicker.constants.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTimepicker } from './timepicker';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        FormsModule\n    ],\n    declarations: [\n        McTimepicker\n    ],\n    exports: [\n        McTimepicker\n    ]\n})\nexport class McTimepickerModule {}\n","import {\n    Directive,\n    DoCheck,\n    ElementRef,\n    forwardRef,\n    Inject,\n    InjectionToken,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Renderer2,\n    Self\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroupDirective,\n    NG_VALIDATORS,\n    NgControl,\n    NgForm,\n    ValidationErrors,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport {\n    noop,\n    Subject\n} from 'rxjs';\n\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\n\nimport {\n    ARROW_DOWN_KEYCODE,\n    ARROW_LEFT_KEYCODE,\n    ARROW_RIGHT_KEYCODE,\n    ARROW_UP_KEYCODE,\n    DEFAULT_TIME_FORMAT,\n    HOURS_PER_DAY,\n    HOURS_MINUTES_REGEXP,\n    HOURS_MINUTES_SECONDS_REGEXP,\n    HOURS_ONLY_REGEXP,\n    MINUTES_PER_HOUR,\n    SECONDS_PER_MINUTE,\n    TIMEFORMAT_PLACEHOLDERS,\n    TimeFormats,\n    TimeParts\n} from './timepicker.constants';\n\n\nlet _uniqueComponentIdSuffix: number = 0;\nlet _validatorOnChange: () => void = noop;\nlet _validator: ValidatorFn | null = () => null;\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n\nexport class McTimepickerBase {\n    constructor(\n        public _defaultErrorStateMatcher: ErrorStateMatcher,\n        public _parentForm: NgForm,\n        public _parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl) { }\n}\n\nexport const McTimepickerMixinBase = mixinErrorState(McTimepickerBase);\n\n@Directive({\n    selector: 'input[mcTimepicker]',\n    exportAs: 'mcTimepickerInput',\n    host: {\n        class: 'mc-timepicker mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '[attr.time-format]': 'timeFormat',\n        '[attr.min-time]': 'minTime',\n        '[attr.max-time]': 'maxTime',\n        '[attr.value]': 'value',\n        '(blur)': 'onBlur()',\n        '(focus)': 'focusChanged(true)',\n        '(input)': 'onInput()',\n        '(keydown)': 'onKeyDown($event)'\n    },\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useValue: {\n                validate(c) { return _validator ? _validator(c) : null; },\n                registerOnValidatorChange(fn: () => void): void { _validatorOnChange = fn; }\n            },\n            multi: true\n        },\n        {\n            provide: McFormFieldControl,\n            useExisting: forwardRef(() => McTimepicker)\n        }\n    ]\n\n})\nexport class McTimepicker extends McTimepickerMixinBase\n    implements McFormFieldControl<any>,\n        OnChanges,\n        OnDestroy,\n        DoCheck,\n        CanUpdateErrorState,\n        ControlValueAccessor {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-timepicker';\n\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) { return this.ngControl.disabled; }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n        }\n\n        this.stateChanges.next();\n    }\n\n    @Input()\n    get id(): string { return this._id; }\n\n    set id(value: string) { this._id = value || this._uid; }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean { return this._required; }\n\n    set required(value: boolean) { this._required = coerceBooleanProperty(value); }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string { return this._inputValueAccessor.value; }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this._applyInputChanges();\n        }\n    }\n\n    @Input('time-format')\n    get timeFormat(): TimeFormats { return this._timeFormat; }\n\n    set timeFormat(formatValue: TimeFormats) {\n        this._timeFormat = Object\n            .keys(TimeFormats)\n            .map((timeFormatKey) => TimeFormats[timeFormatKey])\n            .indexOf(formatValue) > -1 ? formatValue : DEFAULT_TIME_FORMAT;\n\n        _validatorOnChange();\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[this._timeFormat.toLowerCase()];\n    }\n\n    @Input('min-time')\n    get minTime(): string | null { return this._minTime; }\n\n    set minTime(minValue: string | null) {\n        this._minTime = minValue;\n        this._minDTime = minValue !== null ? this._getDateFromTimeString(minValue) : undefined;\n        _validatorOnChange();\n    }\n\n    @Input('max-time')\n    get maxTime(): string | null { return this._maxTime; }\n\n    set maxTime(maxValue: string | null) {\n        this._maxTime = maxValue;\n        this._maxDTime = maxValue !== null ? this._getDateFromTimeString(maxValue) : undefined;\n        _validatorOnChange();\n    }\n\n    private _id: string;\n    private readonly _uid = `mc-timepicker-${_uniqueComponentIdSuffix++}`;\n    private _disabled: boolean;\n    private _required: boolean;\n    private _previousNativeValue: any;\n    private readonly _inputValueAccessor: { value: any };\n    private _onChange: (value: any) => void;\n    private _onTouched: () => void;\n    private _timeFormat: TimeFormats;\n    private _minTime: string | null = null;\n    private _minDTime: Date | undefined;\n    private _maxTime: string | null = null;\n    private _maxDTime: Date | undefined;\n    private _currentDTimeInput: Date | undefined;\n\n    constructor(private readonly _elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any,\n                private readonly _renderer: Renderer2) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || this._elementRef.nativeElement;\n\n        this._previousNativeValue = this.value;\n        this._onChange = noop;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        // Instead of NG_VALUE_ACCESSOR (https://github.com/angular/material2/issues/8158#issuecomment-344618103)\n        if (this.ngControl) { this.ngControl.valueAccessor = this; }\n\n        // Substitute initial empty validator with validator linked to directive object instance (workaround)\n        _validator = Validators.compose([\n            () => this._parseValidator(),\n            () => this._minTimeValidator(),\n            () => this._maxTimeValidator()\n        ]);\n    }\n\n    ngOnChanges(): void {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck(): void {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    focusChanged(isFocused: boolean): void {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this._onTouched();\n            this.stateChanges.next();\n        }\n    }\n\n    onBlur() {\n        this._applyInputChanges();\n        this.focusChanged(false);\n    }\n\n    onInput() {\n        const initialCursorStart: number = this._elementRef.nativeElement.selectionStart;\n        const initialCursorEnd: number = this._elementRef.nativeElement.selectionEnd;\n        let isAutocompleteTriggered: boolean = false;\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this._getParsedTimeParts(this._elementRef.nativeElement.value);\n\n        // tslint:disable no-magic-numbers\n        if (hoursOnly &&\n            hoursOnly[1] &&\n            hoursOnly[1].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutes &&\n            hoursAndMinutes[1].length === 1 &&\n            hoursAndMinutes[2] &&\n            hoursAndMinutes[2].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutesAndSeconds &&\n            hoursAndMinutesAndSeconds[1].length === 2 &&\n            hoursAndMinutesAndSeconds[2].length === 2 &&\n            hoursAndMinutesAndSeconds[3] &&\n            hoursAndMinutesAndSeconds[3].length === 2) {\n            isAutocompleteTriggered = true;\n        }\n        // tslint:enable no-magic-numbers\n\n        this._applyInputChanges({ doTimestringReformat: isAutocompleteTriggered });\n\n        this._elementRef.nativeElement.selectionStart = initialCursorStart;\n        this._elementRef.nativeElement.selectionEnd = initialCursorEnd;\n\n        if (isAutocompleteTriggered && this.ngControl.errors === null) {\n            this._createSelectionOfTimeComponentInInput(initialCursorStart + 1);\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this._elementRef.nativeElement.value && !this._isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    writeValue(value: Date | null): void {\n        if (value !== null) {\n            this._renderer.setProperty(this._elementRef.nativeElement,\n                'value',\n                this._getTimeStringFromDate(value, this.timeFormat)\n            );\n        }\n        this._onChange(value || null);\n        this._applyInputChanges();\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        const keyCode: string = this._getKeyCode(event);\n\n        if (keyCode === ARROW_UP_KEYCODE || keyCode === ARROW_DOWN_KEYCODE) {\n            this._upDownTimeByArrowKeys(event);\n        }\n        if (keyCode === ARROW_LEFT_KEYCODE || keyCode === ARROW_RIGHT_KEYCODE) {\n            this._switchSelectionBetweenTimeparts(event);\n        }\n    }\n\n    registerOnChange(fn: (value: Date) => void): void {\n        this._onChange = fn;\n    }\n\n    registerOnTouched(fn: () => void): void {\n        this._onTouched = fn;\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    private _dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    private _isBadInput(): boolean {\n        const validity = (<HTMLInputElement> this._elementRef.nativeElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private _applyInputChanges(applyParams: {\n        changedTime?: Date;\n        doTimestringReformat?: boolean;\n    } = {}): void {\n        const { changedTime, doTimestringReformat = true } = applyParams;\n\n        const timeToApply: Date | undefined = changedTime ||\n            this._getDateFromTimeString(this._elementRef.nativeElement.value);\n        this._currentDTimeInput = timeToApply;\n\n        if (doTimestringReformat && timeToApply !== undefined) {\n            this._renderer.setProperty(\n                this._elementRef.nativeElement,\n                'value',\n                this._getTimeStringFromDate(timeToApply, this.timeFormat));\n        }\n\n        (<FormControl> this.ngControl.control).updateValueAndValidity();\n        const result = this.ngControl.errors === null && timeToApply !== undefined ? timeToApply : null;\n        this._onChange(result);\n        this.stateChanges.next();\n    }\n\n    private _upDownTimeByArrowKeys(event: KeyboardEvent): void {\n        event.preventDefault();\n\n        let changedTime: Date | undefined = this._currentDTimeInput;\n        if (changedTime !== undefined) {\n            const cursorPos = this._elementRef.nativeElement.selectionStart;\n\n            const modifiedTimePart = this._getTimeEditMetrics(cursorPos)\n                .modifiedTimePart;\n            const keyCode: string = this._getKeyCode(event);\n            if (keyCode === ARROW_UP_KEYCODE) { changedTime = this._incrementTime(changedTime, modifiedTimePart); }\n            if (keyCode === ARROW_DOWN_KEYCODE) { changedTime = this._decrementTime(changedTime, modifiedTimePart); }\n            this._applyInputChanges({ changedTime });\n            this._createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    private _switchSelectionBetweenTimeparts(event: KeyboardEvent): void {\n        const changedTime: Date | undefined = this._currentDTimeInput;\n        const keyCode: string = this._getKeyCode(event);\n\n        if (changedTime !== undefined) {\n            let cursorPos: number = this._elementRef.nativeElement.selectionStart;\n            if (keyCode === ARROW_LEFT_KEYCODE) {\n                cursorPos = this._getCursorPositionOfPrevTimePartStart(cursorPos, this._elementRef.nativeElement.value);\n            } else if (keyCode === ARROW_RIGHT_KEYCODE) {\n                cursorPos = this._getCursorPositionOfNextTimePartStart(cursorPos, this._elementRef.nativeElement.value);\n            }\n            this._createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    /**\n     * @description Microsoft EDGE doesn't support KeyboaedEvent.code thus we need this helper\n     */\n    private _getKeyCode(event: KeyboardEvent): string {\n        return event.code || event.key;\n    }\n\n    private _createSelectionOfTimeComponentInInput(cursorPos: number): void {\n        setTimeout(() => {\n            const newEditParams = this._getTimeEditMetrics(cursorPos);\n            this._elementRef.nativeElement.selectionStart = newEditParams.cursorStartPosition;\n            this._elementRef.nativeElement.selectionEnd = newEditParams.cursorEndPosition;\n        });\n    }\n\n    private _incrementTime(dateVal: Date,\n                           whatToIncrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this._getTimeDigitsFromDate(dateVal);\n\n        switch (whatToIncrement) {\n            case TimeParts.hours:\n                hours++;\n                break;\n            case TimeParts.minutes:\n                minutes++;\n                break;\n            case TimeParts.seconds:\n                seconds++;\n                break;\n            default:\n        }\n\n        if (seconds > SECONDS_PER_MINUTE) { seconds = 0; }\n\n        if (minutes > MINUTES_PER_HOUR) { minutes = 0; }\n\n        if (hours > HOURS_PER_DAY) { hours = 0; }\n\n        return <Date> this._getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    /**\n     * @description Decrement part of time\n     */\n    private _decrementTime(dateVal: Date,\n                           whatToDecrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this._getTimeDigitsFromDate(dateVal);\n\n        switch (whatToDecrement) {\n            case TimeParts.hours:\n                hours--;\n                break;\n            case TimeParts.minutes:\n                minutes--;\n                break;\n            case TimeParts.seconds:\n                seconds--;\n                break;\n            default:\n        }\n\n        if (seconds < 0) { seconds = SECONDS_PER_MINUTE; }\n\n        if (minutes < 0) { minutes = MINUTES_PER_HOUR; }\n\n        if (hours < 0) { hours = HOURS_PER_DAY; }\n\n        return <Date> this._getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    private _getCursorPositionOfPrevTimePartStart(cursorPos: number, timeString: string): number {\n        return cursorPos === 0 ? timeString.length : cursorPos - 1;\n    }\n\n    private _getCursorPositionOfNextTimePartStart(cursorPos: number,\n                                                  timeString: string,\n                                                  timeDevider: string = ':'): number {\n        const nextDividerPos: number = timeString.indexOf(timeDevider, cursorPos);\n\n        return nextDividerPos !== undefined ? nextDividerPos + 1 : 0;\n    }\n\n    /**\n     * @description Get params for arrow-keys (up/down) time valie edit.\n     * @param cursorPosition Current cursor position in timeString\n     */\n    private _getTimeEditMetrics(cursorPosition: number): {\n        modifiedTimePart: TimeParts;\n        cursorStartPosition: number;\n        cursorEndPosition: number;\n    } {\n        const timeString: string = this._elementRef.nativeElement.value;\n        let modifiedTimePart: TimeParts;\n        let cursorStartPosition: number;\n        let cursorEndPosition: number;\n        const hoursIndex = 0;\n        const minutesIndex = timeString.indexOf(':', hoursIndex + 1);\n        const secondsIndex = minutesIndex !== -1 ? timeString.indexOf(':', minutesIndex + 1) : -1;\n\n        if (secondsIndex !== -1 && cursorPosition > secondsIndex) {\n            modifiedTimePart = TimeParts.seconds;\n            cursorStartPosition = secondsIndex + 1;\n            cursorEndPosition = timeString.length;\n        } else if (minutesIndex !== -1 && cursorPosition > minutesIndex) {\n            modifiedTimePart = TimeParts.minutes;\n            cursorStartPosition = minutesIndex + 1;\n            cursorEndPosition = secondsIndex > -1 ? secondsIndex : timeString.length;\n        } else {\n            modifiedTimePart = TimeParts.hours;\n            cursorStartPosition = hoursIndex;\n            cursorEndPosition = minutesIndex !== -1 ? minutesIndex : timeString.length;\n        }\n\n        return {\n            modifiedTimePart,\n            cursorStartPosition,\n            cursorEndPosition\n        };\n    }\n\n    /**\n     * @description Create time string for displaying inside input element of UI\n     */\n    private _getTimeStringFromDate(tempVal: Date,\n                                   timeFormat: TimeFormats = DEFAULT_TIME_FORMAT): string {\n        const hours: string = this._getNumberWithLeadingZero(tempVal.getHours());\n        const minutes: string = this._getNumberWithLeadingZero(tempVal.getMinutes());\n        const seconds: string = this._getNumberWithLeadingZero(tempVal.getSeconds());\n\n        const formattedTimeGenerators = {\n            [TimeFormats.HHmm]: () => `${hours}:${minutes}`,\n            [TimeFormats.HHmmss]: () => `${hours}:${minutes}:${seconds}`\n        };\n\n        return formattedTimeGenerators[timeFormat]();\n    }\n\n    private _getParsedTimeParts(timeString: string): {\n        hoursOnly: any;\n        hoursAndMinutes: any;\n        hoursAndMinutesAndSeconds: any;\n    } {\n        const hoursAndMinutesAndSeconds = timeString.match(HOURS_MINUTES_SECONDS_REGEXP);\n        const hoursAndMinutes = timeString.match(HOURS_MINUTES_REGEXP);\n        const hoursOnly = timeString.match(HOURS_ONLY_REGEXP);\n\n        return {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        };\n    }\n\n    /**\n     * @description Create Date object from separate parts of time\n     */\n    private _getDateFromTimeDigits(hours: number, minutes: number, seconds: number = 0): Date | undefined {\n        return this._getDateFromTimeString(`${hours}:${minutes}:${seconds}`);\n    }\n\n    private _getDateFromTimeString(timeString: string | undefined): Date | undefined {\n        // TODO Use moment-js\n        if (timeString === undefined) { return; }\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this._getParsedTimeParts(timeString);\n\n        if (timeString.trim().length === 0 ||\n            hoursOnly === null && hoursAndMinutes === null && hoursAndMinutesAndSeconds === null) {\n            return;\n        }\n\n        // tslint:disable no-magic-numbers\n        let hours: number = 0;\n        let minutes: number = 0;\n        let seconds: number = 0;\n\n        if (hoursOnly) {\n            hours = Number(hoursOnly[1]);\n        } else if (hoursAndMinutes) {\n            hours = Number(hoursAndMinutes[1]);\n            minutes = Number(hoursAndMinutes[2]);\n        } else if (hoursAndMinutesAndSeconds) {\n            hours = Number(hoursAndMinutesAndSeconds[1]);\n            minutes = Number(hoursAndMinutesAndSeconds[2]);\n            seconds = Number(hoursAndMinutesAndSeconds[3]);\n        }\n        // const timestamp: number = Date.parse(fullDateString);\n        const resultDate: Date = new Date(1970, 0, 1, hours, minutes, seconds);\n        // tslint:enable no-magic-numbers\n\n        return isNaN(resultDate.getTime()) ? undefined : resultDate;\n    }\n\n    private _getNumberWithLeadingZero(digit: number): string {\n        const MAX_DIGIT_WITH_LEADING_ZERO: number = 9;\n\n        return digit > MAX_DIGIT_WITH_LEADING_ZERO ? `${digit}` : `0${digit}`;\n    }\n\n    private _getTimeDigitsFromDate(dateVal: Date): { hours: number; minutes: number; seconds: number } {\n        return {\n            hours: dateVal.getHours(),\n            minutes: dateVal.getMinutes(),\n            seconds: dateVal.getSeconds()\n        };\n    }\n\n    private _parseValidator(): ValidationErrors | null {\n        return this._currentDTimeInput === undefined ?\n            { mcTimepickerParse: { text: this._elementRef.nativeElement.value } } :\n            null;\n    }\n\n    private _minTimeValidator(): ValidationErrors | null {\n\n        if (this._currentDTimeInput !== undefined &&\n            this._minDTime !== undefined &&\n            this._isTimeLowerThenMin(this._currentDTimeInput)) {\n            return { mcTimepickerLowerThenMintime: { text: this._elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private _maxTimeValidator(): ValidationErrors | null {\n        if (this._currentDTimeInput !== undefined &&\n            this._maxDTime !== undefined &&\n            this._isTimeGreaterThenMax(this._currentDTimeInput)) {\n            return { mcTimepickerHigherThenMaxtime: { text: this._elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private _isTimeLowerThenMin(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this._minDTime).getTime() < 0;\n    }\n\n    private _isTimeGreaterThenMax(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this._maxDTime).getTime() >= 0;\n    }\n}\n","export enum TimeParts {\n    hours,\n    minutes,\n    seconds\n}\n\nexport enum TimeFormats {\n    HHmmss = 'HH:mm:ss',\n    HHmm = 'HH:mm'\n}\n\nexport const TIMEFORMAT_PLACEHOLDERS: { [timeFormat: string]: string } = {\n    'hh:mm:ss': '  :  :  ',\n    'hh:mm': '  :  '\n};\n\nexport const DEFAULT_TIME_FORMAT: TimeFormats = TimeFormats.HHmm;\n\nexport const HOURS_MINUTES_SECONDS_REGEXP =\n    new RegExp(/^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9]):([0-5][0-9]|[0-9])?$/);\nexport const HOURS_MINUTES_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9])?$/;\nexport const HOURS_ONLY_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):?$/;\n\nexport const SECONDS_PER_MINUTE: number = 59;\nexport const MINUTES_PER_HOUR: number = 59;\nexport const HOURS_PER_DAY: number = 23;\n\n// TODO Move it to common CDK\nexport const ARROW_UP_KEYCODE: string = 'ArrowUp';\nexport const ARROW_DOWN_KEYCODE: string = 'ArrowDown';\nexport const ARROW_LEFT_KEYCODE: string = 'ArrowLeft';\nexport const ARROW_RIGHT_KEYCODE: string = 'ArrowRight';\n"],"names":["tslib_1.__decorate","tslib_1.__metadata","tslib_1.__param","tslib_1.__extends"],"mappings":"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"}