{"version":3,"file":"tabs.es5.js","sources":["../../../packages/mosaic/tabs/tabs.module.ts","../../../packages/mosaic/tabs/tab-nav-bar/tab-nav-bar.ts","../../../packages/mosaic/tabs/tab-group.ts","../../../packages/mosaic/tabs/tab-header.ts","../../../packages/mosaic/tabs/tab-label-wrapper.ts","../../../packages/mosaic/tabs/tab-body.ts","../../../packages/mosaic/tabs/tabs-animations.ts","../../../packages/mosaic/tabs/tab.ts","../../../packages/mosaic/tabs/tab-label.ts","../../../packages/mosaic/tabs/tab-content.ts"],"sourcesContent":["import { A11yModule } from '@angular/cdk/a11y';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McTab } from './tab';\nimport { McTabBody, McTabBodyPortal } from './tab-body';\nimport { McTabContent } from './tab-content';\nimport {\n    McTabGroup,\n    McLightTabsCssStyler,\n    McAlignTabsCenterCssStyler,\n    McAlignTabsEndCssStyler,\n    McStretchTabsCssStyler\n} from './tab-group';\nimport { McTabHeader } from './tab-header';\nimport { McTabLabel } from './tab-label';\nimport { McTabLabelWrapper } from './tab-label-wrapper';\nimport { McTabLink, McTabNav } from './tab-nav-bar/tab-nav-bar';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McCommonModule,\n        PortalModule,\n        A11yModule\n    ],\n    // Don't export all components because some are only to be used internally.\n    exports: [\n        McCommonModule,\n        McTabGroup,\n        McTabLabel,\n        McTab,\n        McTabNav,\n        McTabLink,\n        McTabContent,\n        McLightTabsCssStyler,\n        McAlignTabsCenterCssStyler,\n        McAlignTabsEndCssStyler,\n        McStretchTabsCssStyler\n    ],\n    declarations: [\n        McTabGroup,\n        McTabLabel,\n        McTab,\n        McTabLabelWrapper,\n        McTabNav,\n        McTabLink,\n        McTabBody,\n        McTabBodyPortal,\n        McTabHeader,\n        McTabContent,\n        McLightTabsCssStyler,\n        McAlignTabsCenterCssStyler,\n        McAlignTabsEndCssStyler,\n        McStretchTabsCssStyler\n    ]\n})\nexport class McTabsModule {}\n","import { FocusMonitor } from '@angular/cdk/a11y';\nimport {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    OnDestroy,\n    ViewEncapsulation\n} from '@angular/core';\nimport {\n    CanColor,\n    CanColorCtor,\n    CanDisable,\n    CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\n// Boilerplate for applying mixins to McTabNav.\n/** @docs-private */\nexport class McTabNavBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {}\n}\n// tslint:disable-next-line:naming-convention\nexport const McTabNavMixinBase: CanColorCtor &\n    typeof McTabNavBase = mixinColor(McTabNavBase);\n\n/**\n * Navigation component matching the styles of the tab group header.\n */\n@Component({\n    selector: '[mc-tab-nav-bar]',\n    exportAs: 'mcTabNavBar, mcTabNav',\n    inputs: ['color'],\n    templateUrl: 'tab-nav-bar.html',\n    styleUrls: ['tab-nav-bar.css'],\n    host: { class: 'mc-tab-nav-bar' },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McTabNav extends McTabNavMixinBase\n    implements CanColor {\n        constructor(elementRef: ElementRef) {\n            super(elementRef);\n        }\n     }\n\n// Boilerplate for applying mixins to McTabLink.\nexport class McTabLinkBase {}\n// tslint:disable-next-line:naming-convention\nexport const McTabLinkMixinBase: HasTabIndexCtor & CanDisableCtor &\n    typeof McTabLinkBase = mixinTabIndex(mixinDisabled(McTabLinkBase));\n\n/**\n * Link inside of a `mc-tab-nav-bar`.\n */\n@Directive({\n    selector: '[mc-tab-link], [mcTabLink]',\n    exportAs: 'mcTabLink',\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-tab-link',\n        '[attr.aria-current]': 'active',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.tabIndex]': 'tabIndex',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-active]': 'active'\n    }\n})\nexport class McTabLink extends McTabLinkMixinBase\n    implements OnDestroy, CanDisable, HasTabIndex {\n    /** Whether the link is active. */\n    @Input()\n    get active(): boolean {\n        return this.isActive;\n    }\n    set active(value: boolean) {\n        if (value !== this.isActive) {\n            this.isActive = value;\n        }\n    }\n\n    /** Whether the tab link is active or not. */\n    protected isActive: boolean = false;\n\n    constructor(\n        public elementRef: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        private focusMonitor: FocusMonitor\n    ) {\n        super();\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this.focusMonitor.monitor(this.elementRef.nativeElement);\n    }\n\n    ngOnDestroy() {\n        this.focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n}\n","import { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport {\n    AfterContentChecked,\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    InjectionToken,\n    Inject,\n    Optional,\n    Directive, Attribute\n} from '@angular/core';\nimport {\n    CanColor,\n    CanColorCtor,\n    mixinColor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { merge, Subscription } from 'rxjs';\n\nimport { McTab } from './tab';\nimport { McTabHeader } from './tab-header';\n\n\n@Directive({\n    selector: 'mc-tab-group[mc-light-tabs], [mc-tab-nav-bar][mc-light-tabs]',\n    host: { class: 'mc-tab-group_light' }\n})\nexport class McLightTabsCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-align-tabs-center], [mc-tab-nav-bar][mc-align-tabs-center]',\n    host: { class: 'mc-tab-group_align-labels-center' }\n})\nexport class McAlignTabsCenterCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-align-tabs-end], [mc-tab-nav-bar][mc-align-tabs-end]',\n    host: { class: 'mc-tab-group_align-labels-end' }\n})\nexport class McAlignTabsEndCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-stretch-tabs], [mc-tab-nav-bar][mc-stretch-tabs]',\n    host: { class: 'mc-tab-group_stretch-labels' }\n})\nexport class McStretchTabsCssStyler { }\n\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n\n/** A simple change event emitted on focus or selection changes. */\nexport class McTabChangeEvent {\n    /** Index of the currently-selected tab. */\n    index: number;\n    /** Reference to the currently-selected tab. */\n    tab: McTab;\n}\n\n/** Possible positions for the tab header. */\nexport type McTabHeaderPosition = 'above' | 'below';\n\n/** Object that can be used to configure the default options for the tabs module. */\nexport interface IMcTabsConfig {\n    /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n    animationDuration?: string;\n}\n\n/** Injection token that can be used to provide the default options the tabs module. */\nexport const MC_TABS_CONFIG = new InjectionToken<string>('MC_TABS_CONFIG');\n\n// Boilerplate for applying mixins to McTabGroup.\n/** @docs-private */\nexport class McTabGroupBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) { }\n}\n// tslint:disable-next-line:naming-convention\nexport const McTabGroupMixinBase:\n    CanColorCtor &\n    typeof McTabGroupBase =\n    mixinColor(mixinDisabled(McTabGroupBase));\n\n/**\n * Tab-group component.  Supports basic tab pairs (label + content) and includes\n * keyboard navigation.\n */\n@Component({\n    selector: 'mc-tab-group',\n    exportAs: 'mcTabGroup',\n    templateUrl: 'tab-group.html',\n    styleUrls: ['tab-group.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['color'],\n    host: {\n        class: 'mc-tab-group',\n        '[class.mc-tab-group_dynamic-height]': 'dynamicHeight',\n        '[class.mc-tab-group_inverted-header]': 'headerPosition === \"below\"'\n    }\n})\nexport class McTabGroup extends McTabGroupMixinBase implements AfterContentInit,\n    AfterContentChecked, OnDestroy, CanColor {\n    lightTab: boolean;\n\n    /** Whether the tab group should grow to the size of the active tab. */\n    @Input()\n    get dynamicHeight(): boolean { return this._dynamicHeight; }\n    set dynamicHeight(value: boolean) { this._dynamicHeight = coerceBooleanProperty(value); }\n\n    /** The index of the active tab. */\n    @Input()\n    get selectedIndex(): number | null { return this._selectedIndex; }\n    set selectedIndex(value: number | null) {\n        this.indexToSelect = coerceNumberProperty(value, null);\n    }\n\n    @ContentChildren(McTab) tabs: QueryList<McTab>;\n\n    @ViewChild('tabBodyWrapper', {static: false}) tabBodyWrapper: ElementRef;\n\n    @ViewChild('tabHeader', {static: false}) tabHeader: McTabHeader;\n\n    /** Position of the tab header. */\n    @Input() headerPosition: McTabHeaderPosition = 'above';\n\n    /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n    @Input() animationDuration: string;\n\n    /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n    @Output() readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted when focus has changed within a tab group. */\n    @Output() readonly focusChange: EventEmitter<McTabChangeEvent> =\n        new EventEmitter<McTabChangeEvent>();\n\n    /** Event emitted when the body animation has completed */\n    @Output() readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the tab selection has changed. */\n    @Output() readonly selectedTabChange: EventEmitter<McTabChangeEvent> =\n        new EventEmitter<McTabChangeEvent>(true);\n\n    /** The tab index that should be selected after the content has been checked. */\n    private indexToSelect: number | null = 0;\n\n    /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n    private tabBodyWrapperHeight: number = 0;\n\n    /** Subscription to tabs being added/removed. */\n    private tabsSubscription = Subscription.EMPTY;\n\n    /** Subscription to changes in the tab labels. */\n    private tabLabelSubscription = Subscription.EMPTY;\n    private _dynamicHeight: boolean = false;\n    private _selectedIndex: number | null = null;\n\n    private groupId: number;\n\n    constructor(\n        elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        @Attribute('mc-light-tabs') lightTabs: string,\n        @Inject(MC_TABS_CONFIG) @Optional() defaultConfig?: IMcTabsConfig\n    ) {\n        super(elementRef);\n\n        this.lightTab = coerceBooleanProperty(lightTabs);\n\n        this.groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '0ms';\n    }\n\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = this.indexToSelect = this.clampTabIndex(this.indexToSelect);\n\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex !== indexToSelect) {\n            const isFirstRun = this._selectedIndex == null;\n\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this.createChangeEvent(indexToSelect));\n            }\n\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this.tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            });\n        }\n\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this.tabs.forEach((tab: McTab, index: number) => {\n            tab.position = index - indexToSelect;\n\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position === 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    ngAfterContentInit() {\n        this.subscribeToTabLabels();\n\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this.tabsSubscription = this.tabs.changes.subscribe(() => {\n            const indexToSelect = this.clampTabIndex(this.indexToSelect);\n\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                const tabs = this.tabs.toArray();\n\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this.indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n\n            this.subscribeToTabLabels();\n            this.changeDetectorRef.markForCheck();\n        });\n    }\n\n    ngOnDestroy() {\n        this.tabsSubscription.unsubscribe();\n        this.tabLabelSubscription.unsubscribe();\n    }\n\n    focusChanged(index: number) {\n        this.focusChange.emit(this.createChangeEvent(index));\n    }\n\n    /** Returns a unique id for each tab label element */\n    getTabLabelId(i: number): string {\n        return `mc-tab-label-${this.groupId}-${i}`;\n    }\n\n    /** Returns a unique id for each tab content element */\n    getTabContentId(i: number): string {\n        return `mc-tab-content-${this.groupId}-${i}`;\n    }\n\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    setTabBodyWrapperHeight(tabHeight: number): void {\n        if (!this._dynamicHeight || !this.tabBodyWrapperHeight) { return; }\n\n        const wrapper: HTMLElement = this.tabBodyWrapper.nativeElement;\n\n        wrapper.style.height = `${this.tabBodyWrapperHeight}px`;\n\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this.tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = `${tabHeight}px`;\n        }\n    }\n\n    /** Removes the height of the tab body wrapper. */\n    removeTabBodyWrapperHeight(): void {\n        this.tabBodyWrapperHeight = this.tabBodyWrapper.nativeElement.clientHeight;\n        this.tabBodyWrapper.nativeElement.style.height = '';\n        this.animationDone.emit();\n    }\n\n    /** Handle click events, setting new selected index if appropriate. */\n    handleClick(tab: McTab, tabHeader: McTabHeader, index: number) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n\n    /** Retrieves the tabindex for the tab. */\n    getTabIndex(tab: McTab, index: number): number | null {\n        if (tab.disabled) {\n            return null;\n        }\n\n        return this.selectedIndex === index ? 0 : -1;\n    }\n\n    private createChangeEvent(index: number): McTabChangeEvent {\n        const event = new McTabChangeEvent();\n        event.index = index;\n        if (this.tabs && this.tabs.length) {\n            event.tab = this.tabs.toArray()[index];\n        }\n\n        return event;\n    }\n\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the McTab component, whereas the data binding is inside the McTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    private subscribeToTabLabels() {\n        if (this.tabLabelSubscription) {\n            this.tabLabelSubscription.unsubscribe();\n        }\n\n        this.tabLabelSubscription = merge(...this.tabs.map((tab) => tab.stateChanges))\n            .subscribe(() => this.changeDetectorRef.markForCheck());\n    }\n\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    private clampTabIndex(index: number | null): number {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Mch.max(NaN, 0) === NaN).\n        return Math.min(this.tabs.length - 1, Math.max(index || 0, 0));\n    }\n}\n","import { Direction, Directionality } from '@angular/cdk/bidi';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport {\n    AfterContentChecked,\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Input,\n    NgZone,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\nimport { END, ENTER, HOME, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { merge, of as observableOf, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { McTabLabelWrapper } from './tab-label-wrapper';\n\n\nconst VIEWPORT_THROTTLE_TIME = 150;\nconst SCROLL_DISTANCE_DELIMITER = 3;\n\n\n/**\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n\n// Boilerplate for applying mixins to McTabHeader.\n/** @docs-private */\nexport class McTabHeaderBase {}\n\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group.\n * When the tabs list's width exceeds the width of the header container,\n * then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\n@Component({\n    selector: 'mc-tab-header',\n    templateUrl: 'tab-header.html',\n    styleUrls: ['tab-header.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        class: 'mc-tab-header',\n        '[class.mc-tab-header__pagination-controls_enabled]':\n            'showPaginationControls',\n        '[class.mc-tab-header_rtl]': 'getLayoutDirection() == \\'rtl\\''\n    }\n})\nexport class McTabHeader extends McTabHeaderBase\n    implements AfterContentChecked, AfterContentInit, OnDestroy {\n    /** The index of the active tab. */\n    @Input()\n    get selectedIndex(): number {\n        return this._selectedIndex;\n    }\n    set selectedIndex(value: number) {\n        const coercedValue = coerceNumberProperty(value);\n        this.selectedIndexChanged = this._selectedIndex !== coercedValue;\n        this._selectedIndex = coercedValue;\n\n        if (this.keyManager) {\n            this.keyManager.updateActiveItem(coercedValue);\n        }\n    }\n\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex(): number {\n        return this.keyManager ? this.keyManager.activeItemIndex : 0;\n    }\n\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value: number) {\n        if (\n            !this.isValidIndex(value) ||\n            this.focusIndex === value ||\n            !this.keyManager\n        ) {\n            return;\n        }\n\n        this.keyManager.setActiveItem(value);\n    }\n\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance(): number {\n        return this._scrollDistance;\n    }\n    set scrollDistance(v: number) {\n        this._scrollDistance = Math.max(\n            0,\n            Math.min(this.getMaxScrollDistance(), v)\n        );\n\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this.scrollDistanceChanged = true;\n        this.checkScrollingControls();\n    }\n\n    @ContentChildren(McTabLabelWrapper)\n    labelWrappers: QueryList<McTabLabelWrapper>;\n    @ViewChild('tabListContainer', {static: true})\n    tabListContainer: ElementRef;\n    @ViewChild('tabList', {static: true})\n    tabList: ElementRef;\n\n    /** Whether the controls for pagination should be displayed */\n    showPaginationControls = false;\n\n    /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n    disableScrollAfter = true;\n\n    /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n    disableScrollBefore = true;\n\n    /** Event emitted when the option is selected. */\n    @Output()\n    readonly selectFocusedIndex: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted when a label is focused. */\n    @Output()\n    readonly indexFocused: EventEmitter<number> = new EventEmitter<number>();\n\n    /** The distance in pixels that the tab labels should be translated to the left. */\n    private _scrollDistance = 0;\n\n    /** Whether the header should scroll to the selected index after the view has been checked. */\n    private selectedIndexChanged = false;\n\n    /** Emits when the component is destroyed. */\n    private readonly destroyed = new Subject<void>();\n\n    /**\n     * The number of tab labels that are displayed on the header. When this changes, the header\n     * should re-evaluate the scroll position.\n     */\n    private tabLabelCount: number;\n\n    /** Whether the scroll distance has changed and should be applied after the view is checked. */\n    private scrollDistanceChanged: boolean;\n\n    /** Used to manage focus between the tabs. */\n    private keyManager: FocusKeyManager<McTabLabelWrapper>;\n\n    /** Cached text content of the header. */\n    private currentTextContent: string;\n\n    private _selectedIndex: number = 0;\n\n    constructor(\n        private elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        private viewportRuler: ViewportRuler,\n        @Optional() private dir: Directionality,\n        private ngZone: NgZone\n    ) {\n        super();\n    }\n\n    ngAfterContentChecked(): void {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this.tabLabelCount !== this.labelWrappers.length) {\n            this.updatePagination();\n            this.tabLabelCount = this.labelWrappers.length;\n            this.changeDetectorRef.markForCheck();\n        }\n\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this.selectedIndexChanged) {\n            this.scrollToLabel(this._selectedIndex);\n            this.checkScrollingControls();\n            this.selectedIndexChanged = false;\n            this.changeDetectorRef.markForCheck();\n        }\n\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this.scrollDistanceChanged) {\n            this.updateTabScrollPosition();\n            this.scrollDistanceChanged = false;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    handleKeydown(event: KeyboardEvent) {\n        // tslint:disable-next-line: deprecation\n        switch (event.keyCode) {\n            case HOME:\n                this.keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case END:\n                this.keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case ENTER:\n            case SPACE:\n                this.selectFocusedIndex.emit(this.focusIndex);\n                event.preventDefault();\n                break;\n            default:\n                this.keyManager.onKeydown(event);\n        }\n    }\n\n    ngAfterContentInit() {\n        const dirChange = this.dir ? this.dir.change : observableOf(null);\n        const resize = this.viewportRuler.change(VIEWPORT_THROTTLE_TIME);\n        const realign = () => {\n            this.updatePagination();\n        };\n\n        this.keyManager = new FocusKeyManager(this.labelWrappers)\n            .withHorizontalOrientation(this.getLayoutDirection())\n            .withWrap();\n\n        this.keyManager.updateActiveItem(0);\n\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame === undefined\n            ? realign()\n            : requestAnimationFrame(realign);\n\n        // On dir change or window resize, update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize)\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(() => {\n                realign();\n                this.keyManager.withHorizontalOrientation(\n                    this.getLayoutDirection()\n                );\n            });\n\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this.keyManager.change\n            .pipe(takeUntil(this.destroyed))\n            .subscribe((newFocusIndex) => {\n                this.indexFocused.emit(newFocusIndex);\n                this.setTabFocus(newFocusIndex);\n            });\n    }\n\n    ngOnDestroy() {\n        this.destroyed.next();\n        this.destroyed.complete();\n    }\n\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    onContentChanges() {\n        const textContent = this.elementRef.nativeElement.textContent;\n\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in.\n\n        if (textContent !== this.currentTextContent) {\n            this.currentTextContent = textContent;\n\n            const zoneCallback = () => {\n                this.updatePagination();\n                this.changeDetectorRef.markForCheck();\n            };\n\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            // TODO: Remove null check for `_ngZone` once it's a required parameter.\n            this.ngZone ? this.ngZone.run(zoneCallback) : zoneCallback();\n        }\n    }\n\n    /**\n     * Updating the view whether pagination should be enabled or not\n     *\n     * WARNING: Calling this method can be very costly in terms of performance.  It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        this.checkPaginationEnabled();\n        this.checkScrollingControls();\n        this.updateTabScrollPosition();\n    }\n\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    isValidIndex(index: number): boolean {\n        if (!this.labelWrappers) {\n            return true;\n        }\n\n        const tab = this.labelWrappers\n            ? this.labelWrappers.toArray()[index]\n            : null;\n\n        return !!tab && !tab.disabled;\n    }\n\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    setTabFocus(tabIndex: number) {\n        if (this.showPaginationControls) {\n            this.scrollToLabel(tabIndex);\n        }\n\n        if (this.labelWrappers && this.labelWrappers.length) {\n            this.labelWrappers.toArray()[tabIndex].focus();\n\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            const containerEl = this.tabListContainer.nativeElement;\n            const dir = this.getLayoutDirection();\n\n            if (dir === 'ltr') {\n                containerEl.scrollLeft = 0;\n            } else {\n                containerEl.scrollLeft =\n                    containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n\n    /** The layout direction of the containing app. */\n    getLayoutDirection(): Direction {\n        return this.dir && this.dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    updateTabScrollPosition() {\n        const scrollDistance = this.scrollDistance;\n        const translateX =\n            this.getLayoutDirection() === 'ltr'\n                ? -scrollDistance\n                : scrollDistance;\n\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer.\n        // See: https://github.com/angular/material2/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this.tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off.\n        this.tabList.nativeElement.scrollLeft = 0;\n    }\n\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    scrollHeader(scrollDir: ScrollDirection) {\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        this.scrollDistance +=\n            ((scrollDir === 'before' ? -1 : 1) * viewLength) / SCROLL_DISTANCE_DELIMITER;\n    }\n\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    scrollToLabel(labelIndex: number) {\n        const selectedLabel = this.labelWrappers\n            ? this.labelWrappers.toArray()[labelIndex]\n            : null;\n\n        if (!selectedLabel) {\n            return;\n        }\n\n        // The view length is the visible width of the tab labels.\n        const viewLength: number = this.tabListContainer.nativeElement.offsetWidth;\n\n        let labelBeforePos: number;\n        let labelAfterPos: number;\n\n        if (this.getLayoutDirection() === 'ltr') {\n            labelBeforePos = selectedLabel.getOffsetLeft();\n            labelAfterPos = labelBeforePos + selectedLabel.getOffsetWidth();\n        } else {\n            labelAfterPos =\n                this.tabList.nativeElement.offsetWidth -\n                selectedLabel.getOffsetLeft();\n            labelBeforePos = labelAfterPos - selectedLabel.getOffsetWidth();\n        }\n\n        const beforeVisiblePos = this.scrollDistance;\n        const afterVisiblePos = this.scrollDistance + viewLength;\n\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -=\n                beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        } else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance +=\n                labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    checkPaginationEnabled() {\n        const isEnabled =\n            this.tabList.nativeElement.scrollWidth >\n            this.elementRef.nativeElement.offsetWidth;\n\n        if (!isEnabled) {\n            this.scrollDistance = 0;\n        }\n\n        if (isEnabled !== this.showPaginationControls) {\n            this.changeDetectorRef.markForCheck();\n        }\n\n        this.showPaginationControls = isEnabled;\n    }\n\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    checkScrollingControls() {\n        // Check if the pagination arrows should be activated.\n        this.disableScrollBefore = this.scrollDistance === 0;\n        this.disableScrollAfter =\n            this.scrollDistance === this.getMaxScrollDistance();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    getMaxScrollDistance(): number {\n        const lengthOfTabList = this.tabList.nativeElement.scrollWidth;\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        return lengthOfTabList - viewLength || 0;\n    }\n}\n","import { Directive, ElementRef } from '@angular/core';\nimport {\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\n\n\n// Boilerplate for applying mixins to McTabLabelWrapper.\n/** @docs-private */\nexport class McTabLabelWrapperBase {}\n// tslint:disable-next-line:naming-convention\nexport const McTabLabelWrapperMixinBase: CanDisableCtor &\n    typeof McTabLabelWrapperBase = mixinDisabled(McTabLabelWrapperBase);\n\n/**\n * Used in the `mc-tab-group` view to display tab labels.\n * @docs-private\n */\n@Directive({\n    selector: '[mcTabLabelWrapper]',\n    inputs: ['disabled'],\n    host: {\n        '[class.mc-disabled]': 'disabled',\n        '[attr.aria-disabled]': '!!disabled'\n    }\n})\nexport class McTabLabelWrapper extends McTabLabelWrapperMixinBase implements CanDisable {\n    constructor(public elementRef: ElementRef) {\n        super();\n    }\n\n    /** Sets focus on the wrapper element */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    getOffsetLeft(): number {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n\n    getOffsetWidth(): number {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\n","import { AnimationEvent } from '@angular/animations';\nimport { Directionality, Direction } from '@angular/cdk/bidi';\nimport { TemplatePortal, CdkPortalOutlet } from '@angular/cdk/portal';\nimport {\n    Component,\n    ChangeDetectorRef,\n    Input,\n    Inject,\n    Output,\n    EventEmitter,\n    OnDestroy,\n    OnInit,\n    ElementRef,\n    Directive,\n    Optional,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ComponentFactoryResolver,\n    ViewContainerRef,\n    forwardRef,\n    ViewChild\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\nimport { mcTabsAnimations } from './tabs-animations';\n\n\n/**\n * These position states are used internally as animation states for the tab body. Setting the\n * position state to left, right, or center will transition the tab body from its current\n * position to its respective state. If there is not current position (void, in the case of a new\n * tab body), then there will be no transition animation to its state.\n *\n * In the case of a new tab body that should immediately be centered with an animating transition,\n * then left-origin-center or right-origin-center can be used, which will use left or right as its\n * psuedo-prior state.\n */\nexport type McTabBodyPositionState =\n    'left' | 'center' | 'right' | 'left-origin-center' | 'right-origin-center';\n\n/**\n * The origin state is an internally used state that is set on a new tab body indicating if it\n * began to the left or right of the prior selected index. For example, if the selected index was\n * set to 1, and a new tab is created and selected at index 2, then the tab body would have an\n * origin of right because its index was greater than the prior selected index.\n */\nexport type McTabBodyOriginState = 'left' | 'right';\n\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\n@Component({\n    selector: 'mc-tab-body',\n    templateUrl: 'tab-body.html',\n    styleUrls: ['tab-body.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [mcTabsAnimations.translateTab],\n    host: {\n        class: 'mc-tab-body'\n    }\n})\nexport class McTabBody implements OnInit, OnDestroy {\n\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    @Input()\n    set position(position: number) {\n        this.positionIndex = position;\n        this.computePositionAnimationState();\n    }\n\n    /** Tab body position state. Used by the animation trigger for the current state. */\n    bodyPosition: McTabBodyPositionState;\n\n    /** Event emitted when the tab begins to animate towards the center as the active tab. */\n    @Output() readonly onCentering: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted before the centering of the tab begins. */\n    @Output() readonly beforeCentering: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted before the centering of the tab begins. */\n    @Output() readonly afterLeavingCenter: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the tab completes its animation towards the center. */\n    @Output() readonly onCentered: EventEmitter<void> = new EventEmitter<void>(true);\n\n    /** The portal host inside of this container into which the tab body content will be loaded. */\n    @ViewChild(CdkPortalOutlet, {static: false}) portalHost: CdkPortalOutlet;\n\n    /** The tab body content to display. */\n    @Input('content') content: TemplatePortal;\n\n    /** Position that will be used when the tab is immediately becoming visible after creation. */\n    @Input() origin: number;\n\n    // Note that the default value will always be overwritten by `McTabBody`, but we need one\n    // anyway to prevent the animations module from throwing an error if the body is used on its own.\n    /** Duration for the tab's animation. */\n    @Input() animationDuration: string = '0ms';\n\n    /** Current position of the tab-body in the tab-group. Zero means that the tab is visible. */\n    private positionIndex: number;\n\n    /** Subscription to the directionality change observable. */\n    private dirChangeSubscription = Subscription.EMPTY;\n\n    constructor(private elementRef: ElementRef<HTMLElement>,\n                @Optional() private dir: Directionality,\n                changeDetectorRef: ChangeDetectorRef) {\n\n        if (this.dir && changeDetectorRef) {\n            this.dirChangeSubscription = this.dir.change.subscribe((direction: Direction) => {\n                this.computePositionAnimationState(direction);\n                changeDetectorRef.markForCheck();\n            });\n        }\n    }\n\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n        if (this.bodyPosition === 'center' && this.origin != null) {\n            this.bodyPosition = this.computePositionFromOrigin();\n        }\n    }\n\n    ngOnDestroy() {\n        this.dirChangeSubscription.unsubscribe();\n    }\n\n    onTranslateTabStarted(e: AnimationEvent): void {\n        const isCentering = this.isCenterPosition(e.toState);\n        this.beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this.onCentering.emit(this.elementRef.nativeElement.clientHeight);\n        }\n    }\n\n    onTranslateTabComplete(e: AnimationEvent): void {\n        // If the transition to the center is complete, emit an event.\n        if (this.isCenterPosition(e.toState) && this.isCenterPosition(this.bodyPosition)) {\n            this.onCentered.emit();\n        }\n\n        if (this.isCenterPosition(e.fromState) && !this.isCenterPosition(this.bodyPosition)) {\n            this.afterLeavingCenter.emit();\n        }\n    }\n\n    /** The text direction of the containing app. */\n    getLayoutDirection(): Direction {\n        return this.dir && this.dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    /** Whether the provided position state is considered center, regardless of origin. */\n    isCenterPosition(position: McTabBodyPositionState | string): boolean {\n        return position === 'center' ||\n            position === 'left-origin-center' ||\n            position === 'right-origin-center';\n    }\n\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    private computePositionAnimationState(dir: Direction = this.getLayoutDirection()) {\n        if (this.positionIndex < 0) {\n            this.bodyPosition = dir === 'ltr' ? 'left' : 'right';\n        } else if (this.positionIndex > 0) {\n            this.bodyPosition = dir === 'ltr' ? 'right' : 'left';\n        } else {\n            this.bodyPosition = 'center';\n        }\n    }\n\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    private computePositionFromOrigin(): McTabBodyPositionState {\n        const dir = this.getLayoutDirection();\n\n        if ((dir === 'ltr' && this.origin <= 0) || (dir === 'rtl' && this.origin > 0)) {\n            return 'left-origin-center';\n        }\n\n        return 'right-origin-center';\n    }\n}\n\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\n@Directive({\n    selector: '[mcTabBodyHost]'\n})\nexport class McTabBodyPortal extends CdkPortalOutlet implements OnInit, OnDestroy {\n    /** Subscription to events for when the tab body begins centering. */\n    private centeringSub = Subscription.EMPTY;\n    /** Subscription to events for when the tab body finishes leaving from center position. */\n    private leavingSub = Subscription.EMPTY;\n\n    constructor(\n        componentFactoryResolver: ComponentFactoryResolver,\n        viewContainerRef: ViewContainerRef,\n        @Inject(forwardRef(() => McTabBody)) private host: McTabBody) {\n        super(componentFactoryResolver, viewContainerRef);\n    }\n\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit(): void {\n        super.ngOnInit();\n\n        this.centeringSub = this.host.beforeCentering\n            .pipe(startWith(this.host.isCenterPosition(this.host.bodyPosition)))\n            .subscribe((isCentering: boolean) => {\n                if (isCentering && !this.hasAttached()) {\n                    this.attach(this.host.content);\n                }\n            });\n\n        this.leavingSub = this.host.afterLeavingCenter.subscribe(() => {\n            this.detach();\n        });\n    }\n\n    /** Clean up centering subscription. */\n    ngOnDestroy(): void {\n        super.ngOnDestroy();\n        this.centeringSub.unsubscribe();\n        this.leavingSub.unsubscribe();\n    }\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\nexport const mcTabsAnimations: {\n    readonly translateTab: AnimationTriggerMetadata;\n} = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state(\n            'center, void, left-origin-center, right-origin-center',\n            style({ transform: 'none' })\n        ),\n\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state(\n            'left',\n            style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })\n        ),\n        state(\n            'right',\n            style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })\n        ),\n\n        transition(\n            '* => left, * => right, left => center, right => center',\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n","import { TemplatePortal } from '@angular/cdk/portal';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport {\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { Subject } from 'rxjs';\n\nimport { McTabContent } from './tab-content';\nimport { McTabLabel } from './tab-label';\n\n\nexport class McTabBase {}\n// tslint:disable-next-line:naming-convention\nexport const McTabMixinBase: CanDisableCtor & typeof McTabBase = mixinDisabled(\n    McTabBase\n);\n\n@Component({\n    selector: 'mc-tab',\n    // Create a template for the content of the <mc-tab> so that we can grab a reference to this\n    // TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\n    // tab-group.\n    template: '<ng-template><ng-content></ng-content></ng-template>',\n    inputs: ['disabled'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcTab'\n})\nexport class McTab extends McTabMixinBase\n    implements OnInit, CanDisable, OnChanges, OnDestroy {\n    /** @docs-private */\n    get content(): TemplatePortal | null {\n        return this.contentPortal;\n    }\n    /** Content for the tab label given by `<ng-template mc-tab-label>`. */\n    @ContentChild(McTabLabel, {static: false})\n    templateLabel: McTabLabel;\n\n    /**\n     * Template provided in the tab content that will be used if present, used to enable lazy-loading\n     */\n    @ContentChild(McTabContent, { read: TemplateRef, static: true })\n    explicitContent: TemplateRef<any>;\n\n    /** Template inside the McTab view that contains an `<ng-content>`. */\n    @ViewChild(TemplateRef, {static: true})\n    implicitContent: TemplateRef<any>;\n\n    /** Plain text label for the tab, used when there is no template label. */\n    @Input('label')\n    textLabel: string = '';\n\n    @Input('tabId')\n    tabId: string;\n\n    /** Aria label for the tab. */\n    @Input('aria-label')\n    ariaLabel: string;\n\n    /**\n     * Reference to the element that the tab is labelled by.\n     * Will be cleared if `aria-label` is set at the same time.\n     */\n    @Input('aria-labelledby')\n    ariaLabelledby: string;\n\n    /** Emits whenever the internal state of the tab changes. */\n    readonly stateChanges = new Subject<void>();\n\n    /**\n     * The relatively indexed position where 0 represents the center, negative is left, and positive\n     * represents the right.\n     */\n    position: number | null = null;\n\n    /**\n     * The initial relatively index origin of the tab if it was created and selected after there\n     * was already a selected tab. Provides context of what position the tab should originate from.\n     */\n    origin: number | null = null;\n\n    /**\n     * Whether the tab is currently active.\n     */\n    isActive = false;\n\n    /** Portal that will be the hosted content of the tab */\n    private contentPortal: TemplatePortal | null = null;\n\n    constructor(private viewContainerRef: ViewContainerRef) {\n        super();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (\n            changes.hasOwnProperty('textLabel') ||\n            changes.hasOwnProperty('disabled')\n        ) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngOnInit(): void {\n        this.contentPortal = new TemplatePortal(\n            this.explicitContent || this.implicitContent,\n            this.viewContainerRef\n        );\n    }\n}\n","import { CdkPortal } from '@angular/cdk/portal';\nimport { Directive } from '@angular/core';\n\n\n/** Used to flag tab labels for use with the portal directive */\n@Directive({\n    selector: '[mc-tab-label], [mcTabLabel]'\n})\nexport class McTabLabel extends CdkPortal {}\n\n// TODO: workaround for https://github.com/angular/material2/issues/12760\n(McTabLabel as any).ctorParameters = () => (CdkPortal as any).ctorParameters;\n","import { Directive, TemplateRef } from '@angular/core';\n\n\n/** Decorates the `ng-template` tags and reads out the template from it. */\n@Directive({ selector: '[mcTabContent]' })\nexport class McTabContent {\n    constructor(public template: TemplateRef<any>) { }\n}\n"],"names":["tslib_1.__extends","observableOf"],"mappings":"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"}