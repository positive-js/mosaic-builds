{"version":3,"file":"form-field.es5.js","sources":["../../../packages/mosaic/form-field/form-field.module.ts","../../../packages/mosaic/form-field/form-field.ts","../../../packages/mosaic/form-field/suffix.ts","../../../packages/mosaic/form-field/stepper.ts","../../../packages/mosaic/form-field/prefix.ts","../../../packages/mosaic/form-field/hint.ts","../../../packages/mosaic/form-field/form-field-errors.ts","../../../packages/mosaic/form-field/form-field-control.ts","../../../packages/mosaic/form-field/cleaner.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCleaner } from './cleaner';\nimport { McFormField, McFormFieldWithoutBorders } from './form-field';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\n@NgModule({\n    declarations: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ],\n    imports: [CommonModule, McIconModule],\n    exports: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ]\n})\nexport class McFormFieldModule {\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren,\n    Directive,\n    ElementRef,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { CanColor, CanColorCtor, mixinColor } from '@ptsecurity/mosaic/core';\nimport { EMPTY, merge } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\nimport { McCleaner } from './cleaner';\nimport { McFormFieldControl } from './form-field-control';\nimport {\n    getMcFormFieldMissingControlError,\n    getMcFormFieldYouCanNotUseCleanerInNumberInputError\n} from './form-field-errors';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\nlet nextUniqueId = 0;\n\nexport class McFormFieldBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {}\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McFormFieldMixinBase: CanColorCtor & typeof McFormFieldBase = mixinColor(McFormFieldBase);\n\n@Component({\n    selector: 'mc-form-field',\n    exportAs: 'mcFormField',\n    templateUrl: 'form-field.html',\n    // McInput is a directive and can't have styles, so we need to include its styles here.\n    // The McInput styles are fairly minimal so it shouldn't be a big deal for people who\n    // aren't using McInput.\n    styleUrls: [\n        'form-field.css',\n        '../input/input.css',\n        '../textarea/textarea.css'\n    ],\n    host: {\n        class: 'mc-form-field',\n        '[class.mc-form-field_invalid]': 'control.errorState',\n        '[class.mc-disabled]': 'control.disabled',\n        '[class.mc-form-field_has-prefix]': 'hasPrefix',\n        '[class.mc-form-field_has-suffix]': 'hasSuffix',\n        '[class.mc-form-field_has-cleaner]': 'canShowCleaner',\n        '[class.mc-form-field_has-stepper]': 'canShowStepper',\n        '[class.mc-focused]': 'control.focused',\n        '[class.ng-untouched]': 'shouldForward(\"untouched\")',\n        '[class.ng-touched]': 'shouldForward(\"touched\")',\n        '[class.ng-pristine]': 'shouldForward(\"pristine\")',\n        '[class.ng-dirty]': 'shouldForward(\"dirty\")',\n        '[class.ng-valid]': 'shouldForward(\"valid\")',\n        '[class.ng-invalid]': 'shouldForward(\"invalid\")',\n        '[class.ng-pending]': 'shouldForward(\"pending\")',\n        '(keydown)': 'onKeyDown($event)',\n        '(mouseenter)': 'onHoverChanged(true)',\n        '(mouseleave)': 'onHoverChanged(false)'\n    },\n    inputs: ['color'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class McFormField extends McFormFieldMixinBase implements\n    AfterContentInit, AfterContentChecked, AfterViewInit, CanColor {\n\n    @ContentChild(McFormFieldControl, { static: false }) control: McFormFieldControl<any>;\n    @ContentChild(McStepper, { static: false }) stepper: McStepper;\n    @ContentChild(McCleaner, { static: false }) cleaner: McCleaner | null;\n\n    @ContentChildren(McHint) hint: QueryList<McHint>;\n    @ContentChildren(McSuffix) suffix: QueryList<McSuffix>;\n    @ContentChildren(McPrefix) prefix: QueryList<McPrefix>;\n\n    @ViewChild('connectionContainer', { static: true }) connectionContainerRef: ElementRef;\n\n    // Unique id for the internal form field label.\n    labelId = `mc-form-field-label-${nextUniqueId++}`;\n\n    hovered: boolean = false;\n\n    canCleanerClearByEsc: boolean = true;\n\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {\n        super(_elementRef);\n    }\n\n    ngAfterContentInit() {\n        if ((this.control as any).numberInput && this.hasCleaner) {\n            this.cleaner = null;\n            throw getMcFormFieldYouCanNotUseCleanerInNumberInputError();\n        }\n\n        this.validateControlChild();\n\n        if (this.control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mc-form-field-type-${this.control.controlType}`);\n        }\n\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        this.control.stateChanges\n            .pipe(startWith())\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n\n        if (this.hasStepper) {\n            this.stepper.connectTo((this.control as any).numberInput);\n        }\n\n        // Run change detection if the value changes.\n        const valueChanges = this.control.ngControl && this.control.ngControl.valueChanges || EMPTY;\n\n        merge(valueChanges)\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n\n    ngAfterContentChecked() {\n        this.validateControlChild();\n    }\n\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._changeDetectorRef.detectChanges();\n    }\n\n    clearValue($event) {\n        $event.stopPropagation();\n\n        if (this.control && this.control.ngControl) {\n            this.control.ngControl.reset();\n            this.control.focus();\n        }\n    }\n\n    onContainerClick($event) {\n        if (this.control.onContainerClick) {\n            this.control.onContainerClick($event);\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n        // tslint:disable-next-line:deprecation\n        if (this.canCleanerClearByEsc && event.keyCode === ESCAPE && this.control.focused && this.hasCleaner) {\n            if (this.control && this.control.ngControl) {\n                this.control.ngControl.reset();\n            }\n\n            event.preventDefault();\n        }\n    }\n\n    onHoverChanged(isHovered: boolean) {\n        if (isHovered !== this.hovered) {\n            this.hovered = isHovered;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     */\n    getConnectedOverlayOrigin(): ElementRef {\n        return this.connectionContainerRef || this._elementRef;\n    }\n\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    shouldForward(prop: keyof NgControl): boolean {\n        const ngControl = this.control ? this.control.ngControl : null;\n\n        return ngControl && ngControl[prop];\n    }\n\n    /** Throws an error if the form field's control is missing. */\n    protected validateControlChild() {\n        if (!this.control) {\n            throw getMcFormFieldMissingControlError();\n        }\n    }\n\n    get hasHint(): boolean {\n        return this.hint && this.hint.length > 0;\n    }\n\n    get hasSuffix(): boolean {\n        return this.suffix && this.suffix.length > 0;\n    }\n\n    get hasPrefix(): boolean {\n        return this.prefix && this.prefix.length > 0;\n    }\n\n    get hasCleaner(): boolean {\n        return !!this.cleaner;\n    }\n\n    get hasStepper(): boolean {\n        return !!this.stepper;\n    }\n\n    get canShowCleaner(): boolean {\n        return this.hasCleaner &&\n            this.control &&\n            this.control.ngControl\n                ? this.control.ngControl.value && !this.control.disabled\n                : false;\n    }\n\n    get disabled(): boolean {\n        return this.control && this.control.disabled;\n    }\n\n    get canShowStepper(): boolean {\n        return this.control && !this.disabled && (this.control.focused || this.hovered);\n    }\n}\n\n@Directive({\n    selector: 'mc-form-field[mcFormFieldWithoutBorders]',\n    exportAs: 'mcFormFieldWithoutBorders',\n    host: { class: 'mc-form-field_without-borders' }\n})\nexport class McFormFieldWithoutBorders {}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcSuffix]'\n})\nexport class McSuffix {\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-stepper',\n    template: `\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-up mc-angle-down-L_16\"\n           (mousedown)=\"onStepUp($event)\">\n        </i>\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-down mc-angle-down-L_16\"\n           (mousedown)=\"onStepDown($event)\">\n        </i>\n    `\n})\nexport class McStepper {\n    @Output()\n    readonly stepUp: EventEmitter<void> = new EventEmitter<void>();\n    @Output()\n    readonly stepDown: EventEmitter<void> = new EventEmitter<void>();\n\n    connectTo(numberInput: any) {\n        if (!numberInput) { return; }\n\n        this.stepUp.subscribe(() => {\n            numberInput.stepUp(numberInput.step);\n        });\n\n        this.stepDown.subscribe(() => {\n            numberInput.stepDown(numberInput.step);\n        });\n    }\n\n    onStepUp($event: MouseEvent) {\n        this.stepUp.emit();\n        $event.preventDefault();\n    }\n\n    onStepDown($event: MouseEvent) {\n        this.stepDown.emit();\n        $event.preventDefault();\n    }\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcPrefix]'\n})\nexport class McPrefix {\n}\n","import { Directive, Input } from '@angular/core';\n\n\nlet nextUniqueId = 0;\n\n@Directive({\n    selector: 'mc-hint',\n    host: {\n        class: 'mc-hint',\n        '[attr.id]': 'id'\n    }\n})\nexport class McHint {\n    @Input() id: string = `mc-hint-${nextUniqueId++}`;\n}\n","export function getMcFormFieldMissingControlError(): Error {\n  return Error('mc-form-field must contain a McFormFieldControl.');\n}\n\nexport function getMcFormFieldYouCanNotUseCleanerInNumberInputError(): Error {\n  return Error(`You can't use mc-cleaner with input that have type=\"number\"`);\n}\n","import { NgControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\n// tslint:disable-next-line:naming-convention\nexport abstract class McFormFieldControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** The element ID for this control. */\n    readonly id: string;\n\n    /** The placeholder for this control. */\n    readonly placeholder: string;\n\n    /** Gets the NgControl for this control. */\n    readonly ngControl: NgControl | null;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Whether the control is empty. */\n    readonly empty: boolean;\n\n    /** Whether the control is required. */\n    readonly required: boolean;\n\n    /** Whether the control is disabled. */\n    readonly disabled: boolean;\n\n    /** Whether the control is in an error state. */\n    readonly errorState: boolean;\n\n    /**\n     * An optional name for the control type that can be used to distinguish `mc-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mc-form-field-type-{{controlType}}` to its root element.\n     */\n    readonly controlType?: string;\n\n    /** Handles a click on the control's container. */\n    abstract onContainerClick(event: MouseEvent): void;\n\n    abstract focus(): void;\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-cleaner',\n    exportAs: 'mcCleaner',\n    template: '<i class=\"mc-icon_light\" mc-icon=\"mc-close-M_16\" color=\"second\"></i>',\n    host: {\n        class: 'mc-cleaner'\n    }\n})\nexport class McCleaner {}\n"],"names":["nextUniqueId","tslib_1.__extends"],"mappings":"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"}