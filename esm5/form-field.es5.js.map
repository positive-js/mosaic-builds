{"version":3,"file":"form-field.es5.js","sources":["../../../src/lib/form-field/form-field.module.ts","../../../src/lib/form-field/form-field.ts","../../../src/lib/form-field/suffix.ts","../../../src/lib/form-field/prefix.ts","../../../src/lib/form-field/hint.ts","../../../src/lib/form-field/form-field-errors.ts","../../../src/lib/form-field/form-field-control.ts","../../../src/lib/form-field/cleaner.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCleaner } from './cleaner';\nimport { McFormField, McFormFieldWithoutBorders } from './form-field';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McSuffix } from './suffix';\n\n\n@NgModule({\n    declarations: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner\n    ],\n    imports: [CommonModule, McIconModule],\n    exports: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner\n    ]\n})\nexport class McFormFieldModule {\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren, Directive,\n    ElementRef,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { EMPTY, merge } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\n\nimport { McCleaner } from './cleaner';\nimport { McFormFieldControl } from './form-field-control';\nimport { getMcFormFieldMissingControlError } from './form-field-errors';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McSuffix } from './suffix';\n\n\nexport class McFormFieldBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\n@Component({\n    selector: 'mc-form-field',\n    exportAs: 'mcFormField',\n    templateUrl: 'form-field.html',\n    // McInput is a directive and can't have styles, so we need to include its styles here.\n    // The McInput styles are fairly minimal so it shouldn't be a big deal for people who\n    // aren't using McInput.\n    styleUrls: [\n        'form-field.css',\n        '../input/input.css'\n    ],\n    host: {\n        class: 'mc-form-field',\n        '[class.mc-form-field_invalid]': '_control.errorState',\n        '[class.mc-form-field_disabled]': '_control.disabled',\n        '[class.mc-form-field_has-prefix]': 'hasPrefix',\n        '[class.mc-form-field_has-suffix]': 'hasSuffix',\n        '[class.mc-form-field_has-cleaner]': 'canShowCleaner',\n        '[class.mc-focused]': '_control.focused',\n        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n        '[class.ng-touched]': '_shouldForward(\"touched\")',\n        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n        '[class.ng-valid]': '_shouldForward(\"valid\")',\n        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n        '[class.ng-pending]': '_shouldForward(\"pending\")'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class McFormField extends McFormFieldBase\n    implements AfterContentInit, AfterContentChecked, AfterViewInit {\n\n    @ContentChild(McFormFieldControl) _control: McFormFieldControl<any>;\n    @ContentChildren(McHint) _hint: QueryList<McHint>;\n    @ContentChildren(McSuffix) _suffix: QueryList<McSuffix>;\n    @ContentChildren(McPrefix) _prefix: QueryList<McPrefix>;\n    @ContentChildren(McCleaner) _cleaner: QueryList<McCleaner>;\n\n\n    constructor(\n        public _elementRef: ElementRef,\n        private _changeDetectorRef: ChangeDetectorRef) {\n        super(_elementRef);\n    }\n\n    ngAfterContentInit() {\n        this._validateControlChild();\n        if (this._control.controlType) {\n            this._elementRef.nativeElement.classList\n                .add(`mc-form-field-type-${this._control.controlType}`);\n        }\n\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        this._control.stateChanges.pipe(startWith()).subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n        });\n\n        // Run change detection if the value changes.\n        const valueChanges = this._control.ngControl && this._control.ngControl.valueChanges || EMPTY;\n        merge(valueChanges)\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n\n    ngAfterContentChecked() {\n        this._validateControlChild();\n    }\n\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._changeDetectorRef.detectChanges();\n    }\n\n    clearValue($event) {\n        $event.stopPropagation();\n\n        if (this._control && this._control.ngControl) {\n            this._control.ngControl.reset();\n        }\n    }\n\n    onContainerClick($event) {\n        return this._control.onContainerClick && this._control.onContainerClick($event);\n    }\n\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop: string): boolean {\n        const ngControl = this._control ? this._control.ngControl : null;\n\n        return ngControl && ngControl[prop];\n    }\n\n    /** Throws an error if the form field's control is missing. */\n    protected _validateControlChild() {\n        if (!this._control) {\n            throw getMcFormFieldMissingControlError();\n        }\n    }\n\n    get hasHint() {\n        return this._hint && this._hint.length > 0;\n    }\n\n    get hasSuffix() {\n        return this._suffix && this._suffix.length > 0;\n    }\n\n    get hasPrefix() {\n        return this._prefix && this._prefix.length > 0;\n    }\n\n    get canShowCleaner() {\n        return this._cleaner && this._cleaner.length > 0 &&\n        this._control && this._control.ngControl\n            ? this._control.ngControl.value && !this._control.disabled\n            : false;\n    }\n}\n\n@Directive({\n    selector: 'mc-form-field[mcFormFieldWithoutBorders]',\n    exportAs: 'mcFormFieldWithoutBorders',\n    host: { class: 'mc-form-field_without-borders' }\n})\nexport class McFormFieldWithoutBorders {\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcSuffix]'\n})\nexport class McSuffix {\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcPrefix]'\n})\nexport class McPrefix {\n}\n","import { Directive, Input } from '@angular/core';\n\n\nlet nextUniqueId = 0;\n\n@Directive({\n    selector: 'mc-hint',\n    host: {\n        class: 'mc-hint',\n        '[attr.id]': 'id'\n    }\n})\nexport class McHint {\n    @Input() id: string = `mc-hint-${nextUniqueId++}`;\n}\n","export function getMcFormFieldMissingControlError(): Error {\n  return Error('mc-form-field must contain a McFormFieldControl.');\n}\n","import { NgControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** The element ID for this control. */\n    readonly id: string;\n\n    /** The placeholder for this control. */\n    readonly placeholder: string;\n\n    /** Gets the NgControl for this control. */\n    readonly ngControl: NgControl | null;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Whether the control is empty. */\n    readonly empty: boolean;\n\n    /** Whether the control is required. */\n    readonly required: boolean;\n\n    /** Whether the control is disabled. */\n    readonly disabled: boolean;\n\n    /** Whether the control is in an error state. */\n    readonly errorState: boolean;\n\n    /**\n     * An optional name for the control type that can be used to distinguish `mat-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mat-form-field-type-{{controlType}}` to its root element.\n     */\n    readonly controlType?: string;\n\n    /** Handles a click on the control's container. */\n    abstract onContainerClick(event: MouseEvent): void;\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-cleaner',\n    template: '<i mc-icon=\"mc-close-M_16\" class=\"mc-cleaner__icon\"></i>'\n})\nexport class McCleaner {\n}\n"],"names":["tslib_1.__extends"],"mappings":"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"}