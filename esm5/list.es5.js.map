{"version":3,"file":"list.es5.js","sources":["../../../src/lib/list/list.module.ts","../../../src/lib/list/list.component.ts","../../../src/lib/list/list-selection.component.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McLineModule, McPseudoCheckboxModule } from '@ptsecurity/mosaic/core';\n\nimport { McListSelection, McListOption } from './list-selection.component';\nimport { McList, McListItem, McListSubheaderCssStyler} from './list.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule,\n        A11yModule,\n        McPseudoCheckboxModule,\n        McLineModule\n    ],\n    exports: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ],\n    declarations: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ]\n})\nexport class McListModule {}\n","// todo пока не делаем, перенесено из материала, но у нас в доках таких простых списков нет.\nimport {\n    AfterContentInit, ChangeDetectionStrategy, Component, ContentChildren, Directive, ElementRef, QueryList,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { McLine, McLineSetter } from '@ptsecurity/mosaic/core';\n\n\nexport class McListBase {}\n\n@Component({\n    selector: 'mc-list',\n    host: { class: 'mc-list' },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McList extends McListBase {}\n\n\n/**\n * Directive whose purpose is to add the mc- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n    selector: '[mc-subheader], [mcSubheader]',\n    host: { class: 'mc-subheader' }\n})\nexport class McListSubheaderCssStyler {}\n\n\n// Boilerplate for applying mixins to McListItem.\nexport class McListItemBase {}\n\n// An item within a Material Design list.\n@Component({\n    selector: 'mc-list-item, a[mc-list-item]',\n    host: {\n        class: 'mc-list-item',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()'\n    },\n    templateUrl: './list-item.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListItem extends McListItemBase implements AfterContentInit {\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    private _lineSetter: McLineSetter;\n\n    constructor(private _element: ElementRef) {\n        super();\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    _handleFocus() {\n        this._element.nativeElement.classList.add('mc-focused');\n    }\n\n    _handleBlur() {\n        this._element.nativeElement.classList.remove('mc-focused');\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy, ChangeDetectorRef,\n    Component, ContentChildren,\n    ElementRef, EventEmitter, forwardRef, Inject, Input,\n    OnDestroy, OnInit, Optional, Output, QueryList, ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { FocusKeyManager, IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { END, ENTER, HOME, SPACE } from '@ptsecurity/cdk/keycodes';\n\nimport { CanDisable, mixinDisabled, HasTabIndex,\n    mixinTabIndex, McLine, McLineSetter, toBoolean } from '@ptsecurity/mosaic/core';\n\n\nexport class McListOptionBase {}\n\nexport const MAT_SELECTION_LIST_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McListSelection),\n    multi: true\n};\n\n/**\n * Change event object emitted by McListOption whenever the selected state changes.\n * @deprecated Use the `McListSelectionChange` event on the selection list instead.\n * @deletion-target 6.0.0\n */\nexport class McListOptionChange {\n    constructor(\n        // Reference to the list option that changed.\n        public source: McListOption,\n        // The new selected state of the option.\n        public selected: boolean\n    ) {}\n}\n\n// Change event that is being fired whenever the selected state of an option changes. */\nexport class McListSelectionChange {\n    constructor(\n        // Reference to the selection list that emitted the event.\n        public source: McListSelection,\n        // Reference to the option that has been changed.\n        public option: McListOption\n    ) {}\n}\n\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\n@Component({\n    selector: 'mc-list-option',\n    host: {\n        role: 'option',\n        tabindex: '-1',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n        '(click)': '_handleClick()',\n\n        class: 'mc-list-option',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-selected]': '_selected',\n        '[class.mc-focused]': '_hasFocus',\n        '[attr.disabled]': 'disabled'\n    },\n    templateUrl: 'list-option.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListOption extends McListOptionBase\n    implements AfterContentInit, OnDestroy, OnInit, IFocusableOption {\n\n    // Whether the option has focus.\n    _hasFocus: boolean = false;\n\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    // DOM element containing the item's text.\n    @ViewChild('text') _text: ElementRef;\n\n    // Whether the label should appear before or after the checkbox. Defaults to 'after'\n    @Input() checkboxPosition: 'before' | 'after' = 'after';\n\n    // Value of the option\n    @Input() value: any;\n\n    // Whether the option is disabled.\n    @Input()\n    get disabled() {\n        return this._disabled || (this.selectionList && this.selectionList.disabled);\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    // Whether the option is selected.\n    @Input()\n    get selected(): boolean {\n        return this.selectionList.selectedOptions.isSelected(this);\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this._setSelected(isSelected);\n            this.selectionList._reportValueChange();\n        }\n    }\n\n    /**\n     * Emits a change event whenever the selected state of an option changes.\n     * @deprecated Use the `selectionChange` event on the `<mc-selection-list>` instead.\n     * @deletion-target 6.0.0\n     */\n    @Output() readonly selectionChange: EventEmitter<McListOptionChange> =\n        new EventEmitter<McListOptionChange>();\n\n    _selected: boolean = false;\n\n    private _lineSetter: McLineSetter;\n    private _disabled: boolean = false;\n\n    constructor(\n        private _element: ElementRef,\n        private _changeDetector: ChangeDetectorRef,\n        @Optional() @Inject(forwardRef(() => McListSelection))\n        public selectionList: McListSelection\n    ) {\n        super();\n    }\n\n    ngOnInit() {\n        if (this._selected) {\n            // List options that are selected at initialization can't be reported properly to the form\n            // control. This is because it takes some time until the selection-list knows about all\n            // available options. Also it can happen that the ControlValueAccessor has an initial value\n            // that should be used instead. Deferring the value change report to the next tick ensures\n            // that the form control value is not being overwritten.\n            Promise.resolve().then(() => this.selected = true);\n        }\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    ngOnDestroy(): void {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => this.selected = false);\n        }\n\n        this.selectionList._removeOptionFromList(this);\n    }\n\n    // Toggles the selection state of the option.\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    // Allows for programmatic focusing of the option.\n    focus(): void {\n        this._element.nativeElement.focus();\n    }\n\n    /**\n     * Returns the list item's text label. Implemented as a part of the FocusKeyManager.\n     * @docs-private\n     */\n    getLabel() {\n        return this._text ? this._text.nativeElement.textContent : '';\n    }\n\n    _handleClick() {\n        if (!this.disabled) {\n            this.toggle();\n\n            // Emit a change event if the selected state of the option changed through user interaction.\n            this.selectionList._emitChangeEvent(this);\n\n            // TODO: the `selectionChange` event on the option is deprecated. Remove that in the future.\n            this._emitDeprecatedChangeEvent();\n        }\n    }\n\n    _handleFocus() {\n        if (this.disabled) { return; }\n\n        this._hasFocus = true;\n        this.selectionList._setFocusedOption(this);\n    }\n\n    _handleBlur() {\n        this._hasFocus = false;\n        this.selectionList._onTouched();\n    }\n\n    // Retrieves the DOM element of the component host.\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n\n    // Sets the selected state of the option.\n    _setSelected(selected: boolean) {\n        if (selected === this._selected) {\n            return;\n        }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.selectionList.selectedOptions.select(this);\n        } else {\n            this.selectionList.selectedOptions.deselect(this);\n        }\n\n        this._changeDetector.markForCheck();\n    }\n\n    // Emits a selectionChange event for this option.\n    _emitDeprecatedChangeEvent() {\n        // TODO: the `selectionChange` event on the option is deprecated. Remove that in the future.\n        this.selectionChange.emit(new McListOptionChange(this, this.selected));\n    }\n}\n\n\nexport class McListSelectionBase {}\n\nexport const _McListSelectionMixinBase = mixinTabIndex(mixinDisabled(McListSelectionBase));\n\n@Component({\n    selector: 'mc-list-selection',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-list-selection',\n        '[tabIndex]': 'tabIndex',\n        '(focus)': 'focus()',\n        '(blur)': '_onTouched()',\n        '(keydown)': '_keydown($event)'\n    },\n    providers: [MAT_SELECTION_LIST_VALUE_ACCESSOR],\n    preserveWhitespaces: false\n})\nexport class McListSelection extends _McListSelectionMixinBase implements\n    IFocusableOption, CanDisable, HasTabIndex, AfterContentInit, ControlValueAccessor {\n\n    // The FocusKeyManager which handles focus.\n    _keyManager: FocusKeyManager<McListOption>;\n\n    // The option components contained within this selection-list.\n    @ContentChildren(McListOption) options: QueryList<McListOption>;\n\n    // Emits a change event whenever the selected state of an option changes.\n    @Output() readonly selectionChange: EventEmitter<McListSelectionChange> =\n        new EventEmitter<McListSelectionChange>();\n\n    // The currently selected options.\n    selectedOptions: SelectionModel<McListOption> = new SelectionModel<McListOption>(true);\n\n    // Used for storing the values that were assigned before the options were initialized.\n    private _tempValues: string[]|null;\n\n    constructor(private _element: ElementRef, @Attribute('tabindex') tabIndex: string) {\n        super();\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngAfterContentInit(): void {\n        this._keyManager = new FocusKeyManager<McListOption>(this.options).withWrap().withTypeAhead();\n\n        if (this._tempValues) {\n            this._setOptionsFromValues(this._tempValues);\n            this._tempValues = null;\n        }\n    }\n\n    // Focus the selection-list.\n    focus() {\n        this._element.nativeElement.focus();\n    }\n\n    // Selects all of the options.\n    selectAll() {\n        this.options.forEach((option) => option._setSelected(true));\n        this._reportValueChange();\n    }\n\n    // Deselects all of the options.\n    deselectAll() {\n        this.options.forEach((option) => option._setSelected(false));\n        this._reportValueChange();\n    }\n\n    // View to model callback that should be called if the list or its options lost focus.\n    _onTouched: () => void = () => {};\n\n    // Sets the focused option of the selection-list.\n    _setFocusedOption(option: McListOption) {\n        this._keyManager.updateActiveItemIndex(this._getOptionIndex(option));\n    }\n\n    // Removes an option from the selection list and updates the active item.\n    _removeOptionFromList(option: McListOption) {\n        if (option._hasFocus) {\n            const optionIndex = this._getOptionIndex(option);\n\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.setPreviousItemActive();\n            } else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.setNextItemActive();\n            }\n        }\n    }\n\n    // Passes relevant key presses to our key manager.\n    _keydown(event: KeyboardEvent) {\n        switch (event.keyCode) {\n            case SPACE:\n            case ENTER:\n                this._toggleSelectOnFocusedOption();\n                // Always prevent space from scrolling the page since the list has focus\n                event.preventDefault();\n                break;\n            case HOME:\n            case END:\n                event.keyCode === HOME ? this._keyManager.setFirstItemActive() : this._keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    // Reports a value change to the ControlValueAccessor\n    _reportValueChange() {\n        if (this.options) {\n            this._onChange(this._getSelectedOptionValues());\n        }\n    }\n\n    // Emits a change event if the selected state of an option changed.\n    _emitChangeEvent(option: McListOption) {\n        this.selectionChange.emit(new McListSelectionChange(this, option));\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(values: string[]): void {\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        } else {\n            this._tempValues = values;\n        }\n    }\n\n    // Implemented as a part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        if (this.options) {\n            this.options.forEach((option) => option.disabled = isDisabled);\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this._onTouched = fn;\n    }\n\n    // Returns the option with the specified value.\n    private _getOptionByValue(value: string): McListOption | undefined {\n        return this.options.find((option) => option.value === value);\n    }\n\n    // Sets the selected options based on the specified values.\n    private _setOptionsFromValues(values: string[]) {\n        this.options.forEach((option) => option._setSelected(false));\n\n        values\n            .map((value) => this._getOptionByValue(value))\n            .filter(Boolean)\n            .forEach((option) => option!._setSelected(true));\n    }\n\n    // Returns the values of the selected options.\n    private _getSelectedOptionValues(): string[] {\n        return this.options.filter((option) => option.selected).map((option) => option.value);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    private _toggleSelectOnFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McListOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user\n                // interaction.\n                this._emitChangeEvent(focusedOption);\n\n                // TODO: the `selectionChange` event on the option is deprecated. Remove that in the future.\n                focusedOption._emitDeprecatedChangeEvent();\n            }\n        }\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    // Returns the index of the specified list option.\n    private _getOptionIndex(option: McListOption): number {\n        return this.options.toArray().indexOf(option);\n    }\n\n    // View to model callback that should be called whenever the selected options change.\n    private _onChange: (value: any) => void = (_: any) => {};\n\n}\n"],"names":["tslib_1.__extends"],"mappings":"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"}