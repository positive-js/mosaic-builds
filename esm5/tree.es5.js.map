{"version":3,"file":"tree.es5.js","sources":["../../../packages/mosaic/tree/data-source/nested-data-source.ts","../../../packages/mosaic/tree/data-source/flat-data-source.ts","../../../packages/mosaic/tree/tree.module.ts","../../../packages/mosaic/tree/tree-selection.ts","../../../packages/mosaic/tree/tree-option.ts","../../../packages/mosaic/tree/toggle.ts","../../../packages/mosaic/tree/padding.ts","../../../packages/mosaic/tree/node.ts"],"sourcesContent":["import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by ITreeControl and each non-leaf node.\n */\nexport class McTreeNestedDataSource<T> extends DataSource<T> {\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n    }\n\n    /* tslint:disable-next-line:naming-convention */\n    private _data = new BehaviorSubject<T[]>([]);\n\n    connect(collectionViewer: ICollectionViewer): Observable<T[]> {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map(() => this.data));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { FlatTreeControl, ITreeControl } from '@ptsecurity/cdk/tree';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nexport class McTreeFlattener<T, F> {\n    constructor(\n        public transformFunction: (node: T, level: number) => F,\n        public getLevel: (node: F) => number,\n        public isExpandable: (node: F) => boolean,\n        public getChildren: (node: T) => Observable<T[]>\n    ) {}\n\n    flattenNode(node: T, level: number, resultNodes: F[], parentMap: boolean[]): F[] {\n        const flatNode = this.transformFunction(node, level);\n        resultNodes.push(flatNode);\n\n        if (this.isExpandable(flatNode)) {\n            this.getChildren(node)\n                .pipe(take(1))\n                .subscribe((children) => {\n                    children.forEach((child, index) => {\n                        const childParentMap: boolean[] = parentMap.slice();\n                        childParentMap.push(index !== children.length - 1);\n\n                        this.flattenNode(child, level + 1, resultNodes, childParentMap);\n                    });\n                });\n        }\n\n        return resultNodes;\n    }\n\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData: T[]): F[] {\n        const resultNodes: F[] = [];\n        structuredData.forEach((node) => this.flattenNode(node, 0, resultNodes, []));\n\n        return resultNodes;\n    }\n\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes: F[], treeControl: ITreeControl<F>): F[] {\n        const results: F[] = [];\n        const currentExpand: boolean[] = [];\n        currentExpand[0] = true;\n\n        nodes.forEach((node) => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n\n            if (expand) { results.push(node); }\n\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n\n        return results;\n    }\n}\n\n\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `McTree`.\n * The nested tree nodes of type `T` are flattened through `MсTreeFlattener`, and converted\n * to type `F` for `McTree` to consume.\n */\nexport class McTreeFlatDataSource<T, F> extends DataSource<F> {\n    flattenedData = new BehaviorSubject<F[]>([]);\n\n    expandedData = new BehaviorSubject<F[]>([]);\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n\n        this.flattenedData.next(this.treeFlattener.flattenNodes(this.data));\n        this.treeControl.dataNodes = this.flattenedData.value;\n    }\n\n    private _data: BehaviorSubject<T[]>;\n\n    constructor(\n        private treeControl: FlatTreeControl<F>,\n        private treeFlattener: McTreeFlattener<T, F>,\n        initialData: T[] = []\n    ) {\n        super();\n\n        this._data = new BehaviorSubject<T[]>(initialData);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<F[]> {\n        const changes = [\n            collectionViewer.viewChange,\n            this.treeControl.expansionModel.changed,\n            this.flattenedData\n        ];\n\n        return merge(...changes)\n            .pipe(map(() => {\n                this.expandedData.next(\n                    this.treeFlattener.expandFlattenedNodes(this.flattenedData.value, this.treeControl)\n                );\n\n                return this.expandedData.value;\n            }));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\nimport { McPseudoCheckboxModule } from '@ptsecurity/mosaic/core';\n\nimport { McTreeNodeDef } from './node';\nimport { McTreeNodePadding } from './padding';\nimport { McTreeNodeToggle } from './toggle';\nimport { McTreeOption } from './tree-option';\nimport { McTreeSelection } from './tree-selection';\n\n\nconst MC_TREE_DIRECTIVES = [\n    McTreeSelection,\n    McTreeOption,\n    McTreeNodeDef,\n    McTreeNodePadding,\n    McTreeNodeToggle\n];\n\n@NgModule({\n    imports: [CommonModule, CdkTreeModule, McPseudoCheckboxModule],\n    exports: MC_TREE_DIRECTIVES,\n    declarations: MC_TREE_DIRECTIVES\n})\nexport class McTreeModule {}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    EventEmitter,\n    Input,\n    IterableDiffer,\n    IterableDiffers,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    ElementRef\n} from '@angular/core';\nimport { NodeDef, ViewData } from '@angular/core/src/view';\nimport { ActiveDescendantKeyManager } from '@ptsecurity/cdk/a11y';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { CdkTree, CdkTreeNodeOutlet } from '@ptsecurity/cdk/tree';\nimport {\n    CanDisable,\n    CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\nimport { Subject } from 'rxjs';\n\nimport { MC_TREE_OPTION_PARENT_COMPONENT, McTreeOption } from './tree-option';\n\n\nexport class McTreeNavigationChange {\n    constructor(\n        public source: McTreeSelection,\n        public option: McTreeOption\n    ) {}\n}\n\nexport class McTreeSelectionChange {\n    constructor(public source: McTreeSelection, public option: McTreeOption) {}\n}\n\nclass McTreeSelectionBase<T> extends CdkTree<T> {\n    constructor(differs: IterableDiffers, changeDetectorRef: ChangeDetectorRef) {\n        super(differs, changeDetectorRef);\n    }\n}\n\n/* tslint:disable-next-line:naming-convention */\nconst McTreeSelectionBaseMixin: HasTabIndexCtor & CanDisableCtor &\n    typeof McTreeSelectionBase = mixinTabIndex(mixinDisabled(McTreeSelectionBase));\n\n\n@Component({\n    selector: 'mc-tree-selection',\n    exportAs: 'mcTreeSelection',\n    template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n    host: {\n        class: 'mc-tree-selection',\n\n        '[attr.tabindex]': 'tabIndex',\n\n        '(keydown)': 'onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    styleUrls: ['./tree.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        { provide: MC_TREE_OPTION_PARENT_COMPONENT, useExisting: McTreeSelection },\n        { provide: CdkTree, useExisting: McTreeSelection }\n    ]\n})\nexport class McTreeSelection extends McTreeSelectionBaseMixin<McTreeOption>\n    implements AfterContentInit, CanDisable, HasTabIndex {\n\n    @ViewChild(CdkTreeNodeOutlet) nodeOutlet: CdkTreeNodeOutlet;\n\n    @ContentChildren(McTreeOption) options: QueryList<McTreeOption>;\n\n    keyManager: ActiveDescendantKeyManager<McTreeOption>;\n\n    selectionModel: SelectionModel<McTreeOption>;\n\n    tabIndex: number;\n    multiple: boolean;\n    autoSelect: boolean;\n    noUnselect: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n\n    @Output() readonly navigationChange = new EventEmitter<McTreeNavigationChange>();\n\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectionChange>();\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(rawValue: boolean) {\n        const value = toBoolean(rawValue);\n\n        if (this._disabled !== value) {\n            this._disabled = value;\n\n            if (this._disabled) {\n                /* tslint:disable-next-line:no-console */\n                console.log('need disable all options');\n            } else {\n                /* tslint:disable-next-line:no-console */\n                console.log('need enable all options');\n            }\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    private readonly destroy = new Subject<void>();\n\n    constructor(\n        private elementRef: ElementRef,\n        differs: IterableDiffers,\n        changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('multiple') multiple: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string\n    ) {\n        super(differs, changeDetectorRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.multiple = multiple === null ? false : toBoolean(multiple);\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.selectionModel = new SelectionModel<McTreeOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.keyManager = new ActiveDescendantKeyManager<McTreeOption>(this.options)\n            .withVerticalOrientation(true)\n            .withHorizontalOrientation(null);\n    }\n\n    ngOnDestroy() {\n        this.destroy.next();\n\n        this.destroy.complete();\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        // tslint:disable-next-line: deprecation\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case LEFT_ARROW:\n                if (this.keyManager.activeItem) {\n                    this.treeControl.collapse(this.keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case RIGHT_ARROW:\n                if (this.keyManager.activeItem) {\n                    this.treeControl.expand(this.keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this.keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this.keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                this.keyManager.setPreviousPageItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                this.keyManager.setNextPageItemActive();\n                event.preventDefault();\n\n                break;\n            default:\n                this.keyManager.onKeydown(event);\n        }\n    }\n\n    updateScrollSize(): void {\n        if (!this.options.first) { return; }\n\n        this.keyManager.withScrollSize(Math.floor(this.getHeight() / this.options.first.getHeight()));\n    }\n\n    setFocusedOption(option: McTreeOption) {\n        this.keyManager.setActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this.keyManager.previousActiveItemIndex;\n            const activeIndex = this.keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this.canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this.emitNavigationEvent(option);\n    }\n\n    toggleFocusedOption(): void {\n        const focusedIndex = this.keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this.isValidIndex(focusedIndex)) {\n            const focusedOption: McTreeOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this.canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this.emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    renderNodeChanges(\n        data: McTreeOption[],\n        dataDiffer: IterableDiffer<McTreeOption> = this.dataDiffer,\n        viewContainer: any = this.nodeOutlet.viewContainer,\n        parentData?: McTreeOption\n    ): void {\n        super.renderNodeChanges(data, dataDiffer, viewContainer, parentData);\n\n        const arrayOfInstances = [];\n\n        viewContainer._embeddedViews.forEach((view: ViewData) => {\n            const viewDef = view.def;\n\n            viewDef.nodes.forEach((node: NodeDef) => {\n                if (viewDef.nodeMatchedQueries === node.matchedQueryIds) {\n                    const nodeData: any = view.nodes[node.nodeIndex];\n\n                    arrayOfInstances.push(nodeData.instance as never);\n                }\n            });\n        });\n\n        if (this.options) {\n            this.options.reset(arrayOfInstances);\n            this.options.notifyOnChanges();\n        }\n\n        this.updateScrollSize();\n    }\n\n    getHeight(): number {\n        const clientRects = this.elementRef.nativeElement.getClientRects();\n\n        if (clientRects.length) {\n            return clientRects[0].height;\n        }\n\n        return 0;\n    }\n\n    emitNavigationEvent(option: McTreeOption): void {\n        this.navigationChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    emitChangeEvent(option: McTreeOption): void {\n        this.selectionChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    private isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    private canDeselectLast(option: McTreeOption): boolean {\n        return !(this.noUnselect && this.selectionModel.selected.length === 1 && option.selected);\n    }\n}\n\n","import {\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ElementRef,\n    Inject,\n    Optional,\n    InjectionToken\n} from '@angular/core';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { CdkTreeNode } from '@ptsecurity/cdk/tree';\nimport { CanDisable, toBoolean } from '@ptsecurity/mosaic/core';\n\n\n/* tslint:disable-next-line:naming-convention */\nexport interface McTreeOptionParentComponent {\n    multiple: boolean;\n    selectionModel: SelectionModel<McTreeOption>;\n    setFocusedOption: any;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_TREE_OPTION_PARENT_COMPONENT =\n    new InjectionToken<McTreeOptionParentComponent>('MC_TREE_OPTION_PARENT_COMPONENT');\n\nexport class McTreeOptionChange {\n    constructor(public source: McTreeOption, public isUserInput = false) {}\n}\n\nlet uniqueIdCounter: number = 0;\n\n@Component({\n    selector: 'mc-tree-option',\n    exportAs: 'mcTreeOption',\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'getTabIndex()',\n\n        '[attr.disabled]': 'disabled || null',\n\n        class: 'mc-tree-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-active]': 'active',\n\n        '(click)': 'selectViaInteraction()'\n    },\n    templateUrl: './tree-option.html',\n    providers: [{ provide: CdkTreeNode, useExisting: McTreeOption }]\n})\nexport class McTreeOption extends CdkTreeNode<McTreeOption> implements CanDisable {\n    @Output() readonly onSelectionChange = new EventEmitter<McTreeOptionChange>();\n\n    @Input() value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    // @Input()\n    // get selected(): boolean {\n    //     return this.treeSelection.selectionModel && this.treeSelection.selectionModel.isSelected(this) || false;\n    // }\n\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            // this.treeSelection._reportValueChange();\n        }\n    }\n\n    private _selected: boolean = false;\n\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active(): boolean {\n        return this._active;\n    }\n\n    private _active = false;\n\n    get id(): string {\n        return this._id;\n    }\n\n    private _id = `mc-tree-option-${uniqueIdCounter++}`;\n\n    get multiple(): boolean {\n        return this.parent.multiple;\n    }\n\n    constructor(\n        protected elementRef: ElementRef,\n        protected changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_TREE_OPTION_PARENT_COMPONENT) private readonly parent: McTreeOptionParentComponent\n    ) {\n        // todo any\n        super(elementRef, parent as any);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.parent.selectionModel) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.parent.selectionModel.select(this);\n        } else {\n            this.parent.selectionModel.deselect(this);\n        }\n\n        // this._changeDetector.markForCheck();\n    }\n\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles(): void {\n        if (!this._active) {\n            this._active = true;\n\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles(): void {\n        if (this._active) {\n            this._active = false;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    getHeight(): number {\n        const clientRects = this.elementRef.nativeElement.getClientRects();\n\n        if (clientRects.length) {\n            return clientRects[0].height;\n        }\n\n        return 0;\n    }\n\n    focus(): void {\n        const element = this.getHostElement();\n\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n\n    // todo старая реализация, нужно восстановить tree-selection\n    // handleClick(): void {\n    //     if (this.disabled) { return; }\n    //\n    //     this.treeSelection.setFocusedOption(this);\n    // }\n\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue(): string {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this.getHostElement().textContent || '').trim();\n    }\n\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    selectViaInteraction(): void {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent(true);\n\n            if (this.parent.setFocusedOption) {\n                this.parent.setFocusedOption(this);\n            }\n        }\n    }\n\n    emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McTreeOptionChange(this, isUserInput));\n    }\n\n    getHostElement(): HTMLElement {\n        return this.elementRef.nativeElement;\n    }\n\n    getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n}\n","import { Directive } from '@angular/core';\nimport { CdkTreeNodeToggle } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeToggle]',\n    host: {\n        '(click)': 'toggle($event)'\n    },\n    providers: [{ provide: CdkTreeNodeToggle, useExisting: McTreeNodeToggle }]\n})\nexport class McTreeNodeToggle<T> extends CdkTreeNodeToggle<T> {}\n","import { Directive, Input, OnInit } from '@angular/core';\nimport { CdkTreeNodePadding } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodePadding]',\n    providers: [{ provide: CdkTreeNodePadding, useExisting: McTreeNodePadding }]\n})\nexport class McTreeNodePadding<T> extends CdkTreeNodePadding<T> implements OnInit {\n    @Input('mcTreeNodePadding') level: number;\n\n    @Input('mcTreeNodePaddingIndent') indent: number;\n\n    baseLeftPadding: number = 12;\n    /* tslint:disable-next-line:naming-convention */\n    _indent: number = 20;\n\n    withIcon: boolean;\n    iconWidth: number = 20;\n\n    get leftPadding(): number {\n        return (this.withIcon ? 0 : this.iconWidth) + this.baseLeftPadding;\n    }\n\n    paddingIndent(): string | null {\n        const nodeLevel = (this.treeNode.data && this.tree.treeControl.getLevel)\n            ? this.tree.treeControl.getLevel(this.treeNode.data)\n            : null;\n\n        const level = this.level || nodeLevel;\n\n        return level ? `${(level * this._indent) + this.leftPadding}px` : `${this.baseLeftPadding}px`;\n    }\n\n    ngOnInit(): void {\n        this.withIcon = this.tree.treeControl.isExpandable(this.treeNode.data);\n\n        this.setPadding();\n    }\n}\n","import { Directive, Input } from '@angular/core';\n\nimport { CdkTreeNodeDef } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeDef]',\n    inputs: ['when: mcTreeNodeDefWhen'],\n    providers: [{ provide: CdkTreeNodeDef, useExisting: McTreeNodeDef }]\n})\nexport class McTreeNodeDef<T> extends CdkTreeNodeDef<T> {\n    @Input('mcTreeNode') data: T;\n}\n"],"names":["tslib_1.__extends"],"mappings":"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"}