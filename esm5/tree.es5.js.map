{"version":3,"file":"tree.es5.js","sources":["../../../packages/mosaic/tree/data-source/nested-data-source.ts","../../../packages/mosaic/tree/data-source/flat-data-source.ts","../../../packages/mosaic/tree/tree.module.ts","../../../packages/mosaic/tree/tree-selection.component.ts","../../../packages/mosaic/tree/tree-option.component.ts","../../../packages/mosaic/tree/toggle.ts","../../../packages/mosaic/tree/padding.directive.ts","../../../packages/mosaic/tree/node.directive.ts"],"sourcesContent":["import { CollectionViewer, DataSource } from '@angular/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by TreeControl and each non-leaf node.\n */\nexport class McTreeNestedDataSource<T> extends DataSource<T> {\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n    }\n\n    /* tslint:disable-next-line:naming-convention */\n    private _data = new BehaviorSubject<T[]>([]);\n\n    connect(collectionViewer: CollectionViewer): Observable<T[]> {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map(() => this.data));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { CollectionViewer, DataSource } from '@angular/cdk/collections';\nimport { FlatTreeControl, TreeControl } from '@ptsecurity/cdk/tree';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nexport class McTreeFlattener<T, F> {\n    constructor(\n        public transformFunction: (node: T, level: number, parent: F | null) => F,\n        public getLevel: (node: F) => number,\n        public isExpandable: (node: F) => boolean,\n        public getChildren: (node: T) => Observable<T[]> | T[] | undefined | null\n    ) {}\n\n    flattenNode(node: T, level: number, resultNodes: F[], parent: F | null): F[] {\n        const flatNode = this.transformFunction(node, level, parent);\n        resultNodes.push(flatNode);\n\n        if (this.isExpandable(flatNode)) {\n            const childrenNodes = this.getChildren(node);\n\n            if (childrenNodes) {\n                if (Array.isArray(childrenNodes)) {\n                    this.flattenChildren(childrenNodes, level, resultNodes, flatNode);\n                } else {\n                    childrenNodes\n                        .pipe(take(1))\n                        .subscribe((children) => {\n                            this.flattenChildren(children, level, resultNodes, flatNode);\n                        });\n                }\n            }\n        }\n\n        return resultNodes;\n    }\n\n    flattenChildren(children: T[], level: number, resultNodes: F[], parent: F | null): void {\n        children.forEach((child) => {\n            this.flattenNode(child, level + 1, resultNodes, parent);\n        });\n    }\n\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData: T[]): F[] {\n        const resultNodes: F[] = [];\n        structuredData.forEach((node) => this.flattenNode(node, 0, resultNodes, null));\n\n        return resultNodes;\n    }\n\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes: F[], treeControl: TreeControl<F>): F[] {\n        const results: F[] = [];\n        const currentExpand: boolean[] = [];\n        currentExpand[0] = true;\n\n        nodes.forEach((node) => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n\n            if (expand) { results.push(node); }\n\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n\n        return results;\n    }\n}\n\nenum McTreeDataSourceChangeTypes {\n    Expansion = 'expansion',\n    Filter = 'filter'\n}\n\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `McTree`.\n * The nested tree nodes of type `T` are flattened through `MсTreeFlattener`, and converted\n * to type `F` for `McTree` to consume.\n */\nexport class McTreeFlatDataSource<T, F> extends DataSource<F> {\n    flattenedData = new BehaviorSubject<F[]>([]);\n\n    expandedData = new BehaviorSubject<F[]>([]);\n\n    filteredData = new BehaviorSubject<F[]>([]);\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n\n        this.flattenedData.next(this.treeFlattener.flattenNodes(this.data));\n        this.treeControl.dataNodes = this.flattenedData.value;\n    }\n\n    private _data: BehaviorSubject<T[]>;\n\n    constructor(\n        private treeControl: FlatTreeControl<F>,\n        private treeFlattener: McTreeFlattener<T, F>,\n        initialData: T[] = []\n    ) {\n        super();\n\n        this._data = new BehaviorSubject<T[]>(initialData);\n    }\n\n    connect(collectionViewer: CollectionViewer): Observable<F[]> {\n        return merge(\n            collectionViewer.viewChange,\n            this.treeControl.expansionModel.changed\n                .pipe(map((value) => ({ type: McTreeDataSourceChangeTypes.Expansion, value }))),\n            this.treeControl.filterValue\n                .pipe(map((value) => ({ type: McTreeDataSourceChangeTypes.Filter, value }))),\n            this.flattenedData\n        )\n        .pipe(map((changeObj: any): any => {\n            if (changeObj.type === McTreeDataSourceChangeTypes.Filter) {\n                if (changeObj.value && changeObj.value.length > 0) {\n                    return this.filterHandler();\n                } else {\n                    return this.expansionHandler();\n                }\n            }\n\n            return this.expansionHandler();\n        }));\n    }\n\n    filterHandler(): F[] {\n        this.filteredData.next(this.treeControl.filterModel.selected);\n\n        return this.filteredData.value;\n    }\n\n    expansionHandler(): F[] {\n        const expandedNodes = this.treeFlattener.expandFlattenedNodes(this.flattenedData.value, this.treeControl);\n        this.expandedData.next(expandedNodes);\n\n        return this.expandedData.value;\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\nimport { McPseudoCheckboxModule } from '@ptsecurity/mosaic/core';\n\nimport { McTreeNodeDef } from './node.directive';\nimport { McTreeNodePadding } from './padding.directive';\nimport { McTreeNodeToggleDirective, McTreeNodeToggleComponent } from './toggle';\nimport { McTreeOption } from './tree-option.component';\nimport { McTreeSelection } from './tree-selection.component';\n\n\nconst MC_TREE_DIRECTIVES = [\n    McTreeSelection,\n    McTreeOption,\n    McTreeNodeDef,\n    McTreeNodePadding,\n    McTreeNodeToggleComponent,\n    McTreeNodeToggleDirective\n];\n\n@NgModule({\n    imports: [CommonModule, CdkTreeModule, McPseudoCheckboxModule],\n    exports: MC_TREE_DIRECTIVES,\n    declarations: MC_TREE_DIRECTIVES\n})\nexport class McTreeModule {}\n","/* tslint:disable:no-empty */\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    IterableDiffer,\n    IterableDiffers,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { NodeDef, ViewData } from '@angular/core/esm2015/src/view';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\nimport {\n    hasModifierKey,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    SPACE\n} from '@ptsecurity/cdk/keycodes';\nimport { CdkTree, CdkTreeNodeOutlet, FlatTreeControl } from '@ptsecurity/cdk/tree';\nimport { CanDisable, getMcSelectNonArrayValueError, HasTabIndex, MultipleMode } from '@ptsecurity/mosaic/core';\nimport { merge, Observable, Subject, Subscription } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { MC_TREE_OPTION_PARENT_COMPONENT, McTreeOption, McTreeOptionEvent } from './tree-option.component';\n\n\nexport const MC_SELECTION_TREE_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McTreeSelection),\n    multi: true\n};\n\nexport class McTreeNavigationChange<T> {\n    constructor(public source: McTreeSelection<any>, public option: T) {}\n}\n\nexport class McTreeSelectionChange<T> {\n    constructor(public source: McTreeSelection<any>, public option: T) {}\n}\n\n// tslint:disable-next-line:naming-convention\ninterface SelectionModelOption {\n    id: number | string;\n    value: string;\n}\n\n\n@Component({\n    selector: 'mc-tree-selection',\n    exportAs: 'mcTreeSelection',\n    template: '<ng-container cdkTreeNodeOutlet></ng-container>',\n    host: {\n        class: 'mc-tree-selection',\n\n        '[attr.tabindex]': 'tabIndex',\n\n        '(focus)': 'focus()',\n        '(blur)': 'blur()',\n\n        '(keydown)': 'onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    styleUrls: ['./tree.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        MC_SELECTION_TREE_VALUE_ACCESSOR,\n        { provide: MC_TREE_OPTION_PARENT_COMPONENT, useExisting: McTreeSelection },\n        { provide: CdkTree, useExisting: McTreeSelection }\n    ]\n})\nexport class McTreeSelection<T extends McTreeOption> extends CdkTree<T>\n    implements ControlValueAccessor, AfterContentInit, CanDisable, HasTabIndex {\n\n    @ViewChild(CdkTreeNodeOutlet, { static: true }) nodeOutlet: CdkTreeNodeOutlet;\n\n    @ContentChildren(McTreeOption) renderedOptions: QueryList<T>;\n\n    keyManager: FocusKeyManager<T>;\n\n    selectionModel: SelectionModel<SelectionModelOption>;\n\n    resetFocusedItemOnBlur: boolean = true;\n\n    @Input() treeControl: FlatTreeControl<T>;\n\n    @Output() readonly navigationChange = new EventEmitter<McTreeNavigationChange<T>>();\n\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectionChange<T>>();\n\n    multipleMode: MultipleMode | null;\n\n    userTabIndex: number | null = null;\n\n    get optionFocusChanges(): Observable<McTreeOptionEvent> {\n        return merge(...this.renderedOptions.map((option) => option.onFocus));\n    }\n\n    get optionBlurChanges(): Observable<McTreeOptionEvent> {\n        return merge(...this.renderedOptions.map((option) => option.onBlur));\n    }\n\n    get multiple(): boolean {\n        return !!this.multipleMode;\n    }\n\n    @Input()\n    get autoSelect(): boolean {\n        return this._autoSelect;\n    }\n\n    set autoSelect(value: boolean) {\n        this._autoSelect = coerceBooleanProperty(value);\n    }\n\n    private _autoSelect: boolean = true;\n\n    @Input()\n    get noUnselectLast(): boolean {\n        return this._noUnselectLast;\n    }\n\n    set noUnselectLast(value: boolean) {\n        this._noUnselectLast = coerceBooleanProperty(value);\n    }\n\n    private _noUnselectLast: boolean = true;\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(rawValue: boolean) {\n        const value = coerceBooleanProperty(rawValue);\n\n        if (this._disabled !== value) {\n            this._disabled = value;\n\n            this.markOptionsForCheck();\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    @Input()\n    get tabIndex(): any {\n        return this._tabIndex;\n    }\n\n    set tabIndex(value: any) {\n        this._tabIndex = value;\n        this.userTabIndex = value;\n    }\n\n    private _tabIndex = 0;\n\n    get showCheckbox(): boolean {\n        return this.multipleMode === MultipleMode.CHECKBOX;\n    }\n\n    private readonly destroy = new Subject<void>();\n\n    private optionFocusSubscription: Subscription | null;\n\n    private optionBlurSubscription: Subscription | null;\n\n    constructor(\n        private elementRef: ElementRef,\n        differs: IterableDiffers,\n        changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('multiple') multiple: string\n    ) {\n        super(differs, changeDetectorRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        if (multiple === MultipleMode.CHECKBOX || multiple === MultipleMode.KEYBOARD) {\n            this.multipleMode = multiple;\n        } else if (multiple !== null) {\n            this.multipleMode = MultipleMode.CHECKBOX;\n        }\n\n        if (this.multipleMode === MultipleMode.CHECKBOX) {\n            this.autoSelect = false;\n            this.noUnselectLast = false;\n        }\n\n        this.selectionModel = new SelectionModel<SelectionModelOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.keyManager = new FocusKeyManager<T>(this.renderedOptions)\n            .withVerticalOrientation(true)\n            .withHorizontalOrientation(null);\n\n        this.keyManager.change\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => {\n                if (this.keyManager.activeItem) {\n                    this.emitNavigationEvent(this.keyManager.activeItem);\n\n                    if (this.autoSelect && !this.keyManager.activeItem.disabled) {\n                        this.updateOptionsFocus();\n\n                        this.setSelectedOption(this.keyManager.activeItem);\n                    }\n                }\n            });\n\n        this.keyManager.tabOut\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => this.allowFocusEscape());\n\n        this.selectionModel.changed\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => {\n                this.onChange(this.getSelectedValues());\n\n                this.renderedOptions.notifyOnChanges();\n            });\n\n        this.renderedOptions.changes\n            .pipe(takeUntil(this.destroy))\n            .subscribe((options) => {\n                this.resetOptions();\n\n                // Check to see if we need to update our tab index\n                this.updateTabIndex();\n\n                // todo need to do optimisation\n                options.forEach((option) => {\n                    option.deselect();\n\n                    this.getSelectedValues().forEach((selectedValue) => {\n                        if (option.value === selectedValue) {\n                            option.select();\n                        }\n                    });\n                });\n            });\n    }\n\n    ngOnDestroy(): void {\n        this.destroy.next();\n        this.destroy.complete();\n    }\n\n    focus(): void {\n        if (this.renderedOptions.length === 0) { return; }\n\n        this.keyManager.setFirstItemActive();\n    }\n\n    blur() {\n        if (!this.hasFocusedOption() && this.resetFocusedItemOnBlur) {\n            this.keyManager.setActiveItem(-1);\n        }\n\n        this.onTouched();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n        // tslint:disable-next-line: deprecation\n        const keyCode = event.keyCode;\n\n        switch (keyCode) {\n            case LEFT_ARROW:\n                if (this.keyManager.activeItem) {\n                    this.treeControl.collapse(this.keyManager.activeItem.data as T);\n                }\n\n                event.preventDefault();\n\n                return;\n            case RIGHT_ARROW:\n                if (this.keyManager.activeItem) {\n                    this.treeControl.expand(this.keyManager.activeItem.data as T);\n                }\n\n                event.preventDefault();\n\n                return;\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this.keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this.keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                this.keyManager.setPreviousPageItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                this.keyManager.setNextPageItemActive();\n                event.preventDefault();\n\n                break;\n            default:\n                this.keyManager.onKeydown(event);\n        }\n    }\n\n    updateScrollSize(): void {\n        if (!this.renderedOptions.first) { return; }\n\n        this.keyManager.withScrollSize(Math.floor(this.getHeight() / this.renderedOptions.first.getHeight()));\n    }\n\n    setSelectedOption(option: T, $event?: KeyboardEvent): void {\n        const withShift = $event ? hasModifierKey($event, 'shiftKey') : false;\n        const withCtrl = $event ? hasModifierKey($event, 'ctrlKey') : false;\n\n        if (this.multiple) {\n            if (withShift) {\n                const previousIndex = this.keyManager.previousActiveItemIndex;\n                const activeIndex = this.keyManager.activeItemIndex;\n                const activeOption = this.renderedOptions.toArray()[activeIndex];\n\n                const targetSelected = !activeOption.selected;\n\n                if (previousIndex < activeIndex) {\n                    this.renderedOptions.forEach((item, index) => {\n                        if (index >= previousIndex && index <= activeIndex) { item.setSelected(targetSelected); }\n                    });\n                } else {\n                    this.renderedOptions.forEach((item, index) => {\n                        if (index >= activeIndex && index <= previousIndex) { item.setSelected(targetSelected); }\n                    });\n                }\n            } else if (withCtrl) {\n                if (!this.canDeselectLast(option)) { return; }\n\n                this.selectionModel.toggle(option.data);\n            } else {\n                if (this.multipleMode === MultipleMode.KEYBOARD) {\n                    this.selectionModel.clear();\n                }\n\n                this.selectionModel.toggle(option.data);\n            }\n        } else {\n            if (!this.canDeselectLast(option)) { return; }\n\n            if (this.autoSelect) {\n                this.selectionModel.toggle(option.data);\n            }\n        }\n\n        this.emitChangeEvent(option);\n    }\n\n    setFocusedOption(option: T): void {\n        this.keyManager.setActiveItem(option);\n    }\n\n    toggleFocusedOption(): void {\n        const focusedOption = this.keyManager.activeItem;\n\n        if (focusedOption && (!focusedOption.selected || this.canDeselectLast(focusedOption))) {\n            focusedOption.toggle();\n            this.emitChangeEvent(focusedOption);\n        }\n    }\n\n    renderNodeChanges(\n        data: T[],\n        dataDiffer: IterableDiffer<T> = this.dataDiffer,\n        viewContainer: any = this.nodeOutlet.viewContainer,\n        parentData?: T\n    ): void {\n        super.renderNodeChanges(data, dataDiffer, viewContainer, parentData);\n\n        const arrayOfInstances = [];\n        const changeDetectorRefs: any[] = [];\n\n        viewContainer._embeddedViews.forEach((view: ViewData) => {\n            const viewDef = view.def;\n\n            viewDef.nodes.forEach((node: NodeDef) => {\n                if (viewDef.nodeMatchedQueries === node.matchedQueryIds) {\n                    const nodeData: any = view.nodes[node.nodeIndex];\n\n                    arrayOfInstances.push(nodeData.instance as never);\n                    changeDetectorRefs.push(nodeData.instance.changeDetectorRef);\n                }\n            });\n        });\n\n        setTimeout(() => {\n            changeDetectorRefs.forEach((changeDetectorRef) => {\n                if (!changeDetectorRef.destroyed) {\n                    changeDetectorRef.detectChanges();\n                }\n            });\n        });\n\n        if (this.renderedOptions) {\n            this.renderedOptions.reset(arrayOfInstances);\n            this.renderedOptions.notifyOnChanges();\n        }\n\n        this.updateScrollSize();\n\n        this.nodeOutlet.changeDetectorRef.detectChanges();\n    }\n\n    getHeight(): number {\n        const clientRects = this.elementRef.nativeElement.getClientRects();\n\n        if (clientRects.length) {\n            return clientRects[0].height;\n        }\n\n        return 0;\n    }\n\n    getItemHeight(): number {\n        return this.renderedOptions.first ? this.renderedOptions.first.getHeight() : 0;\n    }\n\n    emitNavigationEvent(option: T): void {\n        this.navigationChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    emitChangeEvent(option: T): void {\n        this.selectionChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    writeValue(value: any): void {\n        if (this.multiple && value && !Array.isArray(value)) {\n            throw getMcSelectNonArrayValueError();\n        }\n\n        if (this.renderedOptions) {\n            this.setOptionsFromValues(this.multiple ? value : [value]);\n        }\n    }\n\n    /** `View -> model callback called when value changes` */\n    onChange: (value: any) => void = () => {};\n\n    registerOnChange(fn: (value: any) => void): void {\n        this.onChange = fn;\n    }\n\n    /** `View -> model callback called when select has been touched` */\n    onTouched = () => {};\n\n    registerOnTouched(fn: () => {}): void {\n        this.onTouched = fn;\n    }\n\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     */\n    setDisabledState(isDisabled: boolean): void {\n        this._disabled = isDisabled;\n        this.changeDetectorRef.markForCheck();\n    }\n\n    setOptionsFromValues(values: any[]): void {\n        this.selectionModel.clear();\n\n        const valuesToSelect = values.reduce((result, value) => {\n            return this.treeControl.hasValue(value) ? [...result, this.treeControl.hasValue(value)] : [...result];\n        }, []);\n\n        this.selectionModel.select(...valuesToSelect);\n    }\n\n    getSelectedValues(): any[] {\n        return this.selectionModel.selected.map((selected) => this.treeControl.getValue(selected));\n    }\n\n    protected updateTabIndex(): void {\n        this._tabIndex = this.renderedOptions.length === 0 ? -1 : 0;\n    }\n\n    private allowFocusEscape() {\n        if (this._tabIndex !== -1) {\n            this._tabIndex = -1;\n\n            setTimeout(() => {\n                this._tabIndex = this.userTabIndex || 0;\n                this.changeDetectorRef.markForCheck();\n            });\n        }\n    }\n\n    private resetOptions() {\n        this.dropSubscriptions();\n        this.listenToOptionsFocus();\n    }\n\n    private dropSubscriptions() {\n        if (this.optionFocusSubscription) {\n            this.optionFocusSubscription.unsubscribe();\n            this.optionFocusSubscription = null;\n        }\n\n        if (this.optionBlurSubscription) {\n            this.optionBlurSubscription.unsubscribe();\n            this.optionBlurSubscription = null;\n        }\n    }\n\n    private listenToOptionsFocus(): void {\n        this.optionFocusSubscription = this.optionFocusChanges\n            .subscribe((event) => {\n                const index: number = this.renderedOptions.toArray().indexOf(event.option as T);\n\n                if (this.isValidIndex(index)) {\n                    this.keyManager.updateActiveItem(index);\n                }\n            });\n\n        this.optionBlurSubscription = this.optionBlurChanges\n            .subscribe(() => this.blur());\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.renderedOptions.length;\n    }\n\n    /** Checks whether any of the options is focused. */\n    private hasFocusedOption() {\n        return this.renderedOptions.some((option) => option.hasFocus);\n    }\n\n    private markOptionsForCheck() {\n        if (this.renderedOptions) {\n            this.renderedOptions.forEach((option) => option.markForCheck());\n        }\n    }\n\n    private updateOptionsFocus() {\n        this.renderedOptions\n            .filter((option) => option.hasFocus)\n            .forEach((option) => option.hasFocus = false);\n    }\n\n    private canDeselectLast(option: McTreeOption): boolean {\n        return !(this.noUnselectLast && this.selectionModel.selected.length === 1 && option.selected);\n    }\n}\n\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ElementRef,\n    Inject,\n    InjectionToken,\n    ChangeDetectionStrategy,\n    ViewEncapsulation,\n    AfterContentInit,\n    NgZone\n} from '@angular/core';\nimport { CdkTreeNode } from '@ptsecurity/cdk/tree';\nimport { CanDisable } from '@ptsecurity/mosaic/core';\nimport { Subject } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\n\n// tslint:disable-next-line:naming-convention\nexport interface McTreeOptionEvent {\n    option: McTreeOption;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_TREE_OPTION_PARENT_COMPONENT = new InjectionToken<any>('MC_TREE_OPTION_PARENT_COMPONENT');\n\nexport class McTreeOptionChange {\n    constructor(public source: McTreeOption, public isUserInput = false) {}\n}\n\nlet uniqueIdCounter: number = 0;\n\n@Component({\n    selector: 'mc-tree-option',\n    exportAs: 'mcTreeOption',\n    templateUrl: './tree-option.html',\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': '-1',\n\n        '[attr.disabled]': 'disabled || null',\n\n        class: 'mc-tree-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': 'hasFocus',\n\n        '(focus)': 'focus()',\n        '(blur)': 'blur()',\n\n        '(click)': 'selectViaInteraction($event)'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    providers: [{ provide: CdkTreeNode, useExisting: McTreeOption }]\n})\nexport class McTreeOption extends CdkTreeNode<McTreeOption> implements CanDisable, AfterContentInit {\n\n    readonly onFocus = new Subject<McTreeOptionEvent>();\n\n    readonly onBlur = new Subject<McTreeOptionEvent>();\n\n    get value(): any {\n        return this._value;\n    }\n\n    set value(value: any) {\n        this._value = value;\n    }\n\n    private _value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled || (this.tree && this.tree.disabled);\n    }\n\n    set disabled(value: any) {\n        const newValue = coerceBooleanProperty(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    @Input()\n    get showCheckbox() {\n        return this._showCheckbox !== undefined ? this._showCheckbox : this.tree.showCheckbox;\n    }\n\n    set showCheckbox(value: any) {\n        this._showCheckbox = coerceBooleanProperty(value);\n    }\n\n    private _showCheckbox: boolean;\n\n    @Output() readonly onSelectionChange = new EventEmitter<McTreeOptionChange>();\n\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = coerceBooleanProperty(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n        }\n    }\n\n    private _selected: boolean = false;\n\n    get id(): string {\n        return this._id;\n    }\n\n    private _id = `mc-tree-option-${uniqueIdCounter++}`;\n\n    get multiple(): boolean {\n        return this.tree.multiple;\n    }\n\n    get viewValue(): string {\n        // TODO: Add input property alternative for node envs.\n        return (this.getHostElement().textContent || '').trim();\n    }\n\n    hasFocus: boolean = false;\n\n    constructor(\n        elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        private ngZone: NgZone,\n        @Inject(MC_TREE_OPTION_PARENT_COMPONENT) public tree: any\n    ) {\n        super(elementRef, tree);\n    }\n\n    ngAfterContentInit(): void {\n        this.value = this.tree.treeControl.getValue(this.data);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    setSelected(selected: boolean): void {\n        if (this._selected === selected || !this.tree.selectionModel) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.tree.selectionModel.select(this.data);\n        } else {\n            this.tree.selectionModel.deselect(this.data);\n        }\n\n        this.changeDetectorRef.markForCheck();\n    }\n\n    focus() {\n        if (this.disabled || this.hasFocus) { return; }\n\n        this.elementRef.nativeElement.focus();\n\n        this.onFocus.next({ option: this });\n\n        Promise.resolve().then(() => {\n            this.hasFocus = true;\n\n            this.changeDetectorRef.markForCheck();\n        });\n    }\n\n    blur(): void {\n        // When animations are enabled, Angular may end up removing the option from the DOM a little\n        // earlier than usual, causing it to be blurred and throwing off the logic in the tree\n        // that moves focus not the next item. To work around the issue, we defer marking the option\n        // as not focused until the next time the zone stabilizes.\n        this.ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                this.ngZone.run(() => {\n                    this.hasFocus = false;\n\n                    this.onBlur.next({ option: this });\n                });\n            });\n    }\n\n    getHeight(): number {\n        const clientRects = this.elementRef.nativeElement.getClientRects();\n\n        if (clientRects.length) {\n            return clientRects[0].height;\n        }\n\n        return 0;\n    }\n\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent();\n        }\n    }\n\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    selectViaInteraction($event?: KeyboardEvent): void {\n        if (!this.disabled) {\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent(true);\n\n            if (this.tree.setSelectedOption) {\n                this.tree.setSelectedOption(this, $event);\n            }\n        }\n    }\n\n    emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McTreeOptionChange(this, isUserInput));\n    }\n\n    getHostElement(): HTMLElement {\n        return this.elementRef.nativeElement;\n    }\n\n    markForCheck() {\n        this.changeDetectorRef.markForCheck();\n    }\n}\n","import { Component, Directive, Input, ViewEncapsulation } from '@angular/core';\nimport { CdkTree, CdkTreeNode, CdkTreeNodeToggle } from '@ptsecurity/cdk/tree';\nimport { map } from 'rxjs/operators';\n\n\n@Component({\n    selector: 'mc-tree-node-toggle',\n    template: `\n        <i class=\"mc mc-icon mc-angle-down-S_16\"></i>\n    `,\n    host: {\n        class: 'mc-tree-node-toggle',\n        '(click)': 'toggle($event)',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-opened]': 'iconState'\n    },\n    encapsulation: ViewEncapsulation.None,\n    providers: [{ provide: CdkTreeNodeToggle, useExisting: McTreeNodeToggleComponent }]\n})\nexport class McTreeNodeToggleComponent<T> extends CdkTreeNodeToggle<T> {\n    disabled: boolean = false;\n\n    @Input() node: T;\n\n    get iconState(): any {\n        return this.disabled || this.tree.treeControl.isExpanded(this.node);\n    }\n\n    constructor(tree: CdkTree<T>, treeNode: CdkTreeNode<T>) {\n        super(tree, treeNode);\n\n        this.tree.treeControl.filterValue\n            .pipe(map((value) => value.length > 0))\n            .subscribe((state: boolean) => this.disabled = state);\n    }\n}\n\n@Directive({\n    selector: '[mcTreeNodeToggle]',\n    host: {\n        '(click)': 'toggle($event)',\n        '[class.mc-disabled]': 'disabled'\n    },\n    providers: [{ provide: CdkTreeNodeToggle, useExisting: McTreeNodeToggleDirective }]\n})\nexport class McTreeNodeToggleDirective<T> extends CdkTreeNodeToggle<T> {\n    disabled: boolean = false;\n\n    constructor(tree: CdkTree<T>, treeNode: CdkTreeNode<T>) {\n        super(tree, treeNode);\n\n        this.tree.treeControl.filterValue\n            .pipe(map((value) => value.length > 0))\n            .subscribe((state: boolean) => this.disabled = state);\n    }\n}\n","import { Directive, Input, OnInit } from '@angular/core';\nimport { CdkTreeNodePadding } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodePadding]',\n    providers: [{ provide: CdkTreeNodePadding, useExisting: McTreeNodePadding }]\n})\nexport class McTreeNodePadding<T> extends CdkTreeNodePadding<T> implements OnInit {\n    @Input('mcTreeNodePadding') level: number;\n\n    @Input('mcTreeNodePaddingIndent') indent: number;\n\n    baseLeftPadding: number = 12;\n    /* tslint:disable-next-line:naming-convention orthodox-getter-and-setter*/\n    _indent: number = 20;\n\n    withIcon: boolean;\n    iconWidth: number = 20;\n\n    get leftPadding(): number {\n        return (this.withIcon ? 0 : this.iconWidth) + this.baseLeftPadding;\n    }\n\n    paddingIndent(): string | null {\n        const nodeLevel = (this.treeNode.data && this.tree.treeControl.getLevel)\n            ? this.tree.treeControl.getLevel(this.treeNode.data)\n            : null;\n\n        const level = this.level || nodeLevel;\n\n        return level ? `${(level * this._indent) + this.leftPadding}px` : `${this.baseLeftPadding}px`;\n    }\n\n    ngOnInit(): void {\n        this.withIcon = this.tree.treeControl.isExpandable(this.treeNode.data);\n\n        this.setPadding();\n    }\n}\n","import { Directive, Input } from '@angular/core';\nimport { CdkTreeNodeDef } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeDef]',\n    inputs: ['when: mcTreeNodeDefWhen'],\n    providers: [{ provide: CdkTreeNodeDef, useExisting: McTreeNodeDef }]\n})\nexport class McTreeNodeDef<T> extends CdkTreeNodeDef<T> {\n    @Input('mcTreeNode') data: T;\n}\n"],"names":["tslib_1.__extends"],"mappings":"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"}