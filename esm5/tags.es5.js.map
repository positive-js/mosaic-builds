{"version":3,"file":"tags.es5.js","sources":["../../../packages/mosaic/tags/tag.module.ts","../../../packages/mosaic/tags/tag-input.ts","../../../packages/mosaic/tags/tag-list.component.ts","../../../packages/mosaic/tags/tag.component.ts","../../../packages/mosaic/tags/tag-default-options.ts"],"sourcesContent":["import { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ENTER } from '@ptsecurity/cdk/keycodes';\n\nimport { MC_TAGS_DEFAULT_OPTIONS, McTagsDefaultOptions } from './tag-default-options';\nimport { McTagInput } from './tag-input';\nimport { McTagList } from './tag-list.component';\nimport { McTag, McTagAvatar, McTagRemove, McTagTrailingIcon } from './tag.component';\n\n\n@NgModule({\n    imports: [CommonModule, PlatformModule],\n    exports: [\n        McTagList,\n        McTag,\n        McTagInput,\n        McTagTrailingIcon,\n        McTagAvatar,\n        McTagRemove\n    ],\n    declarations: [\n        McTagList,\n        McTag,\n        McTagInput,\n        McTagTrailingIcon,\n        McTagAvatar,\n        McTagRemove\n    ],\n    providers: [{\n        provide: MC_TAGS_DEFAULT_OPTIONS,\n        // tslint:disable-next-line: no-object-literal-type-assertion\n        useValue: { separatorKeyCodes: [ENTER] } as McTagsDefaultOptions\n    }]\n})\nexport class McTagsModule {}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Input,\n    OnChanges,\n    Optional,\n    Output,\n    Renderer2, Self\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { hasModifierKey } from '@ptsecurity/cdk/keycodes';\n\nimport { MC_TAGS_DEFAULT_OPTIONS, McTagsDefaultOptions } from './tag-default-options';\nimport { McTagList } from './tag-list.component';\nimport { McTagTextControl } from './tag-text-control';\n\n\n/** Represents an input event on a `mcTagInput`. */\n// tslint:disable-next-line: naming-convention\nexport interface McTagInputEvent {\n    /** The native `<input>` element that the event is being fired for. */\n    input: HTMLInputElement;\n\n    /** The value of the input. */\n    value: string;\n}\n\n// Increasing integer for generating unique ids.\nlet nextUniqueId = 0;\n\n/**\n * Directive that adds tag-specific behaviors to an input element inside `<mc-form-field>`.\n * May be placed inside or outside of an `<mc-tag-list>`.\n */\n@Directive({\n    selector: 'input[mcTagInputFor]',\n    exportAs: 'mcTagInput, mcTagInputFor',\n    host: {\n        class: 'mc-tag-input mc-input-element',\n        '[id]': 'id',\n        '[attr.disabled]': 'disabled || null',\n        '[attr.placeholder]': 'placeholder || null',\n        '(keydown)': 'keydown($event)',\n        '(blur)': 'blur()',\n        '(focus)': 'onFocus()',\n        '(input)': 'onInput()'\n    }\n})\nexport class McTagInput implements McTagTextControl, OnChanges {\n    /** Whether the control is focused. */\n    focused: boolean = false;\n\n    /**\n     * The list of key codes that will trigger a tagEnd event.\n     *\n     * Defaults to `[ENTER]`.\n     */\n    @Input('mcTagInputSeparatorKeyCodes')\n    separatorKeyCodes: number[] | Set<number> = this.defaultOptions.separatorKeyCodes;\n\n    /** Emitted when a tag is to be added. */\n    @Output('mcTagInputTokenEnd')\n    tagEnd: EventEmitter<McTagInputEvent> = new EventEmitter<McTagInputEvent>();\n\n    /** The input's placeholder text. */\n    @Input() placeholder: string = '';\n\n    /** Unique id for the input. */\n    @Input() id: string = `mc-tag-list-input-${nextUniqueId++}`;\n\n    /** Register input for tag list */\n    @Input('mcTagInputFor')\n    set tagList(value: McTagList) {\n        if (value) {\n            this._tagList = value;\n            this._tagList.registerInput(this);\n        }\n    }\n\n    // tslint:disable-next-line: naming-convention\n    private _tagList: McTagList;\n\n    /**\n     * Whether or not the tagEnd event will be emitted when the input is blurred.\n     */\n    @Input('mcTagInputAddOnBlur')\n    get addOnBlur(): boolean {\n        return this._addOnBlur;\n    }\n\n    set addOnBlur(value: boolean) {\n        this._addOnBlur = coerceBooleanProperty(value);\n    }\n\n    private _addOnBlur: boolean = true;\n\n    /** Whether the input is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled || (this._tagList && this._tagList.disabled);\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    private _disabled: boolean = false;\n\n    /** Whether the input is empty. */\n    get empty(): boolean {\n        return !this.inputElement.value;\n    }\n\n    countOfSymbolsForUpdateWidth: number = 3;\n\n    private oneSymbolWidth: number;\n\n    /** The native input element to which this directive is attached. */\n    private inputElement: HTMLInputElement;\n\n    constructor(\n        private elementRef: ElementRef<HTMLInputElement>,\n        private renderer: Renderer2,\n        @Inject(MC_TAGS_DEFAULT_OPTIONS) private defaultOptions: McTagsDefaultOptions,\n        @Optional() @Self() public ngControl: NgControl\n    ) {\n        // tslint:disable-next-line: no-unnecessary-type-assertion\n        this.inputElement = this.elementRef.nativeElement as HTMLInputElement;\n\n        this.setDefaultInputWidth();\n    }\n\n    ngOnChanges() {\n        this._tagList.stateChanges.next();\n    }\n\n    /** Utility method to make host definition/tests more clear. */\n    keydown(event?: KeyboardEvent) {\n        this.emittagEnd(event);\n    }\n\n    /** Checks to see if the blur should emit the (tagEnd) event. */\n    blur() {\n        this.focused = false;\n        // Blur the tag list if it is not focused\n        if (!this._tagList.focused) {\n            this.triggerValidation();\n\n            this._tagList.blur();\n        }\n\n        // tslint:disable-next-line: no-unnecessary-type-assertion\n        if (this.addOnBlur && !(this.hasControl() && this.ngControl.invalid)) {\n            this.emittagEnd();\n        }\n\n        this._tagList.stateChanges.next();\n    }\n\n    triggerValidation() {\n        if (!this.hasControl()) { return; }\n\n        (this.ngControl.statusChanges as EventEmitter<string | null>).emit(this.ngControl.status);\n    }\n\n    /** Checks to see if the (tagEnd) event needs to be emitted. */\n    emittagEnd(event?: KeyboardEvent) {\n        if (!this.inputElement.value && !!event) {\n            this._tagList.keydown(event);\n        }\n\n        if (!event || this.isSeparatorKey(event)) {\n            this.tagEnd.emit({ input: this.inputElement, value: this.inputElement.value });\n            this.updateInputWidth();\n\n            if (event) {\n                event.preventDefault();\n            }\n        }\n    }\n\n    onInput() {\n        this.updateInputWidth();\n        // Let tag list know whenever the value changes.\n        this._tagList.stateChanges.next();\n    }\n\n    updateInputWidth(): void {\n        const length = this.inputElement.value.length;\n\n        this.renderer.setStyle(this.inputElement, 'max-width', 0);\n        this.oneSymbolWidth = this.inputElement.scrollWidth / length;\n        this.renderer.setStyle(this.inputElement, 'max-width', '');\n\n        if (length > this.countOfSymbolsForUpdateWidth) {\n            this.renderer.setStyle(this.inputElement, 'width', `${length * this.oneSymbolWidth}px`);\n        } else {\n            this.setDefaultInputWidth();\n        }\n    }\n\n    onFocus() {\n        this.focused = true;\n        this._tagList.stateChanges.next();\n    }\n\n    /** Focuses the input. */\n    focus(): void {\n        this.inputElement.focus();\n    }\n\n    private hasControl(): boolean {\n        return !!this.ngControl;\n    }\n\n    private setDefaultInputWidth() {\n        this.renderer.setStyle(this.inputElement, 'width', '30px');\n    }\n\n    /** Checks whether a keycode is one of the configured separators. */\n    private isSeparatorKey(event: KeyboardEvent) {\n        if (hasModifierKey(event)) { return false; }\n\n        const separators = this.separatorKeyCodes;\n        // tslint:disable-next-line: deprecation\n        const keyCode = event.keyCode;\n\n        return Array.isArray(separators) ? separators.indexOf(keyCode) > -1 : separators.has(keyCode);\n    }\n}\n","import { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren,\n    DoCheck,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    QueryList,\n    Self,\n    ViewEncapsulation\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControlName,\n    FormGroupDirective,\n    NG_VALIDATORS,\n    NgControl,\n    NgForm,\n    NgModel,\n    Validator\n} from '@angular/forms';\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\nimport { BACKSPACE, END, HOME } from '@ptsecurity/cdk/keycodes';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    MC_VALIDATION,\n    McValidationOptions,\n    mixinErrorState,\n    setMosaicValidation\n} from '@ptsecurity/mosaic/core';\nimport { McCleaner, McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { merge, Observable, Subject, Subscription } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\n\nimport { McTagTextControl } from './tag-text-control';\nimport { McTag, McTagEvent, McTagSelectionChange } from './tag.component';\n\n\nexport class McTagListBase {\n    constructor(\n        public defaultErrorStateMatcher: ErrorStateMatcher,\n        public parentForm: NgForm,\n        public parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl\n    ) {\n    }\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McTagListMixinBase: CanUpdateErrorStateCtor & typeof McTagListBase = mixinErrorState(McTagListBase);\n\n\n// Increasing integer for generating unique ids for tag-list components.\nlet nextUniqueId = 0;\n\n/** Change event object that is emitted when the tag list value has changed. */\nexport class McTagListChange {\n    constructor(public source: McTagList, public value: any) {}\n}\n\n\n@Component({\n    selector: 'mc-tag-list',\n    exportAs: 'mcTagList',\n    templateUrl: 'tag-list.partial.html',\n    host: {\n        class: 'mc-tag-list',\n        '[attr.tabindex]': 'disabled ? null : _tabIndex',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-invalid]': 'errorState',\n        '[class.mc-required]': 'required',\n        '(focus)': 'focus()',\n        '(blur)': 'blur()',\n        '(keydown)': 'keydown($event)',\n        '[id]': 'uid'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McTagList }],\n    styleUrls: ['tag-list.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McTagList extends McTagListMixinBase implements McFormFieldControl<any>,\n    ControlValueAccessor, AfterContentInit, DoCheck, OnInit, OnDestroy, CanUpdateErrorState {\n\n    readonly controlType: string = 'mc-tag-list';\n\n    /** Combined stream of all of the child tags' selection change events. */\n    get tagSelectionChanges(): Observable<McTagSelectionChange> {\n        return merge(...this.tags.map((tag) => tag.selectionChange));\n    }\n\n    /** Combined stream of all of the child tags' focus change events. */\n    get tagFocusChanges(): Observable<McTagEvent> {\n        return merge(...this.tags.map((tag) => tag.onFocus));\n    }\n\n    /** Combined stream of all of the child tags' blur change events. */\n    get tagBlurChanges(): Observable<McTagEvent> {\n        return merge(...this.tags.map((tag) => tag.onBlur));\n    }\n\n    /** Combined stream of all of the child tags' remove change events. */\n    get tagRemoveChanges(): Observable<McTagEvent> {\n        return merge(...this.tags.map((tag) => tag.destroyed));\n    }\n\n    /** The array of selected tags inside tag list. */\n    get selected(): McTag[] | McTag {\n        return this.multiple ? this.selectionModel.selected : this.selectionModel.selected[0];\n    }\n\n    get canShowCleaner(): boolean {\n        return this.cleaner && this.tags.length > 0;\n    }\n\n    /** Whether the user should be allowed to select multiple tags. */\n    @Input()\n    get multiple(): boolean {\n        return this._multiple;\n    }\n\n    set multiple(value: boolean) {\n        this._multiple = coerceBooleanProperty(value);\n    }\n\n    /**\n     * A function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    @Input()\n    get compareWith(): (o1: any, o2: any) => boolean {\n        return this._compareWith;\n    }\n\n    set compareWith(fn: (o1: any, o2: any) => boolean) {\n        this._compareWith = fn;\n\n        if (this.selectionModel) {\n            // A different comparator means the selection could change.\n            this.initializeSelection();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): any {\n        return this._value;\n    }\n\n    set value(value: any) {\n        this.writeValue(value);\n        this._value = value;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get id(): string {\n        return this.tagInput ? this.tagInput.id : this.uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n\n        this.stateChanges.next();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get placeholder(): string {\n        return this.tagInput ? this.tagInput.placeholder : this._placeholder;\n    }\n\n    set placeholder(value: string) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n\n    /** Whether any tags or the mcTagInput inside of this tag-list has focus. */\n    get focused(): boolean {\n        return (this.tagInput && this.tagInput.focused) || this.hasFocusedTag();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return (!this.tagInput || this.tagInput.empty) && this.tags.length === 0;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat(): boolean {\n        return !this.empty || this.focused;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        return this.ngControl ? !!this.ngControl.disabled : this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n        this.syncTagsDisabledState();\n    }\n\n    /**\n     * Whether or not this tag list is selectable. When a tag list is not selectable,\n     * the selected states for all the tags inside the tag list are always ignored.\n     */\n    @Input()\n    get selectable(): boolean {\n        return this._selectable;\n    }\n\n    set selectable(value: boolean) {\n        this._selectable = coerceBooleanProperty(value);\n\n        if (this.tags) {\n            this.tags.forEach((tag) => tag.tagListSelectable = this._selectable);\n        }\n    }\n\n    @Input()\n    set tabIndex(value: number) {\n        this.userTabIndex = value;\n        this._tabIndex = value;\n    }\n\n    /**\n     * Event that emits whenever the raw value of the tag-list changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n    uid: string = `mc-tag-list-${nextUniqueId++}`;\n\n    /**\n     * User defined tab index.\n     * When it is not null, use user defined tab index. Otherwise use tabIndex\n     */\n    userTabIndex: number | null = null;\n\n    keyManager: FocusKeyManager<McTag>;\n\n    selectionModel: SelectionModel<McTag>;\n\n    tagChanges = new EventEmitter<any>();\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /** Orientation of the tag list. */\n    @Input('orientation') orientation: 'horizontal' | 'vertical' = 'horizontal';\n\n    /** Event emitted when the selected tag list value has been changed by the user. */\n    @Output() readonly change: EventEmitter<McTagListChange> = new EventEmitter<McTagListChange>();\n\n    @ContentChild('mcTagListCleaner', { static: true }) cleaner: McCleaner;\n\n    /** The tag components contained within this tag list. */\n    @ContentChildren(McTag, {\n        // Need to use `descendants: true`,\n        // Ivy will no longer match indirect descendants if it's left as false.\n        descendants: true\n    }) tags: QueryList<McTag>;\n\n    // tslint:disable-next-line: naming-convention orthodox-getter-and-setter\n    _tabIndex = 0;\n\n    private _value: any;\n\n    private _required: boolean = false;\n\n    private _placeholder: string;\n\n    private _disabled: boolean = false;\n\n    private _selectable: boolean = true;\n\n    /** The tag input to add more tags */\n    private tagInput: McTagTextControl;\n\n    private _multiple: boolean = false;\n\n    /**\n     * When a tag is destroyed, we store the index of the destroyed tag until the tags\n     * query list notifies about the update. This is necessary because we cannot determine an\n     * appropriate tag that should receive focus until the array of tags updated completely.\n     */\n    private lastDestroyedTagIndex: number | null = null;\n\n    /** Subject that emits when the component has been destroyed. */\n    private destroyed = new Subject<void>();\n\n    /** Subscription to focus changes in the tags. */\n    private tagFocusSubscription: Subscription | null;\n\n    /** Subscription to blur changes in the tags. */\n    private tagBlurSubscription: Subscription | null;\n\n    /** Subscription to selection changes in tags. */\n    private tagSelectionSubscription: Subscription | null;\n\n    /** Subscription to remove changes in tags. */\n    private tagRemoveSubscription: Subscription | null;\n\n    constructor(\n        protected elementRef: ElementRef<HTMLElement>,\n        private changeDetectorRef: ChangeDetectorRef,\n        defaultErrorStateMatcher: ErrorStateMatcher,\n        @Optional() @Inject(NG_VALIDATORS) public rawValidators: Validator[],\n        @Optional() @Inject(MC_VALIDATION) private mcValidation: McValidationOptions,\n        @Optional() private dir: Directionality,\n        @Optional() parentForm: NgForm,\n        @Optional() parentFormGroup: FormGroupDirective,\n        @Optional() @Self() ngControl: NgControl,\n        @Optional() @Self() public ngModel: NgModel,\n        @Optional() @Self() public formControlName: FormControlName\n    ) {\n        super(defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\n\n        if (this.ngControl) {\n            this.ngControl.valueAccessor = this;\n        }\n    }\n\n    ngAfterContentInit() {\n        if (this.mcValidation.useValidation) {\n            setMosaicValidation(this);\n        }\n\n        this.keyManager = new FocusKeyManager<McTag>(this.tags)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this.dir ? this.dir.value : 'ltr');\n\n        if (this.dir) {\n            this.dir.change\n                .pipe(takeUntil(this.destroyed))\n                .subscribe((dir) => this.keyManager.withHorizontalOrientation(dir));\n        }\n\n        // Prevents the tag list from capturing focus and redirecting\n        // it back to the first tag when the user tabs out.\n        this.keyManager.tabOut\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(() => {\n                this._tabIndex = -1;\n\n                setTimeout(() => {\n                    this._tabIndex = this.userTabIndex || 0;\n                    this.changeDetectorRef.markForCheck();\n                });\n            });\n\n        // When the list changes, re-subscribe\n        this.tags.changes\n            .pipe(startWith(null), takeUntil(this.destroyed))\n            .subscribe(() => {\n                if (this.disabled) {\n                    // Since this happens after the content has been\n                    // checked, we need to defer it to the next tick.\n                    Promise.resolve().then(() => { this.syncTagsDisabledState(); });\n                }\n\n                this.resetTags();\n\n                // Reset tags selected/deselected status\n                this.initializeSelection();\n\n                // Check to see if we need to update our tab index\n                this.updateTabIndex();\n\n                // Check to see if we have a destroyed tag and need to refocus\n                this.updateFocusForDestroyedTags();\n\n                // Defer setting the value in order to avoid the \"Expression\n                // has changed after it was checked\" errors from Angular.\n                Promise.resolve().then(() => {\n                    this.tagChanges.emit(this.tags.toArray());\n                    this.stateChanges.next();\n                    this.propagateTagsChanges();\n                });\n            });\n    }\n\n    ngOnInit() {\n        this.selectionModel = new SelectionModel<McTag>(this.multiple, undefined, false);\n        this.stateChanges.next();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n    }\n\n    ngOnDestroy() {\n        this.destroyed.next();\n        this.destroyed.complete();\n        this.stateChanges.complete();\n\n        this.dropSubscriptions();\n    }\n\n    // tslint:disable-next-line:no-empty\n    onTouched = () => {};\n\n    // tslint:disable-next-line:no-empty\n    onChange: (value: any) => void = () => {};\n\n    /** Associates an HTML input element with this tag list. */\n    registerInput(inputElement: McTagTextControl): void {\n        this.tagInput = inputElement;\n\n        // todo need rethink about it\n        if (this.ngControl && inputElement.ngControl) {\n            inputElement.ngControl.statusChanges!\n                .subscribe(() => this.ngControl.control!.setErrors(inputElement.ngControl!.errors));\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value: any): void {\n        if (this.tags) {\n            this.setSelectionByValue(value, false);\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this.onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this.stateChanges.next();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick(event: MouseEvent) {\n        if (!this.originatesFromTag(event)) {\n            this.focus();\n        }\n    }\n\n    /**\n     * Focuses the first non-disabled tag in this tag list, or the associated input when there\n     * are no eligible tags.\n     */\n    focus(): void {\n        if (this.disabled) { return; }\n\n        // TODO: ARIA says this should focus the first `selected` tag if any are selected.\n        // Focus on first element if there's no tagInput inside tag-list\n        if (this.tagInput && this.tagInput.focused) {\n            // do nothing\n        } else if (this.tags.length > 0) {\n            this.keyManager.setFirstItemActive();\n            this.stateChanges.next();\n        } else {\n            this.focusInput();\n            this.stateChanges.next();\n        }\n    }\n\n    /** Attempt to focus an input if we have one. */\n    focusInput() {\n        if (this.tagInput) {\n            this.tagInput.focus();\n        }\n    }\n\n    /**\n     * Pass events to the keyboard manager. Available here for tests.\n     */\n    keydown(event: KeyboardEvent) {\n        const target = event.target as HTMLElement;\n\n        // If they are on an empty input and hit backspace, focus the last tag\n        // tslint:disable-next-line: deprecation\n        if (event.keyCode === BACKSPACE && this.isInputEmpty(target)) {\n            this.keyManager.setLastItemActive();\n            event.preventDefault();\n        } else if (target && target.classList.contains('mc-tag')) {\n            // tslint:disable-next-line: deprecation\n            if (event.keyCode === HOME) {\n                this.keyManager.setFirstItemActive();\n                event.preventDefault();\n            // tslint:disable-next-line: deprecation\n            } else if (event.keyCode === END) {\n                this.keyManager.setLastItemActive();\n                event.preventDefault();\n            } else {\n                this.keyManager.onKeydown(event);\n            }\n\n            this.stateChanges.next();\n        }\n    }\n\n    setSelectionByValue(value: any, isUserInput: boolean = true) {\n        this.clearSelection();\n        this.tags.forEach((tag) => tag.deselect());\n\n        if (Array.isArray(value)) {\n            value.forEach((currentValue) => this.selectValue(currentValue, isUserInput));\n            this.sortValues();\n        } else {\n            const correspondingTag = this.selectValue(value, isUserInput);\n\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what tag the user interacted with last.\n            if (correspondingTag && isUserInput) {\n                this.keyManager.setActiveItem(correspondingTag);\n            }\n        }\n    }\n\n    /** When blurred, mark the field as touched when focus moved outside the tag list. */\n    blur() {\n        if (!this.hasFocusedTag()) {\n            this.keyManager.setActiveItem(-1);\n        }\n\n        if (!this.disabled) {\n            if (this.tagInput) {\n                // If there's a tag input, we should check whether the focus moved to tag input.\n                // If the focus is not moved to tag input, mark the field as touched. If the focus moved\n                // to tag input, do nothing.\n                // Timeout is needed to wait for the focus() event trigger on tag input.\n                setTimeout(() => {\n                    if (!this.focused) {\n                        this.markAsTouched();\n                    }\n                });\n            } else {\n                // If there's no tag input, then mark the field as touched.\n                this.markAsTouched();\n            }\n        }\n    }\n\n    /** Mark the field as touched */\n    markAsTouched() {\n        this.onTouched();\n        this.changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n\n    /**\n     * Check the tab index as you should not be allowed to focus an empty list.\n     */\n    protected updateTabIndex(): void {\n        // If we have 0 tags, we should not allow keyboard focus\n        this._tabIndex = this.userTabIndex || (this.tags.length === 0 ? -1 : 0);\n    }\n\n    /**\n     * If the amount of tags changed, we need to update the\n     * key manager state and focus the next closest tag.\n     */\n    protected updateFocusForDestroyedTags() {\n        if (this.lastDestroyedTagIndex != null) {\n            if (this.tags.length) {\n                const newTagIndex = Math.min(this.lastDestroyedTagIndex, this.tags.length - 1);\n                this.keyManager.setActiveItem(newTagIndex);\n            } else {\n                this.focusInput();\n            }\n        }\n\n        this.lastDestroyedTagIndex = null;\n    }\n\n    private _compareWith = (o1: any, o2: any) => o1 === o2;\n\n    /**\n     * Utility to ensure all indexes are valid.\n     *\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of tags.\n     */\n    private isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.tags.length;\n    }\n\n    private isInputEmpty(element: HTMLElement): boolean {\n        if (element && element.nodeName.toLowerCase() === 'input') {\n            const input = element as HTMLInputElement;\n\n            return !input.value;\n        }\n\n        return false;\n    }\n\n    /**\n     * Finds and selects the tag based on its value.\n     * @returns Tag that has the corresponding value.\n     */\n    private selectValue(value: any, isUserInput: boolean = true): McTag | undefined {\n\n        const correspondingTag = this.tags.find((tag) => {\n            return tag.value != null && this._compareWith(tag.value, value);\n        });\n\n        if (correspondingTag) {\n            if (isUserInput) {\n                correspondingTag.selectViaInteraction();\n            } else {\n                correspondingTag.select();\n            }\n\n            this.selectionModel.select(correspondingTag);\n        }\n\n        return correspondingTag;\n    }\n\n    private initializeSelection(): void {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            if (this.ngControl || this._value) {\n                this.setSelectionByValue(this.ngControl ? this.ngControl.value : this._value, false);\n                this.stateChanges.next();\n            }\n        });\n    }\n\n    /**\n     * Deselects every tag in the list.\n     * @param skip Tag that should not be deselected.\n     */\n    private clearSelection(skip?: McTag): void {\n        this.selectionModel.clear();\n        this.tags.forEach((tag) => {\n            if (tag !== skip) {\n                tag.deselect();\n            }\n        });\n        this.stateChanges.next();\n    }\n\n    /**\n     * Sorts the model values, ensuring that they keep the same\n     * order that they have in the panel.\n     */\n    private sortValues(): void {\n        if (this._multiple) {\n            this.selectionModel.clear();\n\n            this.tags.forEach((tag) => {\n                if (tag.selected) {\n                    this.selectionModel.select(tag);\n                }\n            });\n            this.stateChanges.next();\n        }\n    }\n\n    /** Emits change event to set the model value. */\n    // todo need rethink this method and selection logic\n    private propagateChanges(fallbackValue?: any): void {\n        let valueToEmit: any = null;\n\n        if (Array.isArray(this.selected)) {\n            valueToEmit = this.selected.map((tag) => tag.value);\n        } else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.change.emit(new McTagListChange(this, valueToEmit));\n        this.valueChange.emit(valueToEmit);\n        this.onChange(valueToEmit);\n        this.changeDetectorRef.markForCheck();\n    }\n\n    private propagateTagsChanges(): void {\n        const valueToEmit: any = this.tags.map((tag) => tag.value);\n\n        this._value = valueToEmit;\n        this.change.emit(new McTagListChange(this, valueToEmit));\n        this.valueChange.emit(valueToEmit);\n        this.onChange(valueToEmit);\n        this.changeDetectorRef.markForCheck();\n    }\n\n    private resetTags() {\n        this.dropSubscriptions();\n        this.listenToTagsFocus();\n        this.listenToTagsSelection();\n        this.listenToTagsRemoved();\n    }\n\n    private dropSubscriptions() {\n        if (this.tagFocusSubscription) {\n            this.tagFocusSubscription.unsubscribe();\n            this.tagFocusSubscription = null;\n        }\n\n        if (this.tagBlurSubscription) {\n            this.tagBlurSubscription.unsubscribe();\n            this.tagBlurSubscription = null;\n        }\n\n        if (this.tagSelectionSubscription) {\n            this.tagSelectionSubscription.unsubscribe();\n            this.tagSelectionSubscription = null;\n        }\n\n        if (this.tagRemoveSubscription) {\n            this.tagRemoveSubscription.unsubscribe();\n            this.tagRemoveSubscription = null;\n        }\n    }\n\n    /** Listens to user-generated selection events on each tag. */\n    private listenToTagsSelection(): void {\n        this.tagSelectionSubscription = this.tagSelectionChanges.subscribe((event) => {\n            if (event.source.selected) {\n                this.selectionModel.select(event.source);\n            } else {\n                this.selectionModel.deselect(event.source);\n            }\n\n            // For single selection tag list, make sure the deselected value is unselected.\n            if (!this.multiple) {\n                this.tags.forEach((tag) => {\n                    if (!this.selectionModel.isSelected(tag) && tag.selected) {\n                        tag.deselect();\n                    }\n                });\n            }\n\n            if (event.isUserInput) {\n                this.propagateChanges();\n            }\n        });\n    }\n\n    /** Listens to user-generated selection events on each tag. */\n    private listenToTagsFocus(): void {\n        this.tagFocusSubscription = this.tagFocusChanges.subscribe((event) => {\n            const tagIndex: number = this.tags.toArray().indexOf(event.tag);\n\n            if (this.isValidIndex(tagIndex)) {\n                this.keyManager.updateActiveItem(tagIndex);\n            }\n\n            this.stateChanges.next();\n        });\n\n        this.tagBlurSubscription = this.tagBlurChanges.subscribe(() => {\n            this.blur();\n            this.stateChanges.next();\n        });\n    }\n\n    private listenToTagsRemoved(): void {\n        this.tagRemoveSubscription = this.tagRemoveChanges.subscribe((event) => {\n            const tag = event.tag;\n            const tagIndex = this.tags.toArray().indexOf(event.tag);\n\n            // In case the tag that will be removed is currently focused, we temporarily store\n            // the index in order to be able to determine an appropriate sibling tag that will\n            // receive focus.\n            if (this.isValidIndex(tagIndex) && tag.hasFocus) {\n                this.lastDestroyedTagIndex = tagIndex;\n            } else if (this.isValidIndex(tagIndex) && !tag.hasFocus) {\n                this.focusInput();\n            }\n        });\n    }\n\n    /** Checks whether an event comes from inside a tag element. */\n    private originatesFromTag(event: Event): boolean {\n        let currentElement = event.target as HTMLElement | null;\n\n        while (currentElement && currentElement !== this.elementRef.nativeElement) {\n            if (currentElement.classList.contains('mc-tag')) { return true; }\n\n            currentElement = currentElement.parentElement;\n        }\n\n        return false;\n    }\n\n    /** Checks whether any of the tags is focused. */\n    private hasFocusedTag() {\n        return this.tags.some((tag) => tag.hasFocus);\n    }\n\n    /** Syncs the list's disabled state with the individual tags. */\n    private syncTagsDisabledState() {\n        if (this.tags) {\n            this.tags.forEach((tag) => {\n                tag.disabled = this._disabled;\n            });\n        }\n    }\n}\n\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    NgZone,\n    OnDestroy,\n    Output,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport { BACKSPACE, DELETE, SPACE } from '@ptsecurity/cdk/keycodes';\nimport {\n    CanColor,\n    CanColorCtor,\n    CanDisable,\n    CanDisableCtor,\n    mixinColor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\nimport { Subject } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\n\n// tslint:disable-next-line:naming-convention\nexport interface McTagEvent {\n    tag: McTag;\n}\n\n/** Event object emitted by McTag when selected or deselected. */\nexport class McTagSelectionChange {\n    constructor(public source: McTag, public selected: boolean, public isUserInput = false) {}\n}\n\n\nconst TAG_ATTRIBUTE_NAMES = ['mc-basic-tag'];\n\n/**\n * Dummy directive to add CSS class to tag avatar.\n * @docs-private\n */\n@Directive({\n    selector: 'mc-tag-avatar, [mcTagAvatar]',\n    host: { class: 'mc-tag-avatar' }\n})\nexport class McTagAvatar {}\n\n/**\n * Dummy directive to add CSS class to tag trailing icon.\n * @docs-private\n */\n@Directive({\n    selector: 'mc-tag-trailing-icon, [mcTagTrailingIcon]',\n    host: { class: 'mc-tag-trailing-icon' }\n})\nexport class McTagTrailingIcon {}\n\nexport class McTagBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McTagMixinBase: CanColorCtor & CanDisableCtor & typeof McTagBase = mixinColor(mixinDisabled(McTagBase));\n\n\n@Component({\n    selector: 'mc-tag, [mc-tag], mc-basic-tag, [mc-basic-tag]',\n    exportAs: 'mcTag',\n    templateUrl: 'tag.partial.html',\n    styleUrls: ['./tag.css'],\n    inputs: ['color', 'disabled'],\n    host: {\n        class: 'mc-tag',\n\n        '[attr.tabindex]': 'tabindex',\n        '[attr.disabled]': 'disabled || null',\n\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': 'hasFocus',\n        '[class.mc-tag-with-avatar]': 'avatar',\n        '[class.mc-tag-with-trailing-icon]': 'trailingIcon || removeIcon',\n        '[class.mc-tag-disabled]': 'disabled',\n        '[class.mc-disabled]': 'disabled',\n\n        '(click)': 'handleClick($event)',\n        '(keydown)': 'handleKeydown($event)',\n        '(focus)': 'focus()',\n        '(blur)': 'blur()'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McTag extends McTagMixinBase implements IFocusableOption, OnDestroy, CanColor, CanDisable {\n    /** Emits when the tag is focused. */\n    readonly onFocus = new Subject<McTagEvent>();\n\n    /** Emits when the tag is blured. */\n    readonly onBlur = new Subject<McTagEvent>();\n\n    nativeElement: HTMLElement;\n\n    /** Whether the tag has focus. */\n    hasFocus: boolean = false;\n\n    /** Whether the tag list is selectable */\n    tagListSelectable: boolean = true;\n\n    @ContentChildren(McIcon) contentChildren: QueryList<McIcon>;\n\n    /** The tag avatar */\n    @ContentChild(McTagAvatar, {static: false}) avatar: McTagAvatar;\n\n    /** The tag's trailing icon. */\n    @ContentChild(McTagTrailingIcon, {static: false}) trailingIcon: McTagTrailingIcon;\n\n    /** The tag's remove toggler. */\n    @ContentChild(forwardRef(() => McTagRemove), {static: false}) removeIcon: McTagRemove;\n\n    /** Emitted when the tag is selected or deselected. */\n    @Output() readonly selectionChange: EventEmitter<McTagSelectionChange> =\n        new EventEmitter<McTagSelectionChange>();\n\n    /** Emitted when the tag is destroyed. */\n    @Output() readonly destroyed: EventEmitter<McTagEvent> = new EventEmitter<McTagEvent>();\n\n    /** Emitted when a tag is to be removed. */\n    @Output() readonly removed: EventEmitter<McTagEvent> = new EventEmitter<McTagEvent>();\n\n    /** Whether the tag is selected. */\n    @Input()\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    set selected(value: boolean) {\n        const coercedValue = coerceBooleanProperty(value);\n\n        if (coercedValue !== this._selected) {\n            this._selected = coercedValue;\n            this.dispatchSelectionChange();\n        }\n    }\n\n    private _selected: boolean = false;\n\n    /** The value of the tag. Defaults to the content inside `<mc-tag>` tags. */\n    @Input()\n    get value(): any {\n        return this._value !== undefined\n            ? this._value\n            : this.elementRef.nativeElement.textContent;\n    }\n\n    set value(value: any) {\n        this._value = value;\n    }\n\n    private _value: any;\n\n    /**\n     * Whether or not the tag is selectable. When a tag is not selectable,\n     * changes to its selected state are always ignored. By default a tag is\n     * selectable, and it becomes non-selectable if its parent tag list is\n     * not selectable.\n     */\n    @Input()\n    get selectable(): boolean {\n        return this._selectable && this.tagListSelectable;\n    }\n\n    set selectable(value: boolean) {\n        this._selectable = coerceBooleanProperty(value);\n    }\n\n    private _selectable: boolean = true;\n\n    /**\n     * Determines whether or not the tag displays the remove styling and emits (removed) events.\n     */\n    @Input()\n    get removable(): boolean {\n        return this._removable;\n    }\n\n    set removable(value: boolean) {\n        this._removable = coerceBooleanProperty(value);\n    }\n\n    private _removable: boolean = true;\n\n    get tabindex(): any {\n        if (!this.selectable) { return null; }\n\n        return this.disabled ? null : -1;\n    }\n\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this.disabled) {\n            this._disabled = value;\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    constructor(\n        public elementRef: ElementRef,\n        public changeDetectorRef: ChangeDetectorRef,\n        private _ngZone: NgZone\n    ) {\n        super(elementRef);\n\n        this.addHostClassName();\n\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this.addClassModificatorForIcons();\n    }\n\n    addClassModificatorForIcons() {\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-left-icon');\n                }\n\n                if (iconElement.previousSibling) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-right-icon');\n                }\n            }\n        } else if (icons.length > 1) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n\n    addHostClassName() {\n        // Add class for the different tags\n        for (const attr of TAG_ATTRIBUTE_NAMES) {\n            if (\n                this.elementRef.nativeElement.hasAttribute(attr) ||\n                this.elementRef.nativeElement.tagName.toLowerCase() === attr\n            ) {\n                    (this.elementRef.nativeElement as HTMLElement).classList.add(attr);\n\n                    return;\n            }\n        }\n        (this.elementRef.nativeElement as HTMLElement).classList.add('mc-standard-tag');\n    }\n\n    ngOnDestroy() {\n        this.destroyed.emit({ tag: this });\n    }\n\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n            this.dispatchSelectionChange();\n        }\n    }\n\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n            this.dispatchSelectionChange();\n        }\n    }\n\n    selectViaInteraction(): void {\n        if (!this._selected) {\n            this._selected = true;\n            this.dispatchSelectionChange(true);\n        }\n    }\n\n    toggleSelected(isUserInput: boolean = false): boolean {\n        this._selected = !this.selected;\n        this.dispatchSelectionChange(isUserInput);\n\n        return this.selected;\n    }\n\n    /** Allows for programmatic focusing of the tag. */\n    focus(): void {\n        if (!this.selectable) { return; }\n\n        if (!this.hasFocus) {\n            this.elementRef.nativeElement.focus();\n\n            this.onFocus.next({ tag: this });\n\n            Promise.resolve().then(() => {\n                this.hasFocus = true;\n                this.changeDetectorRef.markForCheck();\n            });\n        }\n    }\n\n    /**\n     * Allows for programmatic removal of the tag. Called by the McTagList when the DELETE or\n     * BACKSPACE keys are pressed.\n     *\n     * Informs any listeners of the removal request. Does not remove the tag from the DOM.\n     */\n    remove(): void {\n        if (this.removable) {\n            this.removed.emit({ tag: this });\n        }\n    }\n\n    handleClick(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n        } else {\n            event.stopPropagation();\n        }\n    }\n\n    handleKeydown(event: KeyboardEvent): void {\n        if (this.disabled) { return; }\n\n        // tslint:disable-next-line: deprecation\n        switch (event.keyCode) {\n            case DELETE:\n            case BACKSPACE:\n                // If we are removable, remove the focused tag\n                this.remove();\n                // Always prevent so page navigation does not occur\n                event.preventDefault();\n                break;\n            case SPACE:\n                // If we are selectable, toggle the focused tag\n                if (this.selectable) {\n                    this.toggleSelected(true);\n                }\n\n                // Always prevent space from scrolling the page since the list has focus\n                event.preventDefault();\n                break;\n            default:\n        }\n    }\n\n    blur(): void {\n        // When animations are enabled, Angular may end up removing the tag from the DOM a little\n        // earlier than usual, causing it to be blurred and throwing off the logic in the tag list\n        // that moves focus not the next item. To work around the issue, we defer marking the tag\n        // as not focused until the next time the zone stabilizes.\n        this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                this._ngZone.run(() => {\n                    this.hasFocus = false;\n                    this.onBlur.next({ tag: this });\n                });\n            });\n    }\n\n    private dispatchSelectionChange(isUserInput = false) {\n        this.selectionChange.emit({\n            source: this,\n            isUserInput,\n            selected: this._selected\n        });\n    }\n}\n\n\n/**\n *\n * Example:\n *\n *     `<mc-tag>\n *       <mc-icon mcTagRemove>cancel</mc-icon>\n *     </mc-tag>`\n *\n * You *may* use a custom icon, but you may need to override the `mc-tag-remove` positioning\n * styles to properly center the icon within the tag.\n */\n@Directive({\n    selector: '[mcTagRemove]',\n    host: {\n        class: 'mc-tag-remove mc-tag-trailing-icon',\n        '[attr.tabindex]': '-1',\n        '(click)': 'handleClick($event)',\n        '(focus)': 'focus($event)'\n    }\n})\nexport class McTagRemove {\n    constructor(protected parentTag: McTag) {}\n\n    focus($event): void {\n        $event.stopPropagation();\n    }\n\n    /** Calls the parent tag's public `remove()` method if applicable. */\n    handleClick(event: Event): void {\n        if (this.parentTag.removable) {\n            this.parentTag.remove();\n        }\n\n        // We need to stop event propagation because otherwise the event will bubble up to the\n        // form field and cause the `onContainerClick` method to be invoked. This method would then\n        // reset the focused tag that has been focused after tag removal. Usually the parent\n        // the parent click listener of the `McTag` would prevent propagation, but it can happen\n        // that the tag is being removed before the event bubbles up.\n        event.stopPropagation();\n    }\n}\n","import { InjectionToken } from '@angular/core';\n\n\n/** Default options, for the chips module, that can be overridden. */\n// tslint:disable-next-line: naming-convention\nexport interface McTagsDefaultOptions {\n    /** The list of key codes that will trigger a chipEnd event. */\n    separatorKeyCodes: number[] | Set<number>;\n}\n\n/** Injection token to be used to override the default options for the chips module. */\nexport const MC_TAGS_DEFAULT_OPTIONS = new InjectionToken<McTagsDefaultOptions>('mc-tags-default-options');\n"],"names":["nextUniqueId","tslib_1.__extends"],"mappings":"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"}