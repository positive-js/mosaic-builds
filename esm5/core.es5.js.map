{"version":3,"file":"core.es5.js","sources":["../../../src/lib/core/index.ts","../../../src/lib/core/selection/index.ts","../../../src/lib/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../../src/lib/core/error/error-options.ts","../../../src/lib/core/line/line.ts","../../../src/lib/core/common-behaviors/error-state.ts","../../../src/lib/core/common-behaviors/tabindex.ts","../../../src/lib/core/common-behaviors/color.ts","../../../src/lib/core/common-behaviors/disabled.ts","../../../src/lib/core/common-behaviors/common-module.ts","../../../src/lib/core/utils/utils.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {MC_SANITY_CHECKS_FACTORY as ɵa} from './common-behaviors/common-module';","import { NgModule } from '@angular/core';\n\nimport { McPseudoCheckbox } from './pseudo-checkbox/pseudo-checkbox';\n\n\n@NgModule({\n    exports: [McPseudoCheckbox],\n    declarations: [McPseudoCheckbox]\n})\nexport class McPseudoCheckboxModule {}\n\n\nexport * from './pseudo-checkbox/pseudo-checkbox';\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\n\nexport type McPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mc-primary .mc-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mc-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n@Component({\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'mc-pseudo-checkbox',\n    styleUrls: ['pseudo-checkbox.css'],\n    template: '',\n    host: {\n        class: 'mc-pseudo-checkbox',\n        '[class.mc-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n        '[class.mc-pseudo-checkbox-checked]': 'state === \"checked\"',\n        '[class.mc-pseudo-checkbox-disabled]': 'disabled'\n    }\n})\nexport class McPseudoCheckbox {\n    // Display state of the checkbox.\n    @Input() state: McPseudoCheckboxState = 'unchecked';\n\n    // Whether the checkbox is disabled.\n    @Input() disabled: boolean = false;\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroupDirective, NgForm, FormControl } from '@angular/forms';\n\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n@Injectable()\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\n\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n@Injectable({ providedIn: 'root' })\nexport class ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\n","import { NgModule, Directive, ElementRef, QueryList } from '@angular/core';\n\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(McLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({\n    selector: '[mc-line], [mcLine]',\n    host: { class: 'mc-line' }\n})\nexport class McLine {}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nexport class McLineSetter {\n    constructor(private _lines: QueryList<McLine>, private _element: ElementRef) {\n        this._setLineClass(this._lines.length);\n\n        this._lines.changes.subscribe(() => {\n            this._setLineClass(this._lines.length);\n        });\n    }\n\n    private _setLineClass(count: number): void {\n        this._resetClasses();\n        if (count === 2 || count === 3) {\n            this._setClass(`mc-${count}-line`, true);\n        } else if (count > 3) {\n            this._setClass(`mc-multi-line`, true);\n        }\n    }\n\n    private _resetClasses(): void {\n        this._setClass('mc-2-line', false);\n        this._setClass('mc-3-line', false);\n        this._setClass('mc-multi-line', false);\n    }\n\n    private _setClass(className: string, isAdd: boolean): void {\n        if (isAdd) {\n            this._element.nativeElement.classList.add(className);\n        } else {\n            this._element.nativeElement.classList.remove(className);\n        }\n    }\n}\n\n@NgModule({\n    imports: [],\n    exports: [McLine],\n    declarations: [McLine]\n})\nexport class McLineModule {}\n","import { FormControl, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { ErrorStateMatcher } from '../error/error-options';\nimport { Constructor } from './constructor';\n\n/** @docs-private */\nexport interface CanUpdateErrorState {\n    readonly stateChanges: Subject<void>;\n    errorState: boolean;\n    errorStateMatcher: ErrorStateMatcher;\n\n    updateErrorState();\n}\n\n/** @docs-private */\nexport interface HasErrorState {\n    _parentFormGroup: FormGroupDirective;\n    _parentForm: NgForm;\n    _defaultErrorStateMatcher: ErrorStateMatcher;\n    ngControl: NgControl;\n}\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T)\n    : Constructor<CanUpdateErrorState> & T {\n    return class extends base {\n        /** Whether the component is in an error state. */\n        errorState: boolean = false;\n\n        /**\n         * Stream that emits whenever the state of the input changes such that the wrapping\n         * `MсFormField` needs to run change detection.\n         */\n        readonly stateChanges = new Subject<void>();\n\n        errorStateMatcher: ErrorStateMatcher;\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this._parentFormGroup || this._parentForm;\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control as FormControl : null;\n            const newState = matcher.isErrorState(control, parent);\n\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n","import { Constructor } from './constructor';\nimport { CanDisable } from './disabled';\n\n\nexport interface HasTabIndex {\n    tabIndex: number;\n}\n\n// Mixin to augment a directive with a `tabIndex` property.\nexport function mixinTabIndex<\n        T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0): Constructor<HasTabIndex\n    > & T {\n    return class extends base {\n        private _tabIndex: number = defaultTabIndex;\n\n        get tabIndex(): number {\n            return this.disabled ? -1 : this._tabIndex;\n        }\n\n        set tabIndex(value: number) {\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n    };\n}\n","import { ElementRef } from '@angular/core';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanColor {\n    color: ThemePalette;\n}\n\nexport interface HasElementRef {\n    _elementRef: ElementRef;\n}\n\nexport enum ThemePalette {\n    Primary = 'primary',\n    Second = 'second',\n    Warn = 'warn',\n    Default = 'second'\n}\n\n/** Mixin to augment a directive with a `color` property. */\nexport function mixinColor<T extends Constructor<HasElementRef>>(base: T, defaultColor: ThemePalette = ThemePalette.Default): Constructor<CanColor> & T {\n    return class extends base {\n        private _color: ThemePalette;\n\n        get color(): ThemePalette {\n            return this._color;\n        }\n\n        set color(value: ThemePalette) {\n            const colorPalette = value || defaultColor;\n\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mc-${this._color}`);\n                }\n\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mc-${colorPalette}`);\n                }\n\n                this._color = colorPalette;\n            }\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n\n            // Set the default color that can be specified from the mixin.\n            this.color = defaultColor;\n        }\n    };\n}\n\n","import { toBoolean } from '../utils/index';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanDisable {\n    disabled: boolean;\n}\n\n// Mixin to augment a directive with a `disabled` property.\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): Constructor<CanDisable> & T {\n    return class extends base {\n        private _disabled: boolean = false;\n\n        get disabled() {\n            return this._disabled;\n        }\n\n        set disabled(value: any) {\n            this._disabled = toBoolean(value);\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n    };\n}\n","import { NgModule, InjectionToken, Optional, Inject, isDevMode } from '@angular/core';\nimport { BidiModule } from '@ptsecurity/cdk/bidi';\n\n\n// Injection token that configures whether the Mosaic sanity checks are enabled.\nexport const MC_SANITY_CHECKS = new InjectionToken<boolean>('mc-sanity-checks', {\n    providedIn: 'root',\n    factory: MC_SANITY_CHECKS_FACTORY\n});\n\nexport function MC_SANITY_CHECKS_FACTORY(): boolean {\n    return true;\n}\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Mosaic\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\n@NgModule({\n    imports: [ BidiModule ],\n    exports: [ BidiModule ]\n})\nexport class McCommonModule {\n    // Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n    private _hasDoneGlobalChecks = false;\n\n    // Reference to the global `document` object.\n    private _document = typeof document === 'object' && document ? document : null;\n\n    // Reference to the global 'window' object.\n    private _window = typeof window === 'object' && window ? window : null;\n\n    constructor(@Optional() @Inject(MC_SANITY_CHECKS) private _sanityChecksEnabled: boolean) {\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n\n    // Whether any sanity checks are enabled\n    private _areChecksEnabled(): boolean {\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    }\n\n    // Whether the code is running in tests.\n    private _isTestEnv() {\n        return this._window && (this._window['__karma__'] || this._window['jasmine']);\n    }\n\n    private _checkDoctypeIsDefined(): void {\n        if (this._document && !this._document.doctype) {\n            console.warn(\n                'Current document does not have a doctype. This may cause ' +\n                'some Mosaic components not to behave as expected.'\n            );\n        }\n    }\n\n    private _checkThemeIsPresent(): void {\n        if (this._document && typeof getComputedStyle === 'function') {\n            const testElement = this._document.createElement('div');\n\n            testElement.classList.add('mc-theme-loaded-marker');\n            this._document.body.appendChild(testElement);\n\n            const computedStyle = getComputedStyle(testElement);\n\n            // In some situations, the computed style of the test element can be null. For example in\n            // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n            if (computedStyle && computedStyle.display !== 'none') {\n                console.warn(\n                    'Could not find Mosaic core theme. Most Mosaic ' +\n                    'components may not work as expected. For more info refer ' +\n                    'to the theming guide: link there'\n                );\n            }\n\n            this._document.body.removeChild(testElement);\n        }\n    }\n}\n","\nexport function isBoolean(val: any): val is boolean { return typeof val === 'boolean'; }\n\nexport function toBoolean(value: any): boolean {\n    return value != null && `${value}` !== 'false';\n}\n"],"names":["tslib_1.__decorate","tslib_1.__extends","tslib_1.__param"],"mappings":"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"}