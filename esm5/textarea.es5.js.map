{"version":3,"file":"textarea.es5.js","sources":["../../../src/lib/textarea/index.ts","../../../src/lib/textarea/textarea.module.ts","../../../src/lib/textarea/textarea.component.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McTextarea } from './textarea.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McTextarea],\n    declarations: [McTextarea]\n})\nexport class McTextareaModule {\n}\n","import {\n    Directive, DoCheck, ElementRef, Inject,\n    Input, OnChanges, OnDestroy, Optional,\n    Self, InjectionToken, NgZone, OnInit\n} from '@angular/core';\nimport { FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { fromEvent, Subscription, Subject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\n\nexport const MC_TEXTAREA_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_TEXTAREA_VALUE_ACCESSOR');\n\nlet nextUniqueId = 0;\n\nconst ROW_SEPARATOR = '\\n';\n\nexport class McTextareaBase {\n    constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n                public _parentForm: NgForm,\n                public _parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McTextareaMixinBase: CanUpdateErrorStateCtor & typeof McTextareaBase = mixinErrorState(McTextareaBase);\n\n@Directive({\n    selector: 'textarea[mcTextarea]',\n    exportAs: 'mcTextarea',\n    host: {\n        class: 'mc-textarea',\n        '[class.mc-textarea-resizable]': '!canGrow',\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[attr.aria-invalid]': 'errorState',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': 'focusChanged(false)',\n        '(focus)': 'focusChanged(true)'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McTextarea }]\n})\nexport class McTextarea extends McTextareaMixinBase implements McFormFieldControl<any>, OnInit, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    @Input() canGrow: boolean = true;\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-textarea';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this.uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this.valueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this.valueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected uid = `mc-textsrea-${nextUniqueId++}`;\n    protected previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n\n    private valueAccessor: { value: any };\n    private growSubscription: Subscription;\n\n    private lineHeight: number = 0;\n    private freeRowsHeight: number = 0;\n    private minHeight: number = 0;\n\n    constructor(protected elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_TEXTAREA_VALUE_ACCESSOR) inputValueAccessor: any,\n                private ngZone: NgZone) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the textarea value\n        // accessor.\n        this.valueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        const growObserver = fromEvent(elementRef.nativeElement, 'input')\n            /*.pipe(\n                map((event: any) => this.getGrowHeight()),\n                // map((event: any) => event.target.scrollHeight),\n                distinctUntilChanged()\n            )*/;\n        this.growSubscription = growObserver.subscribe(this.grow.bind(this));\n    }\n\n    ngOnInit() {\n        setTimeout(() => this.grow(), 0);\n        this.lineHeight = parseInt(getComputedStyle(this.elementRef.nativeElement).lineHeight!, 10);\n\n        const paddingTop = parseInt(getComputedStyle(this.elementRef.nativeElement).paddingTop!, 10);\n        const paddingBottom = parseInt(getComputedStyle(this.elementRef.nativeElement).paddingBottom!, 10);\n\n        // tslint:disable-next-line:no-magic-numbers\n        this.minHeight = this.lineHeight * 2 + paddingTop + paddingBottom;\n        this.freeRowsHeight = this.lineHeight;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        this.growSubscription.unsubscribe();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    /** Grow textarea height to avoid vertical scroll  */\n    grow() {\n        if (!this.canGrow) {\n            return;\n        }\n\n        this.ngZone.runOutsideAngular(() => {\n            const textarea = this.elementRef.nativeElement;\n\n            const outerHeight = parseInt(window.getComputedStyle(textarea).height!, 10);\n            const diff = outerHeight - textarea.clientHeight;\n\n            textarea.style.height = 0; // this line is important to height recalculation\n\n            const height = Math.max(this.minHeight, textarea.scrollHeight + diff + this.freeRowsHeight);\n            textarea.style.height = `${height}px`;\n        });\n    }\n\n    /** Focuses the textarea. */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the textarea changes. */\n    focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native textarea `value` property. */\n    protected dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the textarea is invalid based on the native validation. */\n    protected isBadInput(): boolean {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this.elementRef.nativeElement as HTMLTextAreaElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private getGrowHeight(): number {\n        const textarea = this.elementRef.nativeElement;\n        const outerHeight = parseInt(window.getComputedStyle(textarea).height!.toString(), 10);\n        const diff = outerHeight - textarea.clientHeight;\n\n        return Math.max(this.minHeight, textarea.scrollHeight + diff);\n    }\n}\n"],"names":["tslib_1.__decorate","tslib_1.__metadata","tslib_1.__param","tslib_1.__extends"],"mappings":"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"}