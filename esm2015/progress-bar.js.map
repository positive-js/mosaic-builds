{"version":3,"file":"progress-bar.js","sources":["../../../src/lib/progress-bar/index.ts","../../../src/lib/progress-bar/progress-bar.module.ts","../../../src/lib/progress-bar/progress-bar.component.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McProgressBar\n} from './progress-bar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressBar\n    ],\n    declarations: [\n        McProgressBar\n    ]\n})\nexport class McProgressBarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressBarMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressBarBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressBarMixinBase:\n    CanColorCtor &\n    typeof McProgressBarBase =\n        mixinColor(McProgressBarBase);\n\n@Component({\n    selector: 'mc-progress-bar',\n    templateUrl: './progress-bar.component.html',\n    styleUrls: ['./progress-bar.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-bar',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressBar extends _McProgressBarMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-bar-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressBarMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n}\n"],"names":["tslib_1.__decorate","tslib_1.__metadata"],"mappings":";;;;;;;;;;;;AEYA,IAAI,UAAU,GAAG,CAAC,CAAC;AAEnB,MAAM,WAAW,GAAG,CAAC,CAAC;AACtB,MAAM,WAAW,GAAG,GAAG,CAAC;AAExB,AAAA,MAAa,iBAAiB,CAA9B;IACI,WAAJ,CAAuB,WAAuB,EAA9C;QAAuB,IAAvB,CAAA,WAAkC,GAAX,WAAW,CAAY;KAAI;CACjD;AAED,AAAA,MAAa,uBAAuB,GAG5B,UAAU,CAAC,iBAAiB,CAAC,CAAC;AAatC,AAAA,IAAa,aAAa,GAA1B,MAAa,aAAc,SAAQ,uBAAuB,CAA1D;IAMI,WAAJ,CAAgB,UAAsB,EAAtC;QACQ,KAAK,CAAC,UAAU,CAAC,CAAC;QANb,IAAb,CAAA,EAAe,GAAW,CAA1B,gBAAA,EAA6C,UAAU,EAAE,CAAzD,CAA2D,CAAC;QAC/C,IAAb,CAAA,KAAkB,GAAW,CAAC,CAAC;QAClB,IAAb,CAAA,IAAiB,GAAoB,aAAa,CAAC;QACtC,IAAb,CAAA,KAAkB,GAAiB,YAAY,CAAC,OAAO,CAAC;KAInD;IAED,IAAI,UAAU,GAAlB;QACQ,OAAO,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,WAAW,CAAC;KACjF;CACJ,CAAA;AAZYA,UAAb,CAAA;IAAK,KAAK,EAAE;;CAAZ,EAAA,aAAA,CAAA,SAAA,EAAA,IAAA,EAAA,KAAA,CAAA,CAA4D,CAA5D;AACaA,UAAb,CAAA;IAAK,KAAK,EAAE;;CAAZ,EAAA,aAAA,CAAA,SAAA,EAAA,OAAA,EAAA,KAAA,CAAA,CAA+B,CAA/B;AACaA,UAAb,CAAA;IAAK,KAAK,EAAE;;CAAZ,EAAA,aAAA,CAAA,SAAA,EAAA,MAAA,EAAA,KAAA,CAAA,CAAmD,CAAnD;AACaA,UAAb,CAAA;IAAK,KAAK,EAAE;;CAAZ,EAAA,aAAA,CAAA,SAAA,EAAA,OAAA,EAAA,KAAA,CAAA,CAAwD,CAAxD;AAJa,aAAa,GAA1BA,UAAA,CAAA;IAXC,SAAS,CAAC;QACP,QAAQ,EAAE,iBAAiB;QAC3B,QAAJ,EAAA,uVAAA;QACI,MAAJ,EAAA,CAAa,udAAb,CAAA;QACI,eAAe,EAAE,uBAAuB,CAAC,MAAM;QAC/C,aAAa,EAAE,iBAAiB,CAAC,IAAI;QACrC,IAAI,EAAE;YACF,KAAK,EAAE,iBAAiB;YACxB,WAAW,EAAE,IAAI;SACpB;KACJ,CAAC;IAOFC,UAAA,CAAA,mBAAA,EAAA,CAA4B,UAAU,CAAtC,CAAA;CANA,EAAa,aAAa,CAazB,CAbD;;ADfA,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB,CAAhC;CAAmC,CAAA;AAAtB,mBAAmB,GAAhCD,UAAA,CAAA;IAZC,QAAQ,CAAC;QACN,OAAO,EAAE;YACL,YAAY;YACZ,cAAc;SACjB;QACD,OAAO,EAAE;YACL,aAAa;SAChB;QACD,YAAY,EAAE;YACV,aAAa;SAChB;KACJ,CAAC;CACF,EAAa,mBAAmB,CAAG,CAAnC;;ADtBA;;GAEG;;;;"}