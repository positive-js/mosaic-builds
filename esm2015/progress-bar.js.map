{"version":3,"file":"progress-bar.js","sources":["../../../src/lib/progress-bar/index.ts","../../../src/lib/progress-bar/progress-bar.module.ts","../../../src/lib/progress-bar/progress-bar.component.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McProgressBar\n} from './progress-bar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressBar\n    ],\n    declarations: [\n        McProgressBar\n    ]\n})\nexport class McProgressBarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressBarMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressBarBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressBarMixinBase = mixinColor(McProgressBarBase);\n\n@Component({\n    selector: 'mc-progress-bar',\n    templateUrl: './progress-bar.component.html',\n    styleUrls: ['./progress-bar.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-bar',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressBar extends _McProgressBarMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-bar-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressBarMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n}\n"],"names":[],"mappings":";;;;;;;;;;;AEYA,IAAI,UAAU,GAAG,CAAC,CAAC;AAEnB,MAAM,WAAW,GAAG,CAAC,CAAC;AACtB,MAAM,WAAW,GAAG,GAAG,CAAC;AAExB,AAAA,MAAA,iBAAA,CAAA;IACI,WAAJ,CAAuB,WAAuB,EAA9C;QAAuB,IAAvB,CAAA,WAAkC,GAAX,WAAW,CAAY;KAAI;CACjD;AAED,AAAA,MAAa,uBAAuB,GAAG,UAAU,CAAC,iBAAiB,CAAC,CAAC;AAarE,AAAA,MAAA,aAA2B,SAAQ,uBAAuB,CAA1D;IAMI,WAAJ,CAAgB,UAAsB,EAAtC;QACQ,KAAK,CAAC,UAAU,CAAC,CAAC;QANb,IAAb,CAAA,EAAe,GAAW,CAA1B,gBAAA,EAA6C,UAAU,EAAE,CAAzD,CAA2D,CAAC;QAC/C,IAAb,CAAA,KAAkB,GAAW,CAAC,CAAC;QAClB,IAAb,CAAA,IAAiB,GAAoB,aAAa,CAAC;QACtC,IAAb,CAAA,KAAkB,GAAiB,YAAY,CAAC,OAAO,CAAC;KAInD;IAED,IAAI,UAAU,GAAlB;QACQ,OAAO,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,WAAW,CAAC;KACjF;;;IAvBL,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW;gBACP,QAAQ,EAAE,iBAAiB;gBAC3B,QAAJ,EAAA,uVAAA;gBACI,MAAJ,EAAA,CAAa,udAAb,CAAA;gBACI,eAAe,EAAE,uBAAuB,CAAC,MAAM;gBAC/C,aAAa,EAAE,iBAAiB,CAAC,IAAI;gBACrC,IAAI,EAAE;oBACF,KAAK,EAAE,iBAAiB;oBACxB,WAAW,EAAE,IAAI;iBACpB;aACJ,EAAD,EAAA;;;;IA7BA,EAAA,IAAA,EAAI,UAAU,EAAd;;;IA+BA,EAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,CAAA;IACA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,CAAA;IACA,IAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,CAAA;IACA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,CAAA;;;ADhBA,MAAA,mBAAA,CAAA;;;IAZA,EAAA,IAAA,EAAC,QAAQ,EAAT,IAAA,EAAA,CAAU;gBACN,OAAO,EAAE;oBACL,YAAY;oBACZ,cAAc;iBACjB;gBACD,OAAO,EAAE;oBACL,aAAa;iBAChB;gBACD,YAAY,EAAE;oBACV,aAAa;iBAChB;aACJ,EAAD,EAAA;;;ADrBA;;GAEG;;;;"}