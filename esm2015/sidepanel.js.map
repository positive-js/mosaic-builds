{"version":3,"file":"sidepanel.js","sources":["../../../packages/mosaic/sidepanel/sidepanel.module.ts","../../../packages/mosaic/sidepanel/sidepanel-directives.ts","../../../packages/mosaic/sidepanel/sidepanel.service.ts","../../../packages/mosaic/sidepanel/sidepanel-ref.ts","../../../packages/mosaic/sidepanel/sidepanel-container.component.ts","../../../packages/mosaic/sidepanel/sidepanel-animations.ts","../../../packages/mosaic/sidepanel/sidepanel-config.ts"],"sourcesContent":["import { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McSidepanelContainerComponent } from './sidepanel-container.component';\nimport {\n    McSidepanelActions,\n    McSidepanelBody,\n    McSidepanelClose,\n    McSidepanelFooter,\n    McSidepanelHeader\n} from './sidepanel-directives';\nimport { McSidepanelService } from './sidepanel.service';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        PortalModule,\n        McCommonModule,\n        McIconModule\n    ],\n    providers: [McSidepanelService],\n    declarations: [\n        McSidepanelContainerComponent,\n        McSidepanelClose,\n        McSidepanelHeader,\n        McSidepanelBody,\n        McSidepanelFooter,\n        McSidepanelActions\n    ],\n    entryComponents: [McSidepanelContainerComponent],\n    exports: [\n        McSidepanelContainerComponent,\n        McSidepanelClose,\n        McSidepanelHeader,\n        McSidepanelBody,\n        McSidepanelFooter,\n        McSidepanelActions\n    ]\n})\nexport class McSidepanelModule {}\n","import { Component, Directive, ElementRef, Input, OnChanges, OnInit, Optional, SimpleChanges } from '@angular/core';\n\nimport { McSidepanelRef } from './sidepanel-ref';\nimport { McSidepanelService } from './sidepanel.service';\n\n\n/**\n * Button that will close the current sidepanel.\n */\n@Directive({\n    selector: 'button[mc-sidepanel-close], button[mcSidepanelClose]',\n    host: {\n        '(click)': 'sidepanelRef.close(sidepanelResult)',\n        class: 'mc-sidepanel-close'\n    }\n})\nexport class McSidepanelClose implements OnInit, OnChanges {\n    @Input('mc-sidepanel-close') sidepanelResult: any;\n\n    @Input('mcSidepanelClose') mcSidepanelClose: any;\n\n    constructor(\n        @Optional() public sidepanelRef: McSidepanelRef,\n        private elementRef: ElementRef<HTMLElement>,\n        private sidepanelService: McSidepanelService\n    ) {}\n\n    ngOnInit() {\n        if (!this.sidepanelRef) {\n            // When this directive is included in a sidepanel via TemplateRef (rather than being\n            // in a Component), the SidepanelRef isn't available via injection because embedded\n            // views cannot be given a custom injector. Instead, we look up the SidepanelRef by\n            // ID.\n            // This must occur in `onInit`, as the ID binding for the sidepanel container won't\n            // be resolved at constructor time. We use setTimeout by same reason.\n            setTimeout(() => {\n                this.sidepanelRef = getClosestSidepanel(this.elementRef, this.sidepanelService.openedSidepanels)!;\n            });\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const proxiedChange = changes.mcSidepanelClose || changes.sidepanelResult;\n\n        if (proxiedChange) {\n            this.sidepanelResult = proxiedChange.currentValue;\n        }\n    }\n}\n\n/**\n * Header of a sidepanel.\n */\n@Component({\n    selector: 'mc-sidepanel-header',\n    template: `\n        <div class=\"mc-sidepanel-title\">\n            <ng-content></ng-content>\n        </div>\n        <button *ngIf=\"closeable\" mc-sidepanel-close>\n            <span class=\"mc-sidepanel-close-x\">\n                <i mc-icon=\"mc-close-L_16\" class=\"mc-icon mc-icon_light\" color=\"second\"></i>\n            </span>\n        </button>\n    `,\n    host: {\n        class: 'mc-sidepanel-header'\n    }\n})\nexport class McSidepanelHeader {\n    @Input() closeable: boolean;\n}\n\n/**\n * Scrollable content container of a sidepanel.\n */\n@Directive({\n    selector: 'mc-sidepanel-body, [mc-sidepanel-body], mcSidepanelBody',\n    host: {\n        class: 'mc-sidepanel-body'\n    }\n})\nexport class McSidepanelBody {}\n\n/**\n * Footer of a sidepanel.\n */\n@Directive({\n    selector: 'mc-sidepanel-footer, [mc-sidepanel-footer], mcSidepanelFooter',\n    host: {\n        class: 'mc-sidepanel-footer'\n    }\n})\nexport class McSidepanelFooter {}\n\n/**\n * Actions block of a sidepanel footer.\n */\n@Directive({\n    selector: 'mc-sidepanel-actions, [mc-sidepanel-actions], mcSidepanelActions',\n    host: {\n        class: 'mc-sidepanel-actions'\n    }\n})\nexport class McSidepanelActions {}\n\n/**\n * Finds the closest McSidepanelRef to an element by looking at the DOM.\n * @param element Element relative to which to look for a sidepanel.\n * @param openSidepanels References to the currently-open sidepanels.\n */\nfunction getClosestSidepanel(element: ElementRef<HTMLElement>, openSidepanels: McSidepanelRef[]) {\n    let parent: HTMLElement | null = element.nativeElement.parentElement;\n\n    while (parent && !parent.classList.contains('mc-sidepanel-container')) {\n        parent = parent.parentElement;\n    }\n\n    return parent ? openSidepanels.find((sidepanel) => sidepanel.id === parent!.id) : null;\n}\n","import { Overlay, OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\nimport { ComponentPortal, ComponentType, PortalInjector, TemplatePortal } from '@angular/cdk/portal';\nimport {\n    ComponentRef,\n    Inject,\n    Injectable,\n    InjectionToken,\n    Injector, OnDestroy,\n    Optional,\n    SkipSelf,\n    TemplateRef\n} from '@angular/core';\n\nimport { MC_SIDEPANEL_DATA, McSidepanelConfig } from './sidepanel-config';\nimport {\n    McSidepanelContainerComponent,\n    MC_SIDEPANEL_WITH_INDENT,\n    MC_SIDEPANEL_WITH_SHADOW\n} from './sidepanel-container.component';\nimport { McSidepanelRef } from './sidepanel-ref';\n\n\n/** Injection token that can be used to specify default sidepanel options. */\nexport const MC_SIDEPANEL_DEFAULT_OPTIONS =\n    new InjectionToken<McSidepanelConfig>('mc-sidepanel-default-options');\n\n@Injectable()\nexport class McSidepanelService implements OnDestroy {\n    private openedSidepanelsAtThisLevel: McSidepanelRef[] = [];\n\n    /** Keeps track of the currently-open sidepanels. */\n    get openedSidepanels(): McSidepanelRef[] {\n        return this.parentSidepanelService ? this.parentSidepanelService.openedSidepanels :\n            this.openedSidepanelsAtThisLevel;\n    }\n\n    constructor(\n        private overlay: Overlay,\n        private injector: Injector,\n        @Optional() @Inject(MC_SIDEPANEL_DEFAULT_OPTIONS) private defaultOptions: McSidepanelConfig,\n        @Optional() @SkipSelf() private parentSidepanelService: McSidepanelService) {\n    }\n\n    ngOnDestroy() {\n        // Only close the sidepanels at this level on destroy\n        // since the parent service may still be active.\n        this.closeSidepanels(this.openedSidepanelsAtThisLevel);\n    }\n\n    open<T, D = any>(componentOrTemplateRef: ComponentType<T> | TemplateRef<T>,\n                     config?: McSidepanelConfig<D>): McSidepanelRef<T> {\n        const fullConfig = {\n            ...(this.defaultOptions || new McSidepanelConfig()),\n            ...config\n        };\n\n        if (fullConfig.id && this.getSidepanelById(fullConfig.id)) {\n            throw Error(`Sidepanel with id \"${fullConfig.id}\" exists already. The sidepanel id must be unique.`);\n        }\n\n        const overlayRef = this.createOverlay(fullConfig);\n        const container = this.attachContainer(overlayRef, fullConfig);\n        const ref = new McSidepanelRef(container, overlayRef, fullConfig);\n\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            container.attachTemplatePortal(new TemplatePortal<T>(componentOrTemplateRef, null!, {\n                $implicit: fullConfig.data,\n                sidepanelRef: ref\n            } as any));\n        } else {\n            const injector = this.createInjector(fullConfig, ref, container);\n            const portal = new ComponentPortal(componentOrTemplateRef, undefined, injector);\n            const contentRef = container.attachComponentPortal(portal);\n\n            ref.instance = contentRef.instance;\n        }\n\n        this.openedSidepanels.push(ref);\n        ref.afterClosed().subscribe(() => this.removeOpenSidepanel(ref));\n        container.enter();\n\n        return ref;\n    }\n\n    /**\n     * Closes all of the currently-open sidepanels.\n     */\n    closeAll(): void {\n        this.closeSidepanels(this.openedSidepanels);\n    }\n\n    /**\n     * Finds an open sidepanel by its id.\n     * @param id ID to use when looking up the sidepanel.\n     */\n    getSidepanelById(id: string): McSidepanelRef | undefined {\n        return this.openedSidepanels.find((sidepanel) => sidepanel.id === id);\n    }\n\n    /**\n     * Attaches the sidepanel container component to the overlay.\n     */\n    private attachContainer(overlayRef: OverlayRef, config: McSidepanelConfig): McSidepanelContainerComponent {\n        const openedSidepanelsWithSamePosition = this.getOpenedSidepanelsWithSamePosition(config);\n\n        const injector = new PortalInjector(this.injector, new WeakMap<any>([\n            [McSidepanelConfig, config],\n            [MC_SIDEPANEL_WITH_INDENT, openedSidepanelsWithSamePosition.length >= 1],\n            [MC_SIDEPANEL_WITH_SHADOW, openedSidepanelsWithSamePosition.length < 2] // tslint:disable-line\n        ]));\n\n        const containerPortal = new ComponentPortal(McSidepanelContainerComponent, undefined, injector);\n        const containerRef: ComponentRef<McSidepanelContainerComponent> = overlayRef.attach(containerPortal);\n\n        return containerRef.instance;\n    }\n\n    /**\n     * Creates a custom injector to be used inside the sidepanel. This allows a component loaded inside\n     * of a sidepanel to close itself and, optionally, to return a value.\n     * @param config Config object that is used to construct the sidepanel.\n     * @param sidepanelRef Reference to the sidepanel.\n     * @param sidepanelContainer Sidepanel container element that wraps all of the contents.\n     * @returns The custom injector that can be used inside the sidepanel.\n     */\n    private createInjector<T>(\n        config: McSidepanelConfig,\n        sidepanelRef: McSidepanelRef<T>,\n        sidepanelContainer: McSidepanelContainerComponent): PortalInjector {\n\n        // The McSidepanelContainerComponent is injected in the portal as the McSidepanelContainerComponent and\n        // the sidepanel's content are created out of the same ViewContainerRef and as such, are siblings for injector\n        // purposes. To allow the hierarchy that is expected, the McSidepanelContainerComponent is explicitly\n        // added to the injection tokens.\n        const injectionTokens = new WeakMap<any>([\n            [McSidepanelContainerComponent, sidepanelContainer],\n            [MC_SIDEPANEL_DATA, config.data],\n            [McSidepanelRef, sidepanelRef]\n        ]);\n\n        return new PortalInjector(this.injector, injectionTokens);\n    }\n\n    /**\n     * Creates a new overlay and places it in the correct location.\n     * @param config The user-specified sidepanel config.\n     */\n    private createOverlay(config: McSidepanelConfig): OverlayRef {\n        const overlayConfig = new OverlayConfig({\n            hasBackdrop: config.hasBackdrop,\n            backdropClass: this.getBackdropClass(config),\n            maxWidth: '100%',\n            panelClass: config.overlayPanelClass,\n            scrollStrategy: this.overlay.scrollStrategies.block(),\n            positionStrategy: this.overlay.position().global()\n        });\n\n        return this.overlay.create(overlayConfig);\n    }\n\n    private closeSidepanels(sidepanels: McSidepanelRef[]) {\n        const reversedOpenedSidepanels = [...sidepanels.reverse()];\n\n        reversedOpenedSidepanels.forEach((sidepanelRef: McSidepanelRef) => {\n            sidepanelRef.close();\n        });\n    }\n\n    private getBackdropClass(config: McSidepanelConfig): string {\n        const hasOpenedSidepanelWithBackdrop =\n            this.openedSidepanels.some((sidepanelRef) => sidepanelRef.config.hasBackdrop!);\n\n        return config.requiredBackdrop || !hasOpenedSidepanelWithBackdrop ? 'cdk-overlay-dark-backdrop' :\n            'cdk-overlay-transparent-backdrop';\n    }\n\n    private getOpenedSidepanelsWithSamePosition(config: McSidepanelConfig): McSidepanelRef[] {\n        return this.openedSidepanels.filter((sidepanelRef) => sidepanelRef.config.position === config.position);\n    }\n\n    /**\n     * Removes a sidepanel from the array of open sidepanels.\n     * @param sidepanelRef Sidepanel to be removed.\n     */\n    private removeOpenSidepanel(sidepanelRef: McSidepanelRef) {\n        const index = this.openedSidepanels.indexOf(sidepanelRef);\n\n        if (index > -1) {\n            this.openedSidepanels.splice(index, 1);\n        }\n    }\n}\n","import { OverlayRef } from '@angular/cdk/overlay';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { merge, Observable, Subject } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\n\nimport { McSidepanelAnimationState } from './sidepanel-animations';\nimport { McSidepanelConfig } from './sidepanel-config';\nimport { McSidepanelContainerComponent } from './sidepanel-container.component';\n\n\n// Counter for unique sidepanel ids.\nlet uniqueId = 0;\n\nexport class McSidepanelRef<T = any, R = any> {\n    readonly id: string;\n\n    /** Instance of the component making up the content of the sidepanel. */\n    instance: T;\n\n    /** Subject for notifying the user that the sidepanel has been closed and dismissed. */\n    private readonly afterClosed$ = new Subject<R | undefined>();\n\n    /** Subject for notifying the user that the sidepanel has opened and appeared. */\n    private readonly afterOpened$ = new Subject<void>();\n\n    /** Result to be passed down to the `afterDismissed` stream. */\n    private result: R | undefined;\n\n    constructor(\n        public containerInstance: McSidepanelContainerComponent,\n        private overlayRef: OverlayRef,\n        public config: McSidepanelConfig) {\n\n        this.id = this.config.id || `mc-sidepanel-${uniqueId++}`;\n        this.containerInstance.id = this.id;\n\n        // Emit when opening animation completes\n        containerInstance.animationStateChanged.pipe(\n            filter(\n                (event) => event.phaseName === 'done' && event.toState === McSidepanelAnimationState.Visible\n            ),\n            take(1)\n        ).subscribe(() => {\n            this.afterOpened$.next();\n            this.afterOpened$.complete();\n        });\n\n        // Dispose overlay when closing animation is complete\n        containerInstance.animationStateChanged.pipe(\n            filter(\n                (event) => event.phaseName === 'done' && event.toState === McSidepanelAnimationState.Hidden\n            ),\n            take(1)\n        ).subscribe(() => {\n            overlayRef.dispose();\n            this.afterClosed$.next(this.result);\n            this.afterClosed$.complete();\n        });\n\n        if (!containerInstance.sidepanelConfig.disableClose) {\n            merge(\n                overlayRef.backdropClick(),\n                overlayRef.keydownEvents().pipe(\n                    // tslint:disable:deprecation\n                    // keyCode is deprecated, but IE11 and Edge don't support code property, which we need use instead\n                    filter((event) => event.keyCode === ESCAPE)\n                )\n            ).subscribe(() => this.close());\n        }\n    }\n\n    close(result?: R): void {\n        if (!this.afterClosed$.closed) {\n            // Transition the backdrop in parallel to the sidepanel.\n            this.containerInstance.animationStateChanged.pipe(\n                filter((event) => event.phaseName === 'done'),\n                take(1)\n            ).subscribe(() => this.overlayRef.detachBackdrop());\n\n            this.result = result;\n            this.containerInstance.exit();\n        }\n    }\n\n    /** Gets an observable that is notified when the sidepanel is finished closing. */\n    afterClosed(): Observable<R | undefined> {\n        return this.afterClosed$.asObservable();\n    }\n\n    /** Gets an observable that is notified when the sidepanel has opened and appeared. */\n    afterOpened(): Observable<void> {\n        return this.afterOpened$.asObservable();\n    }\n}\n","import { AnimationEvent } from '@angular/animations';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal } from '@angular/cdk/portal';\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ComponentRef,\n    ElementRef,\n    EmbeddedViewRef,\n    EventEmitter, Inject, InjectionToken,\n    OnDestroy,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport {\n    mcSidepanelAnimations,\n    McSidepanelAnimationState,\n    mcSidepanelTransformAnimation\n} from './sidepanel-animations';\nimport { McSidepanelConfig, McSidepanelPosition } from './sidepanel-config';\n\n\nexport const MC_SIDEPANEL_WITH_INDENT =\n    new InjectionToken<boolean>('mc-sidepanel-with-indent');\n\nexport const MC_SIDEPANEL_WITH_SHADOW =\n    new InjectionToken<boolean>('mc-sidepanel-with-shadow');\n\n@Component({\n    selector: 'mc-sidepanel-container',\n    templateUrl: './sidepanel-container.component.html',\n    styleUrls: ['./sidepanel.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    animations: [mcSidepanelAnimations.sidepanelState],\n    host: {\n        class: 'mc-sidepanel-container',\n        tabindex: '-1',\n        role: 'dialog',\n        'aria-modal': 'true',\n        '[attr.id]': 'id',\n        '[@state]': `{\n            value: animationState,\n            params: animationTransform\n        }`,\n        '(@state.start)': 'onAnimation($event)',\n        '(@state.done)': 'onAnimation($event)'\n    }\n})\nexport class McSidepanelContainerComponent extends BasePortalOutlet implements OnDestroy {\n    /** ID for the container DOM element. */\n    id: string;\n\n    /** The portal outlet inside of this container into which the content will be loaded. */\n    @ViewChild(CdkPortalOutlet, {static: true}) portalOutlet: CdkPortalOutlet;\n\n    /** The state of the sidepanel animations. */\n    animationState: McSidepanelAnimationState = McSidepanelAnimationState.Void;\n\n    animationTransform: { transformIn: string; transformOut: string };\n\n    /** Emits whenever the state of the animation changes. */\n    animationStateChanged = new EventEmitter<AnimationEvent>();\n\n    /** Whether the component has been destroyed. */\n    private destroyed: boolean;\n\n    constructor(\n        private elementRef: ElementRef<HTMLElement>,\n        private changeDetectorRef: ChangeDetectorRef,\n        public sidepanelConfig: McSidepanelConfig,\n        @Inject(MC_SIDEPANEL_WITH_INDENT) public withIndent: boolean,\n        @Inject(MC_SIDEPANEL_WITH_SHADOW) public withShadow: boolean) {\n        super();\n    }\n\n    ngOnDestroy(): void {\n        this.destroyed = true;\n    }\n\n    /** Attach a component portal as content to this sidepanel container. */\n    attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n        this.validatePortalAttached();\n        this.setAnimation();\n        this.setPanelClass();\n\n        return this.portalOutlet.attachComponentPortal(portal);\n    }\n\n    /** Attach a template portal as content to this sidepanel container. */\n    attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n        this.validatePortalAttached();\n        this.setAnimation();\n        this.setPanelClass();\n\n        return this.portalOutlet.attachTemplatePortal(portal);\n    }\n\n    /** Begin animation of the sidepanel entrance into view. */\n    enter(): void {\n        if (!this.destroyed) {\n            this.animationState = McSidepanelAnimationState.Visible;\n            this.changeDetectorRef.detectChanges();\n        }\n    }\n\n    /** Begin animation of the sidepanel exiting from view. */\n    exit(): void {\n        if (!this.destroyed) {\n            this.animationState = McSidepanelAnimationState.Hidden;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    onAnimation(event: AnimationEvent) {\n        this.animationStateChanged.emit(event);\n    }\n\n    private setAnimation() {\n        const position: McSidepanelPosition = this.sidepanelConfig.position!;\n\n        this.animationTransform = {\n            transformIn: mcSidepanelTransformAnimation[position].in,\n            transformOut: mcSidepanelTransformAnimation[position].out\n        };\n    }\n\n    private setPanelClass() {\n        const element: HTMLElement = this.elementRef.nativeElement;\n        const position: McSidepanelPosition = this.sidepanelConfig.position!;\n\n        element.classList.add(`mc-sidepanel-container_${position}`);\n\n        if (this.withShadow) {\n            element.classList.add('mc-sidepanel-container_shadowed');\n        }\n    }\n\n    private validatePortalAttached() {\n        if (this.portalOutlet.hasAttached()) {\n            throw Error('Attempting to attach sidepanel content after content is already attached');\n        }\n    }\n}\n","import { animate, AnimationTriggerMetadata, state, style, transition, trigger } from '@angular/animations';\nimport { AnimationCurves } from '@ptsecurity/mosaic/core';\n\nimport { McSidepanelPosition } from './sidepanel-config';\n\n\nexport enum McSidepanelAnimationState {\n    Void = 'void',\n    Visible = 'visible',\n    Hidden = 'hidden'\n}\n\n// TODO Find a way to use dynamic keys and avoid error \"Expression form not supported.\"\n// tslint:disable-next-line\nexport const mcSidepanelTransformAnimation: Record<McSidepanelPosition, { in: string; out: string }> = {\n    right: { in: 'translateX(100%)', out: 'translateX(0%)' },\n    left: { in: 'translateX(-100%)', out: 'translateX(0%)' },\n    top: { in: 'translateY(-100%)', out: 'translateY(0%)' },\n    bottom: { in: 'translateY(100%)', out: 'translateY(0%)' }\n};\n\nexport const mcSidepanelAnimations: {\n    readonly sidepanelState: AnimationTriggerMetadata;\n} = {\n    sidepanelState: trigger('state', [\n        state('hidden',\n            style({ transform: '{{transformIn}}' }),\n            { params: { transformIn: mcSidepanelTransformAnimation[McSidepanelPosition.Right].in }}\n        ),\n        state('visible',\n            style({ transform: '{{transformOut}}' }),\n            { params: { transformOut: mcSidepanelTransformAnimation[McSidepanelPosition.Right].out }}\n        ),\n        transition('visible => void, visible => hidden',\n            animate(`200ms ${AnimationCurves.AccelerationCurve}`)),\n        transition('void => visible',\n            animate(`200ms ${AnimationCurves.DecelerationCurve}`))\n    ])\n};\n","import { InjectionToken } from '@angular/core';\n\n\n/** Injection token that can be used to access the data that was passed in to a sidepanel. */\nexport const MC_SIDEPANEL_DATA = new InjectionToken<any>('McSidepanelData');\n\nexport enum McSidepanelPosition {\n    Right = 'right',\n    Left = 'left',\n    Top = 'top',\n    Bottom = 'bottom'\n}\n\nexport class McSidepanelConfig<D = any> {\n    /** ID for the sidepanel. If omitted, a unique one will be generated. */\n    id?: string;\n\n    /** Data being injected into the child component. */\n    data?: D | null = null;\n\n    position?: McSidepanelPosition = McSidepanelPosition.Right;\n\n    /** Whether the sidepanel has a backdrop. */\n    hasBackdrop?: boolean = true;\n\n    /** When we open multiple sidepanels, backdrop appears only once, except cases then this flag is true. */\n    requiredBackdrop?: boolean = false;\n\n    /** Whether the user can use escape or clicking outside to close the sidepanel. */\n    disableClose?: boolean = false;\n\n    /** Custom class for the overlay pane. */\n    overlayPanelClass?: string | string[] = '';\n}\n"],"names":[],"mappings":"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"}