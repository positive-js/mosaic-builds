{"version":3,"file":"datepicker.js","sources":["../../../src/lib/datepicker/index.ts","../../../src/lib/datepicker/datepicker-module.ts","../../../src/lib/datepicker/datepicker-toggle.ts","../../../src/lib/datepicker/datepicker-input.ts","../../../src/lib/datepicker/datepicker.ts","../../../src/lib/datepicker/datepicker-animations.ts","../../../src/lib/datepicker/calendar.ts","../../../src/lib/datepicker/year-view.ts","../../../src/lib/datepicker/multi-year-view.ts","../../../src/lib/datepicker/month-view.ts","../../../src/lib/datepicker/calendar-body.ts","../../../src/lib/datepicker/datepicker-intl.ts","../../../src/lib/datepicker/datepicker-errors.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {McMultiYearView as Éµa} from './multi-year-view';","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { PortalModule } from '@ptsecurity/cdk/portal';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCalendar, McCalendarHeader } from './calendar';\nimport { McCalendarBody } from './calendar-body';\nimport {\n    McDatepicker,\n    McDatepickerContent,\n    MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER\n} from './datepicker';\nimport { McDatepickerInput } from './datepicker-input';\nimport { McDatepickerIntl } from './datepicker-intl';\nimport { McDatepickerToggle, McDatepickerToggleIcon } from './datepicker-toggle';\nimport { McMonthView } from './month-view';\nimport { McMultiYearView } from './multi-year-view';\nimport { McYearView } from './year-view';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McButtonModule,\n        OverlayModule,\n        A11yModule,\n        PortalModule,\n        McButtonModule,\n        McIconModule\n    ],\n    exports: [\n        McCalendar,\n        McCalendarBody,\n        McDatepicker,\n        McDatepickerContent,\n        McDatepickerInput,\n        McDatepickerToggle,\n        McDatepickerToggleIcon,\n        McMonthView,\n        McYearView,\n        McMultiYearView,\n        McCalendarHeader\n    ],\n    declarations: [\n        McCalendar,\n        McCalendarBody,\n        McDatepicker,\n        McDatepickerContent,\n        McDatepickerInput,\n        McDatepickerToggle,\n        McDatepickerToggleIcon,\n        McMonthView,\n        McYearView,\n        McMultiYearView,\n        McCalendarHeader\n    ],\n    providers: [\n        McDatepickerIntl,\n        MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER\n    ],\n    entryComponents: [\n        McDatepickerContent,\n        McCalendarHeader\n    ]\n})\nexport class McDatepickerModule {\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    Directive,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    ViewEncapsulation,\n    ViewChild\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { McButton } from '@ptsecurity/mosaic/button';\nimport { merge, of as observableOf, Subscription } from 'rxjs';\n\nimport { McDatepicker } from './datepicker';\nimport { McDatepickerIntl } from './datepicker-intl';\n\n\n/** Can be used to override the icon of a `mcDatepickerToggle`. */\n@Directive({\n    selector: '[mcDatepickerToggleIcon]'\n})\nexport class McDatepickerToggleIcon {\n}\n\n\n@Component({\n    selector: 'mc-datepicker-toggle',\n    templateUrl: 'datepicker-toggle.html',\n    styleUrls: ['datepicker-toggle.css'],\n    host: {\n        class: 'mc-datepicker-toggle',\n        // Always set the tabindex to -1 so that it doesn't overlap with any custom tabindex the\n        // consumer may have provided, while still being able to receive focus.\n        '[attr.tabindex]': '-1',\n        '[class.mc-datepicker-toggle_active]': 'datepicker && datepicker.opened',\n        '[class.mc-warn]': 'datepicker && datepicker.color === \"error\"',\n        '(focus)': 'button.focus()'\n    },\n    exportAs: 'mcDatepickerToggle',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McDatepickerToggle<D> implements AfterContentInit, OnChanges, OnDestroy {\n\n    /** Whether the toggle button is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled === undefined ? this.datepicker.disabled : !!this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    /** Datepicker instance that the button will toggle. */\n    @Input('for') datepicker: McDatepicker<D>;\n\n    /** Tabindex for the toggle. */\n    @Input() tabIndex: number | null;\n\n    /** Custom icon set by the consumer. */\n    @ContentChild(McDatepickerToggleIcon) customIcon: McDatepickerToggleIcon;\n\n    /** Underlying button element. */\n    @ViewChild('button') button: McButton;\n    private stateChanges = Subscription.EMPTY;\n\n    private _disabled: boolean;\n\n    constructor(\n        public intl: McDatepickerIntl,\n        private changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') defaultTabIndex: string\n    ) {\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.datepicker) {\n            this.watchStateChanges();\n        }\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.unsubscribe();\n    }\n\n    ngAfterContentInit() {\n        this.watchStateChanges();\n    }\n\n    open(event: Event): void {\n        if (this.datepicker && !this.disabled) {\n            this.datepicker.open();\n            event.stopPropagation();\n        }\n    }\n\n    private watchStateChanges() {\n        const datepickerDisabled = this.datepicker ? this.datepicker.disabledChange : observableOf();\n        const inputDisabled = this.datepicker && this.datepicker.datepickerInput ?\n            this.datepicker.datepickerInput.disabledChange : observableOf();\n        const datepickerToggled = this.datepicker ?\n            merge(this.datepicker.openedStream, this.datepicker.closedStream) :\n            observableOf();\n\n        this.stateChanges.unsubscribe();\n        this.stateChanges = merge(\n            this.intl.changes,\n            datepickerDisabled,\n            inputDisabled,\n            datepickerToggled\n        ).subscribe(() => this.changeDetectorRef.markForCheck());\n    }\n}\n","// tslint:disable:no-empty\nimport {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Output\n} from '@angular/core';\nimport {\n    AbstractControl,\n    ControlValueAccessor,\n    NG_VALIDATORS,\n    NG_VALUE_ACCESSOR,\n    ValidationErrors,\n    Validator,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport { DOWN_ARROW } from '@ptsecurity/cdk/keycodes';\nimport { ThemePalette } from '@ptsecurity/mosaic/core';\nimport { McFormField } from '@ptsecurity/mosaic/form-field';\nimport { MC_INPUT_VALUE_ACCESSOR } from '@ptsecurity/mosaic/input';\nimport { Subscription } from 'rxjs';\n\nimport { McDatepicker } from './datepicker';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\n/** @docs-private */\nexport const MC_DATEPICKER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McDatepickerInput),\n    multi: true\n};\n\n/** @docs-private */\nexport const MC_DATEPICKER_VALIDATORS: any = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => McDatepickerInput),\n    multi: true\n};\n\n\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use McDatepickerInputEvent instead.\n */\nexport class McDatepickerInputEvent<D> {\n    /** The new value for the target datepicker input. */\n    value: D | null;\n\n    constructor(\n        /** Reference to the datepicker input component that emitted the event. */\n        public target: McDatepickerInput<D>,\n        /** Reference to the native input element associated with the datepicker input. */\n        public targetElement: HTMLElement) {\n        this.value = this.target.value;\n    }\n}\n\n\n/** Directive used to connect an input to a McDatepicker. */\n@Directive({\n    selector: 'input[mcDatepicker]',\n    providers: [\n        MC_DATEPICKER_VALUE_ACCESSOR,\n        MC_DATEPICKER_VALIDATORS,\n        { provide: MC_INPUT_VALUE_ACCESSOR, useExisting: McDatepickerInput }\n    ],\n    host: {\n        '[attr.aria-haspopup]': 'true',\n        '[attr.aria-owns]': '(datepicker?.opened && datepicker.id) || null',\n        '[attr.min]': 'min ? dateAdapter.toIso8601(min) : null',\n        '[attr.max]': 'max ? dateAdapter.toIso8601(max) : null',\n        '[disabled]': 'disabled',\n        '(input)': 'onInput($event.target.value)',\n        '(change)': 'onChange()',\n        '(blur)': 'onBlur()',\n        '(keydown)': 'onKeydown($event)'\n    },\n    exportAs: 'mcDatepickerInput'\n})\nexport class McDatepickerInput<D> implements ControlValueAccessor, OnDestroy, Validator {\n    /** The datepicker that this input is associated with. */\n    @Input()\n    set mcDatepicker(value: McDatepicker<D>) {\n        if (!value) {\n            return;\n        }\n\n        this.datepicker = value;\n        this.datepicker.registerInput(this);\n        this.datepickerSubscription.unsubscribe();\n\n        this.datepickerSubscription = this.datepicker.selectedChanged.subscribe((selected: D) => {\n            this.value = selected;\n            this.cvaOnChange(selected);\n            this.onTouched();\n            this.dateInput.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n            this.dateChange.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n        });\n    }\n\n    /** Function that can be used to filter out dates within the datepicker. */\n    @Input()\n    set mcDatepickerFilter(value: (date: D | null) => boolean) {\n        this.dateFilter = value;\n        this.validatorOnChange();\n    }\n\n    /** The value of the input. */\n    @Input()\n    get value(): D | null {\n        return this._value;\n    }\n\n    set value(value: D | null) {\n        // tslint:disable-next-line:no-parameter-reassignment\n        value = this.dateAdapter.deserialize(value);\n        this.lastValueValid = !value || this.dateAdapter.isValid(value);\n        // tslint:disable-next-line:no-parameter-reassignment\n        value = this.getValidDateOrNull(value);\n        const oldDate = this.value;\n        this._value = value;\n        this.formatValue(value);\n\n        if (!this.dateAdapter.sameDate(oldDate, value)) {\n            this.valueChange.emit(value);\n        }\n    }\n\n    /** The minimum valid date. */\n    @Input()\n    get min(): D | null {\n        return this._min;\n    }\n\n    set min(value: D | null) {\n        this._min = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.validatorOnChange();\n    }\n\n    /** The maximum valid date. */\n    @Input()\n    get max(): D | null {\n        return this._max;\n    }\n\n    set max(value: D | null) {\n        this._max = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.validatorOnChange();\n    }\n\n    /** Whether the datepicker-input is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return !!this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        const newValue = coerceBooleanProperty(value);\n        const element = this.elementRef.nativeElement;\n\n        if (this._disabled !== newValue) {\n            this._disabled = newValue;\n            this.disabledChange.emit(newValue);\n        }\n\n        // We need to null check the `blur` method, because it's undefined during SSR.\n        if (newValue && element.blur) {\n            // Normally, native input elements automatically blur if they turn disabled. This behavior\n            // is problematic, because it would mean that it triggers another change detection cycle,\n            // which then causes a changed after checked error if the input element was focused before.\n            element.blur();\n        }\n    }\n\n    datepicker: McDatepicker<D>;\n    dateFilter: (date: D | null) => boolean;\n\n    /** Emits when a `change` event is fired on this `<input>`. */\n    @Output() readonly dateChange: EventEmitter<McDatepickerInputEvent<D>> =\n        new EventEmitter<McDatepickerInputEvent<D>>();\n\n    /** Emits when an `input` event is fired on this `<input>`. */\n    @Output() readonly dateInput: EventEmitter<McDatepickerInputEvent<D>> =\n        new EventEmitter<McDatepickerInputEvent<D>>();\n\n    /** Emits when the value changes (either due to user input or programmatic change). */\n    valueChange = new EventEmitter<D | null>();\n\n    /** Emits when the disabled state has changed */\n    disabledChange = new EventEmitter<boolean>();\n    private _value: D | null;\n    private _min: D | null;\n    private _max: D | null;\n    private _disabled: boolean;\n\n    private datepickerSubscription = Subscription.EMPTY;\n\n    private localeSubscription = Subscription.EMPTY;\n\n    /** Whether the last value set on the input was valid. */\n    private lastValueValid = false;\n\n    constructor(\n        public elementRef: ElementRef<HTMLInputElement>,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        @Optional() private formField: McFormField\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        // Update the displayed date when the locale changes.\n        this.localeSubscription = dateAdapter.localeChanges.subscribe(() => {\n            this.value = this.value;\n        });\n    }\n\n    onTouched = () => {\n    }\n\n    ngOnDestroy() {\n        this.datepickerSubscription.unsubscribe();\n        this.localeSubscription.unsubscribe();\n        this.valueChange.complete();\n        this.disabledChange.complete();\n    }\n\n    /** @docs-private */\n    registerOnValidatorChange(fn: () => void): void {\n        this.validatorOnChange = fn;\n    }\n\n    /** @docs-private */\n    validate(c: AbstractControl): ValidationErrors | null {\n        return this.validator ? this.validator(c) : null;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value: D): void {\n        this.value = value;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this.cvaOnChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    onKeydown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n\n        if (this.datepicker && isAltDownArrow && !this.elementRef.nativeElement.readOnly) {\n            this.datepicker.open();\n            event.preventDefault();\n        }\n    }\n\n    onInput(value: string) {\n        let date = this.dateAdapter.parse(value, this.dateFormats.parse.dateInput);\n        this.lastValueValid = !date || this.dateAdapter.isValid(date);\n        date = this.getValidDateOrNull(date);\n\n        if (!this.dateAdapter.sameDate(date, this._value)) {\n            this._value = date;\n            this.cvaOnChange(date);\n            this.valueChange.emit(date);\n            this.dateInput.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n        }\n    }\n\n    onChange() {\n        this.dateChange.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n    }\n\n    /** Returns the palette used by the input's form field, if any. */\n    getThemePalette(): ThemePalette | undefined {\n        return this.formField ? this.formField.color : undefined;\n    }\n\n    /** Handles blur events on the input. */\n    onBlur() {\n        // Reformat the input only if we have a valid value.\n        if (this.value) {\n            this.formatValue(this.value);\n        }\n\n        this.onTouched();\n    }\n\n    private cvaOnChange: (value: any) => void = () => {\n    }\n\n    private validatorOnChange = () => {\n    }\n\n    /** The form control validator for whether the input parses. */\n    private parseValidator: ValidatorFn = (): ValidationErrors | null => {\n        return this.lastValueValid ?\n            null : { mcDatepickerParse: { text: this.elementRef.nativeElement.value } };\n    }\n\n    /** The form control validator for the min date. */\n    private minValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n        const controlValue = this.getValidDateOrNull(this.dateAdapter.deserialize(control.value));\n\n        return (!this.min || !controlValue ||\n            this.dateAdapter.compareDate(this.min, controlValue) <= 0) ?\n            null : { mcDatepickerMin: { min: this.min, actual: controlValue } };\n    }\n\n    /** The form control validator for the max date. */\n    private maxValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n        const controlValue = this.getValidDateOrNull(this.dateAdapter.deserialize(control.value));\n\n        return (!this.max || !controlValue ||\n            this.dateAdapter.compareDate(this.max, controlValue) >= 0) ?\n            null : { mcDatepickerMax: { max: this.max, actual: controlValue } };\n    }\n\n    /** The form control validator for the date filter. */\n    private filterValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n        const controlValue = this.getValidDateOrNull(this.dateAdapter.deserialize(control.value));\n\n        return !this.dateFilter || !controlValue || this.dateFilter(controlValue) ?\n            null : { mcDatepickerFilter: true };\n    }\n\n    /** Formats a value and sets it on the input element. */\n    private formatValue(value: D | null) {\n        this.elementRef.nativeElement.value =\n            value ? this.dateAdapter.format(value, this.dateFormats.display.dateInput) : '';\n    }\n\n    /** The combined form control validator for this input. */\n        // tslint:disable:member-ordering\n    private validator: ValidatorFn | null =\n        Validators.compose([\n            this.parseValidator,\n            this.minValidator,\n            this.maxValidator,\n            this.filterValidator\n        ]);\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n}\n","// tslint:disable:no-unbound-method\n// tslint:disable:no-magic-numbers\nimport { DOCUMENT } from '@angular/common';\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    Component,\n    ComponentRef,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    Optional,\n    Output,\n    ViewChild,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { DateAdapter } from '@ptsecurity/cdk/datetime';\nimport { ESCAPE, UP_ARROW } from '@ptsecurity/cdk/keycodes';\nimport {\n    Overlay,\n    OverlayConfig,\n    OverlayRef,\n    IPositionStrategy,\n    IScrollStrategy\n} from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal, IComponentType } from '@ptsecurity/cdk/portal';\nimport {\n    CanColor,\n    CanColorCtor,\n    mixinColor,\n    ThemePalette\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { merge, Observable, Subject, Subscription } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\n\nimport { McCalendar } from './calendar';\nimport { McCalendarCellCssClasses } from './calendar-body';\nimport { mcDatepickerAnimations } from './datepicker-animations';\nimport { createMissingDateImplError } from './datepicker-errors';\nimport { McDatepickerInput } from './datepicker-input';\n\n\n/** Used to generate a unique ID for each datepicker instance. */\nlet datepickerUid = 0;\n\n/** Injection token that determines the scroll handling while the calendar is open. */\nexport const MC_DATEPICKER_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-datepicker-scroll-strategy');\n\n/** @docs-private */\n// tslint:disable-next-line:naming-convention\nexport function MC_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_DATEPICKER_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_DATEPICKER_SCROLL_STRATEGY_FACTORY\n};\n\n// Boilerplate for applying mixins to McDatepickerContent.\n/** @docs-private */\nexport class McDatepickerContentBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McDatepickerContentMixinBase: CanColorCtor & typeof McDatepickerContentBase =\n    mixinColor(McDatepickerContentBase);\n\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * McCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * @docs-private\n */\n@Component({\n    selector: 'mc-datepicker__content',\n    templateUrl: 'datepicker-content.html',\n    styleUrls: ['datepicker-content.css'],\n    host: {\n        class: 'mc-datepicker__content',\n        '[@transformPanel]': '\"enter\"'\n    },\n    animations: [\n        mcDatepickerAnimations.transformPanel,\n        mcDatepickerAnimations.fadeInCalendar\n    ],\n    exportAs: 'mcDatepickerContent',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['color']\n})\nexport class McDatepickerContent<D> extends McDatepickerContentMixinBase\n    implements AfterViewInit, CanColor {\n\n    /** Reference to the internal calendar component. */\n    @ViewChild(McCalendar) calendar: McCalendar<D>;\n\n    /** Reference to the datepicker that created the overlay. */\n    datepicker: McDatepicker<D>;\n\n    /** Whether the datepicker is above or below the input. */\n    isAbove: boolean;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    ngAfterViewInit() {\n        this.calendar.focusActiveCell();\n    }\n}\n\n\n// TODO: We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"mcDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the datepicker popup/dialog. */\n@Component({\n    selector: 'mc-datepicker',\n    template: '',\n    exportAs: 'mcDatepicker',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    providers: [{ provide: McFormFieldControl, useExisting: McDatepicker }]\n})\nexport class McDatepicker<D> implements OnDestroy, CanColor {\n\n    /** The date to open the calendar to initially. */\n    @Input()\n    get startAt(): D | null {\n        // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n        // selected value is.\n        return this._startAt || (this.datepickerInput ? this.datepickerInput.value : null);\n    }\n\n    set startAt(value: D | null) {\n        this._startAt = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** Color palette to use on the datepicker's calendar. */\n    @Input()\n    get color(): ThemePalette {\n        // @ts-ignore:next-line\n        return this._color ||\n            (this.datepickerInput ? this.datepickerInput.getThemePalette() : undefined);\n    }\n\n    set color(value: ThemePalette) {\n        this._color = value;\n    }\n\n    /** Whether the datepicker pop-up should be disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled === undefined && this.datepickerInput ?\n            this.datepickerInput.disabled : !!this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        const newValue = coerceBooleanProperty(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this.disabledChange.next(newValue);\n        }\n    }\n\n    /** Whether the calendar is open. */\n    @Input()\n    get opened(): boolean {\n        return this._opened;\n    }\n\n    set opened(value: boolean) {\n        if (value) {\n            this.open();\n        } else {\n            this.close();\n        }\n    }\n\n    /** The currently selected date. */\n    get selected(): D | null {\n        return this.validSelected;\n    }\n\n    set selected(value: D | null) {\n        this.validSelected = value;\n    }\n\n    /** The minimum selectable date. */\n    get minDate(): D | null {\n        return this.datepickerInput && this.datepickerInput.min;\n    }\n\n    /** The maximum selectable date. */\n    get maxDate(): D | null {\n        return this.datepickerInput && this.datepickerInput.max;\n    }\n\n    get dateFilter(): (date: D | null) => boolean {\n        return this.datepickerInput && this.datepickerInput.dateFilter;\n    }\n\n\n    get value(): D | null {\n        return this.selected;\n    }\n\n    /** An input indicating the type of the custom header component for the calendar, if set. */\n    @Input() calendarHeaderComponent: IComponentType<any>;\n\n    /** The view that the calendar should start in. */\n    @Input() startView: 'month' | 'year' | 'multi-year' = 'month';\n\n    /**\n     * Emits selected year in multiyear view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /**\n     * Emits selected month in year view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Classes to be passed to the date picker panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[];\n\n    /** Function that can be used to add custom CSS classes to dates. */\n    @Input() dateClass: (date: D) => McCalendarCellCssClasses;\n\n    /** Emits when the datepicker has been opened. */\n    @Output('opened') openedStream: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emits when the datepicker has been closed. */\n    @Output('closed') closedStream: EventEmitter<void> = new EventEmitter<void>();\n\n    /** The id for the datepicker calendar. */\n    id: string = `mc-datepicker-${datepickerUid++}`;\n\n    /** A reference to the overlay when the calendar is opened as a popup. */\n    popupRef: OverlayRef;\n\n    /** The input element this datepicker is associated with. */\n    datepickerInput: McDatepickerInput<D>;\n\n    readonly stateChanges: Observable<void> = new Subject<void>();\n\n    /** Emits when the datepicker is disabled. */\n    readonly disabledChange = new Subject<boolean>();\n\n    /** Emits new selected date when selected date changes. */\n    readonly selectedChanged = new Subject<D>();\n    private scrollStrategy: () => IScrollStrategy;\n    private _startAt: D | null;\n    private _disabled: boolean;\n    private _opened = false;\n    private validSelected: D | null = null;\n    private _color: ThemePalette;\n\n    /** A portal containing the calendar for this datepicker. */\n    private calendarPortal: ComponentPortal<McDatepickerContent<D>>;\n\n    /** Reference to the component instantiated in popup mode. */\n    private popupComponentRef: ComponentRef<McDatepickerContent<D>> | null;\n\n    /** The element that was focused before the datepicker was opened. */\n    private focusedElementBeforeOpen: HTMLElement | null = null;\n\n    /** Subscription to value changes in the associated input element. */\n    private inputSubscription = Subscription.EMPTY;\n\n    constructor(private overlay: Overlay,\n                private ngZone: NgZone,\n                private viewContainerRef: ViewContainerRef,\n                @Inject(MC_DATEPICKER_SCROLL_STRATEGY) scrollStrategy: any,\n                @Optional() private dateAdapter: DateAdapter<D>,\n                @Optional() private dir: Directionality,\n                @Optional() @Inject(DOCUMENT) private document: any) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        this.scrollStrategy = scrollStrategy;\n    }\n\n    ngOnDestroy() {\n        this.close();\n        this.inputSubscription.unsubscribe();\n        this.disabledChange.complete();\n\n        if (this.popupRef) {\n            this.popupRef.dispose();\n            this.popupComponentRef = null;\n        }\n    }\n\n    /** Selects the given date */\n    select(date: D): void {\n        const oldValue = this.selected;\n        this.selected = date;\n        if (!this.dateAdapter.sameDate(oldValue, this.selected)) {\n            this.selectedChanged.next(date);\n        }\n    }\n\n    /** Emits the selected year in multiyear view */\n    selectYear(normalizedYear: D): void {\n        this.yearSelected.emit(normalizedYear);\n    }\n\n    /** Emits selected month in year view */\n    selectMonth(normalizedMonth: D): void {\n        this.monthSelected.emit(normalizedMonth);\n    }\n\n    /**\n     * Register an input with this datepicker.\n     * @param input The datepicker input to register with this datepicker.\n     */\n    registerInput(input: McDatepickerInput<D>): void {\n        if (this.datepickerInput) {\n            throw Error('A McDatepicker can only be associated with a single input.');\n        }\n        this.datepickerInput = input;\n        this.inputSubscription =\n            this.datepickerInput.valueChange.subscribe((value: D | null) => this.selected = value);\n    }\n\n    /** Open the calendar. */\n    open(): void {\n        if (this._opened || this.disabled) {\n            return;\n        }\n        if (!this.datepickerInput) {\n            throw Error('Attempted to open an McDatepicker with no associated input.');\n        }\n        if (this.document) {\n            this.focusedElementBeforeOpen = this.document.activeElement;\n        }\n\n        this.openAsPopup();\n\n        this._opened = true;\n        this.openedStream.emit();\n    }\n\n    /** Close the calendar. */\n    close(): void {\n        if (!this._opened) {\n            return;\n        }\n\n        if (this.popupRef && this.popupRef.hasAttached()) {\n            this.popupRef.detach();\n        }\n\n        if (this.calendarPortal && this.calendarPortal.isAttached) {\n            this.calendarPortal.detach();\n        }\n\n        const completeClose = () => {\n            // The `_opened` could've been reset already if\n            // we got two events in quick succession.\n            if (this._opened) {\n                this._opened = false;\n                this.closedStream.emit();\n                this.focusedElementBeforeOpen = null;\n            }\n        };\n\n        if (this.focusedElementBeforeOpen &&\n            typeof this.focusedElementBeforeOpen.focus === 'function') {\n            // Because IE moves focus asynchronously, we can't count on it being restored before we've\n            // marked the datepicker as closed. If the event fires out of sequence and the element that\n            // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n            // able to close the calendar at all. We work around it by making the logic, that marks\n            // the datepicker as closed, async as well.\n            this.focusedElementBeforeOpen.focus();\n            setTimeout(completeClose);\n        } else {\n            completeClose();\n        }\n    }\n\n    /** Open the calendar as a popup. */\n    private openAsPopup(): void {\n        if (!this.calendarPortal) {\n            this.calendarPortal = new ComponentPortal<McDatepickerContent<D>>(McDatepickerContent,\n                this.viewContainerRef);\n        }\n\n        if (!this.popupRef) {\n            this.createPopup();\n        }\n\n        if (!this.popupRef.hasAttached()) {\n            this.popupComponentRef = this.popupRef.attach(this.calendarPortal);\n            this.popupComponentRef.instance.datepicker = this;\n            this.setColor();\n\n            // Update the position once the calendar has rendered.\n            this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n                this.popupRef.updatePosition();\n            });\n        }\n    }\n\n    /** Create the popup. */\n    private createPopup(): void {\n        const overlayConfig = new OverlayConfig({\n            positionStrategy: this.createPopupPositionStrategy(),\n            hasBackdrop: true,\n            backdropClass: 'mc-overlay-transparent-backdrop',\n            direction: this.dir,\n            scrollStrategy: this.scrollStrategy(),\n            panelClass: 'mc-datepicker__popup'\n        });\n\n        this.popupRef = this.overlay.create(overlayConfig);\n        this.popupRef.overlayElement.setAttribute('role', 'dialog');\n\n        merge(\n            this.popupRef.backdropClick(),\n            this.popupRef.detachments(),\n            this.popupRef.keydownEvents().pipe(filter((event) => {\n                // Closing on alt + up is only valid when there's an input associated with the datepicker.\n                // tslint:disable-next-line:deprecation\n                return event.keyCode === ESCAPE || (this.datepickerInput && event.altKey && event.keyCode === UP_ARROW);\n            }))\n        ).subscribe(() => this.close());\n    }\n\n    /** Create the popup PositionStrategy. */\n    private createPopupPositionStrategy(): IPositionStrategy {\n        return this.overlay.position()\n            .flexibleConnectedTo(this.datepickerInput.elementRef)\n            .withTransformOriginOn('.mc-datepicker__content')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withLockedPosition()\n            .withPositions([\n                {\n                    originX: 'start',\n                    originY: 'bottom',\n                    overlayX: 'start',\n                    overlayY: 'top'\n                },\n                {\n                    originX: 'start',\n                    originY: 'top',\n                    overlayX: 'start',\n                    overlayY: 'bottom'\n                },\n                {\n                    originX: 'end',\n                    originY: 'bottom',\n                    overlayX: 'end',\n                    overlayY: 'top'\n                },\n                {\n                    originX: 'end',\n                    originY: 'top',\n                    overlayX: 'end',\n                    overlayY: 'bottom'\n                }\n            ]);\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Passes the current theme color along to the calendar overlay. */\n    private setColor(): void {\n        const color = this.color;\n        if (this.popupComponentRef) {\n            this.popupComponentRef.instance.color = color;\n        }\n    }\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\n/**\n * Animations used by the mosaic datepicker.\n * @docs-private\n */\nexport const mcDatepickerAnimations: {\n    readonly transformPanel: AnimationTriggerMetadata;\n    readonly fadeInCalendar: AnimationTriggerMetadata;\n} = {\n    /** Transforms the height of the datepicker's calendar. */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(1, 0.8)'\n        })),\n        transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1, 1)'\n        }))),\n        transition('* => void', animate('100ms linear', style({ opacity: 0 })))\n    ]),\n\n    /** Fades in the content of the calendar. */\n    fadeInCalendar: trigger('fadeInCalendar', [\n        state('void', style({ opacity: 0 })),\n        state('enter', style({ opacity: 1 })),\n\n        // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n        transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n    ])\n};\n\n// todo should be put into polyfils\n// https://github.com/angular/angular/issues/24769\nif (!Element.prototype.matches) {\n    Element.prototype.matches = (Element.prototype as any).msMatchesSelector;\n}\n","import {\n    AfterContentInit,\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Output,\n    SimpleChanges,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport { ComponentPortal, IComponentType, Portal } from '@ptsecurity/cdk/portal';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { McCalendarCellCssClasses } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\nimport { McDatepickerIntl } from './datepicker-intl';\nimport { McMonthView } from './month-view';\nimport { McMultiYearView, yearsPerPage } from './multi-year-view';\nimport { McYearView } from './year-view';\n\n\n/**\n * Possible views for the calendar.\n * @docs-private\n */\nexport type McCalendarView = 'month' | 'year' | 'multi-year';\n\n/** Default header for McCalendar */\n@Component({\n    selector: 'mc-calendar-header',\n    templateUrl: 'calendar-header.html',\n    exportAs: 'mcCalendarHeader',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCalendarHeader<D> {\n    constructor(private intl: McDatepickerIntl,\n                @Inject(forwardRef(() => McCalendar)) public calendar: McCalendar<D>,\n                @Optional() private dateAdapter: DateAdapter<D>,\n                @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n                changeDetectorRef: ChangeDetectorRef) {\n\n        this.calendar.stateChanges.subscribe(() => changeDetectorRef.markForCheck());\n    }\n\n    /** The label for the current calendar view. */\n    get periodButtonText(): string {\n        if (this.calendar.currentView === 'month') {\n            const label = this.dateAdapter\n                .format(this.calendar.activeDate, this.dateFormats.display.monthYearLabel);\n\n            return label[0].toLocaleUpperCase() + label.substr(1);\n        }\n\n        if (this.calendar.currentView === 'year') {\n            return this.dateAdapter.getYearName(this.calendar.activeDate);\n        }\n\n        const activeYear = this.dateAdapter.getYear(this.calendar.activeDate);\n        const firstYearInView = this.dateAdapter.getYearName(\n            // tslint:disable-next-line:no-magic-numbers\n            this.dateAdapter.createDate(activeYear - activeYear % 24, 0, 1));\n        const lastYearInView = this.dateAdapter.getYearName(\n            // tslint:disable-next-line:no-magic-numbers\n            this.dateAdapter.createDate(activeYear + yearsPerPage - 1 - activeYear % 24, 0, 1));\n\n        return `${firstYearInView} \\u2013 ${lastYearInView}`;\n    }\n\n    get periodButtonLabel(): string {\n        return this.calendar.currentView === 'month' ?\n            this.intl.switchToMultiYearViewLabel : this.intl.switchToMonthViewLabel;\n    }\n\n    /** The label for the previous button. */\n    get prevButtonLabel(): string {\n        return {\n            month: this.intl.prevMonthLabel,\n            year: this.intl.prevYearLabel,\n            'multi-year': this.intl.prevMultiYearLabel\n        }[this.calendar.currentView];\n    }\n\n    /** The label for the next button. */\n    get nextButtonLabel(): string {\n        return {\n            month: this.intl.nextMonthLabel,\n            year: this.intl.nextYearLabel,\n            'multi-year': this.intl.nextMultiYearLabel\n        }[this.calendar.currentView];\n    }\n\n    /** Handles user clicks on the period label. */\n    currentPeriodClicked(): void {\n        this.calendar.currentView = this.calendar.currentView === 'month' ? 'multi-year' : 'month';\n    }\n\n    /** Handles user clicks on the previous button. */\n    previousClicked(): void {\n        this.calendar.activeDate = this.calendar.currentView === 'month' ?\n            this.dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) :\n            this.dateAdapter.addCalendarYears(\n                this.calendar.activeDate, this.calendar.currentView === 'year' ? -1 : -yearsPerPage\n            );\n    }\n\n    /** Handles user clicks on the next button. */\n    nextClicked(): void {\n        this.calendar.activeDate = this.calendar.currentView === 'month' ?\n            this.dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) :\n            this.dateAdapter.addCalendarYears(\n                this.calendar.activeDate,\n                this.calendar.currentView === 'year' ? 1 : yearsPerPage\n            );\n    }\n\n    /** Whether the previous period button is enabled. */\n    previousEnabled(): boolean {\n        if (!this.calendar.minDate) {\n            return true;\n        }\n\n        return !this.calendar.minDate ||\n            !this.isSameView(this.calendar.activeDate, this.calendar.minDate);\n    }\n\n    /** Whether the next period button is enabled. */\n    nextEnabled(): boolean {\n        return !this.calendar.maxDate ||\n            !this.isSameView(this.calendar.activeDate, this.calendar.maxDate);\n    }\n\n    /** Whether the two dates represent the same view in the current view mode (month or year). */\n    private isSameView(date1: D, date2: D): boolean {\n        if (this.calendar.currentView === 'month') {\n            return this.dateAdapter.getYear(date1) === this.dateAdapter.getYear(date2) &&\n                this.dateAdapter.getMonth(date1) === this.dateAdapter.getMonth(date2);\n        }\n        if (this.calendar.currentView === 'year') {\n            return this.dateAdapter.getYear(date1) === this.dateAdapter.getYear(date2);\n        }\n\n        // Otherwise we are in 'multi-year' view.\n        return Math.floor(this.dateAdapter.getYear(date1) / yearsPerPage) ===\n            Math.floor(this.dateAdapter.getYear(date2) / yearsPerPage);\n    }\n}\n\n/**\n * A calendar that is used as part of the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-calendar',\n    templateUrl: 'calendar.html',\n    styleUrls: ['calendar.css'],\n    host: {\n        class: 'mc-calendar'\n    },\n    exportAs: 'mcCalendar',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCalendar<D> implements AfterContentInit, AfterViewChecked, OnDestroy, OnChanges {\n\n    /** A date representing the period (month or year) to start the calendar in. */\n    @Input()\n    get startAt(): D | null {\n        return this._startAt;\n    }\n\n    set startAt(value: D | null) {\n        this._startAt = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /**\n     * The current active date. This determines which time period is shown and which date is\n     * highlighted when using keyboard navigation.\n     */\n    get activeDate(): D {\n        return this.clampedActiveDate;\n    }\n\n    set activeDate(value: D) {\n        this.clampedActiveDate = this.dateAdapter.clampDate(value, this.minDate, this.maxDate);\n        this.stateChanges.next();\n    }\n\n    /** Whether the calendar is in month view. */\n    get currentView(): McCalendarView {\n        return this._currentView;\n    }\n\n    set currentView(value: McCalendarView) {\n        this._currentView = value;\n        this.moveFocusOnNextTick = true;\n    }\n\n    /** An input indicating the type of the header component, if set. */\n    @Input() headerComponent: IComponentType<any>;\n\n    /** A portal containing the header component type for this calendar. */\n    calendarHeaderPortal: Portal<any>;\n\n    /** Whether the calendar should be started in month or year view. */\n    @Input() startView: McCalendarView = 'month';\n\n    /** Function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Function that can be used to add custom CSS classes to dates. */\n    @Input() dateClass: (date: D) => McCalendarCellCssClasses;\n\n    /** Emits when the currently selected date changes. */\n    @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /**\n     * Emits the year chosen in multiyear view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /**\n     * Emits the month chosen in year view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits when any date is selected. */\n    @Output() readonly userSelection: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Reference to the current month view component. */\n    @ViewChild(McMonthView) monthView: McMonthView<D>;\n\n    /** Reference to the current year view component. */\n    @ViewChild(McYearView) yearView: McYearView<D>;\n\n    /** Reference to the current multi-year view component. */\n    @ViewChild(McMultiYearView) multiYearView: McMultiYearView<D>;\n\n    /**\n     * Emits whenever there is a state change that the header may need to respond to.\n     */\n    stateChanges = new Subject<void>();\n\n    private intlChanges: Subscription;\n\n    /**\n     * Used for scheduling that focus should be moved to the active cell on the next tick.\n     * We need to schedule it, rather than do it immediately, because we have to wait\n     * for Angular to re-evaluate the view children.\n     */\n    private moveFocusOnNextTick = false;\n    private _startAt: D | null;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n    private clampedActiveDate: D;\n    private _currentView: McCalendarView;\n\n    constructor(\n        intl: McDatepickerIntl,\n        @Optional() private dateAdapter: DateAdapter<D>,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        this.intlChanges = intl.changes.subscribe(() => {\n            changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        });\n    }\n\n    ngAfterContentInit() {\n        this.calendarHeaderPortal = new ComponentPortal(this.headerComponent || McCalendarHeader);\n        this.activeDate = this.startAt || this.dateAdapter.today();\n\n        // Assign to the private property since we don't want to move focus on init.\n        this._currentView = this.startView;\n    }\n\n    ngAfterViewChecked() {\n        if (this.moveFocusOnNextTick) {\n            this.moveFocusOnNextTick = false;\n            this.focusActiveCell();\n        }\n    }\n\n    ngOnDestroy() {\n        this.intlChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const change = changes.minDate || changes.maxDate || changes.dateFilter;\n\n        if (change && !change.firstChange) {\n            const view = this.getCurrentViewComponent();\n\n            if (view) {\n                // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n                // passed down to the view via data bindings which won't be up-to-date when we call `init`.\n                this.changeDetectorRef.detectChanges();\n                view.init();\n            }\n        }\n\n        this.stateChanges.next();\n    }\n\n    focusActiveCell() {\n        this.getCurrentViewComponent().focusActiveCell();\n    }\n\n    /** Updates today's date after an update of the active date */\n    updateTodaysDate() {\n        const view = this.currentView === 'month' ? this.monthView :\n            (this.currentView === 'year' ? this.yearView : this.multiYearView);\n\n        view.ngAfterContentInit();\n    }\n\n    /** Handles date selection in the month view. */\n    dateSelected(date: D): void {\n        if (!this.dateAdapter.sameDate(date, this.selected)) {\n            this.selectedChange.emit(date);\n        }\n    }\n\n    /** Handles year selection in the multiyear view. */\n    yearSelectedInMultiYearView(normalizedYear: D) {\n        this.yearSelected.emit(normalizedYear);\n    }\n\n    /** Handles month selection in the year view. */\n    monthSelectedInYearView(normalizedMonth: D) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n\n    userSelected(): void {\n        this.userSelection.emit();\n    }\n\n    /** Handles year/month selection in the multi-year/year views. */\n    goToDateInView(date: D, view: 'month' | 'year' | 'multi-year'): void {\n        this.activeDate = date;\n        this.currentView = view;\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Returns the component instance that corresponds to the current calendar view. */\n    private getCurrentViewComponent() {\n        return this.monthView || this.yearView || this.multiYearView;\n    }\n}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    UP_ARROW,\n    SPACE\n} from '@ptsecurity/cdk/keycodes';\n\nimport { McCalendarBody, McCalendarCell } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\n/**\n * An internal component used to display a single year in the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-year-view',\n    templateUrl: 'year-view.html',\n    exportAs: 'mcYearView',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McYearView<D> implements AfterContentInit {\n    /** The date to display in this year view (everything other than the year is ignored). */\n    @Input()\n    get activeDate(): D {\n        return this._activeDate;\n    }\n\n    set activeDate(value: D) {\n        const oldActiveDate = this._activeDate;\n        const validDate =\n            this.getValidDateOrNull(this.dateAdapter.deserialize(value)) || this.dateAdapter.today();\n        this._activeDate = this.dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n        if (this.dateAdapter.getYear(oldActiveDate) !== this.dateAdapter.getYear(this._activeDate)) {\n            this.init();\n        }\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.selectedMonth = this.getMonthInCurrentYear(this._selected);\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** A function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Emits when a new month is selected. */\n    @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits the selected month. This doesn't imply a change on the selected date */\n    @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits when any date is activated. */\n    @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** The body of calendar table */\n    @ViewChild(McCalendarBody) mcCalendarBody: McCalendarBody;\n\n    /** Grid of calendar cells representing the months of the year. */\n    months: McCalendarCell[][];\n\n    /** The label for this year (e.g. \"2017\"). */\n    yearLabel: string;\n\n    /** The month in this year that today falls on. Null if today is in a different year. */\n    todayMonth: number | null;\n\n    /**\n     * The month in this year that the selected Date falls on.\n     * Null if the selected Date is in a different year.\n     */\n    selectedMonth: number | null;\n    private _activeDate: D;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() private dir?: Directionality\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        this._activeDate = this.dateAdapter.today();\n    }\n\n    ngAfterContentInit() {\n        this.init();\n    }\n\n    /** Handles when a new month is selected. */\n    onMonthSelected(month: number) {\n        const normalizedDate =\n            this.dateAdapter.createDate(this.dateAdapter.getYear(this.activeDate), month, 1);\n\n        this.monthSelected.emit(normalizedDate);\n\n        const daysInMonth = this.dateAdapter.getNumDaysInMonth(normalizedDate);\n\n        this.selectedChange.emit(this.dateAdapter.createDate(\n            this.dateAdapter.getYear(this.activeDate), month,\n            Math.min(this.dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n\n    /** Handles keydown events on the calendar body when calendar is in year view. */\n    handleCalendarBodyKeydown(event: KeyboardEvent): void {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n        const oldActiveDate = this._activeDate;\n        const isRtl = this.isRtl();\n\n        const VERTICAL_SHIFT = 4;\n        const PAGE_SHIFT = 10;\n        const MAX_MONTH_INDEX = 11;\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, -VERTICAL_SHIFT);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, VERTICAL_SHIFT);\n                break;\n            case HOME:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate,\n                    -this.dateAdapter.getMonth(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate,\n                    MAX_MONTH_INDEX - this.dateAdapter.getMonth(this._activeDate));\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -PAGE_SHIFT : -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(this._activeDate, event.altKey ? PAGE_SHIFT : 1);\n                break;\n            case ENTER:\n            case SPACE:\n                this.onMonthSelected(this.dateAdapter.getMonth(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n\n        if (this.dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n\n        this.focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n\n    /** Initializes this year view. */\n    init() {\n        this.selectedMonth = this.getMonthInCurrentYear(this.selected);\n        this.todayMonth = this.getMonthInCurrentYear(this.dateAdapter.today());\n        this.yearLabel = this.dateAdapter.getYearName(this.activeDate);\n\n        const monthNames = this.dateAdapter.getMonthNames('short');\n\n        // First row of months only contains 5 elements so we can fit the year label on the same row.\n        // tslint:disable-next-line:no-magic-numbers\n        this.months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map((row) => row.map(\n            (month) => this.createCellForMonth(month, monthNames[month])));\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.mcCalendarBody.focusActiveCell();\n    }\n\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     */\n    private getMonthInCurrentYear(date: D | null) {\n        return date && this.dateAdapter.getYear(date) === this.dateAdapter.getYear(this.activeDate) ?\n            this.dateAdapter.getMonth(date) : null;\n    }\n\n    /** Creates an McCalendarCell for the given month. */\n    private createCellForMonth(month: number, monthName: string) {\n        const ariaLabel = this.dateAdapter.format(\n            this.dateAdapter.createDate(this.dateAdapter.getYear(this.activeDate), month, 1),\n            this.dateFormats.display.monthYearA11yLabel);\n\n        const newMonthName = monthName[0].toLocaleUpperCase() + monthName.substr(1);\n\n        return new McCalendarCell(\n            month, newMonthName, ariaLabel, this.shouldEnableMonth(month));\n    }\n\n    /** Whether the given month is enabled. */\n    private shouldEnableMonth(month: number) {\n\n        const activeYear = this.dateAdapter.getYear(this.activeDate);\n\n        if (month === undefined || month === null ||\n            this.isYearAndMonthAfterMaxDate(activeYear, month) ||\n            this.isYearAndMonthBeforeMinDate(activeYear, month)) {\n            return false;\n        }\n\n        if (!this.dateFilter) {\n            return true;\n        }\n\n        const firstOfMonth = this.dateAdapter.createDate(activeYear, month, 1);\n\n        // If any date in the month is enabled count the month as enabled.\n        for (let date = firstOfMonth; this.dateAdapter.getMonth(date) === month;\n             date = this.dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Tests whether the combination month/year is after this.maxDate, considering\n     * just the month and year of this.maxDate\n     */\n    private isYearAndMonthAfterMaxDate(year: number, month: number) {\n        if (this.maxDate) {\n            const maxYear = this.dateAdapter.getYear(this.maxDate);\n            const maxMonth = this.dateAdapter.getMonth(this.maxDate);\n\n            return year > maxYear || (year === maxYear && month > maxMonth);\n        }\n\n        return false;\n    }\n\n    /**\n     * Tests whether the combination month/year is before this.minDate, considering\n     * just the month and year of this.minDate\n     */\n    private isYearAndMonthBeforeMinDate(year: number, month: number) {\n        if (this.minDate) {\n            const minYear = this.dateAdapter.getYear(this.minDate);\n            const minMonth = this.dateAdapter.getMonth(this.minDate);\n\n            return year < minYear || (year === minYear && month < minMonth);\n        }\n\n        return false;\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Determines whether the user has the RTL layout direction. */\n    private isRtl() {\n        return this.dir && this.dir.value === 'rtl';\n    }\n}\n","// tslint:disable:no-magic-numbers\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { DateAdapter } from '@ptsecurity/cdk/datetime';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    UP_ARROW,\n    SPACE\n} from '@ptsecurity/cdk/keycodes';\n\nimport { McCalendarBody, McCalendarCell } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\nexport const yearsPerPage = 24;\n\nexport const yearsPerRow = 4;\n\n\n/**\n * An internal component used to display a year selector in the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-multi-year-view',\n    templateUrl: 'multi-year-view.html',\n    exportAs: 'mcMultiYearView',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McMultiYearView<D> implements AfterContentInit {\n    /** The date to display in this multi-year view (everything other than the year is ignored). */\n    @Input()\n    get activeDate(): D {\n        return this._activeDate;\n    }\n\n    set activeDate(value: D) {\n        const oldActiveDate = this._activeDate;\n        const validDate =\n            this.getValidDateOrNull(this.dateAdapter.deserialize(value)) || this.dateAdapter.today();\n        this._activeDate = this.dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n        if (Math.floor(this.dateAdapter.getYear(oldActiveDate) / yearsPerPage) !==\n            Math.floor(this.dateAdapter.getYear(this._activeDate) / yearsPerPage)) {\n            this.init();\n        }\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.selectedYear = this._selected && this.dateAdapter.getYear(this._selected);\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** A function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Emits when a new year is selected. */\n    @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits the selected year. This doesn't imply a change on the selected date */\n    @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits when any date is activated. */\n    @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** The body of calendar table */\n    @ViewChild(McCalendarBody) mcCalendarBody: McCalendarBody;\n\n    /** Grid of calendar cells representing the currently displayed years. */\n    years: McCalendarCell[][];\n\n    /** The year that today falls on. */\n    todayYear: number;\n\n    /** The year of the selected date. Null if the selected date is null. */\n    selectedYear: number | null;\n    private _activeDate: D;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() private dir?: Directionality\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        this._activeDate = this.dateAdapter.today();\n    }\n\n    ngAfterContentInit() {\n        this.init();\n    }\n\n    /** Initializes this multi-year view. */\n    init() {\n        this.todayYear = this.dateAdapter.getYear(this.dateAdapter.today());\n        const activeYear = this.dateAdapter.getYear(this._activeDate);\n        const activeOffset = activeYear % yearsPerPage;\n        this.years = [];\n        for (let i = 0, row: number[] = []; i < yearsPerPage; i++) {\n            row.push(activeYear - activeOffset + i);\n            if (row.length === yearsPerRow) {\n                this.years.push(row.map((year) => this.createCellForYear(year)));\n                row = [];\n            }\n        }\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** Handles when a new year is selected. */\n    onYearSelected(year: number) {\n        this.yearSelected.emit(this.dateAdapter.createDate(year, 0, 1));\n        const month = this.dateAdapter.getMonth(this.activeDate);\n        const daysInMonth =\n            this.dateAdapter.getNumDaysInMonth(this.dateAdapter.createDate(year, month, 1));\n        this.selectedChange.emit(this.dateAdapter.createDate(year, month,\n            Math.min(this.dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n\n    /** Handles keydown events on the calendar body when calendar is in multi-year view. */\n    handleCalendarBodyKeydown(event: KeyboardEvent): void {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n        const oldActiveDate = this._activeDate;\n        const isRtl = this.isRtl();\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n                break;\n            case HOME:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate,\n                    -this.dateAdapter.getYear(this._activeDate) % yearsPerPage);\n                break;\n            case END:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate,\n                    yearsPerPage - this.dateAdapter.getYear(this._activeDate) % yearsPerPage - 1);\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(\n                        this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(\n                        this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n                break;\n            case ENTER:\n            case SPACE:\n                this.onYearSelected(this.dateAdapter.getYear(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n\n        if (this.dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n\n        this.focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n\n    getActiveCell(): number {\n        return this.dateAdapter.getYear(this.activeDate) % yearsPerPage;\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.mcCalendarBody.focusActiveCell();\n    }\n\n    /** Creates an McCalendarCell for the given year. */\n    private createCellForYear(year: number) {\n        const yearName = this.dateAdapter.getYearName(this.dateAdapter.createDate(year, 0, 1));\n\n        return new McCalendarCell(year, yearName, yearName, this.shouldEnableYear(year));\n    }\n\n    /** Whether the given year is enabled. */\n    private shouldEnableYear(year: number) {\n        // disable if the year is greater than maxDate lower than minDate\n        if (year === undefined || year === null ||\n            (this.maxDate && year > this.dateAdapter.getYear(this.maxDate)) ||\n            (this.minDate && year < this.dateAdapter.getYear(this.minDate))) {\n            return false;\n        }\n\n        // enable if it reaches here and there's no filter defined\n        if (!this.dateFilter) {\n            return true;\n        }\n\n        const firstOfYear = this.dateAdapter.createDate(year, 0, 1);\n\n        // If any date in the year is enabled count the year as enabled.\n        for (let date = firstOfYear; this.dateAdapter.getYear(date) === year;\n             date = this.dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Determines whether the user has the RTL layout direction. */\n    private isRtl() {\n        return this.dir && this.dir.value === 'rtl';\n    }\n}\n","// tslint:disable:no-magic-numbers\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Optional,\n    Output,\n    ViewEncapsulation,\n    ViewChild\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    UP_ARROW,\n    SPACE\n} from '@ptsecurity/cdk/keycodes';\n\nimport { McCalendarBody, McCalendarCell, McCalendarCellCssClasses } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\nconst DAYS_PER_WEEK = 7;\n\n\n/**\n * An internal component used to display a single month in the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-month-view',\n    templateUrl: 'month-view.html',\n    exportAs: 'mcMonthView',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McMonthView<D> implements AfterContentInit {\n    /**\n     * The date to display in this month view (everything other than the month and year is ignored).\n     */\n    @Input()\n    get activeDate(): D {\n        return this._activeDate;\n    }\n\n    set activeDate(value: D) {\n        const oldActiveDate = this._activeDate;\n        const validDate =\n            this.getValidDateOrNull(this.dateAdapter.deserialize(value)) || this.dateAdapter.today();\n        this._activeDate = this.dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n        if (!this.hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n            this.init();\n        }\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.selectedDate = this.getDateInCurrentMonth(this._selected);\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** Function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Function that can be used to add custom CSS classes to dates. */\n    @Input() dateClass: (date: D) => McCalendarCellCssClasses;\n\n    /** Emits when a new date is selected. */\n    @Output() readonly selectedChange: EventEmitter<D | null> = new EventEmitter<D | null>();\n\n    /** Emits when any date is selected. */\n    @Output() readonly userSelection: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emits when any date is activated. */\n    @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** The body of calendar table */\n    @ViewChild(McCalendarBody) mcCalendarBody: McCalendarBody;\n\n    /** The label for this month (e.g. \"January 2017\"). */\n    monthLabel: string;\n\n    /** Grid of calendar cells representing the dates of the month. */\n    weeks: McCalendarCell[][];\n\n    /** The number of blank cells in the first row before the 1st of the month. */\n    firstWeekOffset: number;\n\n    /**\n     * The date of the month that the currently selected Date falls on.\n     * Null if the currently selected Date is in another month.\n     */\n    selectedDate: number | null;\n\n    /** The date of the month that today falls on. Null if today is in another month. */\n    todayDate: number | null;\n\n    /** The names of the weekdays. */\n    weekdays: { long: string; narrow: string }[];\n    private _activeDate: D;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() private dir?: Directionality\n    ) {\n\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        const firstDayOfWeek = this.dateAdapter.getFirstDayOfWeek();\n        const narrowWeekdays = this.dateAdapter.getDayOfWeekNames('narrow');\n        const longWeekdays = this.dateAdapter.getDayOfWeekNames('long');\n\n        // Rotate the labels for days of the week based on the configured first day of the week.\n        const weekdays = longWeekdays.map((long, i) => {\n            return { long, narrow: narrowWeekdays[i] };\n        });\n        this.weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n\n        this._activeDate = this.dateAdapter.today();\n    }\n\n    ngAfterContentInit() {\n        this.init();\n    }\n\n    /** Handles when a new date is selected. */\n    dateSelected(date: number) {\n        if (this.selectedDate !== date) {\n            const selectedYear = this.dateAdapter.getYear(this.activeDate);\n            const selectedMonth = this.dateAdapter.getMonth(this.activeDate);\n            const selectedDate = this.dateAdapter.createDate(selectedYear, selectedMonth, date);\n\n            this.selectedChange.emit(selectedDate);\n        }\n\n        this.userSelection.emit();\n    }\n\n    /** Handles keydown events on the calendar body when calendar is in month view. */\n    handleCalendarBodyKeydown(event: KeyboardEvent): void {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n        const oldActiveDate = this._activeDate;\n        const isRtl = this.isRtl();\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, -7);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, 7);\n                break;\n            case HOME:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate,\n                    1 - this.dateAdapter.getDate(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate,\n                    (this.dateAdapter.getNumDaysInMonth(this._activeDate) -\n                        this.dateAdapter.getDate(this._activeDate)));\n                break;\n            case PAGE_UP:\n                this.activeDate = event.altKey ?\n                    this.dateAdapter.addCalendarYears(this._activeDate, -1) :\n                    this.dateAdapter.addCalendarMonths(this._activeDate, -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = event.altKey ?\n                    this.dateAdapter.addCalendarYears(this._activeDate, 1) :\n                    this.dateAdapter.addCalendarMonths(this._activeDate, 1);\n                break;\n            case ENTER:\n            case SPACE:\n                if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n                    this.dateSelected(this.dateAdapter.getDate(this._activeDate));\n                    this.userSelection.emit();\n                    // Prevent unexpected default actions such as form submission.\n                    event.preventDefault();\n                }\n\n                return;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n\n        if (this.dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n\n        this.focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n\n    /** Initializes this month view. */\n    init() {\n        this.selectedDate = this.getDateInCurrentMonth(this.selected);\n        this.todayDate = this.getDateInCurrentMonth(this.dateAdapter.today());\n        this.monthLabel =\n            this.dateAdapter.getMonthNames('short')[this.dateAdapter.getMonth(this.activeDate)];\n\n        this.monthLabel = this.monthLabel[0].toLocaleUpperCase() + this.monthLabel.substr(1);\n\n        const firstOfMonth = this.dateAdapter.createDate(this.dateAdapter.getYear(this.activeDate),\n            this.dateAdapter.getMonth(this.activeDate), 1);\n        this.firstWeekOffset =\n            (DAYS_PER_WEEK + this.dateAdapter.getDayOfWeek(firstOfMonth) -\n                this.dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n\n        this.createWeekCells();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.mcCalendarBody.focusActiveCell();\n    }\n\n    /** Creates McCalendarCells for the dates in this month. */\n    private createWeekCells() {\n        const daysInMonth = this.dateAdapter.getNumDaysInMonth(this.activeDate);\n        const dateNames = this.dateAdapter.getDateNames();\n\n        this.weeks = [[]];\n\n        for (let i = 0, cell = this.firstWeekOffset; i < daysInMonth; i++, cell++) {\n            if (cell === DAYS_PER_WEEK) {\n                this.weeks.push([]);\n                cell = 0;\n            }\n            const date = this.dateAdapter.createDate(\n                this.dateAdapter.getYear(this.activeDate),\n                this.dateAdapter.getMonth(this.activeDate), i + 1);\n            const enabled = this.shouldEnableDate(date);\n            const ariaLabel = this.dateAdapter.format(date, this.dateFormats.display.dateA11yLabel);\n            const cellClasses = this.dateClass ? this.dateClass(date) : undefined;\n\n            this.weeks[this.weeks.length - 1]\n                .push(new McCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses));\n        }\n    }\n\n    /** Date filter for the month */\n    private shouldEnableDate(date: D): boolean {\n        return !!date &&\n            (!this.dateFilter || this.dateFilter(date)) &&\n            (!this.minDate || this.dateAdapter.compareDate(date, this.minDate) >= 0) &&\n            (!this.maxDate || this.dateAdapter.compareDate(date, this.maxDate) <= 0);\n    }\n\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     */\n    private getDateInCurrentMonth(date: D | null): number | null {\n        return date && this.hasSameMonthAndYear(date, this.activeDate) ?\n            this.dateAdapter.getDate(date) : null;\n    }\n\n    /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\n    private hasSameMonthAndYear(d1: D | null, d2: D | null): boolean {\n        return !!(d1 && d2 && this.dateAdapter.getMonth(d1) === this.dateAdapter.getMonth(d2) &&\n            this.dateAdapter.getYear(d1) === this.dateAdapter.getYear(d2));\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Determines whether the user has the RTL layout direction. */\n    private isRtl() {\n        return this.dir && this.dir.value === 'rtl';\n    }\n}\n","// tslint:disable:no-magic-numbers\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    Output,\n    ViewEncapsulation,\n    NgZone,\n    OnChanges,\n    SimpleChanges\n} from '@angular/core';\nimport { take } from 'rxjs/operators';\n\n\n/**\n * Extra CSS classes that can be associated with a calendar cell.\n */\nexport type McCalendarCellCssClasses = string | string[] | Set<string> | { [key: string]: any };\n\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * @docs-private\n */\nexport class McCalendarCell {\n    constructor(\n        public value: number,\n        public displayValue: string,\n        public ariaLabel: string,\n        public enabled: boolean,\n        public cssClasses?: McCalendarCellCssClasses\n    ) {\n    }\n}\n\n\n/**\n * An internal component used to display calendar data in a table.\n * @docs-private\n */\n@Component({\n    selector: '[mc-calendar-body]',\n    templateUrl: 'calendar-body.html',\n    styleUrls: ['calendar-body.css'],\n    host: {\n        class: 'mc-calendar__body',\n        role: 'grid',\n        'aria-readonly': 'true'\n    },\n    exportAs: 'mcCalendarBody',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCalendarBody implements OnChanges {\n    /** The label for the table. (e.g. \"Jan 2017\"). */\n    @Input() label: string;\n\n    /** The cells to display in the table. */\n    @Input() rows: McCalendarCell[][];\n\n    /** The value in the table that corresponds to today. */\n    @Input() todayValue: number;\n\n    /** The value in the table that is currently selected. */\n    @Input() selectedValue: number;\n\n    /** The minimum number of free cells needed to fit the label in the first row. */\n    @Input() labelMinRequiredCells: number;\n\n    /** The number of columns in the table. */\n    @Input() numCols = 7;\n\n    /** The cell number of the active cell in the table. */\n    @Input() activeCell = 0;\n\n    /**\n     * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n     * maintained even as the table resizes.\n     */\n    @Input() cellAspectRatio = 1;\n\n    /** Emits when a new value is selected. */\n    @Output() readonly selectedValueChange: EventEmitter<number> = new EventEmitter<number>();\n\n    /** The number of blank cells to put at the beginning for the first row. */\n    firstRowOffset: number;\n\n    /** Padding for the individual date cells. */\n    cellPadding: string;\n\n    /** Width of an individual cell. */\n    cellWidth: string;\n\n    constructor(private elementRef: ElementRef<HTMLElement>, private ngZone: NgZone) {\n    }\n\n    cellClicked(cell: McCalendarCell): void {\n        if (cell.enabled) {\n            this.selectedValueChange.emit(cell.value);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const columnChanges = changes.numCols;\n        // tslint:disable-next-line:no-this-assignment\n        const { rows, numCols } = this;\n\n        if (changes.rows || columnChanges) {\n            this.firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n        }\n\n        if (changes.cellAspectRatio || columnChanges || !this.cellPadding) {\n            this.cellPadding = `${this.cellAspectRatio * 50 / numCols}%`;\n        }\n\n        if (columnChanges || !this.cellWidth) {\n            this.cellWidth = `${100 / numCols}%`;\n        }\n    }\n\n    isActiveCell(rowIndex: number, colIndex: number): boolean {\n        let cellNumber = rowIndex * this.numCols + colIndex;\n\n        // Account for the fact that the first row may not have as many cells.\n        if (rowIndex) {\n            cellNumber -= this.firstRowOffset;\n        }\n\n        return cellNumber === this.activeCell;\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.ngZone.runOutsideAngular(() => {\n            this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n                const activeCell: HTMLElement | null =\n                    this.elementRef.nativeElement.querySelector('.mc-calendar__body_active');\n\n                if (activeCell) {\n                    activeCell.focus();\n                }\n            });\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n\n/** Datepicker data that requires internationalization. */\n@Injectable({ providedIn: 'root' })\nexport class McDatepickerIntl {\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     */\n    readonly changes: Subject<void> = new Subject<void>();\n\n    /** A label for the calendar popup (used by screen readers). */\n    calendarLabel: string = 'Calendar';\n\n    /** A label for the button used to open the calendar popup (used by screen readers). */\n    openCalendarLabel: string = 'Open calendar';\n\n    /** A label for the previous month button (used by screen readers). */\n    prevMonthLabel: string = 'Previous month';\n\n    /** A label for the next month button (used by screen readers). */\n    nextMonthLabel: string = 'Next month';\n\n    /** A label for the previous year button (used by screen readers). */\n    prevYearLabel: string = 'Previous year';\n\n    /** A label for the next year button (used by screen readers). */\n    nextYearLabel: string = 'Next year';\n\n    /** A label for the previous multi-year button (used by screen readers). */\n    prevMultiYearLabel: string = 'Previous 20 years';\n\n    /** A label for the next multi-year button (used by screen readers). */\n    nextMultiYearLabel: string = 'Next 20 years';\n\n    /** A label for the 'switch to month view' button (used by screen readers). */\n    switchToMonthViewLabel: string = 'Choose date';\n\n    /** A label for the 'switch to year view' button (used by screen readers). */\n    switchToMultiYearViewLabel: string = 'Choose month and year';\n}\n","/** @docs-private */\nexport function createMissingDateImplError(provider: string) {\n    return Error(\n        `McDatepicker: No provider found for ${provider}. You must import one of the existing ` +\n        `modules at your application root or provide a custom implementation or use exists ones.`);\n}\n"],"names":["tslib_1.__decorate","tslib_1.__metadata","tslib_1.__param","observableOf"],"mappings":"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"}