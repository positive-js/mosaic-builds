{"version":3,"file":"progress-spinner.js","sources":["../../../packages/mosaic/progress-spinner/progress-spinner.module.ts","../../../packages/mosaic/progress-spinner/progress-spinner.component.ts"],"sourcesContent":["import { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McProgressSpinner } from './progress-spinner.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressSpinner\n    ],\n    declarations: [\n        McProgressSpinner\n    ]\n})\nexport class McProgressSpinnerModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressSpinnerMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressSpinnerBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {}\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McProgressSpinnerMixinBase:\n    CanColorCtor &\n    typeof McProgressSpinnerBase =\n        mixinColor(McProgressSpinnerBase);\n\nconst MAX_DASH_ARRAY = 273;\n\n@Component({\n    selector: 'mc-progress-spinner',\n    templateUrl: './progress-spinner.component.html',\n    styleUrls: ['./progress-spinner.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-spinner',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressSpinner extends McProgressSpinnerMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-spinner-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressSpinnerMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n\n    get dashOffsetPercent(): string {\n        return `${MAX_DASH_ARRAY - this.percentage * MAX_DASH_ARRAY}%`;\n    }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;ACYA,IAAI,UAAU,GAAG,CAAC,CAAlB;;AAEA,MAAM,WAAW,GAAG,CAAC,CAArB;;AACA,MAAM,WAAW,GAAG,GAAG,CAAvB;AAEA,MAAa,qBAAqB,CAAlC;;;;;AAEA,IAAI,WAAJ,CAAuB,WAAuB,EAA9C;AAAA,QAAuB,IAAvB,CAAA,WAAkC,GAAX,WAAW,CAAY;AAA9C,KAAkD;AAClD,CAAC;;;AAGD,MAAa,0BAA0B,GAG/B,UAAU,CAAC,qBAAqB,EAHxC;;AAKA,MAAM,cAAc,GAAG,GAAG,CAA1B;AAaA,MAAa,iBAAkB,SAAQ,0BAA0B,CAAjE;;;;AAMA,IAAI,WAAJ,CAAgB,UAAsB,EAAtC;AACA,QAAQ,KAAK,CAAC,UAAU,CAAC,CAAC;AAN1B,QAAa,IAAb,CAAA,EAAe,GAAW,CAA1B,oBAAA,EAAiD,UAAU,EAAE,CAA7D,CAA+D,CAAC;AAChE,QAAa,IAAb,CAAA,KAAkB,GAAW,CAAC,CAAC;AAC/B,QAAa,IAAb,CAAA,IAAiB,GAAwB,aAAa,CAAC;AACvD,QAAa,IAAb,CAAA,KAAkB,GAAiB,YAAY,CAAC,OAAO,CAAC;AAIxD,KAAK;;;;AAEL,IAAI,IAAI,UAAU,GAAlB;AACA,QAAQ,OAAO,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,WAAW,CAAC;AACtF,KAAK;;;;AAEL,IAAI,IAAI,iBAAiB,GAAzB;AACA,QAAQ,OAAO,CAAf,EAAkB,cAAc,GAAG,IAAI,CAAC,UAAU,GAAG,cAAc,CAAnE,CAAA,CAAsE,CAAC;AACvE,KAAK;;;AA3BL,IAAA,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW;AACX,gBAAI,QAAQ,EAAE,qBAAqB;AACnC,gBAAI,QAAJ,EAAA,wbAAA;AACA,gBAAI,MAAJ,EAAA,CAAa,4pBAAb,CAAA;AACA,gBAAI,eAAe,EAAE,uBAAuB,CAAC,MAAM;AACnD,gBAAI,aAAa,EAAE,iBAAiB,CAAC,IAAI;AACzC,gBAAI,IAAI,EAAE;AACV,oBAAQ,KAAK,EAAE,qBAAqB;AACpC,oBAAQ,WAAW,EAAE,IAAI;AACzB,iBAAK;AACL,aAAC,EAAD,EAAA;;;;AApCA,IAAA,EAAA,IAAA,EAAI,UAAU,EAAd;;;AAsCA,IAAA,EAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,CAAA;AACA,IAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,CAAA;AACA,IAAA,IAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,CAAA;AACA,IAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,CAAA;;;;;;;AD7CA,AAmBA,MAAa,uBAAuB,CAApC;;;AAZA,IAAA,EAAA,IAAA,EAAC,QAAQ,EAAT,IAAA,EAAA,CAAU;AACV,gBAAI,OAAO,EAAE;AACb,oBAAQ,YAAY;AACpB,oBAAQ,cAAc;AACtB,iBAAK;AACL,gBAAI,OAAO,EAAE;AACb,oBAAQ,iBAAiB;AACzB,iBAAK;AACL,gBAAI,YAAY,EAAE;AAClB,oBAAQ,iBAAiB;AACzB,iBAAK;AACL,aAAC,EAAD,EAAA;;;;;"}