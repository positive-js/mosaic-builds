{"version":3,"file":"form-field.js","sources":["../../../packages/mosaic/form-field/form-field.module.ts","../../../packages/mosaic/form-field/form-field.ts","../../../packages/mosaic/form-field/suffix.ts","../../../packages/mosaic/form-field/stepper.ts","../../../packages/mosaic/form-field/prefix.ts","../../../packages/mosaic/form-field/hint.ts","../../../packages/mosaic/form-field/form-field-number-control.ts","../../../packages/mosaic/form-field/form-field-errors.ts","../../../packages/mosaic/form-field/form-field-control.ts","../../../packages/mosaic/form-field/cleaner.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCleaner } from './cleaner';\nimport { McFormField, McFormFieldWithoutBorders } from './form-field';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\n@NgModule({\n    declarations: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ],\n    imports: [CommonModule, McIconModule],\n    exports: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ]\n})\nexport class McFormFieldModule {\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren, Directive,\n    ElementRef,\n    QueryList, ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { CanColor, CanColorCtor, mixinColor } from '@ptsecurity/mosaic/core';\nimport { EMPTY, merge } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\n\nimport { McCleaner } from './cleaner';\nimport { McFormFieldControl } from './form-field-control';\nimport { getMcFormFieldMissingControlError } from './form-field-errors';\nimport { McFormFieldNumberControl } from './form-field-number-control';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\nlet nextUniqueId = 0;\n\nexport class McFormFieldBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McFormFieldMixinBase: CanColorCtor & typeof McFormFieldBase = mixinColor(McFormFieldBase);\n\n@Component({\n    selector: 'mc-form-field',\n    exportAs: 'mcFormField',\n    templateUrl: 'form-field.html',\n    // McInput is a directive and can't have styles, so we need to include its styles here.\n    // The McInput styles are fairly minimal so it shouldn't be a big deal for people who\n    // aren't using McInput.\n    styleUrls: [\n        'form-field.css',\n        '../input/input.css',\n        '../textarea/textarea.css'\n    ],\n    host: {\n        class: 'mc-form-field',\n        '[class.mc-form-field_invalid]': '_control.errorState',\n        '[class.mc-disabled]': '_control.disabled',\n        '[class.mc-form-field_has-prefix]': 'hasPrefix',\n        '[class.mc-form-field_has-suffix]': 'hasSuffix',\n        '[class.mc-form-field_has-cleaner]': 'canShowCleaner',\n        '[class.mc-form-field_has-stepper]': 'canShowStepper',\n        '[class.mc-focused]': '_control.focused',\n        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n        '[class.ng-touched]': '_shouldForward(\"touched\")',\n        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n        '[class.ng-valid]': '_shouldForward(\"valid\")',\n        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n        '[class.ng-pending]': '_shouldForward(\"pending\")',\n        '(keydown)': 'onKeyDown($event)',\n        '(mouseenter)': 'onHoverChanged(true)',\n        '(mouseleave)': 'onHoverChanged(false)'\n    },\n    inputs: ['color'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class McFormField extends _McFormFieldMixinBase implements\n    AfterContentInit, AfterContentChecked, AfterViewInit, CanColor {\n\n    @ContentChild(McFormFieldControl, {static: false}) _control: McFormFieldControl<any>;\n    @ContentChild(McFormFieldNumberControl, {static: false}) _numberControl: McFormFieldNumberControl<any>;\n    @ContentChild(McStepper, {static: false}) _stepper: McStepper;\n\n    @ContentChildren(McHint) _hint: QueryList<McHint>;\n    @ContentChildren(McSuffix) _suffix: QueryList<McSuffix>;\n    @ContentChildren(McPrefix) _prefix: QueryList<McPrefix>;\n    @ContentChildren(McCleaner) _cleaner: QueryList<McCleaner>;\n\n    @ViewChild('connectionContainer', {static: true}) connectionContainerRef: ElementRef;\n\n    // Unique id for the internal form field label.\n    _labelId = `mc-form-field-label-${nextUniqueId++}`;\n\n    hovered: boolean = false;\n\n    canCleanerClearByEsc: boolean = true;\n\n    constructor(public _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {\n        super(_elementRef);\n    }\n\n    ngAfterContentInit() {\n        this._validateControlChild();\n\n        if (this._control.controlType) {\n            this._elementRef.nativeElement.classList\n                .add(`mc-form-field-type-${this._control.controlType}`);\n\n            if (this._numberControl && this.hasStepper) {\n                this._stepper.stepUp.subscribe(this.onStepUp.bind(this));\n                this._stepper.stepDown.subscribe(this.onStepDown.bind(this));\n            }\n        }\n\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        this._control.stateChanges.pipe(startWith())\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n\n        if (this._numberControl) {\n            this._numberControl.stateChanges.pipe(startWith())\n                .subscribe(() => {\n                    this._changeDetectorRef.markForCheck();\n                });\n        }\n\n        // Run change detection if the value changes.\n        const valueChanges = this._control.ngControl && this._control.ngControl.valueChanges || EMPTY;\n\n        merge(valueChanges)\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n\n    ngAfterContentChecked() {\n        this._validateControlChild();\n    }\n\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._changeDetectorRef.detectChanges();\n    }\n\n    clearValue($event) {\n        $event.stopPropagation();\n\n        if (this._control && this._control.ngControl) {\n            this._control.ngControl.reset();\n            this._control.focus();\n        }\n    }\n\n    onContainerClick($event) {\n        if (this._control.onContainerClick) {\n            this._control.onContainerClick($event);\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n        // tslint:disable-next-line:deprecation\n        if (this.canCleanerClearByEsc && event.keyCode === ESCAPE && this._control.focused && this.hasCleaner) {\n            if (this._control && this._control.ngControl) {\n                this._control.ngControl.reset();\n            }\n\n            event.preventDefault();\n        }\n    }\n\n    onHoverChanged(isHovered: boolean) {\n        if (isHovered !== this.hovered) {\n            this.hovered  = isHovered;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    onStepUp() {\n        if (this._numberControl) {\n            this._numberControl.stepUp(this._numberControl.step);\n        }\n    }\n\n    onStepDown() {\n        if (this._numberControl) {\n            this._numberControl.stepDown(this._numberControl.step);\n        }\n    }\n\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     */\n    getConnectedOverlayOrigin(): ElementRef {\n        return this.connectionContainerRef || this._elementRef;\n    }\n\n        /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop: keyof NgControl): boolean {\n        const ngControl = this._control ? this._control.ngControl : null;\n\n        return ngControl && ngControl[prop];\n    }\n\n    /** Throws an error if the form field's control is missing. */\n    protected _validateControlChild() {\n        if (!this._control) {\n            throw getMcFormFieldMissingControlError();\n        }\n    }\n\n    get hasHint(): boolean {\n        return this._hint && this._hint.length > 0;\n    }\n\n    get hasSuffix(): boolean {\n        return this._suffix && this._suffix.length > 0;\n    }\n\n    get hasPrefix(): boolean {\n        return this._prefix && this._prefix.length > 0;\n    }\n\n    get hasCleaner(): boolean {\n        return this._cleaner && this._cleaner.length > 0;\n    }\n\n    get hasStepper(): boolean {\n        return !!this._stepper;\n    }\n\n    get canShowCleaner(): boolean {\n        return this.hasCleaner &&\n            this._control &&\n            this._control.ngControl\n                ? this._control.ngControl.value && !this._control.disabled\n                : false;\n    }\n\n\n    get disabled(): boolean {\n        return this._control && this._control.disabled;\n    }\n\n    get canShowStepper(): boolean {\n        return this._numberControl &&\n            !this.disabled &&\n            (\n                this._numberControl.focused ||\n                this.hovered\n            );\n    }\n}\n\n@Directive({\n    selector: 'mc-form-field[mcFormFieldWithoutBorders]',\n    exportAs: 'mcFormFieldWithoutBorders',\n    host: { class: 'mc-form-field_without-borders' }\n})\nexport class McFormFieldWithoutBorders {}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcSuffix]'\n})\nexport class McSuffix {\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-stepper',\n    template: `\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-up mc-angle-down-L_16\"\n           (mousedown)=\"onStepUp($event)\">\n        </i>\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-down mc-angle-down-L_16\"\n           (mousedown)=\"onStepDown($event)\">\n        </i>\n    `\n})\nexport class McStepper {\n    @Output()\n    readonly stepUp: EventEmitter<void> = new EventEmitter<void>();\n    @Output()\n    readonly stepDown: EventEmitter<void> = new EventEmitter<void>();\n\n    onStepUp($event: MouseEvent) {\n        this.stepUp.emit();\n        $event.preventDefault();\n    }\n\n    onStepDown($event: MouseEvent) {\n        this.stepDown.emit();\n        $event.preventDefault();\n    }\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcPrefix]'\n})\nexport class McPrefix {\n}\n","import { Directive, Input } from '@angular/core';\n\n\nlet nextUniqueId = 0;\n\n@Directive({\n    selector: 'mc-hint',\n    host: {\n        class: 'mc-hint',\n        '[attr.id]': 'id'\n    }\n})\nexport class McHint {\n    @Input() id: string = `mc-hint-${nextUniqueId++}`;\n}\n","import { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldNumberControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** the number step */\n    step: number;\n\n    /** the number big step */\n    bigStep: number;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Handles step up and down */\n    abstract stepUp(step: number): void;\n\n    abstract stepDown(step: number): void;\n}\n","export function getMcFormFieldMissingControlError(): Error {\n  return Error('mc-form-field must contain a McFormFieldControl.');\n}\n","import { NgControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** The element ID for this control. */\n    readonly id: string;\n\n    /** The placeholder for this control. */\n    readonly placeholder: string;\n\n    /** Gets the NgControl for this control. */\n    readonly ngControl: NgControl | null;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Whether the control is empty. */\n    readonly empty: boolean;\n\n    /** Whether the control is required. */\n    readonly required: boolean;\n\n    /** Whether the control is disabled. */\n    readonly disabled: boolean;\n\n    /** Whether the control is in an error state. */\n    readonly errorState: boolean;\n\n    /**\n     * An optional name for the control type that can be used to distinguish `mc-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mc-form-field-type-{{controlType}}` to its root element.\n     */\n    readonly controlType?: string;\n\n    /** Handles a click on the control's container. */\n    abstract onContainerClick(event: MouseEvent): void;\n\n    abstract focus(): void;\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-cleaner',\n    template: '<i class=\"mc-icon_light\" mc-icon=\"mc-close-M_16\" color=\"second\"></i>'\n})\nexport class McCleaner {}\n"],"names":["nextUniqueId"],"mappings":"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"}