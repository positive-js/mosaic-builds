{"version":3,"file":"form-field.js","sources":["../../../src/lib/form-field/index.ts","../../../src/lib/form-field/form-field.module.ts","../../../src/lib/form-field/form-field.ts","../../../src/lib/form-field/suffix.ts","../../../src/lib/form-field/prefix.ts","../../../src/lib/form-field/hint.ts","../../../src/lib/form-field/form-field-errors.ts","../../../src/lib/form-field/form-field-control.ts","../../../src/lib/form-field/cleaner.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCleaner } from './cleaner';\nimport { McFormField, McFormFieldWithoutBorders } from './form-field';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McSuffix } from './suffix';\n\n\n@NgModule({\n    declarations: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner\n    ],\n    imports: [CommonModule, McIconModule],\n    exports: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner\n    ]\n})\nexport class McFormFieldModule {\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren, Directive,\n    ElementRef,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\nimport { EMPTY, merge } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\n\nimport { McCleaner } from './cleaner';\nimport { McFormFieldControl } from './form-field-control';\nimport { getMcFormFieldMissingControlError } from './form-field-errors';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McSuffix } from './suffix';\n\n\nlet nextUniqueId = 0;\n\nexport class McFormFieldBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McFormFieldMixinBase: CanColorCtor & typeof McFormFieldBase\n    = mixinColor(McFormFieldBase, ThemePalette.Primary);\n\n@Component({\n    selector: 'mc-form-field',\n    exportAs: 'mcFormField',\n    templateUrl: 'form-field.html',\n    // McInput is a directive and can't have styles, so we need to include its styles here.\n    // The McInput styles are fairly minimal so it shouldn't be a big deal for people who\n    // aren't using McInput.\n    styleUrls: [\n        'form-field.css',\n        '../input/input.css'\n    ],\n    host: {\n        class: 'mc-form-field',\n        '[class.mc-form-field_invalid]': '_control.errorState',\n        '[class.mc-form-field_disabled]': '_control.disabled',\n        '[class.mc-form-field_has-prefix]': 'hasPrefix',\n        '[class.mc-form-field_has-suffix]': 'hasSuffix',\n        '[class.mc-form-field_has-cleaner]': 'hasCleaner',\n        '[class.mc-focused]': '_control.focused',\n        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n        '[class.ng-touched]': '_shouldForward(\"touched\")',\n        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n        '[class.ng-valid]': '_shouldForward(\"valid\")',\n        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n        '[class.ng-pending]': '_shouldForward(\"pending\")',\n        '(keydown)': 'onKeyDown($event)'\n    },\n    inputs: ['color'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class McFormField extends _McFormFieldMixinBase implements\n    AfterContentInit, AfterContentChecked, AfterViewInit, CanColor {\n\n    @ContentChild(McFormFieldControl) _control: McFormFieldControl<any>;\n    @ContentChildren(McHint) _hint: QueryList<McHint>;\n    @ContentChildren(McSuffix) _suffix: QueryList<McSuffix>;\n    @ContentChildren(McPrefix) _prefix: QueryList<McPrefix>;\n    @ContentChildren(McCleaner) _cleaner: QueryList<McCleaner>;\n\n    // Unique id for the internal form field label.\n    _labelId = `mc-form-field-label-${nextUniqueId++}`;\n\n    constructor(public _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {\n        super(_elementRef);\n    }\n\n    ngAfterContentInit() {\n        this._validateControlChild();\n        if (this._control.controlType) {\n            this._elementRef.nativeElement.classList\n                .add(`mc-form-field-type-${this._control.controlType}`);\n        }\n\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        this._control.stateChanges.pipe(startWith())\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n\n        // Run change detection if the value changes.\n        const valueChanges = this._control.ngControl && this._control.ngControl.valueChanges || EMPTY;\n\n        merge(valueChanges)\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n\n    ngAfterContentChecked() {\n        this._validateControlChild();\n    }\n\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._changeDetectorRef.detectChanges();\n    }\n\n    clearValue($event) {\n        $event.stopPropagation();\n\n        if (this._control && this._control.ngControl) {\n            this._control.ngControl.reset();\n        }\n    }\n\n    onContainerClick($event) {\n        return this._control.onContainerClick && this._control.onContainerClick($event);\n    }\n\n    onKeyDown(e: KeyboardEvent): void {\n        if (e.keyCode === ESCAPE &&\n            this._control.focused &&\n            this.hasCleaner) {\n\n            if (this._control && this._control.ngControl) {\n                this._control.ngControl.reset();\n            }\n\n            e.preventDefault();\n        }\n    }\n\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop: string): boolean {\n        const ngControl = this._control ? this._control.ngControl : null;\n\n        return ngControl && ngControl[prop];\n    }\n\n    /** Throws an error if the form field's control is missing. */\n    protected _validateControlChild() {\n        if (!this._control) {\n            throw getMcFormFieldMissingControlError();\n        }\n    }\n\n    get hasHint() {\n        return this._hint && this._hint.length > 0;\n    }\n\n    get hasSuffix() {\n        return this._suffix && this._suffix.length > 0;\n    }\n\n    get hasPrefix() {\n        return this._prefix && this._prefix.length > 0;\n    }\n\n    get hasCleaner() {\n        return this._cleaner && this._cleaner.length > 0;\n    }\n\n    get canShowCleaner() {\n        return this.hasCleaner &&\n        this._control && this._control.ngControl\n            ? this._control.ngControl.value && !this._control.disabled\n            : false;\n    }\n}\n\n@Directive({\n    selector: 'mc-form-field[mcFormFieldWithoutBorders]',\n    exportAs: 'mcFormFieldWithoutBorders',\n    host: { class: 'mc-form-field_without-borders' }\n})\nexport class McFormFieldWithoutBorders {\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcSuffix]'\n})\nexport class McSuffix {\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcPrefix]'\n})\nexport class McPrefix {\n}\n","import { Directive, Input } from '@angular/core';\n\n\nlet nextUniqueId = 0;\n\n@Directive({\n    selector: 'mc-hint',\n    host: {\n        class: 'mc-hint',\n        '[attr.id]': 'id'\n    }\n})\nexport class McHint {\n    @Input() id: string = `mc-hint-${nextUniqueId++}`;\n}\n","export function getMcFormFieldMissingControlError(): Error {\n  return Error('mc-form-field must contain a McFormFieldControl.');\n}\n","import { NgControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** The element ID for this control. */\n    readonly id: string;\n\n    /** The placeholder for this control. */\n    readonly placeholder: string;\n\n    /** Gets the NgControl for this control. */\n    readonly ngControl: NgControl | null;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Whether the control is empty. */\n    readonly empty: boolean;\n\n    /** Whether the control is required. */\n    readonly required: boolean;\n\n    /** Whether the control is disabled. */\n    readonly disabled: boolean;\n\n    /** Whether the control is in an error state. */\n    readonly errorState: boolean;\n\n    /**\n     * An optional name for the control type that can be used to distinguish `mc-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mc-form-field-type-{{controlType}}` to its root element.\n     */\n    readonly controlType?: string;\n\n    /** Handles a click on the control's container. */\n    abstract onContainerClick(event: MouseEvent): void;\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-cleaner',\n    template: '<i mc-icon=\"mc-close-M_16\" class=\"mc-cleaner__icon\"></i>'\n})\nexport class McCleaner {\n}\n"],"names":["tslib_1.__decorate","tslib_1.__metadata","nextUniqueId"],"mappings":"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"}