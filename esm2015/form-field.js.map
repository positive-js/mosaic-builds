{"version":3,"file":"form-field.js","sources":["../../../packages/mosaic/form-field/form-field.module.ts","../../../packages/mosaic/form-field/form-field.ts","../../../packages/mosaic/form-field/suffix.ts","../../../packages/mosaic/form-field/stepper.ts","../../../packages/mosaic/form-field/prefix.ts","../../../packages/mosaic/form-field/hint.ts","../../../packages/mosaic/form-field/form-field-number-control.ts","../../../packages/mosaic/form-field/form-field-errors.ts","../../../packages/mosaic/form-field/form-field-control.ts","../../../packages/mosaic/form-field/cleaner.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCleaner } from './cleaner';\nimport { McFormField, McFormFieldWithoutBorders } from './form-field';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\n@NgModule({\n    declarations: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ],\n    imports: [CommonModule, McIconModule],\n    exports: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ]\n})\nexport class McFormFieldModule {\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren, Directive,\n    ElementRef,\n    QueryList, ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { CanColor, CanColorCtor, mixinColor } from '@ptsecurity/mosaic/core';\nimport { EMPTY, merge } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\n\nimport { McCleaner } from './cleaner';\nimport { McFormFieldControl } from './form-field-control';\nimport {\n    getMcFormFieldMissingControlError,\n    getMcFormFieldYouCanNotUseCleanerInNumberInputError\n} from './form-field-errors';\nimport { McFormFieldNumberControl } from './form-field-number-control';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\nlet nextUniqueId = 0;\n\nexport class McFormFieldBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {}\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McFormFieldMixinBase: CanColorCtor & typeof McFormFieldBase = mixinColor(McFormFieldBase);\n\n@Component({\n    selector: 'mc-form-field',\n    exportAs: 'mcFormField',\n    templateUrl: 'form-field.html',\n    // McInput is a directive and can't have styles, so we need to include its styles here.\n    // The McInput styles are fairly minimal so it shouldn't be a big deal for people who\n    // aren't using McInput.\n    styleUrls: [\n        'form-field.css',\n        '../input/input.css',\n        '../textarea/textarea.css'\n    ],\n    host: {\n        class: 'mc-form-field',\n        '[class.mc-form-field_invalid]': 'control.errorState',\n        '[class.mc-disabled]': 'control.disabled',\n        '[class.mc-form-field_has-prefix]': 'hasPrefix',\n        '[class.mc-form-field_has-suffix]': 'hasSuffix',\n        '[class.mc-form-field_has-cleaner]': 'canShowCleaner',\n        '[class.mc-form-field_has-stepper]': 'canShowStepper',\n        '[class.mc-focused]': 'control.focused',\n        '[class.ng-untouched]': 'shouldForward(\"untouched\")',\n        '[class.ng-touched]': 'shouldForward(\"touched\")',\n        '[class.ng-pristine]': 'shouldForward(\"pristine\")',\n        '[class.ng-dirty]': 'shouldForward(\"dirty\")',\n        '[class.ng-valid]': 'shouldForward(\"valid\")',\n        '[class.ng-invalid]': 'shouldForward(\"invalid\")',\n        '[class.ng-pending]': 'shouldForward(\"pending\")',\n        '(keydown)': 'onKeyDown($event)',\n        '(mouseenter)': 'onHoverChanged(true)',\n        '(mouseleave)': 'onHoverChanged(false)'\n    },\n    inputs: ['color'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class McFormField extends McFormFieldMixinBase implements\n    AfterContentInit, AfterContentChecked, AfterViewInit, CanColor {\n\n    @ContentChild(McFormFieldControl, { static: false }) control: McFormFieldControl<any>;\n    @ContentChild(McFormFieldNumberControl, { static: false }) numberControl: McFormFieldNumberControl<any>;\n    @ContentChild(McStepper, { static: false }) stepper: McStepper;\n    @ContentChild(McCleaner, { static: false }) cleaner: McCleaner | null;\n\n    @ContentChildren(McHint) hint: QueryList<McHint>;\n    @ContentChildren(McSuffix) suffix: QueryList<McSuffix>;\n    @ContentChildren(McPrefix) prefix: QueryList<McPrefix>;\n\n    @ViewChild('connectionContainer', { static: true }) connectionContainerRef: ElementRef;\n\n    // Unique id for the internal form field label.\n    labelId = `mc-form-field-label-${nextUniqueId++}`;\n\n    hovered: boolean = false;\n\n    canCleanerClearByEsc: boolean = true;\n\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {\n        super(_elementRef);\n    }\n\n    ngAfterContentInit() {\n        if (this.numberControl && this.hasCleaner) {\n            this.cleaner = null;\n            throw getMcFormFieldYouCanNotUseCleanerInNumberInputError();\n        }\n\n        this.validateControlChild();\n\n        if (this.control.controlType) {\n            this._elementRef.nativeElement.classList\n                .add(`mc-form-field-type-${this.control.controlType}`);\n\n            if (this.numberControl && this.hasStepper) {\n                this.stepper.stepUp.subscribe(this.onStepUp.bind(this));\n                this.stepper.stepDown.subscribe(this.onStepDown.bind(this));\n            }\n        }\n\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        this.control.stateChanges\n            .pipe(startWith())\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n\n        if (this.numberControl) {\n            this.numberControl.stateChanges\n                .pipe(startWith())\n                .subscribe(() => {\n                    this._changeDetectorRef.markForCheck();\n                });\n        }\n\n        // Run change detection if the value changes.\n        const valueChanges = this.control.ngControl && this.control.ngControl.valueChanges || EMPTY;\n\n        merge(valueChanges)\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n\n    ngAfterContentChecked() {\n        this.validateControlChild();\n    }\n\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._changeDetectorRef.detectChanges();\n    }\n\n    clearValue($event) {\n        $event.stopPropagation();\n\n        if (this.control && this.control.ngControl) {\n            this.control.ngControl.reset();\n            this.control.focus();\n        }\n    }\n\n    onContainerClick($event) {\n        if (this.control.onContainerClick) {\n            this.control.onContainerClick($event);\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n        // tslint:disable-next-line:deprecation\n        if (this.canCleanerClearByEsc && event.keyCode === ESCAPE && this.control.focused && this.hasCleaner) {\n            if (this.control && this.control.ngControl) {\n                this.control.ngControl.reset();\n            }\n\n            event.preventDefault();\n        }\n    }\n\n    onHoverChanged(isHovered: boolean) {\n        if (isHovered !== this.hovered) {\n            this.hovered  = isHovered;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    onStepUp() {\n        if (this.numberControl) {\n            this.numberControl.stepUp(this.numberControl.step);\n        }\n    }\n\n    onStepDown() {\n        if (this.numberControl) {\n            this.numberControl.stepDown(this.numberControl.step);\n        }\n    }\n\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     */\n    getConnectedOverlayOrigin(): ElementRef {\n        return this.connectionContainerRef || this._elementRef;\n    }\n\n        /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    shouldForward(prop: keyof NgControl): boolean {\n        const ngControl = this.control ? this.control.ngControl : null;\n\n        return ngControl && ngControl[prop];\n    }\n\n    /** Throws an error if the form field's control is missing. */\n    protected validateControlChild() {\n        if (!this.control) {\n            throw getMcFormFieldMissingControlError();\n        }\n    }\n\n    get hasHint(): boolean {\n        return this.hint && this.hint.length > 0;\n    }\n\n    get hasSuffix(): boolean {\n        return this.suffix && this.suffix.length > 0;\n    }\n\n    get hasPrefix(): boolean {\n        return this.prefix && this.prefix.length > 0;\n    }\n\n    get hasCleaner(): boolean {\n        return !!this.cleaner;\n    }\n\n    get hasStepper(): boolean {\n        return !!this.stepper;\n    }\n\n    get canShowCleaner(): boolean {\n        return this.hasCleaner &&\n            this.control &&\n            this.control.ngControl\n                ? this.control.ngControl.value && !this.control.disabled\n                : false;\n    }\n\n    get disabled(): boolean {\n        return this.control && this.control.disabled;\n    }\n\n    get canShowStepper(): boolean {\n        return this.numberControl &&\n            !this.disabled &&\n            (\n                this.numberControl.focused ||\n                this.hovered\n            );\n    }\n}\n\n@Directive({\n    selector: 'mc-form-field[mcFormFieldWithoutBorders]',\n    exportAs: 'mcFormFieldWithoutBorders',\n    host: { class: 'mc-form-field_without-borders' }\n})\nexport class McFormFieldWithoutBorders {}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcSuffix]'\n})\nexport class McSuffix {\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-stepper',\n    template: `\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-up mc-angle-down-L_16\"\n           (mousedown)=\"onStepUp($event)\">\n        </i>\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-down mc-angle-down-L_16\"\n           (mousedown)=\"onStepDown($event)\">\n        </i>\n    `\n})\nexport class McStepper {\n    @Output()\n    readonly stepUp: EventEmitter<void> = new EventEmitter<void>();\n    @Output()\n    readonly stepDown: EventEmitter<void> = new EventEmitter<void>();\n\n    onStepUp($event: MouseEvent) {\n        this.stepUp.emit();\n        $event.preventDefault();\n    }\n\n    onStepDown($event: MouseEvent) {\n        this.stepDown.emit();\n        $event.preventDefault();\n    }\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcPrefix]'\n})\nexport class McPrefix {\n}\n","import { Directive, Input } from '@angular/core';\n\n\nlet nextUniqueId = 0;\n\n@Directive({\n    selector: 'mc-hint',\n    host: {\n        class: 'mc-hint',\n        '[attr.id]': 'id'\n    }\n})\nexport class McHint {\n    @Input() id: string = `mc-hint-${nextUniqueId++}`;\n}\n","import { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\n// tslint:disable-next-line:naming-convention\nexport abstract class McFormFieldNumberControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** the number step */\n    step: number;\n\n    /** the number big step */\n    bigStep: number;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Handles step up and down */\n    abstract stepUp(step: number): void;\n\n    abstract stepDown(step: number): void;\n}\n","export function getMcFormFieldMissingControlError(): Error {\n  return Error('mc-form-field must contain a McFormFieldControl.');\n}\n\nexport function getMcFormFieldYouCanNotUseCleanerInNumberInputError(): Error {\n  return Error(`You can't use mc-cleaner with input that have type=\"number\"`);\n}\n","import { NgControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\n// tslint:disable-next-line:naming-convention\nexport abstract class McFormFieldControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** The element ID for this control. */\n    readonly id: string;\n\n    /** The placeholder for this control. */\n    readonly placeholder: string;\n\n    /** Gets the NgControl for this control. */\n    readonly ngControl: NgControl | null;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Whether the control is empty. */\n    readonly empty: boolean;\n\n    /** Whether the control is required. */\n    readonly required: boolean;\n\n    /** Whether the control is disabled. */\n    readonly disabled: boolean;\n\n    /** Whether the control is in an error state. */\n    readonly errorState: boolean;\n\n    /**\n     * An optional name for the control type that can be used to distinguish `mc-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mc-form-field-type-{{controlType}}` to its root element.\n     */\n    readonly controlType?: string;\n\n    /** Handles a click on the control's container. */\n    abstract onContainerClick(event: MouseEvent): void;\n\n    abstract focus(): void;\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-cleaner',\n    exportAs: 'mcCleaner',\n    template: '<i class=\"mc-icon_light\" mc-icon=\"mc-close-M_16\" color=\"second\"></i>',\n    host: {\n        class: 'mc-cleaner'\n    }\n})\nexport class McCleaner {}\n"],"names":["nextUniqueId"],"mappings":"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"}