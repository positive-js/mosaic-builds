{"version":3,"file":"modal.js","sources":["../../../src/lib/modal/modal.module.ts","../../../src/lib/modal/modal.service.ts","../../../src/lib/modal/css-unit.pipe.ts","../../../src/lib/modal/modal.component.ts","../../../src/lib/modal/modal-util.ts","../../../src/lib/modal/modal-ref.class.ts","../../../src/lib/modal/modal-control.service.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { CssUnitPipe } from './css-unit.pipe';\nimport { McModalControlService } from './modal-control.service';\nimport { McModalComponent } from './modal.component';\nimport { McModalService } from './modal.service';\n\n\n@NgModule({\n    imports: [ CommonModule, OverlayModule, McButtonModule, McIconModule ],\n    exports: [ McModalComponent ],\n    declarations: [ McModalComponent, CssUnitPipe ],\n    entryComponents: [ McModalComponent ],\n    providers: [ McModalControlService, McModalService ]\n})\nexport class McModalModule { }\n","import { ComponentRef, Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\nimport { McModalComponent } from './modal.component';\nimport { ConfirmType, IModalOptions, IModalOptionsForService } from './modal.type';\n\n\n// A builder used for managing service creating modals\nexport class ModalBuilderForService {\n\n    // Modal ComponentRef, \"null\" means it has been destroyed\n    private modalRef: ComponentRef<McModalComponent>;\n    private overlayRef: OverlayRef;\n\n    constructor(private overlay: Overlay, options: IModalOptionsForService = {}) {\n        this.createModal();\n\n        if (!('mcGetContainer' in options)) {\n            options.mcGetContainer = null;\n        }\n\n        this.changeProps(options);\n        this.modalRef.instance.open();\n        this.modalRef.instance.mcAfterClose.subscribe(() => this.destroyModal());\n\n        this.overlayRef.keydownEvents()\n            // @ts-ignore\n            .pipe(filter((event: KeyboardEvent) => {\n                return event.keyCode === ESCAPE && options.mcCloseByESC;\n            }))\n            .subscribe(() => this.modalRef.instance.close());\n    }\n\n    getInstance(): McModalComponent {\n        return this.modalRef && this.modalRef.instance;\n    }\n\n    destroyModal(): void {\n        if (this.modalRef) {\n            this.overlayRef.dispose();\n            // @ts-ignore\n            this.modalRef = null;\n        }\n    }\n\n    private changeProps(options: IModalOptions): void {\n        if (this.modalRef) {\n            // here not limit user's inputs at runtime\n            Object.assign(this.modalRef.instance, options);\n        }\n    }\n\n    // Create component to ApplicationRef\n    private createModal(): void {\n        this.overlayRef = this.overlay.create();\n        this.modalRef = this.overlayRef.attach(new ComponentPortal(McModalComponent));\n    }\n}\n\n@Injectable()\nexport class McModalService {\n    // Track of the current close modals (we assume invisible is close this time)\n    get openModals(): McModalRef[] {\n        return this.modalControl.openModals;\n    }\n\n    get afterAllClose(): Observable<void> {\n        return this.modalControl.afterAllClose.asObservable();\n    }\n\n    constructor(\n        private overlay: Overlay,\n        private modalControl: McModalControlService) {\n    }\n\n    // Closes all of the currently-open dialogs\n    closeAll(): void {\n        this.modalControl.closeAll();\n    }\n\n    create<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n\n        if (typeof options.mcOnCancel !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnCancel = () => {};\n        }\n\n        if (!('mcCloseByESC' in options)) {\n            options.mcCloseByESC = true;\n        }\n\n\n        if (!('mcWidth' in options)) {\n            // tslint:disable-next-line\n            options.mcWidth = 480;\n        }\n\n        return new ModalBuilderForService(this.overlay, options).getInstance();\n    }\n\n    confirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType = 'confirm'): McModalRef<T> {\n        if ('mcFooter' in options) {\n            console.warn(`The Confirm-Modal doesn't support \"mcFooter\", this property will be ignored.`);\n        }\n\n        // NOTE: only support function currently by calling confirm()\n        if (typeof options.mcOnOk !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnOk = () => {};\n        }\n\n        options.mcModalType = 'confirm';\n        options.mcClassName = `mc-confirm mc-confirm-${confirmType} ${options.mcClassName || ''}`;\n        options.mcMaskClosable = false;\n\n        return this.create(options);\n    }\n\n    success<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'success');\n    }\n\n    delete<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'warn');\n    }\n\n    private simpleConfirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType): McModalRef<T> {\n        // Remove the Cancel button if the user not specify a Cancel button\n        if (!('mcCancelText' in options)) {\n            // @ts-ignore\n            options.mcCancelText = null;\n        }\n\n        return this.confirm(options, confirmType);\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({\n    name: 'toCssUnit'\n})\nexport class CssUnitPipe implements PipeTransform {\n    transform(value: number | string, defaultUnit: string = 'px'): string {\n        const formatted = +value;\n\n        return isNaN(formatted) ? `${value}` : `${formatted}${defaultUnit}`;\n    }\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    Renderer2,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewContainerRef, ViewEncapsulation\n} from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { McMeasureScrollbarService } from '@ptsecurity/mosaic/core';\nimport { Observable } from 'rxjs';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\n// tslint:disable-next-line\nimport ModalUtil from './modal-util';\nimport { IModalButtonOptions, IModalOptions, ModalType, OnClickCallback } from './modal.type';\n\n\n// Duration when perform animations (ms)\nexport const MODAL_ANIMATE_DURATION = 200;\n\ntype AnimationState = 'enter' | 'leave' | null;\n\n@Component({\n    selector: 'mc-modal',\n    templateUrl: './modal.component.html',\n    styleUrls: ['./modal.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McModalComponent<T = any, R = any> extends McModalRef<T, R>\n    implements OnInit, OnChanges, AfterViewInit, OnDestroy, IModalOptions {\n\n    // tslint:disable-next-line:no-any\n    @Input() mcModalType: ModalType = 'default';\n    // If not specified, will use <ng-content>\n    @Input() mcContent: string | TemplateRef<{}> | Type<T>;\n    // available when mcContent is a component\n    @Input() mcComponentParams: object;\n    // Default Modal ONLY\n    @Input() mcFooter: string | TemplateRef<{}> | IModalButtonOptions<T>[];\n\n    @Input()\n    get mcVisible() { return this._mcVisible; }\n    set mcVisible(value) { this._mcVisible = value; }\n    _mcVisible = false;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n\n    @Input() mcZIndex: number = 1000;\n    @Input() mcWidth: number | string = 480;\n    @Input() mcWrapClassName: string;\n    @Input() mcClassName: string;\n    @Input() mcStyle: object;\n    @Input() mcTitle: string | TemplateRef<{}>;\n    @Input() mcCloseByESC: boolean = true;\n\n    @Input()\n    get mcClosable() { return this._mcClosable; }\n    set mcClosable(value) { this._mcClosable = value; }\n    _mcClosable = true;\n\n    @Input()\n    get mcMask() { return this._mcMask; }\n    set mcMask(value) { this._mcMask = value; }\n    _mcMask = true;\n\n    @Input()\n    get mcMaskClosable() { return this._mcMaskClosable; }\n    set mcMaskClosable(value) { this._mcMaskClosable = value; }\n    _mcMaskClosable = true;\n\n    @Input() mcMaskStyle: object;\n    @Input() mcBodyStyle: object;\n\n    // Trigger when modal open(visible) after animations\n    @Output() mcAfterOpen = new EventEmitter<void>();\n    // Trigger when modal leave-animation over\n    @Output() mcAfterClose = new EventEmitter<R>();\n\n    // --- Predefined OK & Cancel buttons\n    @Input() mcOkText: string;\n    @Input() mcOkType = 'primary';\n\n    @Input()\n    get mcOkLoading() { return this._mcOkLoading; }\n    set mcOkLoading(value) { this._mcOkLoading = value; }\n    _mcOkLoading = false;\n\n    @Input() @Output() mcOnOk: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    // Only aim to focus the ok button that needs to be auto focused\n    @ViewChild('autoFocusButtonOk', {read: ElementRef}) autoFocusButtonOk: ElementRef;\n    @Input() mcCancelText: string;\n\n    @Input()\n    get mcCancelLoading() { return this._mcCancelLoading; }\n    set mcCancelLoading(value) { this._mcCancelLoading = value; }\n    _mcCancelLoading = false;\n\n    @Input() @Output() mcOnCancel: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    @ViewChild('modalContainer') modalContainer: ElementRef;\n    @ViewChild('bodyContainer', {read: ViewContainerRef}) bodyContainer: ViewContainerRef;\n    maskAnimationClassMap: object;\n    modalAnimationClassMap: object;\n    // The origin point that animation based on\n    transformOrigin = '0px 0px 0px';\n\n    // Observable alias for mcAfterOpen\n    get afterOpen(): Observable<void> {\n        return this.mcAfterOpen.asObservable();\n    }\n\n    // Observable alias for mcAfterClose\n    get afterClose(): Observable<R> {\n        return this.mcAfterClose.asObservable();\n    }\n\n    get okText(): string {\n        return this.mcOkText;\n    }\n\n    get cancelText(): string {\n        return this.mcCancelText;\n    }\n\n    // Indicate whether this dialog should hidden\n    get hidden(): boolean {\n        return !this.mcVisible && !this.animationState;\n    }\n\n    // Handle the reference when using mcContent as Component\n    private contentComponentRef: ComponentRef<T>;\n    // Current animation state\n    private animationState: AnimationState;\n    private container: HTMLElement | OverlayRef;\n\n    constructor(\n        private overlay: Overlay,\n        private renderer: Renderer2,\n        private cfr: ComponentFactoryResolver,\n        private elementRef: ElementRef,\n        private viewContainer: ViewContainerRef,\n        private mcMeasureScrollbarService: McMeasureScrollbarService,\n        private modalControl: McModalControlService,\n        private changeDetector: ChangeDetectorRef,\n        @Inject(DOCUMENT) private document: any) {\n\n        super();\n    }\n\n    @Input() mcGetContainer: HTMLElement | OverlayRef | (() => HTMLElement | OverlayRef) = () => this.overlay.create();\n\n    ngOnInit() {\n\n        // Create component along without View\n        if (this.isComponent(this.mcContent)) {\n            this.createDynamicComponent(this.mcContent as Type<T>);\n        }\n\n        // Setup default button options\n        if (this.isModalButtons(this.mcFooter)) {\n            this.mcFooter = this.formatModalButtons(this.mcFooter as IModalButtonOptions<T>[]);\n        }\n\n        // Place the modal dom to elsewhere\n        this.container = typeof this.mcGetContainer === 'function' ? this.mcGetContainer() : this.mcGetContainer;\n        if (this.container instanceof HTMLElement) {\n            this.container.appendChild(this.elementRef.nativeElement);\n        } else if (this.container instanceof OverlayRef) {\n            // NOTE: only attach the dom to overlay, the view container is not changed actually\n            this.container.overlayElement.appendChild(this.elementRef.nativeElement);\n        }\n\n        // Register modal when afterOpen/afterClose is stable\n        this.modalControl.registerModal(this);\n    }\n\n    // [NOTE] NOT available when using by service!\n    // Because ngOnChanges never be called when using by service,\n    // here we can't support \"mcContent\"(Component) etc. as inputs that initialized dynamically.\n    // BUT: User also can change \"mcContent\" dynamically to trigger UI changes\n    // (provided you don't use \bComponent that needs initializations)\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.mcVisible) {\n            // Do not trigger animation while initializing\n            this.handleVisibleStateChange(this.mcVisible, !changes.mcVisible.firstChange);\n        }\n    }\n\n    ngAfterViewInit() {\n        // If using Component, it is the time to attach View while bodyContainer is ready\n        if (this.contentComponentRef) {\n            this.bodyContainer.insert(this.contentComponentRef.hostView);\n        }\n\n        if (this.autoFocusButtonOk) {\n            (this.autoFocusButtonOk.nativeElement as HTMLButtonElement).focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.container instanceof OverlayRef) {\n            this.container.dispose();\n        }\n    }\n\n    open() {\n        this.changeVisibleFromInside(true);\n    }\n\n    close(result?: R) {\n        this.changeVisibleFromInside(false, result);\n    }\n\n    // Destroy equals Close\n    destroy(result?: R) {\n        this.close(result);\n    }\n\n    triggerOk() {\n        this.onClickOkCancel('ok');\n    }\n\n    triggerCancel() {\n        this.onClickOkCancel('cancel');\n    }\n\n    getInstance(): McModalComponent {\n        return this;\n    }\n\n    getContentComponentRef(): ComponentRef<T> {\n        return this.contentComponentRef;\n    }\n\n    getContentComponent(): T {\n        return this.contentComponentRef && this.contentComponentRef.instance;\n    }\n\n    getElement(): HTMLElement {\n        return this.elementRef && this.elementRef.nativeElement;\n    }\n\n    onClickMask($event: MouseEvent) {\n        if (\n            this.mcMask &&\n            this.mcMaskClosable &&\n            ($event.target as HTMLElement).classList.contains('mc-modal-wrap') &&\n            this.mcVisible\n        ) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // tslint:disable-next-line\n    isModalType(type: ModalType): boolean {\n        return this.mcModalType === type;\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        if (event.keyCode === ESCAPE && this.container && (this.container instanceof OverlayRef)) {\n\n            this.close();\n            event.preventDefault();\n        }\n    }\n\n    // AoT\n    onClickCloseBtn() {\n        if (this.mcVisible) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // AoT\n    // tslint:disable-next-line\n    onClickOkCancel(type: 'ok' | 'cancel') {\n        const trigger = { ok: this.mcOnOk, cancel: this.mcOnCancel }[type];\n        const loadingKey = { ok: 'mcOkLoading', cancel: 'mcCancelLoading' }[type];\n\n        if (trigger instanceof EventEmitter) {\n            trigger.emit(this.getContentComponent());\n        } else if (typeof trigger === 'function') {\n\n            const result = trigger(this.getContentComponent());\n            // Users can return \"false\" to prevent closing by default\n            const caseClose = (doClose: boolean | void | {}) => (doClose !== false) && this.close(doClose as R);\n\n            if (isPromise(result)) {\n                this[loadingKey] = true;\n                const handleThen = (doClose) => {\n                    this[loadingKey] = false;\n                    caseClose(doClose);\n                };\n                (result as Promise<void>).then(handleThen).catch(handleThen);\n            } else {\n                caseClose(result);\n            }\n        }\n    }\n\n    // AoT\n    isNonEmptyString(value: {}): boolean {\n        return typeof value === 'string' && value !== '';\n    }\n\n    // AoT\n    isTemplateRef(value: {}): boolean {\n        return value instanceof TemplateRef;\n    }\n\n    // AoT\n    isComponent(value: {}): boolean {\n        return value instanceof Type;\n    }\n\n    // AoT\n    isModalButtons(value: {}): boolean {\n        return Array.isArray(value) && value.length > 0;\n    }\n\n    // Do rest things when visible state changed\n    private handleVisibleStateChange(visible: boolean, animation: boolean = true, closeResult?: R): Promise<any> {\n        // Hide scrollbar at the first time when shown up\n        if (visible) {\n            this.changeBodyOverflow(1);\n        }\n\n        return Promise\n            .resolve(animation && this.animateTo(visible))\n            // Emit open/close event after animations over\n            .then(() => {\n                if (visible) {\n                    this.mcAfterOpen.emit();\n                } else {\n                    this.mcAfterClose.emit(closeResult);\n                    // Show/hide scrollbar when animation is over\n                    this.changeBodyOverflow();\n                }\n            });\n    }\n\n    // Lookup a button's property, if the prop is a function, call & then return the result, otherwise, return itself.\n    // AoT\n    // tslint:disable-next-line\n    getButtonCallableProp(options: IModalButtonOptions<T>, prop: string): {} {\n        const value = options[prop];\n        const args: any[] = [];\n        if (this.contentComponentRef) {\n            args.push(this.contentComponentRef.instance);\n        }\n\n        return typeof value === 'function' ? value.apply(options, args) : value;\n    }\n\n    // On mcFooter's modal button click\n    // AoT\n    // tslint:disable-next-line\n    onButtonClick(button: IModalButtonOptions<T>) {\n        // Call onClick directly\n        const result = this.getButtonCallableProp(button, 'onClick');\n        if (isPromise(result)) {\n            button.loading = true;\n            (result as Promise<{}>).then(() => button.loading = false).catch(() => button.loading = false);\n        }\n    }\n\n    // Change mcVisible from inside\n    private changeVisibleFromInside(visible: boolean, closeResult?: R): Promise<void> {\n        if (this.mcVisible !== visible) {\n            // Change mcVisible value immediately\n            this.mcVisible = visible;\n            this.mcVisibleChange.emit(visible);\n\n            return this.handleVisibleStateChange(visible, true, closeResult);\n        }\n\n        return Promise.resolve();\n    }\n\n    private changeAnimationState(state: AnimationState) {\n        this.animationState = state;\n        if (state) {\n            this.maskAnimationClassMap = {\n                [`fade-${state}`]: true,\n                [`fade-${state}-active`]: true\n            };\n            this.modalAnimationClassMap = {\n                [`zoom-${state}`]: true,\n                [`zoom-${state}-active`]: true\n            };\n        } else {\n            // @ts-ignore\n            this.maskAnimationClassMap = this.modalAnimationClassMap = null;\n        }\n\n        if (this.contentComponentRef) {\n            this.contentComponentRef.changeDetectorRef.markForCheck();\n        } else {\n            this.changeDetector.markForCheck();\n        }\n    }\n\n    private animateTo(isVisible: boolean): Promise<any> {\n        // Figure out the lastest click position when shows up\n        if (isVisible) {\n            // [NOTE] Using timeout due to the document.click event is fired later than visible change,\n            // so if not postponed to next event-loop, we can't get the lastest click position\n            window.setTimeout(() => this.updateTransformOrigin());\n        }\n\n        this.changeAnimationState(isVisible ? 'enter' : 'leave');\n\n        // Return when animation is over\n        return new Promise((resolve) => window.setTimeout(() => {\n            this.changeAnimationState(null);\n            resolve();\n        }, MODAL_ANIMATE_DURATION));\n    }\n\n    private formatModalButtons(buttons: IModalButtonOptions<T>[]): IModalButtonOptions<T>[] {\n        return buttons.map((button) => {\n\n            return {\n                ...{\n                    type: 'default',\n                    size: 'default',\n                    autoLoading: true,\n                    show: true,\n                    loading: false,\n                    disabled: false\n                },\n                ...button\n            };\n        });\n    }\n\n    /**\n     * Create a component dynamically but not attach to any View\n     * (this action will be executed when bodyContainer is ready)\n     * @param component Component class\n     */\n    private createDynamicComponent(component: Type<T>) {\n        const factory = this.cfr.resolveComponentFactory(component);\n        const childInjector = Injector.create({\n            providers: [{provide: McModalRef, useValue: this}],\n            parent: this.viewContainer.parentInjector\n        });\n\n        this.contentComponentRef = factory.create(childInjector);\n\n        if (this.mcComponentParams) {\n            Object.assign(this.contentComponentRef.instance, this.mcComponentParams);\n        }\n\n        // Do the first change detection immediately\n        // (or we do detection at ngAfterViewInit, multi-changes error will be thrown)\n        this.contentComponentRef.changeDetectorRef.detectChanges();\n\n\n    }\n\n    // Update transform-origin to the last click position on document\n    private updateTransformOrigin() {\n        const modalElement = this.modalContainer.nativeElement as HTMLElement;\n        const lastPosition = ModalUtil.getLastClickPosition();\n\n        if (lastPosition) {\n            // tslint:disable-next-line\n            this.transformOrigin = `${lastPosition.x - modalElement.offsetLeft}px ${lastPosition.y - modalElement.offsetTop}px 0px`;\n        }\n    }\n\n    /**\n     * Take care of the body's overflow to decide the existense of scrollbar\n     * @param plusNum The number that the openModals.length will increase soon\n     */\n    private changeBodyOverflow(plusNum: number = 0) {\n        const openModals = this.modalControl.openModals;\n\n        if (openModals.length + plusNum > 0) {\n            // tslint:disable-next-line\n            this.renderer.setStyle(this.document.body, 'padding-right', `${this.mcMeasureScrollbarService.scrollBarWidth}px`);\n            this.renderer.setStyle(this.document.body, 'overflow', 'hidden');\n        } else {\n            this.renderer.removeStyle(this.document.body, 'padding-right');\n            this.renderer.removeStyle(this.document.body, 'overflow');\n        }\n    }\n}\n\n////////////\n\nfunction isPromise(obj: {} | void): boolean {\n    // tslint:disable-next-line\n    return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof (obj as Promise<{}>).then === 'function' && typeof (obj as Promise<{}>).catch === 'function';\n}\n","export interface IClickPosition {\n    x: number;\n    y: number;\n}\n\nexport class ModalUtil {\n    private lastPosition: IClickPosition;\n\n    constructor(private document: Document) {\n        this.lastPosition = {x: -1, y: -1};\n        this.listenDocumentClick();\n    }\n\n    getLastClickPosition(): IClickPosition {\n        return this.lastPosition;\n    }\n\n    listenDocumentClick(): void {\n        this.document.addEventListener('click', (event: MouseEvent) => {\n            this.lastPosition = {x: event.clientX, y: event.clientY};\n        });\n    }\n}\n\nexport default new ModalUtil(document);\n","import { Observable } from 'rxjs';\n\nimport { McModalComponent } from './modal.component';\n\n\n/**\n * API class that public to users to handle the modal instance.\n * McModalRef is aim to avoid accessing to the modal instance directly by users.\n */\nexport abstract class McModalRef<T = any, R = any> {\n    abstract afterOpen: Observable<void>;\n    abstract afterClose: Observable<R>;\n\n    abstract open(): void;\n\n    abstract close(result?: R): void;\n\n    abstract destroy(result?: R): void;\n\n    /**\n     * Trigger the nzOnOk/nzOnCancel by manual\n     */\n    abstract triggerOk(): void;\n\n    abstract triggerCancel(): void;\n\n    // /**\n    //  * Return the ComponentRef of nzContent when specify nzContent as a Component\n    //  * Note: this method may return undefined if the Component has not ready yet.\n    //    (it only available after Modal's ngOnInit)\n    //  */\n    // abstract getContentComponentRef(): ComponentRef<{}>;\n\n    /**\n     * Return the component instance of nzContent when specify nzContent as a Component\n     * Note: this method may return undefined if the Component has not ready yet.\n     * (it only available after Modal's ngOnInit)\n     */\n    abstract getContentComponent(): T;\n\n    /**\n     * Get the dom element of this Modal\n     */\n    abstract getElement(): HTMLElement;\n\n    /**\n     * Get the instance of the Modal itself\n     */\n    abstract getInstance(): McModalComponent;\n}\n","import { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { McModalRef } from './modal-ref.class';\n\n\ninterface IRegisteredMeta {\n    modalRef: McModalRef;\n    afterOpenSubscription: Subscription;\n    afterCloseSubscription: Subscription;\n}\n\n@Injectable()\nexport class McModalControlService {\n\n    // Track singleton afterAllClose through over the injection tree\n    get afterAllClose(): Subject<void> {\n        return this.parentService ? this.parentService.afterAllClose : this.rootAfterAllClose;\n    }\n\n    // Track singleton openModals array through over the injection tree\n    get openModals(): McModalRef[] {\n        return this.parentService ? this.parentService.openModals : this.rootOpenModals;\n    }\n\n    // @ts-ignore\n    private rootOpenModals: McModalRef[] = this.parentService ? null : [];\n    // @ts-ignore\n    private rootAfterAllClose: Subject<void> = this.parentService ? null : new Subject<void>();\n    // @ts-ignore\n    private rootRegisteredMetaMap: Map<McModalRef, IRegisteredMeta> = this.parentService ? null : new Map();\n\n    // Registered modal for later usage\n    private get registeredMetaMap(): Map<McModalRef, IRegisteredMeta> {\n        return this.parentService ? this.parentService.registeredMetaMap : this.rootRegisteredMetaMap;\n    }\n\n    constructor(\n        @Optional() @SkipSelf() private parentService: McModalControlService) {\n    }\n\n    // Register a modal to listen its open/close\n    registerModal(modalRef: McModalRef): void {\n        if (!this.hasRegistered(modalRef)) {\n            const afterOpenSubscription = modalRef.afterOpen.subscribe(() => this.openModals.push(modalRef));\n            const afterCloseSubscription = modalRef.afterClose.subscribe(() => this.removeOpenModal(modalRef));\n\n            this.registeredMetaMap.set(modalRef, {modalRef, afterOpenSubscription, afterCloseSubscription});\n        }\n    }\n\n    hasRegistered(modalRef: McModalRef): boolean {\n        return this.registeredMetaMap.has(modalRef);\n    }\n\n    // Close all registered opened modals\n    closeAll(): void {\n        let i = this.openModals.length;\n\n        while (i--) {\n            this.openModals[i].close();\n        }\n    }\n\n    private removeOpenModal(modalRef: McModalRef): void {\n        const index = this.openModals.indexOf(modalRef);\n\n        if (index > -1) {\n            this.openModals.splice(index, 1);\n\n            if (!this.openModals.length) {\n                this.afterAllClose.next();\n            }\n        }\n    }\n}\n"],"names":["ModalUtil"],"mappings":"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"}