{"version":3,"file":"timepicker.js","sources":["../../../packages/mosaic/timepicker/timepicker.module.ts","../../../packages/mosaic/timepicker/timepicker.ts","../../../packages/mosaic/timepicker/timepicker.constants.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTimepicker } from './timepicker';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        FormsModule\n    ],\n    declarations: [\n        McTimepicker\n    ],\n    exports: [\n        McTimepicker\n    ]\n})\nexport class McTimepickerModule {}\n","import {\n    Directive,\n    DoCheck,\n    ElementRef,\n    forwardRef,\n    Inject,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Renderer2,\n    Self\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroupDirective,\n    NG_VALIDATORS,\n    NgControl,\n    NgForm,\n    ValidationErrors,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { DateAdapter } from '@ptsecurity/cdk/datetime';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { MC_INPUT_VALUE_ACCESSOR } from '@ptsecurity/mosaic/input';\nimport {\n    noop,\n    Subject\n} from 'rxjs';\n\nimport {\n    ARROW_DOWN_KEYCODE,\n    ARROW_LEFT_KEYCODE,\n    ARROW_RIGHT_KEYCODE,\n    ARROW_UP_KEYCODE,\n    DEFAULT_TIME_FORMAT,\n    HOURS_PER_DAY,\n    HOURS_MINUTES_REGEXP,\n    HOURS_MINUTES_SECONDS_REGEXP,\n    HOURS_ONLY_REGEXP,\n    MINUTES_PER_HOUR,\n    SECONDS_PER_MINUTE,\n    TIMEFORMAT_PLACEHOLDERS,\n    TimeFormats,\n    TimeParts\n} from './timepicker.constants';\n\n\nlet uniqueComponentIdSuffix: number = 0;\n\nconst formValidators: WeakMap<FormControl, ValidatorFn | null> = new WeakMap();\nconst formValidatorOnChangeRegistrators: WeakMap<FormControl, () => void> = new WeakMap();\nconst validatorOnChange = (c: FormControl) => {\n    const validatorOnChangeHandler = formValidatorOnChangeRegistrators.get(c);\n\n    if (validatorOnChangeHandler !== undefined) { validatorOnChangeHandler(); }\n};\n\nexport class McTimepickerBase {\n    constructor(\n        public defaultErrorStateMatcher: ErrorStateMatcher,\n        public parentForm: NgForm,\n        public parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl) { }\n}\n\n// tslint:disable-next-line naming-convention\nexport const McTimepickerMixinBase:\n    CanUpdateErrorStateCtor &\n    typeof McTimepickerBase = mixinErrorState(McTimepickerBase);\n\n@Directive({\n    selector: 'input[mcTimepicker]',\n    exportAs: 'mcTimepickerInput',\n    host: {\n        class: 'mc-timepicker mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '[attr.time-format]': 'timeFormat',\n        '[attr.min-time]': 'minTime',\n        '[attr.max-time]': 'maxTime',\n        '[attr.value]': 'value',\n        '[attr.aria-invalid]': 'errorState',\n        '(blur)': 'onBlur()',\n        '(focus)': 'focusChanged(true)',\n        '(input)': 'onInput()',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    },\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useValue: {\n                validate(c: FormControl) {\n                    // TODO This is `workaround` to bind singleton-like Validator implementation to\n                    // context of each validated component. This MUST be realized in proper way!\n                    if (this.__validatorOnChangeHandler !== undefined) {\n                        formValidatorOnChangeRegistrators.set(c, this.__validatorOnChangeHandler);\n                        this.__validatorOnChangeHandler = undefined;\n                    }\n                    const validator = formValidators.get(c);\n\n                    return validator ? validator(c) : null;\n                },\n                registerOnValidatorChange(fn: () => void): void {\n                    this.__validatorOnChangeHandler = fn;\n                }\n            },\n            multi: true\n        },\n        {\n            provide: McFormFieldControl,\n            useExisting: forwardRef(() => McTimepicker)\n        }\n    ]\n\n})\nexport class McTimepicker extends McTimepickerMixinBase\n    implements McFormFieldControl<any>,\n        OnChanges,\n        OnDestroy,\n        DoCheck,\n        CanUpdateErrorState,\n        ControlValueAccessor {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-timepicker';\n\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) { return this.ngControl.disabled; }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n        }\n\n        this.stateChanges.next();\n    }\n\n    @Input()\n    get id(): string { return this._id; }\n\n    set id(value: string) { this._id = value || this.uid; }\n\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean { return this._required; }\n\n    set required(value: boolean) { this._required = coerceBooleanProperty(value); }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string { return this.inputValueAccessor.value; }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this.inputValueAccessor.value = value;\n            this.applyInputChanges();\n        }\n    }\n\n    @Input('time-format')\n    get timeFormat(): TimeFormats { return this._timeFormat; }\n\n    set timeFormat(formatValue: TimeFormats) {\n        this._timeFormat = Object\n            .keys(TimeFormats)\n            .map((timeFormatKey) => TimeFormats[timeFormatKey])\n            .indexOf(formatValue) > -1 ? formatValue : DEFAULT_TIME_FORMAT;\n\n        validatorOnChange(<FormControl> this.ngControl.control);\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[this._timeFormat];\n    }\n\n    @Input('min-time')\n    get minTime(): string | null { return this._minTime; }\n\n    set minTime(minValue: string | null) {\n        this._minTime = minValue;\n        this.minDateTime = minValue !== null ? this.getDateFromTimeString(minValue) : undefined;\n        validatorOnChange(<FormControl> this.ngControl.control);\n    }\n\n    @Input('max-time')\n    get maxTime(): string | null { return this._maxTime; }\n\n    set maxTime(maxValue: string | null) {\n        this._maxTime = maxValue;\n        this.maxDateTime = maxValue !== null ? this.getDateFromTimeString(maxValue) : undefined;\n        validatorOnChange(<FormControl> this.ngControl.control);\n    }\n\n    private _id: string;\n    private readonly uid = `mc-timepicker-${uniqueComponentIdSuffix++}`;\n    private _disabled: boolean;\n    private _required: boolean;\n    private previousNativeValue: any;\n    private readonly inputValueAccessor: { value: any };\n    private onChange: (value: any) => void;\n    private onTouched: () => void;\n    private _timeFormat: TimeFormats;\n    private _minTime: string | null = null;\n    private minDateTime: Date | undefined;\n    private _maxTime: string | null = null;\n    private maxDateTime: Date | undefined;\n    private currentDateTimeInput: Date | undefined;\n\n    constructor(private readonly elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() parentForm: NgForm,\n                @Optional() parentFormGroup: FormGroupDirective,\n                defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any,\n                private readonly renderer: Renderer2,\n                @Optional() private dateAdapter: DateAdapter<any>) {\n        super(defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\n\n        if (!this.dateAdapter) {\n            throw Error(`McTimepicker: No provider found for DateAdapter. You must import one of the existing ` +\n                `modules at your application root or provide a custom implementation or use exists ones.`);\n        }\n\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this.inputValueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n        this.onChange = noop;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[DEFAULT_TIME_FORMAT];\n\n        // Instead of NG_VALUE_ACCESSOR (https://github.com/angular/material2/issues/8158#issuecomment-344618103)\n        if (this.ngControl) { this.ngControl.valueAccessor = this; }\n\n        // Substitute initial empty validator with validator linked to directive object instance (workaround)\n\n        formValidators.set(\n            <FormControl> this.ngControl.control,\n            Validators.compose([\n                () => this.parseValidator(),\n                () => this.minTimeValidator(),\n                () => this.maxTimeValidator()\n            ])\n        );\n    }\n\n    ngOnChanges(): void {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck(): void {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    focusChanged(isFocused: boolean): void {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.onTouched();\n            this.stateChanges.next();\n        }\n    }\n\n    onBlur() {\n        this.applyInputChanges();\n        this.focusChanged(false);\n    }\n\n    onPaste($event) {\n        $event.preventDefault();\n        const clipboardUserInput: string = $event.clipboardData.getData('text');\n\n        if (this.getDateFromTimeString(clipboardUserInput) === undefined) { return; }\n\n        this.elementRef.nativeElement.value = clipboardUserInput;\n        this.onInput();\n    }\n\n    onInput() {\n        const initialCursorStart: number = this.elementRef.nativeElement.selectionStart;\n        const initialCursorEnd: number = this.elementRef.nativeElement.selectionEnd;\n        let isAutocompleteTriggered: boolean = false;\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(this.elementRef.nativeElement.value);\n\n        // tslint:disable no-magic-numbers\n        if (hoursOnly &&\n            hoursOnly[1] &&\n            hoursOnly[1].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutes &&\n            hoursAndMinutes[1].length === 1 &&\n            hoursAndMinutes[2] &&\n            hoursAndMinutes[2].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutesAndSeconds &&\n            hoursAndMinutesAndSeconds[1].length === 2 &&\n            hoursAndMinutesAndSeconds[2].length === 2 &&\n            hoursAndMinutesAndSeconds[3] &&\n            hoursAndMinutesAndSeconds[3].length === 2) {\n            isAutocompleteTriggered = true;\n        }\n        // tslint:enable no-magic-numbers\n\n        this.applyInputChanges({ doTimestringReformat: isAutocompleteTriggered });\n\n        this.elementRef.nativeElement.selectionStart = initialCursorStart;\n        this.elementRef.nativeElement.selectionEnd = initialCursorEnd;\n\n        if (isAutocompleteTriggered && this.ngControl.errors === null) {\n            this.createSelectionOfTimeComponentInInput(initialCursorStart + 1);\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    writeValue(value: Date | null): void {\n        if (value !== null) {\n            this.renderer.setProperty(this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(value, this.timeFormat)\n            );\n        }\n        this.onChange(value || null);\n        this.applyInputChanges();\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        const keyCode: string = this.getKeyCode(event);\n\n        if (keyCode === ARROW_UP_KEYCODE || keyCode === ARROW_DOWN_KEYCODE) {\n            this.upDownTimeByArrowKeys(event);\n        }\n        if (keyCode === ARROW_LEFT_KEYCODE || keyCode === ARROW_RIGHT_KEYCODE) {\n            this.switchSelectionBetweenTimeparts(event);\n        }\n    }\n\n    registerOnChange(fn: (value: Date) => void): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    private dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    private isBadInput(): boolean {\n        const validity = (<HTMLInputElement> this.elementRef.nativeElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private applyInputChanges(applyParams: {\n        changedTime?: Date;\n        doTimestringReformat?: boolean;\n    } = {}): void {\n        const { changedTime, doTimestringReformat = true } = applyParams;\n        const timeToApply: Date | undefined = changedTime ||\n            this.getDateFromTimeString(this.elementRef.nativeElement.value);\n        this.currentDateTimeInput = timeToApply;\n\n        if (doTimestringReformat && timeToApply !== undefined) {\n            const selectionStart: number = this.elementRef.nativeElement.selectionStart;\n            const selectionEnd: number = this.elementRef.nativeElement.selectionEnd;\n            this.renderer.setProperty(\n                this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(timeToApply, this.timeFormat));\n            this.elementRef.nativeElement.selectionStart = selectionStart;\n            this.elementRef.nativeElement.selectionEnd = selectionEnd;\n        }\n\n        (<FormControl> this.ngControl.control).updateValueAndValidity();\n        const result = this.ngControl.errors === null && timeToApply !== undefined ? timeToApply : null;\n        this.onChange(result);\n        this.stateChanges.next();\n    }\n\n    private upDownTimeByArrowKeys(event: KeyboardEvent): void {\n        event.preventDefault();\n\n        let changedTime: Date | undefined = this.currentDateTimeInput;\n        if (changedTime !== undefined) {\n            const cursorPos = this.elementRef.nativeElement.selectionStart;\n\n            const modifiedTimePart = this.getTimeEditMetrics(cursorPos)\n                .modifiedTimePart;\n            const keyCode: string = this.getKeyCode(event);\n            if (keyCode === ARROW_UP_KEYCODE) { changedTime = this.incrementTime(changedTime, modifiedTimePart); }\n            if (keyCode === ARROW_DOWN_KEYCODE) { changedTime = this.decrementTime(changedTime, modifiedTimePart); }\n            this.applyInputChanges({ changedTime });\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    private switchSelectionBetweenTimeparts(event: KeyboardEvent): void {\n        const changedTime: Date | undefined = this.currentDateTimeInput;\n        const keyCode: string = this.getKeyCode(event);\n\n        if (changedTime !== undefined) {\n            let cursorPos: number = this.elementRef.nativeElement.selectionStart;\n            if (keyCode === ARROW_LEFT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfPrevTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            } else if (keyCode === ARROW_RIGHT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfNextTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            }\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    /**\n     * @description Microsoft EDGE doesn't support KeyboaedEvent.code thus we need this helper\n     */\n    private getKeyCode(event: KeyboardEvent): string {\n        return event.code || event.key;\n    }\n\n    private createSelectionOfTimeComponentInInput(cursorPos: number): void {\n        setTimeout(() => {\n            const newEditParams = this.getTimeEditMetrics(cursorPos);\n            this.elementRef.nativeElement.selectionStart = newEditParams.cursorStartPosition;\n            this.elementRef.nativeElement.selectionEnd = newEditParams.cursorEndPosition;\n        });\n    }\n\n    private incrementTime(dateVal: Date,\n                          whatToIncrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToIncrement) {\n            case TimeParts.hours:\n                hours++;\n                break;\n            case TimeParts.minutes:\n                minutes++;\n                break;\n            case TimeParts.seconds:\n                seconds++;\n                break;\n            default:\n        }\n\n        if (seconds > SECONDS_PER_MINUTE) { seconds = 0; }\n\n        if (minutes > MINUTES_PER_HOUR) { minutes = 0; }\n\n        if (hours > HOURS_PER_DAY) { hours = 0; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    /**\n     * @description Decrement part of time\n     */\n    private decrementTime(dateVal: Date,\n                          whatToDecrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToDecrement) {\n            case TimeParts.hours:\n                hours--;\n                break;\n            case TimeParts.minutes:\n                minutes--;\n                break;\n            case TimeParts.seconds:\n                seconds--;\n                break;\n            default:\n        }\n\n        if (seconds < 0) { seconds = SECONDS_PER_MINUTE; }\n\n        if (minutes < 0) { minutes = MINUTES_PER_HOUR; }\n\n        if (hours < 0) { hours = HOURS_PER_DAY; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    private getCursorPositionOfPrevTimePartStart(cursorPos: number, timeString: string): number {\n        return cursorPos === 0 ? timeString.length : cursorPos - 1;\n    }\n\n    private getCursorPositionOfNextTimePartStart(cursorPos: number,\n                                                 timeString: string,\n                                                 timeDevider: string = ':'): number {\n        const nextDividerPos: number = timeString.indexOf(timeDevider, cursorPos);\n\n        return nextDividerPos !== undefined ? nextDividerPos + 1 : 0;\n    }\n\n    /**\n     * @description Get params for arrow-keys (up/down) time valie edit.\n     * @param cursorPosition Current cursor position in timeString\n     */\n    private getTimeEditMetrics(cursorPosition: number): {\n        modifiedTimePart: TimeParts;\n        cursorStartPosition: number;\n        cursorEndPosition: number;\n    } {\n        const timeString: string = this.elementRef.nativeElement.value;\n        let modifiedTimePart: TimeParts;\n        let cursorStartPosition: number;\n        let cursorEndPosition: number;\n        const hoursIndex = 0;\n        const minutesIndex = timeString.indexOf(':', hoursIndex + 1);\n        const secondsIndex = minutesIndex !== -1 ? timeString.indexOf(':', minutesIndex + 1) : -1;\n\n        if (secondsIndex !== -1 && cursorPosition > secondsIndex) {\n            modifiedTimePart = TimeParts.seconds;\n            cursorStartPosition = secondsIndex + 1;\n            cursorEndPosition = timeString.length;\n        } else if (minutesIndex !== -1 && cursorPosition > minutesIndex) {\n            modifiedTimePart = TimeParts.minutes;\n            cursorStartPosition = minutesIndex + 1;\n            cursorEndPosition = secondsIndex > -1 ? secondsIndex : timeString.length;\n        } else {\n            modifiedTimePart = TimeParts.hours;\n            cursorStartPosition = hoursIndex;\n            cursorEndPosition = minutesIndex !== -1 ? minutesIndex : timeString.length;\n        }\n\n        return {\n            modifiedTimePart,\n            cursorStartPosition,\n            cursorEndPosition\n        };\n    }\n\n    /**\n     * @description Create time string for displaying inside input element of UI\n     */\n    private getTimeStringFromDate(tempVal: Date,\n                                  timeFormat: TimeFormats = DEFAULT_TIME_FORMAT): string {\n        const hours: string = this.getNumberWithLeadingZero(tempVal.getHours());\n        const minutes: string = this.getNumberWithLeadingZero(tempVal.getMinutes());\n        const seconds: string = this.getNumberWithLeadingZero(tempVal.getSeconds());\n\n        const formattedTimeGenerators = {\n            [TimeFormats.HHmm]: () => `${hours}:${minutes}`,\n            [TimeFormats.HHmmss]: () => `${hours}:${minutes}:${seconds}`\n        };\n\n        return formattedTimeGenerators[timeFormat]();\n    }\n\n    private getParsedTimeParts(timeString: string): {\n        hoursOnly: any;\n        hoursAndMinutes: any;\n        hoursAndMinutesAndSeconds: any;\n    } {\n        const momentWrappedTime = this.dateAdapter.parse(timeString, [\n            'h:m a',\n            'h:m:s a',\n            'H:m',\n            'H:m:s'\n        ]);\n\n        const convertedTimeString = momentWrappedTime !== null\n            ? momentWrappedTime.format('HH:mm:ss')\n            : '';\n\n        const hoursAndMinutesAndSeconds = convertedTimeString.match(HOURS_MINUTES_SECONDS_REGEXP);\n        const hoursAndMinutes = convertedTimeString.match(HOURS_MINUTES_REGEXP);\n        const hoursOnly = convertedTimeString.match(HOURS_ONLY_REGEXP);\n\n        return {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        };\n    }\n\n    /**\n     * @description Create Date object from separate parts of time\n     */\n    private getDateFromTimeDigits(hours: number, minutes: number, seconds: number = 0): Date | undefined {\n        return this.getDateFromTimeString(`${hours}:${minutes}:${seconds}`);\n    }\n\n    private getDateFromTimeString(timeString: string | undefined): Date | undefined {\n        // TODO Use moment-js\n        if (timeString === undefined) { return; }\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(timeString);\n\n        if (timeString.trim().length === 0 ||\n            hoursOnly === null && hoursAndMinutes === null && hoursAndMinutesAndSeconds === null) {\n            return;\n        }\n\n        // tslint:disable no-magic-numbers\n        let hours: number = 0;\n        let minutes: number = 0;\n        let seconds: number = 0;\n\n        if (hoursOnly) {\n            hours = Number(hoursOnly[1]);\n        } else if (hoursAndMinutes) {\n            hours = Number(hoursAndMinutes[1]);\n            minutes = Number(hoursAndMinutes[2]);\n        } else if (hoursAndMinutesAndSeconds) {\n            hours = Number(hoursAndMinutesAndSeconds[1]);\n            minutes = Number(hoursAndMinutesAndSeconds[2]);\n            seconds = Number(hoursAndMinutesAndSeconds[3]);\n        }\n        // const timestamp: number = Date.parse(fullDateString);\n        const resultDate: Date = new Date(1970, 0, 1, hours, minutes, seconds);\n        // tslint:enable no-magic-numbers\n\n        return isNaN(resultDate.getTime()) ? undefined : resultDate;\n    }\n\n    private getNumberWithLeadingZero(digit: number): string {\n        const MAX_DIGIT_WITH_LEADING_ZERO: number = 9;\n\n        return digit > MAX_DIGIT_WITH_LEADING_ZERO ? `${digit}` : `0${digit}`;\n    }\n\n    private getTimeDigitsFromDate(dateVal: Date): { hours: number; minutes: number; seconds: number } {\n        return {\n            hours: dateVal.getHours(),\n            minutes: dateVal.getMinutes(),\n            seconds: dateVal.getSeconds()\n        };\n    }\n\n    private parseValidator(): ValidationErrors | null {\n        return this.currentDateTimeInput === undefined ?\n            { mcTimepickerParse: { text: this.elementRef.nativeElement.value } } :\n            null;\n    }\n\n    private minTimeValidator(): ValidationErrors | null {\n\n        if (this.currentDateTimeInput !== undefined &&\n            this.minDateTime !== undefined &&\n            this.isTimeLowerThenMin(this.currentDateTimeInput)) {\n            return { mcTimepickerLowerThenMintime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private maxTimeValidator(): ValidationErrors | null {\n        if (this.currentDateTimeInput !== undefined &&\n            this.maxDateTime !== undefined &&\n            this.isTimeGreaterThenMax(this.currentDateTimeInput)) {\n            return { mcTimepickerHigherThenMaxtime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private isTimeLowerThenMin(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.minDateTime).getTime() < 0;\n    }\n\n    private isTimeGreaterThenMax(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.maxDateTime).getTime() >= 0;\n    }\n}\n","export enum TimeParts {\n    hours,\n    minutes,\n    seconds\n}\n\nexport enum TimeFormats {\n    HHmmss = 'HH:mm:ss',\n    HHmm = 'HH:mm'\n}\n\nexport const TIMEFORMAT_PLACEHOLDERS: { [timeFormat: string]: string } = {\n    [TimeFormats.HHmmss]: '  :  :  ',\n    [TimeFormats.HHmm]: '  :  '\n};\n\nexport const DEFAULT_TIME_FORMAT: TimeFormats = TimeFormats.HHmm;\n\nexport const HOURS_MINUTES_SECONDS_REGEXP =\n    new RegExp(/^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9]):([0-5][0-9]|[0-9])?$/);\nexport const HOURS_MINUTES_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9])?$/;\nexport const HOURS_ONLY_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):?$/;\n\nexport const SECONDS_PER_MINUTE: number = 59;\nexport const MINUTES_PER_HOUR: number = 59;\nexport const HOURS_PER_DAY: number = 23;\n\n// TODO Move it to common CDK\nexport const ARROW_UP_KEYCODE: string = 'ArrowUp';\nexport const ARROW_DOWN_KEYCODE: string = 'ArrowDown';\nexport const ARROW_LEFT_KEYCODE: string = 'ArrowLeft';\nexport const ARROW_RIGHT_KEYCODE: string = 'ArrowRight';\n"],"names":[],"mappings":"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"}