{"version":3,"file":"timepicker.js","sources":["../../../packages/mosaic/timepicker/timepicker.module.ts","../../../packages/mosaic/timepicker/timepicker.ts","../../../packages/mosaic/timepicker/timepicker.constants.ts"],"sourcesContent":["import { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McTimepicker } from './timepicker';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        FormsModule\n    ],\n    declarations: [\n        McTimepicker\n    ],\n    exports: [\n        McTimepicker\n    ]\n})\nexport class McTimepickerModule {}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n    Directive,\n    DoCheck,\n    ElementRef,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Renderer2,\n    Self\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroupDirective,\n    NgControl,\n    NgForm,\n    ValidationErrors\n} from '@angular/forms';\nimport { DateAdapter } from '@ptsecurity/cdk/datetime';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { MC_INPUT_VALUE_ACCESSOR } from '@ptsecurity/mosaic/input';\nimport {\n    noop,\n    Subject\n} from 'rxjs';\n\nimport {\n    ARROW_DOWN_KEYCODE,\n    ARROW_LEFT_KEYCODE,\n    ARROW_RIGHT_KEYCODE,\n    ARROW_UP_KEYCODE,\n    DEFAULT_TIME_FORMAT,\n    HOURS_PER_DAY,\n    HOURS_MINUTES_REGEXP,\n    HOURS_MINUTES_SECONDS_REGEXP,\n    HOURS_ONLY_REGEXP,\n    MINUTES_PER_HOUR,\n    SECONDS_PER_MINUTE,\n    TIMEFORMAT_PLACEHOLDERS,\n    TimeFormats,\n    TimeParts\n} from './timepicker.constants';\n\n\nlet uniqueComponentIdSuffix: number = 0;\n\nexport class McTimepickerBase {\n    constructor(\n        public defaultErrorStateMatcher: ErrorStateMatcher,\n        public parentForm: NgForm,\n        public parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl) { }\n}\n\n// tslint:disable-next-line naming-convention\nexport const McTimepickerMixinBase:\n    CanUpdateErrorStateCtor & typeof McTimepickerBase = mixinErrorState(McTimepickerBase);\n\n@Directive({\n    selector: 'input[mcTimepicker]',\n    exportAs: 'mcTimepickerInput',\n    host: {\n        class: 'mc-timepicker mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '[attr.time-format]': 'timeFormat',\n        '[attr.min-time]': 'minTime',\n        '[attr.max-time]': 'maxTime',\n        '[attr.value]': 'value',\n        '[attr.aria-invalid]': 'errorState',\n\n        '(blur)': 'onBlur()',\n        '(focus)': 'focusChanged(true)',\n\n        '(input)': 'onInput()',\n        '(paste)': 'onPaste($event)',\n\n        '(keydown)': 'onKeyDown($event)'\n    },\n    providers: [\n        {\n            provide: McFormFieldControl,\n            useExisting: forwardRef(() => McTimepicker)\n        }\n    ]\n})\nexport class McTimepicker<D> extends McTimepickerMixinBase\n    implements McFormFieldControl<any>, OnDestroy, DoCheck, CanUpdateErrorState, ControlValueAccessor {\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-timepicker';\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) { return this.ngControl.disabled; }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n        }\n\n        this.stateChanges.next();\n    }\n\n    private _disabled: boolean;\n\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this.uid;\n    }\n\n    private _id: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    private _required: boolean;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this.inputValueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this.inputValueAccessor.value = value;\n            this.applyInputChanges();\n        }\n    }\n\n    @Input('time-format')\n    get timeFormat(): TimeFormats {\n        return this._timeFormat;\n    }\n\n    set timeFormat(formatValue: TimeFormats) {\n        this._timeFormat = Object\n            .keys(TimeFormats)\n            .map((timeFormatKey) => TimeFormats[timeFormatKey])\n            .indexOf(formatValue) > -1 ? formatValue : DEFAULT_TIME_FORMAT;\n\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[this._timeFormat];\n\n        setTimeout(() => this.applyInputChanges({ doTimestringReformat: true }));\n    }\n\n    private _timeFormat: TimeFormats;\n\n    @Input('min-time')\n    get minTime(): string | null {\n        return this._minTime;\n    }\n\n    set minTime(value: string | null) {\n        this._minTime = value;\n        (this.ngControl.control as FormControl).updateValueAndValidity();\n    }\n\n    private _minTime: string | null = null;\n\n    @Input('max-time')\n    get maxTime(): string | null {\n        return this._maxTime;\n    }\n\n    set maxTime(maxValue: string | null) {\n        this._maxTime = maxValue;\n        (this.ngControl.control as FormControl).updateValueAndValidity();\n    }\n\n    private _maxTime: string | null = null;\n\n    private readonly uid = `mc-timepicker-${uniqueComponentIdSuffix++}`;\n    private readonly inputValueAccessor: { value: any };\n\n    private originalValue: any;\n    private previousNativeValue: any;\n    private currentDateTimeInput: D | undefined;\n\n    private onChange: (value: any) => void;\n    private onTouched: () => void;\n\n    constructor(\n        private readonly elementRef: ElementRef,\n        @Optional() @Self() public ngControl: NgControl,\n        @Optional() parentForm: NgForm,\n        @Optional() parentFormGroup: FormGroupDirective,\n        defaultErrorStateMatcher: ErrorStateMatcher,\n        @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any,\n        private readonly renderer: Renderer2,\n        @Optional() private dateAdapter: DateAdapter<any>\n    ) {\n        super(defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\n\n        if (!this.dateAdapter) {\n            throw Error(`McTimepicker: No provider found for DateAdapter. You must import one of the existing ` +\n                `modules at your application root or provide a custom implementation or use exists ones.`);\n        }\n\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this.inputValueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n        this.onChange = noop;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[DEFAULT_TIME_FORMAT];\n\n        if (this.ngControl) {\n            // Instead of NG_VALUE_ACCESSOR (https://github.com/angular/material2/issues/8158#issuecomment-344618103)\n            this.ngControl.valueAccessor = this;\n\n            // To avoid cyclic dependency https://stackoverflow.com/a/49578414\n            const control = this.ngControl.control as FormControl;\n            const myValidators = [\n                () => this.parseValidator(),\n                () => this.minTimeValidator(),\n                () => this.maxTimeValidator()\n            ];\n            const validators = control.validator\n                ? [control.validator, ...myValidators]\n                : myValidators;\n\n            control.setValidators(validators);\n            control.updateValueAndValidity();\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck(): void {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    focusChanged(isFocused: boolean): void {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.onTouched();\n            this.stateChanges.next();\n        }\n    }\n\n    onBlur() {\n        this.applyInputChanges();\n        this.focusChanged(false);\n    }\n\n    onPaste($event) {\n        $event.preventDefault();\n        const clipboardUserInput: string = $event.clipboardData.getData('text');\n\n        if (this.getDateFromTimeString(clipboardUserInput) === undefined) { return; }\n\n        this.elementRef.nativeElement.value = clipboardUserInput;\n        this.onInput();\n    }\n\n    onInput() {\n        const initialCursorStart: number = this.elementRef.nativeElement.selectionStart;\n        const initialCursorEnd: number = this.elementRef.nativeElement.selectionEnd;\n        let isAutocompleteTriggered: boolean = false;\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(this.elementRef.nativeElement.value);\n\n        // tslint:disable no-magic-numbers\n        if (hoursOnly &&\n            hoursOnly[1] &&\n            hoursOnly[1].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutes &&\n            hoursAndMinutes[1].length === 1 &&\n            hoursAndMinutes[2] &&\n            hoursAndMinutes[2].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutesAndSeconds &&\n            hoursAndMinutesAndSeconds[1].length === 2 &&\n            hoursAndMinutesAndSeconds[2].length === 2 &&\n            hoursAndMinutesAndSeconds[3] &&\n            hoursAndMinutesAndSeconds[3].length === 2) {\n            isAutocompleteTriggered = true;\n        }\n        // tslint:enable no-magic-numbers\n\n        this.applyInputChanges({ doTimestringReformat: isAutocompleteTriggered });\n\n        this.elementRef.nativeElement.selectionStart = initialCursorStart;\n        this.elementRef.nativeElement.selectionEnd = initialCursorEnd;\n\n        if (isAutocompleteTriggered && this.ngControl.errors === null) {\n            this.createSelectionOfTimeComponentInInput(initialCursorStart + 1);\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    writeValue(value: D | null): void {\n        if (value !== null) {\n            this.saveOriginalValue(value);\n\n            this.renderer.setProperty(\n                this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(value, this.timeFormat)\n            );\n\n            this.applyInputChanges();\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n        const keyCode: string = this.getKeyCode(event);\n\n        if (keyCode === ARROW_UP_KEYCODE || keyCode === ARROW_DOWN_KEYCODE) {\n            this.upDownTimeByArrowKeys(event);\n        }\n\n        if (keyCode === ARROW_LEFT_KEYCODE || keyCode === ARROW_RIGHT_KEYCODE) {\n            this.switchSelectionBetweenTimeparts(event);\n        }\n\n    }\n\n    registerOnChange(fn: (value: D) => void): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    saveOriginalValue(value: D): void {\n        if (this.dateAdapter.isValid(value)) {\n            this.originalValue = value;\n        }\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    private dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    private isBadInput(): boolean {\n        const validity = (<HTMLInputElement> this.elementRef.nativeElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private applyInputChanges(applyParams: { changedTime?: D; doTimestringReformat?: boolean } = {}): void {\n        const { changedTime, doTimestringReformat = true } = applyParams;\n        const timeToApply: D | undefined = changedTime ||\n            this.getDateFromTimeString(this.elementRef.nativeElement.value);\n        this.currentDateTimeInput = timeToApply;\n\n        if (doTimestringReformat && timeToApply !== undefined) {\n            const selectionStart: number = this.elementRef.nativeElement.selectionStart;\n            const selectionEnd: number = this.elementRef.nativeElement.selectionEnd;\n            this.renderer.setProperty(\n                this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(timeToApply, this.timeFormat)\n            );\n            this.elementRef.nativeElement.selectionStart = selectionStart;\n            this.elementRef.nativeElement.selectionEnd = selectionEnd;\n        }\n\n        (<FormControl> this.ngControl.control).updateValueAndValidity();\n        const result = this.ngControl.errors === null && timeToApply !== undefined ? timeToApply : null;\n        this.onChange(result);\n        this.stateChanges.next();\n    }\n\n    private upDownTimeByArrowKeys(event: KeyboardEvent): void {\n        event.preventDefault();\n\n        let changedTime: D | undefined = this.currentDateTimeInput;\n        if (changedTime !== undefined) {\n            const cursorPos = this.elementRef.nativeElement.selectionStart;\n\n            const modifiedTimePart = this.getTimeEditMetrics(cursorPos)\n                .modifiedTimePart;\n            const keyCode: string = this.getKeyCode(event);\n            if (keyCode === ARROW_UP_KEYCODE) { changedTime = this.incrementTime(changedTime, modifiedTimePart); }\n            if (keyCode === ARROW_DOWN_KEYCODE) { changedTime = this.decrementTime(changedTime, modifiedTimePart); }\n            this.applyInputChanges({ changedTime });\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    private switchSelectionBetweenTimeparts(event: KeyboardEvent): void {\n        const changedTime: D | undefined = this.currentDateTimeInput;\n        const keyCode: string = this.getKeyCode(event);\n\n        if (changedTime !== undefined) {\n            let cursorPos: number = this.elementRef.nativeElement.selectionStart;\n            if (keyCode === ARROW_LEFT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfPrevTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            } else if (keyCode === ARROW_RIGHT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfNextTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            }\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    /**\n     * @description Microsoft EDGE doesn't support KeyboaedEvent.code thus we need this helper\n     */\n    private getKeyCode(event: KeyboardEvent): string {\n        return event.code || event.key;\n    }\n\n    private createSelectionOfTimeComponentInInput(cursorPos: number): void {\n        setTimeout(() => {\n            const newEditParams = this.getTimeEditMetrics(cursorPos);\n            this.elementRef.nativeElement.selectionStart = newEditParams.cursorStartPosition;\n            this.elementRef.nativeElement.selectionEnd = newEditParams.cursorEndPosition;\n        });\n    }\n\n    private incrementTime(dateVal: D, whatToIncrement: TimeParts = TimeParts.seconds): D {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToIncrement) {\n            case TimeParts.hours:\n                hours++;\n                break;\n            case TimeParts.minutes:\n                minutes++;\n                break;\n            case TimeParts.seconds:\n                seconds++;\n                break;\n            default:\n        }\n\n        if (seconds > SECONDS_PER_MINUTE) { seconds = 0; }\n\n        if (minutes > MINUTES_PER_HOUR) { minutes = 0; }\n\n        if (hours > HOURS_PER_DAY) { hours = 0; }\n\n        return <D> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    /**\n     * @description Decrement part of time\n     */\n    private decrementTime(dateVal: D, whatToDecrement: TimeParts = TimeParts.seconds): D {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToDecrement) {\n            case TimeParts.hours:\n                hours--;\n                break;\n            case TimeParts.minutes:\n                minutes--;\n                break;\n            case TimeParts.seconds:\n                seconds--;\n                break;\n            default:\n        }\n\n        if (seconds < 0) { seconds = SECONDS_PER_MINUTE; }\n\n        if (minutes < 0) { minutes = MINUTES_PER_HOUR; }\n\n        if (hours < 0) { hours = HOURS_PER_DAY; }\n\n        return <D> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    private getCursorPositionOfPrevTimePartStart(cursorPos: number, timeString: string): number {\n        return cursorPos === 0 ? timeString.length : cursorPos - 1;\n    }\n\n    private getCursorPositionOfNextTimePartStart(\n        cursorPos: number, timeString: string, timeDevider: string = ':'\n    ): number {\n        const nextDividerPos: number = timeString.indexOf(timeDevider, cursorPos);\n\n        return nextDividerPos !== undefined ? nextDividerPos + 1 : 0;\n    }\n\n    /**\n     * @description Get params for arrow-keys (up/down) time valie edit.\n     * @param cursorPosition Current cursor position in timeString\n     */\n    private getTimeEditMetrics(cursorPosition: number): {\n        modifiedTimePart: TimeParts;\n        cursorStartPosition: number;\n        cursorEndPosition: number;\n    } {\n        const timeString: string = this.elementRef.nativeElement.value;\n        let modifiedTimePart: TimeParts;\n        let cursorStartPosition: number;\n        let cursorEndPosition: number;\n        const hoursIndex = 0;\n        const minutesIndex = timeString.indexOf(':', hoursIndex + 1);\n        const secondsIndex = minutesIndex !== -1 ? timeString.indexOf(':', minutesIndex + 1) : -1;\n\n        if (secondsIndex !== -1 && cursorPosition > secondsIndex) {\n            modifiedTimePart = TimeParts.seconds;\n            cursorStartPosition = secondsIndex + 1;\n            cursorEndPosition = timeString.length;\n        } else if (minutesIndex !== -1 && cursorPosition > minutesIndex) {\n            modifiedTimePart = TimeParts.minutes;\n            cursorStartPosition = minutesIndex + 1;\n            cursorEndPosition = secondsIndex > -1 ? secondsIndex : timeString.length;\n        } else {\n            modifiedTimePart = TimeParts.hours;\n            cursorStartPosition = hoursIndex;\n            cursorEndPosition = minutesIndex !== -1 ? minutesIndex : timeString.length;\n        }\n\n        return {\n            modifiedTimePart,\n            cursorStartPosition,\n            cursorEndPosition\n        };\n    }\n\n    /**\n     * @description Create time string for displaying inside input element of UI\n     */\n    private getTimeStringFromDate(value: D, timeFormat: TimeFormats = DEFAULT_TIME_FORMAT): string {\n        if (value === undefined || value === null) {\n            return '';\n        }\n\n        return this.dateAdapter.format(value, timeFormat);\n    }\n\n    private getParsedTimeParts(timeString: string): {\n        hoursOnly: any;\n        hoursAndMinutes: any;\n        hoursAndMinutesAndSeconds: any;\n    } {\n        const momentWrappedTime = this.dateAdapter.parse(timeString, [\n            'h:m a',\n            'h:m:s a',\n            'H:m',\n            'H:m:s'\n        ]);\n\n        const convertedTimeString = momentWrappedTime !== null\n            ? momentWrappedTime.format('H:m:s')\n            : '';\n\n        const hoursAndMinutesAndSeconds = convertedTimeString.match(HOURS_MINUTES_SECONDS_REGEXP);\n        const hoursAndMinutes = convertedTimeString.match(HOURS_MINUTES_REGEXP);\n        const hoursOnly = convertedTimeString.match(HOURS_ONLY_REGEXP);\n\n        return {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        };\n    }\n\n    /**\n     * @description Create Date object from separate parts of time\n     */\n    private getDateFromTimeDigits(hours: number, minutes: number, seconds: number = 0): D | undefined {\n        return this.getDateFromTimeString(`${hours}:${minutes}:${seconds}`);\n    }\n\n    private getDateFromTimeString(timeString: string): D | undefined {\n        if (timeString === undefined) { return; }\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(timeString);\n\n        if (timeString.trim().length === 0 ||\n            hoursOnly === null && hoursAndMinutes === null && hoursAndMinutesAndSeconds === null) {\n            return;\n        }\n\n        // tslint:disable no-magic-numbers\n        let hours: number = 0;\n        let minutes: number = 0;\n        let seconds: number = 0;\n\n        if (hoursOnly) {\n            hours = Number(hoursOnly[1]);\n        } else if (hoursAndMinutes) {\n            hours = Number(hoursAndMinutes[1]);\n            minutes = Number(hoursAndMinutes[2]);\n        } else if (hoursAndMinutesAndSeconds) {\n            hours = Number(hoursAndMinutesAndSeconds[1]);\n            minutes = Number(hoursAndMinutesAndSeconds[2]);\n            seconds = Number(hoursAndMinutesAndSeconds[3]);\n        }\n\n        const resultDate: D = this.dateAdapter.createDateTime(\n            this.dateAdapter.getYear(this.originalValue),\n            this.dateAdapter.getMonth(this.originalValue),\n            this.dateAdapter.getDate(this.originalValue),\n            hours,\n            minutes,\n            seconds,\n            0\n        );\n\n        return this.dateAdapter.isValid(resultDate) ? resultDate : undefined;\n    }\n\n    private getTimeDigitsFromDate(dateVal: D): { hours: number; minutes: number; seconds: number } {\n        return {\n            hours: this.dateAdapter.getHours(dateVal),\n            minutes: this.dateAdapter.getMinutes(dateVal),\n            seconds: this.dateAdapter.getSeconds(dateVal)\n        };\n    }\n\n    private parseValidator(): ValidationErrors | null {\n        return this.currentDateTimeInput === undefined ?\n            { mcTimepickerParse: { text: this.elementRef.nativeElement.value } } :\n            null;\n    }\n\n    private minTimeValidator(): ValidationErrors | null {\n        if (\n            this.minTime &&\n            this.currentDateTimeInput !== undefined &&\n            this.isTimeLowerThenMin(this.currentDateTimeInput)\n        ) {\n            return { mcTimepickerLowerThenMintime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private maxTimeValidator(): ValidationErrors | null {\n        if (\n            this.maxTime &&\n            this.currentDateTimeInput !== undefined &&\n            this.isTimeGreaterThenMax(this.currentDateTimeInput)\n        ) {\n            return { mcTimepickerHigherThenMaxtime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private isTimeLowerThenMin(timeToCompare: D): boolean {\n        if (timeToCompare === undefined || timeToCompare ===  null || this.minTime === null) {\n            return false;\n        }\n\n        return this.dateAdapter.compareDateTime(timeToCompare, this.getDateFromTimeString(this.minTime)) < 0;\n    }\n\n    private isTimeGreaterThenMax(timeToCompare: D): boolean {\n        if (timeToCompare === undefined || timeToCompare ===  null || this.maxTime === null) {\n            return false;\n        }\n\n        return this.dateAdapter.compareDateTime(timeToCompare, this.getDateFromTimeString(this.maxTime)) >= 0;\n    }\n}\n","// tslint:disable:naming-convention\nexport enum TimeParts {\n    hours,\n    minutes,\n    seconds\n}\n\nexport enum TimeFormats {\n    HHmmss = 'HH:mm:ss',\n    HHmm = 'HH:mm'\n}\n\nexport const TIMEFORMAT_PLACEHOLDERS: { [timeFormat: string]: string } = {\n    [TimeFormats.HHmmss]: '  :  :  ',\n    [TimeFormats.HHmm]: '  :  '\n};\n\nexport const DEFAULT_TIME_FORMAT: TimeFormats = TimeFormats.HHmm;\n\nexport const HOURS_MINUTES_SECONDS_REGEXP =\n    new RegExp(/^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9]):([0-5][0-9]|[0-9])?$/);\nexport const HOURS_MINUTES_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9])?$/;\nexport const HOURS_ONLY_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):?$/;\n\nexport const SECONDS_PER_MINUTE: number = 59;\nexport const MINUTES_PER_HOUR: number = 59;\nexport const HOURS_PER_DAY: number = 23;\n\n// TODO Move it to common CDK\nexport const ARROW_UP_KEYCODE: string = 'ArrowUp';\nexport const ARROW_DOWN_KEYCODE: string = 'ArrowDown';\nexport const ARROW_LEFT_KEYCODE: string = 'ArrowLeft';\nexport const ARROW_RIGHT_KEYCODE: string = 'ArrowRight';\n"],"names":[],"mappings":"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"}