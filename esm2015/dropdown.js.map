{"version":3,"file":"dropdown.js","sources":["../../../src/lib/dropdown/dropdown.module.ts","../../../src/lib/dropdown/dropdown-trigger.ts","../../../src/lib/dropdown/dropdown.component.ts","../../../src/lib/dropdown/dropdown-animations.ts","../../../src/lib/dropdown/dropdown-errors.ts","../../../src/lib/dropdown/dropdown-item.ts","../../../src/lib/dropdown/dropdown-panel.ts","../../../src/lib/dropdown/dropdown-content.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER, McDropdownTrigger } from './dropdown-trigger';\nimport { McDropdown } from './dropdown.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        McIconModule\n    ],\n    exports: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    declarations: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    providers: [MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER]\n})\nexport class McDropdownModule {}\n","import {\n    AfterContentInit,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    Self,\n    ViewContainerRef\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction, Directionality } from '@ptsecurity/cdk/bidi';\nimport { LEFT_ARROW, RIGHT_ARROW, SPACE, ENTER } from '@ptsecurity/cdk/keycodes';\nimport {\n    FlexibleConnectedPositionStrategy,\n    HorizontalConnectionPos,\n    Overlay,\n    OverlayConfig,\n    OverlayRef,\n    VerticalConnectionPos,\n    IScrollStrategy\n} from '@ptsecurity/cdk/overlay';\nimport { normalizePassiveListenerOptions } from '@ptsecurity/cdk/platform';\nimport { TemplatePortal } from '@ptsecurity/cdk/portal';\nimport { asapScheduler, merge, of as observableOf, Subscription } from 'rxjs';\nimport { delay, filter, take, takeUntil } from 'rxjs/operators';\n\nimport { throwMcDropdownMissingError } from './dropdown-errors';\nimport { McDropdownItem } from './dropdown-item';\nimport { McDropdownPanel } from './dropdown-panel';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\nimport { McDropdown } from './dropdown.component';\n\n\n/** Injection token that determines the scroll handling while the dropdown is open. */\nexport const MC_DROPDOWN_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-dropdown-scroll-strategy');\n\n/** @docs-private */\nexport function MC_DROPDOWN_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_DROPDOWN_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_DROPDOWN_SCROLL_STRATEGY_FACTORY\n};\n\n/** Default top padding of the nested dropdown panel. */\nexport const NESTED_PANEL_TOP_PADDING = 2;\n\n/** Options for binding a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({passive: true});\n\n/**\n * This directive is intended to be used in conjunction with an mc-dropdown tag.  It is\n * responsible for toggling the display of the provided dropdown instance.\n */\n@Directive({\n    selector: `[mcDropdownTriggerFor]`,\n    host: {\n        'aria-haspopup': 'true',\n        '[attr.aria-expanded]': 'opened || null',\n        '(mousedown)': '_handleMousedown($event)',\n        '(keydown)': '_handleKeydown($event)',\n        '(click)': '_handleClick($event)'\n    },\n    exportAs: 'mcDropdownTrigger'\n})\nexport class McDropdownTrigger implements AfterContentInit, OnDestroy {\n\n\n    /**\n     * Handles touch start events on the trigger.\n     * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n     */\n    private _handleTouchStart = () => this._openedBy = 'touch';\n\n    /** The text direction of the containing app. */\n    get dir(): Direction {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    // Tracking input type is necessary so it's possible to only auto-focus\n    // the first item of the list when the dropdown is opened via the keyboard\n    _openedBy: 'mouse' | 'touch' | null = null;\n\n\n    /** References the dropdown instance that the trigger is associated with. */\n    @Input('mcDropdownTriggerFor')\n    get dropdown() {\n        return this._dropdown;\n    }\n\n    set dropdown(dropdown: McDropdownPanel) {\n        if (dropdown === this._dropdown) {\n            return;\n        }\n\n        this._dropdown = dropdown;\n        this._closeSubscription.unsubscribe();\n\n        if (dropdown) {\n            this._closeSubscription = dropdown.closed.asObservable().subscribe(reason => {\n                this._destroy();\n\n                // If a click closed the dropdown, we should close the entire chain of nested dropdowns.\n                if ((reason === 'click' || reason === 'tab') && this._parent) {\n                    this._parent.closed.emit(reason);\n                }\n            });\n        }\n    }\n\n    private _dropdown: McDropdownPanel;\n\n    /** Data to be passed along to any lazily-rendered content. */\n    @Input('mcDropdownTriggerData') data: any;\n\n    /** Event emitted when the associated dropdown is opened. */\n    @Output() readonly dropdownOpened: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the associated dropdown is closed. */\n    @Output() readonly dropdownClosed: EventEmitter<void> = new EventEmitter<void>();\n\n    private _portal: TemplatePortal;\n    private _overlayRef: OverlayRef | null = null;\n    private _opened: boolean = false;\n    private _closeSubscription = Subscription.EMPTY;\n    private _hoverSubscription = Subscription.EMPTY;\n\n    constructor(private _overlay: Overlay,\n                private _element: ElementRef<HTMLElement>,\n                private _viewContainerRef: ViewContainerRef,\n                @Inject(MC_DROPDOWN_SCROLL_STRATEGY) private _scrollStrategy: any,\n                @Optional() private _parent: McDropdown,\n                @Optional() @Self() private _dropdownItemInstance: McDropdownItem,\n                @Optional() private _dir: Directionality,\n                private _focusMonitor?: FocusMonitor) {\n\n        _element.nativeElement.addEventListener('touchstart', this._handleTouchStart,\n            passiveEventListenerOptions);\n\n        if (_dropdownItemInstance) {\n            _dropdownItemInstance._triggersNestedDropdown = this.triggersNestedDropdown();\n        }\n    }\n\n    ngAfterContentInit() {\n        this._check();\n        this._handleHover();\n    }\n\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n\n        this._element.nativeElement.removeEventListener('touchstart', this._handleTouchStart,\n            passiveEventListenerOptions);\n\n        this._cleanUpSubscriptions();\n        this._closeSubscription.unsubscribe();\n    }\n\n    /** Whether the dropdown is open. */\n    get opened(): boolean {\n        return this._opened;\n    }\n\n    /** Whether the dropdown triggers a nested dropdown or a top-level one. */\n    triggersNestedDropdown(): boolean {\n        return !!(this._dropdownItemInstance && this._parent);\n    }\n\n    /** Toggles the dropdown between the open and closed states. */\n    toggle(): void {\n        // tslint:disable-next-line:no-void-expression\n        return this._opened ? this.close() : this.open();\n    }\n\n    /** Opens the dropdown. */\n    open(): void {\n        if (this._opened) {\n            return;\n        }\n\n        this._check();\n\n        const overlayRef = this._createOverlay();\n        const overlayConfig = overlayRef.getConfig();\n\n        this._setPosition(overlayConfig.positionStrategy as FlexibleConnectedPositionStrategy);\n        overlayConfig.hasBackdrop = this.dropdown.hasBackdrop == null ? !this.triggersNestedDropdown() :\n            this.dropdown.hasBackdrop;\n        overlayRef.attach(this._getPortal());\n\n        if (this.dropdown.lazyContent) {\n            this.dropdown.lazyContent.attach(this.data);\n        }\n\n        this._closeSubscription = this._closingActions().subscribe(() => this.close());\n        this._init();\n\n        if (this.dropdown instanceof McDropdown) {\n            this.dropdown._startAnimation();\n        }\n    }\n\n    /** Closes the dropdown. */\n    close(): void {\n        this.dropdown.closed.emit();\n    }\n\n    /**\n     * Focuses the dropdown trigger.\n     * @param origin Source of the dropdown trigger's focus.\n     */\n    focus(origin: FocusOrigin = 'program') {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._element.nativeElement, origin);\n        } else {\n            this._element.nativeElement.focus();\n        }\n    }\n\n    /** Closes the dropdown and does the necessary cleanup. */\n    private _destroy() {\n        if (!this._overlayRef || !this.opened) {\n            return;\n        }\n\n        const dropdown = this.dropdown;\n\n        this._closeSubscription.unsubscribe();\n        this._overlayRef.detach();\n\n        if (dropdown instanceof McDropdown) {\n            dropdown._resetAnimation();\n\n            if (dropdown.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                dropdown._animationDone\n                    .pipe(\n                        filter((event) => event.toState === 'void'),\n                        take(1),\n                        // Interrupt if the content got re-attached.\n                        takeUntil(dropdown.lazyContent._attached)\n                    )\n                    .subscribe(() => dropdown.lazyContent!.detach(), undefined, () => {\n                        // No matter whether the content got re-attached, reset the dropdown.\n                        this._reset();\n                    });\n            } else {\n                this._reset();\n            }\n        } else {\n            this._reset();\n\n            if (dropdown.lazyContent) {\n                dropdown.lazyContent.detach();\n            }\n        }\n    }\n\n    /**\n     * This method sets the dropdown state to open and focuses the first item if\n     * the dropdown was opened via the keyboard.\n     */\n    private _init(): void {\n        this.dropdown.parent = this.triggersNestedDropdown() ? this._parent : undefined;\n        this.dropdown.direction = this.dir;\n        this._setIsOpened(true);\n        this.dropdown.focusFirstItem(this._openedBy || 'program');\n    }\n\n    /**\n     * This method resets the dropdown when it's closed, most importantly restoring\n     * focus to the dropdown trigger if the dropdown was opened via the keyboard.\n     */\n    private _reset(): void {\n        this._setIsOpened(false);\n\n        // We should reset focus if the user is navigating using a keyboard or\n        // if we have a top-level trigger which might cause focus to be lost\n        // when clicking on the backdrop.\n        if (!this._openedBy) {\n            // Note that the focus style will show up both for `program` and\n            // `keyboard` so we don't have to specify which one it is.\n            this.focus();\n        } else if (!this.triggersNestedDropdown()) {\n            this.focus(this._openedBy);\n        }\n\n        this._openedBy = null;\n    }\n\n    // set state rather than toggle to support triggers sharing a dropdown\n    private _setIsOpened(isOpen: boolean): void {\n        this._opened = isOpen;\n        // tslint:disable-next-line:no-void-expression\n        this._opened ? this.dropdownOpened.emit() : this.dropdownClosed.emit();\n\n        if (this.triggersNestedDropdown()) {\n            this._dropdownItemInstance._highlighted = isOpen;\n        }\n    }\n\n    /**\n     * This method checks that a valid instance of McDropdown has been passed into\n     * mcDropdownTriggerFor. If not, an exception is thrown.\n     */\n    private _check() {\n        if (!this.dropdown) {\n            throwMcDropdownMissingError();\n        }\n    }\n\n    /**\n     * This method creates the overlay from the provided dropdown's template and saves its\n     * OverlayRef so that it can be attached to the DOM when open is called.\n     */\n    private _createOverlay(): OverlayRef {\n        if (!this._overlayRef) {\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions(config.positionStrategy as FlexibleConnectedPositionStrategy);\n            this._overlayRef = this._overlay.create(config);\n\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `McDropdownPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n\n        return this._overlayRef;\n    }\n\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    private _getOverlayConfig(): OverlayConfig {\n        return new OverlayConfig({\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withTransformOriginOn('.mc-dropdown__panel'),\n            backdropClass: this.dropdown.backdropClass || 'cdk-overlay-transparent-backdrop',\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir\n        });\n    }\n\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the dropdown based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    private _subscribeToPositions(position: FlexibleConnectedPositionStrategy): void {\n        if (this.dropdown.setPositionClasses) {\n            position.positionChanges.subscribe(change => {\n                const posX: DropdownPositionX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                const posY: DropdownPositionY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n\n                this.dropdown.setPositionClasses!(posX, posY);\n            });\n        }\n    }\n\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    private _setPosition(positionStrategy: FlexibleConnectedPositionStrategy) {\n\n        let [originX, originFallbackX, overlayX, overlayFallbackX]: HorizontalConnectionPos[] =\n            this.dropdown.xPosition === 'before' ?\n                ['end', 'start', 'end', 'start'] :\n                ['start', 'end', 'start', 'end'];\n\n        let [overlayY, overlayFallbackY, originY, originFallbackY]: VerticalConnectionPos[] =\n            this.dropdown.yPosition === 'above' ?\n                ['bottom', 'top', 'bottom', 'top'] :\n                ['top', 'bottom', 'top', 'bottom'];\n\n        let offsetY = 0;\n\n        if (this.triggersNestedDropdown()) {\n            // When the dropdown is nested, it should always align itself\n            // to the edges of the trigger, instead of overlapping it.\n            overlayFallbackX = originX = this.dropdown.xPosition === 'before' ? 'start' : 'end';\n            originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n            offsetY = overlayY === 'bottom' ? NESTED_PANEL_TOP_PADDING : -NESTED_PANEL_TOP_PADDING;\n        } else {\n            if (!this.dropdown.overlapTriggerY) {\n                originY = overlayY === 'top' ? 'bottom' : 'top';\n                originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n            }\n\n            if (!this.dropdown.overlapTriggerX) {\n                overlayFallbackX = originX = this.dropdown.xPosition === 'before' ? 'start' : 'end';\n                originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n            }\n        }\n\n        positionStrategy.withPositions([\n            {originX, originY, overlayX, overlayY, offsetY},\n            {originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY},\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            }\n        ]);\n    }\n\n    /** Cleans up the active subscriptions. */\n    private _cleanUpSubscriptions(): void {\n        this._closeSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n\n    /** Returns a stream that emits whenever an action that should close the dropdown occurs. */\n    private _closingActions() {\n        const backdrop = this._overlayRef!.backdropClick();\n        const detachments = this._overlayRef!.detachments();\n        const parentClose = this._parent ? this._parent.closed : observableOf();\n        const hover = this._parent ? this._parent._hovered().pipe(\n            filter((active) => active !== this._dropdownItemInstance),\n            filter(() => this._opened)\n        ) : observableOf();\n\n        return merge(backdrop, parentClose, hover, detachments);\n    }\n\n    /** Handles mouse presses on the trigger. */\n    private _handleMousedown(event: MouseEvent): void {\n        // Since right or middle button clicks won't trigger the `click` event,\n        // we shouldn't consider the dropdown as opened by mouse in those cases.\n        this._openedBy = event.button === 0 ? 'mouse' : null;\n\n        // Since clicking on the trigger won't close the dropdown if it opens a nested dropdown,\n        // we should prevent focus from moving onto it via click to avoid the\n        // highlight from lingering on the dropdown item.\n        if (this.triggersNestedDropdown()) {\n            event.preventDefault();\n        }\n    }\n\n    /** Handles key presses on the trigger. */\n    private _handleKeydown(event: KeyboardEvent): void {\n        const keyCode = event.keyCode;\n\n        if (keyCode === SPACE || keyCode === ENTER) {\n            this.open();\n        }\n\n        if (this.triggersNestedDropdown() && (\n            (keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n            (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n            this.open();\n        }\n    }\n\n    /** Handles click events on the trigger. */\n    private _handleClick(event: MouseEvent): void {\n        if (this.triggersNestedDropdown()) {\n            // Stop event propagation to avoid closing the parent dropdown.\n            event.stopPropagation();\n            this.open();\n        } else {\n            this.toggle();\n        }\n    }\n\n    /** Handles the cases where the user hovers over the trigger. */\n    private _handleHover() {\n        // Subscribe to changes in the hovered item in order to toggle the panel.\n        if (!this.triggersNestedDropdown()) {\n            return;\n        }\n\n        this._hoverSubscription = this._parent._hovered()\n        // Since we might have multiple competing triggers for the same dropdown (e.g. a nested dropdown\n        // with different data and triggers), we have to delay it by a tick to ensure that\n        // it won't be closed immediately after it is opened.\n            .pipe(\n                filter((active) => active === this._dropdownItemInstance && !active.disabled),\n                delay(0, asapScheduler)\n            )\n            .subscribe(() => {\n                this._openedBy = 'mouse';\n\n                // If the same dropdown is used between multiple triggers, it might still be animating\n                // while the new trigger tries to re-open it. Wait for the animation to finish\n                // before doing so. Also interrupt if the user moves to another item.\n                if (this.dropdown instanceof McDropdown && this.dropdown._isAnimating) {\n                    // We need the `delay(0)` here in order to avoid\n                    // 'changed after checked' errors in some cases. See #12194.\n                    this.dropdown._animationDone\n                        .pipe(take(1), delay(0, asapScheduler), takeUntil(this._parent._hovered()))\n                        .subscribe(() => this.open());\n                } else {\n                    this.open();\n                }\n            });\n    }\n\n    /** Gets the portal that should be attached to the overlay. */\n    private _getPortal(): TemplatePortal {\n        // Note that we can avoid this check by keeping the portal on the dropdown panel.\n        // While it would be cleaner, we'd have to introduce another required method on\n        // `McDropdownPanel`, making it harder to consume.\n        if (!this._portal || this._portal.templateRef !== this.dropdown.templateRef) {\n            this._portal = new TemplatePortal(this.dropdown.templateRef, this._viewContainerRef);\n        }\n\n        return this._portal;\n    }\n\n}\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    Output,\n    TemplateRef,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    OnInit\n} from '@angular/core';\nimport { FocusKeyManager, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE, LEFT_ARROW, RIGHT_ARROW, DOWN_ARROW, UP_ARROW } from '@ptsecurity/cdk/keycodes';\nimport { merge, Observable, Subject, Subscription } from 'rxjs';\nimport { startWith, switchMap, take } from 'rxjs/operators';\n\nimport { mcDropdownAnimations } from './dropdown-animations';\nimport { McDropdownContent } from './dropdown-content';\nimport { throwMcDropdownInvalidPositionX, throwMcDropdownInvalidPositionY } from './dropdown-errors';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/** Default `mc-dropdown` options that can be overridden. */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownDefaultOptions {\n    /** The x-axis position of the dropdown. */\n    xPosition: DropdownPositionX;\n\n    /** The y-axis position of the dropdown. */\n    yPosition: DropdownPositionY;\n\n    /** Whether the dropdown should overlap the dropdown trigger horizontally. */\n    overlapTriggerX: boolean;\n\n    /** Whether the dropdown should overlap the dropdown trigger vertically. */\n    overlapTriggerY: boolean;\n\n    /** Class to be applied to the dropdown's backdrop. */\n    backdropClass: string;\n\n    /** Whether the dropdown has a backdrop. */\n    hasBackdrop?: boolean;\n}\n\n/** Injection token to be used to override the default options for `mc-dropdown`. */\nexport const MC_DROPDOWN_DEFAULT_OPTIONS =\n    new InjectionToken<McDropdownDefaultOptions>('mc-dropdown-default-options', {\n        providedIn: 'root',\n        factory: MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY\n    });\n\n/** @docs-private */\nexport function MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY(): McDropdownDefaultOptions {\n    return {\n        overlapTriggerX: true,\n        overlapTriggerY: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop'\n    };\n}\n\n@Component({\n    selector: 'mc-dropdown',\n    templateUrl: 'dropdown.html',\n    styleUrls: ['dropdown.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcDropdown',\n    animations: [\n        mcDropdownAnimations.transformDropdown,\n        mcDropdownAnimations.fadeInItems\n    ],\n    providers: [\n        { provide: MC_DROPDOWN_PANEL, useExisting: McDropdown }\n    ]\n})\nexport class McDropdown implements AfterContentInit, McDropdownPanel<McDropdownItem>, OnInit, OnDestroy {\n\n    /** Position of the dropdown in the X axis. */\n    @Input()\n    get xPosition(): DropdownPositionX {\n        return this._xPosition;\n    }\n\n    set xPosition(value: DropdownPositionX) {\n        if (value !== 'before' && value !== 'after') {\n            throwMcDropdownInvalidPositionX();\n        }\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Position of the dropdown in the Y axis. */\n    @Input()\n    get yPosition(): DropdownPositionY {\n        return this._yPosition;\n    }\n\n    set yPosition(value: DropdownPositionY) {\n        if (value !== 'above' && value !== 'below') {\n            throwMcDropdownInvalidPositionY();\n        }\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Whether the dropdown should overlap its trigger vertically. */\n    @Input()\n    get overlapTriggerY(): boolean {\n        return this._overlapTriggerY;\n    }\n\n    set overlapTriggerY(value: boolean) {\n        this._overlapTriggerY = coerceBooleanProperty(value);\n    }\n\n    /** Whether the dropdown should overlap its trigger horizontally. */\n    @Input()\n    get overlapTriggerX(): boolean {\n        return this._overlapTriggerX;\n    }\n\n    set overlapTriggerX(value: boolean) {\n        this._overlapTriggerX = coerceBooleanProperty(value);\n    }\n\n    /** Whether the dropdown has a backdrop. */\n    @Input()\n    get hasBackdrop(): boolean | undefined {\n        return this._hasBackdrop;\n    }\n\n    set hasBackdrop(value: boolean | undefined) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n\n    /**\n     * This method takes classes set on the host mc-dropdown element and applies them on the\n     * dropdown template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing dropdown from outside the component.\n     * @param classes list of class names\n     */\n    @Input('class')\n    set panelClass(classes: string) {\n        const previousPanelClass = this._previousPanelClass;\n\n        if (previousPanelClass && previousPanelClass.length) {\n            previousPanelClass.split(' ').forEach((className: string) => {\n                this._classList[className] = false;\n            });\n        }\n\n        this._previousPanelClass = classes;\n\n        if (classes && classes.length) {\n            classes.split(' ').forEach((className: string) => {\n                this._classList[className] = true;\n            });\n\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n\n    /** Config object to be passed into the dropdown's ngClass */\n    _classList: { [key: string]: boolean } = {};\n\n    /** Current state of the panel animation. */\n    _panelAnimationState: 'void' | 'enter' = 'void';\n\n    /** Emits whenever an animation on the dropdown completes. */\n    _animationDone = new Subject<AnimationEvent>();\n\n    /** Whether the dropdown is animating. */\n    _isAnimating: boolean;\n\n    /** Parent dropdown of the current dropdown panel. */\n    parent: McDropdownPanel | undefined;\n\n    /** Layout direction of the dropdown. */\n    direction: Direction;\n\n    /** Class to be added to the backdrop element. */\n    @Input() backdropClass: string = this._defaultOptions.backdropClass;\n\n    /** @docs-private */\n    @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n\n    /**\n     * List of the items inside of a dropdown.\n     */\n    @ContentChildren(McDropdownItem) items: QueryList<McDropdownItem>;\n\n    /**\n     * Dropdown content that will be rendered lazily.\n     * @docs-private\n     */\n    @ContentChild(McDropdownContent) lazyContent: McDropdownContent;\n\n    private _previousPanelClass: string;\n\n    /** Event emitted when the dropdown is closed. */\n    @Output() readonly closed: EventEmitter<void | 'click' | 'keydown' | 'tab'> =\n        new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n\n    private _keyManager: FocusKeyManager<McDropdownItem>;\n    private _xPosition: DropdownPositionX = this._defaultOptions.xPosition;\n    private _yPosition: DropdownPositionY = this._defaultOptions.yPosition;\n\n    /** Dropdown items inside the current dropdown. */\n    private _items: McDropdownItem[] = [];\n\n    /** Emits whenever the amount of dropdown items changes. */\n    private _itemChanges = new Subject<McDropdownItem[]>();\n\n    /** Subscription to tab events on the dropdown panel */\n    private _tabSubscription = Subscription.EMPTY;\n    private _overlapTriggerX: boolean = this._defaultOptions.overlapTriggerX;\n    private _overlapTriggerY: boolean = this._defaultOptions.overlapTriggerY;\n    private _hasBackdrop: boolean | undefined = this._defaultOptions.hasBackdrop;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        private _ngZone: NgZone,\n        @Inject(MC_DROPDOWN_DEFAULT_OPTIONS) private _defaultOptions: McDropdownDefaultOptions) { }\n\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager<McDropdownItem>(this.items).withWrap().withTypeAhead();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n    }\n\n    ngOnDestroy() {\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n\n    /** Stream that emits whenever the hovered dropdown item changes. */\n    _hovered(): Observable<McDropdownItem> {\n        return this._itemChanges.pipe(\n            startWith(this._items),\n            switchMap(items => merge(...items.map(item => item._hovered)))\n        );\n    }\n\n    /** Handle a keyboard event from the dropdown, delegating to the appropriate action. */\n    _handleKeydown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n\n        switch (keyCode) {\n            case ESCAPE:\n                this.closed.emit('keydown');\n                break;\n            case LEFT_ARROW:\n                if (this.parent && this.direction === 'ltr') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case RIGHT_ARROW:\n                if (this.parent && this.direction === 'rtl') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            default:\n                if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n                    this._keyManager.setFocusOrigin('keyboard');\n                }\n\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    /**\n     * Focus the first item in the dropdown.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin: FocusOrigin = 'program'): void {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable.asObservable()\n                .pipe(take(1))\n                .subscribe(() => this._keyManager.setFocusOrigin(origin).setFirstItemActive());\n        } else {\n            this._keyManager.setFocusOrigin(origin).setFirstItemActive();\n        }\n    }\n\n    /**\n     * Resets the active item in the dropdown. This is used when the dropdown is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n\n    /**\n     * Registers a dropdown item with the dropdown.\n     * @docs-private\n     */\n    addItem(item: McDropdownItem) {\n        // We register the items through this method, rather than picking them up through\n        // `ContentChildren`, because we need the items to be picked up by their closest\n        // `mc-dropdown` ancestor. If we used `@ContentChildren(McDropdownItem, {descendants: true})`,\n        // all descendant items will bleed into the top-level dropdown in the case where the consumer\n        // has `mc-dropdown` instances nested inside each other.\n        if (this._items.indexOf(item) === -1) {\n            this._items.push(item);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Removes an item from the dropdown.\n     * @docs-private\n     */\n    removeItem(item: McDropdownItem) {\n        const index = this._items.indexOf(item);\n\n        if (this._items.indexOf(item) > -1) {\n            this._items.splice(index, 1);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Adds classes to the dropdown panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the dropdown along the x axis.\n     * @param posY Position of the dropdown along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX: DropdownPositionX = this.xPosition, posY: DropdownPositionY = this.yPosition) {\n        const classes = this._classList;\n        classes['mc-dropdown-before'] = posX === 'before';\n        classes['mc-dropdown-after'] = posX === 'after';\n        classes['mc-dropdown-above'] = posY === 'above';\n        classes['mc-dropdown-below'] = posY === 'below';\n    }\n\n    /** Starts the enter animation. */\n    _startAnimation() {\n        this._panelAnimationState = 'enter';\n    }\n\n    /** Resets the panel animation to its initial state. */\n    _resetAnimation() {\n        this._panelAnimationState = 'void';\n    }\n\n    /** Callback that is invoked when the panel animation completes. */\n    _onAnimationDone(event: AnimationEvent) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n    }\n\n    _onAnimationStart(event: AnimationEvent) {\n        this._isAnimating = true;\n\n        // Scroll the content element to the top as soon as the animation starts. This is necessary,\n        // because we move focus to the first item while it's still being animated, which can throw\n        // the browser off when it determines the scroll position. Alternatively we can move focus\n        // when the animation is done, however moving focus asynchronously will interrupt screen\n        // readers which are in the process of reading out the dropdown already. We take the `element`\n        // from the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n}\n","import {\n    trigger,\n    state,\n    style,\n    animate,\n    transition,\n    query,\n    group,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\n/**\n * Animations used by the mc-dropdown component.\n * @docs-private\n */\nexport const mcDropdownAnimations: {\n    readonly transformDropdown: AnimationTriggerMetadata;\n    readonly fadeInItems: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation controls the dropdown panel's entry and exit from the page.\n     *\n     * When the dropdown panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the dropdown panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformDropdown: trigger('transformDropdown', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        })),\n        transition('void => enter', group([\n            query('.mc-dropdown__content', animate('50ms linear', style({opacity: 1}))),\n            animate('50ms cubic-bezier(0, 0, 0.2, 1)', style({transform: 'scale(1)'}))\n        ])),\n        transition('* => void', animate('50ms 25ms linear', style({opacity: 0})))\n    ]),\n\n\n    /**\n     * This animation fades in the background color and content of the dropdown panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // now. Remove next time we do breaking changes.\n        state('showing', style({opacity: 1})),\n        transition('void => *', [\n            style({opacity: 0}),\n            animate('200ms 60ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\nexport const fadeInItems = mcDropdownAnimations.fadeInItems;\n\nexport const transformDropdown = mcDropdownAnimations.transformDropdown;\n","/**\n * Throws an exception for the case when dropdown trigger doesn't have a valid mc-dropdown instance\n * @docs-private\n */\nexport function throwMcDropdownMissingError() {\n    throw Error(`mcDropdownTriggerFor: must pass in an mc-dropdown instance.\n    Example:\n      <mc-dropdown #dropdown=\"mcDropdown\"></mc-dropdown>\n      <button [mcDropdownTriggerFor]=\"dropdown\"></button>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mc-dropdown xPosition=\"before\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mc-dropdown yPosition=\"above\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    Inject,\n    Optional,\n    Input,\n    ViewChild\n} from '@angular/core';\nimport { IFocusableOption, FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { CanDisable, CanDisableCtor, mixinDisabled } from '@ptsecurity/mosaic/core';\nimport { Subject } from 'rxjs';\n\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\n\n\n// Boilerplate for applying mixins to McDropdownItem.\n/** @docs-private */\nexport class McDropdownItemBase {}\nexport const _McDropdownItemMixinBase: CanDisableCtor & typeof McDropdownItemBase =\n    mixinDisabled(McDropdownItemBase);\n\n/**\n * This directive is intended to be used inside an mc-dropdown tag.\n * It exists mostly to set the role attribute.\n */\n@Component({\n    selector: 'mc-dropdown-item, [mc-dropdown-item]',\n    exportAs: 'mcDropdownItem',\n    inputs: ['disabled'],\n    host: {\n        '[attr.role]': 'role',\n        class: 'mc-dropdown__item',\n        '[class.mc-dropdown__item_highlighted]': '_highlighted',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_checkDisabled($event)',\n        '(mouseenter)': '_handleMouseEnter()'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    template: `\n        <div #content>\n            <ng-content></ng-content>\n        </div>\n        <i *ngIf=\"_triggersNestedDropdown\" mc-icon=\"mc-angle-right-M_16\" class=\"mc-dropdown__trigger\"></i>\n    `\n})\nexport class McDropdownItem extends _McDropdownItemMixinBase\n    implements IFocusableOption, CanDisable, OnDestroy {\n\n    /** ARIA role for the dropdown item. */\n    @Input() role: 'menuitem' | 'menuitemradio' | 'menuitemcheckbox' = 'menuitem';\n\n    @ViewChild('content') content;\n\n    private _document: Document;\n\n    /** Stream that emits when the dropdown item is hovered. */\n    readonly _hovered: Subject<McDropdownItem> = new Subject<McDropdownItem>();\n\n    /** Whether the dropdown item is highlighted. */\n    _highlighted: boolean = false;\n\n    /** Whether the dropdown item acts as a trigger for a nested dropdown. */\n    _triggersNestedDropdown: boolean = false;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        @Inject(DOCUMENT) document: any,\n        private _focusMonitor: FocusMonitor,\n        @Inject(MC_DROPDOWN_PANEL) @Optional() private _parentDropdownPanel?: McDropdownPanel<McDropdownItem>) {\n        super();\n\n        if (_focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for dropdown items only when the focus was not caused by a\n            // mouse or touch interaction.\n            _focusMonitor.monitor(this._elementRef.nativeElement, false);\n        }\n\n        if (_parentDropdownPanel && _parentDropdownPanel.addItem) {\n            _parentDropdownPanel.addItem(this);\n        }\n\n        this._document = document;\n    }\n\n    /** Focuses the dropdown item. */\n    focus(origin: FocusOrigin = 'program'): void {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin);\n        } else {\n            this._getHostElement().focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n\n        if (this._parentDropdownPanel && this._parentDropdownPanel.removeItem) {\n            this._parentDropdownPanel.removeItem(this);\n        }\n\n        this._hovered.complete();\n    }\n\n    /** Used to set the `tabindex`. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Returns the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._elementRef.nativeElement;\n    }\n\n    /** Prevents the default element actions if it is disabled. */\n    _checkDisabled(event: Event): void {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n\n    /** Emits to the hover stream. */\n    _handleMouseEnter() {\n        this._hovered.next(this);\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        const element: HTMLElement = this.content.nativeElement;\n        // tslint:disable-next-line:no-magic-numbers\n        const textNodeType = this._document ? this._document.TEXT_NODE : 3;\n        let output = '';\n\n        if (element.childNodes) {\n            const length = element.childNodes.length;\n\n            // Go through all the top-level text nodes and extract their text.\n            // We skip anything that's not a text node to prevent the text from\n            // being thrown off by something like an icon.\n            for (let i = 0; i < length; i++) {\n                if (element.childNodes[i].nodeType === textNodeType) {\n                    output += element.childNodes[i].textContent;\n                }\n            }\n        }\n\n        return output.trim();\n    }\n}\n","import { EventEmitter, TemplateRef, InjectionToken } from '@angular/core';\nimport { FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/**\n * Injection token used to provide the parent dropdown to dropdown-specific components.\n * @docs-private\n */\nexport const MC_DROPDOWN_PANEL = new InjectionToken<McDropdownPanel>('MC_DROPDOWN_PANEL');\n\n/**\n * Interface for a custom dropdown panel that can be used with `mcDropdownTriggerFor`.\n * @docs-private\n */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownPanel<T = any> {\n    xPosition: DropdownPositionX;\n    yPosition: DropdownPositionY;\n    overlapTriggerX: boolean;\n    overlapTriggerY: boolean;\n    templateRef: TemplateRef<any>;\n    closed: EventEmitter<void | 'click' | 'keydown' | 'tab'>;\n    parent?: McDropdownPanel | undefined;\n    direction?: Direction;\n    lazyContent?: McDropdownContent;\n    backdropClass?: string;\n    hasBackdrop?: boolean;\n    focusFirstItem(origin?: FocusOrigin): void;\n    resetActiveItem(): void;\n    setPositionClasses?(x: DropdownPositionX, y: DropdownPositionY): void;\n    addItem?(item: T): void;\n    removeItem?(item: T): void;\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    Directive,\n    TemplateRef,\n    ComponentFactoryResolver,\n    ApplicationRef,\n    Injector,\n    ViewContainerRef,\n    Inject,\n    OnDestroy\n} from '@angular/core';\nimport { TemplatePortal, DomPortalOutlet } from '@ptsecurity/cdk/portal';\nimport { Subject } from 'rxjs';\n\n\n/**\n * Dropdown content that will be rendered lazily once the dropdown is opened.\n */\n@Directive({\n    selector: 'ng-template[mcDropdownContent]'\n})\nexport class McDropdownContent implements OnDestroy {\n\n    /** Emits when the dropdown content has been attached. */\n    _attached = new Subject<void>();\n    private _portal: TemplatePortal<any>;\n    private _outlet: DomPortalOutlet;\n\n    constructor(\n        private _template: TemplateRef<any>,\n        private _componentFactoryResolver: ComponentFactoryResolver,\n        private _appRef: ApplicationRef,\n        private _injector: Injector,\n        private _viewContainerRef: ViewContainerRef,\n        @Inject(DOCUMENT) private _document: any) {}\n\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context: any = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n\n        this.detach();\n\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'),\n                this._componentFactoryResolver, this._appRef, this._injector);\n        }\n\n        const element: HTMLElement = this._template.elementRef.nativeElement;\n\n        // Because we support opening the same dropdown from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode!.insertBefore(this._outlet.outletElement, element);\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\n"],"names":["observableOf"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AOAA;;;AAqBA,AAAA,MAAa,iBAAiB,CAA9B;;;;;;;;;IAOI,WAAJ,CACgB,SAA2B,EAC3B,yBAAmD,EACnD,OAAuB,EACvB,SAAmB,EACnB,iBAAmC,EACjB,SAAc,EANhD;QACgB,IAAhB,CAAA,SAAyB,GAAT,SAAS,CAAkB;QAC3B,IAAhB,CAAA,yBAAyC,GAAzB,yBAAyB,CAA0B;QACnD,IAAhB,CAAA,OAAuB,GAAP,OAAO,CAAgB;QACvB,IAAhB,CAAA,SAAyB,GAAT,SAAS,CAAU;QACnB,IAAhB,CAAA,iBAAiC,GAAjB,iBAAiB,CAAkB;QACjB,IAAlC,CAAA,SAA2C,GAAT,SAAS,CAAK;;;;QAV5C,IAAJ,CAAA,SAAa,GAAG,IAAI,OAAO,EAAQ,CAAC;KAUgB;;;;;;;IAMhD,MAAM,CAAC,OAAX,GAA0B,EAAE,EAA5B;QACQ,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACf,IAAI,CAAC,OAAO,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;SAC7E;QAED,IAAI,CAAC,MAAM,EAAE,CAAC;QAEd,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACf,IAAI,CAAC,OAAO,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,EAClE,IAAI,CAAC,yBAAyB,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SACrE;;QAET,MAAc,OAAO,GAAgB,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,aAAa,CAA5E;;;;QAKQ,mBAAA,OAAO,CAAC,UAAU,GAAE,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;QACtE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QAC3C,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;KACzB;;;;;;IAMD,MAAM,GAAV;QACQ,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;YACzB,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;SACzB;KACJ;;;;IAED,WAAW,GAAf;QACQ,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;SAC1B;KACJ;;;IA1DL,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW;gBACP,QAAQ,EAAE,gCAAgC;aAC7C,EAAD,EAAA;;;;IAjBA,EAAA,IAAA,EAAI,WAAW,EAAf;IACA,EAAA,IAAA,EAAI,wBAAwB,EAA5B;IACA,EAAA,IAAA,EAAI,cAAc,EAAlB;IACA,EAAA,IAAA,EAAI,QAAQ,EAAZ;IACA,EAAA,IAAA,EAAI,gBAAgB,EAApB;IA2BA,EAAA,IAAA,EAAA,SAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAS,MAAM,EAAf,IAAA,EAAA,CAAgB,QAAQ,EAAxB,EAAA,CAAA,EAAA;;;;;;;ADlCA;;;;;AAYA,AAAA,MAAa,iBAAiB,GAAG,IAAI,cAAc,CAAkB,mBAAmB,CAAC;;;;;;ADZzF;;;;AAqBA,AAAA,MAAa,kBAAkB,CAA/B;CAAkC;;AAClC,AAAA,MAAa,wBAAwB,GACjC,aAAa,CAAC,kBAAkB,CAAC,CADrC;;;;;AA8BA,AAAA,MAAa,cAAe,SAAQ,wBAAwB,CAA5D;;;;;;;IAmBI,WAAJ,CACgB,WAAoC,EAC1B,QAAa,EACvB,aAA2B,EACY,oBAAsD,EAJ7G;QAKQ,KAAK,EAAE,CAAC;QAJA,IAAhB,CAAA,WAA2B,GAAX,WAAW,CAAyB;QAEpC,IAAhB,CAAA,aAA6B,GAAb,aAAa,CAAc;QACY,IAAvD,CAAA,oBAA2E,GAApB,oBAAoB,CAAkC;;;;QAnBhG,IAAb,CAAA,IAAiB,GAAsD,UAAU,CAAC;;;;QAOrE,IAAb,CAAA,QAAqB,GAA4B,IAAI,OAAO,EAAkB,CAAC;;;;QAG3E,IAAJ,CAAA,YAAgB,GAAY,KAAK,CAAC;;;;QAG9B,IAAJ,CAAA,uBAA2B,GAAY,KAAK,CAAC;QASrC,IAAI,aAAa,EAAE;;;;YAIf,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;SAChE;QAED,IAAI,oBAAoB,IAAI,oBAAoB,CAAC,OAAO,EAAE;YACtD,oBAAoB,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACtC;QAED,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;KAC7B;;;;;;IAGD,KAAK,CAAC,MAAV,GAAgC,SAAS,EAAzC;QACQ,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE,MAAM,CAAC,CAAC;SAC/D;aAAM;YACH,IAAI,CAAC,eAAe,EAAE,CAAC,KAAK,EAAE,CAAC;SAClC;KACJ;;;;IAED,WAAW,GAAf;QACQ,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;SACrE;QAED,IAAI,IAAI,CAAC,oBAAoB,IAAI,IAAI,CAAC,oBAAoB,CAAC,UAAU,EAAE;YACnE,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SAC9C;QAED,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;KAC5B;;;;;IAGD,YAAY,GAAhB;QACQ,OAAO,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,GAAG,CAAC;KACrC;;;;;IAGD,eAAe,GAAnB;QACQ,OAAO,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;KACzC;;;;;;IAGD,cAAc,CAAC,KAAY,EAA/B;QACQ,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,KAAK,CAAC,eAAe,EAAE,CAAC;SAC3B;KACJ;;;;;IAGD,iBAAiB,GAArB;QACQ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC5B;;;;;IAGD,QAAQ,GAAZ;;QACA,MAAc,OAAO,GAAgB,IAAI,CAAC,OAAO,CAAC,aAAa,CAA/D;;;QAEA,MAAc,YAAY,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC,CAA1E;;QACA,IAAY,MAAM,GAAG,EAAE,CAAvB;QAEQ,IAAI,OAAO,CAAC,UAAU,EAAE;;YAChC,MAAkB,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,MAAM,CAApD;;;;YAKY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC7B,IAAI,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,YAAY,EAAE;oBACjD,MAAM,IAAI,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;iBAC/C;aACJ;SACJ;QAED,OAAO,MAAM,CAAC,IAAI,EAAE,CAAC;KACxB;;;IAhIL,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW;gBACP,QAAQ,EAAE,sCAAsC;gBAChD,QAAQ,EAAE,gBAAgB;gBAC1B,MAAM,EAAE,CAAC,UAAU,CAAC;gBACpB,IAAI,EAAE;oBACF,aAAa,EAAE,MAAM;oBACrB,KAAK,EAAE,mBAAmB;oBAC1B,uCAAuC,EAAE,cAAc;oBACvD,iBAAiB,EAAE,gBAAgB;oBACnC,sBAAsB,EAAE,qBAAqB;oBAC7C,iBAAiB,EAAE,kBAAkB;oBACrC,SAAS,EAAE,wBAAwB;oBACnC,cAAc,EAAE,qBAAqB;iBACxC;gBACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;gBAC/C,aAAa,EAAE,iBAAiB,CAAC,IAAI;gBACrC,QAAQ,EAAE,CAAd;;;;;IAKA,CAAK;aACJ,EAAD,EAAA;;;;IA/CA,EAAA,IAAA,EAAI,UAAU,EAAd;IAqEA,EAAA,IAAA,EAAA,SAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAS,MAAM,EAAf,IAAA,EAAA,CAAgB,QAAQ,EAAxB,EAAA,CAAA,EAAA;IA7DA,EAAA,IAAA,EAA2B,YAAY,EAAvC;IA+DA,EAAA,IAAA,EAAA,SAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAS,MAAM,EAAf,IAAA,EAAA,CAAgB,iBAAiB,EAAjC,EAAA,EAAA,EAAA,IAAA,EAAoC,QAAQ,EAA5C,CAAA,EAAA;;;IAnBA,IAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,CAAA;IAEA,OAAA,EAAA,CAAA,EAAA,IAAA,EAAK,SAAS,EAAd,IAAA,EAAA,CAAe,SAAS,EAAxB,EAAA,CAAA;;;;;;;;;;;;ADtDA,AAAA,SAAgB,2BAA2B,GAA3C;IACI,MAAM,KAAK,CAAC,CAAhB;;;yDAGA,CAA0D,CAAC,CAAC;CAC3D;;;;;;;AAOD,AAAA,SAAgB,+BAA+B,GAA/C;IACI,MAAM,KAAK,CAAC,CAAhB;oFACA,CAAqF,CAAC,CAAC;CACtF;;;;;;;AAOD,AAAA,SAAgB,+BAA+B,GAA/C;IACI,MAAM,KAAK,CAAC,CAAhB;mFACA,CAAoF,CAAC,CAAC;CACrF;;;;;;AD7BD;;;;;AAgBA,AAAA,MAAa,oBAAoB,GAG7B;;;;;;;;;IASA,iBAAiB,EAAE,OAAO,CAAC,mBAAmB,EAAE;QAC5C,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC;YAChB,OAAO,EAAE,CAAC;YACV,SAAS,EAAE,YAAY;SAC1B,CAAC,CAAC;QACH,UAAU,CAAC,eAAe,EAAE,KAAK,CAAC;YAC9B,KAAK,CAAC,uBAAuB,EAAE,OAAO,CAAC,aAAa,EAAE,KAAK,CAAC,EAAC,OAAO,EAAE,CAAC,EAAC,CAAC,CAAC,CAAC;YAC3E,OAAO,CAAC,iCAAiC,EAAE,KAAK,CAAC,EAAC,SAAS,EAAE,UAAU,EAAC,CAAC,CAAC;SAC7E,CAAC,CAAC;QACH,UAAU,CAAC,WAAW,EAAE,OAAO,CAAC,kBAAkB,EAAE,KAAK,CAAC,EAAC,OAAO,EAAE,CAAC,EAAC,CAAC,CAAC,CAAC;KAC5E,CAAC;;;;;IAOF,WAAW,EAAE,OAAO,CAAC,aAAa,EAAE;;QAEhC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,EAAC,OAAO,EAAE,CAAC,EAAC,CAAC,CAAC;QACrC,UAAU,CAAC,WAAW,EAAE;YACpB,KAAK,CAAC,EAAC,OAAO,EAAE,CAAC,EAAC,CAAC;YACnB,OAAO,CAAC,6CAA6C,CAAC;SACzD,CAAC;KACL,CAAC;CACL,CAAD;;AAEA,AAAA,MAAa,WAAW,GAAG,oBAAoB,CAAC,WAAW,CAA3D;;AAEA,AAAA,MAAa,iBAAiB,GAAG,oBAAoB,CAAC,iBAAiB;;;;;;ADxDvE;;;;AA0DA,AAAA,MAAa,2BAA2B,GACpC,IAAI,cAAc,CAA2B,6BAA6B,EAAE;IACxE,UAAU,EAAE,MAAM;IAClB,OAAO,EAAE,mCAAmC;CAC/C,CAAC,CAAN;;;;;AAGA,AAAA,SAAgB,mCAAmC,GAAnD;IACI,OAAO;QACH,eAAe,EAAE,IAAI;QACrB,eAAe,EAAE,KAAK;QACtB,SAAS,EAAE,OAAO;QAClB,SAAS,EAAE,OAAO;QAClB,aAAa,EAAE,kCAAkC;KACpD,CAAC;CACL;AAiBD,AAAA,MAAa,UAAU,CAAvB;;;;;;IAgJI,WAAJ,CACgB,WAAoC,EACpC,OAAe,EACsB,eAAyC,EAH9F;QACgB,IAAhB,CAAA,WAA2B,GAAX,WAAW,CAAyB;QACpC,IAAhB,CAAA,OAAuB,GAAP,OAAO,CAAQ;QACsB,IAArD,CAAA,eAAoE,GAAf,eAAe,CAA0B;;;;QA3D1F,IAAJ,CAAA,UAAc,GAA+B,EAAE,CAAC;;;;QAG5C,IAAJ,CAAA,oBAAwB,GAAqB,MAAM,CAAC;;;;QAGhD,IAAJ,CAAA,cAAkB,GAAG,IAAI,OAAO,EAAkB,CAAC;;;;QAYtC,IAAb,CAAA,aAA0B,GAAW,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC;;;;QAmBjD,IAAvB,CAAA,MAA6B,GACrB,IAAI,YAAY,EAAsC,CAAC;QAGnD,IAAZ,CAAA,UAAsB,GAAsB,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC;QAC/D,IAAZ,CAAA,UAAsB,GAAsB,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC;;;;QAG/D,IAAZ,CAAA,MAAkB,GAAqB,EAAE,CAAC;;;;QAG9B,IAAZ,CAAA,YAAwB,GAAG,IAAI,OAAO,EAAoB,CAAC;;;;QAG/C,IAAZ,CAAA,gBAA4B,GAAG,YAAY,CAAC,KAAK,CAAC;QACtC,IAAZ,CAAA,gBAA4B,GAAY,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC;QACjE,IAAZ,CAAA,gBAA4B,GAAY,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC;QACjE,IAAZ,CAAA,YAAwB,GAAwB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC;KAKkB;;;;;IAhJ/F,IACI,SAAS,GADjB;QAEQ,OAAO,IAAI,CAAC,UAAU,CAAC;KAC1B;;;;;IAED,IAAI,SAAS,CAAC,KAAwB,EAA1C;QACQ,IAAI,KAAK,KAAK,QAAQ,IAAI,KAAK,KAAK,OAAO,EAAE;YACzC,+BAA+B,EAAE,CAAC;SACrC;QACD,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAC7B;;;;;IAGD,IACI,SAAS,GADjB;QAEQ,OAAO,IAAI,CAAC,UAAU,CAAC;KAC1B;;;;;IAED,IAAI,SAAS,CAAC,KAAwB,EAA1C;QACQ,IAAI,KAAK,KAAK,OAAO,IAAI,KAAK,KAAK,OAAO,EAAE;YACxC,+BAA+B,EAAE,CAAC;SACrC;QACD,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAC7B;;;;;IAGD,IACI,eAAe,GADvB;QAEQ,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAChC;;;;;IAED,IAAI,eAAe,CAAC,KAAc,EAAtC;QACQ,IAAI,CAAC,gBAAgB,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;KACxD;;;;;IAGD,IACI,eAAe,GADvB;QAEQ,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAChC;;;;;IAED,IAAI,eAAe,CAAC,KAAc,EAAtC;QACQ,IAAI,CAAC,gBAAgB,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;KACxD;;;;;IAGD,IACI,WAAW,GADnB;QAEQ,OAAO,IAAI,CAAC,YAAY,CAAC;KAC5B;;;;;IAED,IAAI,WAAW,CAAC,KAA0B,EAA9C;QACQ,IAAI,CAAC,YAAY,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;KACpD;;;;;;;;IAQD,IACI,UAAU,CAAC,OAAe,EADlC;;QAEA,MAAc,kBAAkB,GAAG,IAAI,CAAC,mBAAmB,CAA3D;QAEQ,IAAI,kBAAkB,IAAI,kBAAkB,CAAC,MAAM,EAAE;YACjD,kBAAkB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,SAAiB,KAApE;gBACgB,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC;aACtC,CAAC,CAAC;SACN;QAED,IAAI,CAAC,mBAAmB,GAAG,OAAO,CAAC;QAEnC,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,EAAE;YAC3B,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,SAAiB,KAAzD;gBACgB,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;aACrC,CAAC,CAAC;YAEH,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,SAAS,GAAG,EAAE,CAAC;SACjD;KACJ;;;;IAgED,QAAQ,GAAZ;QACQ,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAC7B;;;;IAED,kBAAkB,GAAtB;QACQ,IAAI,CAAC,WAAW,GAAG,IAAI,eAAe,CAAiB,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC,aAAa,EAAE,CAAC;QAC9F,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;KAC5F;;;;IAED,WAAW,GAAf;QACQ,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;QACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;KAC1B;;;;;IAGD,QAAQ,GAAZ;QACQ,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CACzB,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,EACtB,SAAS,CAAC,KAAK,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CACjE,CAAC;KACL;;;;;;IAGD,cAAc,CAAC,KAAoB,EAAvC;;QACA,MAAc,OAAO,GAAG,KAAK,CAAC,OAAO,CAArC;QAEQ,QAAQ,OAAO;YACX,KAAK,MAAM;gBACP,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAC5B,MAAM;YACV,KAAK,UAAU;gBACX,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,KAAK,KAAK,EAAE;oBACzC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;iBAC/B;gBACD,MAAM;YACV,KAAK,WAAW;gBACZ,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,KAAK,KAAK,EAAE;oBACzC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;iBAC/B;gBACD,MAAM;YACV;gBACI,IAAI,OAAO,KAAK,QAAQ,IAAI,OAAO,KAAK,UAAU,EAAE;oBAChD,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;iBAC/C;gBAED,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;SACzC;KACJ;;;;;;IAMD,cAAc,CAAC,MAAnB,GAAyC,SAAS,EAAlD;;QAEQ,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,YAAY,EAAE;iBAC/B,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBACb,SAAS,CAAC,MAAM,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,kBAAkB,EAAE,CAAC,CAAC;SACtF;aAAM;YACH,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,kBAAkB,EAAE,CAAC;SAChE;KACJ;;;;;;IAMD,eAAe,GAAnB;QACQ,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;KACtC;;;;;;;IAMD,OAAO,CAAC,IAAoB,EAAhC;;;;;;QAMQ,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;YAClC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACvC;KACJ;;;;;;;IAMD,UAAU,CAAC,IAAoB,EAAnC;;QACA,MAAc,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAA/C;QAEQ,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;YAChC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACvC;KACJ;;;;;;;;;IASD,kBAAkB,CAAC,IAAvB,GAAiD,IAAI,CAAC,SAAS,EAAE,IAAjE,GAA2F,IAAI,CAAC,SAAS,EAAzG;;QACA,MAAc,OAAO,GAAG,IAAI,CAAC,UAAU,CAAvC;QACQ,OAAO,CAAC,oBAAoB,CAAC,GAAG,IAAI,KAAK,QAAQ,CAAC;QAClD,OAAO,CAAC,mBAAmB,CAAC,GAAG,IAAI,KAAK,OAAO,CAAC;QAChD,OAAO,CAAC,mBAAmB,CAAC,GAAG,IAAI,KAAK,OAAO,CAAC;QAChD,OAAO,CAAC,mBAAmB,CAAC,GAAG,IAAI,KAAK,OAAO,CAAC;KACnD;;;;;IAGD,eAAe,GAAnB;QACQ,IAAI,CAAC,oBAAoB,GAAG,OAAO,CAAC;KACvC;;;;;IAGD,eAAe,GAAnB;QACQ,IAAI,CAAC,oBAAoB,GAAG,MAAM,CAAC;KACtC;;;;;;IAGD,gBAAgB,CAAC,KAAqB,EAA1C;QACQ,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAChC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;KAC7B;;;;;IAED,iBAAiB,CAAC,KAAqB,EAA3C;QACQ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;;;;;;;QAQzB,IAAI,KAAK,CAAC,OAAO,KAAK,OAAO,IAAI,IAAI,CAAC,WAAW,CAAC,eAAe,KAAK,CAAC,EAAE;YACrE,KAAK,CAAC,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC;SAC/B;KACJ;;;IApTL,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW;gBACP,QAAQ,EAAE,aAAa;gBACvB,QAAJ,EAAA,uaAAA;gBACI,MAAJ,EAAA,CAAa,0sBAAb,CAAA;gBACI,eAAe,EAAE,uBAAuB,CAAC,MAAM;gBAC/C,aAAa,EAAE,iBAAiB,CAAC,IAAI;gBACrC,QAAQ,EAAE,YAAY;gBACtB,UAAU,EAAE;oBACR,oBAAoB,CAAC,iBAAiB;oBACtC,oBAAoB,CAAC,WAAW;iBACnC;gBACD,SAAS,EAAE;oBACP,EAAE,OAAO,EAAE,iBAAiB,EAAE,WAAW,EAAE,UAAU,EAAE;iBAC1D;aACJ,EAAD,EAAA;;;;IAnFA,EAAA,IAAA,EAAI,UAAU,EAAd;IAKA,EAAA,IAAA,EAAI,MAAM,EAAV;IAkOA,EAAA,IAAA,EAAA,SAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAS,MAAM,EAAf,IAAA,EAAA,CAAgB,2BAA2B,EAA3C,EAAA,CAAA,EAAA;;;IAhJA,SAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,CAAA;IAcA,SAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,CAAA;IAcA,eAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,CAAA;IAUA,eAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,CAAA;IAUA,WAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,CAAA;IAeA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,IAAA,EAAA,CAAW,OAAO,EAAlB,EAAA,CAAA;IAwCA,aAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,CAAA;IAGA,WAAA,EAAA,CAAA,EAAA,IAAA,EAAK,SAAS,EAAd,IAAA,EAAA,CAAe,WAAW,EAA1B,EAAA,CAAA;IAKA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAK,eAAe,EAApB,IAAA,EAAA,CAAqB,cAAc,EAAnC,EAAA,CAAA;IAMA,WAAA,EAAA,CAAA,EAAA,IAAA,EAAK,YAAY,EAAjB,IAAA,EAAA,CAAkB,iBAAiB,EAAnC,EAAA,CAAA;IAKA,MAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,CAAA;;;;;;;ADxNA;;;;AAuCA,AAAA,MAAa,2BAA2B,GACpC,IAAI,cAAc,CAAwB,6BAA6B,CAAC,CAD5E;;;;;;AAIA,AAAA,SAAgB,mCAAmC,CAAC,OAAgB,EAApE;IACI,OAAO,MAAM,OAAO,CAAC,gBAAgB,CAAC,UAAU,EAAE,CAAC;CACtD;;;;;AAGD,AAAA,MAAa,4CAA4C,GAAG;IACxD,OAAO,EAAE,2BAA2B;IACpC,IAAI,EAAE,CAAC,OAAO,CAAC;IACf,UAAU,EAAE,mCAAmC;CAClD,CAAD;;;;;AAGA,AAAA,MAAa,wBAAwB,GAAG,CAAC,CAAzC;;;;;AAGA,MAAM,2BAA2B,GAAG,+BAA+B,CAAC,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAApF;;;;;AAiBA,AAAA,MAAa,iBAAiB,CAA9B;;;;;;;;;;;IA8DI,WAAJ,CAAwB,QAAiB,EACjB,QAAiC,EACjC,iBAAmC,EACE,eAAoB,EAC7C,OAAmB,EACX,qBAAqC,EAC7C,IAAoB,EAChC,aAA4B,EAPpD;QAAwB,IAAxB,CAAA,QAAgC,GAAR,QAAQ,CAAS;QACjB,IAAxB,CAAA,QAAgC,GAAR,QAAQ,CAAyB;QACjC,IAAxB,CAAA,iBAAyC,GAAjB,iBAAiB,CAAkB;QACE,IAA7D,CAAA,eAA4E,GAAf,eAAe,CAAK;QAC7C,IAApC,CAAA,OAA2C,GAAP,OAAO,CAAY;QACX,IAA5C,CAAA,qBAAiE,GAArB,qBAAqB,CAAgB;QAC7C,IAApC,CAAA,IAAwC,GAAJ,IAAI,CAAgB;QAChC,IAAxB,CAAA,aAAqC,GAAb,aAAa,CAAe;;;;;QA9DxC,IAAZ,CAAA,iBAA6B,GAAG,MAAM,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;;;QAS3D,IAAJ,CAAA,SAAa,GAA6B,IAAI,CAAC;;;;QAmCxB,IAAvB,CAAA,cAAqC,GAAuB,IAAI,YAAY,EAAQ,CAAC;;;;QAG9D,IAAvB,CAAA,cAAqC,GAAuB,IAAI,YAAY,EAAQ,CAAC;QAGzE,IAAZ,CAAA,WAAuB,GAAsB,IAAI,CAAC;QACtC,IAAZ,CAAA,OAAmB,GAAY,KAAK,CAAC;QACzB,IAAZ,CAAA,kBAA8B,GAAG,YAAY,CAAC,KAAK,CAAC;QACxC,IAAZ,CAAA,kBAA8B,GAAG,YAAY,CAAC,KAAK,CAAC;QAW5C,QAAQ,CAAC,aAAa,CAAC,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAAC,iBAAiB,EACxE,2BAA2B,CAAC,CAAC;QAEjC,IAAI,qBAAqB,EAAE;YACvB,qBAAqB,CAAC,uBAAuB,GAAG,IAAI,CAAC,sBAAsB,EAAE,CAAC;SACjF;KACJ;;;;;IAnED,IAAI,GAAG,GAAX;QACQ,OAAO,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC;KACjE;;;;;IAQD,IACI,QAAQ,GADhB;QAEQ,OAAO,IAAI,CAAC,SAAS,CAAC;KACzB;;;;;IAED,IAAI,QAAQ,CAAC,QAAyB,EAA1C;QACQ,IAAI,QAAQ,KAAK,IAAI,CAAC,SAAS,EAAE;YAC7B,OAAO;SACV;QAED,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;QAEtC,IAAI,QAAQ,EAAE;YACV,IAAI,CAAC,kBAAkB,GAAG,QAAQ,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,MAAM,IAArF;gBACgB,IAAI,CAAC,QAAQ,EAAE,CAAC;;gBAGhB,IAAI,CAAC,MAAM,KAAK,OAAO,IAAI,MAAM,KAAK,KAAK,KAAK,IAAI,CAAC,OAAO,EAAE;oBAC1D,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBACpC;aACJ,CAAC,CAAC;SACN;KACJ;;;;IAoCD,kBAAkB,GAAtB;QACQ,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,IAAI,CAAC,YAAY,EAAE,CAAC;KACvB;;;;IAED,WAAW,GAAf;QACQ,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;YAC3B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SAC3B;QAED,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,mBAAmB,CAAC,YAAY,EAAE,IAAI,CAAC,iBAAiB,EAChF,2BAA2B,CAAC,CAAC;QAEjC,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;KACzC;;;;;IAGD,IAAI,MAAM,GAAd;QACQ,OAAO,IAAI,CAAC,OAAO,CAAC;KACvB;;;;;IAGD,sBAAsB,GAA1B;QACQ,OAAO,CAAC,EAAE,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC;KACzD;;;;;IAGD,MAAM,GAAV;;QAEQ,OAAO,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;KACpD;;;;;IAGD,IAAI,GAAR;QACQ,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,OAAO;SACV;QAED,IAAI,CAAC,MAAM,EAAE,CAAC;;QAEtB,MAAc,UAAU,GAAG,IAAI,CAAC,cAAc,EAAE,CAAhD;;QACA,MAAc,aAAa,GAAG,UAAU,CAAC,SAAS,EAAE,CAApD;QAEQ,IAAI,CAAC,YAAY,oBAAC,aAAa,CAAC,gBAAgB,GAAsC,CAAC;QACvF,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,sBAAsB,EAAE;YAC1F,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;QAC9B,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;QAErC,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE;YAC3B,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC/C;QAED,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;QAC/E,IAAI,CAAC,KAAK,EAAE,CAAC;QAEb,IAAI,IAAI,CAAC,QAAQ,YAAY,UAAU,EAAE;YACrC,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC;SACnC;KACJ;;;;;IAGD,KAAK,GAAT;QACQ,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;KAC/B;;;;;;IAMD,KAAK,CAAC,MAAV,GAAgC,SAAS,EAAzC;QACQ,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;SACpE;aAAM;YACH,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SACvC;KACJ;;;;;;IAGO,QAAQ,GAApB;QACQ,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACnC,OAAO;SACV;;QAET,MAAc,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAtC;QAEQ,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;QACtC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAE1B,IAAI,QAAQ,YAAY,UAAU,EAAE;YAChC,QAAQ,CAAC,eAAe,EAAE,CAAC;YAE3B,IAAI,QAAQ,CAAC,WAAW,EAAE;;gBAEtB,QAAQ,CAAC,cAAc;qBAClB,IAAI,CACD,MAAM,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,OAAO,KAAK,MAAM,CAAC,EAC3C,IAAI,CAAC,CAAC,CAAC;;gBAEP,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,SAAS,CAAC,CAC5C;qBACA,SAAS,CAAC,MAAM,mBAAA,QAAQ,CAAC,WAAW,GAAE,MAAM,EAAE,EAAE,SAAS,EAAE,MAAhF;;oBAEwB,IAAI,CAAC,MAAM,EAAE,CAAC;iBACjB,CAAC,CAAC;aACV;iBAAM;gBACH,IAAI,CAAC,MAAM,EAAE,CAAC;aACjB;SACJ;aAAM;YACH,IAAI,CAAC,MAAM,EAAE,CAAC;YAEd,IAAI,QAAQ,CAAC,WAAW,EAAE;gBACtB,QAAQ,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;aACjC;SACJ;KACJ;;;;;;;IAMO,KAAK,GAAjB;QACQ,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,sBAAsB,EAAE,GAAG,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;QAChF,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC;QACnC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QACxB,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,IAAI,SAAS,CAAC,CAAC;KAC7D;;;;;;;IAMO,MAAM,GAAlB;QACQ,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;;;;QAKzB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;;;YAGjB,IAAI,CAAC,KAAK,EAAE,CAAC;SAChB;aAAM,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,EAAE;YACvC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAC9B;QAED,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;KACzB;;;;;;;IAGO,YAAY,CAAC,MAAe,EAAxC;QACQ,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;;QAEtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAEvE,IAAI,IAAI,CAAC,sBAAsB,EAAE,EAAE;YAC/B,IAAI,CAAC,qBAAqB,CAAC,YAAY,GAAG,MAAM,CAAC;SACpD;KACJ;;;;;;;IAMO,MAAM,GAAlB;QACQ,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAChB,2BAA2B,EAAE,CAAC;SACjC;KACJ;;;;;;;IAMO,cAAc,GAA1B;QACQ,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;;YAC/B,MAAkB,MAAM,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAnD;YACY,IAAI,CAAC,qBAAqB,oBAAC,MAAM,CAAC,gBAAgB,GAAsC,CAAC;YACzF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;;;;YAKhD,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,SAAS,EAAE,CAAC;SAChD;QAED,OAAO,IAAI,CAAC,WAAW,CAAC;KAC3B;;;;;;IAMO,iBAAiB,GAA7B;QACQ,OAAO,IAAI,aAAa,CAAC;YACrB,gBAAgB,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;iBACrC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC;iBAClC,kBAAkB,EAAE;iBACpB,qBAAqB,CAAC,qBAAqB,CAAC;YACjD,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,aAAa,IAAI,kCAAkC;YAChF,cAAc,EAAE,IAAI,CAAC,eAAe,EAAE;YACtC,SAAS,EAAE,IAAI,CAAC,IAAI;SACvB,CAAC,CAAC;KACN;;;;;;;;;IAOO,qBAAqB,CAAC,QAA2C,EAA7E;QACQ,IAAI,IAAI,CAAC,QAAQ,CAAC,kBAAkB,EAAE;YAClC,QAAQ,CAAC,eAAe,CAAC,SAAS,CAAC,MAAM,IAArD;;gBACA,MAAsB,IAAI,GAAsB,MAAM,CAAC,cAAc,CAAC,QAAQ,KAAK,OAAO,GAAG,OAAO,GAAG,QAAQ,CAA/G;;gBACA,MAAsB,IAAI,GAAsB,MAAM,CAAC,cAAc,CAAC,QAAQ,KAAK,KAAK,GAAG,OAAO,GAAG,OAAO,CAA5G;gBAEgB,mBAAA,IAAI,CAAC,QAAQ,CAAC,kBAAkB,GAAE,IAAI,EAAE,IAAI,CAAC,CAAC;aACjD,CAAC,CAAC;SACN;KACJ;;;;;;;;IAOO,YAAY,CAAC,gBAAmD,EAA5E;QAEA,IAAY,CAAC,OAAO,EAAE,eAAe,EAAE,QAAQ,EAAE,gBAAgB,CAAC,GACtD,IAAI,CAAC,QAAQ,CAAC,SAAS,KAAK,QAAQ;YAChC,CAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,CAAC;YAChC,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,CAAC,CAAhD;QAEA,IAAY,CAAC,QAAQ,EAAE,gBAAgB,EAAE,OAAO,EAAE,eAAe,CAAC,GACtD,IAAI,CAAC,QAAQ,CAAC,SAAS,KAAK,OAAO;YAC/B,CAAC,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC;YAClC,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAlD;;QAEA,IAAY,OAAO,GAAG,CAAC,CAAvB;QAEQ,IAAI,IAAI,CAAC,sBAAsB,EAAE,EAAE;;;YAG/B,gBAAgB,GAAG,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,KAAK,QAAQ,GAAG,OAAO,GAAG,KAAK,CAAC;YACpF,eAAe,GAAG,QAAQ,GAAG,OAAO,KAAK,KAAK,GAAG,OAAO,GAAG,KAAK,CAAC;YACjE,OAAO,GAAG,QAAQ,KAAK,QAAQ,GAAG,wBAAwB,GAAG,CAAC,wBAAwB,CAAC;SAC1F;aAAM;YACH,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE;gBAChC,OAAO,GAAG,QAAQ,KAAK,KAAK,GAAG,QAAQ,GAAG,KAAK,CAAC;gBAChD,eAAe,GAAG,gBAAgB,KAAK,KAAK,GAAG,QAAQ,GAAG,KAAK,CAAC;aACnE;YAED,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE;gBAChC,gBAAgB,GAAG,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,KAAK,QAAQ,GAAG,OAAO,GAAG,KAAK,CAAC;gBACpF,eAAe,GAAG,QAAQ,GAAG,OAAO,KAAK,KAAK,GAAG,OAAO,GAAG,KAAK,CAAC;aACpE;SACJ;QAED,gBAAgB,CAAC,aAAa,CAAC;YAC3B,EAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAC;YAC/C,EAAC,OAAO,EAAE,eAAe,EAAE,OAAO,EAAE,QAAQ,EAAE,gBAAgB,EAAE,QAAQ,EAAE,OAAO,EAAC;YAClF;gBACI,OAAO;gBACP,OAAO,EAAE,eAAe;gBACxB,QAAQ;gBACR,QAAQ,EAAE,gBAAgB;gBAC1B,OAAO,EAAE,CAAC,OAAO;aACpB;YACD;gBACI,OAAO,EAAE,eAAe;gBACxB,OAAO,EAAE,eAAe;gBACxB,QAAQ,EAAE,gBAAgB;gBAC1B,QAAQ,EAAE,gBAAgB;gBAC1B,OAAO,EAAE,CAAC,OAAO;aACpB;SACJ,CAAC,CAAC;KACN;;;;;;IAGO,qBAAqB,GAAjC;QACQ,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;QACtC,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;KACzC;;;;;;IAGO,eAAe,GAA3B;;QACA,MAAc,QAAQ,GAAG,mBAAA,IAAI,CAAC,WAAW,GAAE,aAAa,EAAE,CAA1D;;QACA,MAAc,WAAW,GAAG,mBAAA,IAAI,CAAC,WAAW,GAAE,WAAW,EAAE,CAA3D;;QACA,MAAc,WAAW,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,GAAGA,EAAY,EAAE,CAA/E;;QACA,MAAc,KAAK,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,IAAI,CACrD,MAAM,CAAC,CAAC,MAAM,KAAK,MAAM,KAAK,IAAI,CAAC,qBAAqB,CAAC,EACzD,MAAM,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,CAC7B,GAAGA,EAAY,EAAE,CAH1B;QAKQ,OAAO,KAAK,CAAC,QAAQ,EAAE,WAAW,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC;KAC3D;;;;;;;IAGO,gBAAgB,CAAC,KAAiB,EAA9C;;;QAGQ,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,MAAM,KAAK,CAAC,GAAG,OAAO,GAAG,IAAI,CAAC;;;;QAKrD,IAAI,IAAI,CAAC,sBAAsB,EAAE,EAAE;YAC/B,KAAK,CAAC,cAAc,EAAE,CAAC;SAC1B;KACJ;;;;;;;IAGO,cAAc,CAAC,KAAoB,EAA/C;;QACA,MAAc,OAAO,GAAG,KAAK,CAAC,OAAO,CAArC;QAEQ,IAAI,OAAO,KAAK,KAAK,IAAI,OAAO,KAAK,KAAK,EAAE;YACxC,IAAI,CAAC,IAAI,EAAE,CAAC;SACf;QAED,IAAI,IAAI,CAAC,sBAAsB,EAAE,KAC7B,CAAC,OAAO,KAAK,WAAW,IAAI,IAAI,CAAC,GAAG,KAAK,KAAK;aAC7C,OAAO,KAAK,UAAU,IAAI,IAAI,CAAC,GAAG,KAAK,KAAK,CAAC,CAAC,EAAE;YACjD,IAAI,CAAC,IAAI,EAAE,CAAC;SACf;KACJ;;;;;;;IAGO,YAAY,CAAC,KAAiB,EAA1C;QACQ,IAAI,IAAI,CAAC,sBAAsB,EAAE,EAAE;;YAE/B,KAAK,CAAC,eAAe,EAAE,CAAC;YACxB,IAAI,CAAC,IAAI,EAAE,CAAC;SACf;aAAM;YACH,IAAI,CAAC,MAAM,EAAE,CAAC;SACjB;KACJ;;;;;;IAGO,YAAY,GAAxB;;QAEQ,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,EAAE;YAChC,OAAO;SACV;QAED,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;;;;aAI5C,IAAI,CACD,MAAM,CAAC,CAAC,MAAM,KAAK,MAAM,KAAK,IAAI,CAAC,qBAAqB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAC7E,KAAK,CAAC,CAAC,EAAE,aAAa,CAAC,CAC1B;aACA,SAAS,CAAC,MAAvB;YACgB,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;;;;YAKzB,IAAI,IAAI,CAAC,QAAQ,YAAY,UAAU,IAAI,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE;;;gBAGnE,IAAI,CAAC,QAAQ,CAAC,cAAc;qBACvB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,aAAa,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;qBAC1E,SAAS,CAAC,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;aACrC;iBAAM;gBACH,IAAI,CAAC,IAAI,EAAE,CAAC;aACf;SACJ,CAAC,CAAC;KACV;;;;;;IAGO,UAAU,GAAtB;;;;QAIQ,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,KAAK,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE;YACzE,IAAI,CAAC,OAAO,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;SACxF;QAED,OAAO,IAAI,CAAC,OAAO,CAAC;KACvB;;;IAvdL,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW;gBACP,QAAQ,EAAE,CAAd,sBAAA,CAAsC;gBAClC,IAAI,EAAE;oBACF,eAAe,EAAE,MAAM;oBACvB,sBAAsB,EAAE,gBAAgB;oBACxC,aAAa,EAAE,0BAA0B;oBACzC,WAAW,EAAE,wBAAwB;oBACrC,SAAS,EAAE,sBAAsB;iBACpC;gBACD,QAAQ,EAAE,mBAAmB;aAChC,EAAD,EAAA;;;;IAtDA,EAAA,IAAA,EAAI,OAAO,EAAX;IAjBA,EAAA,IAAA,EAAI,UAAU,EAAd;IASA,EAAA,IAAA,EAAI,gBAAgB,EAApB;IAgIA,EAAA,IAAA,EAAA,SAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAiB,MAAM,EAAvB,IAAA,EAAA,CAAwB,2BAA2B,EAAnD,EAAA,CAAA,EAAA;IAzGA,EAAA,IAAA,EAAS,UAAU,EAAnB,UAAA,EAAA,CAAA,EAAA,IAAA,EA0GiB,QAAQ,EA1GzB,CAAA,EAAA;IAHA,EAAA,IAAA,EAAS,cAAc,EAAvB,UAAA,EAAA,CAAA,EAAA,IAAA,EA8GiB,QAAQ,EA9GzB,EAAA,EAAA,IAAA,EA8G6B,IAAI,EA9GjC,CAAA,EAAA;IAjBA,EAAA,IAAA,EAAoB,cAAc,EAAlC,UAAA,EAAA,CAAA,EAAA,IAAA,EAgIiB,QAAQ,EAhIzB,CAAA,EAAA;IADA,EAAA,IAAA,EAAS,YAAY,EAArB;;;IAiFA,QAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,IAAA,EAAA,CAAW,sBAAsB,EAAjC,EAAA,CAAA;IA4BA,IAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,IAAA,EAAA,CAAW,uBAAuB,EAAlC,EAAA,CAAA;IAGA,cAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,CAAA;IAGA,cAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,CAAA;;;;;;;ADjIA,AAqBA,MAAa,gBAAgB,CAA7B;;;IAVA,EAAA,IAAA,EAAC,QAAQ,EAAT,IAAA,EAAA,CAAU;gBACN,OAAO,EAAE;oBACL,YAAY;oBACZ,aAAa;oBACb,YAAY;iBACf;gBACD,OAAO,EAAE,CAAC,UAAU,EAAE,cAAc,EAAE,iBAAiB,EAAE,iBAAiB,CAAC;gBAC3E,YAAY,EAAE,CAAC,UAAU,EAAE,cAAc,EAAE,iBAAiB,EAAE,iBAAiB,CAAC;gBAChF,SAAS,EAAE,CAAC,4CAA4C,CAAC;aAC5D,EAAD,EAAA;;;;;;;;;;;;;;;;;;;;"}