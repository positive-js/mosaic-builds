{"version":3,"file":"tree.js","sources":["../../../packages/mosaic/tree/data-source/nested-data-source.ts","../../../packages/mosaic/tree/data-source/flat-data-source.ts","../../../packages/mosaic/tree/tree.module.ts","../../../packages/mosaic/tree/tree-selection.component.ts","../../../packages/mosaic/tree/tree-option.component.ts","../../../packages/mosaic/tree/toggle.ts","../../../packages/mosaic/tree/padding.directive.ts","../../../packages/mosaic/tree/node.directive.ts"],"sourcesContent":["import { CollectionViewer, DataSource } from '@angular/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by TreeControl and each non-leaf node.\n */\nexport class McTreeNestedDataSource<T> extends DataSource<T> {\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n    }\n\n    /* tslint:disable-next-line:naming-convention */\n    private _data = new BehaviorSubject<T[]>([]);\n\n    connect(collectionViewer: CollectionViewer): Observable<T[]> {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map(() => this.data));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { CollectionViewer, DataSource } from '@angular/cdk/collections';\nimport { FlatTreeControl, TreeControl } from '@ptsecurity/cdk/tree';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nexport class McTreeFlattener<T, F> {\n    constructor(\n        public transformFunction: (node: T, level: number, parent: F | null) => F,\n        public getLevel: (node: F) => number,\n        public isExpandable: (node: F) => boolean,\n        public getChildren: (node: T) => Observable<T[]> | T[] | undefined | null\n    ) {}\n\n    flattenNode(node: T, level: number, resultNodes: F[], parent: F | null): F[] {\n        const flatNode = this.transformFunction(node, level, parent);\n        resultNodes.push(flatNode);\n\n        if (this.isExpandable(flatNode)) {\n            const childrenNodes = this.getChildren(node);\n\n            if (childrenNodes) {\n                if (Array.isArray(childrenNodes)) {\n                    this.flattenChildren(childrenNodes, level, resultNodes, flatNode);\n                } else {\n                    childrenNodes\n                        .pipe(take(1))\n                        .subscribe((children) => {\n                            this.flattenChildren(children, level, resultNodes, flatNode);\n                        });\n                }\n            }\n        }\n\n        return resultNodes;\n    }\n\n    flattenChildren(children: T[], level: number, resultNodes: F[], parent: F | null): void {\n        children.forEach((child) => {\n            this.flattenNode(child, level + 1, resultNodes, parent);\n        });\n    }\n\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData: T[]): F[] {\n        const resultNodes: F[] = [];\n        structuredData.forEach((node) => this.flattenNode(node, 0, resultNodes, null));\n\n        return resultNodes;\n    }\n\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes: F[], treeControl: TreeControl<F>): F[] {\n        const results: F[] = [];\n        const currentExpand: boolean[] = [];\n        currentExpand[0] = true;\n\n        nodes.forEach((node) => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n\n            if (expand) { results.push(node); }\n\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n\n        return results;\n    }\n}\n\nenum McTreeDataSourceChangeTypes {\n    Expansion = 'expansion',\n    Filter = 'filter'\n}\n\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `McTree`.\n * The nested tree nodes of type `T` are flattened through `MсTreeFlattener`, and converted\n * to type `F` for `McTree` to consume.\n */\nexport class McTreeFlatDataSource<T, F> extends DataSource<F> {\n    flattenedData = new BehaviorSubject<F[]>([]);\n\n    expandedData = new BehaviorSubject<F[]>([]);\n\n    filteredData = new BehaviorSubject<F[]>([]);\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n\n        this.flattenedData.next(this.treeFlattener.flattenNodes(this.data));\n        this.treeControl.dataNodes = this.flattenedData.value;\n    }\n\n    private _data: BehaviorSubject<T[]>;\n\n    constructor(\n        private treeControl: FlatTreeControl<F>,\n        private treeFlattener: McTreeFlattener<T, F>,\n        initialData: T[] = []\n    ) {\n        super();\n\n        this._data = new BehaviorSubject<T[]>(initialData);\n    }\n\n    connect(collectionViewer: CollectionViewer): Observable<F[]> {\n        return merge(\n            collectionViewer.viewChange,\n            this.treeControl.expansionModel.changed\n                .pipe(map((value) => ({ type: McTreeDataSourceChangeTypes.Expansion, value }))),\n            this.treeControl.filterValue\n                .pipe(map((value) => ({ type: McTreeDataSourceChangeTypes.Filter, value }))),\n            this.flattenedData\n        )\n        .pipe(map((changeObj: any): any => {\n            if (changeObj.type === McTreeDataSourceChangeTypes.Filter) {\n                if (changeObj.value && changeObj.value.length > 0) {\n                    return this.filterHandler();\n                } else {\n                    return this.expansionHandler();\n                }\n            }\n\n            return this.expansionHandler();\n        }));\n    }\n\n    filterHandler(): F[] {\n        this.filteredData.next(this.treeControl.filterModel.selected);\n\n        return this.filteredData.value;\n    }\n\n    expansionHandler(): F[] {\n        const expandedNodes = this.treeFlattener.expandFlattenedNodes(this.flattenedData.value, this.treeControl);\n        this.expandedData.next(expandedNodes);\n\n        return this.expandedData.value;\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\nimport { McPseudoCheckboxModule } from '@ptsecurity/mosaic/core';\n\nimport { McTreeNodeDef } from './node.directive';\nimport { McTreeNodePadding } from './padding.directive';\nimport { McTreeNodeToggleDirective, McTreeNodeToggleComponent } from './toggle';\nimport { McTreeOption } from './tree-option.component';\nimport { McTreeSelection } from './tree-selection.component';\n\n\nconst MC_TREE_DIRECTIVES = [\n    McTreeSelection,\n    McTreeOption,\n    McTreeNodeDef,\n    McTreeNodePadding,\n    McTreeNodeToggleComponent,\n    McTreeNodeToggleDirective\n];\n\n@NgModule({\n    imports: [CommonModule, CdkTreeModule, McPseudoCheckboxModule],\n    exports: MC_TREE_DIRECTIVES,\n    declarations: MC_TREE_DIRECTIVES\n})\nexport class McTreeModule {}\n","/* tslint:disable:no-empty */\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    EventEmitter,\n    Input,\n    IterableDiffer,\n    IterableDiffers,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    ElementRef,\n    forwardRef\n} from '@angular/core';\nimport { NodeDef, ViewData } from '@angular/core/esm2015/src/view';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\nimport {\n    END,\n    ENTER,\n    hasModifierKey,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    SPACE\n} from '@ptsecurity/cdk/keycodes';\nimport { CdkTree, CdkTreeNodeOutlet, FlatTreeControl } from '@ptsecurity/cdk/tree';\nimport {\n    CanDisable,\n    getMcSelectNonArrayValueError,\n    HasTabIndex\n} from '@ptsecurity/mosaic/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { MC_TREE_OPTION_PARENT_COMPONENT, McTreeOption } from './tree-option.component';\n\n\nexport const MC_SELECTION_TREE_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McTreeSelection),\n    multi: true\n};\n\nexport class McTreeNavigationChange {\n    constructor(\n        public source: McTreeSelection,\n        public option: McTreeOption\n    ) {}\n}\n\nexport class McTreeSelectionChange {\n    constructor(public source: McTreeSelection, public option: McTreeOption) {}\n}\n\n// tslint:disable-next-line:naming-convention\ninterface SelectionModelOption {\n    id: number | string;\n    value: string;\n}\n\n\n@Component({\n    selector: 'mc-tree-selection',\n    exportAs: 'mcTreeSelection',\n    template: '<ng-container cdkTreeNodeOutlet></ng-container>',\n    host: {\n        class: 'mc-tree-selection',\n\n        '[tabindex]': 'tabIndex',\n\n        '(keydown)': 'onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    styleUrls: ['./tree.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        MC_SELECTION_TREE_VALUE_ACCESSOR,\n        { provide: MC_TREE_OPTION_PARENT_COMPONENT, useExisting: McTreeSelection },\n        { provide: CdkTree, useExisting: McTreeSelection }\n    ]\n})\nexport class McTreeSelection extends CdkTree<McTreeOption>\n    implements ControlValueAccessor, AfterContentInit, CanDisable, HasTabIndex {\n\n    @ViewChild(CdkTreeNodeOutlet, { static: true }) nodeOutlet: CdkTreeNodeOutlet;\n\n    @ContentChildren(McTreeOption) renderedOptions: QueryList<McTreeOption>;\n\n    keyManager: FocusKeyManager<McTreeOption>;\n\n    selectionModel: SelectionModel<SelectionModelOption>;\n\n    @Input() treeControl: FlatTreeControl<McTreeOption>;\n\n    @Output() readonly navigationChange = new EventEmitter<McTreeNavigationChange>();\n\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectionChange>();\n\n    @Input()\n    get multiple(): boolean {\n        return this._multiple;\n    }\n\n    set multiple(value: boolean) {\n        this._multiple = coerceBooleanProperty(value);\n    }\n\n    private _multiple: boolean = false;\n\n    @Input()\n    get autoSelect(): boolean {\n        return this._autoSelect;\n    }\n\n    set autoSelect(value: boolean) {\n        this._autoSelect = coerceBooleanProperty(value);\n    }\n\n    private _autoSelect: boolean = true;\n\n    @Input()\n    get noUnselectLast(): boolean {\n        return this._noUnselectLast;\n    }\n\n    set noUnselectLast(value: boolean) {\n        this._noUnselectLast = coerceBooleanProperty(value);\n    }\n\n    private _noUnselectLast: boolean = true;\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(rawValue: boolean) {\n        const value = coerceBooleanProperty(rawValue);\n\n        if (this._disabled !== value) {\n            this._disabled = value;\n\n            this.markOptionsForCheck();\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    get tabIndex(): number {\n        return this.disabled ? -1 : this._tabIndex;\n    }\n\n    set tabIndex(value: number) {\n        this._tabIndex = value != null ? value : 0;\n    }\n\n    private _tabIndex: number;\n\n    private readonly destroy = new Subject<void>();\n\n    constructor(\n        private elementRef: ElementRef,\n        differs: IterableDiffers,\n        changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('multiple') multiple: string\n    ) {\n        super(differs, changeDetectorRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this.multiple = multiple === null ? false : coerceBooleanProperty(multiple);\n\n        if (this.multiple) {\n            this.autoSelect = false;\n            this.noUnselectLast = false;\n        }\n\n        this.selectionModel = new SelectionModel<SelectionModelOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.keyManager = new FocusKeyManager<McTreeOption>(this.renderedOptions)\n            .withVerticalOrientation(true)\n            .withHorizontalOrientation(null);\n\n        this.keyManager.change\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => {\n                if (this.keyManager.activeItem) {\n                    this.emitNavigationEvent(this.keyManager.activeItem);\n                }\n            });\n\n        this.selectionModel.changed\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => {\n                this.onChange(this.getSelectedValues());\n\n                this.renderedOptions.notifyOnChanges();\n            });\n\n        this.renderedOptions.changes\n            .pipe(takeUntil(this.destroy))\n            .subscribe((options) => {\n                // todo need to do optimisation\n                options.forEach((option) => {\n                    option.deselect();\n\n                    this.getSelectedValues().forEach((selectedValue) => {\n                        if (option.value === selectedValue) {\n                            option.select();\n                        }\n                    });\n                });\n            });\n    }\n\n    ngOnDestroy(): void {\n        this.destroy.next();\n        this.destroy.complete();\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n        // tslint:disable-next-line: deprecation\n        const keyCode = event.keyCode;\n\n        switch (keyCode) {\n            case LEFT_ARROW:\n                if (this.keyManager.activeItem) {\n                    this.treeControl.collapse(this.keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                return;\n            case RIGHT_ARROW:\n                if (this.keyManager.activeItem) {\n                    this.treeControl.expand(this.keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                return;\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this.keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this.keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                this.keyManager.setPreviousPageItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                this.keyManager.setNextPageItemActive();\n                event.preventDefault();\n\n                break;\n            default:\n                this.keyManager.onKeydown(event);\n        }\n\n        if (this.autoSelect && this.keyManager.activeItem) {\n            this.setSelectedOption(this.keyManager.activeItem);\n        }\n    }\n\n    updateScrollSize(): void {\n        if (!this.renderedOptions.first) { return; }\n\n        this.keyManager.withScrollSize(Math.floor(this.getHeight() / this.renderedOptions.first.getHeight()));\n    }\n\n    setSelectedOption(option: McTreeOption, $event?: KeyboardEvent): void {\n        const withShift = $event ? hasModifierKey($event, 'shiftKey') : false;\n        const withCtrl = $event ? hasModifierKey($event, 'ctrlKey') : false;\n\n        if (this.multiple) {\n            if (withShift) {\n                const previousIndex = this.keyManager.previousActiveItemIndex;\n                const activeIndex = this.keyManager.activeItemIndex;\n\n                if (previousIndex < activeIndex) {\n                    this.renderedOptions.forEach((item, index) => {\n                        if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                    });\n                } else {\n                    this.renderedOptions.forEach((item, index) => {\n                        if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                    });\n                }\n            } else if (withCtrl) {\n                if (!this.canDeselectLast(option)) { return; }\n\n                this.selectionModel.toggle(option.data);\n            } else {\n                this.selectionModel.toggle(option.data);\n            }\n        } else {\n            if (!this.canDeselectLast(option)) { return; }\n\n            if (this.autoSelect) {\n                this.selectionModel.deselect(...this.selectionModel.selected);\n                this.selectionModel.select(option.data);\n            }\n        }\n\n        this.emitChangeEvent(option);\n    }\n\n    setFocusedOption(option: McTreeOption): void {\n        this.keyManager.setActiveItem(option);\n    }\n\n    toggleFocusedOption(): void {\n        const focusedOption = this.keyManager.activeItem;\n\n        if (focusedOption) {\n            this.setSelectedOption(focusedOption);\n        }\n    }\n\n    renderNodeChanges(\n        data: McTreeOption[],\n        dataDiffer: IterableDiffer<McTreeOption> = this.dataDiffer,\n        viewContainer: any = this.nodeOutlet.viewContainer,\n        parentData?: McTreeOption\n    ): void {\n        super.renderNodeChanges(data, dataDiffer, viewContainer, parentData);\n\n        const arrayOfInstances = [];\n        const changeDetectorRefs: any[] = [];\n\n        viewContainer._embeddedViews.forEach((view: ViewData) => {\n            const viewDef = view.def;\n\n            viewDef.nodes.forEach((node: NodeDef) => {\n                if (viewDef.nodeMatchedQueries === node.matchedQueryIds) {\n                    const nodeData: any = view.nodes[node.nodeIndex];\n\n                    arrayOfInstances.push(nodeData.instance as never);\n                    changeDetectorRefs.push(nodeData.instance.changeDetectorRef);\n                }\n            });\n        });\n\n        setTimeout(() => {\n            changeDetectorRefs.forEach((changeDetectorRef) => {\n                if (!changeDetectorRef.destroyed) {\n                    changeDetectorRef.detectChanges();\n                }\n            });\n        });\n\n        if (this.renderedOptions) {\n            this.renderedOptions.reset(arrayOfInstances);\n            this.renderedOptions.notifyOnChanges();\n        }\n\n        this.updateScrollSize();\n\n        this.nodeOutlet.changeDetectorRef.detectChanges();\n    }\n\n    getHeight(): number {\n        const clientRects = this.elementRef.nativeElement.getClientRects();\n\n        if (clientRects.length) {\n            return clientRects[0].height;\n        }\n\n        return 0;\n    }\n\n    getItemHeight(): number {\n        return this.renderedOptions.first ? this.renderedOptions.first.getHeight() : 0;\n    }\n\n    emitNavigationEvent(option: McTreeOption): void {\n        this.navigationChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    emitChangeEvent(option: McTreeOption): void {\n        this.selectionChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    writeValue(value: any): void {\n        if (this.multiple && value && !Array.isArray(value)) {\n            throw getMcSelectNonArrayValueError();\n        }\n\n        if (this.renderedOptions) {\n            this.setOptionsFromValues(this.multiple ? value : [value]);\n        }\n    }\n\n    /** `View -> model callback called when value changes` */\n    onChange: (value: any) => void = () => {};\n\n    registerOnChange(fn: (value: any) => void): void {\n        this.onChange = fn;\n    }\n\n    /** `View -> model callback called when select has been touched` */\n    onTouched = () => {};\n\n    registerOnTouched(fn: () => {}): void {\n        this.onTouched = fn;\n    }\n\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     */\n    setDisabledState(isDisabled: boolean): void {\n        this._disabled = isDisabled;\n        this.changeDetectorRef.markForCheck();\n    }\n\n    setOptionsFromValues(values: any[]): void {\n        this.selectionModel.clear();\n\n        const valuesToSelect = values.reduce((result, value) => {\n            return this.treeControl.hasValue(value) ? [...result, this.treeControl.hasValue(value)] : [...result];\n        }, []);\n\n        this.selectionModel.select(...valuesToSelect);\n    }\n\n    getSelectedValues(): any[] {\n        return this.selectionModel.selected.map((selected) => this.treeControl.getValue(selected));\n    }\n\n    private markOptionsForCheck() {\n        if (this.renderedOptions) {\n            this.renderedOptions.forEach((option) => option.markForCheck());\n        }\n    }\n\n    private canDeselectLast(option: McTreeOption): boolean {\n        return !(this.noUnselectLast && this.selectionModel.selected.length === 1 && option.selected);\n    }\n}\n\n","import {\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ElementRef,\n    Inject,\n    InjectionToken,\n    ChangeDetectionStrategy,\n    ViewEncapsulation,\n    OnInit,\n    OnDestroy,\n    AfterContentInit\n} from '@angular/core';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport { CdkTreeNode } from '@ptsecurity/cdk/tree';\nimport { CanDisable, toBoolean } from '@ptsecurity/mosaic/core';\n\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_TREE_OPTION_PARENT_COMPONENT = new InjectionToken<any>('MC_TREE_OPTION_PARENT_COMPONENT');\n\nexport class McTreeOptionChange {\n    constructor(public source: McTreeOption, public isUserInput = false) {}\n}\n\nlet uniqueIdCounter: number = 0;\n\n@Component({\n    selector: 'mc-tree-option',\n    exportAs: 'mcTreeOption',\n    templateUrl: './tree-option.html',\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'getTabIndex()',\n\n        '[attr.disabled]': 'disabled || null',\n\n        class: 'mc-tree-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': 'hasFocus',\n\n        '(focus)': 'handleFocus()',\n        '(blur)': 'handleBlur()',\n        '(click)': 'selectViaInteraction($event)'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    providers: [{ provide: CdkTreeNode, useExisting: McTreeOption }]\n})\nexport class McTreeOption extends CdkTreeNode<McTreeOption> implements OnInit, OnDestroy, CanDisable, AfterContentInit {\n    get value(): any {\n        return this._value;\n    }\n\n    set value(value: any) {\n        this._value = value;\n    }\n\n    private _value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled || (this.tree && this.tree.disabled);\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    @Output() readonly onSelectionChange = new EventEmitter<McTreeOptionChange>();\n\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n        }\n    }\n\n    private _selected: boolean = false;\n\n    get id(): string {\n        return this._id;\n    }\n\n    private _id = `mc-tree-option-${uniqueIdCounter++}`;\n\n    get multiple(): boolean {\n        return this.tree.multiple;\n    }\n\n    get viewValue(): string {\n        // TODO: Add input property alternative for node envs.\n        return (this.getHostElement().textContent || '').trim();\n    }\n\n    hasFocus: boolean = false;\n\n    constructor(\n        elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        private focusMonitor: FocusMonitor,\n        @Inject(MC_TREE_OPTION_PARENT_COMPONENT) public tree: any\n    ) {\n        super(elementRef, tree);\n    }\n\n    ngOnInit(): void {\n        this.focusMonitor.monitor(this.elementRef.nativeElement, false);\n    }\n\n    ngAfterContentInit(): void {\n        this.value = this.tree.treeControl.getValue(this.data);\n    }\n\n    ngOnDestroy(): void {\n        this.focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    setSelected(selected: boolean): void {\n        if (this._selected === selected || !this.tree.selectionModel) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.tree.selectionModel.select(this.value);\n        } else {\n            this.tree.selectionModel.deselect(this.value);\n        }\n\n        this.changeDetectorRef.markForCheck();\n    }\n\n    handleFocus(): void {\n        if (this.disabled || this.hasFocus) { return; }\n\n        this.hasFocus = true;\n\n        if (this.tree.setFocusedOption) {\n            this.tree.setFocusedOption(this);\n        }\n    }\n\n    handleBlur(): void {\n        this.hasFocus = false;\n    }\n\n    focus(): void {\n        this.focusMonitor.focusVia(this.getHostElement(), 'keyboard');\n    }\n\n    getHeight(): number {\n        const clientRects = this.elementRef.nativeElement.getClientRects();\n\n        if (clientRects.length) {\n            return clientRects[0].height;\n        }\n\n        return 0;\n    }\n\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent();\n        }\n    }\n\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    selectViaInteraction($event?: KeyboardEvent): void {\n        if (!this.disabled) {\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent(true);\n\n            if (this.tree.setSelectedOption) {\n                this.tree.setSelectedOption(this, $event);\n            }\n        }\n    }\n\n    emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McTreeOptionChange(this, isUserInput));\n    }\n\n    getHostElement(): HTMLElement {\n        return this.elementRef.nativeElement;\n    }\n\n    getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    markForCheck() {\n        this.changeDetectorRef.markForCheck();\n    }\n}\n","import { Component, Directive, Input, ViewEncapsulation } from '@angular/core';\nimport { CdkTree, CdkTreeNode, CdkTreeNodeToggle } from '@ptsecurity/cdk/tree';\nimport { map } from 'rxjs/operators';\n\n\n@Component({\n    selector: 'mc-tree-node-toggle',\n    template: `\n        <i class=\"mc mc-icon mc-angle-down-S_16\"></i>\n    `,\n    host: {\n        class: 'mc-tree-node-toggle',\n        '(click)': 'toggle($event)',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-opened]': 'iconState'\n    },\n    encapsulation: ViewEncapsulation.None,\n    providers: [{ provide: CdkTreeNodeToggle, useExisting: McTreeNodeToggleComponent }]\n})\nexport class McTreeNodeToggleComponent<T> extends CdkTreeNodeToggle<T> {\n    disabled: boolean = false;\n\n    @Input() node: T;\n\n    get iconState(): any {\n        return this.disabled || this.tree.treeControl.isExpanded(this.node);\n    }\n\n    constructor(tree: CdkTree<T>, treeNode: CdkTreeNode<T>) {\n        super(tree, treeNode);\n\n        this.tree.treeControl.filterValue\n            .pipe(map((value) => value.length > 0))\n            .subscribe((state: boolean) => this.disabled = state);\n    }\n}\n\n@Directive({\n    selector: '[mcTreeNodeToggle]',\n    host: {\n        '(click)': 'toggle($event)',\n        '[class.mc-disabled]': 'disabled'\n    },\n    providers: [{ provide: CdkTreeNodeToggle, useExisting: McTreeNodeToggleDirective }]\n})\nexport class McTreeNodeToggleDirective<T> extends CdkTreeNodeToggle<T> {\n    disabled: boolean = false;\n\n    constructor(tree: CdkTree<T>, treeNode: CdkTreeNode<T>) {\n        super(tree, treeNode);\n\n        this.tree.treeControl.filterValue\n            .pipe(map((value) => value.length > 0))\n            .subscribe((state: boolean) => this.disabled = state);\n    }\n}\n","import { Directive, Input, OnInit } from '@angular/core';\nimport { CdkTreeNodePadding } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodePadding]',\n    providers: [{ provide: CdkTreeNodePadding, useExisting: McTreeNodePadding }]\n})\nexport class McTreeNodePadding<T> extends CdkTreeNodePadding<T> implements OnInit {\n    @Input('mcTreeNodePadding') level: number;\n\n    @Input('mcTreeNodePaddingIndent') indent: number;\n\n    baseLeftPadding: number = 12;\n    /* tslint:disable-next-line:naming-convention */\n    _indent: number = 20;\n\n    withIcon: boolean;\n    iconWidth: number = 20;\n\n    get leftPadding(): number {\n        return (this.withIcon ? 0 : this.iconWidth) + this.baseLeftPadding;\n    }\n\n    paddingIndent(): string | null {\n        const nodeLevel = (this.treeNode.data && this.tree.treeControl.getLevel)\n            ? this.tree.treeControl.getLevel(this.treeNode.data)\n            : null;\n\n        const level = this.level || nodeLevel;\n\n        return level ? `${(level * this._indent) + this.leftPadding}px` : `${this.baseLeftPadding}px`;\n    }\n\n    ngOnInit(): void {\n        this.withIcon = this.tree.treeControl.isExpandable(this.treeNode.data);\n\n        this.setPadding();\n    }\n}\n","import { Directive, Input } from '@angular/core';\n\nimport { CdkTreeNodeDef } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeDef]',\n    inputs: ['when: mcTreeNodeDefWhen'],\n    providers: [{ provide: CdkTreeNodeDef, useExisting: McTreeNodeDef }]\n})\nexport class McTreeNodeDef<T> extends CdkTreeNodeDef<T> {\n    @Input('mcTreeNode') data: T;\n}\n"],"names":[],"mappings":"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"}