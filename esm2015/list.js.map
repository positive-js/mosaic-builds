{"version":3,"file":"list.js","sources":["../../../src/lib/list/index.ts","../../../src/lib/list/list.module.ts","../../../src/lib/list/list.component.ts","../../../src/lib/list/list-selection.component.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLineModule } from '@ptsecurity/mosaic/core';\n\nimport { McListSelection, McListOption } from './list-selection.component';\nimport { McList, McListItem, McListSubheaderCssStyler } from './list.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        McLineModule\n    ],\n    exports: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ],\n    declarations: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ]\n})\nexport class McListModule {}\n","// todo пока не делаем, перенесено из материала, но у нас в доках таких простых списков нет.\nimport {\n    AfterContentInit, ChangeDetectionStrategy, Component, ContentChildren, Directive, ElementRef, QueryList,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { McLine, McLineSetter } from '@ptsecurity/mosaic/core';\n\n\nexport class McListBase {}\n\n@Component({\n    selector: 'mc-list',\n    host: { class: 'mc-list' },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McList extends McListBase {}\n\n\n/**\n * Directive whose purpose is to add the mc- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n    selector: '[mc-subheader], [mcSubheader]',\n    host: { class: 'mc-subheader' }\n})\nexport class McListSubheaderCssStyler {}\n\n\n// Boilerplate for applying mixins to McListItem.\nexport class McListItemBase {}\n\n@Component({\n    selector: 'mc-list-item, a[mc-list-item]',\n    host: {\n        class: 'mc-list-item',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()'\n    },\n    templateUrl: './list-item.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListItem extends McListItemBase implements AfterContentInit {\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    private _lineSetter: McLineSetter;\n\n    constructor(private _element: ElementRef) {\n        super();\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    _handleFocus() {\n        this._element.nativeElement.classList.add('mc-focused');\n    }\n\n    _handleBlur() {\n        this._element.nativeElement.classList.remove('mc-focused');\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n    QueryList,\n    ViewEncapsulation,\n    ChangeDetectorRef,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\n\nimport { FocusKeyManager, IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { END, ENTER, HOME, PAGE_DOWN, PAGE_UP, SPACE } from '@ptsecurity/cdk/keycodes';\n\nimport {\n    McLine,\n    McLineSetter,\n    CanDisable,\n    mixinDisabled,\n    toBoolean, CanDisableCtor\n} from '@ptsecurity/mosaic/core';\n\n\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\n@Component({\n    exportAs: 'mcListOption',\n    selector: 'mc-list-option',\n    host: {\n        tabindex: '-1',\n\n        class: 'mc-list-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n        '(click)': '_handleClick()'\n    },\n    templateUrl: 'list-option.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListOption implements AfterContentInit, OnDestroy, OnInit, IFocusableOption {\n    _hasFocus: boolean = false;\n\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    @ViewChild('text') _text: ElementRef;\n\n    // Whether the label should appear before or after the checkbox. Defaults to 'after'\n    @Input() checkboxPosition: 'before' | 'after' = 'after';\n\n    @Input() value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled || (this.listSelection && this.listSelection.disabled);\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.listSelection.selectedOptions && this.listSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            this.listSelection._reportValueChange();\n        }\n    }\n\n    private _lineSetter: McLineSetter;\n    private _selected = false;\n    private _disabled = false;\n\n    constructor(\n        private _element: ElementRef,\n        private _changeDetector: ChangeDetectorRef,\n        @Inject(forwardRef(() => McListSelection))\n        public listSelection: McListSelection\n    ) {}\n\n    ngOnInit() {\n        if (this._selected) {\n            // List options that are selected at initialization can't be reported properly to the form\n            // control. This is because it takes some time until the selection-list knows about all\n            // available options. Also it can happen that the ControlValueAccessor has an initial value\n            // that should be used instead. Deferring the value change report to the next tick ensures\n            // that the form control value is not being overwritten.\n            const wasSelected = this._selected;\n\n            Promise.resolve().then(() => {\n                if (this._selected || wasSelected) {\n                    this.selected = true;\n                    this._changeDetector.markForCheck();\n                }\n            });\n        }\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    ngOnDestroy(): void {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => this.selected = false);\n        }\n\n        this.listSelection._removeOptionFromList(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    focus(): void {\n        this._element.nativeElement.focus();\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    getLabel() {\n        return this._text ? this._text.nativeElement.textContent : '';\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.listSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.listSelection.selectedOptions.select(this);\n        } else {\n            this.listSelection.selectedOptions.deselect(this);\n        }\n\n        this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleClick() {\n        if (this.disabled) { return; }\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    _handleFocus() {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur() {\n        this._hasFocus = false;\n\n        this.listSelection._onTouched();\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n\n\nexport const MC_SELECTION_LIST_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McListSelection),\n    multi: true\n};\n\n// Change event that is being fired whenever the selected state of an option changes. */\nexport class McListSelectionChange {\n    constructor(\n        // Reference to the selection list that emitted the event.\n        public source: McListSelection,\n        // Reference to the option that has been changed.\n        public option: McListOption\n    ) {}\n}\n\n\nexport class McListSelectionBase {}\n\nexport const _McListSelectionMixinBase: CanDisableCtor & typeof McListSelectionBase\n    = mixinDisabled(McListSelectionBase);\n\n@Component({\n    exportAs: 'mcListSelection',\n    selector: 'mc-list-selection',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-list-selection',\n        '[tabIndex]': 'tabIndex',\n        '(focus)': 'focus()',\n        '(blur)': '_onTouched()',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    providers: [MC_SELECTION_LIST_VALUE_ACCESSOR],\n    preserveWhitespaces: false\n})\nexport class McListSelection extends _McListSelectionMixinBase implements\n    IFocusableOption, CanDisable, AfterContentInit, ControlValueAccessor {\n\n    _keyManager: FocusKeyManager<McListOption>;\n\n    // The option components contained within this selection-list.\n    @ContentChildren(McListOption) options: QueryList<McListOption>;\n\n    tabIndex: number;\n\n    autoSelect: boolean;\n    noUnselect: boolean;\n    multiple: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input() horizontal: boolean = false;\n\n    // Emits a change event whenever the selected state of an option changes.\n    @Output() readonly selectionChange: EventEmitter<McListSelectionChange> = new EventEmitter<McListSelectionChange>();\n\n    selectedOptions: SelectionModel<McListOption>;\n\n    // Used for storing the values that were assigned before the options were initialized.\n    private _tempValues: string[] | null;\n\n    private _modelChanges = Subscription.EMPTY;\n\n    constructor(\n        private _element: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string,\n        @Attribute('multiple') multiple: string\n    ) {\n        super();\n\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.selectedOptions = new SelectionModel<McListOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.horizontal = toBoolean(this.horizontal);\n\n        this._keyManager = new FocusKeyManager<McListOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(!this.horizontal)\n            .withHorizontalOrientation(this.horizontal ? 'ltr' : null);\n\n        if (this._tempValues) {\n            this._setOptionsFromValues(this._tempValues);\n            this._tempValues = null;\n        }\n\n        // Sync external changes to the model back to the options.\n        this._modelChanges = this.selectedOptions.onChange!.subscribe((event) => {\n            for (const item of event.added) {\n                item.selected = true;\n            }\n\n            for (const item of event.removed) {\n                item.selected = false;\n            }\n        });\n\n        this.updateScrollSize();\n    }\n\n    ngOnDestroy() {\n        this._modelChanges.unsubscribe();\n    }\n\n    focus() {\n        this._element.nativeElement.focus();\n    }\n\n    selectAll() {\n        this.options.forEach((option) => option.setSelected(true));\n\n        this._reportValueChange();\n    }\n\n    deselectAll() {\n        this.options.forEach((option) => option.setSelected(false));\n\n        this._reportValueChange();\n    }\n\n    updateScrollSize(): void {\n        if (this.horizontal || !this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    // Sets the focused option of the selection-list.\n    setFocusedOption(option: McListOption): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitChangeEvent(option);\n        this._reportValueChange();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(values: string[]): void {\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        } else {\n            this._tempValues = values;\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this._onTouched = fn;\n    }\n\n    // Implemented as a part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        if (this.options) {\n            this.options.forEach((option) => option.disabled = isDisabled);\n        }\n    }\n\n    getSelectedOptionValues(): string[] {\n        return this.options.filter((option) => option.selected).map((option) => option.value);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McListOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    _canDeselectLast(listOption: McListOption): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && listOption.selected);\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    // View to model callback that should be called if the list or its options lost focus.\n    _onTouched: () => void = () => {};\n\n    // Removes an option from the selection list and updates the active item.\n    _removeOptionFromList(option: McListOption) {\n        if (option._hasFocus) {\n            const optionIndex = this._getOptionIndex(option);\n\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.setPreviousItemActive();\n            } else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.setNextItemActive();\n            }\n        }\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                if (!this.horizontal) { this._keyManager.setPreviousPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                if (!this.horizontal) { this._keyManager.setNextPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    // Reports a value change to the ControlValueAccessor\n    _reportValueChange() {\n        if (this.options) {\n            this._onChange(this.getSelectedOptionValues());\n        }\n    }\n\n    // Emits a change event if the selected state of an option changed.\n    _emitChangeEvent(option: McListOption) {\n        this.selectionChange.emit(new McListSelectionChange(this, option));\n    }\n\n    // Returns the option with the specified value.\n    private _getOptionByValue(value: string): McListOption | undefined {\n        return this.options.find((option) => option.value === value);\n    }\n\n    // Sets the selected options based on the specified values.\n    private _setOptionsFromValues(values: string[]) {\n        this.options.forEach((option) => option.setSelected(false));\n\n        values\n            .map((value) => this._getOptionByValue(value))\n            .filter(Boolean)\n            .forEach((option) => option!.setSelected(true));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    // Returns the index of the specified list option.\n    private _getOptionIndex(option: McListOption): number {\n        return this.options.toArray().indexOf(option);\n    }\n\n    // View to model callback that should be called whenever the selected options change.\n    private _onChange: (value: any) => void = (_: any) => {};\n}\n"],"names":["tslib_1.__decorate","tslib_1.__metadata","tslib_1.__param"],"mappings":"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"}