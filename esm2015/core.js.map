{"version":3,"file":"core.js","sources":["../../../src/lib/core/index.ts","../../../src/lib/core/overlay/overlay-position-map.ts","../../../src/lib/core/animation/fade-animations.ts","../../../src/lib/core/label/label-options.ts","../../../src/lib/core/option/index.ts","../../../src/lib/core/option/option.ts","../../../src/lib/core/option/optgroup.ts","../../../src/lib/core/services/measure-scrollbar.service.ts","../../../src/lib/core/selection/index.ts","../../../src/lib/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../../src/lib/core/error/error-options.ts","../../../src/lib/core/line/line.ts","../../../src/lib/core/common-behaviors/error-state.ts","../../../src/lib/core/common-behaviors/tabindex.ts","../../../src/lib/core/common-behaviors/color.ts","../../../src/lib/core/common-behaviors/disabled.ts","../../../src/lib/core/common-behaviors/common-module.ts","../../../src/lib/core/utils/utils.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {MC_SANITY_CHECKS_FACTORY as Éµa} from './common-behaviors/common-module';","import { ConnectionPositionPair } from '@ptsecurity/cdk/overlay';\n\n\nexport const POSITION_MAP: { [key: string]: ConnectionPositionPair } = {\n    top         : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom'\n    },\n    topCenter   : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topLeft     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topRight    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    right       : {\n        originX : 'end',\n        originY : 'center',\n        overlayX: 'start',\n        overlayY: 'center'\n    },\n    rightTop    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'top',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    rightBottom : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    bottom      : {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomCenter: {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomLeft  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    bottomRight : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    left        : {\n        originX : 'start',\n        originY : 'center',\n        overlayX: 'end',\n        overlayY: 'center'\n    },\n    leftTop     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    leftBottom  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    }\n};\n\nexport const DEFAULT_4_POSITIONS = _objectValues([\n    POSITION_MAP.top, POSITION_MAP.right, POSITION_MAP.bottom, POSITION_MAP.left\n]);\n\nfunction arrayMap<T, S>(array: T[], iteratee: (item: T, index: number, arr: T[]) => S): S[] {\n    let index = -1;\n    const length = array == null ? 0 : array.length;\n    const result = Array(length);\n\n    while (++index < length) {\n        result[ index ] = iteratee(array[ index ], index, array);\n    }\n\n    return result;\n}\nfunction baseValues<T>(object: { [key: string]: T } | T[], props: string[]): T[] {\n    return arrayMap(props,  (key) => {\n        return object[ key ];\n    });\n}\nfunction _objectValues<T>(object: { [key: string]: T } | T[]): T[] {\n    return object == null ? [] : baseValues(object, Object.keys(object));\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata,\n} from '@angular/animations';\n\n\nexport const fadeAnimation: AnimationTriggerMetadata =  trigger('fadeAnimation', [\n    state('void', style({ opacity: 0 })),\n    state('true', style({ opacity: 1 })),\n    state('false', style({ opacity: 0 })),\n    transition('* => true', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n    transition('* => void', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)')),\n]);\n","import { InjectionToken } from '@angular/core';\n\n\n/** InjectionToken that can be used to specify the global label options. */\nexport const MC_LABEL_GLOBAL_OPTIONS =\n    new InjectionToken<LabelOptions>('mc-label-global-options');\n\n/** Type for the available floatLabel values. */\nexport type FloatLabelType = 'always' | 'never' | 'auto';\n\n/** Configurable options for floating labels. */\nexport interface LabelOptions {\n    /**\n     * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n     * Default behavior is assumed to be `auto`.\n     */\n    float?: FloatLabelType;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McPseudoCheckboxModule } from '../selection/index';\n\nimport { McOptgroup } from './optgroup';\nimport { McOption } from './option';\n\n\n@NgModule({\n    imports: [CommonModule, McPseudoCheckboxModule],\n    exports: [McOption, McOptgroup],\n    declarations: [McOption, McOptgroup]\n})\nexport class McOptionModule {}\n\n\nexport * from './option';\nexport * from './optgroup';\n","import {\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ENTER, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Subject } from 'rxjs';\n\nimport { McOptgroup } from './optgroup';\n\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n\n/** Event object emitted by McOption when selected or deselected. */\nexport class McOptionSelectionChange {\n    constructor(\n        /** Reference to the option that emitted the event. */\n        public source: McOption,\n        /** Whether the change in the option's value was a result of a user action. */\n        public isUserInput = false) {\n    }\n}\n\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * @docs-private\n */\nexport interface IMcOptionParentComponent {\n    disableRipple?: boolean;\n    multiple?: boolean;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_OPTION_PARENT_COMPONENT =\n    new InjectionToken<IMcOptionParentComponent>('MC_OPTION_PARENT_COMPONENT');\n\n/**\n * Single option inside of a `<mat-select>` element.\n */\n@Component({\n    selector: 'mc-option',\n    exportAs: 'mcOption',\n    host: {\n        '[attr.tabindex]': '_getTabIndex()',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-option-multiple]': 'multiple',\n        '[class.mc-active]': 'active',\n        '[id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '(click)': '_selectViaInteraction()',\n        '(keydown)': '_handleKeydown($event)',\n        class: 'mc-option'\n    },\n    styleUrls: ['option.css'],\n    templateUrl: 'option.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McOption implements AfterViewChecked, OnDestroy {\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n        return this._parent && this._parent.multiple;\n    }\n\n    /** The unique ID of the option. */\n    get id(): string {\n        return this._id;\n    }\n\n    /** Whether or not the option is currently selected. */\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    /** The form value of the option. */\n    @Input() value: any;\n\n    /** Whether the option is disabled. */\n    @Input()\n    get disabled() {\n        return (this.group && this.group.disabled) || this._disabled;\n    }\n\n    set disabled(value: any) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() {\n        return this._parent && this._parent.disableRipple;\n    }\n\n    /** Event emitted when the option is selected or deselected. */\n        // tslint:disable-next-line:no-output-on-prefix\n    @Output() readonly onSelectionChange = new EventEmitter<McOptionSelectionChange>();\n\n    /** Emits when the state of the option changes and any parents have to be notified. */\n    readonly _stateChanges = new Subject<void>();\n\n    private _selected = false;\n    private _active = false;\n    private _disabled = false;\n    private readonly _id = `mc-option-${_uniqueIdCounter++}`;\n    private _mostRecentViewValue = '';\n\n    constructor(\n        private readonly _element: ElementRef,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_OPTION_PARENT_COMPONENT) private readonly _parent: IMcOptionParentComponent,\n        @Optional() readonly group: McOptgroup) {\n    }\n\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active(): boolean {\n        return this._active;\n    }\n\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue(): string {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n\n    /** Selects the option. */\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Deselects the option. */\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Sets focus onto this option. */\n    focus(): void {\n        const element = this._getHostElement();\n\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles(): void {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles(): void {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        return this.viewValue;\n    }\n\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event: KeyboardEvent): void {\n        // tslint:disable-next-line\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\n            this._selectViaInteraction();\n\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction(): void {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Gets the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n\n    /** Emits the selection change event. */\n    private _emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McOptionSelectionChange(this, isUserInput));\n    }\n}\n\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nexport function _countGroupLabelsBeforeOption(\n    optionIndex: number, options: QueryList<McOption>,\n    optionGroups: QueryList<McOptgroup>\n): number {\n\n    if (optionGroups.length) {\n        const optionsArray = options.toArray();\n        const groups = optionGroups.toArray();\n\n        let groupCounter = 0;\n\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n\n        return groupCounter;\n    }\n\n    return 0;\n}\n\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionIndex Index of the option to be scrolled into the view.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nexport function _getOptionScrollPosition(\n    optionIndex: number,\n    optionHeight: number,\n    currentScrollPosition: number,\n    panelHeight: number\n): number {\n    const optionOffset = optionIndex * optionHeight;\n\n    if (optionOffset < currentScrollPosition) { return optionOffset; }\n\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n\n    return currentScrollPosition;\n}\n\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\nimport { mixinDisabled, CanDisable, CanDisableCtor } from '../common-behaviors/index';\n\n\n// Boilerplate for applying mixins to McOptgroup.\n/** @docs-private */\nexport class McOptgroupBase {}\n\nexport const _McOptgroupMixinBase: CanDisableCtor & typeof McOptgroupBase = mixinDisabled(McOptgroupBase);\n\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\n\n/**\n * Component that is used to group instances of `mc-option`.\n */\n@Component({\n    selector: 'mc-optgroup',\n    exportAs: 'mcOptgroup',\n    templateUrl: 'optgroup.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    styleUrls: ['optgroup.css'],\n    host: {\n        class: 'mc-optgroup',\n        role: 'group',\n        '[class.mc-optgroup-disabled]': 'disabled',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-labelledby]': '_labelId'\n    }\n})\nexport class McOptgroup extends _McOptgroupMixinBase implements CanDisable {\n    /** Label for the option group. */\n    @Input() label: string;\n\n    /** Unique id for the underlying label. */\n    _labelId: string = `mc-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n}\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class McMeasureScrollbarService {\n\n    get scrollBarWidth(): number {\n        if (this._scrollbarWidth) {\n            return this._scrollbarWidth;\n        }\n        this.initScrollBarWidth();\n\n        return this._scrollbarWidth;\n    }\n\n    private _scrollbarWidth: number;\n    private scrollbarMeasure = {\n        position: 'absolute',\n        top: '-9999px',\n        width: '50px',\n        height: '50px',\n        overflow: 'scroll'\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private document: any\n    ) {\n        this.initScrollBarWidth();\n    }\n\n    initScrollBarWidth() {\n        const scrollDiv = this.document.createElement('div');\n\n        // tslint:disable-next-line\n        for (const scrollProp in this.scrollbarMeasure) {\n            if (this.scrollbarMeasure.hasOwnProperty(scrollProp)) {\n                scrollDiv.style[scrollProp] = this.scrollbarMeasure[scrollProp];\n            }\n        }\n\n        this.document.body.appendChild(scrollDiv);\n\n        const width = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n        this.document.body.removeChild(scrollDiv);\n        this._scrollbarWidth = width;\n    }\n}\n","import { NgModule } from '@angular/core';\n\nimport { McPseudoCheckbox } from './pseudo-checkbox/pseudo-checkbox';\n\n\n@NgModule({\n    exports: [McPseudoCheckbox],\n    declarations: [McPseudoCheckbox]\n})\nexport class McPseudoCheckboxModule {}\n\n\nexport * from './pseudo-checkbox/pseudo-checkbox';\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\n\nexport type McPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mc-primary .mc-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mc-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n@Component({\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'mc-pseudo-checkbox',\n    styleUrls: ['pseudo-checkbox.css'],\n    templateUrl: 'pseudo-checkbox.partial.html',\n    host: {\n        class: 'mc-pseudo-checkbox',\n        '[class.mc-pseudo-checkbox_indeterminate]': 'state === \"indeterminate\"',\n        '[class.mc-pseudo-checkbox_checked]': 'state === \"checked\"',\n        '[class.mc-disabled]': 'disabled'\n    }\n})\nexport class McPseudoCheckbox {\n    @Input() state: McPseudoCheckboxState = 'unchecked';\n\n    @Input() disabled: boolean = false;\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroupDirective, NgForm, FormControl } from '@angular/forms';\n\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n@Injectable()\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\n\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n@Injectable({ providedIn: 'root' })\nexport class ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\n","import { NgModule, Directive, ElementRef, QueryList } from '@angular/core';\n\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(McLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({\n    selector: '[mc-line], [mcLine]',\n    host: { class: 'mc-line' }\n})\nexport class McLine {}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nexport class McLineSetter {\n    constructor(private _lines: QueryList<McLine>, private _element: ElementRef) {\n        this._setLineClass(this._lines.length);\n\n        this._lines.changes.subscribe(() => {\n            this._setLineClass(this._lines.length);\n        });\n    }\n\n    private _setLineClass(count: number): void {\n        this._resetClasses();\n        if (count === 2 || count === 3) {\n            this._setClass(`mc-${count}-line`, true);\n        } else if (count > 3) {\n            this._setClass(`mc-multi-line`, true);\n        }\n    }\n\n    private _resetClasses(): void {\n        this._setClass('mc-2-line', false);\n        this._setClass('mc-3-line', false);\n        this._setClass('mc-multi-line', false);\n    }\n\n    private _setClass(className: string, isAdd: boolean): void {\n        if (isAdd) {\n            this._element.nativeElement.classList.add(className);\n        } else {\n            this._element.nativeElement.classList.remove(className);\n        }\n    }\n}\n\n@NgModule({\n    imports: [],\n    exports: [McLine],\n    declarations: [McLine]\n})\nexport class McLineModule {}\n","import { FormControl, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\nimport { ErrorStateMatcher } from '../error/error-options';\n\nimport { Constructor } from './constructor';\n\n\n/** @docs-private */\nexport interface CanUpdateErrorState {\n\n    readonly stateChanges: Subject<void>;\n\n    errorState: boolean;\n    errorStateMatcher: ErrorStateMatcher;\n\n    updateErrorState();\n}\n\n/** @docs-private */\nexport type CanUpdateErrorStateCtor = Constructor<CanUpdateErrorState>;\n\n/** @docs-private */\nexport interface HasErrorState {\n    _parentFormGroup: FormGroupDirective;\n    _parentForm: NgForm;\n    _defaultErrorStateMatcher: ErrorStateMatcher;\n    ngControl: NgControl;\n}\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T)\n    : CanUpdateErrorStateCtor & T {\n    return class extends base {\n        /** Whether the component is in an error state. */\n        errorState: boolean = false;\n\n        /**\n         * Stream that emits whenever the state of the input changes such that the wrapping\n         * `MatFormField` needs to run change detection.\n         */\n        readonly stateChanges = new Subject<void>();\n\n        errorStateMatcher: ErrorStateMatcher;\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this._parentFormGroup || this._parentForm;\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control as FormControl : null;\n            const newState = matcher.isErrorState(control, parent);\n\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n","import { Constructor } from './constructor';\nimport { CanDisable } from './disabled';\n\n\nexport interface HasTabIndex {\n    tabIndex: number;\n}\n\nexport type HasTabIndexCtor = Constructor<HasTabIndex>;\n\n// Mixin to augment a directive with a `tabIndex` property.\nexport function mixinTabIndex<T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0)\n    : HasTabIndexCtor & T {\n    return class extends base {\n        private _tabIndex: number = defaultTabIndex;\n\n        get tabIndex(): number {\n            return this.disabled ? -1 : this._tabIndex;\n        }\n\n        set tabIndex(value: number) {\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n    };\n}\n","import { ElementRef } from '@angular/core';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanColor {\n    color: ThemePalette;\n}\n\n/** @docs-private */\nexport type CanColorCtor = Constructor<CanColor>;\n\nexport interface HasElementRef {\n    _elementRef: ElementRef;\n}\n\nexport enum ThemePalette {\n    Primary = 'primary',\n    Second = 'second',\n    Warn = 'warn',\n    Default = 'second'\n}\n\n/** Mixin to augment a directive with a `color` property. */\nexport function mixinColor<T extends Constructor<HasElementRef>>(\n    base: T,\n    defaultColor: ThemePalette = ThemePalette.Default\n): CanColorCtor & T {\n    return class extends base {\n\n        private _color: ThemePalette;\n\n        get color(): ThemePalette {\n            return this._color;\n        }\n\n        set color(value: ThemePalette) {\n            const colorPalette = value || defaultColor;\n\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mc-${this._color}`);\n                }\n\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mc-${colorPalette}`);\n                }\n\n                this._color = colorPalette;\n            }\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n\n            this.color = defaultColor;\n        }\n    };\n}\n\n","import { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanDisable {\n    disabled: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableCtor = Constructor<CanDisable>;\n\n// Mixin to augment a directive with a `disabled` property.\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): CanDisableCtor & T {\n    return class extends base {\n        private _disabled: boolean = false;\n\n        get disabled() {\n            return this._disabled;\n        }\n\n        set disabled(value: any) {\n            this._disabled = coerceBooleanProperty(value);\n        }\n\n        constructor(...args: any[]) {\n            // tslint:disable-next-line\n            super(...args);\n        }\n    };\n}\n","import { NgModule, InjectionToken, Optional, Inject, isDevMode } from '@angular/core';\nimport { BidiModule } from '@ptsecurity/cdk/bidi';\n\n\n// Injection token that configures whether the Mosaic sanity checks are enabled.\nexport const MC_SANITY_CHECKS = new InjectionToken<boolean>('mc-sanity-checks', {\n    providedIn: 'root',\n    factory: MC_SANITY_CHECKS_FACTORY\n});\n\nexport function MC_SANITY_CHECKS_FACTORY(): boolean {\n    return true;\n}\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Mosaic\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\n@NgModule({\n    imports: [ BidiModule ],\n    exports: [ BidiModule ]\n})\nexport class McCommonModule {\n    // Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n    private _hasDoneGlobalChecks = false;\n\n    // Reference to the global `document` object.\n    private _document = typeof document === 'object' && document ? document : null;\n\n    // Reference to the global 'window' object.\n    private _window = typeof window === 'object' && window ? window : null;\n\n    constructor(@Optional() @Inject(MC_SANITY_CHECKS) private _sanityChecksEnabled: boolean) {\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n\n    // Whether any sanity checks are enabled\n    private _areChecksEnabled(): boolean {\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    }\n\n    // Whether the code is running in tests.\n    private _isTestEnv() {\n        // tslint:disable-next-line\n        return this._window && (this._window['__karma__'] || this._window['jasmine']);\n    }\n\n    private _checkDoctypeIsDefined(): void {\n        if (this._document && !this._document.doctype) {\n            console.warn(\n                'Current document does not have a doctype. This may cause ' +\n                'some Mosaic components not to behave as expected.'\n            );\n        }\n    }\n\n    private _checkThemeIsPresent(): void {\n        if (this._document && typeof getComputedStyle === 'function') {\n            const testElement = this._document.createElement('div');\n\n            testElement.classList.add('mc-theme-loaded-marker');\n            this._document.body.appendChild(testElement);\n\n            const computedStyle = getComputedStyle(testElement);\n\n            // In some situations, the computed style of the test element can be null. For example in\n            // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n            if (computedStyle && computedStyle.display !== 'none') {\n                console.warn(\n                    'Could not find Mosaic core theme. Most Mosaic ' +\n                    'components may not work as expected. For more info refer ' +\n                    'to the theming guide: link there'\n                );\n            }\n\n            this._document.body.removeChild(testElement);\n        }\n    }\n}\n","\nexport function isBoolean(val: any): val is boolean { return typeof val === 'boolean'; }\n\nexport function toBoolean(value: any): boolean {\n    return value != null && `${value}` !== 'false';\n}\n"],"names":["tslib_1.__decorate","tslib_1.__metadata","tslib_1.__param"],"mappings":";;;;;;;;;;;;;;;AiBCA,SAAgB,SAAS,CAAC,GAAQ,EAAlC,EAAsD,OAAO,OAAO,GAAG,KAAK,SAAS,CAAC,EAAE;AAExF,AAAA,SAAgB,SAAS,CAAC,KAAU,EAApC;IACI,OAAO,KAAK,IAAI,IAAI,IAAI,CAA5B,EAA+B,KAAK,CAApC,CAAsC,KAAK,OAAO,CAAC;CAClD;;ADDD;AACA,AAAA,MAAa,gBAAgB,GAAG,IAAI,cAAc,CAAU,kBAAkB,EAAE;IAC5E,UAAU,EAAE,MAAM;IAClB,OAAO,EAAE,wBAAwB;CACpC,CAAC,CAAC;AAEH,AAAA,SAAgB,wBAAwB,GAAxC;IACI,OAAO,IAAI,CAAC;CACf;;;;;;;AAYD,AAAA,IAAa,cAAc,GAA3B,MAAa,cAAc,CAA3B;IAUI,WAAJ,CAA8D,oBAA6B,EAA3F;QAA8D,IAA9D,CAAA,oBAAkF,GAApB,oBAAoB,CAAS;;QAR/E,IAAZ,CAAA,oBAAgC,GAAG,KAAK,CAAC;;QAG7B,IAAZ,CAAA,SAAqB,GAAG,OAAO,QAAQ,KAAK,QAAQ,IAAI,QAAQ,GAAG,QAAQ,GAAG,IAAI,CAAC;;QAGvE,IAAZ,CAAA,OAAmB,GAAG,OAAO,MAAM,KAAK,QAAQ,IAAI,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC;QAGnE,IAAI,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE;YACxD,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAC9B,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC5B,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;SACpC;KACJ;;IAGO,iBAAiB,GAA7B;QACQ,OAAO,IAAI,CAAC,oBAAoB,IAAI,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;KACzE;;IAGO,UAAU,GAAtB;;QAEQ,OAAO,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;KACjF;IAEO,sBAAsB,GAAlC;QACQ,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;YAC3C,OAAO,CAAC,IAAI,CACR,2DAA2D;gBAC3D,mDAAmD,CACtD,CAAC;SACL;KACJ;IAEO,oBAAoB,GAAhC;QACQ,IAAI,IAAI,CAAC,SAAS,IAAI,OAAO,gBAAgB,KAAK,UAAU,EAAE;YAC1D,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAExD,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;YACpD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;YAE7C,MAAM,aAAa,GAAG,gBAAgB,CAAC,WAAW,CAAC,CAAC;;;;YAKpD,IAAI,aAAa,IAAI,aAAa,CAAC,OAAO,KAAK,MAAM,EAAE;gBACnD,OAAO,CAAC,IAAI,CACR,gDAAgD;oBAChD,2DAA2D;oBAC3D,kCAAkC,CACrC,CAAC;aACL;YAED,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;SAChD;KACJ;CACJ,CAAA;AA7DY,cAAc,GAA3BA,UAAA,CAAA;IAJC,QAAQ,CAAC;QACN,OAAO,EAAE,CAAE,UAAU,CAAE;QACvB,OAAO,EAAE,CAAE,UAAU,CAAE;KAC1B,CAAC;IAWeE,OAAjB,CAAA,CAAA,EAAiB,QAAQ,EAAE,CAAA,EAAEA,OAA7B,CAAA,CAAA,EAA6B,MAAM,CAAC,gBAAgB,CAAC,CAAA;;CAVrD,EAAa,cAAc,CA6D1B,CA7DD;;ADZA;AACA,AAAA,SAAgB,aAAa,CAA4B,IAAO,EAAhE;IACI,OAAO,cAAc,IAAI,CAA7B;QAWQ,WAAR,CAAoB,GAAG,IAAW,EAAlC;;YAEY,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;YAZX,IAAhB,CAAA,SAAyB,GAAY,KAAK,CAAC;SAalC;QAXD,IAAI,QAAQ,GAApB;YACY,OAAO,IAAI,CAAC,SAAS,CAAC;SACzB;QAED,IAAI,QAAQ,CAAC,KAAU,EAA/B;YACY,IAAI,CAAC,SAAS,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;SACjD;KAMJ,CAAC;CACL;;ADdD,IAAY,YAKX,CALD;AAAA,CAAA,UAAY,YAAY,EAAxB;IACI,YAAJ,CAAA,SAAA,CAAA,GAAA,SAAuB,CAAA;IACnB,YAAJ,CAAA,QAAA,CAAA,GAAA,QAAqB,CAAA;IACjB,YAAJ,CAAA,MAAA,CAAA,GAAA,MAAiB,CAAA;IACb,YAAJ,CAAA,SAAA,CAAA,GAAA,QAAsB,CAAA;CACrB,EALW,YAAY,KAAZ,YAAY,GAKxB,EAAA,CAAA,CAAA,CAAC;;AAGD,AAAA,SAAgB,UAAU,CACtB,IAAO,EACP,YAFJ,GAEiC,YAAY,CAAC,OAAO,EAFrD;IAII,OAAO,cAAc,IAAI,CAA7B;QAIQ,IAAI,KAAK,GAAjB;YACY,OAAO,IAAI,CAAC,MAAM,CAAC;SACtB;QAED,IAAI,KAAK,CAAC,KAAmB,EAArC;YACY,MAAM,YAAY,GAAG,KAAK,IAAI,YAAY,CAAC;YAE3C,IAAI,YAAY,KAAK,IAAI,CAAC,MAAM,EAAE;gBAC9B,IAAI,IAAI,CAAC,MAAM,EAAE;oBACb,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,CAApE,GAAA,EAA0E,IAAI,CAAC,MAAM,CAArF,CAAuF,CAAC,CAAC;iBACxE;gBAED,IAAI,YAAY,EAAE;oBACd,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,CAAjE,GAAA,EAAuE,YAAY,CAAnF,CAAqF,CAAC,CAAC;iBACtE;gBAED,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC;aAC9B;SACJ;QAED,WAAR,CAAoB,GAAG,IAAW,EAAlC;YACY,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;YAEf,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC;SAC7B;KACJ,CAAC;CACL;;ADhDD;AACA,AAAA,SAAgB,aAAa,CAAoC,IAAO,EAAE,eAAe,GAAG,CAAC,EAA7F;IAEI,OAAO,cAAc,IAAI,CAA7B;QAWQ,WAAR,CAAoB,GAAG,IAAW,EAAlC;YACY,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;YAXX,IAAhB,CAAA,SAAyB,GAAW,eAAe,CAAC;SAY3C;QAVD,IAAI,QAAQ,GAApB;YACY,OAAO,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;SAC9C;QAED,IAAI,QAAQ,CAAC,KAAa,EAAlC;YACY,IAAI,CAAC,SAAS,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,GAAG,eAAe,CAAC;SAC5D;KAKJ,CAAC;CACL;;ADED;;;;AAIA,AAAA,SAAgB,eAAe,CAAuC,IAAO,EAA7E;IAEI,OAAO,cAAc,IAAI,CAA7B;QAYQ,WAAR,CAAoB,GAAG,IAAW,EAAlC;YACY,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;;YAXnB,IAAR,CAAA,UAAkB,GAAY,KAAK,CAAC;;;;;YAMnB,IAAjB,CAAA,YAA6B,GAAG,IAAI,OAAO,EAAQ,CAAC;SAM3C;QAED,gBAAgB,GAAxB;YACY,MAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC;YACjC,MAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,WAAW,CAAC;YACzD,MAAM,OAAO,GAAG,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,yBAAyB,CAAC;YACzE,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,OAAsB,GAAG,IAAI,CAAC;YAC9E,MAAM,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;YAEvD,IAAI,QAAQ,KAAK,QAAQ,EAAE;gBACvB,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;gBAC3B,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;aAC5B;SACJ;KACJ,CAAC;CACL;;AD9DD;;;;;AASA,AAAA,IAAa,MAAM,GAAnB,MAAa,MAAM,CAAnB;CAAsB,CAAA;AAAT,MAAM,GAAnBF,UAAA,CAAA;IAJC,SAAS,CAAC;QACP,QAAQ,EAAE,qBAAqB;QAC/B,IAAI,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE;KAC7B,CAAC;CACF,EAAa,MAAM,CAAG,CAAtB;AAAA,AAEA;;;;AAIA,AAAA,MAAa,YAAY,CAAzB;IACI,WAAJ,CAAwB,MAAyB,EAAU,QAAoB,EAA/E;QAAwB,IAAxB,CAAA,MAA8B,GAAN,MAAM,CAAmB;QAAU,IAA3D,CAAA,QAAmE,GAAR,QAAQ,CAAY;QACvE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAEvC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,MAAtC;YACY,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SAC1C,CAAC,CAAC;KACN;IAEO,aAAa,CAAC,KAAa,EAAvC;QACQ,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,KAAK,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,EAAE;YAC5B,IAAI,CAAC,SAAS,CAAC,CAA3B,GAAA,EAAiC,KAAK,CAAtC,KAAA,CAA6C,EAAE,IAAI,CAAC,CAAC;SAC5C;aAAM,IAAI,KAAK,GAAG,CAAC,EAAE;YAClB,IAAI,CAAC,SAAS,CAAC,CAA3B,aAAA,CAA0C,EAAE,IAAI,CAAC,CAAC;SACzC;KACJ;IAEO,aAAa,GAAzB;QACQ,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;QACnC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;QACnC,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;KAC1C;IAEO,SAAS,CAAC,SAAiB,EAAE,KAAc,EAAvD;QACQ,IAAI,KAAK,EAAE;YACP,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;SACxD;aAAM;YACH,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;SAC3D;KACJ;CACJ;AAOD,AAAA,IAAa,YAAY,GAAzB,MAAa,YAAY,CAAzB;CAA4B,CAAA;AAAf,YAAY,GAAzBA,UAAA,CAAA;IALC,QAAQ,CAAC;QACN,OAAO,EAAE,EAAE;QACX,OAAO,EAAE,CAAC,MAAM,CAAC;QACjB,YAAY,EAAE,CAAC,MAAM,CAAC;KACzB,CAAC;CACF,EAAa,YAAY,CAAG,CAA5B;;ADpDA;AAEA,AAAA,IAAa,4BAA4B,GAAzC,MAAa,4BAA4B,CAAzC;IACI,YAAY,CAAC,OAA2B,EAAE,IAAwC,EAAtF;QACQ,OAAO,CAAC,EAAE,OAAO,IAAI,OAAO,CAAC,OAAO,KAAK,OAAO,CAAC,KAAK,KAAK,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;KACxF;CACJ,CAAA;AAJY,4BAA4B,GAAzCA,UAAA,CAAA;IADC,UAAU,EAAE;CACb,EAAa,4BAA4B,CAIxC,CAJD;AAAA,AAMA;AAEA,AAAA,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB,CAA9B;IACI,YAAY,CAAC,OAA2B,EAAE,IAAwC,EAAtF;QACQ,OAAO,CAAC,EAAE,OAAO,IAAI,OAAO,CAAC,OAAO,KAAK,OAAO,CAAC,OAAO,KAAK,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;KAC1F;CACJ,CAAA;;AAJY,iBAAiB,GAA9BA,UAAA,CAAA;IADC,UAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;CACnC,EAAa,iBAAiB,CAI7B,CAJD;;ADTA;;;;;;;;;;;;;AA2BA,AAAA,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB,CAA7B;;;;;;;;;;;;;;IAdA,WAAA,GAAA;QAea,IAAb,CAAA,KAAkB,GAA0B,WAAW,CAAC;QAE3C,IAAb,CAAA,QAAqB,GAAY,KAAK,CAAC;KACtC;CAAA,CAAA;AAHYA,UAAb,CAAA;IAAK,KAAK,EAAE;;CAAZ,EAAA,gBAAA,CAAA,SAAA,EAAA,OAAA,EAAA,KAAA,CAAA,CAAwD,CAAxD;AAEaA,UAAb,CAAA;IAAK,KAAK,EAAE;;CAAZ,EAAA,gBAAA,CAAA,SAAA,EAAA,UAAA,EAAA,KAAA,CAAA,CAAuC,CAAvC;AAHa,gBAAgB,GAA7BA,UAAA,CAAA;IAdC,SAAS,CAAC;QACP,aAAa,EAAE,iBAAiB,CAAC,IAAI;QACrC,mBAAmB,EAAE,KAAK;QAC1B,eAAe,EAAE,uBAAuB,CAAC,MAAM;QAC/C,QAAQ,EAAE,oBAAoB;QAC9B,MAAJ,EAAA,CAAa,msBAAb,CAAA;QACI,QAAJ,EAAA,+GAAA;QACI,IAAI,EAAE;YACF,KAAK,EAAE,oBAAoB;YAC3B,0CAA0C,EAAE,2BAA2B;YACvE,oCAAoC,EAAE,qBAAqB;YAC3D,qBAAqB,EAAE,UAAU;SACpC;KACJ,CAAC;CACF,EAAa,gBAAgB,CAI5B,CAJD;;ADvBA,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB,CAAnC;CAAsC,CAAA;AAAzB,sBAAsB,GAAnCA,UAAA,CAAA;IAJC,QAAQ,CAAC;QACN,OAAO,EAAE,CAAC,gBAAgB,CAAC;QAC3B,YAAY,EAAE,CAAC,gBAAgB,CAAC;KACnC,CAAC;CACF,EAAa,sBAAsB,CAAG,CAAtC;;ADFA,IAAa,yBAAyB,GAAtC,MAAa,yBAAyB,CAAtC;IAoBI,WAAJ,CACkC,QAAa,EAD/C;QACkC,IAAlC,CAAA,QAA0C,GAAR,QAAQ,CAAK;QATnC,IAAZ,CAAA,gBAA4B,GAAG;YACvB,QAAQ,EAAE,UAAU;YACpB,GAAG,EAAE,SAAS;YACd,KAAK,EAAE,MAAM;YACb,MAAM,EAAE,MAAM;YACd,QAAQ,EAAE,QAAQ;SACrB,CAAC;QAKE,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAC7B;IAtBD,IAAI,cAAc,GAAtB;QACQ,IAAI,IAAI,CAAC,eAAe,EAAE;YACtB,OAAO,IAAI,CAAC,eAAe,CAAC;SAC/B;QACD,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAE1B,OAAO,IAAI,CAAC,eAAe,CAAC;KAC/B;IAiBD,kBAAkB,GAAtB;QACQ,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;;QAGrD,KAAK,MAAM,UAAU,IAAI,IAAI,CAAC,gBAAgB,EAAE;YAC5C,IAAI,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE;gBAClD,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;aACnE;SACJ;QAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QAE1C,MAAM,KAAK,GAAG,SAAS,CAAC,WAAW,GAAG,SAAS,CAAC,WAAW,CAAC;QAE5D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QAC1C,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;KAChC;CACJ,CAAA;;AA3CY,yBAAyB,GAAtCA,UAAA,CAAA;IAHC,UAAU,CAAC;QACR,UAAU,EAAE,MAAM;KACrB,CAAC;IAsBOE,OAAT,CAAA,CAAA,EAAS,MAAM,CAAC,QAAQ,CAAC,CAAA;;CArBzB,EAAa,yBAAyB,CA2CrC,CA3CD;;ADFA;;AAEA,AAAA,MAAa,cAAc,CAA3B;CAA8B;AAE9B,AAAA,MAAa,oBAAoB,GAA2C,aAAa,CAAC,cAAc,CAAC,CAAC;;AAG1G,IAAI,wBAAwB,GAAG,CAAC,CAAC;;;;AAqBjC,AAAA,IAAa,UAAU,GAAvB,MAAa,UAAW,SAAQ,oBAAoB,CAApD;;;;IAhBA,WAAA,GAAA;;;QAqBI,IAAJ,CAAA,QAAY,GAAW,CAAvB,kBAAA,EAA4C,wBAAwB,EAAE,CAAtE,CAAwE,CAAC;KACxE;CAAA,CAAA;AAJYF,UAAb,CAAA;IAAK,KAAK,EAAE;;CAAZ,EAAA,UAAA,CAAA,SAAA,EAAA,OAAA,EAAA,KAAA,CAAA,CAA2B,CAA3B;AAFa,UAAU,GAAvBA,UAAA,CAAA;IAhBC,SAAS,CAAC;QACP,QAAQ,EAAE,aAAa;QACvB,QAAQ,EAAE,YAAY;QACtB,QAAJ,EAAA,sIAAA;QACI,aAAa,EAAE,iBAAiB,CAAC,IAAI;QACrC,eAAe,EAAE,uBAAuB,CAAC,MAAM;QAC/C,MAAM,EAAE,CAAC,UAAU,CAAC;QACpB,MAAJ,EAAA,CAAa,yHAAb,CAAA;QACI,IAAI,EAAE;YACF,KAAK,EAAE,aAAa;YACpB,IAAI,EAAE,OAAO;YACb,8BAA8B,EAAE,UAAU;YAC1C,sBAAsB,EAAE,qBAAqB;YAC7C,wBAAwB,EAAE,UAAU;SACvC;KACJ,CAAC;CACF,EAAa,UAAU,CAMtB,CAND;;ADVA;;;;AAIA,IAAI,gBAAgB,GAAG,CAAC,CAAC;;AAGzB,AAAA,MAAa,uBAAuB,CAApC;IACI,WAAJ;;IAEe,MAAgB;;IAEhB,WAAf,GAA6B,KAAK,EAAlC;QAFe,IAAf,CAAA,MAAqB,GAAN,MAAM,CAAU;QAEhB,IAAf,CAAA,WAA0B,GAAX,WAAW,CAAQ;KAC7B;CACJ;;;;AAeD,AAAA,MAAa,0BAA0B,GACnC,IAAI,cAAc,CAA2B,4BAA4B,CAAC,CAAC;;;;AAwB/E,AAAA,IAAa,QAAQ,GAArB,MAAa,QAAQ,CAArB;IA+CI,WAAJ,CACyB,QAAoB,EACpB,kBAAqC,EACW,OAAiC,EAC7E,KAAiB,EAJ9C;QACyB,IAAzB,CAAA,QAAiC,GAAR,QAAQ,CAAY;QACpB,IAAzB,CAAA,kBAA2C,GAAlB,kBAAkB,CAAmB;QACW,IAAzE,CAAA,OAAgF,GAAP,OAAO,CAA0B;QAC7E,IAA7B,CAAA,KAAkC,GAAL,KAAK,CAAY;;;QAfvB,IAAvB,CAAA,iBAAwC,GAAG,IAAI,YAAY,EAA2B,CAAC;;QAG1E,IAAb,CAAA,aAA0B,GAAG,IAAI,OAAO,EAAQ,CAAC;QAErC,IAAZ,CAAA,SAAqB,GAAG,KAAK,CAAC;QAClB,IAAZ,CAAA,OAAmB,GAAG,KAAK,CAAC;QAChB,IAAZ,CAAA,SAAqB,GAAG,KAAK,CAAC;QACT,IAArB,CAAA,GAAwB,GAAG,CAA3B,UAAA,EAAwC,gBAAgB,EAAE,CAA1D,CAA4D,CAAC;QACjD,IAAZ,CAAA,oBAAgC,GAAG,EAAE,CAAC;KAOjC;;IAlDD,IAAI,QAAQ,GAAhB;QACQ,OAAO,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;KAChD;;IAGD,IAAI,EAAE,GAAV;QACQ,OAAO,IAAI,CAAC,GAAG,CAAC;KACnB;;IAGD,IAAI,QAAQ,GAAhB;QACQ,OAAO,IAAI,CAAC,SAAS,CAAC;KACzB;;IAOD,IAAI,QAAQ,GAAhB;QACQ,OAAO,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,KAAK,IAAI,CAAC,SAAS,CAAC;KAChE;IAED,IAAI,QAAQ,CAAC,KAAU,EAA3B;QACQ,IAAI,CAAC,SAAS,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;KACjD;;IAGD,IAAI,aAAa,GAArB;QACQ,OAAO,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;KACrD;;;;;;;IA4BD,IAAI,MAAM,GAAd;QACQ,OAAO,IAAI,CAAC,OAAO,CAAC;KACvB;;;;;IAMD,IAAI,SAAS,GAAjB;;QAEQ,OAAO,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,WAAW,IAAI,EAAE,EAAE,IAAI,EAAE,CAAC;KAC5D;;IAGD,MAAM,GAAV;QACQ,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;YACvC,IAAI,CAAC,yBAAyB,EAAE,CAAC;SACpC;KACJ;;IAGD,QAAQ,GAAZ;QACQ,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;YACvC,IAAI,CAAC,yBAAyB,EAAE,CAAC;SACpC;KACJ;;IAGD,KAAK,GAAT;QACQ,MAAM,OAAO,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QAEvC,IAAI,OAAO,OAAO,CAAC,KAAK,KAAK,UAAU,EAAE;YACrC,OAAO,CAAC,KAAK,EAAE,CAAC;SACnB;KACJ;;;;;;IAOD,eAAe,GAAnB;QACQ,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACf,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;SAC1C;KACJ;;;;;;IAOD,iBAAiB,GAArB;QACQ,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;SAC1C;KACJ;;IAGD,QAAQ,GAAZ;QACQ,OAAO,IAAI,CAAC,SAAS,CAAC;KACzB;;IAGD,cAAc,CAAC,KAAoB,EAAvC;;QAEQ,IAAI,KAAK,CAAC,OAAO,KAAK,KAAK,IAAI,KAAK,CAAC,OAAO,KAAK,KAAK,EAAE;YACpD,IAAI,CAAC,qBAAqB,EAAE,CAAC;;YAG7B,KAAK,CAAC,cAAc,EAAE,CAAC;SAC1B;KACJ;;;;;IAMD,qBAAqB,GAAzB;QACQ,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAChB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACxD,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;YACvC,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC;SACxC;KACJ;;IAGD,YAAY,GAAhB;QACQ,OAAO,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,GAAG,CAAC;KACrC;;IAGD,eAAe,GAAnB;QACQ,OAAO,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC;KACtC;IAED,kBAAkB,GAAtB;;;;;;QAMQ,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAEjC,IAAI,SAAS,KAAK,IAAI,CAAC,oBAAoB,EAAE;gBACzC,IAAI,CAAC,oBAAoB,GAAG,SAAS,CAAC;gBACtC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;aAC7B;SACJ;KACJ;IAED,WAAW,GAAf;QACQ,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;KACjC;;IAGO,yBAAyB,CAAC,WAAW,GAAG,KAAK,EAAzD;QACQ,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,uBAAuB,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC;KAC/E;CACJ,CAAA;AAzKYA,UAAb,CAAA;IAAK,KAAK,EAAE;;CAAZ,EAAA,QAAA,CAAA,SAAA,EAAA,OAAA,EAAA,KAAA,CAAA,CAAwB,CAAxB;AAIIA,UAAJ,CAAA;IADK,KAAK,EAAE;;;CAGZ,EAAA,QAAA,CAAA,SAAA,EAAA,UAAA,EAAA,IAAA,CAAK,CAAL;AAacA,UAAd,CAAA;IAAK,MAAM,EAAE;;CAAb,EAAA,QAAA,CAAA,SAAA,EAAA,mBAAA,EAAA,KAAA,CAAA,CAAuF,CAAvF;AApCa,QAAQ,GAArBA,UAAA,CAAA;IAnBC,SAAS,CAAC;QACP,QAAQ,EAAE,WAAW;QACrB,QAAQ,EAAE,UAAU;QACpB,IAAI,EAAE;YACF,iBAAiB,EAAE,gBAAgB;YACnC,qBAAqB,EAAE,UAAU;YACjC,4BAA4B,EAAE,UAAU;YACxC,mBAAmB,EAAE,QAAQ;YAC7B,MAAM,EAAE,IAAI;YACZ,qBAAqB,EAAE,UAAU;YACjC,SAAS,EAAE,yBAAyB;YACpC,WAAW,EAAE,wBAAwB;YACrC,KAAK,EAAE,WAAW;SACrB;QACD,MAAJ,EAAA,CAAa,qaAAb,CAAA;QACI,QAAJ,EAAA,2LAAA;QACI,aAAa,EAAE,iBAAiB,CAAC,IAAI;QACrC,eAAe,EAAE,uBAAuB,CAAC,MAAM;KAClD,CAAC;IAmDOE,OAAT,CAAA,CAAA,EAAS,QAAQ,EAAE,CAAA,EAAEA,OAArB,CAAA,CAAA,EAAqB,MAAM,CAAC,0BAA0B,CAAC,CAAA;IAC9CA,OAAT,CAAA,CAAA,EAAS,QAAQ,EAAE,CAAA;IAHnBD,UAAA,CAAA,mBAAA,EAAA,CAAmC,UAAU;QACA,iBAAiB,EAA9D,MAAA,EAEoC,UAAU,CAF9C,CAAA;CAjDA,EAAa,QAAQ,CA0LpB,CA1LD;AAAA,AA4LA;;;;;;;AAOA,AAAA,SAAgB,6BAA6B,CACzC,WAAmB,EAAE,OAA4B,EACjD,YAAmC,EAFvC;IAKI,IAAI,YAAY,CAAC,MAAM,EAAE;QACrB,MAAM,YAAY,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC;QACvC,MAAM,MAAM,GAAG,YAAY,CAAC,OAAO,EAAE,CAAC;QAEtC,IAAI,YAAY,GAAG,CAAC,CAAC;QAErB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACtC,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,MAAM,CAAC,YAAY,CAAC,EAAE;gBACzE,YAAY,EAAE,CAAC;aAClB;SACJ;QAED,OAAO,YAAY,CAAC;KACvB;IAED,OAAO,CAAC,CAAC;CACZ;;;;;;;;;AAUD,AAAA,SAAgB,wBAAwB,CACpC,WAAmB,EACnB,YAAoB,EACpB,qBAA6B,EAC7B,WAAmB,EAJvB;IAMI,MAAM,YAAY,GAAG,WAAW,GAAG,YAAY,CAAC;IAEhD,IAAI,YAAY,GAAG,qBAAqB,EAAE;QAAE,OAAO,YAAY,CAAC;KAAE;IAElE,IAAI,YAAY,GAAG,YAAY,GAAG,qBAAqB,GAAG,WAAW,EAAE;QACnE,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,YAAY,GAAG,WAAW,GAAG,YAAY,CAAC,CAAC;KACjE;IAED,OAAO,qBAAqB,CAAC;CAChC;;ADhTD,IAAa,cAAc,GAA3B,MAAa,cAAc,CAA3B;CAA8B,CAAA;AAAjB,cAAc,GAA3BD,UAAA,CAAA;IALC,QAAQ,CAAC;QACN,OAAO,EAAE,CAAC,YAAY,EAAE,sBAAsB,CAAC;QAC/C,OAAO,EAAE,CAAC,QAAQ,EAAE,UAAU,CAAC;QAC/B,YAAY,EAAE,CAAC,QAAQ,EAAE,UAAU,CAAC;KACvC,CAAC;CACF,EAAa,cAAc,CAAG,CAA9B;;ADXA;AACA,AAAA,MAAa,uBAAuB,GAChC,IAAI,cAAc,CAAe,yBAAyB,CAAC;;ADK/D,MAAa,aAAa,GAA8B,OAAO,CAAC,eAAe,EAAE;IAC7E,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;IACpC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;IACpC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;IACrC,UAAU,CAAC,WAAW,EAAE,OAAO,CAAC,sCAAsC,CAAC,CAAC;IACxE,UAAU,CAAC,WAAW,EAAE,OAAO,CAAC,oCAAoC,CAAC,CAAC;CACzE,CAAC;;ADbF,MAAa,YAAY,GAA8C;IACnE,GAAG,EAAW;QACV,OAAO,EAAG,QAAQ;QAClB,OAAO,EAAG,KAAK;QACf,QAAQ,EAAE,QAAQ;QAClB,QAAQ,EAAE,QAAQ;KACrB;IACD,SAAS,EAAK;QACV,OAAO,EAAG,QAAQ;QAClB,OAAO,EAAG,KAAK;QACf,QAAQ,EAAE,QAAQ;QAClB,QAAQ,EAAE,QAAQ;QAClB,OAAO,EAAG,SAAS;QACnB,OAAO,EAAG,SAAS;KACtB;IACD,OAAO,EAAO;QACV,OAAO,EAAG,OAAO;QACjB,OAAO,EAAG,KAAK;QACf,QAAQ,EAAE,OAAO;QACjB,QAAQ,EAAE,QAAQ;QAClB,OAAO,EAAG,SAAS;QACnB,OAAO,EAAG,SAAS;KACtB;IACD,QAAQ,EAAM;QACV,OAAO,EAAG,KAAK;QACf,OAAO,EAAG,KAAK;QACf,QAAQ,EAAE,KAAK;QACf,QAAQ,EAAE,QAAQ;QAClB,OAAO,EAAG,SAAS;QACnB,OAAO,EAAG,SAAS;KACtB;IACD,KAAK,EAAS;QACV,OAAO,EAAG,KAAK;QACf,OAAO,EAAG,QAAQ;QAClB,QAAQ,EAAE,OAAO;QACjB,QAAQ,EAAE,QAAQ;KACrB;IACD,QAAQ,EAAM;QACV,OAAO,EAAG,KAAK;QACf,OAAO,EAAG,KAAK;QACf,QAAQ,EAAE,OAAO;QACjB,QAAQ,EAAE,KAAK;QACf,OAAO,EAAG,SAAS;QACnB,OAAO,EAAG,SAAS;KACtB;IACD,WAAW,EAAG;QACV,OAAO,EAAG,KAAK;QACf,OAAO,EAAG,QAAQ;QAClB,QAAQ,EAAE,OAAO;QACjB,QAAQ,EAAE,QAAQ;QAClB,OAAO,EAAG,SAAS;QACnB,OAAO,EAAG,SAAS;KACtB;IACD,MAAM,EAAQ;QACV,OAAO,EAAG,QAAQ;QAClB,OAAO,EAAG,QAAQ;QAClB,QAAQ,EAAE,QAAQ;QAClB,QAAQ,EAAE,KAAK;KAClB;IACD,YAAY,EAAE;QACV,OAAO,EAAG,QAAQ;QAClB,OAAO,EAAG,QAAQ;QAClB,QAAQ,EAAE,QAAQ;QAClB,QAAQ,EAAE,KAAK;KAClB;IACD,UAAU,EAAI;QACV,OAAO,EAAG,OAAO;QACjB,OAAO,EAAG,QAAQ;QAClB,QAAQ,EAAE,OAAO;QACjB,QAAQ,EAAE,KAAK;KAClB;IACD,WAAW,EAAG;QACV,OAAO,EAAG,KAAK;QACf,OAAO,EAAG,QAAQ;QAClB,QAAQ,EAAE,KAAK;QACf,QAAQ,EAAE,KAAK;KAClB;IACD,IAAI,EAAU;QACV,OAAO,EAAG,OAAO;QACjB,OAAO,EAAG,QAAQ;QAClB,QAAQ,EAAE,KAAK;QACf,QAAQ,EAAE,QAAQ;KACrB;IACD,OAAO,EAAO;QACV,OAAO,EAAG,OAAO;QACjB,OAAO,EAAG,KAAK;QACf,QAAQ,EAAE,KAAK;QACf,QAAQ,EAAE,KAAK;KAClB;IACD,UAAU,EAAI;QACV,OAAO,EAAG,OAAO;QACjB,OAAO,EAAG,QAAQ;QAClB,QAAQ,EAAE,KAAK;QACf,QAAQ,EAAE,QAAQ;KACrB;CACJ,CAAC;AAEF,AAAA,MAAa,mBAAmB,GAAG,aAAa,CAAC;IAC7C,YAAY,CAAC,GAAG,EAAE,YAAY,CAAC,KAAK,EAAE,YAAY,CAAC,MAAM,EAAE,YAAY,CAAC,IAAI;CAC/E,CAAC,CAAC;AAEH,SAAS,QAAQ,CAAO,KAAU,EAAE,QAAiD,EAArF;IACI,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;IACf,MAAM,MAAM,GAAG,KAAK,IAAI,IAAI,GAAG,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC;IAChD,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;IAE7B,OAAO,EAAE,KAAK,GAAG,MAAM,EAAE;QACrB,MAAM,CAAE,KAAK,CAAE,GAAG,QAAQ,CAAC,KAAK,CAAE,KAAK,CAAE,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;KAC5D;IAED,OAAO,MAAM,CAAC;CACjB;AACD,SAAS,UAAU,CAAI,MAAkC,EAAE,KAAe,EAA1E;IACI,OAAO,QAAQ,CAAC,KAAK,EAAG,CAAC,GAAG,KAAhC;QACQ,OAAO,MAAM,CAAE,GAAG,CAAE,CAAC;KACxB,CAAC,CAAC;CACN;AACD,SAAS,aAAa,CAAI,MAAkC,EAA5D;IACI,OAAO,MAAM,IAAI,IAAI,GAAG,EAAE,GAAG,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;CACxE;;AD1HD;;GAEG;;;;"}