{"version":3,"file":"core.js","sources":["../../../packages/mosaic/core/formatters/index.ts","../../../packages/mosaic/core/formatters/number/formatter.ts","../../../packages/mosaic/core/highlight/index.ts","../../../packages/mosaic/core/highlight/highlight.pipe.ts","../../../packages/mosaic/core/select/animations.ts","../../../packages/mosaic/core/select/constants.ts","../../../packages/mosaic/core/select/errors.ts","../../../packages/mosaic/core/select/events.ts","../../../packages/mosaic/core/overlay/overlay-position-map.ts","../../../packages/mosaic/core/animation/animation.ts","../../../packages/mosaic/core/animation/fade-animations.ts","../../../packages/mosaic/core/label/label-options.ts","../../../packages/mosaic/core/option/index.ts","../../../packages/mosaic/core/option/option.ts","../../../packages/mosaic/core/option/optgroup.ts","../../../packages/mosaic/core/services/measure-scrollbar.service.ts","../../../packages/mosaic/core/selection/index.ts","../../../packages/mosaic/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../../packages/mosaic/core/error/error-options.ts","../../../packages/mosaic/core/line/line.ts","../../../packages/mosaic/core/common-behaviors/error-state.ts","../../../packages/mosaic/core/common-behaviors/tabindex.ts","../../../packages/mosaic/core/common-behaviors/color.ts","../../../packages/mosaic/core/common-behaviors/disabled.ts","../../../packages/mosaic/core/common-behaviors/common-module.ts","../../../packages/mosaic/core/utils/utils.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\n\nimport { McDecimalPipe } from './number/formatter';\n\n\n@NgModule({\n    exports: [\n        McDecimalPipe\n    ],\n    declarations: [\n        McDecimalPipe\n    ]\n})\nexport class McFormattersModule {}\n\n\nexport * from './number/formatter';\n","/* tslint:disable:naming-convention */\nimport { Inject, Injectable, InjectionToken, Optional, Pipe, PipeTransform } from '@angular/core';\n\n\nexport const MC_LOCALE_ID = new InjectionToken<string>('McLocaleId');\n\nexport const DEFAULT_MC_LOCALE_ID = 'ru';\n\n\nfunction isEmpty(value: any): boolean {\n    return value == null || value === '' || value !== value;\n}\n\nfunction strToNumber(value: number | string): number {\n    if (typeof value === 'string' && !isNaN(Number(value) - parseFloat(value))) {\n        return Number(value);\n    }\n\n    if (typeof value !== 'number') {\n        throw new Error(`${value} is not a number`);\n    }\n\n    return value;\n}\n\nexport const NUMBER_FORMAT_REGEXP = /^(\\d+)?\\.((\\d+)(-(\\d+))?)?$/;\n\nconst minIntGroupPosition = 1;\nconst minFractionGroupPosition = 3;\nconst maxFractionGroupPosition = 5;\n\ninterface NumberFormatOptions {\n    useGrouping: boolean;\n\n    minimumIntegerDigits: number;\n    minimumFractionDigits: number;\n    maximumFractionDigits: number;\n    minimumSignificantDigits: number;\n    maximumSignificantDigits: number;\n\n    localeMatcher?: string;\n    style?: string;\n\n    currency?: string;\n    currencyDisplay?: string;\n}\n\nclass ParsedDigitsInfo {\n    minimumIntegerDigits: number;\n    minimumFractionDigits: number;\n    maximumFractionDigits: number;\n}\n\nfunction parseDigitsInfo(digitsInfo: string): ParsedDigitsInfo {\n    const parts = digitsInfo.match(NUMBER_FORMAT_REGEXP);\n\n    if (parts === null) {\n        throw new Error(`${digitsInfo} is not a valid digit info`);\n    }\n\n    const minIntPart = parts[minIntGroupPosition];\n    const minFractionPart = parts[minFractionGroupPosition];\n    const maxFractionPart = parts[maxFractionGroupPosition];\n\n    const result = new ParsedDigitsInfo();\n\n    if (minIntPart != null) {\n        result.minimumIntegerDigits = parseInt(minIntPart);\n    }\n\n    if (minFractionPart != null) {\n        result.minimumFractionDigits = parseInt(minFractionPart);\n    }\n\n    if (maxFractionPart != null) {\n        result.maximumFractionDigits = parseInt(maxFractionPart);\n    } else if (minFractionPart != null && result.minimumFractionDigits > result.maximumFractionDigits) {\n        result.maximumFractionDigits = result.minimumFractionDigits;\n    }\n\n    return result;\n}\n\n\n@Injectable({ providedIn: 'root' })\n@Pipe({name: 'mcNumber'})\nexport class McDecimalPipe implements PipeTransform {\n    constructor(@Optional() @Inject(MC_LOCALE_ID) private _locale: string) {}\n\n    /**\n     * @param value The number to be formatted.\n     * @param digitsInfo Decimal representation options, specified by a string\n     * in the following format:<br>\n     * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.\n     *   - `minIntegerDigits`: The minimum number of integer digits before the decimal point.\n     * Default is `1`.\n     *   - `minFractionDigits`: The minimum number of digits after the decimal point.\n     * Default is `0`.\n     *   - `maxFractionDigits`: The maximum number of digits after the decimal point.\n     * Default is `3`.\n     * @param locale A locale code for the locale format rules to use.\n     * When not supplied, uses the value of `MC_LOCALE_ID`, which is `ru` by default.\n     */\n    transform(value: any, digitsInfo?: string, locale?: string): string | null {\n        if (isEmpty(value)) { return null; }\n\n        const currentLocale = locale || this._locale || DEFAULT_MC_LOCALE_ID;\n\n        let parsedDigitsInfo;\n\n        if (digitsInfo) {\n            parsedDigitsInfo = parseDigitsInfo(digitsInfo);\n        }\n\n        const options: NumberFormatOptions = {\n            useGrouping: true,\n            minimumIntegerDigits: 1,\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 3,\n            ...parsedDigitsInfo\n        };\n\n        try {\n            const num = strToNumber(value);\n\n            return Intl.NumberFormat.call(this, currentLocale, options).format(num);\n        } catch (error) {\n            throw Error(`InvalidPipeArgument: McDecimalPipe for pipe '${JSON.stringify(error.message)}'`);\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McHighlightPipe } from './highlight.pipe';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McHighlightPipe],\n    declarations: [McHighlightPipe]\n})\nexport class McHighlightModule {}\n\n\nexport * from './highlight.pipe';\n","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({ name: 'mcHighlight' })\nexport class McHighlightPipe implements PipeTransform {\n    transform(value: any, args: any): any {\n        if (!args) { return value; }\n\n        return value.replace(new RegExp(`(${args})`, 'gi'), '<mark class=\"mc-highlight\">$1</mark>');\n    }\n}\n","import {\n    animate,\n    AnimationTriggerMetadata,\n    state,\n    style,\n    transition,\n    trigger,\n    query,\n    animateChild,\n    group\n} from '@angular/animations';\n\n\n/**\n * The following are all the animations for the mc-select component, with each\n * const containing the metadata for one animation.\n *\n */\nexport const mcSelectAnimations: {\n    readonly transformPanel: AnimationTriggerMetadata;\n    readonly fadeInContent: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        transition('void => *', group([\n            query('@fadeInContent', animateChild()),\n            animate('150ms cubic-bezier(0.25, 0.8, 0.25, 1)')\n        ])),\n        transition('* => void', [\n            animate('250ms 100ms linear', style({ opacity: 0 }))\n        ])\n    ]),\n\n    /**\n     * This animation fades in the background color and text content of the\n     * select's options. It is time delayed to occur 100ms after the overlay\n     * panel has transformed in.\n     */\n    fadeInContent: trigger('fadeInContent', [\n        state('showing', style({ opacity: 1 })),\n        transition('void => showing', [\n            style({ opacity: 0 }),\n            animate('150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const transformPanel = mcSelectAnimations.transformPanel;\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const fadeInContent = mcSelectAnimations.fadeInContent;\n","import { InjectionToken } from '@angular/core';\nimport { ScrollStrategy, Overlay, RepositionScrollStrategy } from '@angular/cdk/overlay';\n\n\n/** The max height of the select's overlay panel */\nexport const SELECT_PANEL_MAX_HEIGHT = 224;\n\n/** The panel's padding on the x-axis */\nexport const SELECT_PANEL_PADDING_X = 1;\n\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\n/* tslint:disable-next-line:no-magic-numbers */\nexport const SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nexport const SELECT_PANEL_VIEWPORT_PADDING = 8;\n\n\n/** Injection token that determines the scroll handling while a select is open. */\nexport const MC_SELECT_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('mc-select-scroll-strategy');\n\n/** @docs-private */\nexport function mcSelectScrollStrategyProviderFactory(overlay: Overlay):\n    () => RepositionScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MC_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: mcSelectScrollStrategyProviderFactory\n};\n","/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nexport function getMcSelectDynamicMultipleError(): Error {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nexport function getMcSelectNonArrayValueError(): Error {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nexport function getMcSelectNonFunctionValueError(): Error {\n    return Error('`compareWith` must be a function.');\n}\n","export const selectEvents = 'selectEvents';\n","import { ConnectionPositionPair } from '@angular/cdk/overlay';\n\n\nexport const POSITION_MAP: { [key: string]: ConnectionPositionPair } = {\n    top         : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom'\n    },\n    topCenter   : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom'\n    },\n    topLeft     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'bottom'\n    },\n    topRight    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    },\n    right       : {\n        originX : 'end',\n        originY : 'center',\n        overlayX: 'start',\n        overlayY: 'center'\n    },\n    rightTop    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    rightBottom : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'bottom'\n    },\n    bottom      : {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomCenter: {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomLeft  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    bottomRight : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    left        : {\n        originX : 'start',\n        originY : 'center',\n        overlayX: 'end',\n        overlayY: 'center'\n    },\n    leftTop     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    leftBottom  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    }\n};\n\nexport const DEFAULT_4_POSITIONS = objectValues([\n    POSITION_MAP.top, POSITION_MAP.right, POSITION_MAP.bottom, POSITION_MAP.left\n]);\n\nexport const EXTENDED_OVERLAY_POSITIONS = objectValues([\n    POSITION_MAP.top, POSITION_MAP.topLeft, POSITION_MAP.topRight, POSITION_MAP.right, POSITION_MAP.rightTop,\n    POSITION_MAP.rightBottom, POSITION_MAP.bottom, POSITION_MAP.bottomLeft, POSITION_MAP.bottomRight,\n    POSITION_MAP.left, POSITION_MAP.leftTop, POSITION_MAP.leftBottom\n]);\n\nexport const POSITION_TO_CSS_MAP: {[key: string]: string} = {\n    top: 'top',\n    topLeft: 'top-left',\n    topRight: 'top-right',\n    right: 'right',\n    rightTop: 'right-top',\n    rightBottom: 'right-bottom',\n    left: 'left',\n    leftTop: 'left-top',\n    leftBottom: 'left-bottom',\n    bottom: 'bottom',\n    bottomLeft: 'bottom-left',\n    bottomRight: 'bottom-right'\n};\n\nfunction arrayMap<T, S>(array: T[], iteratee: (item: T, index: number, arr: T[]) => S): S[] {\n    let index = -1;\n    const length = array == null ? 0 : array.length;\n    const result = Array(length);\n\n    while (++index < length) {\n        result[ index ] = iteratee(array[ index ], index, array);\n    }\n\n    return result;\n}\nfunction baseValues<T>(object: { [key: string]: T } | T[], props: string[]): T[] {\n    return arrayMap(props,  (key) => {\n        return object[ key ];\n    });\n}\nfunction objectValues<T>(object: { [key: string]: T } | T[]): T[] {\n    return object == null ? [] : baseValues(object, Object.keys(object));\n}\n","export enum AnimationCurves {\n    StandardCurve = 'cubic-bezier(0.4,0.0,0.2,1)',\n    DecelerationCurve = 'cubic-bezier(0.0,0.0,0.2,1)',\n    AccelerationCurve = 'cubic-bezier(0.4,0.0,1,1)',\n    SharpCurve = 'cubic-bezier(0.4,0.0,0.6,1)'\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\nexport const fadeAnimation: AnimationTriggerMetadata =  trigger('fadeAnimation', [\n    state('void', style({ opacity: 0 })),\n    state('true', style({ opacity: 1 })),\n    state('false', style({ opacity: 0 })),\n    transition('* => true', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n    transition('* => void', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)'))\n]);\n","import { InjectionToken } from '@angular/core';\n\n\n/** InjectionToken that can be used to specify the global label options. */\nexport const MC_LABEL_GLOBAL_OPTIONS =\n    new InjectionToken<LabelOptions>('mc-label-global-options');\n\n/** Type for the available floatLabel values. */\nexport type FloatLabelType = 'always' | 'never' | 'auto';\n\n/** Configurable options for floating labels. */\nexport interface LabelOptions {\n    /**\n     * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n     * Default behavior is assumed to be `auto`.\n     */\n    float?: FloatLabelType;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McPseudoCheckboxModule } from '../selection/index';\n\nimport { McOptgroup } from './optgroup';\nimport { McOption } from './option';\n\n\n@NgModule({\n    imports: [CommonModule, McPseudoCheckboxModule],\n    exports: [McOption, McOptgroup],\n    declarations: [McOption, McOptgroup]\n})\nexport class McOptionModule {}\n\n\nexport * from './option';\nexport * from './optgroup';\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ENTER, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Subject } from 'rxjs';\n\nimport { McOptgroup } from './optgroup';\n\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet uniqueIdCounter = 0;\n\n/** Event object emitted by McOption when selected or deselected. */\nexport class McOptionSelectionChange {\n    constructor(public source: McOption, public isUserInput = false) {}\n}\n\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * @docs-private\n */\n// tslint:disable-next-line: naming-convention\nexport interface McOptionParentComponent {\n    multiple?: boolean;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_OPTION_PARENT_COMPONENT =\n    new InjectionToken<McOptionParentComponent>('MC_OPTION_PARENT_COMPONENT');\n\n/**\n * Single option inside of a `<mc-select>` element.\n */\n@Component({\n    selector: 'mc-option',\n    exportAs: 'mcOption',\n    host: {\n        '[attr.tabindex]': 'getTabIndex()',\n        class: 'mc-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-option-multiple]': 'multiple',\n        '[class.mc-active]': 'active',\n        '[class.mc-disabled]': 'disabled',\n        '[id]': 'id',\n\n        '(click)': 'selectViaInteraction()',\n        '(keydown)': 'handleKeydown($event)'\n    },\n    styleUrls: ['./option.css'],\n    templateUrl: './option.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McOption implements AfterViewChecked, OnDestroy {\n    /** The form value of the option. */\n    @Input() value: any;\n\n    /** Event emitted when the option is selected or deselected. */\n    // tslint:disable-next-line:no-output-on-prefix\n    @Output() readonly onSelectionChange = new EventEmitter<McOptionSelectionChange>();\n\n    /** Emits when the state of the option changes and any parents have to be notified. */\n    readonly stateChanges = new Subject<void>();\n\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue(): string {\n        // TODO: Add input property alternative for node envs.\n        return (this.getHostElement().textContent || '').trim();\n    }\n\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n        return this.parent && this.parent.multiple;\n    }\n\n    get id(): string {\n        return this._id;\n    }\n\n    private _id = `mc-option-${uniqueIdCounter++}`;\n\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    private _selected = false;\n\n    @Input()\n    get disabled() {\n        return (this.group && this.group.disabled) || this._disabled;\n    }\n\n    set disabled(value: any) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    private _disabled = false;\n\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active(): boolean {\n        return this._active;\n    }\n\n    private _active = false;\n\n    private mostRecentViewValue = '';\n\n    constructor(\n        private readonly element: ElementRef,\n        private readonly changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_OPTION_PARENT_COMPONENT) private readonly parent: McOptionParentComponent,\n        @Optional() readonly group: McOptgroup\n    ) {}\n\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mc-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n\n            if (viewValue !== this.mostRecentViewValue) {\n                this.mostRecentViewValue = viewValue;\n                this.stateChanges.next();\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n    }\n\n    getHeight(): number {\n        // tslint:disable-next-line:naming-convention\n        const DOMRect: DOMRect = this.element.nativeElement.getClientRects()[0];\n\n        return DOMRect ? DOMRect.height : 0;\n    }\n\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent();\n        }\n    }\n\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent();\n        }\n    }\n\n    focus(): void {\n        const element = this.getHostElement();\n\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles(): void {\n        if (!this._active) {\n            this._active = true;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles(): void {\n        if (this._active) {\n            this._active = false;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        return this.viewValue;\n    }\n\n    /** Ensures the option is selected when activated from the keyboard. */\n    handleKeydown(event: KeyboardEvent): void {\n        // tslint:disable-next-line\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\n            this.selectViaInteraction();\n\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    selectViaInteraction(): void {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent(true);\n        }\n    }\n\n    getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    getHostElement(): HTMLElement {\n        return this.element.nativeElement;\n    }\n\n    /** Emits the selection change event. */\n    private emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McOptionSelectionChange(this, isUserInput));\n    }\n}\n\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nexport function countGroupLabelsBeforeOption(\n    optionIndex: number,\n    options: QueryList<McOption>,\n    optionGroups: QueryList<McOptgroup>\n): number {\n\n    if (optionGroups.length) {\n        const optionsArray = options.toArray();\n        const groups = optionGroups.toArray();\n\n        let groupCounter = 0;\n\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n\n        return groupCounter;\n    }\n\n    return 0;\n}\n\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionIndex Index of the option to be scrolled into the view.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nexport function getOptionScrollPosition(\n    optionIndex: number,\n    optionHeight: number,\n    currentScrollPosition: number,\n    panelHeight: number\n): number {\n    const optionOffset = optionIndex * optionHeight;\n\n    if (optionOffset < currentScrollPosition) { return optionOffset; }\n\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n\n    return currentScrollPosition;\n}\n\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\nimport { mixinDisabled, CanDisable, CanDisableCtor } from '../common-behaviors/index';\n\n\n// Boilerplate for applying mixins to McOptgroup.\n/** @docs-private */\nexport class McOptgroupBase {}\n\nexport const McOptgroupMixinBase: CanDisableCtor & typeof McOptgroupBase = mixinDisabled(McOptgroupBase);\n\n// Counter for unique group ids.\nlet uniqueOptgroupIdCounter = 0;\n\n/**\n * Component that is used to group instances of `mc-option`.\n */\n@Component({\n    selector: 'mc-optgroup',\n    exportAs: 'mcOptgroup',\n    templateUrl: 'optgroup.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    styleUrls: ['optgroup.css'],\n    host: {\n        class: 'mc-optgroup',\n        role: 'group',\n        '[class.mc-optgroup-disabled]': 'disabled',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-labelledby]': 'labelId'\n    }\n})\nexport class McOptgroup extends McOptgroupMixinBase implements CanDisable {\n    /** Label for the option group. */\n    @Input() label: string;\n\n    /** Unique id for the underlying label. */\n    labelId: string = `mc-optgroup-label-${uniqueOptgroupIdCounter++}`;\n}\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class McMeasureScrollbarService {\n\n    get scrollBarWidth(): number {\n        if (this._scrollbarWidth) {\n            return this._scrollbarWidth;\n        }\n        this.initScrollBarWidth();\n\n        return this._scrollbarWidth;\n    }\n\n    private _scrollbarWidth: number;\n    private scrollbarMeasure = {\n        position: 'absolute',\n        top: '-9999px',\n        width: '50px',\n        height: '50px',\n        overflow: 'scroll'\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private document: any\n    ) {\n        this.initScrollBarWidth();\n    }\n\n    initScrollBarWidth() {\n        const scrollDiv = this.document.createElement('div');\n\n        // tslint:disable-next-line\n        for (const scrollProp in this.scrollbarMeasure) {\n            if (this.scrollbarMeasure.hasOwnProperty(scrollProp)) {\n                scrollDiv.style[scrollProp] = this.scrollbarMeasure[scrollProp];\n            }\n        }\n\n        this.document.body.appendChild(scrollDiv);\n\n        const width = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n        this.document.body.removeChild(scrollDiv);\n        this._scrollbarWidth = width;\n    }\n}\n","import { NgModule } from '@angular/core';\n\nimport { McPseudoCheckbox } from './pseudo-checkbox/pseudo-checkbox';\n\n\n@NgModule({\n    exports: [McPseudoCheckbox],\n    declarations: [McPseudoCheckbox]\n})\nexport class McPseudoCheckboxModule {}\n\n\nexport * from './pseudo-checkbox/pseudo-checkbox';\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\n\nexport type McPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mc-primary .mc-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mc-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n@Component({\n    selector: 'mc-pseudo-checkbox',\n    templateUrl: 'pseudo-checkbox.partial.html',\n    styleUrls: ['pseudo-checkbox.css'],\n    host: {\n        class: 'mc-pseudo-checkbox',\n        '[class.mc-indeterminate]': 'state === \"indeterminate\"',\n        '[class.mc-checked]': 'state === \"checked\"',\n        '[class.mc-disabled]': 'disabled'\n    },\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McPseudoCheckbox {\n    @Input() state: McPseudoCheckboxState = 'unchecked';\n\n    @Input() disabled: boolean = false;\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroupDirective, NgForm, FormControl } from '@angular/forms';\n\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n@Injectable()\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\n\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n@Injectable({ providedIn: 'root' })\nexport class ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\n","import { NgModule, Directive, ElementRef, QueryList } from '@angular/core';\n\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(McLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({\n    selector: '[mc-line], [mcLine]',\n    host: { class: 'mc-line' }\n})\nexport class McLine {}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nexport class McLineSetter {\n    constructor(private _lines: QueryList<McLine>, private _element: ElementRef) {\n        this._setLineClass(this._lines.length);\n\n        this._lines.changes.subscribe(() => {\n            this._setLineClass(this._lines.length);\n        });\n    }\n\n    private _setLineClass(count: number): void {\n        this._resetClasses();\n        if (count === 2 || count === 3) {\n            this._setClass(`mc-${count}-line`, true);\n        } else if (count > 3) {\n            this._setClass(`mc-multi-line`, true);\n        }\n    }\n\n    private _resetClasses(): void {\n        this._setClass('mc-2-line', false);\n        this._setClass('mc-3-line', false);\n        this._setClass('mc-multi-line', false);\n    }\n\n    private _setClass(className: string, isAdd: boolean): void {\n        if (isAdd) {\n            this._element.nativeElement.classList.add(className);\n        } else {\n            this._element.nativeElement.classList.remove(className);\n        }\n    }\n}\n\n@NgModule({\n    imports: [],\n    exports: [McLine],\n    declarations: [McLine]\n})\nexport class McLineModule {}\n","import { FormControl, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\nimport { ErrorStateMatcher } from '../error/error-options';\n\nimport { Constructor } from './constructor';\n\n\n/** @docs-private */\nexport interface CanUpdateErrorState {\n\n    readonly stateChanges: Subject<void>;\n\n    errorState: boolean;\n    errorStateMatcher: ErrorStateMatcher;\n\n    updateErrorState();\n}\n\n/** @docs-private */\nexport type CanUpdateErrorStateCtor = Constructor<CanUpdateErrorState>;\n\n/** @docs-private */\nexport interface HasErrorState {\n    parentFormGroup: FormGroupDirective;\n    parentForm: NgForm;\n    defaultErrorStateMatcher: ErrorStateMatcher;\n    ngControl: NgControl;\n}\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T): CanUpdateErrorStateCtor & T {\n    return class extends base {\n        /** Whether the component is in an error state. */\n        errorState: boolean = false;\n\n        /**\n         * Stream that emits whenever the state of the input changes such that the wrapping\n         * `MatFormField` needs to run change detection.\n         */\n        readonly stateChanges = new Subject<void>();\n\n        errorStateMatcher: ErrorStateMatcher;\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this.parentFormGroup || this.parentForm;\n            const matcher = this.errorStateMatcher || this.defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control as FormControl : null;\n            const newState = matcher.isErrorState(control, parent);\n\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n","import { Constructor } from './constructor';\nimport { CanDisable } from './disabled';\n\n\nexport interface HasTabIndex {\n    tabIndex: number;\n}\n\nexport type HasTabIndexCtor = Constructor<HasTabIndex>;\n\n// Mixin to augment a directive with a `tabIndex` property.\nexport function mixinTabIndex<T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0): HasTabIndexCtor & T {\n    return class extends base {\n        get tabIndex(): number {\n            return this.disabled ? -1 : this._tabIndex;\n        }\n\n        set tabIndex(value: number) {\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n\n        private _tabIndex: number = defaultTabIndex;\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n    };\n}\n","import { ElementRef } from '@angular/core';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanColor {\n    color: ThemePalette;\n}\n\n/** @docs-private */\nexport type CanColorCtor = Constructor<CanColor>;\n\nexport interface HasElementRef {\n    _elementRef: ElementRef;\n}\n\nexport enum ThemePalette {\n    Primary = 'primary',\n    Second = 'second',\n    Error = 'error',\n    Default = 'second',\n    Empty = ''\n}\n\n/** Mixin to augment a directive with a `color` property. */\nexport function mixinColor<T extends Constructor<HasElementRef>>(\n    base: T,\n    defaultColor: ThemePalette = ThemePalette.Default\n): CanColorCtor & T {\n    return class extends base {\n\n        private _color: ThemePalette;\n\n        get color(): ThemePalette {\n            return this._color;\n        }\n\n        set color(value: ThemePalette) {\n            const colorPalette = value || defaultColor;\n\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mc-${this._color}`);\n                }\n\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mc-${colorPalette}`);\n                }\n\n                this._color = colorPalette;\n            }\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n\n            this.color = defaultColor;\n        }\n    };\n}\n\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanDisable {\n    disabled: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableCtor = Constructor<CanDisable>;\n\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): CanDisableCtor & T {\n    return class extends base {\n        get disabled() {\n            return this._disabled;\n        }\n\n        set disabled(value: any) {\n            this._disabled = coerceBooleanProperty(value);\n        }\n\n        private _disabled: boolean = false;\n\n        constructor(...args: any[]) {\n            // tslint:disable-next-line\n            super(...args);\n        }\n    };\n}\n","import { BidiModule } from '@angular/cdk/bidi';\nimport { NgModule, InjectionToken, Optional, Inject, isDevMode } from '@angular/core';\n\n\n// Injection token that configures whether the Mosaic sanity checks are enabled.\nexport const MC_SANITY_CHECKS = new InjectionToken<boolean>('mc-sanity-checks', {\n    providedIn: 'root',\n    factory: MC_SANITY_CHECKS_FACTORY\n});\n\nexport function MC_SANITY_CHECKS_FACTORY(): boolean {\n    return true;\n}\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Mosaic\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., McTabsModule).\n */\n@NgModule({\n    imports: [ BidiModule ],\n    exports: [ BidiModule ]\n})\nexport class McCommonModule {\n    // Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n    private _hasDoneGlobalChecks = false;\n\n    // Reference to the global `document` object.\n    private _document = typeof document === 'object' && document ? document : null;\n\n    // Reference to the global 'window' object.\n    private _window = typeof window === 'object' && window ? window : null;\n\n    constructor(@Optional() @Inject(MC_SANITY_CHECKS) private _sanityChecksEnabled: boolean) {\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n\n    // Whether any sanity checks are enabled\n    private _areChecksEnabled(): boolean {\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    }\n\n    // Whether the code is running in tests.\n    private _isTestEnv() {\n        // tslint:disable-next-line\n        return this._window && (this._window['__karma__'] || this._window['jasmine']);\n    }\n\n    private _checkDoctypeIsDefined(): void {\n        if (this._document && !this._document.doctype) {\n            console.warn(\n                'Current document does not have a doctype. This may cause ' +\n                'some Mosaic components not to behave as expected.'\n            );\n        }\n    }\n\n    private _checkThemeIsPresent(): void {\n        if (this._document && typeof getComputedStyle === 'function') {\n            const testElement = this._document.createElement('div');\n\n            testElement.classList.add('mc-theme-loaded-marker');\n            this._document.body.appendChild(testElement);\n\n            const computedStyle = getComputedStyle(testElement);\n\n            // In some situations, the computed style of the test element can be null. For example in\n            // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n            if (computedStyle && computedStyle.display !== 'none') {\n                console.warn(\n                    'Could not find Mosaic core theme. Most Mosaic ' +\n                    'components may not work as expected. For more info refer ' +\n                    'to the theming guide: link there'\n                );\n            }\n\n            this._document.body.removeChild(testElement);\n        }\n    }\n}\n","\nexport function isBoolean(val: any): val is boolean { return typeof val === 'boolean'; }\n\nexport function toBoolean(value: any): boolean {\n    return value != null && `${value}` !== 'false';\n}\n"],"names":["group"],"mappings":"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"}